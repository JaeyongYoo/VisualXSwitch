!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AA	drivers/e1000-4.x/src/e1000_param.c	521;"	d	file:
AA	drivers/e1000-5.x/src/e1000_param.c	682;"	d	file:
AA	drivers/e1000-7.x/src/e1000_param.c	736;"	d	file:
ACKResponder	elements/grid/ackresponder.cc	/^ACKResponder::ACKResponder()$/;"	f	class:ACKResponder
ACKResponder	elements/grid/ackresponder.hh	/^class ACKResponder : public Element {$/;"	c
ACKResponder2	elements/grid/ackresponder2.cc	/^ACKResponder2::ACKResponder2()$/;"	f	class:ACKResponder2
ACKResponder2	elements/grid/ackresponder2.hh	/^class ACKResponder2 : public Element {$/;"	c
ACKRetrySender	elements/grid/ackretrysender.cc	/^ACKRetrySender::ACKRetrySender()$/;"	f	class:ACKRetrySender
ACKRetrySender	elements/grid/ackretrysender.hh	/^class ACKRetrySender : public Element {$/;"	c
ACKRetrySender2	elements/grid/ackretrysender2.cc	/^ACKRetrySender2::ACKRetrySender2()$/;"	f	class:ACKRetrySender2
ACKRetrySender2	elements/grid/ackretrysender2.hh	/^class ACKRetrySender2 : public Element {$/;"	c
ACLOCAL	Makefile	/^ACLOCAL = :$/;"	m
ACLOCAL	etc/libclick/Makefile	/^ACLOCAL = aclocal -I m4$/;"	m
ACTIVE_THUNK	elements/analysis/fromflandump.cc	/^    ACTIVE_THUNK, STOP_THUNK, FILESIZE_THUNK, FILEPOS_THUNK$/;"	e	enum:__anon256	file:
ACT_DROP	elements/analysis/aggregateipflows.hh	/^    enum { ACT_EMIT, ACT_DROP, ACT_NONE };$/;"	e	enum:AggregateIPFlows::__anon252
ACT_EMIT	elements/analysis/aggregateipflows.hh	/^    enum { ACT_EMIT, ACT_DROP, ACT_NONE };$/;"	e	enum:AggregateIPFlows::__anon252
ACT_FIRST_NOW	elements/standard/settimestamp.hh	/^    enum { ACT_NOW, ACT_TIME, ACT_FIRST_NOW, ACT_FIRST_TIME }; \/\/ order matters$/;"	e	enum:SetTimestamp::__anon173
ACT_FIRST_TIME	elements/standard/settimestamp.hh	/^    enum { ACT_NOW, ACT_TIME, ACT_FIRST_NOW, ACT_FIRST_TIME }; \/\/ order matters$/;"	e	enum:SetTimestamp::__anon173
ACT_NONE	elements/analysis/aggregateipflows.hh	/^    enum { ACT_EMIT, ACT_DROP, ACT_NONE };$/;"	e	enum:AggregateIPFlows::__anon252
ACT_NOW	elements/standard/settimestamp.hh	/^    enum { ACT_NOW, ACT_TIME, ACT_FIRST_NOW, ACT_FIRST_TIME }; \/\/ order matters$/;"	e	enum:SetTimestamp::__anon173
ACT_TIME	elements/standard/settimestamp.hh	/^    enum { ACT_NOW, ACT_TIME, ACT_FIRST_NOW, ACT_FIRST_TIME }; \/\/ order matters$/;"	e	enum:SetTimestamp::__anon173
ACT_VALIDATION_OK	elements/local/OpenFlow/lib/dp_act.hh	46;"	d
AC_ACTIVE	elements/analysis/aggcounter.cc	/^    AC_FROZEN, AC_ACTIVE, AC_BANNER, AC_STOP, AC_REAGGREGATE, AC_CLEAR,$/;"	e	enum:__anon277	file:
AC_AGGREGATE_CALL	elements/analysis/aggcounter.cc	/^    AC_AGGREGATE_CALL, AC_COUNT_CALL, AC_NAGG, AC_COUNT$/;"	e	enum:__anon277	file:
AC_BANNER	elements/analysis/aggcounter.cc	/^    AC_FROZEN, AC_ACTIVE, AC_BANNER, AC_STOP, AC_REAGGREGATE, AC_CLEAR,$/;"	e	enum:__anon277	file:
AC_CLEAR	elements/analysis/aggcounter.cc	/^    AC_FROZEN, AC_ACTIVE, AC_BANNER, AC_STOP, AC_REAGGREGATE, AC_CLEAR,$/;"	e	enum:__anon277	file:
AC_COUNT	elements/analysis/aggcounter.cc	/^    AC_AGGREGATE_CALL, AC_COUNT_CALL, AC_NAGG, AC_COUNT$/;"	e	enum:__anon277	file:
AC_COUNT_CALL	elements/analysis/aggcounter.cc	/^    AC_AGGREGATE_CALL, AC_COUNT_CALL, AC_NAGG, AC_COUNT$/;"	e	enum:__anon277	file:
AC_FROZEN	elements/analysis/aggcounter.cc	/^    AC_FROZEN, AC_ACTIVE, AC_BANNER, AC_STOP, AC_REAGGREGATE, AC_CLEAR,$/;"	e	enum:__anon277	file:
AC_NAGG	elements/analysis/aggcounter.cc	/^    AC_AGGREGATE_CALL, AC_COUNT_CALL, AC_NAGG, AC_COUNT$/;"	e	enum:__anon277	file:
AC_REAGGREGATE	elements/analysis/aggcounter.cc	/^    AC_FROZEN, AC_ACTIVE, AC_BANNER, AC_STOP, AC_REAGGREGATE, AC_CLEAR,$/;"	e	enum:__anon277	file:
AC_STOP	elements/analysis/aggcounter.cc	/^    AC_FROZEN, AC_ACTIVE, AC_BANNER, AC_STOP, AC_REAGGREGATE, AC_CLEAR,$/;"	e	enum:__anon277	file:
ADAPTERS_PROC_DIR	drivers/e1000-4.x/src/e1000_proc.c	52;"	d	file:
ADAPTIVE_INTERVAL	elements/aqm/adaptivered.hh	/^    static const int ADAPTIVE_INTERVAL = 500;$/;"	m	class:AdaptiveRED
ADDR_ANNO_SIZE	include/click/packet.hh	/^	ADDR_ANNO_SIZE = addr_anno_size,$/;"	e	enum:Packet::__anon464
ADD_ELEMENT_TYPE	lib/lexer.cc	40;"	d	file:
ADVERTISED_10000baseT_Full	drivers/e1000-7.x/src/kcompat_ethtool.c	62;"	d	file:
ADVERTISED_10000baseT_Full	drivers/e1000-7.x/src/kcompat_ethtool.c	63;"	d	file:
ADVERTISE_1000_FULL	drivers/e1000-4.x/src/e1000_hw.h	1781;"	d
ADVERTISE_1000_FULL	drivers/e1000-5.x/src/e1000_hw.h	2157;"	d
ADVERTISE_1000_FULL	drivers/e1000-7.x/src/e1000_hw.h	3408;"	d
ADVERTISE_1000_HALF	drivers/e1000-4.x/src/e1000_hw.h	1780;"	d
ADVERTISE_1000_HALF	drivers/e1000-5.x/src/e1000_hw.h	2156;"	d
ADVERTISE_1000_HALF	drivers/e1000-7.x/src/e1000_hw.h	3407;"	d
ADVERTISE_100_FULL	drivers/e1000-4.x/src/e1000_hw.h	1779;"	d
ADVERTISE_100_FULL	drivers/e1000-5.x/src/e1000_hw.h	2155;"	d
ADVERTISE_100_FULL	drivers/e1000-7.x/src/e1000_hw.h	3406;"	d
ADVERTISE_100_HALF	drivers/e1000-4.x/src/e1000_hw.h	1778;"	d
ADVERTISE_100_HALF	drivers/e1000-5.x/src/e1000_hw.h	2154;"	d
ADVERTISE_100_HALF	drivers/e1000-7.x/src/e1000_hw.h	3405;"	d
ADVERTISE_10_FULL	drivers/e1000-4.x/src/e1000_hw.h	1777;"	d
ADVERTISE_10_FULL	drivers/e1000-5.x/src/e1000_hw.h	2153;"	d
ADVERTISE_10_FULL	drivers/e1000-7.x/src/e1000_hw.h	3404;"	d
ADVERTISE_10_HALF	drivers/e1000-4.x/src/e1000_hw.h	1776;"	d
ADVERTISE_10_HALF	drivers/e1000-5.x/src/e1000_hw.h	2152;"	d
ADVERTISE_10_HALF	drivers/e1000-7.x/src/e1000_hw.h	3403;"	d
AES_BLOCK_SIZE	elements/ipsec/aes.hh	28;"	d
AES_DECRYPT	elements/ipsec/aes.hh	/^   enum { AES_DECRYPT = 0, AES_ENCRYPT = 1 };$/;"	e	enum:Aes::__anon215
AES_ENCRYPT	elements/ipsec/aes.hh	/^   enum { AES_DECRYPT = 0, AES_ENCRYPT = 1 };$/;"	e	enum:Aes::__anon215
AES_KEY	elements/ipsec/aes.hh	/^typedef struct aes_key_st AES_KEY;$/;"	t	typeref:struct:aes_key_st
AES_MAXNR	elements/ipsec/aes.hh	27;"	d
AES_decrypt	elements/ipsec/aes.cc	/^void Aes::AES_decrypt(const unsigned char *in, unsigned char *out,$/;"	f	class:Aes
AES_encrypt	elements/ipsec/aes.cc	/^void Aes::AES_encrypt(const unsigned char *in, unsigned char *out,$/;"	f	class:Aes
AES_set_decrypt_key	elements/ipsec/aes.cc	/^int Aes::AES_set_decrypt_key(const unsigned char *userKey, const int bits,$/;"	f	class:Aes
AES_set_encrypt_key	elements/ipsec/aes.cc	/^int Aes::AES_set_encrypt_key(const unsigned char *userKey, const int bits,$/;"	f	class:Aes
AGGREGATE_ANNO	include/click/packet_anno.hh	46;"	d
AGGREGATE_ANNO_OFFSET	include/click/packet_anno.hh	44;"	d
AGGREGATE_ANNO_SIZE	include/click/packet_anno.hh	45;"	d
AGNOSTIC	include/click/element.hh	/^    static const char AGNOSTIC[];$/;"	m	class:Element
AGNOSTIC	lib/element.cc	/^const char Element::AGNOSTIC[] = "a";$/;"	m	class:Element	file:
AIROGSTAT	elements/grid/airoinfo.cc	241;"	d	file:
AIROIOCTL	elements/grid/airoinfo.cc	240;"	d	file:
ALIGNCLASS_HH	tools/click-align/alignclass.hh	2;"	d
ALIGNMENT_HH	tools/click-align/alignment.hh	2;"	d
ALIGN_OPT	tools/click-mkmindriver/click-mkmindriver.cc	47;"	d	file:
ALLMASK	tools/lib/etraits.hh	/^	ALLMASK = 0xF, COUNT = 4, MULTITHREAD = COUNT$/;"	e	enum:Driver::__anon526
ALLOW_MMAP	include/click/config-userlevel.h	298;"	d
ALLOW_RECONFIG_OPT	userlevel/click.cc	71;"	d	file:
ALL_OPT	tools/click-mkmindriver/click-mkmindriver.cc	48;"	d	file:
ALL_TARGETS	Makefile	/^ALL_TARGETS = $(DRIVERS) $(OTHER_TARGETS)$/;"	m
ALPHA	apps/clicky/src/ddecor.cc	110;"	d	file:
ANCACHE	elements/grid/airoinfo.cc	33;"	d	file:
ANLLFAIL	elements/grid/airoinfo.cc	32;"	d	file:
ANNOTATIONINFO_OFFSET	include/click/packet_anno.hh	6;"	d
ANNOTATIONINFO_SIZE	include/click/packet_anno.hh	5;"	d
ANS_BD_SUPPORTS	drivers/e1000-4.x/src/ans.h	144;"	d
ANS_PRIVATE_DATA_FIELD	drivers/e1000-4.x/src/ans_driver.h	43;"	d
ANS_XMIT_FULL	drivers/e1000-4.x/src/e1000_main.c	1575;"	d	file:
ANYDEVICE_HH	elements/linuxmodule/anydevice.hh	3;"	d
ANY_ERR	elements/userlevel/controlsocket.hh	/^    enum { READ_CLOSED = 1, WRITE_CLOSED = 2, ANY_ERR = -1 };$/;"	e	enum:ControlSocket::__anon205
APIter	elements/wifi/station/beaconscanner.hh	/^  typedef APTable::const_iterator APIter;$/;"	t	class:BeaconScanner
APTable	elements/wifi/station/beaconscanner.hh	/^  typedef HashMap<EtherAddress, wap> APTable;$/;"	t	class:BeaconScanner
ARCH	drivers/e1000-4.x/src/Makefile	/^ARCH := $(shell uname -m | sed 's\/i.86\/i386\/')$/;"	m
ARCH	drivers/e1000-5.x/src/Makefile	/^ARCH := $(shell uname -m | sed 's\/i.86\/i386\/')$/;"	m
ARCH	drivers/e1000-7.x/src/Makefile	/^ARCH := $(shell uname -m | sed 's\/i.86\/i386\/')$/;"	m
ARCH_IS_BIG_ENDIAN	include/click/config.h	206;"	d
ARCH_IS_BIG_ENDIAN	include/click/config.h	208;"	d
ARPEntry	elements/ethernet/arptable.hh	/^	ARPEntry(IPAddress ip)$/;"	f	struct:ARPTable::ARPEntry
ARPEntry	elements/ethernet/arptable.hh	/^    struct ARPEntry {		\/\/ This structure is now larger than I'd like$/;"	s	class:ARPTable
ARPFaker	elements/ethernet/arpfaker.cc	/^ARPFaker::ARPFaker()$/;"	f	class:ARPFaker
ARPFaker	elements/ethernet/arpfaker.hh	/^class ARPFaker : public Element {$/;"	c
ARPHRD_80211	include/clicknet/ether.h	41;"	d
ARPHRD_ARCNET	include/clicknet/ether.h	37;"	d
ARPHRD_ETHER	include/clicknet/ether.h	35;"	d
ARPHRD_FRELAY	include/clicknet/ether.h	38;"	d
ARPHRD_IEEE1394	include/clicknet/ether.h	40;"	d
ARPHRD_IEEE802	include/clicknet/ether.h	36;"	d
ARPHRD_STRIP	include/clicknet/ether.h	39;"	d
ARPOP_INVREPLY	include/clicknet/ether.h	51;"	d
ARPOP_INVREQUEST	include/clicknet/ether.h	50;"	d
ARPOP_REPLY	include/clicknet/ether.h	47;"	d
ARPOP_REQUEST	include/clicknet/ether.h	46;"	d
ARPOP_REVREPLY	include/clicknet/ether.h	49;"	d
ARPOP_REVREQUEST	include/clicknet/ether.h	48;"	d
ARPPrint	elements/ethernet/arpprint.cc	/^ARPPrint::ARPPrint()$/;"	f	class:ARPPrint
ARPPrint	elements/ethernet/arpprint.hh	/^class ARPPrint : public Element { public:$/;"	c
ARPQuerier	elements/ethernet/arpquerier.cc	/^ARPQuerier::ARPQuerier()$/;"	f	class:ARPQuerier
ARPQuerier	elements/ethernet/arpquerier.hh	/^class ARPQuerier : public Element { public:$/;"	c
ARPQuerierAligner	tools/click-align/alignclass.hh	/^    ARPQuerierAligner() { }$/;"	f	class:ARPQuerierAligner
ARPQuerierAligner	tools/click-align/alignclass.hh	/^class ARPQuerierAligner : public Aligner { public:$/;"	c
ARPResponder	elements/ethernet/arpresponder.cc	/^ARPResponder::ARPResponder()$/;"	f	class:ARPResponder
ARPResponder	elements/ethernet/arpresponder.hh	/^class ARPResponder : public Element { public:$/;"	c
ARPTable	elements/ethernet/arptable.cc	/^ARPTable::ARPTable()$/;"	f	class:ARPTable
ARPTable	elements/ethernet/arptable.hh	/^class ARPTable : public Element { public:$/;"	c
ARP_ETH_HEADER_LEN	elements/local/OpenFlow/lib/packets.hh	268;"	d
ARP_HRD_ETHERNET	elements/local/OpenFlow/lib/packets.hh	263;"	d
ARP_OP_REPLY	elements/local/OpenFlow/lib/packets.hh	266;"	d
ARP_OP_REQUEST	elements/local/OpenFlow/lib/packets.hh	265;"	d
ARP_PRO_IP	elements/local/OpenFlow/lib/packets.hh	264;"	d
ARRAY_SIZE	drivers/e1000-4.x/src/kcompat.h	302;"	d
ARRAY_SIZE	elements/local/OpenFlow/lib/util.hh	71;"	d
AR_CREATE	etc/pkg-bsdmodule.mk	/^AR_CREATE ?= $(CLICKAR_CREATE)  # ?$/;"	m
AR_CREATE	etc/pkg-linuxmodule.mk	/^AR_CREATE ?= $(CLICKAR_CREATE)$/;"	m
AR_CREATE	etc/pkg-userlevel.mk	/^AR_CREATE ?= $(CLICKAR_CREATE)$/;"	m
AR_CREATE	ns/Makefile	/^AR_CREATE = ar cru$/;"	m
AR_CREATE	tools/lib/Makefile	/^AR_CREATE = ar cru$/;"	m
AR_CREATE	userlevel/Makefile	/^AR_CREATE = ar cru$/;"	m
AR_EQ	elements/standard/script.hh	/^	AR_LT, AR_EQ, AR_GT, AR_GE, AR_NE, AR_LE, \/\/ order is important$/;"	e	enum:Script::__anon178
AR_FIRST	elements/standard/script.hh	/^	AR_FIRST, AR_NOT, AR_SPRINTF, ar_random, ar_cat,$/;"	e	enum:Script::__anon178
AR_GE	elements/standard/script.hh	/^	AR_LT, AR_EQ, AR_GT, AR_GE, AR_NE, AR_LE, \/\/ order is important$/;"	e	enum:Script::__anon178
AR_GT	elements/standard/script.hh	/^	AR_LT, AR_EQ, AR_GT, AR_GE, AR_NE, AR_LE, \/\/ order is important$/;"	e	enum:Script::__anon178
AR_LE	elements/standard/script.hh	/^	AR_LT, AR_EQ, AR_GT, AR_GE, AR_NE, AR_LE, \/\/ order is important$/;"	e	enum:Script::__anon178
AR_LT	elements/standard/script.hh	/^	AR_LT, AR_EQ, AR_GT, AR_GE, AR_NE, AR_LE, \/\/ order is important$/;"	e	enum:Script::__anon178
AR_NE	elements/standard/script.hh	/^	AR_LT, AR_EQ, AR_GT, AR_GE, AR_NE, AR_LE, \/\/ order is important$/;"	e	enum:Script::__anon178
AR_NOT	elements/standard/script.hh	/^	AR_FIRST, AR_NOT, AR_SPRINTF, ar_random, ar_cat,$/;"	e	enum:Script::__anon178
AR_SPRINTF	elements/standard/script.hh	/^	AR_FIRST, AR_NOT, AR_SPRINTF, ar_random, ar_cat,$/;"	e	enum:Script::__anon178
ASSERT	drivers/e1000-4.x/src/e1000_osdep.h	63;"	d
ASSERTIONS_OPT	tools/click-align/click-align.cc	303;"	d	file:
ASSERT_4ALIGNED	elements/grid/grid.hh	14;"	d
ATHDESC_HEADER_SIZE	elements/wifi/athdesc.h	4;"	d
AUTOCONF	Makefile	/^AUTOCONF = autoconf$/;"	m
AUTOCONF	etc/libclick/Makefile	/^AUTOCONF = autoconf$/;"	m
AUTONEG_ADVERTISE_10_100_ALL	drivers/e1000-5.x/src/e1000_hw.h	2159;"	d
AUTONEG_ADVERTISE_10_100_ALL	drivers/e1000-7.x/src/e1000_hw.h	3410;"	d
AUTONEG_ADVERTISE_10_ALL	drivers/e1000-5.x/src/e1000_hw.h	2160;"	d
AUTONEG_ADVERTISE_10_ALL	drivers/e1000-7.x/src/e1000_hw.h	3411;"	d
AUTONEG_ADVERTISE_SPEED_DEFAULT	drivers/e1000-4.x/src/e1000_hw.h	1782;"	d
AUTONEG_ADVERTISE_SPEED_DEFAULT	drivers/e1000-5.x/src/e1000_hw.h	2158;"	d
AUTONEG_ADVERTISE_SPEED_DEFAULT	drivers/e1000-7.x/src/e1000_hw.h	3409;"	d
AUTONEG_ADV_DEFAULT	drivers/e1000-4.x/src/e1000_param.c	186;"	d	file:
AUTONEG_ADV_DEFAULT	drivers/e1000-5.x/src/e1000_param.c	202;"	d	file:
AUTONEG_ADV_DEFAULT	drivers/e1000-7.x/src/e1000_param.c	126;"	d	file:
AUTONEG_ADV_MASK	drivers/e1000-4.x/src/e1000_param.c	187;"	d	file:
AUTONEG_ADV_MASK	drivers/e1000-5.x/src/e1000_param.c	203;"	d	file:
AUTONEG_ADV_MASK	drivers/e1000-7.x/src/e1000_param.c	127;"	d	file:
AUTO_ALL_MODES	drivers/e1000-4.x/src/e1000.h	120;"	d
AUTO_ALL_MODES	drivers/e1000-5.x/src/e1000.h	148;"	d
AUTO_ALL_MODES	drivers/e1000-7.x/src/e1000.h	151;"	d
AUTO_POLARITY_DISABLE	drivers/e1000-4.x/src/e1000_hw.h	1673;"	d
AUTO_POLARITY_DISABLE	drivers/e1000-5.x/src/e1000_hw.h	1948;"	d
AUTO_POLARITY_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	2850;"	d
AUTO_READ_DONE_TIMEOUT	drivers/e1000-7.x/src/e1000_hw.h	2500;"	d
Action	elements/grid/gridroutecb.hh	/^  enum Action {$/;"	g	class:GridRouteActionCallback
ActiveNotifier	include/click/notifier.hh	/^class ActiveNotifier : public Notifier { public:$/;"	c
ActiveNotifier	lib/notifier.cc	/^ActiveNotifier::ActiveNotifier(SearchOp op)$/;"	f	class:ActiveNotifier
AdaptiveRED	elements/aqm/adaptivered.cc	/^AdaptiveRED::AdaptiveRED()$/;"	f	class:AdaptiveRED
AdaptiveRED	elements/aqm/adaptivered.hh	/^class AdaptiveRED : public RED { public:$/;"	c
AddrInfo	elements/etherswitch/etherswitch.hh	/^    struct AddrInfo {$/;"	s	class:EtherSwitch
AddrInfo	elements/etherswitch/etherswitch.hh	/^EtherSwitch::AddrInfo::AddrInfo(int p, const Timestamp& s)$/;"	f	class:EtherSwitch::AddrInfo
AddressInfo	elements/standard/addressinfo.cc	/^AddressInfo::AddressInfo()$/;"	f	class:AddressInfo
AddressInfo	include/click/standard/addressinfo.hh	/^class AddressInfo : public Element { public:$/;"	c
AddressTranslator	elements/ip6/addresstranslator.cc	/^AddressTranslator::AddressTranslator()$/;"	f	class:AddressTranslator
AddressTranslator	elements/ip6/addresstranslator.hh	/^class AddressTranslator : public Element {$/;"	c
AdjacencyMatrix	tools/click-xform/adjacency.cc	/^AdjacencyMatrix::AdjacencyMatrix(RouterT *r)$/;"	f	class:AdjacencyMatrix
AdjacencyMatrix	tools/click-xform/adjacency.hh	/^class AdjacencyMatrix {$/;"	c
AdjustTimestamp	elements/analysis/adjusttimestamp.cc	/^AdjustTimestamp::AdjustTimestamp()$/;"	f	class:AdjustTimestamp
AdjustTimestamp	elements/analysis/adjusttimestamp.hh	/^class AdjustTimestamp : public Element { public:$/;"	c
Aes	elements/ipsec/aes.cc	/^Aes::Aes()$/;"	f	class:Aes
Aes	elements/ipsec/aes.cc	/^Aes::Aes(int decrypt)$/;"	f	class:Aes
Aes	elements/ipsec/aes.hh	/^class Aes : public Element {$/;"	c
AgeList	elements/ethernet/arptable.hh	/^    typedef List<ARPEntry, &ARPEntry::_age_link> AgeList;$/;"	t	class:ARPTable
AggregateCounter	elements/analysis/aggcounter.cc	/^AggregateCounter::AggregateCounter()$/;"	f	class:AggregateCounter
AggregateCounter	elements/analysis/aggcounter.hh	/^class AggregateCounter : public Element { public:$/;"	c
AggregateEvent	elements/analysis/aggregatenotifier.hh	/^    enum AggregateEvent { NEW_AGG, DELETE_AGG };$/;"	g	class:AggregateListener
AggregateFilter	elements/analysis/aggregatefilter.cc	/^AggregateFilter::AggregateFilter()$/;"	f	class:AggregateFilter
AggregateFilter	elements/analysis/aggregatefilter.hh	/^class AggregateFilter : public Element { public:$/;"	c
AggregateFirst	elements/analysis/aggregatefirst.cc	/^AggregateFirst::AggregateFirst()$/;"	f	class:AggregateFirst
AggregateFirst	elements/analysis/aggregatefirst.hh	/^class AggregateFirst : public Element, public AggregateListener { public:$/;"	c
AggregateIP	elements/analysis/aggregateip.cc	/^AggregateIP::AggregateIP()$/;"	f	class:AggregateIP
AggregateIP	elements/analysis/aggregateip.hh	/^class AggregateIP : public Element { public:$/;"	c
AggregateIPAddrPair	elements/analysis/aggregateipaddrpair.cc	/^AggregateIPAddrPair::AggregateIPAddrPair()$/;"	f	class:AggregateIPAddrPair
AggregateIPAddrPair	elements/analysis/aggregateipaddrpair.hh	/^class AggregateIPAddrPair : public Element, public AggregateNotifier { public:$/;"	c
AggregateIPFlows	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::AggregateIPFlows()$/;"	f	class:AggregateIPFlows
AggregateIPFlows	elements/analysis/aggregateipflows.hh	/^class AggregateIPFlows : public Element, public AggregateNotifier { public:$/;"	c
AggregateLast	elements/analysis/aggregatelast.cc	/^AggregateLast::AggregateLast()$/;"	f	class:AggregateLast
AggregateLast	elements/analysis/aggregatelast.hh	/^class AggregateLast : public Element, public AggregateListener { public:$/;"	c
AggregateLength	elements/analysis/aggregatelen.cc	/^AggregateLength::AggregateLength()$/;"	f	class:AggregateLength
AggregateLength	elements/analysis/aggregatelen.hh	/^class AggregateLength : public Element { public:$/;"	c
AggregateListener	elements/analysis/aggregatenotifier.hh	/^    AggregateListener()			{ }$/;"	f	class:AggregateListener
AggregateListener	elements/analysis/aggregatenotifier.hh	/^class AggregateListener { public:$/;"	c
AggregateNotifier	elements/analysis/aggregatenotifier.hh	/^    AggregateNotifier()			{ }$/;"	f	class:AggregateNotifier
AggregateNotifier	elements/analysis/aggregatenotifier.hh	/^class AggregateNotifier { public:$/;"	c
AggregatePacketCounter	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::AggregatePacketCounter()$/;"	f	class:AggregatePacketCounter
AggregatePacketCounter	elements/analysis/aggpktcounter.hh	/^class AggregatePacketCounter : public Element { public:$/;"	c
AggregatePaint	elements/analysis/aggregatepaint.cc	/^AggregatePaint::AggregatePaint()$/;"	f	class:AggregatePaint
AggregatePaint	elements/analysis/aggregatepaint.hh	/^class AggregatePaint : public Element { public:$/;"	c
AiroInfo	elements/grid/airoinfo.cc	/^AiroInfo::AiroInfo()$/;"	f	class:AiroInfo
AiroInfo	elements/grid/airoinfo.hh	/^class AiroInfo : public Element {$/;"	c
Algorithm	elements/local/FlowNet/common/Algorithm.hh	/^	Algorithm() {};$/;"	f	class:Algorithm
Algorithm	elements/local/FlowNet/common/Algorithm.hh	/^class Algorithm {$/;"	c
Align	elements/standard/align.cc	/^Align::Align()$/;"	f	class:Align
Align	elements/standard/align.hh	/^class Align : public Element {$/;"	c
AlignAlignClass	tools/click-align/alignclass.cc	/^AlignAlignClass::AlignAlignClass()$/;"	f	class:AlignAlignClass
AlignAlignClass	tools/click-align/alignclass.hh	/^class AlignAlignClass : public AlignClass { public:$/;"	c
AlignClass	tools/click-align/alignclass.cc	/^AlignClass::AlignClass(const String &name)$/;"	f	class:AlignClass
AlignClass	tools/click-align/alignclass.cc	/^AlignClass::AlignClass(const String &name, Aligner *a)$/;"	f	class:AlignClass
AlignClass	tools/click-align/alignclass.hh	/^class AlignClass : public ElementClassT {$/;"	c
Aligner	tools/click-align/alignclass.hh	/^    Aligner()		{ }$/;"	f	class:Aligner
Aligner	tools/click-align/alignclass.hh	/^class Aligner { public:$/;"	c
Alignment	tools/click-align/alignment.cc	/^Alignment::Alignment(ElementT *e)$/;"	f	class:Alignment
Alignment	tools/click-align/alignment.hh	/^    Alignment()$/;"	f	class:Alignment
Alignment	tools/click-align/alignment.hh	/^    Alignment(int m, int o, int)$/;"	f	class:Alignment
Alignment	tools/click-align/alignment.hh	/^    Alignment(int modulus, int offset)$/;"	f	class:Alignment
Alignment	tools/click-align/alignment.hh	/^class Alignment { public:$/;"	c
AlignmentInfo	elements/standard/alignmentinfo.cc	/^AlignmentInfo::AlignmentInfo()$/;"	f	class:AlignmentInfo
AlignmentInfo	include/click/standard/alignmentinfo.hh	/^class AlignmentInfo : public Element { public:$/;"	c
AllAnno	include/click/packet.hh	/^	AllAnno()$/;"	f	struct:Packet::AllAnno
AllAnno	include/click/packet.hh	/^    struct AllAnno {$/;"	s	class:Packet
Amoeba	elements/grid/amoeba.cc	/^Amoeba::Amoeba(int dimensions)$/;"	f	class:Amoeba
Amoeba	elements/grid/amoeba.hh	/^class Amoeba {$/;"	c
AmoebaTest	elements/grid/amoeba.cc	/^AmoebaTest::AmoebaTest() : Amoeba(2)$/;"	f	class:AmoebaTest
AmoebaTest	elements/grid/amoeba.cc	/^class AmoebaTest : public Amoeba {$/;"	c	file:
Anno	include/click/packet.hh	/^    union Anno {$/;"	u	class:Packet
AnnoArg	include/click/args.hh	/^    AnnoArg(int s)$/;"	f	struct:AnnoArg
AnnoArg	include/click/args.hh	/^struct AnnoArg {$/;"	s
AnnotationInfo	elements/standard/annotationinfo.cc	/^AnnotationInfo::AnnotationInfo()$/;"	f	class:AnnotationInfo
AnnotationInfo	elements/standard/annotationinfo.hh	/^class AnnotationInfo : public Element { public:$/;"	c
AnonymizeIPAddr	elements/analysis/anonipaddr.cc	/^AnonymizeIPAddr::AnonymizeIPAddr()$/;"	f	class:AnonymizeIPAddr
AnonymizeIPAddr	elements/analysis/anonipaddr.hh	/^class AnonymizeIPAddr : public Element { public:$/;"	c
AnyArg	include/click/args.hh	/^struct AnyArg {$/;"	s
AnyDevice	elements/bsdmodule/anydevice.cc	/^AnyDevice::AnyDevice()$/;"	f	class:AnyDevice
AnyDevice	elements/bsdmodule/anydevice.hh	/^class AnyDevice : public Element { public:$/;"	c
AnyDevice	elements/linuxmodule/anydevice.cc	/^AnyDevice::AnyDevice()$/;"	f	class:AnyDevice
AnyDevice	elements/linuxmodule/anydevice.hh	/^class AnyDevice : public Element { public:$/;"	c
AnyDeviceMap	elements/bsdmodule/anydevice.hh	/^class AnyDeviceMap { public:$/;"	c
AnyDeviceMap	elements/linuxmodule/anydevice.hh	/^class AnyDeviceMap { public:$/;"	c
AnyTaskDevice	elements/bsdmodule/anydevice.cc	/^AnyTaskDevice::AnyTaskDevice()$/;"	f	class:AnyTaskDevice
AnyTaskDevice	elements/bsdmodule/anydevice.hh	/^class AnyTaskDevice : public AnyDevice { public:$/;"	c
AnyTaskDevice	elements/linuxmodule/anydevice.cc	/^AnyTaskDevice::AnyTaskDevice()$/;"	f	class:AnyTaskDevice
AnyTaskDevice	elements/linuxmodule/anydevice.hh	/^class AnyTaskDevice : public AnyDevice { public:$/;"	c
ArchiveElement	include/click/archive.hh	/^struct ArchiveElement {$/;"	s
ArgContext	include/click/args.hh	/^    ArgContext(ErrorHandler *errh = 0)$/;"	f	struct:ArgContext
ArgContext	include/click/args.hh	/^    ArgContext(const Element *context, ErrorHandler *errh = 0)$/;"	f	struct:ArgContext
ArgContext	include/click/args.hh	/^struct ArgContext {$/;"	s
Args	include/click/args.hh	/^struct Args : public ArgContext {$/;"	s
Args	lib/args.cc	/^Args::Args(ErrorHandler *errh)$/;"	f	class:Args
Args	lib/args.cc	/^Args::Args(const Args &x)$/;"	f	class:Args
Args	lib/args.cc	/^Args::Args(const Element *context, ErrorHandler *errh)$/;"	f	class:Args
Args	lib/args.cc	/^Args::Args(const Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Args
Args	lib/args.cc	/^Args::Args(const Vector<String> &conf,$/;"	f	class:Args
AssociationRequester	elements/wifi/station/associationrequester.cc	/^AssociationRequester::AssociationRequester()$/;"	f	class:AssociationRequester
AssociationRequester	elements/wifi/station/associationrequester.hh	/^class AssociationRequester : public Element { public:$/;"	c
AssociationRequester_read_param	elements/wifi/station/associationrequester.cc	/^AssociationRequester_read_param(Element *e, void *thunk)$/;"	f	file:
AssociationRequester_write_param	elements/wifi/station/associationrequester.cc	/^AssociationRequester_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
AssociationResponder	elements/wifi/ap/associationresponder.cc	/^AssociationResponder::AssociationResponder()$/;"	f	class:AssociationResponder
AssociationResponder	elements/wifi/ap/associationresponder.hh	/^class AssociationResponder : public Element { public:$/;"	c
AssociationResponder_read_param	elements/wifi/ap/associationresponder.cc	/^AssociationResponder_read_param(Element *e, void *thunk)$/;"	f	file:
AssociationResponder_write_param	elements/wifi/ap/associationresponder.cc	/^AssociationResponder_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
AthdescDecap	elements/wifi/athdescdecap.cc	/^AthdescDecap::AthdescDecap()$/;"	f	class:AthdescDecap
AthdescDecap	elements/wifi/athdescdecap.hh	/^class AthdescDecap : public Element { public:$/;"	c
AthdescDecap_read_param	elements/wifi/athdescdecap.cc	/^AthdescDecap_read_param(Element *e, void *thunk)$/;"	f	file:
AthdescDecap_write_param	elements/wifi/athdescdecap.cc	/^AthdescDecap_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
AthdescEncap	elements/wifi/athdescencap.cc	/^AthdescEncap::AthdescEncap()$/;"	f	class:AthdescEncap
AthdescEncap	elements/wifi/athdescencap.hh	/^class AthdescEncap : public Element { public:$/;"	c
AthdescEncap_read_param	elements/wifi/athdescencap.cc	/^AthdescEncap_read_param(Element *e, void *thunk)$/;"	f	file:
AthdescEncap_write_param	elements/wifi/athdescencap.cc	/^AthdescEncap_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
AttrHeader	drivers/e1000-4.x/src/base_comm.h	/^    Per_Frame_Attribute_Header  AttrHeader;$/;"	m	struct:_Untagged_Attribute
AttrHeader	drivers/e1000-4.x/src/base_comm.h	/^    Per_Frame_Attribute_Header  AttrHeader;$/;"	m	struct:_VLAN_ID_Per_Frame_Info
AttributeID	drivers/e1000-4.x/src/base_comm.h	/^    u32               AttributeID;   \/* Indicates which kind of data is contained$/;"	m	struct:_Per_Frame_Attribute_Header
AttributeLength	drivers/e1000-4.x/src/base_comm.h	/^    u32               AttributeLength; \/* Length of this attribute *\/$/;"	m	struct:_Per_Frame_Attribute_Header
Authentication_key	elements/ipsec/sadatatuple.hh	/^    uint8_t Authentication_key[KEY_SIZE];\/\/The Authentication key$/;"	m	class:SADataTuple
AutoRateFallback	elements/wifi/autoratefallback.cc	/^AutoRateFallback::AutoRateFallback()$/;"	f	class:AutoRateFallback
AutoRateFallback	elements/wifi/autoratefallback.hh	/^class AutoRateFallback : public Element { public:$/;"	c
AutoRateFallback_read_param	elements/wifi/autoratefallback.cc	/^AutoRateFallback_read_param(Element *e, void *thunk)$/;"	f	file:
AutoRateFallback_write_param	elements/wifi/autoratefallback.cc	/^AutoRateFallback_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
AvailableRates	elements/wifi/availablerates.cc	/^AvailableRates::AvailableRates()$/;"	f	class:AvailableRates
AvailableRates	elements/wifi/availablerates.hh	/^class AvailableRates : public Element { public:$/;"	c
AvailableRates_read_param	elements/wifi/availablerates.cc	/^AvailableRates_read_param(Element *e, void *thunk)$/;"	f	file:
AvailableRates_write_param	elements/wifi/availablerates.cc	/^AvailableRates_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
AverageCounter	elements/standard/averagecounter.cc	/^AverageCounter::AverageCounter()$/;"	f	class:AverageCounter
AverageCounter	elements/standard/averagecounter.hh	/^class AverageCounter : public Element { public:$/;"	c
B8B10	elements/radio/b8b10.cc	/^B8B10::B8B10()$/;"	f	class:B8B10
B8B10	elements/radio/b8b10.hh	/^class B8B10 : public Element {$/;"	c
BACKPRESSURE_QUANTIZATION_STEP	elements/local/FlowNet/common/FlowNetGod.hh	109;"	d
BACKPRESSURE_QUANTIZATION_STEP	elements/local/FlowNet/scheduler/sched_algorithms/SchedBackpressure.hh	11;"	d
BACKPRESSURE_QUANTIZATION_STEP	elements/local/FlowNet/scheduler/sched_algorithms/SchedHorizon.hh	11;"	d
BACKPRESSURE_QUANTIZATION_STEP	elements/local/FlowNet/scheduler/sched_algorithms/SchedLogWeight.hh	11;"	d
BACKPRESSURE_QUANTIZATION_STEP	elements/local/FlowNet/scheduler/sched_algorithms/SchedNoSchedule.hh	11;"	d
BACKPRESSURE_QUANTIZATION_STEP	elements/local/FlowNet/scheduler/sched_algorithms/SchedWBS.hh	11;"	d
BAD	elements/analysis/ipsumdumpinfo.cc	355;"	d	file:
BAD	elements/analysis/ipsumdumpinfo.cc	404;"	d	file:
BAD2	elements/analysis/ipsumdumpinfo.cc	356;"	d	file:
BAD2	elements/analysis/ipsumdumpinfo.cc	405;"	d	file:
BAD_CHECKSUM	elements/icmp/checkicmpheader.hh	/^    BAD_CHECKSUM,$/;"	e	enum:CheckICMPHeader::Reason
BAD_CHECKSUM	elements/ip/checkipheader.hh	/^    BAD_CHECKSUM,$/;"	e	enum:CheckIPHeader::Reason
BAD_CHECKSUM	elements/tcpudp/checktcpheader.hh	/^    BAD_CHECKSUM,$/;"	e	enum:CheckTCPHeader::Reason
BAD_CHECKSUM	elements/tcpudp/checkudpheader.hh	/^    BAD_CHECKSUM,$/;"	e	enum:CheckUDPHeader::Reason
BAD_HLEN	elements/ip/checkipheader.hh	/^    BAD_HLEN,$/;"	e	enum:CheckIPHeader::Reason
BAD_HRD	elements/ethernet/checkarpheader.hh	/^    BAD_HRD,$/;"	e	enum:CheckARPHeader::Reason
BAD_IP_LEN	elements/ip/checkipheader.hh	/^    BAD_IP_LEN,$/;"	e	enum:CheckIPHeader::Reason
BAD_LENGTH	elements/ethernet/checkarpheader.hh	/^    BAD_LENGTH,$/;"	e	enum:CheckARPHeader::Reason
BAD_LENGTH	elements/icmp/checkicmpheader.hh	/^    BAD_LENGTH,$/;"	e	enum:CheckICMPHeader::Reason
BAD_LENGTH	elements/tcpudp/checktcpheader.hh	/^    BAD_LENGTH,$/;"	e	enum:CheckTCPHeader::Reason
BAD_LENGTH	elements/tcpudp/checkudpheader.hh	/^    BAD_LENGTH,$/;"	e	enum:CheckUDPHeader::Reason
BAD_PRO	elements/ethernet/checkarpheader.hh	/^    BAD_PRO,$/;"	e	enum:CheckARPHeader::Reason
BAD_SADDR	elements/ip/checkipheader.hh	/^    BAD_SADDR,$/;"	e	enum:CheckIPHeader::Reason
BAD_VERSION	elements/ip/checkipheader.hh	/^    BAD_VERSION,$/;"	e	enum:CheckIPHeader::Reason
BAR_0	drivers/e1000-4.x/src/e1000.h	76;"	d
BAR_0	drivers/e1000-5.x/src/e1000.h	80;"	d
BAR_0	drivers/e1000-7.x/src/e1000.h	83;"	d
BAR_1	drivers/e1000-4.x/src/e1000.h	77;"	d
BAR_1	drivers/e1000-5.x/src/e1000.h	81;"	d
BAR_1	drivers/e1000-7.x/src/e1000.h	84;"	d
BAR_5	drivers/e1000-4.x/src/e1000.h	78;"	d
BAR_5	drivers/e1000-5.x/src/e1000.h	82;"	d
BAR_5	drivers/e1000-7.x/src/e1000.h	85;"	d
BASE_DUMP_INTERVAL	elements/local/FlowNet/common/FlowNetGod.hh	34;"	d
BASE_TIMER_CLOCK	elements/local/FlowNet/common/FlowCommon.hh	55;"	d
BASE_TIMER_INTERVAL	elements/local/OpenFlow/datapath.hh	211;"	d
BCAST_1	elements/grid/linktester.hh	/^    BCAST_1,$/;"	e	enum:LinkTester::state_t
BCAST_2	elements/grid/linktester.hh	/^    BCAST_2,$/;"	e	enum:LinkTester::state_t
BDAllAvailableRouting	drivers/e1000-4.x/src/base_comm.h	/^    u32 BDAllAvailableRouting;               \/* Bitmask of all available Rx\/Event$/;"	m	struct:_IANS_BD_PARAM_EXT_CAP
BDAllAvailableSpeeds	drivers/e1000-4.x/src/base_comm.h	/^    u32     BDAllAvailableSpeeds; \/* A bit mask of all available speeds *\/$/;"	m	struct:_IANS_BD_PARAM_EXT_CAP
BDCanSetMacAddress	drivers/e1000-4.x/src/base_comm.h	/^    u32 BDCanSetMacAddress;    \/* MAC Address setting - cast from $/;"	m	struct:_IANS_BD_PARAM_EXT_CAP
BDCommVersion	drivers/e1000-4.x/src/base_comm.h	/^    u32     BDCommVersion;    \/* Base driver supported comm. version *\/$/;"	m	struct:_IANS_BD_PARAM_IDENTIFY
BDFlags	drivers/e1000-4.x/src/base_comm.h	/^    u32     BDFlags;    \/* The adapter's flags *\/$/;"	m	struct:_IANS_BD_PARAM_EXT_CAP
BDIansAttributedMode	drivers/e1000-4.x/src/base_comm.h	/^    u32 BDIansAttributedMode; \/* Ask the base driver to send and receive$/;"	m	struct:_IANS_BD_PARAM_EXT_SET_MODE
BDIansRoutingMode	drivers/e1000-4.x/src/base_comm.h	/^    u32 BDIansRoutingMode;    \/* Bitmask of one Rx and one IANS_BD_ROUTING *\/$/;"	m	struct:_IANS_BD_PARAM_EXT_SET_MODE
BDIansStatusReport	drivers/e1000-4.x/src/base_comm.h	/^    u32 BDIansStatusReport;   \/* Ask the base driver to report status through $/;"	m	struct:_IANS_BD_PARAM_EXT_SET_MODE
BDIansStatusVersion	drivers/e1000-4.x/src/base_comm.h	/^    u32 BDIansStatusVersion;    \/* Status indication with iANS struct $/;"	m	struct:_IANS_BD_PARAM_EXT_CAP
BDSignature	drivers/e1000-4.x/src/base_comm.h	/^    u8      BDSignature[IANS_SIGNATURE_LENGTH];   $/;"	m	struct:_IANS_BD_PARAM_IDENTIFY
BD_ANS_1000_MBPS	drivers/e1000-4.x/src/ans_os.h	109;"	d
BD_ANS_100_MBPS	drivers/e1000-4.x/src/ans_os.h	108;"	d
BD_ANS_10_MBPS	drivers/e1000-4.x/src/ans_os.h	107;"	d
BD_ANS_BCMP	drivers/e1000-4.x/src/ans.c	/^BD_ANS_BOOLEAN BD_ANS_BCMP(u8 *s1, u8 *s2, u32 length)$/;"	f
BD_ANS_BCOPY	drivers/e1000-4.x/src/ans.c	/^void BD_ANS_BCOPY(u8 *destination, u8 *source, u32 length)$/;"	f
BD_ANS_BOOLEAN	drivers/e1000-4.x/src/ans.h	/^typedef enum { BD_ANS_FALSE, BD_ANS_TRUE } BD_ANS_BOOLEAN;$/;"	t	typeref:enum:__anon37
BD_ANS_BZERO	drivers/e1000-4.x/src/ans.c	/^void BD_ANS_BZERO(u8 *s, u32 length)$/;"	f
BD_ANS_DRV_IEEE_TAG_SUPPORT	drivers/e1000-4.x/src/ans_driver.h	51;"	d
BD_ANS_DRV_LOCK	drivers/e1000-4.x/src/ans_os.h	122;"	d
BD_ANS_DRV_MAX_VLAN_ID	drivers/e1000-4.x/src/ans_driver.h	49;"	d
BD_ANS_DRV_MAX_VLAN_TABLE_SIZE	drivers/e1000-4.x/src/ans_driver.h	50;"	d
BD_ANS_DRV_PHY_ID	drivers/e1000-4.x/src/ans_driver.h	62;"	d
BD_ANS_DRV_REV_ID	drivers/e1000-4.x/src/ans_driver.h	63;"	d
BD_ANS_DRV_STATUS_SUPPORT_FLAGS	drivers/e1000-4.x/src/ans_driver.h	48;"	d
BD_ANS_DRV_SUBSYS_ID	drivers/e1000-4.x/src/ans_driver.h	64;"	d
BD_ANS_DRV_UNLOCK	drivers/e1000-4.x/src/ans_os.h	123;"	d
BD_ANS_DRV_VLAN_FILTER_SUPPORT	drivers/e1000-4.x/src/ans_driver.h	56;"	d
BD_ANS_DRV_VLAN_OFFLOAD_SUPPORT	drivers/e1000-4.x/src/ans_driver.h	57;"	d
BD_ANS_DRV_VLAN_SUPPORT	drivers/e1000-4.x/src/ans_driver.h	54;"	d
BD_ANS_DUPLEX_FULL	drivers/e1000-4.x/src/ans_os.h	112;"	d
BD_ANS_DUPLEX_HALF	drivers/e1000-4.x/src/ans_os.h	113;"	d
BD_ANS_DUPLEX_STATUS_SUPPORTED	drivers/e1000-4.x/src/ans.h	57;"	d
BD_ANS_FAILURE	drivers/e1000-4.x/src/ans.h	/^typedef enum  { BD_ANS_SUCCESS, BD_ANS_FAILURE } BD_ANS_STATUS;$/;"	e	enum:__anon36
BD_ANS_FALSE	drivers/e1000-4.x/src/ans.h	/^typedef enum { BD_ANS_FALSE, BD_ANS_TRUE } BD_ANS_BOOLEAN;$/;"	e	enum:__anon37
BD_ANS_HW_AVAILABLE_SPEEDS	drivers/e1000-4.x/src/ans_hw.h	33;"	d
BD_ANS_HW_FAIL_STATUS_SUPPORTED	drivers/e1000-4.x/src/ans.h	58;"	d
BD_ANS_HW_FLAGS	drivers/e1000-4.x/src/ans_driver.h	46;"	d
BD_ANS_INFO_SIZE	drivers/e1000-4.x/src/ans_os.h	129;"	d
BD_ANS_INFO_SIZE	drivers/e1000-4.x/src/ans_os.h	133;"	d
BD_ANS_LINK_STATUS_SUPPORTED	drivers/e1000-4.x/src/ans.h	55;"	d
BD_ANS_OS_CAN_ROUTE_EVENT	drivers/e1000-4.x/src/ans_os.h	119;"	d
BD_ANS_OS_CAN_ROUTE_RX	drivers/e1000-4.x/src/ans_os.h	118;"	d
BD_ANS_OS_MAC_ADDR_SUPPORT	drivers/e1000-4.x/src/ans_os.h	117;"	d
BD_ANS_OS_STOP_PROM_SUPPORT	drivers/e1000-4.x/src/ans_os.h	116;"	d
BD_ANS_RESET_STATUS_SUPPORTED	drivers/e1000-4.x/src/ans.h	60;"	d
BD_ANS_SPEED_STATUS_SUPPORTED	drivers/e1000-4.x/src/ans.h	56;"	d
BD_ANS_STATUS	drivers/e1000-4.x/src/ans.h	/^typedef enum  { BD_ANS_SUCCESS, BD_ANS_FAILURE } BD_ANS_STATUS;$/;"	t	typeref:enum:__anon36
BD_ANS_SUCCESS	drivers/e1000-4.x/src/ans.h	/^typedef enum  { BD_ANS_SUCCESS, BD_ANS_FAILURE } BD_ANS_STATUS;$/;"	e	enum:__anon36
BD_ANS_SUSPEND_STATUS_SUPPORTED	drivers/e1000-4.x/src/ans.h	59;"	d
BD_ANS_TRUE	drivers/e1000-4.x/src/ans.h	/^typedef enum { BD_ANS_FALSE, BD_ANS_TRUE } BD_ANS_BOOLEAN;$/;"	e	enum:__anon37
BEGIN_EXPIRE_CODE	elements/grid/gridlogger.hh	/^  static const unsigned char BEGIN_EXPIRE_CODE          = 0x04;$/;"	m	class:GridLogger
BEGIN_RECV_CODE	elements/grid/gridlogger.hh	/^  static const unsigned char BEGIN_RECV_CODE            = 0x02;$/;"	m	class:GridLogger
BETTER_RTE	elements/grid/gridgenericlogger.hh	/^    BETTER_RTE        = 0xe2,$/;"	e	enum:GridGenericLogger::reason_t
BETTER_RTE_SENDER	elements/grid/gridgenericlogger.hh	/^    BETTER_RTE_SENDER = 0xe3,$/;"	e	enum:GridGenericLogger::reason_t
BIBTEX	etc/diagrams/Makefile	/^BIBTEX	= bibtex$/;"	m
BIGHASHMAP_REARRANGE_ON_FIND	include/click/hashmap.cc	27;"	d	file:
BIM	elements/radio/bim.cc	/^BIM::BIM()$/;"	f	class:BIM
BIM	elements/radio/bim.hh	/^class BIM : public Element {$/;"	c
BIM_ESC	elements/radio/bim-proto.hh	1;"	d
BIM_ESC_END	elements/radio/bim-proto.hh	4;"	d
BIM_ESC_ESC	elements/radio/bim-proto.hh	2;"	d
BIM_ESC_START	elements/radio/bim-proto.hh	3;"	d
BITFIELD	elements/ip/ipfieldinfo.cc	30;"	d	file:
BLKS	elements/ipsec/esp.hh	/^  enum { BLKS = 8 };$/;"	e	enum:IPsecESPEncap::__anon219
BLOCK	elements/etherswitch/spantree.hh	/^  enum PortState {BLOCK, LISTEN, LEARN, FORWARD};$/;"	e	enum:EtherSpanTree::PortState
BNECKMETRIC_HH	elements/grid/bottleneckmetric.hh	2;"	d
BOARD_PRIVATE_STRUCT	drivers/e1000-4.x/src/ans_driver.h	34;"	d
BODY_00_15	elements/ipsec/sha1_impl.cc	208;"	d	file:
BODY_16_19	elements/ipsec/sha1_impl.cc	212;"	d	file:
BODY_20_31	elements/ipsec/sha1_impl.cc	217;"	d	file:
BODY_32_39	elements/ipsec/sha1_impl.cc	222;"	d	file:
BODY_40_59	elements/ipsec/sha1_impl.cc	227;"	d	file:
BODY_60_79	elements/ipsec/sha1_impl.cc	232;"	d	file:
BORING_PKT_CODE	elements/grid/gridlogger.hh	/^  static const unsigned char BORING_PKT_CODE            = 0x0E;$/;"	m	class:GridLogger
BPADAPT_MAGIC_HEADER	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	116;"	d
BP_queue_threshold	elements/local/FlowNet/common/FlowNetGod.hh	/^        int BP_queue_threshold;$/;"	m	struct:paramset_flowtable
BROADCAST	include/click/packet.hh	/^	BROADCAST = 1,		\/**< Packet was sent to a link-level multicast$/;"	e	enum:Packet::PacketType
BROKEN_AD	elements/grid/gridgenericlogger.hh	/^    BROKEN_AD         = 0xf3,$/;"	e	enum:GridGenericLogger::reason_t
BSDMODULE	tools/lib/etraits.hh	/^	USERLEVEL = 0, LINUXMODULE = 1, BSDMODULE = 2, NSMODULE = 3,$/;"	e	enum:Driver::__anon526
BSDMODULE_OBJS	bsdmodule/Makefile	/^BSDMODULE_OBJS = config.o sched.o module.o module_c.o \\$/;"	m
BSDMODULE_OPT	tools/click-align/click-align.cc	308;"	d	file:
BSDMODULE_OPT	tools/click-check/click-check.cc	52;"	d	file:
BSDMODULE_OPT	tools/click-pretty/click-pretty.cc	56;"	d	file:
BSDMODULE_OPT	tools/click2xml/click2xml.cc	45;"	d	file:
BSDModuleLexerExtra	bsdmodule/config.cc	/^    BSDModuleLexerExtra() { }$/;"	f	class:BSDModuleLexerExtra
BSDModuleLexerExtra	bsdmodule/config.cc	/^class BSDModuleLexerExtra : public LexerExtra { public:$/;"	c	file:
BSD_NETISRSCHED	include/click/config-bsdmodule.h	32;"	d
BSD_TAP	elements/userlevel/kerneltun.hh	/^    enum Type { LINUX_UNIVERSAL, LINUX_ETHERTAP, BSD_TUN, BSD_TAP, OSX_TUN,$/;"	e	enum:KernelTun::Type
BSD_TUN	elements/userlevel/kerneltun.hh	/^    enum Type { LINUX_UNIVERSAL, LINUX_ETHERTAP, BSD_TUN, BSD_TAP, OSX_TUN,$/;"	e	enum:KernelTun::Type
BUFFER_SIZE	elements/analysis/fromdagdump.hh	/^    static const uint32_t BUFFER_SIZE = 32768;$/;"	m	class:FromDAGDump
BUFFER_SIZE	elements/analysis/fromflandump.hh	/^	enum { BUFFER_SIZE = 65536 };$/;"	e	enum:FromFlanDump::FlanFile::__anon293
BUFFER_SIZE	elements/analysis/fromflandump.hh	/^    static const uint32_t BUFFER_SIZE = 32768;$/;"	m	class:FromFlanDump
BUFFER_SIZE	elements/analysis/fromnlanrdump.hh	/^    static const uint32_t BUFFER_SIZE = 32768;$/;"	m	class:FromNLANRDump
BUFFER_SIZE	elements/local/OpenFlow/lib/socket-util.cc	191;"	d	file:
BUFFER_SIZE	elements/userlevel/fromdump.hh	/^    enum { BUFFER_SIZE = 32768, SAMPLING_SHIFT = 28 };$/;"	e	enum:FromDump::__anon210
BUFFER_SIZE	include/click/fromfile.hh	/^    enum { BUFFER_SIZE = 32768 };$/;"	e	enum:FromFile::__anon451
BUG	drivers/e1000-4.x/src/kcompat.h	285;"	d
BUILDNR	elements/local/OpenFlow/include/config.h	55;"	d
BUILDOBJS	tools/lib/Makefile	/^BUILDOBJS = $(patsubst %.o,%.bo,$(OBJS))$/;"	m
BUILD_AR_CREATE	tools/lib/Makefile	/^BUILD_AR_CREATE =  cru$/;"	m
BUILD_ASSERT	elements/local/OpenFlow/lib/util.hh	57;"	d
BUILD_ASSERT_DECL	elements/local/OpenFlow/lib/util.hh	61;"	d
BUILD_CC	tools/lib/Makefile	/^BUILD_CC = $/;"	m
BUILD_COMPILE	tools/lib/Makefile	/^BUILD_COMPILE = $(BUILD_CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(DEPCFLAGS)$/;"	m
BUILD_CXX	tools/lib/Makefile	/^BUILD_CXX = $/;"	m
BUILD_CXXCOMPILE	tools/lib/Makefile	/^BUILD_CXXCOMPILE = $(BUILD_CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(DEPCFLAGS)$/;"	m
BUILD_KERNEL	drivers/e1000-5.x/src/Makefile	/^BUILD_KERNEL=$(shell uname -r)$/;"	m
BUILD_KERNEL	drivers/e1000-7.x/src/Makefile	/^BUILD_KERNEL=$(shell uname -r)$/;"	m
BUILD_RANLIB	tools/lib/Makefile	/^BUILD_RANLIB = $/;"	m
BUS_LOCK_CLOCKS	include/click/perfctr-i586.hh	23;"	d
BUS_TRAN_INVAL	include/click/perfctr-i586.hh	25;"	d
BUS_TRAN_MEM	include/click/perfctr-i586.hh	26;"	d
BUS_TRAN_RFO	include/click/perfctr-i586.hh	24;"	d
BUTTON	include/click/handler.hh	/^	BUTTON = h_button,$/;"	e	enum:Handler::DeprecatedFlags
BVCM_QUEUE_AND_LINK	elements/local/FlowNet/common/FlowNetGod.hh	106;"	d
BVCM_QUEUE_ONLY	elements/local/FlowNet/common/FlowNetGod.hh	105;"	d
BVCM_SUPPLEMENTARY_PRESSURE	elements/local/FlowNet/common/FlowNetGod.hh	107;"	d
BWShapeInfo	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^struct BWShapeInfo {$/;"	s
BYTES	elements/ip/ipfieldinfo.hh	/^	BYTES = 0x00080000,$/;"	e	enum:IPField::__anon343
BYTE_ORDER	lib/md5.cc	60;"	d	file:
BYTE_ORDER	lib/md5.cc	62;"	d	file:
BYTE_ORDER	lib/md5.cc	64;"	d	file:
BYTE_SWAP_WORD	drivers/e1000-4.x/src/ans_driver.h	68;"	d
B_0	elements/analysis/ipsumdumpinfo.hh	/^    B_0 = 0,$/;"	e	enum:IPSummaryDump::__anon261
B_1	elements/analysis/ipsumdumpinfo.hh	/^    B_1 = 1,$/;"	e	enum:IPSummaryDump::__anon261
B_16	elements/analysis/ipsumdumpinfo.hh	/^    B_16 = 16,$/;"	e	enum:IPSummaryDump::__anon261
B_2	elements/analysis/ipsumdumpinfo.hh	/^    B_2 = 2,$/;"	e	enum:IPSummaryDump::__anon261
B_4	elements/analysis/ipsumdumpinfo.hh	/^    B_4 = 4,$/;"	e	enum:IPSummaryDump::__anon261
B_4NET	elements/analysis/ipsumdumpinfo.hh	/^    B_4NET = 4 + 256,$/;"	e	enum:IPSummaryDump::__anon261
B_6PTR	elements/analysis/ipsumdumpinfo.hh	/^    B_6PTR = 6,$/;"	e	enum:IPSummaryDump::__anon261
B_8	elements/analysis/ipsumdumpinfo.hh	/^    B_8 = 8,$/;"	e	enum:IPSummaryDump::__anon261
B_NOTALLOWED	elements/analysis/ipsumdumpinfo.hh	/^    B_NOTALLOWED = -1$/;"	e	enum:IPSummaryDump::__anon261
B_SPECIAL	elements/analysis/ipsumdumpinfo.hh	/^    B_SPECIAL = 4 + 512,$/;"	e	enum:IPSummaryDump::__anon261
BadPacket	elements/grid/gridroutecb.hh	/^    BadPacket          = 7$/;"	e	enum:GridRouteActionCallback::DropReason
BailErrorHandler	include/click/error.hh	/^class BailErrorHandler : public ErrorVeneer { public:$/;"	c
BailErrorHandler	lib/error.cc	/^BailErrorHandler::BailErrorHandler(ErrorHandler *errh, int l)$/;"	f	class:BailErrorHandler
BalancedThreadSched	elements/threads/balancedthreadsched.cc	/^BalancedThreadSched::BalancedThreadSched()$/;"	f	class:BalancedThreadSched
BalancedThreadSched	elements/threads/balancedthreadsched.hh	/^class BalancedThreadSched : public Element { public:$/;"	c
BandwidthArg	include/click/args.hh	/^struct BandwidthArg : public NumArg {$/;"	s
BandwidthMeter	elements/standard/bandwidthmeter.cc	/^BandwidthMeter::BandwidthMeter()$/;"	f	class:BandwidthMeter
BandwidthMeter	elements/standard/bandwidthmeter.hh	/^class BandwidthMeter : public Element { protected:$/;"	c
BandwidthRatedSplitter	elements/standard/bwratedsplitter.cc	/^BandwidthRatedSplitter::BandwidthRatedSplitter()$/;"	f	class:BandwidthRatedSplitter
BandwidthRatedSplitter	elements/standard/bwratedsplitter.hh	/^class BandwidthRatedSplitter : public RatedSplitter { public:$/;"	c
BandwidthRatedUnqueue	elements/standard/bwratedunqueue.cc	/^BandwidthRatedUnqueue::BandwidthRatedUnqueue()$/;"	f	class:BandwidthRatedUnqueue
BandwidthRatedUnqueue	elements/standard/bwratedunqueue.hh	/^class BandwidthRatedUnqueue : public RatedUnqueue { public:$/;"	c
BandwidthShaper	elements/standard/bandwidthshaper.cc	/^BandwidthShaper::BandwidthShaper()$/;"	f	class:BandwidthShaper
BandwidthShaper	elements/standard/bandwidthshaper.hh	/^class BandwidthShaper : public Shaper { public:$/;"	c
Base	elements/grid/qvec.hh	/^  typedef Vector<T> Base;$/;"	t	class:QVec
Base	include/click/vector.hh	/^    typedef Vector<void*> Base;$/;"	t	class:Vector
BeaconScanner	elements/wifi/station/beaconscanner.cc	/^BeaconScanner::BeaconScanner()$/;"	f	class:BeaconScanner
BeaconScanner	elements/wifi/station/beaconscanner.hh	/^class BeaconScanner : public Element { public:$/;"	c
BeaconScanner_read_param	elements/wifi/station/beaconscanner.cc	/^BeaconScanner_read_param(Element *e, void *thunk)$/;"	f	file:
BeaconScanner_write_param	elements/wifi/station/beaconscanner.cc	/^BeaconScanner_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
BeaconSource	elements/wifi/ap/beaconsource.cc	/^BeaconSource::BeaconSource()$/;"	f	class:BeaconSource
BeaconSource	elements/wifi/ap/beaconsource.hh	/^class BeaconSource : public Element { public:$/;"	c
BeaconSource_read_param	elements/wifi/ap/beaconsource.cc	/^BeaconSource_read_param(Element *e, void *thunk)$/;"	f	file:
BeaconSource_write_param	elements/wifi/ap/beaconsource.cc	/^BeaconSource_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
BeaconTracker	elements/wifi/station/beacontracker.cc	/^BeaconTracker::BeaconTracker()$/;"	f	class:BeaconTracker
BeaconTracker	elements/wifi/station/beacontracker.hh	/^class BeaconTracker : public Element { public:$/;"	c
BigHashMapTest	elements/test/bhmtest.cc	/^BigHashMapTest::BigHashMapTest()$/;"	f	class:BigHashMapTest
BigHashMapTest	elements/test/bhmtest.hh	/^class BigHashMapTest : public Element { public:$/;"	c
Bigint	include/click/bigint.hh	/^class Bigint { public:$/;"	c
BigintTest	elements/test/biginttest.cc	/^BigintTest::BigintTest()$/;"	f	class:BigintTest
BigintTest	elements/test/biginttest.hh	/^class BigintTest : public Element { public:$/;"	c
Bit	include/click/bitvector.hh	/^    Bit(Bitvector::data_word_type &w, int bit_offset)$/;"	f	class:Bitvector::Bit
Bit	include/click/bitvector.hh	/^class Bitvector::Bit { public:$/;"	c	class:Bitvector
Bitvector	include/click/bitvector.hh	/^    Bitvector()$/;"	f	class:Bitvector
Bitvector	include/click/bitvector.hh	/^    explicit Bitvector(bool bit)$/;"	f	class:Bitvector
Bitvector	include/click/bitvector.hh	/^Bitvector::Bitvector(const Bitvector &o)$/;"	f	class:Bitvector
Bitvector	include/click/bitvector.hh	/^Bitvector::Bitvector(int n)$/;"	f	class:Bitvector
Bitvector	include/click/bitvector.hh	/^Bitvector::Bitvector(int n, bool b)$/;"	f	class:Bitvector
Bitvector	include/click/bitvector.hh	/^class Bitvector { public:$/;"	c
Blacklist	elements/grid/dsrroutetable.hh	/^  typedef HashMap<IPAddress, BlacklistEntry> Blacklist;$/;"	t	class:DSRRouteTable
BlacklistEntry	elements/grid/dsrroutetable.hh	/^  class BlacklistEntry {$/;"	c	class:DSRRouteTable
BlacklistIter	elements/grid/dsrroutetable.hh	/^  typedef Blacklist::iterator BlacklistIter;$/;"	t	class:DSRRouteTable
Block	elements/standard/block.cc	/^Block::Block()$/;"	f	class:Block
Block	elements/standard/block.hh	/^class Block : public Element {$/;"	c
BlockThread	elements/test/blockthread.cc	/^BlockThread::BlockThread()$/;"	f	class:BlockThread
BlockThread	elements/test/blockthread.hh	/^class BlockThread : public Element { public:$/;"	c
BoolArg	include/click/args.hh	/^struct BoolArg {$/;"	s
BottleneckMetric	elements/grid/bottleneckmetric.cc	/^BottleneckMetric::BottleneckMetric()$/;"	f	class:BottleneckMetric
BottleneckMetric	elements/grid/bottleneckmetric.hh	/^class BottleneckMetric : public GridGenericMetric {$/;"	c
BoundedIntArg	include/click/args.hh	/^    BoundedIntArg(int min_value, int max_value, int b = 0)$/;"	f	struct:BoundedIntArg
BoundedIntArg	include/click/args.hh	/^struct BoundedIntArg : public IntArg {$/;"	s
BridgeMessage	elements/etherswitch/bridgemessage.hh	/^  BridgeMessage()			{ expire (); }$/;"	f	class:BridgeMessage
BridgeMessage	elements/etherswitch/bridgemessage.hh	/^  BridgeMessage(const wire* msg)	{ from_wire(msg); }$/;"	f	class:BridgeMessage
BridgeMessage	elements/etherswitch/bridgemessage.hh	/^class BridgeMessage {$/;"	c
BufferedPacket	elements/grid/dsrroutetable.hh	/^    BufferedPacket(Packet *p) {$/;"	f	class:DSRRouteTable::BufferedPacket
BufferedPacket	elements/grid/dsrroutetable.hh	/^  class BufferedPacket$/;"	c	class:DSRRouteTable
Burster	elements/standard/burster.cc	/^Burster::Burster()$/;"	f	class:Burster
Burster	elements/standard/burster.hh	/^class Burster : public TimedUnqueue { public:$/;"	c
BytesSlot	include/click/args.hh	/^	BytesSlot(void *ptr, size_t size)$/;"	f	struct:Args::BytesSlot
BytesSlot	include/click/args.hh	/^    struct BytesSlot : public Slot {$/;"	s	struct:Args
CALM	include/click/handler.hh	/^	CALM = h_calm,$/;"	e	enum:Handler::DeprecatedFlags
CAPTURE_LINUX	elements/userlevel/fromdevice.hh	/^    enum { CAPTURE_PCAP, CAPTURE_LINUX };$/;"	e	enum:FromDevice::__anon196
CAPTURE_PCAP	elements/userlevel/fromdevice.hh	/^    enum { CAPTURE_PCAP, CAPTURE_LINUX };$/;"	e	enum:FromDevice::__anon196
CARRIER_EXTENSION	drivers/e1000-4.x/src/e1000_hw.h	1469;"	d
CARRIER_EXTENSION	drivers/e1000-5.x/src/e1000_hw.h	1687;"	d
CARRIER_EXTENSION	drivers/e1000-7.x/src/e1000_hw.h	2507;"	d
CBShapeByCD	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.hh	/^struct CBShapeByCD {$/;"	s
CBShapeSimple	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeSimple.hh	/^struct CBShapeSimple {$/;"	s
CBhapeByCD_CFB	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.hh	/^struct CBhapeByCD_CFB {$/;"	s
CC	bsdmodule/Makefile	/^CC = gcc -W -Wall$/;"	m
CC	drivers/e1000-4.x/src/Makefile	/^  CC := gcc cc$/;"	m
CC	drivers/e1000-4.x/src/Makefile	/^  CC := kgcc gcc cc$/;"	m
CC	drivers/e1000-4.x/src/Makefile	/^CC := $(firstword $(CC))$/;"	m
CC	drivers/e1000-4.x/src/Makefile	/^CC := $(foreach cc, $(CC), $(test_cc))$/;"	m
CC	drivers/e1000-5.x/src/Makefile	/^  CC := gcc cc$/;"	m
CC	drivers/e1000-5.x/src/Makefile	/^  CC := kgcc gcc cc$/;"	m
CC	drivers/e1000-5.x/src/Makefile	/^CC := $(firstword $(CC))$/;"	m
CC	drivers/e1000-5.x/src/Makefile	/^CC := $(foreach cc, $(CC), $(test_cc))$/;"	m
CC	drivers/e1000-7.x/src/Makefile	/^  CC := gcc cc$/;"	m
CC	drivers/e1000-7.x/src/Makefile	/^  CC := kgcc gcc cc$/;"	m
CC	drivers/e1000-7.x/src/Makefile	/^CC := $(firstword $(CC))$/;"	m
CC	drivers/e1000-7.x/src/Makefile	/^CC := $(foreach cc, $(CC), $(test_cc))$/;"	m
CC	etc/pkg-bsdmodule.mk	/^CC ?= $(CLICKKERNEL_CC)$/;"	m
CC	etc/pkg-linuxmodule.mk	/^CC ?= $(CLICKKERNEL_CC)$/;"	m
CC	etc/pkg-userlevel.mk	/^CC ?= $(CLICKCC)$/;"	m
CC	etc/samplellrpc/Makefile	/^CC	= cc$/;"	m
CC	linuxmodule/Makefile	/^CC = gcc -w -W -Wall$/;"	m
CC	ns/Makefile	/^CC = gcc -W -Wall$/;"	m
CC	tools/click-align/Makefile	/^CC = $/;"	m
CC	tools/click-align/Makefile	/^CC = gcc -W -Wall$/;"	m
CC	tools/click-check/Makefile	/^CC = $/;"	m
CC	tools/click-check/Makefile	/^CC = gcc -W -Wall$/;"	m
CC	tools/click-combine/Makefile	/^CC = $/;"	m
CC	tools/click-combine/Makefile	/^CC = gcc -W -Wall$/;"	m
CC	tools/click-devirtualize/Makefile	/^CC = $/;"	m
CC	tools/click-devirtualize/Makefile	/^CC = gcc -W -Wall$/;"	m
CC	tools/click-fastclassifier/Makefile	/^CC = $/;"	m
CC	tools/click-fastclassifier/Makefile	/^CC = gcc -W -Wall$/;"	m
CC	tools/click-flatten/Makefile	/^CC = $/;"	m
CC	tools/click-flatten/Makefile	/^CC = gcc -W -Wall$/;"	m
CC	tools/click-install/Makefile	/^CC = $/;"	m
CC	tools/click-install/Makefile	/^CC = gcc -W -Wall$/;"	m
CC	tools/click-mkmindriver/Makefile	/^CC = $/;"	m
CC	tools/click-mkmindriver/Makefile	/^CC = gcc -W -Wall$/;"	m
CC	tools/click-pretty/Makefile	/^CC = $/;"	m
CC	tools/click-pretty/Makefile	/^CC = gcc -W -Wall$/;"	m
CC	tools/click-undead/Makefile	/^CC = $/;"	m
CC	tools/click-undead/Makefile	/^CC = gcc -W -Wall$/;"	m
CC	tools/click-xform/Makefile	/^CC = $/;"	m
CC	tools/click-xform/Makefile	/^CC = gcc -W -Wall$/;"	m
CC	tools/click2xml/Makefile	/^CC = $/;"	m
CC	tools/click2xml/Makefile	/^CC = gcc -W -Wall$/;"	m
CC	tools/lib/Makefile	/^CC = gcc -W -Wall$/;"	m
CC	userlevel/Makefile	/^CC = gcc -W -Wall$/;"	m
CCLD	bsdmodule/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	etc/pkg-bsdmodule.mk	/^CCLD = $(CC)$/;"	m
CCLD	etc/pkg-linuxmodule.mk	/^CCLD = $(CC)$/;"	m
CCLD	etc/pkg-userlevel.mk	/^CCLD = $(CC)$/;"	m
CCLD	linuxmodule/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	ns/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	tools/click-align/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	tools/click-check/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	tools/click-combine/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	tools/click-devirtualize/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	tools/click-fastclassifier/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	tools/click-flatten/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	tools/click-install/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	tools/click-mkmindriver/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	tools/click-pretty/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	tools/click-undead/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	tools/click-xform/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	tools/click2xml/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	userlevel/Makefile	/^CCLD = $(CC)$/;"	m
CDInfo	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^struct CDInfo {$/;"	s
CELL_SIZE	elements/analysis/fromdagdump.hh	/^	enum { HEADER_SIZE = 16, CELL_SIZE = 64 };$/;"	e	enum:FromDAGDump::DAGCell::__anon271
CFILES	drivers/e1000-4.x/src/Makefile	/^CFILES = e1000_main.c e1000_hw.c e1000_param.c \\$/;"	m
CFILES	drivers/e1000-5.x/src/Makefile	/^CFILES = e1000_main.c e1000_hw.c e1000_param.c \\$/;"	m
CFILES	drivers/e1000-7.x/src/Makefile	/^CFILES = e1000_main.c e1000_hw.c e1000_param.c \\$/;"	m
CFLAGS	bsdmodule/Makefile	/^CFLAGS =  -O2 -g -fPIC -fno-builtin$/;"	m
CFLAGS	bsdmodule/Makefile	/^CFLAGS =  -O2 -g -fno-builtin$/;"	m
CFLAGS	etc/pkg-bsdmodule.mk	/^CFLAGS ?= $(CLICKCFLAGS_NDEBUG)$/;"	m
CFLAGS	etc/pkg-linuxmodule.mk	/^CFLAGS ?= $(CLICKCFLAGS_NDEBUG)$/;"	m
CFLAGS	etc/pkg-userlevel.mk	/^CFLAGS ?= $(CLICKCFLAGS) -fPIC$/;"	m
CFLAGS	linuxmodule/Makefile	/^CFLAGS =  -O2$/;"	m
CFLAGS	ns/Makefile	/^CFLAGS = -g -O2 -fPIC$/;"	m
CFLAGS	tools/click-align/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	tools/click-check/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	tools/click-combine/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	tools/click-devirtualize/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	tools/click-fastclassifier/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	tools/click-flatten/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	tools/click-install/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	tools/click-mkmindriver/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	tools/click-pretty/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	tools/click-undead/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	tools/click-xform/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	tools/click2xml/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	tools/lib/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	userlevel/Makefile	/^CFLAGS = -g -O2$/;"	m
CHAIN_H	elements/local/OpenFlow/lib/chain.hh	35;"	d
CHAIN_MAX_TABLES	elements/local/OpenFlow/lib/chain.hh	56;"	d
CHECK	elements/analysis/ipsumdump_icmp.cc	47;"	d	file:
CHECK	elements/analysis/ipsumdump_icmp.cc	88;"	d	file:
CHECK	elements/analysis/ipsumdump_ip.cc	121;"	d	file:
CHECK	elements/analysis/ipsumdump_ip.cc	45;"	d	file:
CHECK	elements/analysis/ipsumdump_link.cc	53;"	d	file:
CHECK	elements/analysis/ipsumdump_link.cc	66;"	d	file:
CHECK	elements/analysis/ipsumdump_tcp.cc	43;"	d	file:
CHECK	elements/analysis/ipsumdump_tcp.cc	97;"	d	file:
CHECK	elements/analysis/ipsumdump_udp.cc	42;"	d	file:
CHECK	elements/analysis/ipsumdump_udp.cc	49;"	d	file:
CHECK	elements/test/bhmtest.cc	39;"	d	file:
CHECK	elements/test/biginttest.cc	40;"	d	file:
CHECK	elements/test/clptest.cc	174;"	d	file:
CHECK	elements/test/confparsetest.cc	56;"	d	file:
CHECK	elements/test/errortest.cc	51;"	d	file:
CHECK	elements/test/functiontest.cc	37;"	d	file:
CHECK	elements/test/hashtabletest.cc	58;"	d	file:
CHECK	elements/test/heaptest.cc	34;"	d	file:
CHECK	elements/test/listtest.cc	51;"	d	file:
CHECK	elements/test/packettest.cc	34;"	d	file:
CHECK	elements/test/queuethreadtest.cc	99;"	d	file:
CHECK	elements/test/queueyanktest.cc	56;"	d	file:
CHECK	elements/test/tokenbuckettest.cc	32;"	d	file:
CHECK	elements/test/vectortest.cc	38;"	d	file:
CHECK0	elements/test/biginttest.cc	41;"	d	file:
CHECKBOX	include/click/handler.hh	/^	CHECKBOX = h_checkbox,$/;"	e	enum:Handler::DeprecatedFlags
CHECKGRIDHEADER_HH	elements/grid/checkgridheader.hh	2;"	d
CHECKI	elements/test/listtest.cc	52;"	d	file:
CHECKPATTERN_HH	elements/radio/checkpattern.hh	2;"	d
CHECKSUM_COMPLETE	drivers/e1000-7.x/src/kcompat.h	177;"	d
CHECKSUM_PARTIAL	drivers/e1000-7.x/src/kcompat.h	176;"	d
CHECK_ALIGNED	elements/test/packettest.cc	36;"	d	file:
CHECK_DATA	elements/test/bhmtest.cc	40;"	d	file:
CHECK_DATA	elements/test/clptest.cc	175;"	d	file:
CHECK_DATA	elements/test/hashtabletest.cc	59;"	d	file:
CHECK_DATA	elements/test/packettest.cc	35;"	d	file:
CHECK_DEQ	elements/test/queueyanktest.cc	59;"	d	file:
CHECK_ERR	elements/test/confparsetest.cc	60;"	d	file:
CHECK_FIXEDPOINT	elements/test/confparsetest.cc	181;"	d	file:
CHECK_FIXEDPOINT	elements/test/confparsetest.cc	200;"	d	file:
CHECK_NOPKT	elements/test/queueyanktest.cc	58;"	d	file:
CHECK_OPT	tools/click-mkmindriver/click-mkmindriver.cc	49;"	d	file:
CHECK_PKT	elements/test/queueyanktest.cc	57;"	d	file:
CHECK_PLACE	elements/test/heaptest.cc	35;"	d	file:
CHECK_READ	include/click/handlercall.hh	/^    enum { CHECK_READ = h_read, CHECK_WRITE = h_write,$/;"	e	enum:HandlerCall::__anon428
CHECK_WRITE	include/click/handlercall.hh	/^    enum { CHECK_READ = h_read, CHECK_WRITE = h_write,$/;"	e	enum:HandlerCall::__anon428
CHUNK_MAGIC	lib/glue.cc	192;"	d	file:
CHUNK_MAGIC_FREED	lib/glue.cc	193;"	d	file:
CLASSES_OPT	tools/click-flatten/click-flatten.cc	40;"	d	file:
CLASS_URLS_OPT	tools/click-pretty/click-pretty.cc	43;"	d	file:
CLEANUP_BEFORE_CONFIGURE	include/click/element.hh	/^	CLEANUP_BEFORE_CONFIGURE = CLEANUP_NO_ROUTER,$/;"	e	enum:Element::CleanupStage
CLEANUP_CONFIGURED	include/click/element.hh	/^	CLEANUP_CONFIGURED,$/;"	e	enum:Element::CleanupStage
CLEANUP_CONFIGURE_FAILED	include/click/element.hh	/^	CLEANUP_CONFIGURE_FAILED,$/;"	e	enum:Element::CleanupStage
CLEANUP_INITIALIZED	include/click/element.hh	/^	CLEANUP_INITIALIZED,$/;"	e	enum:Element::CleanupStage
CLEANUP_INITIALIZE_FAILED	include/click/element.hh	/^	CLEANUP_INITIALIZE_FAILED,$/;"	e	enum:Element::CleanupStage
CLEANUP_MANUAL	include/click/element.hh	/^	CLEANUP_MANUAL$/;"	e	enum:Element::CleanupStage
CLEANUP_NO_ROUTER	include/click/element.hh	/^	CLEANUP_NO_ROUTER,$/;"	e	enum:Element::CleanupStage
CLEANUP_ROUTER_INITIALIZED	include/click/element.hh	/^	CLEANUP_ROUTER_INITIALIZED,$/;"	e	enum:Element::CleanupStage
CLEAN_TARGETS	Makefile	/^CLEAN_TARGETS =  clean-userlevel clean-tools$/;"	m
CLEAN_TARGETS	tools/Makefile	/^CLEAN_TARGETS =  clean-click-align clean-click-check clean-click-combine clean-click-devirtualize clean-click-fastclassifier clean-click-flatten clean-click-mkmindriver clean-click-pretty clean-click-undead clean-click-xform clean-click2xml$/;"	m
CLGW::Addr	conf/click-mkclgw.pl	/^package CLGW::Addr;$/;"	p
CLGW::Addr::Cluster	conf/click-mkclgw.pl	/^package CLGW::Addr::Cluster;$/;"	p
CLGW::Addr::Eth	conf/click-mkclgw.pl	/^package CLGW::Addr::Eth;$/;"	p
CLGW::Addr::IP	conf/click-mkclgw.pl	/^package CLGW::Addr::IP;$/;"	p
CLGW::Addr::Net	conf/click-mkclgw.pl	/^package CLGW::Addr::Net;$/;"	p
CLGW::Addr::Param	conf/click-mkclgw.pl	/^package CLGW::Addr::Param;$/;"	p
CLGW::Base	conf/click-mkclgw.pl	/^package CLGW::Base;$/;"	p
CLGW::Cluster	conf/click-mkclgw.pl	/^package CLGW::Cluster;$/;"	p
CLGW::Const	conf/click-mkclgw.pl	/^package CLGW::Const;$/;"	p
CLGW::Label	conf/click-mkclgw.pl	/^package CLGW::Label;$/;"	p
CLGW::Label::Cluster	conf/click-mkclgw.pl	/^package CLGW::Label::Cluster;$/;"	p
CLGW::Output	conf/click-mkclgw.pl	/^package CLGW::Output;$/;"	p
CLGW::Parser	conf/click-mkclgw.pl	/^package CLGW::Parser;$/;"	p
CLGW::Rule	conf/click-mkclgw.pl	/^package CLGW::Rule;$/;"	p
CLGW::Rule::IFace	conf/click-mkclgw.pl	/^package CLGW::Rule::IFace;$/;"	p
CLGW::Rule::IPLabel	conf/click-mkclgw.pl	/^package CLGW::Rule::IPLabel;$/;"	p
CLGW::Rule::LBNAPT	conf/click-mkclgw.pl	/^package CLGW::Rule::LBNAPT;$/;"	p
CLGW::Rule::NAPT	conf/click-mkclgw.pl	/^package CLGW::Rule::NAPT;$/;"	p
CLGW::Rule::Nat	conf/click-mkclgw.pl	/^package CLGW::Rule::Nat;$/;"	p
CLGW::Rule::NatBase	conf/click-mkclgw.pl	/^package CLGW::Rule::NatBase;$/;"	p
CLGW::Rule::Param	conf/click-mkclgw.pl	/^package CLGW::Rule::Param;$/;"	p
CLICK2XML_OBJS	tools/click2xml/Makefile	/^CLICK2XML_OBJS = click2xml.o$/;"	m
CLICKAR_CREATE	etc/pkg-config.mk	/^CLICKAR_CREATE = ar cru$/;"	m
CLICKAUTOCONF	etc/pkg-config.mk	/^CLICKAUTOCONF = autoconf$/;"	m
CLICKBUILD	etc/pkg-bsdmodule.mk	/^CLICKBUILD = bsdmodule$/;"	m
CLICKBUILD	etc/pkg-linuxmodule-26.mk	/^CLICKBUILD = linux26module$/;"	m
CLICKBUILD	etc/pkg-linuxmodule.mk	/^CLICKBUILD = linuxmodule$/;"	m
CLICKBUILD	etc/pkg-userlevel.mk	/^CLICKBUILD = userlevel$/;"	m
CLICKCC	etc/pkg-config.mk	/^CLICKCC = gcc -W -Wall$/;"	m
CLICKCC	linuxmodule/Makefile	/^CLICKCC = gcc -w -W -Wall$/;"	m
CLICKCFLAGS	etc/pkg-config.mk	/^CLICKCFLAGS = -g -O2$/;"	m
CLICKCFLAGS	linuxmodule/Makefile	/^CLICKCFLAGS =  -O2$/;"	m
CLICKCFLAGS_NDEBUG	etc/pkg-config.mk	/^CLICKCFLAGS_NDEBUG =  -O2$/;"	m
CLICKCPP	etc/pkg-config.mk	/^CLICKCPP = gcc -E$/;"	m
CLICKCPPFLAGS	etc/pkg-config.mk	/^CLICKCPPFLAGS = $/;"	m
CLICKCPPFLAGS	linuxmodule/Makefile	/^CLICKCPPFLAGS =  -DCLICK_LINUXMODULE$/;"	m
CLICKCXX	etc/pkg-config.mk	/^CLICKCXX = g++ -W -Wall $/;"	m
CLICKCXX	linuxmodule/Makefile	/^CLICKCXX = g++ -w -W -Wall -fno-exceptions -fno-rtti  -fpermissive$/;"	m
CLICKCXXCPP	etc/pkg-config.mk	/^CLICKCXXCPP = g++ -W -Wall  -E$/;"	m
CLICKCXXFLAGS	etc/pkg-config.mk	/^CLICKCXXFLAGS = -g -O2$/;"	m
CLICKCXXFLAGS	linuxmodule/Makefile	/^CLICKCXXFLAGS =  -O2$/;"	m
CLICKCXXFLAGS_NDEBUG	etc/pkg-config.mk	/^CLICKCXXFLAGS_NDEBUG =  -O2$/;"	m
CLICKDEFS	etc/pkg-config.mk	/^CLICKDEFS = -DHAVE_CONFIG_H$/;"	m
CLICKDEFS	linuxmodule/Makefile	/^CLICKDEFS = -DHAVE_CONFIG_H$/;"	m
CLICKDEPCFLAGS	etc/pkg-config.mk	/^CLICKDEPCFLAGS = -MD -MP$/;"	m
CLICKDEPCFLAGS	linuxmodule/Makefile	/^CLICKDEPCFLAGS = -Wp,-MD,$(depfile)$/;"	m
CLICKFS_DIRENT_DIR	bsdmodule/clickfs_tree.hh	/^    CLICKFS_DIRENT_DIR = 0,$/;"	e	enum:clickfs_dirent_type
CLICKFS_DIRENT_HANDLE	bsdmodule/clickfs_tree.hh	/^    CLICKFS_DIRENT_HANDLE,$/;"	e	enum:clickfs_dirent_type
CLICKFS_DIRENT_NAMLEN	bsdmodule/clickfs_tree.hh	4;"	d
CLICKFS_DIRENT_SYMLINK	bsdmodule/clickfs_tree.hh	/^    CLICKFS_DIRENT_SYMLINK$/;"	e	enum:clickfs_dirent_type
CLICKFS_SUPER_MAGIC	linuxmodule/clickfs.cc	40;"	d	file:
CLICKFS_TREE_HH	bsdmodule/clickfs_tree.hh	2;"	d
CLICKGMAKE	etc/pkg-config.mk	/^CLICKGMAKE = make$/;"	m
CLICKINCLUDES	etc/pkg-config.mk	/^CLICKINCLUDES = -I$(clickincludedir) -I$(clicksrcdir) $/;"	m
CLICKINCLUDES	etc/pkg-linuxmodule-26.mk	/^CLICKINCLUDES := -I$(clickincludedir) -I$(clicksrcdir)$/;"	m
CLICKINCLUDES	linuxmodule/Makefile	/^CLICKINCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
CLICKINSTALL	etc/pkg-config.mk	/^CLICKINSTALL = \/usr\/bin\/install -c$/;"	m
CLICKKERNEL_CC	etc/pkg-config.mk	/^CLICKKERNEL_CC = gcc -w -W -Wall$/;"	m
CLICKKERNEL_CXX	etc/pkg-config.mk	/^CLICKKERNEL_CXX = g++ -w -W -Wall -fno-exceptions -fno-rtti  -fpermissive$/;"	m
CLICKLDFLAGS	etc/pkg-config.mk	/^CLICKLDFLAGS = $/;"	m
CLICKLDMODULEFLAGS	etc/pkg-config.mk	/^CLICKLDMODULEFLAGS = -shared$/;"	m
CLICKLINUX_BUILDDIR	etc/pkg-config.mk	/^CLICKLINUX_BUILDDIR = NONE$/;"	m
CLICKLINUX_FIXINCLUDES_PROGRAM	etc/pkg-config.mk	/^CLICKLINUX_FIXINCLUDES_PROGRAM = $/;"	m
CLICKLINUX_MAKEARGS	etc/pkg-config.mk	/^CLICKLINUX_MAKEARGS = $/;"	m
CLICKLINUX_SRCDIR	etc/pkg-config.mk	/^CLICKLINUX_SRCDIR = NONE$/;"	m
CLICKNET_DHCP_H	include/clicknet/dhcp.h	2;"	d
CLICKNET_ETHER_H	include/clicknet/ether.h	3;"	d
CLICKNET_FDDI_H	include/clicknet/fddi.h	3;"	d
CLICKNET_ICMP6_H	include/clicknet/icmp6.h	3;"	d
CLICKNET_ICMP_H	include/clicknet/icmp.h	3;"	d
CLICKNET_IP6_H	include/clicknet/ip6.h	3;"	d
CLICKNET_IP_H	include/clicknet/ip.h	3;"	d
CLICKNET_LLC_H	include/clicknet/llc.h	44;"	d
CLICKNET_PPP_H	include/clicknet/ppp.h	2;"	d
CLICKNET_RFC1483_H	include/clicknet/rfc1483.h	3;"	d
CLICKNET_TCP_H	include/clicknet/tcp.h	3;"	d
CLICKNET_UDP_H	include/clicknet/udp.h	2;"	d
CLICKPARM_ACCESSIBLE	linuxmodule/moduleparm.h	4;"	d
CLICKPARM_CPU	linuxmodule/moduleparm.h	9;"	d
CLICKPARM_GID	linuxmodule/moduleparm.h	8;"	d
CLICKPARM_GREEDY	linuxmodule/moduleparm.h	6;"	d
CLICKPARM_THREADS	linuxmodule/moduleparm.h	5;"	d
CLICKPARM_UID	linuxmodule/moduleparm.h	7;"	d
CLICKPATH_OPT	apps/clicky/src/clicky.cc	35;"	d	file:
CLICKPATH_OPT	ns/nsclick.cc	56;"	d	file:
CLICKPATH_OPT	tools/click-check/click-check.cc	42;"	d	file:
CLICKPATH_OPT	tools/click-devirtualize/click-devirtualize.cc	44;"	d	file:
CLICKPATH_OPT	tools/click-fastclassifier/click-fastclassifier.cc	49;"	d	file:
CLICKPATH_OPT	tools/click-flatten/click-flatten.cc	35;"	d	file:
CLICKPATH_OPT	tools/click-install/click-install.cc	54;"	d	file:
CLICKPATH_OPT	tools/click-mkmindriver/click-mkmindriver.cc	39;"	d	file:
CLICKPATH_OPT	tools/click-pretty/click-pretty.cc	39;"	d	file:
CLICKPATH_OPT	tools/click-undead/click-undead.cc	45;"	d	file:
CLICKPATH_OPT	tools/click2xml/click2xml.cc	36;"	d	file:
CLICKPATH_OPT	tools/click2xml/xml2click.cc	38;"	d	file:
CLICKPATH_OPT	userlevel/click.cc	60;"	d	file:
CLICKRANLIB	etc/pkg-config.mk	/^CLICKRANLIB = ranlib$/;"	m
CLICKSTRIP	etc/pkg-config.mk	/^CLICKSTRIP = strip$/;"	m
CLICKTOOL_LANDMARKT_HH	tools/lib/landmarkt.hh	2;"	d
CLICKY_CDRIVER_HH	apps/clicky/src/cdriver.hh	2;"	d
CLICKY_CROUTER_HH	apps/clicky/src/crouter.hh	2;"	d
CLICKY_DDECOR_HH	apps/clicky/src/ddecor.hh	2;"	d
CLICKY_DSTYLE_HH	apps/clicky/src/dstyle.hh	2;"	d
CLICKY_DWIDGET_HH	apps/clicky/src/dwidget.hh	2;"	d
CLICKY_GATHERERROR_HH	apps/clicky/src/gathererror.hh	2;"	d
CLICKY_HVALUES_HH	apps/clicky/src/hvalues.hh	2;"	d
CLICKY_PERMSTR_HH	apps/clicky/src/permstr.hh	2;"	d
CLICKY_RECTANGLE_HH	apps/clicky/src/rectangle.hh	2;"	d
CLICKY_RECTSEARCH_HH	apps/clicky/src/rectsearch.hh	2;"	d
CLICKY_SCOPECHAIN_HH	apps/clicky/src/scopechain.hh	2;"	d
CLICKY_TMAIN_HH	apps/clicky/src/tmain.hh	2;"	d
CLICKY_WDIAGRAM_HH	apps/clicky/src/wdiagram.hh	2;"	d
CLICKY_WHANDLER_HH	apps/clicky/src/whandler.hh	2;"	d
CLICKY_WMAIN_HH	apps/clicky/src/wmain.hh	2;"	d
CLICK_ACKRESPONDER2_HH	elements/grid/ackresponder2.hh	2;"	d
CLICK_ACKRESPONDER_HH	elements/grid/ackresponder.hh	2;"	d
CLICK_ACKRETRYSENDER2_HH	elements/grid/ackretrysender2.hh	2;"	d
CLICK_ACKRETRYSENDER_HH	elements/grid/ackretrysender.hh	2;"	d
CLICK_ADAPTIVERED_HH	elements/aqm/adaptivered.hh	3;"	d
CLICK_ADDRESSINFO_HH	include/click/standard/addressinfo.hh	3;"	d
CLICK_ADDRESSTRANSLATOR_HH	elements/ip6/addresstranslator.hh	2;"	d
CLICK_ADJUSTTIMESTAMP_HH	elements/analysis/adjusttimestamp.hh	3;"	d
CLICK_AGGCOUNTER_HH	elements/analysis/aggcounter.hh	2;"	d
CLICK_AGGPKTCOUNTER_HH	elements/analysis/aggpktcounter.hh	3;"	d
CLICK_AGGREGATEFILTER_HH	elements/analysis/aggregatefilter.hh	2;"	d
CLICK_AGGREGATEFIRST_HH	elements/analysis/aggregatefirst.hh	2;"	d
CLICK_AGGREGATEIPADDRPAIR_HH	elements/analysis/aggregateipaddrpair.hh	3;"	d
CLICK_AGGREGATEIPFLOWS_HH	elements/analysis/aggregateipflows.hh	3;"	d
CLICK_AGGREGATEIP_HH	elements/analysis/aggregateip.hh	3;"	d
CLICK_AGGREGATELAST_HH	elements/analysis/aggregatelast.hh	2;"	d
CLICK_AGGREGATELEN_HH	elements/analysis/aggregatelen.hh	3;"	d
CLICK_AGGREGATENOTIFIER_HH	elements/analysis/aggregatenotifier.hh	3;"	d
CLICK_AGGREGATEPAINT_HH	elements/analysis/aggregatepaint.hh	3;"	d
CLICK_AIROINFO_HH	elements/grid/airoinfo.hh	2;"	d
CLICK_ALGORITHM_HH	include/click/algorithm.hh	2;"	d
CLICK_ALIGNED	include/click/config.h	158;"	d
CLICK_ALIGNED	include/click/config.h	160;"	d
CLICK_ALIGNMENTINFO_HH	include/click/standard/alignmentinfo.hh	3;"	d
CLICK_ALIGN_HH	elements/standard/align.hh	2;"	d
CLICK_ALLOC	lib/glue.cc	184;"	d	file:
CLICK_ALLOC	lib/glue.cc	187;"	d	file:
CLICK_ALLOW_TXDR_RXDR	drivers/e1000-5.x/src/e1000_ethtool.c	57;"	d	file:
CLICK_ANNOTATIONINFO_HH	elements/standard/annotationinfo.hh	2;"	d
CLICK_ANONIPADDR_HH	elements/analysis/anonipaddr.hh	3;"	d
CLICK_ANYDEVICE_HH	elements/bsdmodule/anydevice.hh	3;"	d
CLICK_ARCHIVE_HH	include/click/archive.hh	3;"	d
CLICK_ARGS_HH	include/click/args.hh	3;"	d
CLICK_ARPFAKER_HH	elements/ethernet/arpfaker.hh	2;"	d
CLICK_ARPPRINT_HH	elements/ethernet/arpprint.hh	2;"	d
CLICK_ARPQUERIER_HH	elements/ethernet/arpquerier.hh	2;"	d
CLICK_ARPRESPONDER_HH	elements/ethernet/arpresponder.hh	2;"	d
CLICK_ARPTABLE_HH	elements/ethernet/arptable.hh	2;"	d
CLICK_ASSOCIATIONREQUESTER_HH	elements/wifi/station/associationrequester.hh	2;"	d
CLICK_ASSOCIATIONRESPONDER_HH	elements/wifi/ap/associationresponder.hh	2;"	d
CLICK_ATHDESCDECAP_HH	elements/wifi/athdescdecap.hh	2;"	d
CLICK_ATHDESCENCAP_HH	elements/wifi/athdescencap.hh	2;"	d
CLICK_ATOMIC_HH	include/click/atomic.hh	3;"	d
CLICK_ATOMIC_LOCK	include/click/atomic.hh	25;"	d
CLICK_ATOMIC_VAL	include/click/atomic.hh	16;"	d
CLICK_ATOMIC_X86	include/click/atomic.hh	22;"	d
CLICK_AUTORATEFALLBACK_HH	elements/wifi/autoratefallback.hh	2;"	d
CLICK_AVAILABLERATES_HH	elements/wifi/availablerates.hh	2;"	d
CLICK_AVERAGECOUNTER_HH	elements/standard/averagecounter.hh	2;"	d
CLICK_B8B10_HH	elements/radio/b8b10.hh	2;"	d
CLICK_BANDWIDTHMETER_HH	elements/standard/bandwidthmeter.hh	2;"	d
CLICK_BANDWIDTHSHAPER_HH	elements/standard/bandwidthshaper.hh	3;"	d
CLICK_BEACONSCANNER_HH	elements/wifi/station/beaconscanner.hh	2;"	d
CLICK_BEACONSOURCE_HH	elements/wifi/ap/beaconsource.hh	2;"	d
CLICK_BEACONTRACKER_HH	elements/wifi/station/beacontracker.hh	2;"	d
CLICK_BIGHASHMAPTEST_HH	elements/test/bhmtest.hh	3;"	d
CLICK_BIGHASHMAP_ARENA_HH	include/click/bighashmap_arena.hh	3;"	d
CLICK_BIGHASHMAP_HH	include/click/bighashmap.hh	2;"	d
CLICK_BIGINTTEST_HH	elements/test/biginttest.hh	3;"	d
CLICK_BIGINT_HH	include/click/bigint.hh	2;"	d
CLICK_BIG_ENDIAN	include/click/config.h	13;"	d
CLICK_BIM_HH	elements/radio/bim.hh	2;"	d
CLICK_BINDIR	include/click/pathvars.h	7;"	d
CLICK_BITVECTOR_HH	include/click/bitvector.hh	3;"	d
CLICK_BLOCKTHREAD_HH	elements/test/blockthread.hh	3;"	d
CLICK_BLOCK_HH	elements/standard/block.hh	2;"	d
CLICK_BRIDGEMESSAGE_HH	elements/etherswitch/bridgemessage.hh	2;"	d
CLICK_BUILDTOOL	etc/pkg-bsdmodule.mk	/^CLICK_BUILDTOOL ?= $(clickbindir)\/click-buildtool$/;"	m
CLICK_BUILDTOOL	etc/pkg-linuxmodule-26.mk	/^CLICK_BUILDTOOL ?= $(clickbindir)\/click-buildtool$/;"	m
CLICK_BUILDTOOL	etc/pkg-linuxmodule.mk	/^CLICK_BUILDTOOL ?= $(clickbindir)\/click-buildtool$/;"	m
CLICK_BUILDTOOL	etc/pkg-userlevel.mk	/^CLICK_BUILDTOOL ?= $(clickbindir)\/click-buildtool$/;"	m
CLICK_BUILD_INSTALL	linuxmodule/Makefile	/^CLICK_BUILD_INSTALL = \/usr\/bin\/install -c$/;"	m
CLICK_BUILD_INSTALL_DATA	linuxmodule/Makefile	/^CLICK_BUILD_INSTALL_DATA = $(CLICK_BUILD_INSTALL) -m 644$/;"	m
CLICK_BUILD_INSTALL_DATA_IF_CHANGED	linuxmodule/Makefile	/^CLICK_BUILD_INSTALL_DATA_IF_CHANGED = $(CLICK_BUILD_INSTALL_IF_CHANGED) -m 644$/;"	m
CLICK_BUILD_INSTALL_IF_CHANGED	linuxmodule/Makefile	/^CLICK_BUILD_INSTALL_IF_CHANGED = $(CLICK_BUILD_INSTALL) -C$/;"	m
CLICK_BURSTER_HH	elements/standard/burster.hh	2;"	d
CLICK_BWRATEDSPLITTER_HH	elements/standard/bwratedsplitter.hh	3;"	d
CLICK_BWRATEDUNQUEUE_HH	elements/standard/bwratedunqueue.hh	3;"	d
CLICK_BYTE_ORDER	include/click/config.h	12;"	d
CLICK_CHANGEUID_HH	elements/userlevel/changeuid.hh	3;"	d
CLICK_CHATTERSOCKET_HH	elements/userlevel/chattersocket.hh	2;"	d
CLICK_CHECKARPHEADER_HH	elements/ethernet/checkarpheader.hh	2;"	d
CLICK_CHECKCRC32_HH	elements/standard/checkcrc32.hh	2;"	d
CLICK_CHECKICMPHEADER_HH	elements/icmp/checkicmpheader.hh	2;"	d
CLICK_CHECKIP6HEADER_HH	elements/ip6/checkip6header.hh	2;"	d
CLICK_CHECKIPHEADER2_HH	elements/ip/checkipheader2.hh	2;"	d
CLICK_CHECKIPHEADER_HH	elements/ip/checkipheader.hh	2;"	d
CLICK_CHECKLENGTH_HH	elements/standard/checklength.hh	2;"	d
CLICK_CHECKPACKET_HH	elements/test/checkpacket.hh	3;"	d
CLICK_CHECKPAINT_HH	elements/standard/checkpaint.hh	2;"	d
CLICK_CHECKTCPHEADER_HH	elements/tcpudp/checktcpheader.hh	2;"	d
CLICK_CHECKUDPHEADER_HH	elements/tcpudp/checkudpheader.hh	2;"	d
CLICK_CLASSIFICATION_HH	elements/standard/classification.hh	2;"	d
CLICK_CLASSIFICATION_WORDWISE_DOMINATOR_FASTPRED	elements/standard/classification.hh	3;"	d
CLICK_CLASSIFIER_HH	elements/standard/classifier.hh	2;"	d
CLICK_CLICKYINFO_HH	elements/standard/clickyinfo.hh	2;"	d
CLICK_CLPTEST_HH	elements/test/clptest.hh	3;"	d
CLICK_COMPAREPACKETS_HH	elements/test/comparepackets.hh	3;"	d
CLICK_COMPBLOCK_HH	elements/standard/compblock.hh	2;"	d
CLICK_COMPILING_CONFPARSE_CC	lib/confparse.cc	25;"	d	file:
CLICK_CONFIG_BSDMODULE_H	include/click/config-bsdmodule.h	4;"	d
CLICK_CONFIG_H	include/click/config.h	4;"	d
CLICK_CONFIG_LINUXMODULE_H	include/click/config-linuxmodule.h	4;"	d
CLICK_CONFIG_LINUXMODULE_SYMBOLS_ONLY	linuxmodule/proclikefs.c	46;"	d	file:
CLICK_CONFIG_NS_H	include/click/config-ns.h	4;"	d
CLICK_CONFIG_USERLEVEL_H	include/click/config-userlevel.h	4;"	d
CLICK_CONFPARSETEST_HH	elements/test/confparsetest.hh	3;"	d
CLICK_CONFPARSE_DEPRECATED	include/click/confparse.hh	/^    const char* description CLICK_CONFPARSE_DEPRECATED;$/;"	m	struct:cp_value
CLICK_CONFPARSE_DEPRECATED	include/click/confparse.hh	28;"	d
CLICK_CONFPARSE_DEPRECATED	include/click/confparse.hh	30;"	d
CLICK_CONFPARSE_DEPRECATED	include/click/confparse.hh	737;"	d
CLICK_CONFPARSE_HH	include/click/confparse.hh	3;"	d
CLICK_CONTROLSOCKET_HH	elements/userlevel/controlsocket.hh	2;"	d
CLICK_COUNTER_HH	elements/standard/counter.hh	3;"	d
CLICK_CRC32_H	include/click/crc32.h	3;"	d
CLICK_CXX_PROTECT	include/click/cxxprotect.h	18;"	d
CLICK_CXX_PROTECT	include/click/cxxprotect.h	21;"	d
CLICK_CXX_PROTECTED	include/click/cxxprotect.h	26;"	d
CLICK_CXX_PROTECTED	include/click/cxxunprotect.h	15;"	d
CLICK_CXX_UNPROTECT	include/click/cxxprotect.h	19;"	d
CLICK_CXX_UNPROTECT	include/click/cxxprotect.h	22;"	d
CLICK_CYCLECOUNTACCUM_HH	elements/linuxmodule/cyclecountaccum.hh	3;"	d
CLICK_CYCLE_COMPENSATION	elements/bsdmodule/anydevice.hh	16;"	d
CLICK_CYCLE_COMPENSATION	elements/linuxmodule/anydevice.hh	22;"	d
CLICK_DATADIR	include/click/pathvars.h	13;"	d
CLICK_DATAPATH_H	elements/local/OpenFlow/datapath.hh	2;"	d
CLICK_DEBUGBRIDGE_HH	elements/etherswitch/debugbridge.hh	2;"	d
CLICK_DEBUG_MASTER	include/click/master.hh	14;"	d
CLICK_DEBUG_SCHEDULING	include/click/config.h	149;"	d
CLICK_DECIP6HLIM_HH	elements/ip6/decip6hlim.hh	2;"	d
CLICK_DECIPTTL_HH	elements/ip/decipttl.hh	2;"	d
CLICK_DECLS	include/click/config-bsdmodule.h	80;"	d
CLICK_DECLS	include/click/config-linuxmodule.h	213;"	d
CLICK_DECLS	include/click/config-ns.h	9;"	d
CLICK_DECLS	include/click/config-userlevel.h	330;"	d
CLICK_DEFAULT_PROVIDES	include/click/driver.hh	6;"	d
CLICK_DELAYSHAPER_HH	elements/standard/delayshaper.hh	3;"	d
CLICK_DELAYUNQUEUE_HH	elements/standard/delayunqueue.hh	2;"	d
CLICK_DEPRECATED	include/click/atomic.hh	/^    inline bool compare_and_swap(uint32_t expected, uint32_t desired) CLICK_DEPRECATED;$/;"	m	class:atomic_uint32_t
CLICK_DEPRECATED	include/click/atomic.hh	/^    inline static bool compare_and_swap(volatile uint32_t &x, uint32_t expected, uint32_t desired) CLICK_DEPRECATED;$/;"	m	class:atomic_uint32_t
CLICK_DEPRECATED	include/click/config.h	165;"	d
CLICK_DEPRECATED	include/click/config.h	167;"	d
CLICK_DEPRECATED	include/click/confparse.hh	/^	int64_t i64 CLICK_DEPRECATED;$/;"	m	union:cp_value::__anon479
CLICK_DEPRECATED	include/click/element.hh	/^    String id() const CLICK_DEPRECATED;$/;"	m	class:Element
CLICK_DEPRECATED	include/click/element.hh	/^    String landmark() const CLICK_DEPRECATED;$/;"	m	class:Element
CLICK_DEPRECATED	include/click/etheraddress.hh	/^    inline String s() const CLICK_DEPRECATED;$/;"	m	class:EtherAddress
CLICK_DEPRECATED	include/click/etheraddress.hh	/^    inline operator String() const CLICK_DEPRECATED;$/;"	m	class:EtherAddress
CLICK_DEPRECATED	include/click/etheraddress.hh	/^    static inline EtherAddress broadcast() CLICK_DEPRECATED;$/;"	m	class:EtherAddress
CLICK_DEPRECATED	include/click/ewma.hh	/^    inline void update_with(value_type x) CLICK_DEPRECATED;$/;"	m	class:DirectEWMAX
CLICK_DEPRECATED	include/click/handler.hh	/^    inline void *user_data1() const CLICK_DEPRECATED;$/;"	m	class:Handler
CLICK_DEPRECATED	include/click/handler.hh	/^    inline void *user_data2() const CLICK_DEPRECATED;$/;"	m	class:Handler
CLICK_DEPRECATED	include/click/handler.hh	/^typedef HandlerCallback HandlerHook CLICK_DEPRECATED;$/;"	t
CLICK_DEPRECATED	include/click/handler.hh	/^typedef ReadHandlerCallback ReadHandlerHook CLICK_DEPRECATED;$/;"	t
CLICK_DEPRECATED	include/click/handler.hh	/^typedef WriteHandlerCallback WriteHandlerHook CLICK_DEPRECATED;$/;"	t
CLICK_DEPRECATED	include/click/hashmap.hh	/^    inline operator unspecified_bool_type() const CLICK_DEPRECATED;$/;"	m	class:_HashMap_const_iterator
CLICK_DEPRECATED	include/click/hashmap.hh	/^  inline operator unspecified_bool_type() const CLICK_DEPRECATED;$/;"	m	class:_HashMap_const_iterator
CLICK_DEPRECATED	include/click/hashtable.hh	/^    bool replace(const key_type &key, const mapped_type &value) CLICK_DEPRECATED;$/;"	m	class:HashTable
CLICK_DEPRECATED	include/click/hashtable.hh	/^    inline mapped_type &operator[](const key_type &key) CLICK_DEPRECATED;$/;"	m	class:HashTable
CLICK_DEPRECATED	include/click/ip6address.hh	/^    inline operator String() const CLICK_DEPRECATED;$/;"	m	class:IP6Address
CLICK_DEPRECATED	include/click/ip6flowid.hh	/^  inline IP6FlowID rev() const CLICK_DEPRECATED;$/;"	m	class:IP6FlowID
CLICK_DEPRECATED	include/click/ipaddress.hh	/^    inline operator String() const CLICK_DEPRECATED;$/;"	m	class:IPAddress
CLICK_DEPRECATED	include/click/ipflowid.hh	/^    inline IPFlowID rev() const CLICK_DEPRECATED;$/;"	m	class:IPFlowID
CLICK_DEPRECATED	include/click/ipflowid.hh	/^    inline String s() const CLICK_DEPRECATED;$/;"	m	class:IPFlowID
CLICK_DEPRECATED	include/click/ipflowid.hh	/^    inline operator String() const CLICK_DEPRECATED;$/;"	m	class:IPFlowID
CLICK_DEPRECATED	include/click/packet.hh	/^    inline const uint32_t *all_user_anno_u() const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline const uint32_t *user_anno_u32() const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline const uint8_t *all_user_anno() const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline const uint8_t *user_anno_u8() const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline const unsigned char *buffer_data() const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline const void *addr_anno() const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline const void *user_anno() const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline int16_t user_anno_s(int) const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline int32_t user_anno_i(int) const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline int32_t user_anno_s32(int i) const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline uint16_t user_anno_u16(int i) const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline uint16_t user_anno_us(int) const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline uint32_t *all_user_anno_u() CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline uint32_t *user_anno_u32() CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline uint32_t user_anno_u(int) const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline uint32_t user_anno_u32(int i) const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline uint64_t user_anno_u64(int i) const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline uint8_t *all_user_anno() CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline uint8_t *user_anno_u8() CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline uint8_t user_anno_c(int) const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline uint8_t user_anno_u8(int i) const CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline unsigned char *buffer_data() const CLICK_DEPRECATED;$/;"	m	class:WritablePacket
CLICK_DEPRECATED	include/click/packet.hh	/^    inline void *addr_anno() CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline void *user_anno() CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline void set_user_anno_c(int, uint8_t) CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline void set_user_anno_i(int, int32_t) CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline void set_user_anno_s(int, int16_t) CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline void set_user_anno_s32(int i, int32_t v) CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline void set_user_anno_u(int, uint32_t) CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline void set_user_anno_u16(int i, uint16_t v) CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline void set_user_anno_u32(int i, uint32_t v) CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline void set_user_anno_u64(int i, uint64_t v) CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline void set_user_anno_u8(int i, uint8_t v) CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/packet.hh	/^    inline void set_user_anno_us(int, uint16_t) CLICK_DEPRECATED;$/;"	m	class:Packet
CLICK_DEPRECATED	include/click/router.hh	/^    int downstream_elements(Element *e, int port, ElementFilter *filter, Vector<Element*> &result) CLICK_DEPRECATED;$/;"	m	class:Router
CLICK_DEPRECATED	include/click/router.hh	/^    int upstream_elements(Element *e, int port, ElementFilter *filter, Vector<Element*> &result) CLICK_DEPRECATED;$/;"	m	class:Router
CLICK_DEPRECATED	include/click/straccum.hh	/^    inline void forward(int delta) CLICK_DEPRECATED;$/;"	m	class:StringAccum
CLICK_DEPRECATED	include/click/task.hh	/^    inline TaskCallback hook() const CLICK_DEPRECATED;$/;"	m	class:Task
CLICK_DEPRECATED	include/click/task.hh	/^    inline void *thunk() const CLICK_DEPRECATED;$/;"	m	class:Task
CLICK_DEPRECATED	include/click/task.hh	/^typedef TaskCallback TaskHook CLICK_DEPRECATED;$/;"	t
CLICK_DEPRECATED	include/click/timer.hh	/^    inline void reschedule_after_ms(uint32_t delta_sec) CLICK_DEPRECATED;$/;"	m	class:Timer
CLICK_DEPRECATED	include/click/timer.hh	/^    inline void reschedule_after_s(uint32_t delta_sec) CLICK_DEPRECATED;$/;"	m	class:Timer
CLICK_DEPRECATED	include/click/timer.hh	/^    inline void schedule_after_ms(uint32_t delta_sec) CLICK_DEPRECATED;$/;"	m	class:Timer
CLICK_DEPRECATED	include/click/timer.hh	/^    inline void schedule_after_s(uint32_t delta_sec) CLICK_DEPRECATED;$/;"	m	class:Timer
CLICK_DEPRECATED	include/click/timer.hh	/^typedef TimerCallback TimerHook CLICK_DEPRECATED;$/;"	t
CLICK_DEPRECATED	include/click/timestamp.hh	/^    inline seconds_type msec1() const CLICK_DEPRECATED;$/;"	m	class:Timestamp
CLICK_DEPRECATED	include/click/timestamp.hh	/^    inline seconds_type nsec1() const CLICK_DEPRECATED;$/;"	m	class:Timestamp
CLICK_DEPRECATED	include/click/timestamp.hh	/^    inline seconds_type usec1() const CLICK_DEPRECATED;$/;"	m	class:Timestamp
CLICK_DEPRECATED	include/click/timestamp.hh	/^    inline void set(seconds_type sec, uint32_t subsec = 0) CLICK_DEPRECATED;$/;"	m	class:Timestamp
CLICK_DEPRECATED	include/click/timestamp.hh	/^    inline void set_now() CLICK_DEPRECATED;$/;"	m	class:Timestamp
CLICK_DEPRECATED	include/click/timestamp.hh	/^    inline void set_nsec(seconds_type sec, uint32_t nsec) CLICK_DEPRECATED;$/;"	m	class:Timestamp
CLICK_DEPRECATED	include/click/timestamp.hh	/^    inline void set_usec(seconds_type sec, uint32_t usec) CLICK_DEPRECATED;$/;"	m	class:Timestamp
CLICK_DEPRECATED_ENUM	include/click/config.h	172;"	d
CLICK_DEPRECATED_ENUM	include/click/config.h	174;"	d
CLICK_DEPRECATED_ENUM	include/click/packet.hh	/^    } CLICK_DEPRECATED_ENUM;$/;"	m	class:Packet	typeref:enum:Packet::__anon464
CLICK_DEQUEUE_CC	include/click/dequeue.cc	20;"	d	file:
CLICK_DEQUEUE_HH	include/click/dequeue.hh	8;"	d
CLICK_DEVICE_ADJUST_TICKETS	elements/bsdmodule/anydevice.hh	25;"	d
CLICK_DEVICE_ADJUST_TICKETS	elements/linuxmodule/anydevice.hh	25;"	d
CLICK_DEVICE_STATS	elements/linuxmodule/anydevice.hh	29;"	d
CLICK_DEVICE_UNRECEIVABLE_SK_BUFF	elements/linuxmodule/anydevice.hh	68;"	d
CLICK_DEVIRTUALIZEINFO_HH	elements/standard/devirtualizeinfo.hh	2;"	d
CLICK_DIRECTIPLOOKUP_HH	elements/ip/directiplookup.hh	3;"	d
CLICK_DISCARDNOFREE_HH	elements/standard/discardnofree.hh	2;"	d
CLICK_DISCARD_HH	elements/standard/discard.hh	2;"	d
CLICK_DMALLOC_REG	include/click/glue.hh	91;"	d
CLICK_DMALLOC_REG	include/click/glue.hh	93;"	d
CLICK_DRIVERMANAGER_HH	elements/standard/drivermanager.hh	3;"	d
CLICK_DRIVER_HH	include/click/driver.hh	3;"	d
CLICK_DROPBROADCASTS_HH	elements/standard/dropbroadcasts.hh	2;"	d
CLICK_DRR_HH	elements/standard/drr.hh	3;"	d
CLICK_DSDVROUTETABLE_HH	elements/grid/dsdvroutetable.hh	2;"	d
CLICK_DSR_H	elements/grid/dsr.hh	2;"	d
CLICK_DYNUDPIPENCAP_HH	elements/tcpudp/dynudpipencap.hh	2;"	d
CLICK_ECLASST_HH	tools/lib/eclasst.hh	3;"	d
CLICK_ELEM2MAKE	linuxmodule/Makefile	/^CLICK_ELEM2MAKE = $(top_builddir)\/click-buildtool elem2make --linux26$/;"	m
CLICK_ELEM2MAKE	linuxmodule/Makefile	/^CLICK_ELEM2MAKE = $(top_builddir)\/click-buildtool elem2make$/;"	m
CLICK_ELEM2PACKAGE	etc/pkg-bsdmodule.mk	/^CLICK_ELEM2PACKAGE ?= $(CLICK_BUILDTOOL) elem2package $(ELEM2PACKAGE_INCLUDES)$/;"	m
CLICK_ELEM2PACKAGE	etc/pkg-linuxmodule-26.mk	/^CLICK_ELEM2PACKAGE ?= $(CLICK_BUILDTOOL) elem2package $(ELEM2PACKAGE_INCLUDES)$/;"	m
CLICK_ELEM2PACKAGE	etc/pkg-linuxmodule.mk	/^CLICK_ELEM2PACKAGE ?= $(CLICK_BUILDTOOL) elem2package $(ELEM2PACKAGE_INCLUDES)$/;"	m
CLICK_ELEM2PACKAGE	etc/pkg-userlevel.mk	/^CLICK_ELEM2PACKAGE ?= $(CLICK_BUILDTOOL) elem2package $(ELEM2PACKAGE_INCLUDES)$/;"	m
CLICK_ELEMENTMAP_HH	tools/lib/elementmap.hh	3;"	d
CLICK_ELEMENTT_HH	tools/lib/elementt.hh	3;"	d
CLICK_ELEMENT_DEPRECATED	include/click/element.hh	/^    virtual bool run_task() CLICK_ELEMENT_DEPRECATED;$/;"	m	class:Element
CLICK_ELEMENT_DEPRECATED	include/click/element.hh	/^    virtual void run_timer() CLICK_ELEMENT_DEPRECATED;$/;"	m	class:Element
CLICK_ELEMENT_DEPRECATED	include/click/element.hh	26;"	d
CLICK_ELEMENT_DEPRECATED	lib/element.cc	23;"	d	file:
CLICK_ELEMENT_HH	include/click/element.hh	3;"	d
CLICK_ELEMFILTER_HH	include/click/elemfilter.hh	3;"	d
CLICK_ENDDECLS	include/click/config-bsdmodule.h	81;"	d
CLICK_ENDDECLS	include/click/config-linuxmodule.h	214;"	d
CLICK_ENDDECLS	include/click/config-ns.h	10;"	d
CLICK_ENDDECLS	include/click/config-userlevel.h	331;"	d
CLICK_ENSUREETHER_HH	elements/ethernet/ensureether.hh	2;"	d
CLICK_ERASEIPPAYLOAD_HH	elements/analysis/eraseippayload.hh	3;"	d
CLICK_ERRHXLARGE	include/click/type_traits.hh	72;"	d
CLICK_ERRHXLARGE	include/click/type_traits.hh	81;"	d
CLICK_ERRHXLARGE	include/click/type_traits.hh	90;"	d
CLICK_ERRHdLARGE	include/click/type_traits.hh	68;"	d
CLICK_ERRHdLARGE	include/click/type_traits.hh	77;"	d
CLICK_ERRHdLARGE	include/click/type_traits.hh	86;"	d
CLICK_ERRHoLARGE	include/click/type_traits.hh	70;"	d
CLICK_ERRHoLARGE	include/click/type_traits.hh	79;"	d
CLICK_ERRHoLARGE	include/click/type_traits.hh	88;"	d
CLICK_ERRHuLARGE	include/click/type_traits.hh	69;"	d
CLICK_ERRHuLARGE	include/click/type_traits.hh	78;"	d
CLICK_ERRHuLARGE	include/click/type_traits.hh	87;"	d
CLICK_ERRHxLARGE	include/click/type_traits.hh	71;"	d
CLICK_ERRHxLARGE	include/click/type_traits.hh	80;"	d
CLICK_ERRHxLARGE	include/click/type_traits.hh	89;"	d
CLICK_ERRORELEMENT_HH	include/click/standard/errorelement.hh	3;"	d
CLICK_ERRORTEST_HH	elements/test/errortest.hh	3;"	d
CLICK_ERROR_HH	include/click/error.hh	3;"	d
CLICK_ETHERADDRESS_HH	include/click/etheraddress.hh	3;"	d
CLICK_ETHERCOUNT_HH	elements/wifi/ethercount.hh	2;"	d
CLICK_ETHERENCAP_HH	elements/ethernet/etherencap.hh	2;"	d
CLICK_ETHERMIRROR_HH	elements/ethernet/ethermirror.hh	2;"	d
CLICK_ETHERPAUSESOURCE_HH	elements/ethernet/etherpausesource.hh	2;"	d
CLICK_ETHERSWITCH_HH	elements/etherswitch/etherswitch.hh	2;"	d
CLICK_ETHERVLANANNOENCAP_HH	elements/ethernet/ethervlanannoencap.hh	2;"	d
CLICK_ETHERVLANENCAP_HH	elements/ethernet/ethervlanencap.hh	2;"	d
CLICK_ETRAITS_HH	tools/lib/etraits.hh	3;"	d
CLICK_EWMA_HH	include/click/ewma.hh	2;"	d
CLICK_EXTRADECAP_HH	elements/wifi/extradecap.hh	2;"	d
CLICK_EXTRAENCAP_HH	elements/wifi/extraencap.hh	2;"	d
CLICK_FAKEPCAP_HH	elements/userlevel/fakepcap.hh	2;"	d
CLICK_FASTCLASSIFIER_HH	tools/click-fastclassifier/click-fastclassifier.hh	2;"	d
CLICK_FASTUDPSRC_BSDMODULE_HH	elements/bsdmodule/fastudpsrc.hh	2;"	d
CLICK_FILTERBYHOPS_HH	elements/grid/filterbyhops.hh	2;"	d
CLICK_FILTERBYRANGE_HH	elements/grid/filterbyrange.hh	2;"	d
CLICK_FILTERFAILURES_HH	elements/wifi/filterfailures.hh	2;"	d
CLICK_FILTERPHYERR_HH	elements/wifi/filterphyerr.hh	2;"	d
CLICK_FILTERTX_HH	elements/wifi/filtertx.hh	2;"	d
CLICK_FIXCONFIG_H	include/click/fixconfig.h	2;"	d
CLICK_FIXDSTLOC_HH	elements/grid/fixdstloc.hh	2;"	d
CLICK_FIXIPSRC_HH	elements/ip/fixipsrc.hh	2;"	d
CLICK_FLOODLOCQUERIER_HH	elements/grid/floodinglocquerier.hh	2;"	d
CLICK_FLOWINFO_HH	elements/standard/flowinfo.hh	3;"	d
CLICK_FREE	lib/glue.cc	185;"	d	file:
CLICK_FREE	lib/glue.cc	188;"	d	file:
CLICK_FROMCAPDUMP_HH	elements/analysis/fromcapdump.hh	3;"	d
CLICK_FROMDAGDUMP_HH	elements/analysis/fromdagdump.hh	3;"	d
CLICK_FROMDEVICE_BSDMODULE_HH	elements/bsdmodule/fromdevice.hh	2;"	d
CLICK_FROMDEVICE_HH	elements/linuxmodule/fromdevice.hh	3;"	d
CLICK_FROMDEVICE_USERLEVEL_HH	elements/userlevel/fromdevice.hh	2;"	d
CLICK_FROMDEVICE_USE_BRIDGE	elements/linuxmodule/anydevice.hh	78;"	d
CLICK_FROMDEVICE_USE_BRIDGE	elements/linuxmodule/fromdevice.cc	525;"	d	file:
CLICK_FROMDUMP_HH	elements/userlevel/fromdump.hh	3;"	d
CLICK_FROMFILE_HH	include/click/fromfile.hh	3;"	d
CLICK_FROMFLANDUMP_HH	elements/analysis/fromflandump.hh	3;"	d
CLICK_FROMHANDLER_HH	elements/wifi/fromhandler.hh	3;"	d
CLICK_FROMHOST_BSDMODULE_HH	elements/bsdmodule/fromhost.hh	3;"	d
CLICK_FROMHOST_HH	elements/linuxmodule/fromhost.hh	3;"	d
CLICK_FROMHOST_USERLEVEL_HH	elements/userlevel/fromhost.hh	3;"	d
CLICK_FROMIPSUMDUMP_HH	elements/analysis/fromipsumdump.hh	3;"	d
CLICK_FROMNETFLOWSUMDUMP_HH	elements/analysis/fromnetflowsumdump.hh	3;"	d
CLICK_FROMNLANRDUMP_HH	elements/analysis/fromnlanrdump.hh	3;"	d
CLICK_FROMRAWSOCKET_HH	elements/userlevel/fromrawsocket.hh	3;"	d
CLICK_FROMSIMDEVICE_HH	elements/ns/fromsimdevice.hh	2;"	d
CLICK_FROMSOCKET_HH	elements/userlevel/fromsocket.hh	3;"	d
CLICK_FROMTCPDUMP_HH	elements/analysis/fromtcpdump.hh	3;"	d
CLICK_FROMUSERDEVICE_HH	elements/linuxmodule/fromuserdevice.hh	2;"	d
CLICK_FRONTDROPQUEUE_HH	elements/standard/frontdropqueue.hh	2;"	d
CLICK_FTPPORTMAPPER_HH	elements/app/ftpportmapper.hh	2;"	d
CLICK_FULLNOTEQUEUE_HH	elements/standard/fullnotequeue.hh	3;"	d
CLICK_FUNCTIONTEST_HH	elements/test/functiontest.hh	3;"	d
CLICK_GAPRATE_HH	include/click/gaprate.hh	3;"	d
CLICK_GETIP6ADDRESS_HH	elements/ip6/getip6address.hh	2;"	d
CLICK_GETIPADDRESS_HH	elements/ip/getipaddress.hh	2;"	d
CLICK_GLOBAL_PACKET_POOL_COUNT	lib/packet.cc	230;"	d	file:
CLICK_GLUE_HH	include/click/glue.hh	3;"	d
CLICK_GMAKE	config.mk	/^CLICK_GMAKE=make$/;"	m
CLICK_GRIDENCAP_HH	elements/grid/gridencap.hh	2;"	d
CLICK_GRID_PROXY_HH	elements/grid/gridproxy.hh	2;"	d
CLICK_HANDLERCALL_HH	include/click/handlercall.hh	3;"	d
CLICK_HANDLERPROXY_HH	elements/userlevel/handlerproxy.hh	2;"	d
CLICK_HANDLERTASK_HH	elements/test/handlertask.hh	3;"	d
CLICK_HANDLER_HH	include/click/handler.hh	2;"	d
CLICK_HASHALLOCATOR_HH	include/click/hashallocator.hh	3;"	d
CLICK_HASHCODE_HH	include/click/hashcode.hh	2;"	d
CLICK_HASHCONTAINER_HH	include/click/hashcontainer.hh	2;"	d
CLICK_HASHMAP_CC	include/click/hashmap.cc	20;"	d	file:
CLICK_HASHMAP_HH	include/click/hashmap.hh	2;"	d
CLICK_HASHSWITCH_HH	elements/standard/hashswitch.hh	2;"	d
CLICK_HASHTABLETEST_HH	elements/test/hashtabletest.hh	3;"	d
CLICK_HASHTABLE_HH	include/click/hashtable.hh	2;"	d
CLICK_HAVE_BSDMODULE_DRIVER	config.mk	/^CLICK_HAVE_BSDMODULE_DRIVER=0$/;"	m
CLICK_HAVE_LINUXMODULE_DRIVER	config.mk	/^CLICK_HAVE_LINUXMODULE_DRIVER=0$/;"	m
CLICK_HAVE_USERLEVEL_DRIVER	config.mk	/^CLICK_HAVE_USERLEVEL_DRIVER=1$/;"	m
CLICK_HEAPTEST_HH	elements/test/heaptest.hh	3;"	d
CLICK_HEAP_HH	include/click/heap.hh	2;"	d
CLICK_HOSTETHERFILTER_HH	elements/ethernet/hostetherfilter.hh	2;"	d
CLICK_HUB_HH	elements/standard/hub.hh	2;"	d
CLICK_HZ	include/click/glue.hh	390;"	d
CLICK_HZ	include/click/glue.hh	398;"	d
CLICK_HZ	include/click/glue.hh	408;"	d
CLICK_ICMP6ERROR_HH	elements/ip6/icmp6error.hh	2;"	d
CLICK_ICMPERROR_HH	elements/icmp/icmperror.hh	2;"	d
CLICK_ICMPIPENCAP_HH	elements/icmp/icmpipencap.hh	2;"	d
CLICK_ICMPPINGENCAP_HH	elements/icmp/icmppingencap.hh	3;"	d
CLICK_ICMPPINGRESPONDER_HH	elements/icmp/icmppingresponder.hh	2;"	d
CLICK_ICMPPINGREWRITER_HH	elements/icmp/icmppingrewriter.hh	2;"	d
CLICK_ICMPREWRITER_HH	elements/icmp/icmprewriter.hh	2;"	d
CLICK_ICMPSENDPINGS_HH	elements/icmp/icmpsendpings.hh	3;"	d
CLICK_IDLE_HH	elements/standard/idle.hh	2;"	d
CLICK_IFP2FD	elements/bsdmodule/fromdevice.hh	73;"	d
CLICK_IFR_SIN	elements/userlevel/kerneltun.cc	262;"	d	file:
CLICK_IFR_SIN	elements/userlevel/kerneltun.cc	397;"	d	file:
CLICK_INFINITESOURCE_HH	elements/standard/infinitesource.hh	2;"	d
CLICK_INO_HH	include/click/ino.hh	3;"	d
CLICK_INSTALL_COMMON_HH	tools/click-install/common.hh	3;"	d
CLICK_INTEGERS_HH	include/click/integers.hh	3;"	d
CLICK_INTMAX_CVT	elements/standard/script.cc	769;"	d	file:
CLICK_INTMAX_CVT	elements/standard/script.cc	773;"	d	file:
CLICK_INT_MODULE_PARAM	linuxmodule/kernelversion.c	32;"	d	file:
CLICK_INT_MODULE_PARAM	linuxmodule/kernelversion.c	34;"	d	file:
CLICK_IOC_TOUSERDEVICE_GET_MULTI	include/click/llrpc.h	83;"	d
CLICK_IOC_TOUSERDEVICE_SET_MULTI	include/click/llrpc.h	84;"	d
CLICK_IP6ADDRESS_HH	include/click/ip6address.hh	3;"	d
CLICK_IP6ENCAP_HH	elements/ip6/ip6encap.hh	2;"	d
CLICK_IP6FLOWID_HH	include/click/ip6flowid.hh	3;"	d
CLICK_IP6FRAGMENTER_HH	elements/ip6/ip6fragmenter.hh	2;"	d
CLICK_IP6MIRROR_HH	elements/ip6/ip6mirror.hh	2;"	d
CLICK_IP6NDADVERTISER_HH	elements/ethernet/ip6ndadvertiser.hh	2;"	d
CLICK_IP6NDSOLICITOR_HH	elements/ethernet/ip6ndsolicitor.hh	2;"	d
CLICK_IP6PRINT_HH	elements/ip6/ip6print.hh	2;"	d
CLICK_IP6ROUTETABLE_HH	elements/ip6/ip6routetable.hh	3;"	d
CLICK_IP6TABLE_HH	include/click/ip6table.hh	3;"	d
CLICK_IPADDRESS_HH	include/click/ipaddress.hh	3;"	d
CLICK_IPADDRPAIRREWRITER_HH	elements/ip/ipaddrpairrewriter.hh	3;"	d
CLICK_IPADDRREWRITER_HH	elements/ip/ipaddrrewriter.hh	3;"	d
CLICK_IPCLASSIFIER_HH	elements/ip/ipclassifier.hh	2;"	d
CLICK_IPENCAP_HH	elements/ip/ipencap.hh	2;"	d
CLICK_IPFIELDINFO_HH	elements/ip/ipfieldinfo.hh	2;"	d
CLICK_IPFILTER_HH	elements/ip/ipfilter.hh	2;"	d
CLICK_IPFLOWID_HH	include/click/ipflowid.hh	3;"	d
CLICK_IPFLOWRAWSOCKETS_HH	elements/userlevel/ipflowrawsockets.hh	20;"	d
CLICK_IPFRAGMENTER_HH	elements/ip/ipfragmenter.hh	2;"	d
CLICK_IPFRAGMENTMAP_HH	elements/ip/ipfragmentmap.hh	2;"	d
CLICK_IPGWOPTIONS_HH	elements/ip/ipgwoptions.hh	2;"	d
CLICK_IPINPUTCOMBO_HH	elements/ip/ipinputcombo.hh	2;"	d
CLICK_IPMIRROR_HH	elements/ip/ipmirror.hh	2;"	d
CLICK_IPNAMEINFO_HH	elements/ip/ipnameinfo.hh	2;"	d
CLICK_IPOUTPUTCOMBO_HH	elements/ip/ipoutputcombo.hh	2;"	d
CLICK_IPPRINT_HH	elements/ip/ipprint.hh	2;"	d
CLICK_IPRATEMON_HH	elements/ip/ipratemon.hh	2;"	d
CLICK_IPREASSEMBLER_HH	elements/ip/ipreassembler.hh	3;"	d
CLICK_IPREWRITERBASE_HH	elements/ip/iprewriterbase.hh	3;"	d
CLICK_IPREWRITER_HH	elements/tcpudp/iprewriter.hh	2;"	d
CLICK_IPROUTETABLE_HH	elements/ip/iproutetable.hh	3;"	d
CLICK_IPRWPATTERNS_HH	elements/ip/iprwpatterns.hh	2;"	d
CLICK_IPRW_MAPPING_HH	elements/ip/iprwmapping.hh	3;"	d
CLICK_IPRW_PATTERN_HH	elements/ip/iprwpattern.hh	3;"	d
CLICK_IPSECAES_HH	elements/ipsec/aes.hh	2;"	d
CLICK_IPSECAUTHHMACSHA1_HH	elements/ipsec/hmacsha1.hh	2;"	d
CLICK_IPSECAUTHSHA1_HH	elements/ipsec/sha1.hh	2;"	d
CLICK_IPSECDES_HH	elements/ipsec/des.hh	2;"	d
CLICK_IPSECENCAP_HH	elements/ipsec/ipsecencap.hh	2;"	d
CLICK_IPSECROUTETABLE_HH	elements/ipsec/ipsecroutetable.hh	3;"	d
CLICK_IPSEC_DESP_HH	elements/ipsec/desp.hh	2;"	d
CLICK_IPSEC_ESP_HH	elements/ipsec/esp.hh	2;"	d
CLICK_IPSUMDUMPINFO_HH	elements/analysis/ipsumdumpinfo.hh	3;"	d
CLICK_IPSUMDUMP_ANNO_HH	elements/analysis/ipsumdump_anno.hh	2;"	d
CLICK_IPSUMDUMP_ICMP_HH	elements/analysis/ipsumdump_icmp.hh	2;"	d
CLICK_IPSUMDUMP_IP_HH	elements/analysis/ipsumdump_ip.hh	2;"	d
CLICK_IPSUMDUMP_LINK_HH	elements/analysis/ipsumdump_link.hh	2;"	d
CLICK_IPSUMDUMP_PAYLOAD_HH	elements/analysis/ipsumdump_payload.hh	2;"	d
CLICK_IPSUMDUMP_TCP_HH	elements/analysis/ipsumdump_tcp.hh	2;"	d
CLICK_IPSUMDUMP_UDP_HH	elements/analysis/ipsumdump_udp.hh	2;"	d
CLICK_IPTABLE_HH	include/click/iptable.hh	3;"	d
CLICK_JIFFIES_MONOTONIC	include/click/glue.hh	389;"	d
CLICK_KERNELFILTER_HH	elements/userlevel/kernelfilter.hh	3;"	d
CLICK_KERNELHANDLERPROXY_HH	elements/userlevel/khandlerproxy.hh	2;"	d
CLICK_KERNELTAP_HH	elements/userlevel/kerneltap.hh	3;"	d
CLICK_KERNELTUN_HH	elements/userlevel/kerneltun.hh	3;"	d
CLICK_LALLOC	include/click/glue.hh	100;"	d
CLICK_LALLOC	include/click/glue.hh	107;"	d
CLICK_LALLOC_MAX_SMALL	lib/glue.cc	374;"	d	file:
CLICK_LEXERTINFO_HH	tools/lib/lexertinfo.hh	3;"	d
CLICK_LEXERT_HH	tools/lib/lexert.hh	3;"	d
CLICK_LEXER_HH	include/click/lexer.hh	3;"	d
CLICK_LFREE	include/click/glue.hh	101;"	d
CLICK_LFREE	include/click/glue.hh	108;"	d
CLICK_LIBDIR	include/click/pathvars.h	10;"	d
CLICK_LINEARIPLOOKUP_HH	elements/ip/lineariplookup.hh	3;"	d
CLICK_LINKTABLE_HH	elements/wifi/linktable.hh	2;"	d
CLICK_LINKUNQUEUE_HH	elements/standard/linkunqueue.hh	3;"	d
CLICK_LINUXIPLOOKUP_HH	elements/ip/lookupiproutelinux.hh	2;"	d
CLICK_LINUXMODULE	linuxmodule/proclikefs.c	20;"	d	file:
CLICK_LINUXMODULE_2_6	config.mk	/^CLICK_LINUXMODULE_2_6=$/;"	m
CLICK_LISTENETHERSWITCH_HH	elements/etherswitch/listenetherswitch.hh	2;"	d
CLICK_LISTTEST_HH	elements/test/listtest.hh	2;"	d
CLICK_LIST_HH	include/click/list.hh	2;"	d
CLICK_LITTLE_ENDIAN	include/click/config.h	14;"	d
CLICK_LLRPC_ABANDON_HANDLER	include/click/llrpc.h	86;"	d
CLICK_LLRPC_CALL_HANDLER	include/click/llrpc.h	87;"	d
CLICK_LLRPC_CALL_HANDLER_FLAG_RAW	include/click/llrpc.h	102;"	d
CLICK_LLRPC_COUNTS_SIZE	include/click/llrpc.h	95;"	d
CLICK_LLRPC_GET	include/click/llrpc.h	115;"	d
CLICK_LLRPC_GET	include/click/llrpc.h	151;"	d
CLICK_LLRPC_GET	include/click/llrpc.h	164;"	d
CLICK_LLRPC_GET_COUNT	include/click/llrpc.h	72;"	d
CLICK_LLRPC_GET_COUNTS	include/click/llrpc.h	73;"	d
CLICK_LLRPC_GET_DATA	include/click/llrpc.h	113;"	d
CLICK_LLRPC_GET_DATA	include/click/llrpc.h	142;"	d
CLICK_LLRPC_GET_DATA	include/click/llrpc.h	162;"	d
CLICK_LLRPC_GET_RATE	include/click/llrpc.h	70;"	d
CLICK_LLRPC_GET_RATES	include/click/llrpc.h	71;"	d
CLICK_LLRPC_GET_SWITCH	include/click/llrpc.h	74;"	d
CLICK_LLRPC_H	include/click/llrpc.h	2;"	d
CLICK_LLRPC_HTON	include/click/llrpc.h	178;"	d
CLICK_LLRPC_HTON	include/click/llrpc.h	185;"	d
CLICK_LLRPC_IPRATEMON_FWD_N_REV_AVG	include/click/llrpc.h	81;"	d
CLICK_LLRPC_IPRATEMON_LEVEL_FWD_AVG	include/click/llrpc.h	79;"	d
CLICK_LLRPC_IPRATEMON_LEVEL_REV_AVG	include/click/llrpc.h	80;"	d
CLICK_LLRPC_IPRATEMON_SET_ANNO_LEVEL	include/click/llrpc.h	82;"	d
CLICK_LLRPC_IPREWRITER_MAP_TCP	include/click/llrpc.h	77;"	d
CLICK_LLRPC_IPREWRITER_MAP_UDP	include/click/llrpc.h	78;"	d
CLICK_LLRPC_MAP_IPADDRESS	include/click/llrpc.h	76;"	d
CLICK_LLRPC_NTOH	include/click/llrpc.h	173;"	d
CLICK_LLRPC_NTOH	include/click/llrpc.h	184;"	d
CLICK_LLRPC_PROXY	include/click/llrpc.h	69;"	d
CLICK_LLRPC_PUT	include/click/llrpc.h	116;"	d
CLICK_LLRPC_PUT	include/click/llrpc.h	153;"	d
CLICK_LLRPC_PUT	include/click/llrpc.h	165;"	d
CLICK_LLRPC_PUT_DATA	include/click/llrpc.h	114;"	d
CLICK_LLRPC_PUT_DATA	include/click/llrpc.h	146;"	d
CLICK_LLRPC_PUT_DATA	include/click/llrpc.h	163;"	d
CLICK_LLRPC_RAW_HANDLER	include/click/llrpc.h	85;"	d
CLICK_LLRPC_SET_SWITCH	include/click/llrpc.h	75;"	d
CLICK_LOOKUPIP6ROUTE_HH	elements/ip6/lookupip6route.hh	2;"	d
CLICK_MADWIFIRATE_HH	elements/wifi/madwifirate.hh	2;"	d
CLICK_MAKE_VERSION_CODE	include/click/config.h	153;"	d
CLICK_MARKIP6HEADER_HH	elements/ip6/markip6header.hh	2;"	d
CLICK_MARKIPCE_HH	elements/ip/markipce.hh	2;"	d
CLICK_MARKIPHEADER_HH	elements/ip/markipheader.hh	2;"	d
CLICK_MARKMACHEADER_HH	elements/standard/markmacheader.hh	2;"	d
CLICK_MASTER_HH	include/click/master.hh	3;"	d
CLICK_MD5_H	include/click/md5.h	53;"	d
CLICK_MESSAGEELEMENT_HH	elements/standard/messageelement.hh	3;"	d
CLICK_METER_HH	elements/standard/meter.hh	2;"	d
CLICK_MIXEDQUEUE_HH	elements/standard/mixedqueue.hh	3;"	d
CLICK_MSQUEUE_HH	elements/standard/msqueue.hh	2;"	d
CLICK_MULTIOPQUEUE_HH	elements/local/FlowNet/common/PacketQueue.hh	3;"	d
CLICK_MULTITHREAD_SPINLOCK	include/click/sync.hh	18;"	d
CLICK_NAME	include/click/config-bsdmodule.h	83;"	d
CLICK_NAME	include/click/config-linuxmodule.h	216;"	d
CLICK_NAME	include/click/config-ns.h	12;"	d
CLICK_NAME	include/click/config-userlevel.h	333;"	d
CLICK_NAMEINFO_HH	include/click/nameinfo.hh	3;"	d
CLICK_NEIGHBORHOODTEST_HH	elements/test/neighborhoodtest.hh	3;"	d
CLICK_NET_IF_H	elements/grid/airoinfo.hh	13;"	d
CLICK_NOINLINE	include/click/config.h	179;"	d
CLICK_NOINLINE	include/click/config.h	181;"	d
CLICK_NOINLINE	include/click/config.h	183;"	d
CLICK_NOTIFIERDEBUG_HH	elements/test/notifierdebug.hh	2;"	d
CLICK_NOTIFIERQUEUE_HH	elements/standard/notifierqueue.hh	3;"	d
CLICK_NOTIFIER_HH	include/click/notifier.hh	3;"	d
CLICK_NO_ENDIAN	include/click/config.h	15;"	d
CLICK_NULLELEMENT_HH	elements/standard/nullelement.hh	2;"	d
CLICK_NULLS_HH	elements/standard/nulls.hh	2;"	d
CLICK_NULLTASK_HH	elements/test/nulltask.hh	3;"	d
CLICK_OPENAUTHREQUESTER_HH	elements/wifi/station/openauthrequester.hh	2;"	d
CLICK_OPENAUTHRESPONDER_HH	elements/wifi/ap/openauthresponder.hh	2;"	d
CLICK_PACKAGE_HH	include/click/package.hh	2;"	d
CLICK_PACKAGE_LOADED	lib/driver.cc	60;"	d	file:
CLICK_PACKED_STRUCTURE	include/click/config.h	188;"	d
CLICK_PACKED_STRUCTURE	include/click/config.h	192;"	d
CLICK_PACKETLOGGER2_HH	elements/grid/packetlogger2.hh	2;"	d
CLICK_PACKETLOGGER_HH	elements/grid/packetlogger.hh	2;"	d
CLICK_PACKETSTORE_HH	elements/wifi/packetstore.hh	2;"	d
CLICK_PACKETTEST_HH	elements/test/packettest.hh	3;"	d
CLICK_PACKET_ANNO_HH	include/click/packet_anno.hh	2;"	d
CLICK_PACKET_HH	include/click/packet.hh	3;"	d
CLICK_PACKET_POOL_BUFSIZ	lib/packet.cc	228;"	d	file:
CLICK_PACKET_POOL_SIZE	lib/packet.cc	229;"	d	file:
CLICK_PAINTSWITCH_HH	elements/standard/paintswitch.hh	2;"	d
CLICK_PAINTTEE_HH	elements/standard/painttee.hh	2;"	d
CLICK_PAINT_HH	elements/standard/paint.hh	2;"	d
CLICK_PAIR_HH	include/click/pair.hh	3;"	d
CLICK_PATHVARS_H	include/click/pathvars.h	4;"	d
CLICK_PATH_HH	elements/wifi/path.hh	2;"	d
CLICK_PERFCTR_HH	include/click/perfctr-i586.hh	2;"	d
CLICK_PI_HH	elements/aqm/pi.hh	3;"	d
CLICK_POKEHANDLERS_HH	elements/standard/pokehandlers.hh	3;"	d
CLICK_POLLDEVICE_HH	elements/linuxmodule/polldevice.hh	2;"	d
CLICK_PORTINFO_HH	include/click/standard/portinfo.hh	3;"	d
CLICK_PORT_NUM_TAP	elements/local/OpenFlow/datapath.hh	76;"	d
CLICK_PORT_START_NUM_ITF	elements/local/OpenFlow/datapath.hh	77;"	d
CLICK_POUNDRADIXIPLOOKUP_HH	elements/ip/poundradixiplookup.hh	2;"	d
CLICK_PRETTY_HTML_HH	tools/click-pretty/html.hh	3;"	d
CLICK_PRINTOLD_HH	elements/userlevel/printold.hh	2;"	d
CLICK_PRINTTXFEEDBACK_HH	elements/wifi/printtxfeedback.hh	2;"	d
CLICK_PRINTWIFI_HH	elements/wifi/printwifi.hh	2;"	d
CLICK_PRINT_HH	elements/standard/print.hh	2;"	d
CLICK_PRIOSCHED_HH	elements/standard/priosched.hh	3;"	d
CLICK_PRISM2DECAP_HH	elements/wifi/prism2decap.hh	2;"	d
CLICK_PRISM2ENCAP_HH	elements/wifi/prism2encap.hh	2;"	d
CLICK_PROBEREQUESTER_HH	elements/wifi/station/proberequester.hh	2;"	d
CLICK_PROBERESPONDER_HH	elements/wifi/ap/proberesponder.hh	2;"	d
CLICK_PROBETXRATE_HH	elements/wifi/probetxrate.hh	2;"	d
CLICK_PROCESSINGT_HH	tools/lib/processingt.hh	3;"	d
CLICK_PROGRESSBAR_HH	elements/userlevel/progressbar.hh	3;"	d
CLICK_PROTOCOLTRANSLATOR46_HH	elements/ip6/protocoltranslator46.hh	2;"	d
CLICK_PROTOCOLTRANSLATOR64_HH	elements/ip6/protocoltranslator64.hh	2;"	d
CLICK_PULLSWITCH_HH	elements/standard/pullswitch.hh	2;"	d
CLICK_PUSHANNO_HH	elements/wifi/pushanno.hh	2;"	d
CLICK_QUEUETHREADTEST_HH	elements/test/queuethreadtest.hh	3;"	d
CLICK_QUEUEYANKTEST_HH	elements/test/queueyanktest.hh	3;"	d
CLICK_QUEUE_HH	elements/grid/qvec.hh	8;"	d
CLICK_QUICKNOTEQUEUE_HH	elements/standard/quicknotequeue.hh	3;"	d
CLICK_QUITWATCHER_HH	elements/standard/quitwatcher.hh	2;"	d
CLICK_RADIOTAPDECAP_HH	elements/wifi/radiotapdecap.hh	2;"	d
CLICK_RADIOTAPENCAP_HH	elements/wifi/radiotapencap.hh	2;"	d
CLICK_RADIOTAP_PRESENT	elements/wifi/radiotapencap.cc	32;"	d	file:
CLICK_RADIXIPLOOKUP_HH	elements/ip/radixiplookup.hh	3;"	d
CLICK_RADIXIPSECLOOKUP_HH	elements/ipsec/radixipseclookup.hh	3;"	d
CLICK_RANDOMERROR_HH	elements/standard/randomerror.hh	2;"	d
CLICK_RANDOMSAMPLE_HH	elements/standard/randomsample.hh	3;"	d
CLICK_RANDOMSEED_HH	elements/test/randomseed.hh	3;"	d
CLICK_RANDOMSOURCE_HH	elements/standard/randomsource.hh	2;"	d
CLICK_RANDOMSWITCH_HH	elements/standard/randomswitch.hh	3;"	d
CLICK_RAND_MAX	include/click/glue.hh	134;"	d
CLICK_RAND_MAX	include/click/glue.hh	136;"	d
CLICK_RAND_MAX	include/click/glue.hh	138;"	d
CLICK_RANGEIPLOOKUP_HH	elements/ip/rangeiplookup.hh	3;"	d
CLICK_RATEDSOURCE_HH	elements/standard/ratedsource.hh	2;"	d
CLICK_RATEDSPLITTER_HH	elements/standard/ratedsplitter.hh	3;"	d
CLICK_RATEDUNQUEUE_HH	elements/standard/ratedunqueue.hh	3;"	d
CLICK_RATESETTABLE_BANDWIDTHSHAPER_HH	elements/local/standard/ratesettable_bandwidthshaper.hh	3;"	d
CLICK_RAWSOCKET_HH	elements/userlevel/rawsocket.hh	3;"	d
CLICK_RC4	elements/wifi/rc4.hh	42;"	d
CLICK_READANNO_HH	elements/wifi/readanno.hh	2;"	d
CLICK_RED_HH	elements/aqm/red.hh	3;"	d
CLICK_RFC2507C_HH	elements/ip/rfc2507c.hh	2;"	d
CLICK_RFC2507D_HH	elements/ip/rfc2507d.hh	2;"	d
CLICK_RIPSEND_HH	elements/ip/ripsend.hh	2;"	d
CLICK_ROUTERTHREAD_HH	include/click/routerthread.hh	3;"	d
CLICK_ROUTERT_HH	tools/lib/routert.hh	3;"	d
CLICK_ROUTERVISITOR_HH	include/click/routervisitor.hh	3;"	d
CLICK_ROUTER_HH	include/click/router.hh	3;"	d
CLICK_RRIPMAPPER_HH	elements/ip/rripmapper.hh	2;"	d
CLICK_RRSCHED_HH	elements/standard/rrsched.hh	3;"	d
CLICK_RRSWITCH_HH	elements/standard/rrswitch.hh	2;"	d
CLICK_RUNPARSE_HH	tools/lib/runparse.hh	3;"	d
CLICK_RXSTATS_HH	elements/wifi/rxstats.hh	2;"	d
CLICK_SADATATUPLE_HH	elements/ipsec/sadatatuple.hh	2;"	d
CLICK_SATABLE_HH	elements/ipsec/satable.hh	2;"	d
CLICK_SCHEDORDERTEST_HH	elements/test/schedordertest.hh	3;"	d
CLICK_SCHEDULEINFO_HH	include/click/standard/scheduleinfo.hh	3;"	d
CLICK_SCHED_DEBUG	bsdmodule/sched.cc	21;"	d	file:
CLICK_SCHED_DEBUG	linuxmodule/sched.cc	21;"	d	file:
CLICK_SCRIPT_HH	elements/standard/script.hh	3;"	d
CLICK_SELECTSET_HH	include/click/selectset.hh	3;"	d
CLICK_SENDPATTERN_HH	elements/radio/sendpattern.hh	2;"	d
CLICK_SETANNOBYTE_HH	elements/standard/setannobyte.hh	2;"	d
CLICK_SETCRC32_HH	elements/standard/setcrc32.hh	2;"	d
CLICK_SETIP6DSCP_HH	elements/ip6/setip6dscp.hh	2;"	d
CLICK_SETIPADDRESS_HH	elements/ip/setipaddress.hh	2;"	d
CLICK_SETIPCHECKSUM_HH	elements/ip/setipchecksum.hh	2;"	d
CLICK_SETIPDSCP_HH	elements/ip/setipdscp.hh	2;"	d
CLICK_SETIPECN_HH	elements/ip/setipecn.hh	2;"	d
CLICK_SETPACKETTYPE_HH	elements/standard/setpackettype.hh	3;"	d
CLICK_SETRTS_HH	elements/wifi/setrts.hh	2;"	d
CLICK_SETTCPCHECKSUM_HH	elements/tcpudp/settcpchecksum.hh	2;"	d
CLICK_SETTIMESTAMPDELTA_HH	elements/analysis/settimestampdelta.hh	3;"	d
CLICK_SETTIMESTAMP_HH	elements/standard/settimestamp.hh	3;"	d
CLICK_SETTXPOWER_HH	elements/wifi/settxpower.hh	2;"	d
CLICK_SETTXRATE_HH	elements/wifi/settxrate.hh	2;"	d
CLICK_SETUDPCHECKSUM_HH	elements/tcpudp/setudpchecksum.hh	3;"	d
CLICK_SETVLANANNO_HH	elements/ethernet/setvlananno.hh	2;"	d
CLICK_SHAPER_HH	elements/standard/shaper.hh	3;"	d
CLICK_SIMPACKETANALYZER_HH	elements/ns/simpacketanalyzer.hh	2;"	d
CLICK_SIMPLEIDLE_HH	elements/simple/simpleidle.hh	2;"	d
CLICK_SIMPLEPRIOSCHED_HH	elements/simple/simplepriosched.hh	3;"	d
CLICK_SIMPLEPULLSWITCH_HH	elements/simple/simplepullswitch.hh	2;"	d
CLICK_SIMPLEQUEUE_HH	elements/standard/simplequeue.hh	3;"	d
CLICK_SIMPLERRSCHED_HH	elements/simple/simplerrsched.hh	3;"	d
CLICK_SIZE_PACKED_ATTRIBUTE	elements/wifi/athdesc.h	/^} CLICK_SIZE_PACKED_ATTRIBUTE;$/;"	v	typeref:struct:ar5212_desc
CLICK_SIZE_PACKED_ATTRIBUTE	elements/wifi/athdesc.h	/^} CLICK_SIZE_PACKED_ATTRIBUTE;$/;"	v	typeref:struct:ar5212_rx_status
CLICK_SIZE_PACKED_ATTRIBUTE	include/click/config.h	190;"	d
CLICK_SIZE_PACKED_ATTRIBUTE	include/click/config.h	194;"	d
CLICK_SIZE_PACKED_ATTRIBUTE	include/click/etheraddress.hh	/^} CLICK_SIZE_PACKED_ATTRIBUTE;$/;"	v	typeref:class:EtherAddress
CLICK_SIZE_PACKED_ATTRIBUTE	include/clicknet/dhcp.h	/^} CLICK_SIZE_PACKED_ATTRIBUTE;$/;"	v	typeref:struct:click_dhcp
CLICK_SIZE_PACKED_ATTRIBUTE	include/clicknet/ether.h	/^} CLICK_SIZE_PACKED_ATTRIBUTE;$/;"	v	typeref:struct:click_ether
CLICK_SIZE_PACKED_ATTRIBUTE	include/clicknet/ether.h	/^} CLICK_SIZE_PACKED_ATTRIBUTE;$/;"	v	typeref:struct:click_ether_vlan
CLICK_SIZE_PACKED_ATTRIBUTE	include/clicknet/fddi.h	/^} CLICK_SIZE_PACKED_ATTRIBUTE;$/;"	v	typeref:struct:click_fddi
CLICK_SIZE_PACKED_ATTRIBUTE	include/clicknet/fddi.h	/^} CLICK_SIZE_PACKED_ATTRIBUTE;$/;"	v	typeref:struct:click_fddi_8022_1
CLICK_SIZE_PACKED_ATTRIBUTE	include/clicknet/fddi.h	/^} CLICK_SIZE_PACKED_ATTRIBUTE;$/;"	v	typeref:struct:click_fddi_8022_2
CLICK_SIZE_PACKED_ATTRIBUTE	include/clicknet/fddi.h	/^} CLICK_SIZE_PACKED_ATTRIBUTE;$/;"	v	typeref:struct:click_fddi_snap
CLICK_SIZE_PACKED_ATTRIBUTE	include/clicknet/llc.h	/^} CLICK_SIZE_PACKED_ATTRIBUTE;$/;"	v	typeref:struct:click_llc
CLICK_SIZE_PACKED_ATTRIBUTE	include/clicknet/wifi.h	/^} CLICK_SIZE_PACKED_ATTRIBUTE;$/;"	v	typeref:struct:click_wifi
CLICK_SIZE_PACKED_ATTRIBUTE	include/clicknet/wifi.h	/^} CLICK_SIZE_PACKED_ATTRIBUTE;$/;"	v	typeref:struct:click_wifi_extra
CLICK_SIZE_PACKED_STRUCTURE	include/click/config.h	189;"	d
CLICK_SIZE_PACKED_STRUCTURE	include/click/config.h	193;"	d
CLICK_SKBMGR_HH	include/click/skbmgr.hh	3;"	d
CLICK_SNOOPTCP_HH	elements/tcpudp/snooptcp.hh	2;"	d
CLICK_SNPRINTF_ATTR	include/click/straccum.hh	/^    StringAccum &snprintf(int n, const char *format, ...) CLICK_SNPRINTF_ATTR;$/;"	m	class:StringAccum
CLICK_SNPRINTF_ATTR	include/click/straccum.hh	18;"	d
CLICK_SNPRINTF_ATTR	include/click/straccum.hh	641;"	d
CLICK_SOCKET_HH	elements/userlevel/socket.hh	3;"	d
CLICK_SORTEDIPLOOKUP_HH	elements/ip/sortediplookup.hh	3;"	d
CLICK_SORTEDSCHED_HH	elements/threads/balancedthreadsched.hh	3;"	d
CLICK_SORTTEST_HH	elements/test/sorttest.hh	3;"	d
CLICK_SOURCEIPMAPPER_HH	elements/ip/siphmapper.hh	2;"	d
CLICK_SPANTREE_HH	elements/etherswitch/spantree.hh	2;"	d
CLICK_SPECIALIZER_HH	tools/click-devirtualize/specializer.hh	2;"	d
CLICK_SPINLOCKACQUIRE_HH	elements/threads/spinlockacquire.hh	2;"	d
CLICK_SPINLOCKINFO_HH	elements/threads/spinlockinfo.hh	2;"	d
CLICK_SPINLOCKRELEASE_HH	elements/threads/spinlockrelease.hh	2;"	d
CLICK_STATELESSTCPRESP_HH	elements/tcpudp/statelesstcpresp.hh	2;"	d
CLICK_STATICIPLOOKUP_HH	elements/ip/lookupiproute.hh	3;"	d
CLICK_STATICPULLSWITCH_HH	elements/standard/staticpullswitch.hh	2;"	d
CLICK_STATICSWITCH_HH	elements/standard/staticswitch.hh	2;"	d
CLICK_STATIONTABLE_HH	elements/wifi/ap/stationtable.hh	2;"	d
CLICK_STATS	include/click/config.h	30;"	d
CLICK_STORAGE_HH	include/click/standard/storage.hh	3;"	d
CLICK_STOREDATA_HH	elements/standard/storedata.hh	3;"	d
CLICK_STOREETHERADDRESS_HH	elements/ethernet/storeetheraddress.hh	2;"	d
CLICK_STOREIPADDRESS_HH	elements/ip/storeipaddress.hh	2;"	d
CLICK_STORETIMESTAMP_HH	elements/analysis/storetimestamp.hh	3;"	d
CLICK_STOREUDPTIMESEQRECORD_HH	elements/analysis/storeudptimeseqrecord.hh	17;"	d
CLICK_STRACCUM_HH	include/click/straccum.hh	3;"	d
CLICK_STRIDESCHED_HH	elements/standard/stridesched.hh	3;"	d
CLICK_STRIDESWITCH_HH	elements/standard/strideswitch.hh	2;"	d
CLICK_STRING_HH	include/click/string.hh	3;"	d
CLICK_STRIPDSRHEADER_HH	elements/grid/stripdsrheader.hh	2;"	d
CLICK_STRIPETHERHEADER_HH	elements/ethernet/stripetherheader.hh	2;"	d
CLICK_STRIPETHERVLANHEADER_HH	elements/ethernet/stripethervlanheader.hh	2;"	d
CLICK_STRIPIPHEADER_HH	elements/ip/stripipheader.hh	2;"	d
CLICK_STRIPTONET_HH	elements/standard/striptonet.hh	3;"	d
CLICK_STRIP_HH	elements/standard/strip.hh	3;"	d
CLICK_SUPPRESSOR_HH	elements/standard/suppressor.hh	2;"	d
CLICK_SWITCH_HH	elements/standard/switch.hh	2;"	d
CLICK_SYNC_HH	include/click/sync.hh	3;"	d
CLICK_TASK_HH	include/click/task.hh	3;"	d
CLICK_TCPFRAGMENTER_HH	elements/tcpudp/tcpfragmenter.hh	2;"	d
CLICK_TCPIPSEND_HH	elements/tcpudp/tcpipsend.hh	2;"	d
CLICK_TCPREWRITER_HH	elements/tcpudp/tcprewriter.hh	2;"	d
CLICK_TEE_HH	elements/standard/tee.hh	2;"	d
CLICK_THREADMONITOR_HH	elements/linuxmodule/threadmonitor.hh	3;"	d
CLICK_THREADSAFEQUEUE_HH	elements/standard/threadsafequeue.hh	3;"	d
CLICK_THREADSCHED_HH	include/click/standard/threadsched.hh	3;"	d
CLICK_TIMEDSINK_HH	elements/standard/timedsink.hh	2;"	d
CLICK_TIMEDSOURCE_HH	elements/standard/timedsource.hh	2;"	d
CLICK_TIMEDUNQUEUE_HH	elements/standard/timedunqueue.hh	2;"	d
CLICK_TIMEFILTER_HH	elements/analysis/timefilter.hh	3;"	d
CLICK_TIMERANGE_HH	elements/analysis/timerange.hh	3;"	d
CLICK_TIMERSET_HH	include/click/timerset.hh	3;"	d
CLICK_TIMERTEST_HH	elements/test/timertest.hh	3;"	d
CLICK_TIMER_HH	include/click/timer.hh	3;"	d
CLICK_TIMESORTEDSCHED_HH	elements/analysis/timesortedsched.hh	3;"	d
CLICK_TIMESTAMPACCUM_HH	elements/analysis/timestampaccum.hh	3;"	d
CLICK_TIMESTAMP_HH	include/click/timestamp.hh	3;"	d
CLICK_TODEVICE_BSDMODULE_HH	elements/bsdmodule/todevice.hh	2;"	d
CLICK_TODEVICE_HH	elements/linuxmodule/todevice.hh	2;"	d
CLICK_TODEVICE_USERLEVEL_HH	elements/userlevel/todevice.hh	2;"	d
CLICK_TODUMP_HH	elements/userlevel/todump.hh	3;"	d
CLICK_TOHOSTSNIFFERS_HH	elements/bsdmodule/tohostsniffers.hh	3;"	d
CLICK_TOHOSTSNIFFERS_HH	elements/linuxmodule/tohostsniffers.hh	3;"	d
CLICK_TOHOST_BSDMODULE_HH	elements/bsdmodule/tohost.hh	2;"	d
CLICK_TOHOST_HH	elements/linuxmodule/tohost.hh	3;"	d
CLICK_TOHOST_USERLEVEL_HH	elements/userlevel/tohost.hh	3;"	d
CLICK_TOIPFLOWDUMPS_HH	elements/analysis/toipflowdumps.hh	3;"	d
CLICK_TOIPSUMDUMP_HH	elements/analysis/toipsumdump.hh	3;"	d
CLICK_TOKENBUCKETTEST_HH	elements/test/tokenbuckettest.hh	3;"	d
CLICK_TOKENBUCKET_HH	include/click/tokenbucket.hh	3;"	d
CLICK_TONSTRACE_HH	elements/ns/tosimtrace.hh	2;"	d
CLICK_TOOLUTILS_HH	tools/lib/toolutils.hh	2;"	d
CLICK_TORAWSOCKET_HH	elements/userlevel/torawsocket.hh	3;"	d
CLICK_TOSIMDEVICE_HH	elements/ns/tosimdevice.hh	2;"	d
CLICK_TOSOCKET_HH	elements/userlevel/tosocket.hh	3;"	d
CLICK_TOUSERDEVICE_HH	elements/linuxmodule/touserdevice.hh	2;"	d
CLICK_TRUNCATEIPPAYLOAD_HH	elements/ip/truncateippayload.hh	3;"	d
CLICK_TRUNCATE_HH	elements/standard/truncate.hh	3;"	d
CLICK_TYPE_TRAITS_HH	include/click/type_traits.hh	2;"	d
CLICK_UDPIP6ENCAP_HH	elements/tcpudp/udpip6encap.hh	2;"	d
CLICK_UDPIPENCAP_HH	elements/tcpudp/udpipencap.hh	2;"	d
CLICK_UDPREWRITER_HH	elements/tcpudp/udprewriter.hh	2;"	d
CLICK_UMLSWITCH_HH	elements/userlevel/umlswitch.hh	3;"	d
CLICK_UNQUEUE2_HH	elements/standard/unqueue2.hh	2;"	d
CLICK_UNQUEUE_HH	elements/standard/unqueue.hh	2;"	d
CLICK_UNSTRIPDSRHEADER_HH	elements/grid/unstripdsrheader.hh	2;"	d
CLICK_UNSTRIPIPHEADER_HH	elements/ip/unstripipheader.hh	2;"	d
CLICK_UNSTRIP_HH	elements/standard/unstrip.hh	2;"	d
CLICK_UPSTREAMNOTIFIER_HH	elements/test/upstreamnotifier.hh	2;"	d
CLICK_USERLEVEL	include/click/config-ns.h	20;"	d
CLICK_USERLEVEL	include/click/config.h	229;"	d
CLICK_USERUTILS_HH	include/click/userutils.hh	3;"	d
CLICK_USING_DECLS	include/click/config-bsdmodule.h	82;"	d
CLICK_USING_DECLS	include/click/config-linuxmodule.h	215;"	d
CLICK_USING_DECLS	include/click/config-ns.h	11;"	d
CLICK_USING_DECLS	include/click/config-userlevel.h	332;"	d
CLICK_VARIABLEENVIRONMENT_HH	include/click/variableenv.hh	3;"	d
CLICK_VECTORTEST_HH	elements/test/vectortest.hh	3;"	d
CLICK_VECTOR_CC	include/click/vector.cc	20;"	d	file:
CLICK_VECTOR_HH	include/click/vector.hh	2;"	d
CLICK_VERSION	include/click/config.h	24;"	d
CLICK_VERSION_CODE	include/click/config.h	27;"	d
CLICK_VLANDECAP_HH	elements/ethernet/vlandecap.hh	2;"	d
CLICK_VLANENCAP_HH	elements/ethernet/vlanencap.hh	2;"	d
CLICK_WARN_UNUSED_RESULT	include/click/config.h	199;"	d
CLICK_WARN_UNUSED_RESULT	include/click/config.h	201;"	d
CLICK_WARN_UNUSED_RESULT	include/click/element.hh	/^    virtual Packet *pull(int port) CLICK_WARN_UNUSED_RESULT;$/;"	m	class:Element
CLICK_WARN_UNUSED_RESULT	include/click/packet.hh	/^				uint32_t length, uint32_t tailroom) CLICK_WARN_UNUSED_RESULT;$/;"	m	class:Packet
CLICK_WARN_UNUSED_RESULT	include/click/packet.hh	/^				void (*destructor)(unsigned char *, size_t)) CLICK_WARN_UNUSED_RESULT;$/;"	m	class:Packet
CLICK_WARN_UNUSED_RESULT	include/click/packet.hh	/^    Packet *clone() CLICK_WARN_UNUSED_RESULT;$/;"	m	class:Packet
CLICK_WARN_UNUSED_RESULT	include/click/packet.hh	/^    Packet *nonunique_push(uint32_t len) CLICK_WARN_UNUSED_RESULT;$/;"	m	class:Packet
CLICK_WARN_UNUSED_RESULT	include/click/packet.hh	/^    Packet *nonunique_put(uint32_t len) CLICK_WARN_UNUSED_RESULT;$/;"	m	class:Packet
CLICK_WARN_UNUSED_RESULT	include/click/packet.hh	/^    Packet *shift_data(int offset, bool free_on_failure = true) CLICK_WARN_UNUSED_RESULT;$/;"	m	class:Packet
CLICK_WARN_UNUSED_RESULT	include/click/packet.hh	/^    WritablePacket *push(uint32_t len) CLICK_WARN_UNUSED_RESULT;$/;"	m	class:Packet
CLICK_WARN_UNUSED_RESULT	include/click/packet.hh	/^    WritablePacket *push_mac_header(uint32_t len) CLICK_WARN_UNUSED_RESULT;$/;"	m	class:Packet
CLICK_WARN_UNUSED_RESULT	include/click/packet.hh	/^    WritablePacket *put(uint32_t len) CLICK_WARN_UNUSED_RESULT;$/;"	m	class:Packet
CLICK_WARN_UNUSED_RESULT	include/click/packet.hh	/^    inline WritablePacket *uniqueify() CLICK_WARN_UNUSED_RESULT;$/;"	m	class:Packet
CLICK_WARN_UNUSED_RESULT	include/click/packet.hh	/^    static Packet *make(struct sk_buff *skb) CLICK_WARN_UNUSED_RESULT;$/;"	m	class:Packet
CLICK_WARN_UNUSED_RESULT	include/click/packet.hh	/^    static inline Packet *make(struct mbuf *mbuf) CLICK_WARN_UNUSED_RESULT;$/;"	m	class:Packet
CLICK_WARN_UNUSED_RESULT	include/click/packet.hh	/^    static inline WritablePacket *make(const void *data, uint32_t length) CLICK_WARN_UNUSED_RESULT;$/;"	m	class:Packet
CLICK_WARN_UNUSED_RESULT	include/click/packet.hh	/^    static inline WritablePacket *make(uint32_t length) CLICK_WARN_UNUSED_RESULT;$/;"	m	class:Packet
CLICK_WEPDECAP_HH	elements/wifi/wepdecap.hh	2;"	d
CLICK_WEPENCAP_HH	elements/wifi/wepencap.hh	2;"	d
CLICK_WIFIDECAP_HH	elements/wifi/wifidecap.hh	2;"	d
CLICK_WIFIDEFRAG_HH	elements/wifi/wifidefrag.hh	2;"	d
CLICK_WIFIDUPEFILTER_HH	elements/wifi/wifidupefilter.hh	2;"	d
CLICK_WIFIENCAP_HH	elements/wifi/wifiencap.hh	2;"	d
CLICK_WIFIFRAGMENT_HH	elements/wifi/wififragment.hh	2;"	d
CLICK_WIFISEQ_HH	elements/wifi/wifiseq.hh	2;"	d
CLICK_WIRELESSINFO_HH	elements/wifi/wirelessinfo.hh	2;"	d
CLICK_XFORM_ADJACENCY_HH	tools/click-xform/adjacency.hh	2;"	d
CLICK_XML2CLICK_HH	tools/click2xml/xml2click.hh	3;"	d
CLICK_amoeba_hh	elements/grid/amoeba.hh	2;"	d
CLICKmkinstalldirs	linuxmodule/Makefile	/^CLICKmkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
CLIENT	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    CLIENT,$/;"	e	enum:session_type	file:
CLPTest	elements/test/clptest.cc	/^CLPTest::CLPTest()$/;"	f	class:CLPTest
CLPTest	elements/test/clptest.hh	/^class CLPTest : public Element { public:$/;"	c
CMD_ADD	elements/ip/iproutetable.hh	/^    enum { CMD_ADD, CMD_SET, CMD_REMOVE };$/;"	e	enum:IPRouteTable::__anon320
CMD_ADD	elements/ipsec/ipsecroutetable.hh	/^    enum { CMD_ADD, CMD_SET, CMD_REMOVE };$/;"	e	enum:IPsecRouteTable::__anon214
CMD_MEM_WRT_INVALIDATE	drivers/e1000-4.x/src/e1000_osdep.h	56;"	d
CMD_MEM_WRT_INVALIDATE	drivers/e1000-5.x/src/e1000_osdep.h	58;"	d
CMD_MEM_WRT_INVALIDATE	drivers/e1000-7.x/src/e1000_osdep.h	63;"	d
CMD_REMOVE	elements/ip/iproutetable.hh	/^    enum { CMD_ADD, CMD_SET, CMD_REMOVE };$/;"	e	enum:IPRouteTable::__anon320
CMD_REMOVE	elements/ipsec/ipsecroutetable.hh	/^    enum { CMD_ADD, CMD_SET, CMD_REMOVE };$/;"	e	enum:IPsecRouteTable::__anon214
CMD_SET	elements/ip/iproutetable.hh	/^    enum { CMD_ADD, CMD_SET, CMD_REMOVE };$/;"	e	enum:IPRouteTable::__anon320
CMD_SET	elements/ipsec/ipsecroutetable.hh	/^    enum { CMD_ADD, CMD_SET, CMD_REMOVE };$/;"	e	enum:IPsecRouteTable::__anon214
CODE_HANDLER_ERR	apps/ClickController/ControlSocket.java	/^    private static final int CODE_HANDLER_ERR = 520;$/;"	f	class:ControlSocket	file:
CODE_HANDLER_ERR	apps/csclient/csclient.hh	/^    CODE_HANDLER_ERR = 520,$/;"	e	enum:ControlSocketClient::__anon1
CODE_NO_ELEMENT	apps/ClickController/ControlSocket.java	/^    private static final int CODE_NO_ELEMENT = 510;$/;"	f	class:ControlSocket	file:
CODE_NO_ELEMENT	apps/csclient/csclient.hh	/^    CODE_NO_ELEMENT = 510,$/;"	e	enum:ControlSocketClient::__anon1
CODE_NO_HANDLER	apps/ClickController/ControlSocket.java	/^    private static final int CODE_NO_HANDLER = 511;$/;"	f	class:ControlSocket	file:
CODE_NO_HANDLER	apps/csclient/csclient.hh	/^    CODE_NO_HANDLER = 511,$/;"	e	enum:ControlSocketClient::__anon1
CODE_NO_ROUTER	apps/ClickController/ControlSocket.java	/^    private static final int CODE_NO_ROUTER = 540;$/;"	f	class:ControlSocket	file:
CODE_NO_ROUTER	apps/csclient/csclient.hh	/^    CODE_NO_ROUTER = 540,$/;"	e	enum:ControlSocketClient::__anon1
CODE_OK	apps/ClickController/ControlSocket.java	/^    private static final int CODE_OK = 200;$/;"	f	class:ControlSocket	file:
CODE_OK	apps/csclient/csclient.hh	/^    CODE_OK = 200,$/;"	e	enum:ControlSocketClient::__anon1
CODE_OK_WARN	apps/ClickController/ControlSocket.java	/^    private static final int CODE_OK_WARN = 220;$/;"	f	class:ControlSocket	file:
CODE_OK_WARN	apps/csclient/csclient.hh	/^    CODE_OK_WARN = 220,$/;"	e	enum:ControlSocketClient::__anon1
CODE_PERMISSION	apps/ClickController/ControlSocket.java	/^    private static final int CODE_PERMISSION = 530;$/;"	f	class:ControlSocket	file:
CODE_PERMISSION	apps/csclient/csclient.hh	/^    CODE_PERMISSION = 530,$/;"	e	enum:ControlSocketClient::__anon1
CODE_SYNTAX_ERR	apps/ClickController/ControlSocket.java	/^    private static final int CODE_SYNTAX_ERR = 500;$/;"	f	class:ControlSocket	file:
CODE_SYNTAX_ERR	apps/csclient/csclient.hh	/^    CODE_SYNTAX_ERR = 500,$/;"	e	enum:ControlSocketClient::__anon1
CODE_UNIMPLEMENTED	apps/ClickController/ControlSocket.java	/^    private static final int CODE_UNIMPLEMENTED = 501;$/;"	f	class:ControlSocket	file:
CODE_UNIMPLEMENTED	apps/csclient/csclient.hh	/^    CODE_UNIMPLEMENTED = 501,$/;"	e	enum:ControlSocketClient::__anon1
COL_BITS	elements/analysis/aggregatefirst.hh	/^	   COL_BITS = 16, COL_SHIFT = ROW_BITS, NCOL = 1<<COL_BITS, COL_MASK = NCOL - 1,$/;"	e	enum:AggregateFirst::__anon292
COL_BITS	elements/analysis/aggregatelast.hh	/^	   COL_BITS = 16, COL_SHIFT = ROW_BITS, NCOL = 1<<COL_BITS, COL_MASK = NCOL - 1,$/;"	e	enum:AggregateLast::__anon274
COL_MASK	elements/analysis/aggregatefirst.hh	/^	   COL_BITS = 16, COL_SHIFT = ROW_BITS, NCOL = 1<<COL_BITS, COL_MASK = NCOL - 1,$/;"	e	enum:AggregateFirst::__anon292
COL_MASK	elements/analysis/aggregatelast.hh	/^	   COL_BITS = 16, COL_SHIFT = ROW_BITS, NCOL = 1<<COL_BITS, COL_MASK = NCOL - 1,$/;"	e	enum:AggregateLast::__anon274
COL_SHIFT	elements/analysis/aggregatefirst.hh	/^	   COL_BITS = 16, COL_SHIFT = ROW_BITS, NCOL = 1<<COL_BITS, COL_MASK = NCOL - 1,$/;"	e	enum:AggregateFirst::__anon292
COL_SHIFT	elements/analysis/aggregatelast.hh	/^	   COL_BITS = 16, COL_SHIFT = ROW_BITS, NCOL = 1<<COL_BITS, COL_MASK = NCOL - 1,$/;"	e	enum:AggregateLast::__anon274
COMBINE_OPT	tools/click-fastclassifier/click-fastclassifier.cc	58;"	d	file:
COMPARE	elements/etherswitch/bridgemessage.cc	44;"	d	file:
COMPILE	bsdmodule/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)$/;"	m
COMPILE	etc/pkg-bsdmodule.mk	/^COMPILE = $(CC) $(CPPFLAGS) $(CFLAGS) $(PACKAGE_CFLAGS) $(DEFS) $(INCLUDES) $(DEPCFLAGS)$/;"	m
COMPILE	etc/pkg-linuxmodule-26.mk	/^COMPILE = $(CLICKKERNEL_CC) $(LINUXCFLAGS) $(CLICKCPPFLAGS) \\$/;"	m
COMPILE	etc/pkg-linuxmodule.mk	/^COMPILE = $(CC) $(CPPFLAGS) $(CFLAGS) $(PACKAGE_CFLAGS) $(DEFS) $(INCLUDES)$/;"	m
COMPILE	etc/pkg-userlevel.mk	/^COMPILE = $(CC) $(CPPFLAGS) $(CFLAGS) $(PACKAGE_CFLAGS) $(DEFS) $(INCLUDES)$/;"	m
COMPILE	linuxmodule/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)$/;"	m
COMPILE	linuxmodule/Makefile	/^COMPILE = $(CLICKCC) $(LINUXCFLAGS) $(CLICKCPPFLAGS) $(CLICKCFLAGS) \\$/;"	m
COMPILE	ns/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)$/;"	m
COMPILE	tools/click-align/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(DEPCFLAGS)$/;"	m
COMPILE	tools/click-check/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(DEPCFLAGS)$/;"	m
COMPILE	tools/click-combine/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(DEPCFLAGS)$/;"	m
COMPILE	tools/click-devirtualize/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(DEPCFLAGS)$/;"	m
COMPILE	tools/click-fastclassifier/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(DEPCFLAGS)$/;"	m
COMPILE	tools/click-flatten/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(DEPCFLAGS)$/;"	m
COMPILE	tools/click-install/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(DEPCFLAGS)$/;"	m
COMPILE	tools/click-mkmindriver/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(DEPCFLAGS)$/;"	m
COMPILE	tools/click-pretty/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(DEPCFLAGS)$/;"	m
COMPILE	tools/click-undead/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(DEPCFLAGS)$/;"	m
COMPILE	tools/click-xform/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(DEPCFLAGS)$/;"	m
COMPILE	tools/click2xml/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(DEPCFLAGS)$/;"	m
COMPILE	tools/lib/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(DEPCFLAGS)$/;"	m
COMPILE	userlevel/Makefile	/^COMPILE = $(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)$/;"	m
COMPILER_H	elements/local/OpenFlow/lib/compiler.hh	35;"	d
COMPILETARGET	tools/click-install/common.hh	26;"	d
COMPILETARGET	tools/click-install/common.hh	30;"	d
COMPILE_OPT	tools/click-fastclassifier/click-fastclassifier.cc	59;"	d	file:
COMPLETE_FLOW	include/click/element.hh	/^    static const char COMPLETE_FLOW[];$/;"	m	class:Element
COMPLETE_FLOW	lib/element.cc	/^const char Element::COMPLETE_FLOW[] = "x\/x";$/;"	m	class:Element	file:
COMPOSED_TRACE_POS_L3_IN	elements/local/FlowNet/papmo/PaPMo.hh	88;"	d
COMPOSED_TRACE_POS_L3_OUT	elements/local/FlowNet/papmo/PaPMo.hh	87;"	d
COMPOSED_TRACE_POS_L4_IN	elements/local/FlowNet/papmo/PaPMo.hh	86;"	d
COMPOSED_TRACE_POS_L4_OUT	elements/local/FlowNet/papmo/PaPMo.hh	84;"	d
COMPOSED_TRACE_POS_L4_PRE_IN	elements/local/FlowNet/papmo/PaPMo.hh	85;"	d
COMPOSED_TRACE_TAG_CORE	elements/local/FlowNet/papmo/PaPMo.hh	79;"	d
COMPOSED_TRACE_TAG_FLOW	elements/local/FlowNet/papmo/PaPMo.hh	81;"	d
COMPOSED_TRACE_TAG_MPEG	elements/local/FlowNet/papmo/PaPMo.hh	80;"	d
COMPOSED_TRACE_TAG_MPEG_FRAME	elements/local/FlowNet/papmo/PaPMo.hh	82;"	d
COMPOSED_TRACE_TAG_NO_TAG	elements/local/FlowNet/papmo/PaPMo.hh	78;"	d
COMPUTE_AUTH	elements/ipsec/hmacsha1.hh	/^  enum { COMPUTE_AUTH = 0, VERIFY_AUTH = 1 };$/;"	e	enum:IPsecAuthHMACSHA1::__anon213
COMPUTE_AUTH	elements/ipsec/sha1.hh	/^  enum { COMPUTE_AUTH = 0, VERIFY_AUTH = 1 };$/;"	e	enum:IPsecAuthSHA1::__anon216
COMP_BZ2	lib/userutils.cc	/^    COMP_COMPRESS = 1, COMP_GZIP = 2, COMP_BZ2 = 3$/;"	e	enum:__anon518	file:
COMP_COMPRESS	lib/userutils.cc	/^    COMP_COMPRESS = 1, COMP_GZIP = 2, COMP_BZ2 = 3$/;"	e	enum:__anon518	file:
COMP_GZIP	lib/userutils.cc	/^    COMP_COMPRESS = 1, COMP_GZIP = 2, COMP_BZ2 = 3$/;"	e	enum:__anon518	file:
CONFIGURE_PHASE	elements/analysis/toipflowdumps.hh	/^    enum { CONFIGURE_PHASE = CONFIGURE_PHASE_DEFAULT };$/;"	e	enum:ToIPFlowDumps::__anon296
CONFIGURE_PHASE_DEFAULT	include/click/element.hh	/^	CONFIGURE_PHASE_DEFAULT = 100,$/;"	e	enum:Element::ConfigurePhase
CONFIGURE_PHASE_FIRST	include/click/element.hh	/^	CONFIGURE_PHASE_FIRST = 0,$/;"	e	enum:Element::ConfigurePhase
CONFIGURE_PHASE_FROMDEVICE	elements/userlevel/kernelfilter.hh	/^	CONFIGURE_PHASE_FROMDEVICE = CONFIGURE_PHASE_PRIVILEGED - 1,$/;"	e	enum:KernelFilter::ConfigurePhase
CONFIGURE_PHASE_FROMHOST	elements/bsdmodule/anydevice.hh	/^    enum { CONFIGURE_PHASE_FROMHOST = CONFIGURE_PHASE_DEFAULT - 2,$/;"	e	enum:AnyDevice::__anon229
CONFIGURE_PHASE_FROMHOST	elements/linuxmodule/anydevice.hh	/^    enum { CONFIGURE_PHASE_FROMHOST = CONFIGURE_PHASE_DEFAULT - 2,$/;"	e	enum:AnyDevice::__anon313
CONFIGURE_PHASE_FROMHOST	elements/userlevel/fromhost.hh	/^	CONFIGURE_PHASE_FROMHOST = CONFIGURE_PHASE_DEFAULT,$/;"	e	enum:FromHost::ConfigurePhase
CONFIGURE_PHASE_INFO	include/click/element.hh	/^	CONFIGURE_PHASE_INFO = 20,$/;"	e	enum:Element::ConfigurePhase
CONFIGURE_PHASE_KERNELFILTER	elements/userlevel/kernelfilter.hh	/^	CONFIGURE_PHASE_KERNELFILTER = CONFIGURE_PHASE_FROMDEVICE + 1$/;"	e	enum:KernelFilter::ConfigurePhase
CONFIGURE_PHASE_LAST	include/click/element.hh	/^	CONFIGURE_PHASE_LAST = 2000$/;"	e	enum:Element::ConfigurePhase
CONFIGURE_PHASE_MAPPER	elements/ip/iprewriterbase.hh	/^	CONFIGURE_PHASE_MAPPER = CONFIGURE_PHASE_REWRITER - 1,$/;"	e	enum:IPRewriterBase::ConfigurePhase
CONFIGURE_PHASE_PATTERNS	elements/ip/iprewriterbase.hh	/^	CONFIGURE_PHASE_PATTERNS = CONFIGURE_PHASE_INFO,$/;"	e	enum:IPRewriterBase::ConfigurePhase
CONFIGURE_PHASE_POLLDEVICE	elements/bsdmodule/anydevice.hh	/^           CONFIGURE_PHASE_POLLDEVICE = CONFIGURE_PHASE_DEFAULT };$/;"	e	enum:AnyDevice::__anon229
CONFIGURE_PHASE_POLLDEVICE	elements/linuxmodule/anydevice.hh	/^	   CONFIGURE_PHASE_POLLDEVICE = CONFIGURE_PHASE_DEFAULT };$/;"	e	enum:AnyDevice::__anon313
CONFIGURE_PHASE_PRIVILEGED	include/click/element.hh	/^	CONFIGURE_PHASE_PRIVILEGED = 90,$/;"	e	enum:Element::ConfigurePhase
CONFIGURE_PHASE_REWRITER	elements/ip/iprewriterbase.hh	/^	CONFIGURE_PHASE_REWRITER = CONFIGURE_PHASE_DEFAULT,$/;"	e	enum:IPRewriterBase::ConfigurePhase
CONFIGURE_PHASE_TODEVICE	elements/bsdmodule/anydevice.hh	/^           CONFIGURE_PHASE_TODEVICE = CONFIGURE_PHASE_DEFAULT - 1,$/;"	e	enum:AnyDevice::__anon229
CONFIGURE_PHASE_TODEVICE	elements/linuxmodule/anydevice.hh	/^	   CONFIGURE_PHASE_TODEVICE = CONFIGURE_PHASE_DEFAULT - 1,$/;"	e	enum:AnyDevice::__anon313
CONFIGURE_PHASE_TODEVICE	elements/userlevel/kernelfilter.hh	/^	CONFIGURE_PHASE_TODEVICE = CONFIGURE_PHASE_FROMDEVICE + 1,$/;"	e	enum:KernelFilter::ConfigurePhase
CONFIGURE_PHASE_TOHOST	elements/userlevel/fromhost.hh	/^	CONFIGURE_PHASE_TOHOST =  CONFIGURE_PHASE_FROMHOST + 1$/;"	e	enum:FromHost::ConfigurePhase
CONFIGURE_PHASE_USER	elements/ip/iprewriterbase.hh	/^	CONFIGURE_PHASE_USER = CONFIGURE_PHASE_REWRITER + 1$/;"	e	enum:IPRewriterBase::ConfigurePhase
CONFIG_E1000_DISABLE_PACKET_SPLIT	drivers/e1000-7.x/src/kcompat.h	853;"	d
CONFIG_E1000_DISABLE_PACKET_SPLIT	drivers/e1000-7.x/src/kcompat.h	89;"	d
CONFIG_E1000_DISABLE_PACKET_SPLIT	drivers/e1000-7.x/src/kcompat.h	90;"	d
CONFIG_E1000_NAPI	drivers/e1000-5.x/src/kcompat.h	64;"	d
CONFIG_E1000_NAPI	drivers/e1000-5.x/src/kcompat.h	65;"	d
CONFIG_E1000_NAPI	drivers/e1000-5.x/src/kcompat.h	69;"	d
CONFIG_E1000_NAPI	drivers/e1000-7.x/src/kcompat.h	77;"	d
CONFIG_E1000_NAPI	drivers/e1000-7.x/src/kcompat.h	83;"	d
CONFIG_E1000_PCI_ERS	drivers/e1000-7.x/src/kcompat.h	1040;"	d
CONFIG_E1000_PCI_ERS	drivers/e1000-7.x/src/kcompat.h	1044;"	d
CONFIG_E100_NAPI	drivers/e1000-7.x/src/kcompat.h	745;"	d
CONFIG_FILE	drivers/e1000-4.x/src/Makefile	/^CONFIG_FILE  := $(KSRC)\/include\/linux\/config.h$/;"	m
CONFIG_FILE	drivers/e1000-5.x/src/Makefile	/^    CONFIG_FILE  := $(KSRC)\/include\/linux\/config.h$/;"	m
CONFIG_FILE	drivers/e1000-5.x/src/Makefile	/^  CONFIG_FILE  := $(KSRC)\/include\/linux\/config.h$/;"	m
CONFIG_FILE	drivers/e1000-5.x/src/Makefile	/^  CONFIG_FILE  := \/boot\/vmlinuz.autoconf.h$/;"	m
CONFIG_FILE	drivers/e1000-7.x/src/Makefile	/^    CONFIG_FILE  := $(KSRC)\/include\/linux\/autoconf.h$/;"	m
CONFIG_FILE	drivers/e1000-7.x/src/Makefile	/^  CONFIG_FILE  := $(KSRC)\/include\/linux\/autoconf.h$/;"	m
CONFIG_FILE	drivers/e1000-7.x/src/Makefile	/^  CONFIG_FILE  := \/boot\/vmlinuz.autoconf.h$/;"	m
CONFIG_IXGB_NAPI	drivers/e1000-7.x/src/kcompat.h	746;"	d
CONFIG_IXGB_NAPI	drivers/e1000-7.x/src/kcompat.h	80;"	d
CONFIG_IXGB_NAPI	drivers/e1000-7.x/src/kcompat.h	84;"	d
CONFIG_IXGB_PCI_ERS	drivers/e1000-7.x/src/kcompat.h	1041;"	d
CONFIG_IXGB_PCI_ERS	drivers/e1000-7.x/src/kcompat.h	1045;"	d
CONFIG_NET_POLL_CONTROLLER	drivers/e1000-5.x/src/kcompat.h	60;"	d
CONFIG_NET_POLL_CONTROLLER	drivers/e1000-7.x/src/kcompat.h	103;"	d
CONFIG_NET_POLL_CONTROLLER	drivers/e1000-7.x/src/kcompat.h	149;"	d
CONFIG_OPT	tools/click-combine/click-combine.cc	47;"	d	file:
CONFIG_OPT	tools/click-devirtualize/click-devirtualize.cc	51;"	d	file:
CONFIG_OPT	tools/click-fastclassifier/click-fastclassifier.cc	56;"	d	file:
CONFIG_OPT	tools/click-flatten/click-flatten.cc	43;"	d	file:
CONFIG_OPT	tools/click-undead/click-undead.cc	51;"	d	file:
CONFIG_PCI_MSI	drivers/e1000-7.x/src/kcompat.h	95;"	d
CONFIG_PM	drivers/e1000-4.x/src/kcompat.h	383;"	d
CONFIG_PM	drivers/e1000-5.x/src/kcompat.h	466;"	d
CONFIG_PM	drivers/e1000-7.x/src/kcompat.h	626;"	d
CONFIG_PM	drivers/e1000-7.x/src/kcompat.h	99;"	d
CONST_FIRST_TIMESTAMP_ANNO	include/click/packet_anno.hh	94;"	d
CONTAINER_OF	elements/local/OpenFlow/lib/util.hh	90;"	d
COPYBREAK_DEFAULT	drivers/e1000-7.x/src/e1000_main.c	257;"	d	file:
CORE	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^struct CORE {$/;"	s
CORE_congestion_indication	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^int VcCDCORE::CORE_congestion_indication(struct CORE* core, double feedback_delay)$/;"	f	class:VcCDCORE
CORE_exceeded_rate	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^double VcCDCORE::CORE_exceeded_rate(struct CORE* core)$/;"	f	class:VcCDCORE
CORE_process_packet	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^void VcCDCORE::CORE_process_packet(struct CORE* core, int qlen, double time )$/;"	f	class:VcCDCORE
CORE_queue_len_change	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^void VcCDCORE::CORE_queue_len_change(struct CORE* core, int qlen)$/;"	f	class:VcCDCORE
CORE_set	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^void VcCDCORE::CORE_set(struct CORE* core, Flow* flow, int mq)$/;"	f	class:VcCDCORE
COUNT	tools/lib/etraits.hh	/^	ALLMASK = 0xF, COUNT = 4, MULTITHREAD = COUNT$/;"	e	enum:Driver::__anon526
CPE_FORMAT	include/click/confparse.hh	/^    CPE_FORMAT,$/;"	e	enum:CpErrors
CPE_INVALID	include/click/confparse.hh	/^    CPE_INVALID,$/;"	e	enum:CpErrors
CPE_MEMORY	include/click/confparse.hh	/^    CPE_MEMORY,$/;"	e	enum:CpErrors
CPE_NEGATIVE	include/click/confparse.hh	/^    CPE_NEGATIVE,$/;"	e	enum:CpErrors
CPE_NOUNITS	include/click/confparse.hh	/^    CPE_NOUNITS$/;"	e	enum:CpErrors
CPE_OK	include/click/confparse.hh	/^    CPE_OK = 0,$/;"	e	enum:CpErrors
CPE_OVERFLOW	include/click/confparse.hh	/^    CPE_OVERFLOW,$/;"	e	enum:CpErrors
CPP	bsdmodule/Makefile	/^CPP = gcc -E$/;"	m
CPP	etc/pkg-bsdmodule.mk	/^CPP ?= $(CLICKCPP)$/;"	m
CPP	etc/pkg-linuxmodule.mk	/^CPP ?= $(CLICKCPP)$/;"	m
CPP	etc/pkg-userlevel.mk	/^CPP ?= $(CLICKCPP)$/;"	m
CPP	linuxmodule/Makefile	/^CPP = gcc -E$/;"	m
CPP	ns/Makefile	/^CPP = gcc -E$/;"	m
CPP	userlevel/Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	bsdmodule/Makefile	/^CPPFLAGS =  -DCLICK_BSDMODULE$/;"	m
CPPFLAGS	etc/pkg-bsdmodule.mk	/^CPPFLAGS ?= $(CLICKCPPFLAGS) -DCLICK_BSDMODULE$/;"	m
CPPFLAGS	etc/pkg-linuxmodule.mk	/^CPPFLAGS ?= $(CLICKCPPFLAGS) -DCLICK_LINUXMODULE$/;"	m
CPPFLAGS	etc/pkg-userlevel.mk	/^CPPFLAGS ?= $(CLICKCPPFLAGS) -DCLICK_USERLEVEL$/;"	m
CPPFLAGS	linuxmodule/Makefile	/^CPPFLAGS =  -DCLICK_LINUXMODULE$/;"	m
CPPFLAGS	ns/Makefile	/^CPPFLAGS =  -DCLICK_NS$/;"	m
CPPFLAGS	tools/click-align/Makefile	/^CPPFLAGS =  -DCLICK_TOOL$/;"	m
CPPFLAGS	tools/click-check/Makefile	/^CPPFLAGS =  -DCLICK_TOOL$/;"	m
CPPFLAGS	tools/click-combine/Makefile	/^CPPFLAGS =  -DCLICK_TOOL$/;"	m
CPPFLAGS	tools/click-devirtualize/Makefile	/^CPPFLAGS =  -DCLICK_TOOL$/;"	m
CPPFLAGS	tools/click-fastclassifier/Makefile	/^CPPFLAGS =  -DCLICK_TOOL$/;"	m
CPPFLAGS	tools/click-flatten/Makefile	/^CPPFLAGS =  -DCLICK_TOOL$/;"	m
CPPFLAGS	tools/click-install/Makefile	/^CPPFLAGS =  -DCLICK_TOOL$/;"	m
CPPFLAGS	tools/click-mkmindriver/Makefile	/^CPPFLAGS =  -DCLICK_TOOL$/;"	m
CPPFLAGS	tools/click-pretty/Makefile	/^CPPFLAGS =  -DCLICK_TOOL$/;"	m
CPPFLAGS	tools/click-undead/Makefile	/^CPPFLAGS =  -DCLICK_TOOL$/;"	m
CPPFLAGS	tools/click-xform/Makefile	/^CPPFLAGS =  -DCLICK_TOOL$/;"	m
CPPFLAGS	tools/click2xml/Makefile	/^CPPFLAGS =  -DCLICK_TOOL$/;"	m
CPPFLAGS	tools/lib/Makefile	/^CPPFLAGS =  -DCLICK_TOOL$/;"	m
CPPFLAGS	userlevel/Makefile	/^CPPFLAGS =  -DCLICK_USERLEVEL$/;"	m
CPUQUEUE_HH	elements/linuxmodule/cpuqueue.hh	2;"	d
CPUQueue	elements/linuxmodule/cpuqueue.cc	/^CPUQueue::CPUQueue()$/;"	f	class:CPUQueue
CPUQueue	elements/linuxmodule/cpuqueue.hh	/^class CPUQueue : public Element {$/;"	c
CPUSWITCH_HH	elements/linuxmodule/cpuswitch.hh	2;"	d
CPUSwitch	elements/linuxmodule/cpuswitch.cc	/^CPUSwitch::CPUSwitch()$/;"	f	class:CPUSwitch
CPUSwitch	elements/linuxmodule/cpuswitch.hh	/^class CPUSwitch : public Element {$/;"	c
CPU_OPT	tools/click-install/click-install.cc	67;"	d	file:
CP_CONTEXT	include/click/confparse.hh	19;"	d
CP_CONTEXT	include/click/confparse.hh	24;"	d
CP_CONTEXT	include/click/confparse.hh	735;"	d
CP_CONTEXT	lib/confparse.cc	44;"	d	file:
CP_CONTEXT	lib/confparse.cc	51;"	d	file:
CP_OPT_CONTEXT	include/click/confparse.hh	18;"	d
CP_OPT_CONTEXT	include/click/confparse.hh	23;"	d
CP_OPT_CONTEXT	include/click/confparse.hh	734;"	d
CP_PASS_CONTEXT	include/click/confparse.hh	20;"	d
CP_PASS_CONTEXT	include/click/confparse.hh	25;"	d
CP_PASS_CONTEXT	include/click/confparse.hh	736;"	d
CP_PASS_CONTEXT	lib/confparse.cc	45;"	d	file:
CP_PASS_CONTEXT	lib/confparse.cc	52;"	d	file:
CP_PRESERVE	doc/Makefile	/^CP_PRESERVE = \/bin\/cp -p$/;"	m
CP_REAL2_MAX_FRAC_BITS	include/click/confparse.hh	143;"	d
CP_SENTINEL	include/click/confparse.hh	33;"	d
CP_SENTINEL	include/click/confparse.hh	35;"	d
CP_SENTINEL	include/click/confparse.hh	738;"	d
CP_VALUES_SIZE	lib/confparse.cc	3048;"	d	file:
CP_VA_ARGS_REST	include/click/confparse.hh	733;"	d
CP_VA_PARSE_ARGS_REST	include/click/confparse.hh	17;"	d
CP_VA_PARSE_ARGS_REST	include/click/confparse.hh	22;"	d
CQ_STACKSIZ	lib/glue.cc	539;"	d	file:
CQ_WORD_SIZE	lib/glue.cc	504;"	d	file:
CRC32_H	elements/local/OpenFlow/lib/of_crc32.hh	35;"	d
CRC32_TABLE_BITS	elements/local/OpenFlow/lib/of_crc32.hh	45;"	d
CRC32_TABLE_SIZE	elements/local/OpenFlow/lib/of_crc32.hh	46;"	d
CRC_LENGTH	drivers/e1000-4.x/src/e1000_hw.h	279;"	d
CRC_LENGTH	drivers/e1000-5.x/src/e1000_hw.h	412;"	d
CRC_LENGTH	drivers/e1000-7.x/src/e1000_hw.h	530;"	d
CREDITS_FOR_RAISE	elements/wifi/madwifirate.cc	30;"	d	file:
CR_1000T_ASYM_PAUSE	drivers/e1000-4.x/src/e1000_hw.h	1637;"	d
CR_1000T_ASYM_PAUSE	drivers/e1000-5.x/src/e1000_hw.h	1909;"	d
CR_1000T_ASYM_PAUSE	drivers/e1000-7.x/src/e1000_hw.h	2811;"	d
CR_1000T_FD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1639;"	d
CR_1000T_FD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1911;"	d
CR_1000T_FD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2813;"	d
CR_1000T_HD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1638;"	d
CR_1000T_HD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1910;"	d
CR_1000T_HD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2812;"	d
CR_1000T_MS_ENABLE	drivers/e1000-4.x/src/e1000_hw.h	1644;"	d
CR_1000T_MS_ENABLE	drivers/e1000-5.x/src/e1000_hw.h	1916;"	d
CR_1000T_MS_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2818;"	d
CR_1000T_MS_VALUE	drivers/e1000-4.x/src/e1000_hw.h	1642;"	d
CR_1000T_MS_VALUE	drivers/e1000-5.x/src/e1000_hw.h	1914;"	d
CR_1000T_MS_VALUE	drivers/e1000-7.x/src/e1000_hw.h	2816;"	d
CR_1000T_REPEATER_DTE	drivers/e1000-4.x/src/e1000_hw.h	1640;"	d
CR_1000T_REPEATER_DTE	drivers/e1000-5.x/src/e1000_hw.h	1912;"	d
CR_1000T_REPEATER_DTE	drivers/e1000-7.x/src/e1000_hw.h	2814;"	d
CR_1000T_TEST_MODE_1	drivers/e1000-4.x/src/e1000_hw.h	1647;"	d
CR_1000T_TEST_MODE_1	drivers/e1000-5.x/src/e1000_hw.h	1919;"	d
CR_1000T_TEST_MODE_1	drivers/e1000-7.x/src/e1000_hw.h	2821;"	d
CR_1000T_TEST_MODE_2	drivers/e1000-4.x/src/e1000_hw.h	1648;"	d
CR_1000T_TEST_MODE_2	drivers/e1000-5.x/src/e1000_hw.h	1920;"	d
CR_1000T_TEST_MODE_2	drivers/e1000-7.x/src/e1000_hw.h	2822;"	d
CR_1000T_TEST_MODE_3	drivers/e1000-4.x/src/e1000_hw.h	1649;"	d
CR_1000T_TEST_MODE_3	drivers/e1000-5.x/src/e1000_hw.h	1921;"	d
CR_1000T_TEST_MODE_3	drivers/e1000-7.x/src/e1000_hw.h	2823;"	d
CR_1000T_TEST_MODE_4	drivers/e1000-4.x/src/e1000_hw.h	1650;"	d
CR_1000T_TEST_MODE_4	drivers/e1000-5.x/src/e1000_hw.h	1922;"	d
CR_1000T_TEST_MODE_4	drivers/e1000-7.x/src/e1000_hw.h	2824;"	d
CR_1000T_TEST_MODE_NORMAL	drivers/e1000-4.x/src/e1000_hw.h	1646;"	d
CR_1000T_TEST_MODE_NORMAL	drivers/e1000-5.x/src/e1000_hw.h	1918;"	d
CR_1000T_TEST_MODE_NORMAL	drivers/e1000-7.x/src/e1000_hw.h	2820;"	d
CSERR_DATA_TOO_BIG	elements/userlevel/controlsocket.hh	/^	CSERR_DATA_TOO_BIG		= 521,$/;"	e	enum:ControlSocket::__anon203
CSERR_HANDLER_ERROR	elements/userlevel/controlsocket.hh	/^	CSERR_HANDLER_ERROR		= HandlerProxy::CSERR_HANDLER_ERROR,   \/\/ 520$/;"	e	enum:ControlSocket::__anon203
CSERR_HANDLER_ERROR	elements/userlevel/handlerproxy.hh	/^	CSERR_HANDLER_ERROR	= 520,$/;"	e	enum:HandlerProxy::__anon200
CSERR_LLRPC_ERROR	elements/userlevel/controlsocket.hh	/^	CSERR_LLRPC_ERROR		= 522,$/;"	e	enum:ControlSocket::__anon203
CSERR_NO_ROUTER	elements/userlevel/controlsocket.hh	/^	CSERR_NO_ROUTER			= HandlerProxy::CSERR_NO_ROUTER,       \/\/ 540$/;"	e	enum:ControlSocket::__anon203
CSERR_NO_ROUTER	elements/userlevel/handlerproxy.hh	/^	CSERR_NO_ROUTER		= 540,$/;"	e	enum:HandlerProxy::__anon200
CSERR_NO_SUCH_ELEMENT	elements/userlevel/controlsocket.hh	/^	CSERR_NO_SUCH_ELEMENT		= HandlerProxy::CSERR_NO_SUCH_ELEMENT, \/\/ 510$/;"	e	enum:ControlSocket::__anon203
CSERR_NO_SUCH_ELEMENT	elements/userlevel/handlerproxy.hh	/^	CSERR_NO_SUCH_ELEMENT	= 510,$/;"	e	enum:HandlerProxy::__anon200
CSERR_NO_SUCH_HANDLER	elements/userlevel/controlsocket.hh	/^	CSERR_NO_SUCH_HANDLER		= HandlerProxy::CSERR_NO_SUCH_HANDLER, \/\/ 511$/;"	e	enum:ControlSocket::__anon203
CSERR_NO_SUCH_HANDLER	elements/userlevel/handlerproxy.hh	/^	CSERR_NO_SUCH_HANDLER	= 511,$/;"	e	enum:HandlerProxy::__anon200
CSERR_OK	elements/userlevel/controlsocket.hh	/^	CSERR_OK			= HandlerProxy::CSERR_OK,	       \/\/ 200$/;"	e	enum:ControlSocket::__anon203
CSERR_OK	elements/userlevel/handlerproxy.hh	/^	CSERR_OK		= 200,$/;"	e	enum:HandlerProxy::__anon200
CSERR_OK_HANDLER_WARNING	elements/userlevel/controlsocket.hh	/^	CSERR_OK_HANDLER_WARNING	= 220,$/;"	e	enum:ControlSocket::__anon203
CSERR_PERMISSION	elements/userlevel/controlsocket.hh	/^	CSERR_PERMISSION		= HandlerProxy::CSERR_PERMISSION,      \/\/ 530$/;"	e	enum:ControlSocket::__anon203
CSERR_PERMISSION	elements/userlevel/handlerproxy.hh	/^	CSERR_PERMISSION	= 530,$/;"	e	enum:HandlerProxy::__anon200
CSERR_SYNTAX	elements/userlevel/controlsocket.hh	/^	CSERR_SYNTAX			= HandlerProxy::CSERR_SYNTAX,          \/\/ 500$/;"	e	enum:ControlSocket::__anon203
CSERR_SYNTAX	elements/userlevel/handlerproxy.hh	/^	CSERR_SYNTAX		= 500,$/;"	e	enum:HandlerProxy::__anon200
CSERR_UNIMPLEMENTED	elements/userlevel/controlsocket.hh	/^	CSERR_UNIMPLEMENTED		= 501,$/;"	e	enum:ControlSocket::__anon203
CSERR_UNSPECIFIED	elements/userlevel/controlsocket.hh	/^	CSERR_UNSPECIFIED		= HandlerProxy::CSERR_UNSPECIFIED      \/\/ 590$/;"	e	enum:ControlSocket::__anon203
CSERR_UNSPECIFIED	elements/userlevel/handlerproxy.hh	/^	CSERR_UNSPECIFIED	= 590$/;"	e	enum:HandlerProxy::__anon200
CSUM_H	elements/local/OpenFlow/lib/csum.hh	35;"	d
CTRL_ATTR_FAMILY_ID	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_ATTR_FAMILY_ID,$/;"	e	enum:__anon243
CTRL_ATTR_FAMILY_NAME	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_ATTR_FAMILY_NAME,$/;"	e	enum:__anon243
CTRL_ATTR_HDRSIZE	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_ATTR_HDRSIZE,$/;"	e	enum:__anon243
CTRL_ATTR_MAX	elements/local/OpenFlow/lib/netlink-protocol.hh	148;"	d
CTRL_ATTR_MAXATTR	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_ATTR_MAXATTR,$/;"	e	enum:__anon243
CTRL_ATTR_OPS	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_ATTR_OPS,$/;"	e	enum:__anon243
CTRL_ATTR_OP_FLAGS	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_ATTR_OP_FLAGS,$/;"	e	enum:__anon244
CTRL_ATTR_OP_ID	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_ATTR_OP_ID,$/;"	e	enum:__anon244
CTRL_ATTR_OP_MAX	elements/local/OpenFlow/lib/netlink-protocol.hh	157;"	d
CTRL_ATTR_OP_UNSPEC	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_ATTR_OP_UNSPEC,$/;"	e	enum:__anon244
CTRL_ATTR_UNSPEC	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_ATTR_UNSPEC,$/;"	e	enum:__anon243
CTRL_ATTR_VERSION	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_ATTR_VERSION,$/;"	e	enum:__anon243
CTRL_CMD_DELFAMILY	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_CMD_DELFAMILY,$/;"	e	enum:__anon242
CTRL_CMD_DELOPS	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_CMD_DELOPS,$/;"	e	enum:__anon242
CTRL_CMD_GETFAMILY	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_CMD_GETFAMILY,$/;"	e	enum:__anon242
CTRL_CMD_GETOPS	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_CMD_GETOPS,$/;"	e	enum:__anon242
CTRL_CMD_MAX	elements/local/OpenFlow/lib/netlink-protocol.hh	135;"	d
CTRL_CMD_NEWFAMILY	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_CMD_NEWFAMILY,$/;"	e	enum:__anon242
CTRL_CMD_NEWOPS	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_CMD_NEWOPS,$/;"	e	enum:__anon242
CTRL_CMD_UNSPEC	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        CTRL_CMD_UNSPEC,$/;"	e	enum:__anon242
CUT_BinHeap	ns/CUT_BinHeap.h	/^  CUT_BinHeap() {$/;"	f	class:CUT_BinHeap
CUT_BinHeap	ns/CUT_BinHeap.h	/^class CUT_BinHeap$/;"	c
CXX	bsdmodule/Makefile	/^CXX = g++ -w -W -Wall -fno-exceptions -fno-rtti  -fpermissive$/;"	m
CXX	etc/pkg-bsdmodule.mk	/^CXX ?= $(CLICKKERNEL_CXX)$/;"	m
CXX	etc/pkg-linuxmodule.mk	/^CXX ?= $(CLICKKERNEL_CXX)$/;"	m
CXX	etc/pkg-userlevel.mk	/^CXX ?= $(CLICKCXX)$/;"	m
CXX	linuxmodule/Makefile	/^CXX = g++ -w -W -Wall -fno-exceptions -fno-rtti  -fpermissive$/;"	m
CXX	ns/Makefile	/^CXX = g++ -W -Wall $/;"	m
CXX	tools/click-align/Makefile	/^CXX = $/;"	m
CXX	tools/click-align/Makefile	/^CXX = g++ -W -Wall $/;"	m
CXX	tools/click-check/Makefile	/^CXX = $/;"	m
CXX	tools/click-check/Makefile	/^CXX = g++ -W -Wall $/;"	m
CXX	tools/click-combine/Makefile	/^CXX = $/;"	m
CXX	tools/click-combine/Makefile	/^CXX = g++ -W -Wall $/;"	m
CXX	tools/click-devirtualize/Makefile	/^CXX = $/;"	m
CXX	tools/click-devirtualize/Makefile	/^CXX = g++ -W -Wall $/;"	m
CXX	tools/click-fastclassifier/Makefile	/^CXX = $/;"	m
CXX	tools/click-fastclassifier/Makefile	/^CXX = g++ -W -Wall $/;"	m
CXX	tools/click-flatten/Makefile	/^CXX = $/;"	m
CXX	tools/click-flatten/Makefile	/^CXX = g++ -W -Wall $/;"	m
CXX	tools/click-install/Makefile	/^CXX = $/;"	m
CXX	tools/click-install/Makefile	/^CXX = g++ -W -Wall $/;"	m
CXX	tools/click-mkmindriver/Makefile	/^CXX = $/;"	m
CXX	tools/click-mkmindriver/Makefile	/^CXX = g++ -W -Wall $/;"	m
CXX	tools/click-pretty/Makefile	/^CXX = $/;"	m
CXX	tools/click-pretty/Makefile	/^CXX = g++ -W -Wall $/;"	m
CXX	tools/click-undead/Makefile	/^CXX = $/;"	m
CXX	tools/click-undead/Makefile	/^CXX = g++ -W -Wall $/;"	m
CXX	tools/click-xform/Makefile	/^CXX = $/;"	m
CXX	tools/click-xform/Makefile	/^CXX = g++ -W -Wall $/;"	m
CXX	tools/click2xml/Makefile	/^CXX = $/;"	m
CXX	tools/click2xml/Makefile	/^CXX = g++ -W -Wall $/;"	m
CXX	tools/lib/Makefile	/^CXX = g++ -W -Wall $/;"	m
CXX	userlevel/Makefile	/^CXX = g++ -W -Wall $/;"	m
CXXCLASS_HH	tools/click-devirtualize/cxxclass.hh	2;"	d
CXXCOMPILE	bsdmodule/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS)$/;"	m
CXXCOMPILE	etc/pkg-bsdmodule.mk	/^CXXCOMPILE = $(CXX) $(CPPFLAGS) $(CXXFLAGS) $(PACKAGE_CXXFLAGS) $(DEFS) $(INCLUDES) $(DEPCFLAGS)$/;"	m
CXXCOMPILE	etc/pkg-linuxmodule-26.mk	/^CXXCOMPILE = $(CLICKKERNEL_CXX) $(LINUXCFLAGS) $(CLICKCPPFLAGS) \\$/;"	m
CXXCOMPILE	etc/pkg-linuxmodule.mk	/^CXXCOMPILE = $(CXX) $(CPPFLAGS) $(CFLAGS) $(CXXFLAGS) $(PACKAGE_CXXFLAGS) $(DEFS) $(INCLUDES)$/;"	m
CXXCOMPILE	etc/pkg-userlevel.mk	/^CXXCOMPILE = $(CXX) $(CPPFLAGS) $(CXXFLAGS) $(PACKAGE_CXXFLAGS) $(DEFS) $(INCLUDES)$/;"	m
CXXCOMPILE	linuxmodule/Makefile	/^CXXCOMPILE = $(CLICKCXX) $(LINUXCFLAGS) $(CLICKCPPFLAGS) $(CLICKCFLAGS) \\$/;"	m
CXXCOMPILE	linuxmodule/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(CXXFLAGS)$/;"	m
CXXCOMPILE	ns/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS)$/;"	m
CXXCOMPILE	tools/click-align/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(DEPCFLAGS)$/;"	m
CXXCOMPILE	tools/click-check/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(DEPCFLAGS)$/;"	m
CXXCOMPILE	tools/click-combine/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(DEPCFLAGS)$/;"	m
CXXCOMPILE	tools/click-devirtualize/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(DEPCFLAGS)$/;"	m
CXXCOMPILE	tools/click-fastclassifier/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(DEPCFLAGS)$/;"	m
CXXCOMPILE	tools/click-flatten/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(DEPCFLAGS)$/;"	m
CXXCOMPILE	tools/click-install/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(DEPCFLAGS)$/;"	m
CXXCOMPILE	tools/click-mkmindriver/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(DEPCFLAGS)$/;"	m
CXXCOMPILE	tools/click-pretty/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(DEPCFLAGS)$/;"	m
CXXCOMPILE	tools/click-undead/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(DEPCFLAGS)$/;"	m
CXXCOMPILE	tools/click-xform/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(DEPCFLAGS)$/;"	m
CXXCOMPILE	tools/click2xml/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(DEPCFLAGS)$/;"	m
CXXCOMPILE	tools/lib/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS) $(DEPCFLAGS)$/;"	m
CXXCOMPILE	userlevel/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CXXFLAGS)$/;"	m
CXXCPP	bsdmodule/Makefile	/^CXXCPP = g++ -W -Wall  -E$/;"	m
CXXCPP	etc/pkg-bsdmodule.mk	/^CXXCPP ?= $(CLICKCXXCPP)$/;"	m
CXXCPP	etc/pkg-linuxmodule.mk	/^CXXCPP ?= $(CLICKCXXCPP)$/;"	m
CXXCPP	etc/pkg-userlevel.mk	/^CXXCPP ?= $(CLICKCXXCPP)$/;"	m
CXXCPP	linuxmodule/Makefile	/^CXXCPP = g++ -W -Wall  -E$/;"	m
CXXCPP	ns/Makefile	/^CXXCPP = g++ -W -Wall  -E$/;"	m
CXXCPP	userlevel/Makefile	/^CXXCPP = g++ -W -Wall  -E$/;"	m
CXXFLAGS	bsdmodule/Makefile	/^CXXFLAGS =  -O2 -g -fPIC -fno-builtin$/;"	m
CXXFLAGS	bsdmodule/Makefile	/^CXXFLAGS =  -O2 -g -fno-builtin$/;"	m
CXXFLAGS	etc/pkg-bsdmodule.mk	/^CXXFLAGS ?= $(CLICKCXXFLAGS_NDEBUG)$/;"	m
CXXFLAGS	etc/pkg-linuxmodule-26.mk	/^CXXFLAGS ?= $(CLICKCXXFLAGS_NDEBUG)$/;"	m
CXXFLAGS	etc/pkg-linuxmodule.mk	/^CXXFLAGS ?= $(CLICKCXXFLAGS_NDEBUG)$/;"	m
CXXFLAGS	etc/pkg-userlevel.mk	/^CXXFLAGS ?= $(CLICKCXXFLAGS) -fPIC$/;"	m
CXXFLAGS	linuxmodule/Makefile	/^CXXFLAGS =  -O2$/;"	m
CXXFLAGS	ns/Makefile	/^CXXFLAGS = -g -O2 -fPIC$/;"	m
CXXFLAGS	tools/click-align/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	tools/click-check/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	tools/click-combine/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	tools/click-devirtualize/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	tools/click-fastclassifier/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	tools/click-flatten/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	tools/click-install/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	tools/click-mkmindriver/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	tools/click-pretty/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	tools/click-undead/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	tools/click-xform/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	tools/click2xml/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	tools/lib/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	userlevel/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXLD	bsdmodule/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	etc/pkg-bsdmodule.mk	/^CXXLD = $(CXX)$/;"	m
CXXLD	etc/pkg-linuxmodule.mk	/^CXXLD = $(CXX)$/;"	m
CXXLD	etc/pkg-userlevel.mk	/^CXXLD = $(CXX)$/;"	m
CXXLD	linuxmodule/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	ns/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	tools/click-align/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	tools/click-check/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	tools/click-combine/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	tools/click-devirtualize/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	tools/click-fastclassifier/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	tools/click-flatten/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	tools/click-install/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	tools/click-mkmindriver/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	tools/click-pretty/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	tools/click-undead/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	tools/click-xform/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	tools/click2xml/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	userlevel/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLINK	bsdmodule/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	etc/pkg-bsdmodule.mk	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	etc/pkg-linuxmodule.mk	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	etc/pkg-userlevel.mk	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	linuxmodule/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	ns/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	tools/click-align/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	tools/click-check/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	tools/click-combine/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	tools/click-devirtualize/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	tools/click-fastclassifier/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	tools/click-flatten/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	tools/click-install/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	tools/click-mkmindriver/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	tools/click-pretty/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	tools/click-undead/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	tools/click-xform/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	tools/click2xml/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXLINK	userlevel/Makefile	/^CXXLINK = $(CXXLD) $(CXXFLAGS) $(LDFLAGS) -o $@$/;"	m
CXXSUFFIX	tools/click-install/common.hh	25;"	d
CXXSUFFIX	tools/click-install/common.hh	29;"	d
CX_COMPOUND	tools/click2xml/xml2click.cc	/^enum CxState { CX_NONE, CX_CONFIGURATION, CX_ELEMENTCLASS, CX_COMPOUND,$/;"	e	enum:CxState	file:
CX_CONFIGURATION	tools/click2xml/xml2click.cc	/^enum CxState { CX_NONE, CX_CONFIGURATION, CX_ELEMENTCLASS, CX_COMPOUND,$/;"	e	enum:CxState	file:
CX_ELEMENTCLASS	tools/click2xml/xml2click.cc	/^enum CxState { CX_NONE, CX_CONFIGURATION, CX_ELEMENTCLASS, CX_COMPOUND,$/;"	e	enum:CxState	file:
CX_ERROR	tools/click2xml/xml2click.cc	/^	       CX_IN_EMPTY, CX_ERROR };$/;"	e	enum:CxState	file:
CX_IN_EMPTY	tools/click2xml/xml2click.cc	/^	       CX_IN_EMPTY, CX_ERROR };$/;"	e	enum:CxState	file:
CX_NONE	tools/click2xml/xml2click.cc	/^enum CxState { CX_NONE, CX_CONFIGURATION, CX_ELEMENTCLASS, CX_COMPOUND,$/;"	e	enum:CxState	file:
C_CLICK	include/click/routerthread.hh	/^    enum { C_CLICK, C_KERNEL, NCLIENTS };$/;"	e	enum:RouterThread::__anon423
C_FR	elements/analysis/fromnlanrdump.hh	/^    enum { C_FR, C_FRPLUS, C_TSH };$/;"	e	enum:FromNLANRDump::__anon280
C_FRPLUS	elements/analysis/fromnlanrdump.hh	/^    enum { C_FR, C_FRPLUS, C_TSH };$/;"	e	enum:FromNLANRDump::__anon280
C_KERNEL	include/click/routerthread.hh	/^    enum { C_CLICK, C_KERNEL, NCLIENTS };$/;"	e	enum:RouterThread::__anon423
C_TSH	elements/analysis/fromnlanrdump.hh	/^    enum { C_FR, C_FRPLUS, C_TSH };$/;"	e	enum:FromNLANRDump::__anon280
CachedLocFound	elements/grid/gridroutecb.hh	/^    CachedLocFound     = 9$/;"	e	enum:GridRouteActionCallback::Action
Capsule	apps/clicky/src/permstr.hh	/^    typedef Doodad *Capsule;$/;"	t	class:PermString
CastElementFilter	include/click/elemfilter.hh	/^class CastElementFilter : public ElementFilter { public:$/;"	c
CastElementFilter	lib/elemfilter.cc	/^CastElementFilter::CastElementFilter(const String &name)$/;"	f	class:CastElementFilter
CelingAlignPtr	drivers/e1000-4.x/src/base_comm.h	576;"	d
CelingAlignPtr	drivers/e1000-4.x/src/base_comm.h	578;"	d
ChangeButtonAction	apps/ClickController/ClickController.java	/^    private class ChangeButtonAction extends AbstractAction {$/;"	c	class:ClickController
ChangeUID	elements/userlevel/changeuid.cc	/^ChangeUID::ChangeUID()$/;"	f	class:ChangeUID
ChangeUID	elements/userlevel/changeuid.hh	/^class ChangeUID : public Element { public:$/;"	c
ChatterSocket	elements/userlevel/chattersocket.cc	/^ChatterSocket::ChatterSocket()$/;"	f	class:ChatterSocket
ChatterSocket	elements/userlevel/chattersocket.hh	/^class ChatterSocket : public Element { public:$/;"	c
ChatterSocketErrorHandler	elements/userlevel/chattersocket.cc	/^    ChatterSocketErrorHandler(ErrorHandler *errh)$/;"	f	struct:ChatterSocketErrorHandler
ChatterSocketErrorHandler	elements/userlevel/chattersocket.cc	/^struct ChatterSocketErrorHandler : public ErrorVeneer {$/;"	s	file:
CheckARPHeader	elements/ethernet/checkarpheader.cc	/^CheckARPHeader::CheckARPHeader()$/;"	f	class:CheckARPHeader
CheckARPHeader	elements/ethernet/checkarpheader.hh	/^class CheckARPHeader : public Element { public:$/;"	c
CheckCRC32	elements/standard/checkcrc32.cc	/^CheckCRC32::CheckCRC32()$/;"	f	class:CheckCRC32
CheckCRC32	elements/standard/checkcrc32.hh	/^class CheckCRC32 : public Element { public:$/;"	c
CheckErrorHandler	tools/click-check/click-check.cc	/^    CheckErrorHandler(ErrorHandler *errh)$/;"	f	struct:__anon540::CheckErrorHandler
CheckErrorHandler	tools/click-check/click-check.cc	/^struct CheckErrorHandler : public ErrorVeneer {$/;"	s	namespace:__anon540	file:
CheckGridHeader	elements/grid/checkgridheader.cc	/^CheckGridHeader::CheckGridHeader()$/;"	f	class:CheckGridHeader
CheckGridHeader	elements/grid/checkgridheader.hh	/^class CheckGridHeader : public Element {$/;"	c
CheckGridHeader_read_drops	elements/grid/checkgridheader.cc	/^CheckGridHeader_read_drops(Element *xf, void *)$/;"	f	file:
CheckICMPHeader	elements/icmp/checkicmpheader.cc	/^CheckICMPHeader::CheckICMPHeader()$/;"	f	class:CheckICMPHeader
CheckICMPHeader	elements/icmp/checkicmpheader.hh	/^class CheckICMPHeader : public Element { public:$/;"	c
CheckIP6Header	elements/ip6/checkip6header.cc	/^CheckIP6Header::CheckIP6Header()$/;"	f	class:CheckIP6Header
CheckIP6Header	elements/ip6/checkip6header.hh	/^class CheckIP6Header : public Element {$/;"	c
CheckIP6Header_read_drops	elements/ip6/checkip6header.cc	/^CheckIP6Header_read_drops(Element *xf, void *)$/;"	f	file:
CheckIPHeader	elements/ip/checkipheader.cc	/^CheckIPHeader::CheckIPHeader()$/;"	f	class:CheckIPHeader
CheckIPHeader	elements/ip/checkipheader.hh	/^class CheckIPHeader : public Element { public:$/;"	c
CheckIPHeader2	elements/ip/checkipheader2.cc	/^CheckIPHeader2::CheckIPHeader2()$/;"	f	class:CheckIPHeader2
CheckIPHeader2	elements/ip/checkipheader2.hh	/^class CheckIPHeader2 : public CheckIPHeader { public:$/;"	c
CheckIPHeaderAlignClass	tools/click-align/alignclass.cc	/^CheckIPHeaderAlignClass::CheckIPHeaderAlignClass(const String &name)$/;"	f	class:CheckIPHeaderAlignClass
CheckIPHeaderAlignClass	tools/click-align/alignclass.hh	/^class CheckIPHeaderAlignClass : public AlignClass { public:$/;"	c
CheckLength	elements/standard/checklength.cc	/^CheckLength::CheckLength()$/;"	f	class:CheckLength
CheckLength	elements/standard/checklength.hh	/^class CheckLength : public Element { public:$/;"	c
CheckPacket	elements/test/checkpacket.cc	/^CheckPacket::CheckPacket()$/;"	f	class:CheckPacket
CheckPacket	elements/test/checkpacket.hh	/^class CheckPacket : public Element { public:$/;"	c
CheckPaint	elements/standard/checkpaint.cc	/^CheckPaint::CheckPaint()$/;"	f	class:CheckPaint
CheckPaint	elements/standard/checkpaint.hh	/^class CheckPaint : public Element { public:$/;"	c
CheckPattern	elements/radio/checkpattern.cc	/^CheckPattern::CheckPattern()$/;"	f	class:CheckPattern
CheckPattern	elements/radio/checkpattern.hh	/^class CheckPattern : public Element {$/;"	c
CheckTCPHeader	elements/tcpudp/checktcpheader.cc	/^CheckTCPHeader::CheckTCPHeader()$/;"	f	class:CheckTCPHeader
CheckTCPHeader	elements/tcpudp/checktcpheader.hh	/^class CheckTCPHeader : public Element { public:$/;"	c
CheckUDPHeader	elements/tcpudp/checkudpheader.cc	/^CheckUDPHeader::CheckUDPHeader()$/;"	f	class:CheckUDPHeader
CheckUDPHeader	elements/tcpudp/checkudpheader.hh	/^class CheckUDPHeader : public Element { public:$/;"	c
Child	elements/ip/radixiplookup.cc	/^    struct Child {$/;"	s	class:RadixIPLookup::Radix	file:
Child	elements/ipsec/radixipseclookup.hh	/^    struct Child {$/;"	s	class:RadixIPsecLookup::Radix
Chunk	lib/glue.cc	/^struct Chunk {$/;"	s	file:
ChunkLink	elements/ip/ipreassembler.hh	/^    struct ChunkLink {$/;"	s	class:IPReassembler
Class	elements/local/OpenFlow/lib/vconn-provider.hh	/^    struct pvconn_class *Class;$/;"	m	struct:pvconn	typeref:struct:pvconn::pvconn_class
Class	elements/local/OpenFlow/lib/vconn-provider.hh	/^    struct vconn_class *Class;$/;"	m	struct:vconn	typeref:struct:vconn::vconn_class
Classification	elements/standard/classification.cc	/^namespace Classification {$/;"	n	file:
Classification	elements/standard/classification.hh	/^namespace Classification {$/;"	n
Classifier	elements/standard/classifier.cc	/^Classifier::Classifier()$/;"	f	class:Classifier
Classifier	elements/standard/classifier.hh	/^class Classifier : public Element { public:$/;"	c
ClassifierAligner	tools/click-align/alignclass.hh	/^  ClassifierAligner() { }$/;"	f	class:ClassifierAligner
ClassifierAligner	tools/click-align/alignclass.hh	/^class ClassifierAligner : public Aligner {$/;"	c
Classifier_Insn	tools/click-fastclassifier/click-fastclassifier.hh	/^struct Classifier_Insn {$/;"	s
Classifier_Program	tools/click-fastclassifier/click-fastclassifier.hh	/^struct Classifier_Program {$/;"	s
CleanupStage	include/click/element.hh	/^    enum CleanupStage {$/;"	g	class:Element
CleartextEntry	elements/ip/directiplookup.hh	/^    struct CleartextEntry {$/;"	s	class:DirectIPLookup
ClickController	apps/ClickController/ClickController.java	/^    public ClickController(JFrame frame) {$/;"	m	class:ClickController
ClickController	apps/ClickController/ClickController.java	/^class ClickController extends JPanel {$/;"	c
ClickException	apps/ClickController/ClickException.java	/^    ClickException() {$/;"	m	class:ClickException
ClickException	apps/ClickController/ClickException.java	/^    ClickException(String s) {$/;"	m	class:ClickException
ClickException	apps/ClickController/ClickException.java	/^public class ClickException extends Exception {$/;"	c
ClickIno	include/click/ino.hh	/^class ClickIno { public:$/;"	c
ClickInodeInfo	linuxmodule/clickfs.cc	/^struct ClickInodeInfo {$/;"	s	file:
ClickProvision	lib/driver.cc	/^struct ClickProvision {$/;"	s	file:
ClickfsHandlerErrorHandler	linuxmodule/clickfs.cc	/^    ClickfsHandlerErrorHandler() {$/;"	f	class:__anon523::ClickfsHandlerErrorHandler
ClickfsHandlerErrorHandler	linuxmodule/clickfs.cc	/^class ClickfsHandlerErrorHandler : public ErrorHandler { public:$/;"	c	namespace:__anon523	file:
ClickyInfo	elements/standard/clickyinfo.cc	/^ClickyInfo::ClickyInfo()$/;"	f	class:ClickyInfo
ClickyInfo	elements/standard/clickyinfo.hh	/^class ClickyInfo : public Element { public:$/;"	c
ClickyLexerTInfo	apps/clicky/src/wmain.cc	/^    ClickyLexerTInfo(GtkTextBuffer *buffer, const String &config, GatherErrorHandler *gerrh)$/;"	f	class:clicky::ClickyLexerTInfo
ClickyLexerTInfo	apps/clicky/src/wmain.cc	/^class ClickyLexerTInfo : public LexerTInfo { public:$/;"	c	namespace:clicky	file:
Client	elements/standard/stridesched.hh	/^	Client()$/;"	f	struct:StrideSched::Client
Client	elements/standard/stridesched.hh	/^    struct Client {$/;"	s	class:StrideSched
Client	include/click/routerthread.hh	/^	Client() : pass(0), tickets(0)	{ }$/;"	f	struct:RouterThread::Client
Client	include/click/routerthread.hh	/^    struct Client {			\/\/ top-level stride clients$/;"	s	class:RouterThread
CloseWindowAdapter	apps/ClickController/ClickController.java	/^	public CloseWindowAdapter(ClickController cntr) {$/;"	m	class:ClickController.CloseWindowAdapter
CloseWindowAdapter	apps/ClickController/ClickController.java	/^    private static class CloseWindowAdapter extends WindowAdapter {$/;"	c	class:ClickController
Clp_AddStringListType	lib/clp.c	/^Clp_AddStringListType(Clp_Parser *clp, int val_type, int flags, ...)$/;"	f
Clp_AddStringListTypeVec	lib/clp.c	/^Clp_AddStringListTypeVec(Clp_Parser *clp, int val_type, int flags,$/;"	f
Clp_AddType	lib/clp.c	/^Clp_AddType(Clp_Parser *clp, int val_type, int flags,$/;"	f
Clp_AllowNumbers	include/click/clp.h	242;"	d
Clp_BadOption	include/click/clp.h	134;"	d
Clp_BuildString	lib/clp.c	/^typedef struct Clp_BuildString {$/;"	s	file:
Clp_BuildString	lib/clp.c	/^} Clp_BuildString;$/;"	t	typeref:struct:Clp_BuildString	file:
Clp_CurOptionName	lib/clp.c	/^Clp_CurOptionName(Clp_Parser *clp)$/;"	f
Clp_CurOptionNameBuf	lib/clp.c	/^Clp_CurOptionNameBuf(Clp_Parser *clp, char *buf, int len)$/;"	f
Clp_DeleteParser	lib/clp.c	/^Clp_DeleteParser(Clp_Parser *clp)$/;"	f
Clp_DeleteParserState	lib/clp.c	/^Clp_DeleteParserState(Clp_ParserState *state)$/;"	f
Clp_DisallowOptions	include/click/clp.h	232;"	d
Clp_Done	include/click/clp.h	132;"	d
Clp_DoubledLong	lib/clp.c	131;"	d	file:
Clp_Error	include/click/clp.h	136;"	d
Clp_ErrorHandler	include/click/clp.h	/^typedef void (*Clp_ErrorHandler)(Clp_Parser *clp, const char *message);$/;"	t
Clp_InitialValType	lib/clp.c	133;"	d	file:
Clp_InternOption	lib/clp.c	/^} Clp_InternOption;$/;"	t	typeref:struct:__anon500	file:
Clp_Internal	lib/clp.c	/^typedef struct Clp_Internal {$/;"	s	file:
Clp_Internal	lib/clp.c	/^} Clp_Internal;$/;"	t	typeref:struct:Clp_Internal	file:
Clp_Long	include/click/clp.h	119;"	d
Clp_LongImplicit	include/click/clp.h	125;"	d
Clp_LongNegated	include/click/clp.h	123;"	d
Clp_Mandatory	include/click/clp.h	88;"	d
Clp_Negate	include/click/clp.h	96;"	d
Clp_NewParser	lib/clp.c	/^Clp_NewParser(int argc, const char * const *argv, int nopt, const Clp_Option *opt)$/;"	f
Clp_NewParserState	lib/clp.c	/^Clp_NewParserState(void)$/;"	f
Clp_Next	lib/clp.c	/^Clp_Next(Clp_Parser *clp)$/;"	f
Clp_NoVal	include/click/clp.h	51;"	d
Clp_NotOption	include/click/clp.h	130;"	d
Clp_Oclass	lib/clp.c	/^} Clp_Oclass;$/;"	t	typeref:struct:__anon501	file:
Clp_OclassSize	lib/clp.c	165;"	d	file:
Clp_OnlyNegated	include/click/clp.h	100;"	d
Clp_Option	include/click/clp.h	/^struct Clp_Option {$/;"	s
Clp_Option	include/click/clp.h	/^typedef struct Clp_Option Clp_Option;$/;"	t	typeref:struct:Clp_Option
Clp_OptionChar	lib/clp.c	/^Clp_OptionChar(Clp_Parser *clp, int c)$/;"	f
Clp_OptionCharsSize	lib/clp.c	159;"	d	file:
Clp_OptionError	lib/clp.c	/^Clp_OptionError(Clp_Parser *clp, const char *format, ...)$/;"	f
Clp_Optional	include/click/clp.h	94;"	d
Clp_Parser	include/click/clp.h	/^struct Clp_Parser {$/;"	s
Clp_Parser	include/click/clp.h	/^typedef struct Clp_Parser Clp_Parser;$/;"	t	typeref:struct:Clp_Parser
Clp_ParserState	include/click/clp.h	/^typedef struct Clp_ParserState Clp_ParserState;$/;"	t	typeref:struct:Clp_ParserState
Clp_ParserState	lib/clp.c	/^struct Clp_ParserState {$/;"	s	file:
Clp_PreferredMatch	include/click/clp.h	106;"	d
Clp_ProgramName	lib/clp.c	/^Clp_ProgramName(Clp_Parser *clp)$/;"	f
Clp_RestoreParser	lib/clp.c	/^Clp_RestoreParser(Clp_Parser *clp, const Clp_ParserState *state)$/;"	f
Clp_SaveParser	lib/clp.c	/^Clp_SaveParser(const Clp_Parser *clp, Clp_ParserState *state)$/;"	f
Clp_SetArguments	lib/clp.c	/^Clp_SetArguments(Clp_Parser *clp, int argc, const char * const *argv)$/;"	f
Clp_SetErrorHandler	lib/clp.c	/^Clp_SetErrorHandler(Clp_Parser *clp, void (*errh)(Clp_Parser *, const char *))$/;"	f
Clp_SetOptionChar	lib/clp.c	/^Clp_SetOptionChar(Clp_Parser *clp, int c, int type)$/;"	f
Clp_SetOptionProcessing	lib/clp.c	/^Clp_SetOptionProcessing(Clp_Parser *clp, int on)$/;"	f
Clp_SetOptions	lib/clp.c	/^Clp_SetOptions(Clp_Parser *clp, int nopt, const Clp_Option *opt)$/;"	f
Clp_SetProgramName	lib/clp.c	/^Clp_SetProgramName(Clp_Parser *clp, const char *name)$/;"	f
Clp_SetUTF8	lib/clp.c	/^Clp_SetUTF8(Clp_Parser *clp, int utf8)$/;"	f
Clp_Shift	lib/clp.c	/^Clp_Shift(Clp_Parser *clp, int allow_options)$/;"	f
Clp_Short	include/click/clp.h	117;"	d
Clp_ShortNegated	include/click/clp.h	121;"	d
Clp_StringList	lib/clp.c	/^typedef struct Clp_StringList {$/;"	s	file:
Clp_StringList	lib/clp.c	/^} Clp_StringList;$/;"	t	typeref:struct:Clp_StringList	file:
Clp_VaOptionError	lib/clp.c	/^Clp_VaOptionError(Clp_Parser *clp, Clp_BuildString *bs,$/;"	f	file:
Clp_ValAnimal	elements/test/clptest.cc	27;"	d	file:
Clp_ValBool	include/click/clp.h	58;"	d
Clp_ValDouble	include/click/clp.h	77;"	d
Clp_ValFirstUser	include/click/clp.h	80;"	d
Clp_ValInt	include/click/clp.h	63;"	d
Clp_ValIntSize	include/click/clp.h	141;"	d
Clp_ValParseFunc	include/click/clp.h	/^typedef int (*Clp_ValParseFunc)(Clp_Parser *clp, const char *vstr,$/;"	t
Clp_ValSize	include/click/clp.h	139;"	d
Clp_ValString	include/click/clp.h	52;"	d
Clp_ValStringNotOption	include/click/clp.h	54;"	d
Clp_ValType	lib/clp.c	/^} Clp_ValType;$/;"	t	typeref:struct:__anon499	file:
Clp_ValUnsigned	include/click/clp.h	70;"	d
CombinedAligner	tools/click-align/alignclass.hh	/^  CombinedAligner(Aligner *have, Aligner *want) : _have(have), _want(want) { }$/;"	f	class:CombinedAligner
CombinedAligner	tools/click-align/alignclass.hh	/^class CombinedAligner : public Aligner {$/;"	c
Combiner	elements/standard/classification.hh	/^enum Combiner {$/;"	g	namespace:Classification
CompareBlock	elements/standard/compblock.cc	/^CompareBlock::CompareBlock()$/;"	f	class:CompareBlock
CompareBlock	elements/standard/compblock.hh	/^class CompareBlock : public Element { public:$/;"	c
ComparePackets	elements/test/comparepackets.cc	/^ComparePackets::ComparePackets()$/;"	f	class:ComparePackets
ComparePackets	elements/test/comparepackets.hh	/^class ComparePackets : public Element { public:$/;"	c
Compound	lib/lexer.cc	/^Lexer::Compound::Compound(const String &name, const String &lm, VariableEnvironment *parent)$/;"	f	class:Lexer::Compound
Compound	lib/lexer.cc	/^class Lexer::Compound : public Element { public:$/;"	c	class:Lexer	file:
CompressedProgram	elements/standard/classification.hh	/^    CompressedProgram()$/;"	f	class:Classification::Wordwise::CompressedProgram
CompressedProgram	elements/standard/classification.hh	/^class CompressedProgram { public:$/;"	c	namespace:Classification::Wordwise
ConfParseTest	elements/test/confparsetest.cc	/^ConfParseTest::ConfParseTest()$/;"	f	class:ConfParseTest
ConfParseTest	elements/test/confparsetest.hh	/^class ConfParseTest : public Element { public:$/;"	c
ConfigError	elements/grid/gridroutecb.hh	/^    ConfigError        = 5,$/;"	e	enum:GridRouteActionCallback::DropReason
ConfigurePhase	elements/ip/iprewriterbase.hh	/^    enum ConfigurePhase {$/;"	g	class:IPRewriterBase
ConfigurePhase	elements/userlevel/fromhost.hh	/^    enum ConfigurePhase {$/;"	g	class:FromHost
ConfigurePhase	elements/userlevel/kernelfilter.hh	/^    enum ConfigurePhase {$/;"	g	class:KernelFilter
ConfigurePhase	include/click/element.hh	/^    enum ConfigurePhase {$/;"	g	class:Element
CongestionNotification	elements/local/FlowNet/common/CongestionDetection.hh	/^struct CongestionNotification {$/;"	s
Connection	include/click/lexer.hh	/^    typedef Router::Connection Connection;$/;"	t	class:Lexer
Connection	include/click/router.hh	/^	Connection() {$/;"	f	struct:Router::Connection
Connection	include/click/router.hh	/^	Connection(int from_idx, int from_port, int to_idx, int to_port) {$/;"	f	struct:Router::Connection
Connection	include/click/router.hh	/^    struct Connection {$/;"	s	class:Router
ConnectionSet	tools/lib/routert.hh	/^    struct ConnectionSet {$/;"	s	class:RouterT
ConnectionT	tools/lib/elementt.cc	/^ConnectionT::ConnectionT(const PortT &from, const PortT &to, const LandmarkT &lm)$/;"	f	class:ConnectionT
ConnectionT	tools/lib/elementt.hh	/^ConnectionT::ConnectionT()$/;"	f	class:ConnectionT
ConnectionT	tools/lib/elementt.hh	/^class ConnectionT { public:$/;"	c
ConnectionX	tools/lib/routert.hh	/^	ConnectionX(const PortT &from, const PortT &to,$/;"	f	struct:RouterT::ConnectionX
ConnectionX	tools/lib/routert.hh	/^    struct ConnectionX : public ConnectionT {$/;"	s	class:RouterT
ContextErrorHandler	include/click/error.hh	/^class ContextErrorHandler : public ErrorVeneer { public:$/;"	c
ContextErrorHandler	lib/error.cc	/^ContextErrorHandler::ContextErrorHandler(ErrorHandler *errh, const char *fmt,$/;"	f	class:ContextErrorHandler
ControlSocket	apps/ClickController/ControlSocket.java	/^    public ControlSocket(InetAddress host, int port) throws IOException {$/;"	m	class:ControlSocket
ControlSocket	apps/ClickController/ControlSocket.java	/^public class ControlSocket {$/;"	c
ControlSocket	elements/userlevel/controlsocket.cc	/^ControlSocket::ControlSocket()$/;"	f	class:ControlSocket
ControlSocket	elements/userlevel/controlsocket.hh	/^class ControlSocket : public Element { public:$/;"	c
ControlSocketClient	apps/csclient/csclient.hh	/^  ControlSocketClient() : _init(false), _fd(0) { }$/;"	f	class:ControlSocketClient
ControlSocketClient	apps/csclient/csclient.hh	/^  ControlSocketClient(ControlSocketClient &) : _init(false), _fd(0) { }$/;"	f	class:ControlSocketClient
ControlSocketClient	apps/csclient/csclient.hh	/^class ControlSocketClient$/;"	c
ControlSocketErrorHandler	elements/userlevel/controlsocket.cc	/^    ControlSocketErrorHandler()$/;"	f	struct:ControlSocketErrorHandler
ControlSocketErrorHandler	elements/userlevel/controlsocket.cc	/^struct ControlSocketErrorHandler : public ErrorHandler { public:$/;"	s	file:
Conversion	lib/error.cc	/^struct ErrorHandler::Conversion {$/;"	s	class:ErrorHandler	file:
ConversionFlags	include/click/error.hh	/^    enum ConversionFlags {$/;"	g	class:ErrorHandler
ConversionFunction	include/click/error.hh	/^    typedef String (*ConversionFunction)(int flags, VA_LIST_REF_T);$/;"	t	class:ErrorHandler
Counter	elements/ip/ipratemon.hh	/^      Counter()$/;"	f	struct:IPRateMonitor::Counter
Counter	elements/ip/ipratemon.hh	/^      Counter(const MyEWMA &ewma)$/;"	f	struct:IPRateMonitor::Counter
Counter	elements/ip/ipratemon.hh	/^  struct Counter {$/;"	s	class:IPRateMonitor
Counter	elements/standard/counter.cc	/^Counter::Counter()$/;"	f	class:Counter
Counter	elements/standard/counter.hh	/^class Counter : public Element { public:$/;"	c
CpErrors	include/click/confparse.hh	/^enum CpErrors {$/;"	g
CpKparseFlags	include/click/confparse.hh	/^enum CpKparseFlags {$/;"	g
CpVaHelper	lib/confparse.cc	/^CpVaHelper::CpVaHelper(struct cp_value *cp_values_, int cp_values_size_,$/;"	f	class:__anon517::CpVaHelper
CpVaHelper	lib/confparse.cc	/^struct CpVaHelper {$/;"	s	namespace:__anon517	file:
CpVaParseCmd	include/click/confparse.hh	/^typedef const char *CpVaParseCmd;$/;"	t
CxConfig	tools/click2xml/xml2click.cc	/^CxConfig::CxConfig(CxConfig *enclosing, const String &xml_landmark)$/;"	f	class:CxConfig
CxConfig	tools/click2xml/xml2click.hh	/^struct CxConfig {$/;"	s
CxConnection	tools/click2xml/xml2click.hh	/^    CxConnection()		: fromport(0), toport(0) { }$/;"	f	struct:CxConnection
CxConnection	tools/click2xml/xml2click.hh	/^struct CxConnection {$/;"	s
CxElement	tools/click2xml/xml2click.hh	/^    CxElement()			: ninputs(-1), noutputs(-1) { }$/;"	f	struct:CxElement
CxElement	tools/click2xml/xml2click.hh	/^struct CxElement {$/;"	s
CxState	tools/click2xml/xml2click.cc	/^enum CxState { CX_NONE, CX_CONFIGURATION, CX_ELEMENTCLASS, CX_COMPOUND,$/;"	g	file:
CxxClass	tools/click-devirtualize/cxxclass.cc	/^CxxClass::CxxClass(const String &name)$/;"	f	class:CxxClass
CxxClass	tools/click-devirtualize/cxxclass.hh	/^class CxxClass {$/;"	c
CxxFunction	tools/click-devirtualize/cxxclass.cc	/^CxxFunction::CxxFunction(const String &name, bool in_header,$/;"	f	class:CxxFunction
CxxFunction	tools/click-devirtualize/cxxclass.hh	/^  CxxFunction()				: _alive(false) { }$/;"	f	class:CxxFunction
CxxFunction	tools/click-devirtualize/cxxclass.hh	/^class CxxFunction {$/;"	c
CxxInfo	tools/click-devirtualize/cxxclass.cc	/^CxxInfo::CxxInfo()$/;"	f	class:CxxInfo
CxxInfo	tools/click-devirtualize/cxxclass.hh	/^class CxxInfo { public:$/;"	c
CycleCountAccum	elements/linuxmodule/cyclecountaccum.cc	/^CycleCountAccum::CycleCountAccum()$/;"	f	class:CycleCountAccum
CycleCountAccum	elements/linuxmodule/cyclecountaccum.hh	/^class CycleCountAccum : public Element { public:$/;"	c
DAGAAL5Cell	elements/analysis/fromdagdump.hh	/^    struct DAGAAL5Cell {$/;"	s	class:FromDAGDump
DAGATMCell	elements/analysis/fromdagdump.hh	/^    struct DAGATMCell {$/;"	s	class:FromDAGDump
DAGCell	elements/analysis/fromdagdump.hh	/^    struct DAGCell {$/;"	s	class:FromDAGDump
DAGEthernetCell	elements/analysis/fromdagdump.hh	/^    struct DAGEthernetCell {$/;"	s	class:FromDAGDump
DAGPosCell	elements/analysis/fromdagdump.hh	/^    struct DAGPosCell {$/;"	s	class:FromDAGDump
DBG	elements/grid/dsdvroutetable.cc	39;"	d	file:
DBG2	elements/grid/dsdvroutetable.cc	40;"	d	file:
DBG3	elements/grid/dsdvroutetable.cc	41;"	d	file:
DBType	include/click/nameinfo.hh	/^    enum DBType {$/;"	g	class:NameInfo
DCU_MISS_OUTSTANDING	include/click/perfctr-i586.hh	12;"	d
DEBUG	elements/tcpudp/snooptcp.hh	25;"	d
DEBUG	elements/threads/balancedthreadsched.cc	32;"	d	file:
DEBUG	linuxmodule/proclikefs.c	70;"	d	file:
DEBUGFUNC	drivers/e1000-4.x/src/e1000_osdep.h	74;"	d
DEBUGFUNC	drivers/e1000-5.x/src/e1000_osdep.h	77;"	d
DEBUGFUNC	drivers/e1000-7.x/src/e1000_osdep.h	75;"	d
DEBUGLOG	drivers/e1000-4.x/src/ans_os.h	93;"	d
DEBUGLOG	drivers/e1000-4.x/src/ans_os.h	97;"	d
DEBUGLOG1	drivers/e1000-4.x/src/ans_os.h	94;"	d
DEBUGLOG1	drivers/e1000-4.x/src/ans_os.h	98;"	d
DEBUGLOG2	drivers/e1000-4.x/src/ans_os.h	95;"	d
DEBUGLOG2	drivers/e1000-4.x/src/ans_os.h	99;"	d
DEBUGOUT	drivers/e1000-4.x/src/e1000_osdep.h	67;"	d
DEBUGOUT	drivers/e1000-4.x/src/e1000_osdep.h	70;"	d
DEBUGOUT	drivers/e1000-5.x/src/e1000_osdep.h	70;"	d
DEBUGOUT	drivers/e1000-5.x/src/e1000_osdep.h	73;"	d
DEBUGOUT	drivers/e1000-7.x/src/e1000_osdep.h	72;"	d
DEBUGOUT1	drivers/e1000-4.x/src/e1000_osdep.h	68;"	d
DEBUGOUT1	drivers/e1000-4.x/src/e1000_osdep.h	71;"	d
DEBUGOUT1	drivers/e1000-5.x/src/e1000_osdep.h	71;"	d
DEBUGOUT1	drivers/e1000-5.x/src/e1000_osdep.h	74;"	d
DEBUGOUT1	drivers/e1000-7.x/src/e1000_osdep.h	73;"	d
DEBUGOUT2	drivers/e1000-4.x/src/e1000_osdep.h	75;"	d
DEBUGOUT2	drivers/e1000-5.x/src/e1000_osdep.h	78;"	d
DEBUGOUT2	drivers/e1000-7.x/src/e1000_osdep.h	76;"	d
DEBUGOUT3	drivers/e1000-4.x/src/e1000_osdep.h	76;"	d
DEBUGOUT3	drivers/e1000-5.x/src/e1000_osdep.h	79;"	d
DEBUGOUT3	drivers/e1000-7.x/src/e1000_osdep.h	77;"	d
DEBUGOUT7	drivers/e1000-4.x/src/e1000_osdep.h	77;"	d
DEBUGOUT7	drivers/e1000-5.x/src/e1000_osdep.h	80;"	d
DEBUGOUT7	drivers/e1000-7.x/src/e1000_osdep.h	78;"	d
DEBUG_CHATTER	elements/grid/dsrarptable.cc	37;"	d	file:
DEBUG_CHATTER	elements/grid/dsrroutetable.cc	38;"	d	file:
DEBUG_CHATTER	elements/tcpudp/snooptcp.cc	29;"	d	file:
DEBUG_CHATTER	elements/tcpudp/snooptcp.cc	31;"	d	file:
DEBUG_PRINT	drivers/e1000-7.x/src/e1000_main.c	248;"	d	file:
DEBUG_RT_SCHED	lib/routerthread.cc	45;"	d	file:
DEBUG_SKBMGR	linuxmodule/skbmgr.cc	36;"	d	file:
DEBUG_TRACE_FUNCTION_CALL	elements/local/OpenFlow/include/config.h	25;"	d
DEBUG_TRACE_FUNCTION_CALL	elements/local/OpenFlow/include/config.h	43;"	d
DEBUG_TRACE_FUNCTION_END	elements/local/OpenFlow/include/config.h	26;"	d
DEBUG_TRACE_FUNCTION_END	elements/local/OpenFlow/include/config.h	44;"	d
DECLARATIONS_OPT	tools/click-flatten/click-flatten.cc	42;"	d	file:
DEFAULT_80003ES2LAN_TCTL_EXT_GCEX	drivers/e1000-7.x/src/e1000_hw.h	2031;"	d
DEFAULT_80003ES2LAN_TIPG_IPGR2	drivers/e1000-7.x/src/e1000_hw.h	2397;"	d
DEFAULT_80003ES2LAN_TIPG_IPGT_1000	drivers/e1000-7.x/src/e1000_hw.h	2401;"	d
DEFAULT_80003ES2LAN_TIPG_IPGT_10_100	drivers/e1000-7.x/src/e1000_hw.h	2400;"	d
DEFAULT_82542_TIPG_IPGR1	drivers/e1000-4.x/src/e1000_hw.h	1383;"	d
DEFAULT_82542_TIPG_IPGR1	drivers/e1000-5.x/src/e1000_hw.h	1604;"	d
DEFAULT_82542_TIPG_IPGR1	drivers/e1000-7.x/src/e1000_hw.h	2391;"	d
DEFAULT_82542_TIPG_IPGR2	drivers/e1000-4.x/src/e1000_hw.h	1387;"	d
DEFAULT_82542_TIPG_IPGR2	drivers/e1000-5.x/src/e1000_hw.h	1608;"	d
DEFAULT_82542_TIPG_IPGR2	drivers/e1000-7.x/src/e1000_hw.h	2395;"	d
DEFAULT_82542_TIPG_IPGT	drivers/e1000-4.x/src/e1000_hw.h	1375;"	d
DEFAULT_82542_TIPG_IPGT	drivers/e1000-5.x/src/e1000_hw.h	1596;"	d
DEFAULT_82542_TIPG_IPGT	drivers/e1000-7.x/src/e1000_hw.h	2383;"	d
DEFAULT_82543_TIPG_IPGR1	drivers/e1000-4.x/src/e1000_hw.h	1384;"	d
DEFAULT_82543_TIPG_IPGR1	drivers/e1000-5.x/src/e1000_hw.h	1605;"	d
DEFAULT_82543_TIPG_IPGR1	drivers/e1000-7.x/src/e1000_hw.h	2392;"	d
DEFAULT_82543_TIPG_IPGR2	drivers/e1000-4.x/src/e1000_hw.h	1388;"	d
DEFAULT_82543_TIPG_IPGR2	drivers/e1000-5.x/src/e1000_hw.h	1609;"	d
DEFAULT_82543_TIPG_IPGR2	drivers/e1000-7.x/src/e1000_hw.h	2396;"	d
DEFAULT_82543_TIPG_IPGT_COPPER	drivers/e1000-4.x/src/e1000_hw.h	1377;"	d
DEFAULT_82543_TIPG_IPGT_COPPER	drivers/e1000-5.x/src/e1000_hw.h	1598;"	d
DEFAULT_82543_TIPG_IPGT_COPPER	drivers/e1000-7.x/src/e1000_hw.h	2385;"	d
DEFAULT_82543_TIPG_IPGT_FIBER	drivers/e1000-4.x/src/e1000_hw.h	1376;"	d
DEFAULT_82543_TIPG_IPGT_FIBER	drivers/e1000-5.x/src/e1000_hw.h	1597;"	d
DEFAULT_82543_TIPG_IPGT_FIBER	drivers/e1000-7.x/src/e1000_hw.h	2384;"	d
DEFAULT_HEADROOM	include/click/packet.hh	/^	DEFAULT_HEADROOM = default_headroom,$/;"	e	enum:Packet::__anon464
DEFAULT_INITIAL_NBUCKETS	include/click/hashmap.hh	/^	 DEFAULT_INITIAL_NBUCKETS = 127,$/;"	e	enum:HashMap::__anon435
DEFAULT_INITIAL_NBUCKETS	include/click/hashmap.hh	/^	 DEFAULT_INITIAL_NBUCKETS = 127,$/;"	e	enum:HashMap::__anon436
DEFAULT_ITR	drivers/e1000-4.x/src/e1000_main.c	959;"	d	file:
DEFAULT_ITR	drivers/e1000-5.x/src/e1000_param.c	222;"	d	file:
DEFAULT_ITR	drivers/e1000-7.x/src/e1000_param.c	196;"	d	file:
DEFAULT_MTU	elements/userlevel/fromhost.hh	/^    enum { DEFAULT_MTU = 2048 };$/;"	e	enum:FromHost::__anon202
DEFAULT_MTU	elements/userlevel/kerneltun.hh	/^    enum { DEFAULT_MTU = 1500 };$/;"	e	enum:KernelTun::__anon209
DEFAULT_RADV	drivers/e1000-4.x/src/e1000_param.c	205;"	d	file:
DEFAULT_RADV	drivers/e1000-5.x/src/e1000_param.c	210;"	d	file:
DEFAULT_RADV	drivers/e1000-7.x/src/e1000_param.c	187;"	d	file:
DEFAULT_RDTR	drivers/e1000-4.x/src/e1000_param.c	200;"	d	file:
DEFAULT_RDTR	drivers/e1000-5.x/src/e1000_param.c	206;"	d	file:
DEFAULT_RDTR	drivers/e1000-7.x/src/e1000_param.c	178;"	d	file:
DEFAULT_RDTR_82544	drivers/e1000-4.x/src/e1000_param.c	201;"	d	file:
DEFAULT_RESIZE_THRESHOLD	include/click/hashmap.hh	/^	 DEFAULT_RESIZE_THRESHOLD = 2 };$/;"	e	enum:HashMap::__anon435
DEFAULT_RESIZE_THRESHOLD	include/click/hashmap.hh	/^	 DEFAULT_RESIZE_THRESHOLD = 2 };$/;"	e	enum:HashMap::__anon436
DEFAULT_RXD	drivers/e1000-4.x/src/e1000_param.c	195;"	d	file:
DEFAULT_TADV	drivers/e1000-4.x/src/e1000_param.c	213;"	d	file:
DEFAULT_TADV	drivers/e1000-5.x/src/e1000_param.c	218;"	d	file:
DEFAULT_TADV	drivers/e1000-7.x/src/e1000_param.c	168;"	d	file:
DEFAULT_TICKETS	include/click/task.hh	/^    enum { MAX_TICKETS = 1<<15, DEFAULT_TICKETS = 1<<10 };$/;"	e	enum:Task::__anon454
DEFAULT_TIDV	drivers/e1000-4.x/src/e1000_param.c	209;"	d	file:
DEFAULT_TIDV	drivers/e1000-5.x/src/e1000_param.c	214;"	d	file:
DEFAULT_TIDV	drivers/e1000-7.x/src/e1000_param.c	159;"	d	file:
DEFAULT_TXD	drivers/e1000-4.x/src/e1000_param.c	190;"	d	file:
DEFINE_OPT	tools/click-pretty/click-pretty.cc	46;"	d	file:
DEFS	bsdmodule/Makefile	/^DEFS = -DHAVE_CONFIG_H -D_KERNEL$/;"	m
DEFS	etc/pkg-bsdmodule.mk	/^DEFS ?= $(CLICKDEFS)$/;"	m
DEFS	etc/pkg-linuxmodule-26.mk	/^DEFS ?= $(CLICKDEFS)$/;"	m
DEFS	etc/pkg-linuxmodule.mk	/^DEFS ?= $(CLICKDEFS)$/;"	m
DEFS	etc/pkg-userlevel.mk	/^DEFS ?= $(CLICKDEFS)$/;"	m
DEFS	linuxmodule/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	ns/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tools/click-align/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tools/click-check/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tools/click-combine/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tools/click-devirtualize/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tools/click-fastclassifier/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tools/click-flatten/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tools/click-install/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tools/click-mkmindriver/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tools/click-pretty/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tools/click-undead/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tools/click-xform/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tools/click2xml/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	tools/lib/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	userlevel/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEF_PRIO	linuxmodule/sched.cc	51;"	d	file:
DELETE_AGG	elements/analysis/aggregatenotifier.hh	/^    enum AggregateEvent { NEW_AGG, DELETE_AGG };$/;"	e	enum:AggregateListener::AggregateEvent
DEMUX_DATA	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	38;"	d
DEMUX_HEADER	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	37;"	d
DEMUX_PAYLOAD_START	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	40;"	d
DEMUX_SKIP	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	39;"	d
DEPCFLAGS	bsdmodule/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	etc/pkg-bsdmodule.mk	/^DEPCFLAGS ?= $(CLICKDEPCFLAGS)$/;"	m
DEPCFLAGS	etc/pkg-linuxmodule-26.mk	/^DEPCFLAGS ?= -Wp,-MD,$(depfile)$/;"	m
DEPCFLAGS	etc/pkg-linuxmodule.mk	/^DEPCFLAGS ?= $(CLICKDEPCFLAGS)$/;"	m
DEPCFLAGS	etc/pkg-userlevel.mk	/^DEPCFLAGS ?= $(CLICKDEPCFLAGS)$/;"	m
DEPCFLAGS	linuxmodule/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	ns/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	tools/click-align/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	tools/click-check/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	tools/click-combine/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	tools/click-devirtualize/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	tools/click-fastclassifier/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	tools/click-flatten/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	tools/click-install/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	tools/click-mkmindriver/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	tools/click-pretty/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	tools/click-undead/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	tools/click-xform/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	tools/click2xml/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	tools/lib/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPCFLAGS	userlevel/Makefile	/^DEPCFLAGS = -MD -MP$/;"	m
DEPFILES	bsdmodule/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPFILES	etc/pkg-bsdmodule.mk	/^DEPFILES := $(wildcard *.bd)$/;"	m
DEPFILES	etc/pkg-linuxmodule-26.mk	/^DEPFILES := $(wildcard *.kd)$/;"	m
DEPFILES	etc/pkg-linuxmodule.mk	/^DEPFILES := $(wildcard *.kd)$/;"	m
DEPFILES	etc/pkg-userlevel.mk	/^DEPFILES := $(wildcard *.ud)$/;"	m
DEPFILES	linuxmodule/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPFILES	ns/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPFILES	tools/click-align/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPFILES	tools/click-check/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPFILES	tools/click-combine/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPFILES	tools/click-devirtualize/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPFILES	tools/click-fastclassifier/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPFILES	tools/click-flatten/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPFILES	tools/click-install/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPFILES	tools/click-mkmindriver/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPFILES	tools/click-pretty/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPFILES	tools/click-undead/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPFILES	tools/click-xform/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPFILES	tools/click2xml/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPFILES	tools/lib/Makefile	/^DEPFILES := $(wildcard *.hd *.bd)$/;"	m
DEPFILES	userlevel/Makefile	/^DEPFILES := $(wildcard *.d)$/;"	m
DEPRECATED	include/click/handler.hh	/^	DEPRECATED = h_deprecated,$/;"	e	enum:Handler::DeprecatedFlags
DEPVER	drivers/e1000-4.x/src/Makefile	/^DEPVER := $(shell \/sbin\/depmod -V 2>\/dev\/null | awk 'BEGIN {FS="."} NR==1 {print $$2}') $/;"	m
DEPVER	drivers/e1000-5.x/src/Makefile	/^DEPVER := $(shell \/sbin\/depmod -V 2>\/dev\/null | \\$/;"	m
DEPVER	drivers/e1000-7.x/src/Makefile	/^DEPVER := $(shell \/sbin\/depmod -V 2>\/dev\/null | \\$/;"	m
DEQueue	include/click/dequeue.cc	/^DEQueue<T>::DEQueue(const DEQueue<T> &o)$/;"	f	class:DEQueue
DEQueue	include/click/dequeue.hh	/^  DEQueue()                      : _l(0), _n(0), _cap(0), _head(0), _tail(0) { }$/;"	f	class:DEQueue
DEQueue	include/click/dequeue.hh	/^  DEQueue(int n, const T &e)     : _l(0), _n(0), _cap(0), _head(0), _tail(0) { resize(n, e);      }$/;"	f	class:DEQueue
DEQueue	include/click/dequeue.hh	/^  explicit DEQueue(int capacity) : _l(0), _n(0), _cap(0), _head(0), _tail(0) { reserve(capacity); }$/;"	f	class:DEQueue
DEQueue	include/click/dequeue.hh	/^class DEQueue {$/;"	c
DESC_STR_LEN	elements/local/OpenFlow/include/openflow/openflow.hh	773;"	d
DES_DECRYPT	elements/ipsec/des.hh	/^  enum { DES_DECRYPT = 0, DES_ENCRYPT = 1 };$/;"	e	enum:Des::__anon218
DES_ENCRYPT	elements/ipsec/des.hh	/^  enum { DES_DECRYPT = 0, DES_ENCRYPT = 1 };$/;"	e	enum:Des::__anon218
DEVICE_POLLING	bsdmodule/sched.cc	34;"	d	file:
DEVICE_POLLING	elements/bsdmodule/anydevice.hh	8;"	d
DEVICE_SPEED_MASK	drivers/e1000-4.x/src/e1000_hw.h	1773;"	d
DEVICE_SPEED_MASK	drivers/e1000-5.x/src/e1000_hw.h	2149;"	d
DEVICE_SPEED_MASK	drivers/e1000-7.x/src/e1000_hw.h	3400;"	d
DEVIRTUALIZE_OPT	tools/click-devirtualize/click-devirtualize.cc	53;"	d	file:
DEV_MAJOR	elements/linuxmodule/touserdevice.cc	/^static int DEV_MAJOR = 241;$/;"	v	file:
DEV_NAME	elements/linuxmodule/touserdevice.cc	/^static const char DEV_NAME[] = "click_user";$/;"	v	file:
DEV_NUM	elements/linuxmodule/touserdevice.cc	/^static int DEV_NUM = 0;$/;"	v	file:
DHCP_ACK	include/clicknet/dhcp.h	49;"	d
DHCP_BOOTREPLY	include/clicknet/dhcp.h	29;"	d
DHCP_BOOTREQUEST	include/clicknet/dhcp.h	28;"	d
DHCP_CLIENT_BOUND	include/clicknet/dhcp.h	/^	DHCP_CLIENT_BOUND,$/;"	e	enum:dhcp_client_state
DHCP_CLIENT_INIT_REBOOT	include/clicknet/dhcp.h	/^	DHCP_CLIENT_INIT_REBOOT,$/;"	e	enum:dhcp_client_state
DHCP_CLIENT_INIT_STATE	include/clicknet/dhcp.h	/^	DHCP_CLIENT_INIT_STATE = 1,$/;"	e	enum:dhcp_client_state
DHCP_CLIENT_REBINDING	include/clicknet/dhcp.h	/^	DHCP_CLIENT_REBINDING$/;"	e	enum:dhcp_client_state
DHCP_CLIENT_REBOOTING	include/clicknet/dhcp.h	/^	DHCP_CLIENT_REBOOTING,$/;"	e	enum:dhcp_client_state
DHCP_CLIENT_RENEWING	include/clicknet/dhcp.h	/^	DHCP_CLIENT_RENEWING,$/;"	e	enum:dhcp_client_state
DHCP_CLIENT_REQUESTING_STATE	include/clicknet/dhcp.h	/^	DHCP_CLIENT_REQUESTING_STATE,$/;"	e	enum:dhcp_client_state
DHCP_CLIENT_SELECTING_STATE	include/clicknet/dhcp.h	/^	DHCP_CLIENT_SELECTING_STATE,$/;"	e	enum:dhcp_client_state
DHCP_DECLINE	include/clicknet/dhcp.h	48;"	d
DHCP_DISCOVER	include/clicknet/dhcp.h	45;"	d
DHCP_INFORM	include/clicknet/dhcp.h	52;"	d
DHCP_MAGIC	include/clicknet/dhcp.h	54;"	d
DHCP_NACK	include/clicknet/dhcp.h	50;"	d
DHCP_OFFER	include/clicknet/dhcp.h	46;"	d
DHCP_RELEASE	include/clicknet/dhcp.h	51;"	d
DHCP_REQUEST	include/clicknet/dhcp.h	47;"	d
DHO_ALL_SUBNETS_LOCAL	include/clicknet/dhcp.h	86;"	d
DHO_ARP_CACHE_TIMEOUT	include/clicknet/dhcp.h	94;"	d
DHO_BOOT_SIZE	include/clicknet/dhcp.h	72;"	d
DHO_BROADCAST_ADDRESS	include/clicknet/dhcp.h	87;"	d
DHO_COOKIE_SERVERS	include/clicknet/dhcp.h	67;"	d
DHO_DEFAULT_IP_TTL	include/clicknet/dhcp.h	82;"	d
DHO_DEFAULT_TCP_TTL	include/clicknet/dhcp.h	96;"	d
DHO_DHCP_AGENT_OPTIONS	include/clicknet/dhcp.h	125;"	d
DHO_DHCP_CLIENT_IDENTIFIER	include/clicknet/dhcp.h	120;"	d
DHO_DHCP_LEASE_TIME	include/clicknet/dhcp.h	110;"	d
DHO_DHCP_MAX_MESSAGE_SIZE	include/clicknet/dhcp.h	116;"	d
DHO_DHCP_MESSAGE	include/clicknet/dhcp.h	115;"	d
DHO_DHCP_MESSAGE_TYPE	include/clicknet/dhcp.h	112;"	d
DHO_DHCP_OPTION_OVERLOAD	include/clicknet/dhcp.h	111;"	d
DHO_DHCP_PARAMETER_REQUEST_LIST	include/clicknet/dhcp.h	114;"	d
DHO_DHCP_REBINDING_TIME	include/clicknet/dhcp.h	118;"	d
DHO_DHCP_RENEWAL_TIME	include/clicknet/dhcp.h	117;"	d
DHO_DHCP_REQUESTED_ADDRESS	include/clicknet/dhcp.h	109;"	d
DHO_DHCP_SERVER_IDENTIFIER	include/clicknet/dhcp.h	113;"	d
DHO_DOMAIN_NAME	include/clicknet/dhcp.h	74;"	d
DHO_DOMAIN_NAME_SERVERS	include/clicknet/dhcp.h	65;"	d
DHO_END	include/clicknet/dhcp.h	127;"	d
DHO_EXTENSIONS_PATH	include/clicknet/dhcp.h	77;"	d
DHO_FONT_SERVERS	include/clicknet/dhcp.h	107;"	d
DHO_FQDN	include/clicknet/dhcp.h	124;"	d
DHO_HOST_NAME	include/clicknet/dhcp.h	71;"	d
DHO_IEEE802_3_ENCAPSULATION	include/clicknet/dhcp.h	95;"	d
DHO_IMPRESS_SERVERS	include/clicknet/dhcp.h	69;"	d
DHO_INTERFACE_MTU	include/clicknet/dhcp.h	85;"	d
DHO_IP_FORWARDING	include/clicknet/dhcp.h	78;"	d
DHO_LOG_SERVERS	include/clicknet/dhcp.h	66;"	d
DHO_LPR_SERVERS	include/clicknet/dhcp.h	68;"	d
DHO_MASK_SUPPLIER	include/clicknet/dhcp.h	89;"	d
DHO_MAX_DGRAM_REASSEMBLY	include/clicknet/dhcp.h	81;"	d
DHO_MERIT_DUMP	include/clicknet/dhcp.h	73;"	d
DHO_NAME_SERVERS	include/clicknet/dhcp.h	64;"	d
DHO_NETBIOS_DD_SERVER	include/clicknet/dhcp.h	104;"	d
DHO_NETBIOS_NAME_SERVERS	include/clicknet/dhcp.h	103;"	d
DHO_NETBIOS_NODE_TYPE	include/clicknet/dhcp.h	105;"	d
DHO_NETBIOS_SCOPE	include/clicknet/dhcp.h	106;"	d
DHO_NIS_DOMAIN	include/clicknet/dhcp.h	99;"	d
DHO_NIS_SERVERS	include/clicknet/dhcp.h	100;"	d
DHO_NON_LOCAL_SOURCE_ROUTING	include/clicknet/dhcp.h	79;"	d
DHO_NTP_SERVERS	include/clicknet/dhcp.h	101;"	d
DHO_NWIP_DOMAIN_NAME	include/clicknet/dhcp.h	121;"	d
DHO_NWIP_SUBOPTIONS	include/clicknet/dhcp.h	122;"	d
DHO_PAD	include/clicknet/dhcp.h	59;"	d
DHO_PATH_MTU_AGING_TIMEOUT	include/clicknet/dhcp.h	83;"	d
DHO_PATH_MTU_PLATEAU_TABLE	include/clicknet/dhcp.h	84;"	d
DHO_PERFORM_MASK_DISCOVERY	include/clicknet/dhcp.h	88;"	d
DHO_POLICY_FILTER	include/clicknet/dhcp.h	80;"	d
DHO_RESOURCE_LOCATION_SERVERS	include/clicknet/dhcp.h	70;"	d
DHO_ROOT_PATH	include/clicknet/dhcp.h	76;"	d
DHO_ROUTERS	include/clicknet/dhcp.h	62;"	d
DHO_ROUTER_DISCOVERY	include/clicknet/dhcp.h	90;"	d
DHO_ROUTER_SOLICITATION_ADDRESS	include/clicknet/dhcp.h	91;"	d
DHO_STATIC_ROUTES	include/clicknet/dhcp.h	92;"	d
DHO_SUBNET_MASK	include/clicknet/dhcp.h	60;"	d
DHO_SUBNET_SELECTION	include/clicknet/dhcp.h	126;"	d
DHO_SWAP_SERVER	include/clicknet/dhcp.h	75;"	d
DHO_TCP_KEEPALIVE_GARBAGE	include/clicknet/dhcp.h	98;"	d
DHO_TCP_KEEPALIVE_INTERVAL	include/clicknet/dhcp.h	97;"	d
DHO_TIME_OFFSET	include/clicknet/dhcp.h	61;"	d
DHO_TIME_SERVERS	include/clicknet/dhcp.h	63;"	d
DHO_TRAILER_ENCAPSULATION	include/clicknet/dhcp.h	93;"	d
DHO_USER_CLASS	include/clicknet/dhcp.h	123;"	d
DHO_VENDOR_CLASS_IDENTIFIER	include/clicknet/dhcp.h	119;"	d
DHO_VENDOR_ENCAPSULATED_OPTIONS	include/clicknet/dhcp.h	102;"	d
DHO_X_DISPLAY_MANAGER	include/clicknet/dhcp.h	108;"	d
DHPARAMS_H	elements/local/OpenFlow/lib/dhparams.hh	2;"	d
DIDmsg_lnxind_wlansniffrm	include/clicknet/wifi.h	/^  DIDmsg_lnxind_wlansniffrm               = 0x00000044,$/;"	e	enum:__anon494
DIDmsg_lnxind_wlansniffrm_channel	include/clicknet/wifi.h	/^  DIDmsg_lnxind_wlansniffrm_channel       = 0x00030044,$/;"	e	enum:__anon494
DIDmsg_lnxind_wlansniffrm_frmlen	include/clicknet/wifi.h	/^  DIDmsg_lnxind_wlansniffrm_frmlen        = 0x000A0044$/;"	e	enum:__anon494
DIDmsg_lnxind_wlansniffrm_hosttime	include/clicknet/wifi.h	/^  DIDmsg_lnxind_wlansniffrm_hosttime      = 0x00010044,$/;"	e	enum:__anon494
DIDmsg_lnxind_wlansniffrm_istx	include/clicknet/wifi.h	/^  DIDmsg_lnxind_wlansniffrm_istx          = 0x00090044,$/;"	e	enum:__anon494
DIDmsg_lnxind_wlansniffrm_mactime	include/clicknet/wifi.h	/^  DIDmsg_lnxind_wlansniffrm_mactime       = 0x00020044,$/;"	e	enum:__anon494
DIDmsg_lnxind_wlansniffrm_noise	include/clicknet/wifi.h	/^  DIDmsg_lnxind_wlansniffrm_noise         = 0x00070044,$/;"	e	enum:__anon494
DIDmsg_lnxind_wlansniffrm_rate	include/clicknet/wifi.h	/^  DIDmsg_lnxind_wlansniffrm_rate          = 0x00080044,$/;"	e	enum:__anon494
DIDmsg_lnxind_wlansniffrm_rssi	include/clicknet/wifi.h	/^  DIDmsg_lnxind_wlansniffrm_rssi          = 0x00040044,$/;"	e	enum:__anon494
DIDmsg_lnxind_wlansniffrm_signal	include/clicknet/wifi.h	/^  DIDmsg_lnxind_wlansniffrm_signal        = 0x00060044,$/;"	e	enum:__anon494
DIDmsg_lnxind_wlansniffrm_sq	include/clicknet/wifi.h	/^  DIDmsg_lnxind_wlansniffrm_sq            = 0x00050044,$/;"	e	enum:__anon494
DIRECTORY_OPT	tools/click-mkmindriver/click-mkmindriver.cc	43;"	d	file:
DISCARD_PORT	elements/ip/directiplookup.hh	/^	DISCARD_PORT = -1$/;"	e	enum:DirectIPLookup::__anon356
DLT_IEEE802_11_RADIO	include/clicknet/radiotap.h	51;"	d
DL_ERROR	elements/local/FlowNet/common/FlowNetGod.hh	17;"	d
DL_FUNCTION_ENTRY	elements/local/FlowNet/common/FlowNetGod.hh	25;"	d
DL_INSIDE_PACKET	elements/local/FlowNet/common/FlowNetGod.hh	23;"	d
DL_LIBS	tools/click-align/Makefile	/^DL_LIBS = $/;"	m
DL_LIBS	tools/click-align/Makefile	/^DL_LIBS = -ldl$/;"	m
DL_LIBS	tools/click-check/Makefile	/^DL_LIBS = $/;"	m
DL_LIBS	tools/click-check/Makefile	/^DL_LIBS = -ldl$/;"	m
DL_LIBS	tools/click-combine/Makefile	/^DL_LIBS = $/;"	m
DL_LIBS	tools/click-combine/Makefile	/^DL_LIBS = -ldl$/;"	m
DL_LIBS	tools/click-devirtualize/Makefile	/^DL_LIBS = $/;"	m
DL_LIBS	tools/click-devirtualize/Makefile	/^DL_LIBS = -ldl$/;"	m
DL_LIBS	tools/click-fastclassifier/Makefile	/^DL_LIBS = $/;"	m
DL_LIBS	tools/click-fastclassifier/Makefile	/^DL_LIBS = -ldl$/;"	m
DL_LIBS	tools/click-flatten/Makefile	/^DL_LIBS = $/;"	m
DL_LIBS	tools/click-flatten/Makefile	/^DL_LIBS = -ldl$/;"	m
DL_LIBS	tools/click-install/Makefile	/^DL_LIBS = $/;"	m
DL_LIBS	tools/click-install/Makefile	/^DL_LIBS = -ldl$/;"	m
DL_LIBS	tools/click-mkmindriver/Makefile	/^DL_LIBS = $/;"	m
DL_LIBS	tools/click-mkmindriver/Makefile	/^DL_LIBS = -ldl$/;"	m
DL_LIBS	tools/click-pretty/Makefile	/^DL_LIBS = $/;"	m
DL_LIBS	tools/click-pretty/Makefile	/^DL_LIBS = -ldl$/;"	m
DL_LIBS	tools/click-undead/Makefile	/^DL_LIBS = $/;"	m
DL_LIBS	tools/click-undead/Makefile	/^DL_LIBS = -ldl$/;"	m
DL_LIBS	tools/click-xform/Makefile	/^DL_LIBS = $/;"	m
DL_LIBS	tools/click-xform/Makefile	/^DL_LIBS = -ldl$/;"	m
DL_LIBS	tools/click2xml/Makefile	/^DL_LIBS = $/;"	m
DL_LIBS	tools/click2xml/Makefile	/^DL_LIBS = -ldl$/;"	m
DL_PERIODIC_MESSAGE	elements/local/FlowNet/common/FlowNetGod.hh	20;"	d
DL_PER_PACKET	elements/local/FlowNet/common/FlowNetGod.hh	22;"	d
DL_PER_QUEUE	elements/local/FlowNet/common/FlowNetGod.hh	21;"	d
DL_STEP_BY_STEP	elements/local/FlowNet/common/FlowNetGod.hh	26;"	d
DL_WARNING	elements/local/FlowNet/common/FlowNetGod.hh	19;"	d
DL_WELCOME	elements/local/FlowNet/common/FlowNetGod.hh	18;"	d
DMA_32BIT_MASK	drivers/e1000-7.x/src/kcompat.h	119;"	d
DMA_32BIT_MASK	drivers/e1000-7.x/src/kcompat.h	703;"	d
DMA_32BIT_MASK	drivers/e1000-7.x/src/kcompat.h	704;"	d
DMA_64BIT_MASK	drivers/e1000-7.x/src/kcompat.h	115;"	d
DMA_64BIT_MASK	drivers/e1000-7.x/src/kcompat.h	705;"	d
DMA_64BIT_MASK	drivers/e1000-7.x/src/kcompat.h	706;"	d
DO	lib/glue.cc	62;"	d	file:
DO	lib/glue.cc	86;"	d	file:
DONE	elements/grid/linktester.hh	/^    DONE$/;"	e	enum:LinkTester::state_t
DONEBYTES	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	68;"	d
DOT_OPT	tools/click-pretty/click-pretty.cc	48;"	d	file:
DO_DEBUG	elements/local/FlowNet/common/FlowCommon.hh	16;"	d
DO_IPOPT_ALL	elements/analysis/ipsumdumpinfo.hh	/^       DO_IPOPT_ALL = 0xFFFFFFFFU,$/;"	e	enum:IPSummaryDump::__anon264
DO_IPOPT_ALL_NOPAD	elements/analysis/ipsumdumpinfo.hh	/^       DO_IPOPT_ALL_NOPAD = 0xFFFFFFFEU };$/;"	e	enum:IPSummaryDump::__anon264
DO_IPOPT_PADDING	elements/analysis/ipsumdumpinfo.hh	/^enum { DO_IPOPT_PADDING = 1,$/;"	e	enum:IPSummaryDump::__anon264
DO_IPOPT_ROUTE	elements/analysis/ipsumdumpinfo.hh	/^       DO_IPOPT_ROUTE = 2,$/;"	e	enum:IPSummaryDump::__anon264
DO_IPOPT_TS	elements/analysis/ipsumdumpinfo.hh	/^       DO_IPOPT_TS = 4,$/;"	e	enum:IPSummaryDump::__anon264
DO_IPOPT_UNKNOWN	elements/analysis/ipsumdumpinfo.hh	/^       DO_IPOPT_UNKNOWN = 32,$/;"	e	enum:IPSummaryDump::__anon264
DO_TCPOPT_ALL	elements/analysis/ipsumdumpinfo.hh	/^       DO_TCPOPT_ALL = 0xFFFFFFFFU,$/;"	e	enum:IPSummaryDump::__anon265
DO_TCPOPT_ALL_NOPAD	elements/analysis/ipsumdumpinfo.hh	/^       DO_TCPOPT_ALL_NOPAD = 0xFFFFFFFEU,$/;"	e	enum:IPSummaryDump::__anon265
DO_TCPOPT_MSS	elements/analysis/ipsumdumpinfo.hh	/^       DO_TCPOPT_MSS = 2,$/;"	e	enum:IPSummaryDump::__anon265
DO_TCPOPT_NTALL	elements/analysis/ipsumdumpinfo.hh	/^       DO_TCPOPT_NTALL = 0xFFFFFFEEU };$/;"	e	enum:IPSummaryDump::__anon265
DO_TCPOPT_PADDING	elements/analysis/ipsumdumpinfo.hh	/^enum { DO_TCPOPT_PADDING = 1,$/;"	e	enum:IPSummaryDump::__anon265
DO_TCPOPT_SACK	elements/analysis/ipsumdumpinfo.hh	/^       DO_TCPOPT_SACK = 8,$/;"	e	enum:IPSummaryDump::__anon265
DO_TCPOPT_TIMESTAMP	elements/analysis/ipsumdumpinfo.hh	/^       DO_TCPOPT_TIMESTAMP = 16,$/;"	e	enum:IPSummaryDump::__anon265
DO_TCPOPT_UNKNOWN	elements/analysis/ipsumdumpinfo.hh	/^       DO_TCPOPT_UNKNOWN = 32,$/;"	e	enum:IPSummaryDump::__anon265
DO_TCPOPT_WSCALE	elements/analysis/ipsumdumpinfo.hh	/^       DO_TCPOPT_WSCALE = 4,$/;"	e	enum:IPSummaryDump::__anon265
DPIF_H	elements/local/OpenFlow/lib/dpif.hh	36;"	d
DPRINTK	drivers/e1000-5.x/src/e1000.h	104;"	d
DPRINTK	drivers/e1000-7.x/src/e1000.h	100;"	d
DP_ACT_H	elements/local/OpenFlow/lib/dp_act.hh	35;"	d
DP_GENL_A_DP_IDX	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	DP_GENL_A_DP_IDX,	 \/* Datapath device index. *\/$/;"	e	enum:__anon248
DP_GENL_A_DP_NAME	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	DP_GENL_A_DP_NAME,	 \/* Datapath device name. *\/$/;"	e	enum:__anon248
DP_GENL_A_MAX	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	DP_GENL_A_MAX = __DP_GENL_A_MAX - 1$/;"	e	enum:__anon248
DP_GENL_A_MC_GROUP	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	DP_GENL_A_MC_GROUP,	 \/* Generic netlink multicast group. *\/$/;"	e	enum:__anon248
DP_GENL_A_OPENFLOW	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	DP_GENL_A_OPENFLOW,  \/* OpenFlow packet. *\/$/;"	e	enum:__anon248
DP_GENL_A_PORTNAME	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	DP_GENL_A_PORTNAME,	 \/* Device name for datapath port. *\/$/;"	e	enum:__anon248
DP_GENL_A_UNSPEC	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	DP_GENL_A_UNSPEC,$/;"	e	enum:__anon248
DP_GENL_C_ADD_DP	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	DP_GENL_C_ADD_DP,	 \/* Create datapath. *\/$/;"	e	enum:dp_genl_command
DP_GENL_C_ADD_PORT	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	DP_GENL_C_ADD_PORT,	 \/* Add port to datapath. *\/$/;"	e	enum:dp_genl_command
DP_GENL_C_DEL_DP	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	DP_GENL_C_DEL_DP,	 \/* Destroy datapath. *\/$/;"	e	enum:dp_genl_command
DP_GENL_C_DEL_PORT	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	DP_GENL_C_DEL_PORT,	 \/* Remove port from datapath. *\/$/;"	e	enum:dp_genl_command
DP_GENL_C_MAX	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	DP_GENL_C_MAX = __DP_GENL_C_MAX - 1$/;"	e	enum:dp_genl_command
DP_GENL_C_OPENFLOW	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	DP_GENL_C_OPENFLOW,  \/* Encapsulated OpenFlow protocol. *\/$/;"	e	enum:dp_genl_command
DP_GENL_C_QUERY_DP	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	DP_GENL_C_QUERY_DP,	 \/* Get multicast group for datapath. *\/$/;"	e	enum:dp_genl_command
DP_GENL_C_UNSPEC	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	DP_GENL_C_UNSPEC,$/;"	e	enum:dp_genl_command
DP_GENL_FAMILY_NAME	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	39;"	d
DP_MAX	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	69;"	d
DP_MAX_PORTS	elements/local/OpenFlow/datapath.hh	174;"	d
DRIVER	linuxmodule/Makefile	/^DRIVER = $(MINDRIVER)click$/;"	m
DRIVER	linuxmodule/Makefile	/^DRIVER = click$/;"	m
DRIVER	userlevel/Makefile	/^DRIVER = $(MINDRIVER)click$/;"	m
DRIVER	userlevel/Makefile	/^DRIVER = click$/;"	m
DRIVERNAPI	drivers/e1000-5.x/src/e1000_main.c	92;"	d	file:
DRIVERNAPI	drivers/e1000-5.x/src/e1000_main.c	94;"	d	file:
DRIVERNAPI	drivers/e1000-7.x/src/e1000_main.c	47;"	d	file:
DRIVERNAPI	drivers/e1000-7.x/src/e1000_main.c	49;"	d	file:
DRIVERS	Makefile	/^DRIVERS =  userlevel$/;"	m
DRIVER_DEV_FIELD	drivers/e1000-4.x/src/ans_driver.h	45;"	d
DRIVER_FLAG_0	include/click/handler.hh	/^	DRIVER_FLAG_0 = h_driver_flag_0,$/;"	e	enum:Handler::DeprecatedFlags
DRIVER_FLAG_SHIFT	include/click/handler.hh	/^	DRIVER_FLAG_SHIFT = h_driver_flag_shift,$/;"	e	enum:Handler::DeprecatedFlags
DRIVER_GLOBAL_STRIDE	lib/routerthread.cc	51;"	d	file:
DRIVER_QUANTUM	lib/routerthread.cc	52;"	d	file:
DRIVER_RESTRIDE_INTERVAL	lib/routerthread.cc	53;"	d	file:
DRIVER_TOTAL_TICKETS	lib/routerthread.cc	50;"	d	file:
DRRSched	elements/standard/drr.cc	/^DRRSched::DRRSched()$/;"	f	class:DRRSched
DRRSched	elements/standard/drr.hh	/^class DRRSched : public Element { public:$/;"	c
DRV_VERSION	drivers/e1000-7.x/src/e1000_main.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	drivers/e1000-7.x/src/e1000_main.c	51;"	d	file:
DSDVRouteTable	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::DSDVRouteTable() :$/;"	f	class:DSDVRouteTable
DSDVRouteTable	elements/grid/dsdvroutetable.hh	/^class DSDVRouteTable : public GridGenericRouteTable {$/;"	c
DSP_RESET_DISABLE	drivers/e1000-5.x/src/e1000_hw.h	2083;"	d
DSP_RESET_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	3000;"	d
DSP_RESET_ENABLE	drivers/e1000-5.x/src/e1000_hw.h	2082;"	d
DSP_RESET_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2999;"	d
DSRARPTABLE_HH	elements/grid/dsrarptable.hh	2;"	d
DSRArpTable	elements/grid/dsrarptable.cc	/^DSRArpTable::DSRArpTable()$/;"	f	class:DSRArpTable
DSRArpTable	elements/grid/dsrarptable.hh	/^class DSRArpTable : public Element$/;"	c
DSRHop	elements/grid/dsr.hh	/^  DSRHop(IPAddress i) : _ip(i), _metric(DSR_INVALID_HOP_METRIC) {}$/;"	f	struct:DSRHop
DSRHop	elements/grid/dsr.hh	/^  DSRHop(IPAddress i, unsigned char c) : _ip(i), _metric(c) {}$/;"	f	struct:DSRHop
DSRHop	elements/grid/dsr.hh	/^struct DSRHop {$/;"	s
DSRROUTETABLE_HH	elements/grid/dsrroutetable.hh	2;"	d
DSRRoute	elements/grid/dsr.hh	/^typedef Vector<DSRHop> DSRRoute;$/;"	t
DSRRouteTable	elements/grid/dsrroutetable.cc	/^DSRRouteTable::DSRRouteTable()$/;"	f	class:DSRRouteTable
DSRRouteTable	elements/grid/dsrroutetable.hh	/^class DSRRouteTable : public Element$/;"	c
DSR_BLACKLIST_ENTRY_TIMEOUT	elements/grid/dsrroutetable.hh	180;"	d
DSR_BLACKLIST_NOENTRY	elements/grid/dsrroutetable.hh	175;"	d
DSR_BLACKLIST_TIMER_INTERVAL	elements/grid/dsrroutetable.hh	179;"	d
DSR_BLACKLIST_UNITEST_TIMEOUT	elements/grid/dsrroutetable.hh	178;"	d
DSR_BLACKLIST_UNI_PROBABLE	elements/grid/dsrroutetable.hh	176;"	d
DSR_BLACKLIST_UNI_QUESTIONABLE	elements/grid/dsrroutetable.hh	177;"	d
DSR_INVALID_HOP_METRIC	elements/grid/dsr.hh	23;"	d
DSR_INVALID_ROUTE_METRIC	elements/grid/dsr.hh	24;"	d
DSR_LAST_HOP_ETH_ANNO1	elements/grid/dsr.hh	139;"	d
DSR_LAST_HOP_ETH_ANNO2	elements/grid/dsr.hh	142;"	d
DSR_LAST_HOP_ETH_ANNO3	elements/grid/dsr.hh	145;"	d
DSR_LAST_HOP_IP_ANNO	elements/grid/dsr.hh	136;"	d
DSR_RERR_TYPE_NODE_UNREACHABLE	elements/grid/dsr.hh	74;"	d
DSR_RREQ_BACKOFF_FACTOR	elements/grid/dsrroutetable.hh	230;"	d
DSR_RREQ_DELAY1	elements/grid/dsrroutetable.hh	228;"	d
DSR_RREQ_DELAY2	elements/grid/dsrroutetable.hh	229;"	d
DSR_RREQ_EXPIRE_TIMER_INTERVAL	elements/grid/dsrroutetable.hh	161;"	d
DSR_RREQ_ISSUE_TIMER_INTERVAL	elements/grid/dsrroutetable.hh	233;"	d
DSR_RREQ_MAX_DELAY	elements/grid/dsrroutetable.hh	231;"	d
DSR_RREQ_TIMEOUT	elements/grid/dsrroutetable.hh	160;"	d
DSR_RREQ_TTL1	elements/grid/dsrroutetable.hh	226;"	d
DSR_RREQ_TTL2	elements/grid/dsrroutetable.hh	227;"	d
DSR_SALVAGE_LIMIT	elements/grid/dsr.hh	134;"	d
DSR_SENDBUFFER_MAX_BURST	elements/grid/dsrroutetable.hh	102;"	d
DSR_SENDBUFFER_MAX_LENGTH	elements/grid/dsrroutetable.hh	101;"	d
DSR_SENDBUFFER_TIMEOUT	elements/grid/dsrroutetable.hh	103;"	d
DSR_SENDBUFFER_TIMER_INTERVAL	elements/grid/dsrroutetable.hh	104;"	d
DSR_TYPE_RERR	elements/grid/dsr.hh	126;"	d
DSR_TYPE_RREP	elements/grid/dsr.hh	124;"	d
DSR_TYPE_RREQ	elements/grid/dsr.hh	125;"	d
DSR_TYPE_SOURCE_ROUTE	elements/grid/dsr.hh	127;"	d
DST_IP6_ANNO	include/click/ip6address.hh	/^DST_IP6_ANNO(Packet *p)$/;"	f
DST_IP6_ANNO_OFFSET	include/click/packet_anno.hh	11;"	d
DST_IP6_ANNO_SIZE	include/click/packet_anno.hh	12;"	d
DST_IP_ANNO_OFFSET	include/click/packet_anno.hh	8;"	d
DST_IP_ANNO_SIZE	include/click/packet_anno.hh	9;"	d
DS_EMPTY_INITIALIZER	elements/local/OpenFlow/lib/dynamic-string.hh	53;"	d
DVIPS	etc/diagrams/Makefile	/^DVIPS	= dvips$/;"	m
DYNAMIC_STRING_H	elements/local/OpenFlow/lib/dynamic-string.hh	35;"	d
D_CLASS	tools/lib/etraits.hh	/^	D_CLASS, D_CXX_CLASS, D_HEADER_FILE, D_PORT_COUNT, D_PROCESSING,$/;"	e	enum:ElementTraits::__anon527
D_CXX_CLASS	tools/lib/etraits.hh	/^	D_CLASS, D_CXX_CLASS, D_HEADER_FILE, D_PORT_COUNT, D_PROCESSING,$/;"	e	enum:ElementTraits::__anon527
D_DATA	elements/test/comparepackets.hh	/^    enum { D_LEN, D_DATA, D_TIMESTAMP, D_NETOFF, D_NETLEN, D_NETHDR,$/;"	e	enum:ComparePackets::__anon409
D_DEFINE_BODY	elements/local/FlowNet/common/FlowCommon.hh	25;"	d
D_DEFINE_BODY	elements/local/FlowNet/common/FlowCommon.hh	49;"	d
D_DEFINE_BODY	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^D_DEFINE_BODY;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/common/Flow.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/common/FlowCommon.hh	21;"	d
D_DEFINE_EXTERN	elements/local/FlowNet/common/FlowCommon.hh	48;"	d
D_DEFINE_EXTERN	elements/local/FlowNet/common/FlowNetGod.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/common/PF_FW.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/libclassify/Classify5Tuple.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/libclassify/ClassifyNoClassify.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/libtable/TableLinear.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/papmo/PaPMo.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/scheduler/CD_algorithms/CD_QueueLoss.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/scheduler/CD_algorithms/CD_Threshold.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/scheduler/FlowSchedulable.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/scheduler/sched_algorithms/SchedBackpressure.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/scheduler/sched_algorithms/SchedHorizon.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/scheduler/sched_algorithms/SchedLogWeight.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/scheduler/sched_algorithms/SchedNoSchedule.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/scheduler/sched_algorithms/SchedWBS.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterNoSchedule.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterVirtualpressure.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/shaper/FlowBWShaperable.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/shaper/PFShapeFW.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeNULL.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeSimple.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeStaticMpeg2.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DEFINE_EXTERN	elements/local/FlowNet/sink/PFSinkFW.cc	/^D_DEFINE_EXTERN;$/;"	v
D_DOC_NAME	tools/lib/etraits.hh	/^	D_SOURCE_FILE, D_DOC_NAME, D_NOEXPORT,$/;"	e	enum:ElementTraits::__anon527
D_ENCRYPT	elements/ipsec/des.cc	438;"	d	file:
D_END_FUNCTION	elements/local/FlowNet/common/FlowCommon.hh	39;"	d
D_END_FUNCTION	elements/local/FlowNet/common/FlowCommon.hh	51;"	d
D_FIRST_DEFAULT	tools/lib/etraits.hh	/^	D_FIRST_DEFAULT = D_CLASS, D_LAST_DEFAULT = D_LIBS$/;"	e	enum:ElementTraits::__anon527
D_FLAGS	tools/lib/etraits.hh	/^	D_FLOW_CODE, D_FLAGS, D_METHODS, D_REQUIREMENTS, D_PROVISIONS, D_LIBS,$/;"	e	enum:ElementTraits::__anon527
D_FLOW_CODE	tools/lib/etraits.hh	/^	D_FLOW_CODE, D_FLAGS, D_METHODS, D_REQUIREMENTS, D_PROVISIONS, D_LIBS,$/;"	e	enum:ElementTraits::__anon527
D_HEADER_FILE	tools/lib/etraits.hh	/^	D_CLASS, D_CXX_CLASS, D_HEADER_FILE, D_PORT_COUNT, D_PROCESSING,$/;"	e	enum:ElementTraits::__anon527
D_LAST	elements/test/comparepackets.hh	/^	   D_MORE_PACKETS_0, D_MORE_PACKETS_1, D_LAST };$/;"	e	enum:ComparePackets::__anon409
D_LAST_DEFAULT	tools/lib/etraits.hh	/^	D_FIRST_DEFAULT = D_CLASS, D_LAST_DEFAULT = D_LIBS$/;"	e	enum:ElementTraits::__anon527
D_LEN	elements/test/comparepackets.hh	/^    enum { D_LEN, D_DATA, D_TIMESTAMP, D_NETOFF, D_NETLEN, D_NETHDR,$/;"	e	enum:ComparePackets::__anon409
D_LIBS	tools/lib/etraits.hh	/^	D_FLOW_CODE, D_FLAGS, D_METHODS, D_REQUIREMENTS, D_PROVISIONS, D_LIBS,$/;"	e	enum:ElementTraits::__anon527
D_METHODS	tools/lib/etraits.hh	/^	D_FLOW_CODE, D_FLAGS, D_METHODS, D_REQUIREMENTS, D_PROVISIONS, D_LIBS,$/;"	e	enum:ElementTraits::__anon527
D_MORE_PACKETS_0	elements/test/comparepackets.hh	/^	   D_MORE_PACKETS_0, D_MORE_PACKETS_1, D_LAST };$/;"	e	enum:ComparePackets::__anon409
D_MORE_PACKETS_1	elements/test/comparepackets.hh	/^	   D_MORE_PACKETS_0, D_MORE_PACKETS_1, D_LAST };$/;"	e	enum:ComparePackets::__anon409
D_NETHDR	elements/test/comparepackets.hh	/^    enum { D_LEN, D_DATA, D_TIMESTAMP, D_NETOFF, D_NETLEN, D_NETHDR,$/;"	e	enum:ComparePackets::__anon409
D_NETLEN	elements/test/comparepackets.hh	/^    enum { D_LEN, D_DATA, D_TIMESTAMP, D_NETOFF, D_NETLEN, D_NETHDR,$/;"	e	enum:ComparePackets::__anon409
D_NETOFF	elements/test/comparepackets.hh	/^    enum { D_LEN, D_DATA, D_TIMESTAMP, D_NETOFF, D_NETLEN, D_NETHDR,$/;"	e	enum:ComparePackets::__anon409
D_NOEXPORT	tools/lib/etraits.hh	/^	D_SOURCE_FILE, D_DOC_NAME, D_NOEXPORT,$/;"	e	enum:ElementTraits::__anon527
D_NONE	tools/lib/etraits.hh	/^	D_NONE,$/;"	e	enum:ElementTraits::__anon527
D_PORT_COUNT	tools/lib/etraits.hh	/^	D_CLASS, D_CXX_CLASS, D_HEADER_FILE, D_PORT_COUNT, D_PROCESSING,$/;"	e	enum:ElementTraits::__anon527
D_PROCESSING	tools/lib/etraits.hh	/^	D_CLASS, D_CXX_CLASS, D_HEADER_FILE, D_PORT_COUNT, D_PROCESSING,$/;"	e	enum:ElementTraits::__anon527
D_PROVISIONS	tools/lib/etraits.hh	/^	D_FLOW_CODE, D_FLAGS, D_METHODS, D_REQUIREMENTS, D_PROVISIONS, D_LIBS,$/;"	e	enum:ElementTraits::__anon527
D_REQUIREMENTS	tools/lib/etraits.hh	/^	D_FLOW_CODE, D_FLAGS, D_METHODS, D_REQUIREMENTS, D_PROVISIONS, D_LIBS,$/;"	e	enum:ElementTraits::__anon527
D_SOURCE_FILE	tools/lib/etraits.hh	/^	D_SOURCE_FILE, D_DOC_NAME, D_NOEXPORT,$/;"	e	enum:ElementTraits::__anon527
D_START_FUNCTION	elements/local/FlowNet/common/FlowCommon.hh	32;"	d
D_START_FUNCTION	elements/local/FlowNet/common/FlowCommon.hh	50;"	d
D_TIMESTAMP	elements/test/comparepackets.hh	/^    enum { D_LEN, D_DATA, D_TIMESTAMP, D_NETOFF, D_NETLEN, D_NETHDR,$/;"	e	enum:ComparePackets::__anon409
Datapath	elements/local/OpenFlow/datapath.cc	/^Datapath::Datapath(): base_timer(this)$/;"	f	class:Datapath
Datapath	elements/local/OpenFlow/datapath.hh	/^class Datapath : public Element { public:$/;"	c
DatapathPacketBuffer	elements/local/OpenFlow/datapath.cc	/^DatapathPacketBuffer::DatapathPacketBuffer()$/;"	f	class:DatapathPacketBuffer
DatapathPacketBuffer	elements/local/OpenFlow/datapath.hh	/^class DatapathPacketBuffer {$/;"	c
DebugBridge	elements/etherswitch/debugbridge.cc	/^DebugBridge::DebugBridge()$/;"	f	class:DebugBridge
DebugBridge	elements/etherswitch/debugbridge.hh	/^class DebugBridge : public Element {$/;"	c
DecIP6HLIM	elements/ip6/decip6hlim.cc	/^DecIP6HLIM::DecIP6HLIM()$/;"	f	class:DecIP6HLIM
DecIP6HLIM	elements/ip6/decip6hlim.hh	/^class DecIP6HLIM : public Element {$/;"	c
DecIP6HLIM_read_drops	elements/ip6/decip6hlim.cc	/^DecIP6HLIM_read_drops(Element *xf, void *)$/;"	f	file:
DecIPTTL	elements/ip/decipttl.cc	/^DecIPTTL::DecIPTTL()$/;"	f	class:DecIPTTL
DecIPTTL	elements/ip/decipttl.hh	/^class DecIPTTL : public Element { public:$/;"	c
DecimalFixedPointArg	include/click/args.hh	/^    DecimalFixedPointArg(int d, int exponent = 0)$/;"	f	struct:DecimalFixedPointArg
DecimalFixedPointArg	include/click/args.hh	/^struct DecimalFixedPointArg : public NumArg {$/;"	s
DefaultArg	include/click/args.hh	/^struct DefaultArg {$/;"	s
DefaultArg	include/click/args.hh	/^template<> struct DefaultArg<Element *> : public ElementArg {};$/;"	s
DefaultArg	include/click/args.hh	/^template<> struct DefaultArg<String> : public StringArg {};$/;"	s
DefaultArg	include/click/args.hh	/^template<> struct DefaultArg<bool> : public BoolArg {};$/;"	s
DefaultArg	include/click/args.hh	/^template<> struct DefaultArg<char> : public IntArg {};$/;"	s
DefaultArg	include/click/args.hh	/^template<> struct DefaultArg<double> : public DoubleArg {};$/;"	s
DefaultArg	include/click/args.hh	/^template<> struct DefaultArg<int> : public IntArg {};$/;"	s
DefaultArg	include/click/args.hh	/^template<> struct DefaultArg<long long> : public IntArg {};$/;"	s
DefaultArg	include/click/args.hh	/^template<> struct DefaultArg<long> : public IntArg {};$/;"	s
DefaultArg	include/click/args.hh	/^template<> struct DefaultArg<short> : public IntArg {};$/;"	s
DefaultArg	include/click/args.hh	/^template<> struct DefaultArg<signed char> : public IntArg {};$/;"	s
DefaultArg	include/click/args.hh	/^template<> struct DefaultArg<unsigned char> : public IntArg {};$/;"	s
DefaultArg	include/click/args.hh	/^template<> struct DefaultArg<unsigned int> : public IntArg {};$/;"	s
DefaultArg	include/click/args.hh	/^template<> struct DefaultArg<unsigned long long> : public IntArg {};$/;"	s
DefaultArg	include/click/args.hh	/^template<> struct DefaultArg<unsigned long> : public IntArg {};$/;"	s
DefaultArg	include/click/args.hh	/^template<> struct DefaultArg<unsigned short> : public IntArg {};$/;"	s
DefaultArg	include/click/etheraddress.hh	/^template<> struct DefaultArg<EtherAddress> : public EtherAddressArg {};$/;"	s
DefaultArg	include/click/ip6address.hh	/^template<> struct DefaultArg<IP6Address> : public IP6AddressArg {};$/;"	s
DefaultArg	include/click/ipaddress.hh	/^template<> struct DefaultArg<IPAddress> : public IPAddressArg {};$/;"	s
DefaultArg	include/click/ipaddress.hh	/^template<> struct DefaultArg<Vector<IPAddress> > : public IPAddressArg {};$/;"	s
DefaultArg	include/click/ipaddress.hh	/^template<> struct DefaultArg<struct in_addr> : public IPAddressArg {};$/;"	s
DefaultArg	include/click/timestamp.hh	/^template<> struct DefaultArg<Timestamp> : public TimestampArg {};$/;"	s
DelayShaper	elements/standard/delayshaper.cc	/^DelayShaper::DelayShaper()$/;"	f	class:DelayShaper
DelayShaper	elements/standard/delayshaper.hh	/^class DelayShaper : public Element, public ActiveNotifier { public:$/;"	c
DelayUnqueue	elements/standard/delayunqueue.cc	/^DelayUnqueue::DelayUnqueue()$/;"	f	class:DelayUnqueue
DelayUnqueue	elements/standard/delayunqueue.hh	/^class DelayUnqueue : public Element { public:$/;"	c
Delete	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t Delete;$/;"	m	struct:ofpstat::__anon247
Delete	elements/local/OpenFlow/lib/table.hh	/^    int (*Delete)(class Datapath *dp, struct sw_table *table, $/;"	m	struct:sw_table
DeprecatedFlags	include/click/handler.hh	/^    enum DeprecatedFlags {$/;"	g	class:Handler
Des	elements/ipsec/des.cc	/^Des::Des()$/;"	f	class:Des
Des	elements/ipsec/des.cc	/^Des::Des(int decrypt)$/;"	f	class:Des
Des	elements/ipsec/des.hh	/^class Des : public Element {$/;"	c
DeviceAlignClass	tools/click-align/alignclass.cc	/^DeviceAlignClass::DeviceAlignClass(const String &name, bool generator)$/;"	f	class:DeviceAlignClass
DeviceAlignClass	tools/click-align/alignclass.hh	/^class DeviceAlignClass : public AlignClass { public:$/;"	c
DevirtualizeInfo	elements/standard/devirtualizeinfo.cc	/^DevirtualizeInfo::DevirtualizeInfo()$/;"	f	class:DevirtualizeInfo
DevirtualizeInfo	elements/standard/devirtualizeinfo.hh	/^class DevirtualizeInfo : public Element {$/;"	c
DirectEWMA	include/click/ewma.hh	/^typedef DirectEWMAX<FixedEWMAXParameters<4, 10> > DirectEWMA;$/;"	t
DirectEWMAX	include/click/ewma.hh	/^    DirectEWMAX()$/;"	f	class:DirectEWMAX
DirectEWMAX	include/click/ewma.hh	/^    DirectEWMAX(value_type scaled_value)$/;"	f	class:DirectEWMAX
DirectEWMAX	include/click/ewma.hh	/^class DirectEWMAX : public P { public:$/;"	c
DirectIPLookup	elements/ip/directiplookup.cc	/^DirectIPLookup::DirectIPLookup()$/;"	f	class:DirectIPLookup
DirectIPLookup	elements/ip/directiplookup.hh	/^class DirectIPLookup : public IPRouteTable { public:$/;"	c
Discard	elements/standard/discard.cc	/^Discard::Discard()$/;"	f	class:Discard
Discard	elements/standard/discard.hh	/^class Discard : public Element { public:$/;"	c
DiscardNoFree	elements/standard/discardnofree.cc	/^DiscardNoFree::DiscardNoFree()$/;"	f	class:DiscardNoFree
DiscardNoFree	elements/standard/discardnofree.hh	/^class DiscardNoFree : public Element { public:$/;"	c
DisplayHandlerListener	apps/ClickController/RouterTreeModel.java	/^  public interface DisplayHandlerListener {$/;"	i	class:RouterTreeModel
DominatorOptimizer	elements/standard/classification.cc	/^DominatorOptimizer::DominatorOptimizer(Program *p)$/;"	f	class:Classification::Wordwise::DominatorOptimizer
DominatorOptimizer	elements/standard/classification.hh	/^class DominatorOptimizer { public:$/;"	c	namespace:Classification::Wordwise
DoneAction	apps/ClickController/NewConnectionDialog.java	/^        protected DoneAction(JDialog dialog, boolean ok) {$/;"	m	class:NewConnectionDialog.DoneAction
DoneAction	apps/ClickController/NewConnectionDialog.java	/^    class DoneAction extends AbstractAction {$/;"	c	class:NewConnectionDialog
Doodad	apps/clicky/src/permstr.hh	/^    struct Doodad {$/;"	s	class:PermString
DoubleArg	include/click/args.hh	/^    DoubleArg() {$/;"	f	struct:DoubleArg
DoubleArg	include/click/args.hh	/^struct DoubleArg : public NumArg {$/;"	s
Driver	tools/lib/etraits.hh	/^struct Driver {$/;"	s
DriverManager	elements/standard/drivermanager.cc	/^DriverManager::DriverManager()$/;"	f	class:DriverManager
DriverManager	elements/standard/drivermanager.hh	/^class DriverManager : public Script { public:$/;"	c
Drop	elements/grid/gridroutecb.hh	/^    Drop               = 6,   \/\/ data = drop reason$/;"	e	enum:GridRouteActionCallback::Action
DropBroadcasts	elements/standard/dropbroadcasts.cc	/^DropBroadcasts::DropBroadcasts()$/;"	f	class:DropBroadcasts
DropBroadcasts	elements/standard/dropbroadcasts.hh	/^class DropBroadcasts : public Element {$/;"	c
DropReason	elements/grid/gridroutecb.hh	/^  enum DropReason {$/;"	g	class:GridRouteActionCallback
DstInfo	elements/grid/gridproxy.hh	/^    DstInfo() {_ip = IPAddress(0); _gw = IPAddress(0); }$/;"	f	class:GridProxy::DstInfo
DstInfo	elements/grid/gridproxy.hh	/^    DstInfo(IPAddress ip, IPAddress gw, Timestamp now) {$/;"	f	class:GridProxy::DstInfo
DstInfo	elements/grid/gridproxy.hh	/^  class DstInfo {$/;"	c	class:GridProxy
DstInfo	elements/wifi/autoratefallback.hh	/^    DstInfo() {$/;"	f	struct:AutoRateFallback::DstInfo
DstInfo	elements/wifi/autoratefallback.hh	/^    DstInfo(EtherAddress eth) {$/;"	f	struct:AutoRateFallback::DstInfo
DstInfo	elements/wifi/autoratefallback.hh	/^  struct DstInfo {$/;"	s	class:AutoRateFallback
DstInfo	elements/wifi/availablerates.hh	/^    DstInfo() {$/;"	f	class:AvailableRates::DstInfo
DstInfo	elements/wifi/availablerates.hh	/^    DstInfo(EtherAddress eth) {$/;"	f	class:AvailableRates::DstInfo
DstInfo	elements/wifi/availablerates.hh	/^  class DstInfo {$/;"	c	class:AvailableRates
DstInfo	elements/wifi/ethercount.hh	/^    DstInfo() {$/;"	f	class:EtherCount::DstInfo
DstInfo	elements/wifi/ethercount.hh	/^    DstInfo(EtherAddress eth) {$/;"	f	class:EtherCount::DstInfo
DstInfo	elements/wifi/ethercount.hh	/^  class DstInfo {$/;"	c	class:EtherCount
DstInfo	elements/wifi/madwifirate.hh	/^    DstInfo() {$/;"	f	struct:MadwifiRate::DstInfo
DstInfo	elements/wifi/madwifirate.hh	/^    DstInfo(EtherAddress eth) {$/;"	f	struct:MadwifiRate::DstInfo
DstInfo	elements/wifi/madwifirate.hh	/^  struct DstInfo {$/;"	s	class:MadwifiRate
DstInfo	elements/wifi/probetxrate.hh	/^    DstInfo() {$/;"	f	struct:ProbeTXRate::DstInfo
DstInfo	elements/wifi/probetxrate.hh	/^    DstInfo(EtherAddress eth, Vector<int> rates) {$/;"	f	struct:ProbeTXRate::DstInfo
DstInfo	elements/wifi/probetxrate.hh	/^  struct DstInfo {$/;"	s	class:ProbeTXRate
DstInfo	elements/wifi/rxstats.hh	/^    DstInfo() {$/;"	f	class:RXStats::DstInfo
DstInfo	elements/wifi/rxstats.hh	/^    DstInfo(EtherAddress eth) {$/;"	f	class:RXStats::DstInfo
DstInfo	elements/wifi/rxstats.hh	/^  class DstInfo {$/;"	c	class:RXStats
DstInfo	elements/wifi/wifidupefilter.hh	/^    DstInfo () { }$/;"	f	class:WifiDupeFilter::DstInfo
DstInfo	elements/wifi/wifidupefilter.hh	/^    DstInfo(EtherAddress eth) {$/;"	f	class:WifiDupeFilter::DstInfo
DstInfo	elements/wifi/wifidupefilter.hh	/^  class DstInfo {$/;"	c	class:WifiDupeFilter
DstIter	elements/wifi/wifidupefilter.hh	/^  typedef DstTable::const_iterator DstIter;$/;"	t	class:WifiDupeFilter
DstTable	elements/wifi/wifidupefilter.hh	/^  typedef HashMap <EtherAddress, DstInfo> DstTable;$/;"	t	class:WifiDupeFilter
DummyClass	elements/local/FlowNet/utils/FlowNetUtils.hh	/^class DummyClass {$/;"	c
DummyScheduleNoSchedule	elements/local/FlowNet/scheduler/sched_algorithms/SchedNoSchedule.hh	/^class DummyScheduleNoSchedule {$/;"	c
Duplex	drivers/e1000-4.x/src/base_comm.h	/^    u32     Duplex;              \/* Cast from IANS_BD_DUPLEX_STATUS  *\/$/;"	m	struct:_IANS_BD_PARAM_STATUS
DuringResetProcess	drivers/e1000-4.x/src/base_comm.h	/^    u32     DuringResetProcess;  \/* Cast from IANS_BD_RESET_STAGE  *\/$/;"	m	struct:_IANS_BD_PARAM_STATUS
DynamicNameDB	include/click/nameinfo.hh	/^DynamicNameDB::DynamicNameDB(uint32_t type, const String &context, size_t vsize)$/;"	f	class:DynamicNameDB
DynamicNameDB	include/click/nameinfo.hh	/^class DynamicNameDB : public NameDB { public:$/;"	c
DynamicUDPIPEncap	elements/tcpudp/dynudpipencap.cc	/^DynamicUDPIPEncap::DynamicUDPIPEncap()$/;"	f	class:DynamicUDPIPEncap
DynamicUDPIPEncap	elements/tcpudp/dynudpipencap.hh	/^class DynamicUDPIPEncap : public Element {$/;"	c
E1000_82542_2_0_REV_ID	drivers/e1000-4.x/src/e1000_hw.h	261;"	d
E1000_82542_2_0_REV_ID	drivers/e1000-5.x/src/e1000_hw.h	390;"	d
E1000_82542_2_0_REV_ID	drivers/e1000-7.x/src/e1000_hw.h	508;"	d
E1000_82542_2_1_REV_ID	drivers/e1000-4.x/src/e1000_hw.h	262;"	d
E1000_82542_2_1_REV_ID	drivers/e1000-5.x/src/e1000_hw.h	391;"	d
E1000_82542_2_1_REV_ID	drivers/e1000-7.x/src/e1000_hw.h	509;"	d
E1000_82542_AIT	drivers/e1000-4.x/src/e1000_hw.h	697;"	d
E1000_82542_AIT	drivers/e1000-5.x/src/e1000_hw.h	842;"	d
E1000_82542_AIT	drivers/e1000-7.x/src/e1000_hw.h	1165;"	d
E1000_82542_ALGNERRC	drivers/e1000-4.x/src/e1000_hw.h	709;"	d
E1000_82542_ALGNERRC	drivers/e1000-5.x/src/e1000_hw.h	858;"	d
E1000_82542_ALGNERRC	drivers/e1000-7.x/src/e1000_hw.h	1195;"	d
E1000_82542_BPRC	drivers/e1000-4.x/src/e1000_hw.h	735;"	d
E1000_82542_BPRC	drivers/e1000-5.x/src/e1000_hw.h	884;"	d
E1000_82542_BPRC	drivers/e1000-7.x/src/e1000_hw.h	1221;"	d
E1000_82542_BPTC	drivers/e1000-4.x/src/e1000_hw.h	763;"	d
E1000_82542_BPTC	drivers/e1000-5.x/src/e1000_hw.h	912;"	d
E1000_82542_BPTC	drivers/e1000-7.x/src/e1000_hw.h	1249;"	d
E1000_82542_CEXTERR	drivers/e1000-4.x/src/e1000_hw.h	721;"	d
E1000_82542_CEXTERR	drivers/e1000-5.x/src/e1000_hw.h	870;"	d
E1000_82542_CEXTERR	drivers/e1000-7.x/src/e1000_hw.h	1207;"	d
E1000_82542_COLC	drivers/e1000-4.x/src/e1000_hw.h	717;"	d
E1000_82542_COLC	drivers/e1000-5.x/src/e1000_hw.h	866;"	d
E1000_82542_COLC	drivers/e1000-7.x/src/e1000_hw.h	1203;"	d
E1000_82542_CPUVEC	drivers/e1000-7.x/src/e1000_hw.h	1301;"	d
E1000_82542_CRCERRS	drivers/e1000-4.x/src/e1000_hw.h	708;"	d
E1000_82542_CRCERRS	drivers/e1000-5.x/src/e1000_hw.h	857;"	d
E1000_82542_CRCERRS	drivers/e1000-7.x/src/e1000_hw.h	1194;"	d
E1000_82542_CTRL	drivers/e1000-4.x/src/e1000_hw.h	659;"	d
E1000_82542_CTRL	drivers/e1000-5.x/src/e1000_hw.h	802;"	d
E1000_82542_CTRL	drivers/e1000-7.x/src/e1000_hw.h	1097;"	d
E1000_82542_CTRL_DUP	drivers/e1000-5.x/src/e1000_hw.h	803;"	d
E1000_82542_CTRL_DUP	drivers/e1000-7.x/src/e1000_hw.h	1098;"	d
E1000_82542_CTRL_EXT	drivers/e1000-4.x/src/e1000_hw.h	663;"	d
E1000_82542_CTRL_EXT	drivers/e1000-5.x/src/e1000_hw.h	807;"	d
E1000_82542_CTRL_EXT	drivers/e1000-7.x/src/e1000_hw.h	1102;"	d
E1000_82542_DC	drivers/e1000-4.x/src/e1000_hw.h	718;"	d
E1000_82542_DC	drivers/e1000-5.x/src/e1000_hw.h	867;"	d
E1000_82542_DC	drivers/e1000-7.x/src/e1000_hw.h	1204;"	d
E1000_82542_DCA_RXCTRL	drivers/e1000-7.x/src/e1000_hw.h	1132;"	d
E1000_82542_ECOL	drivers/e1000-4.x/src/e1000_hw.h	714;"	d
E1000_82542_ECOL	drivers/e1000-5.x/src/e1000_hw.h	863;"	d
E1000_82542_ECOL	drivers/e1000-7.x/src/e1000_hw.h	1200;"	d
E1000_82542_EEARBC	drivers/e1000-7.x/src/e1000_hw.h	1171;"	d
E1000_82542_EECD	drivers/e1000-4.x/src/e1000_hw.h	661;"	d
E1000_82542_EECD	drivers/e1000-5.x/src/e1000_hw.h	805;"	d
E1000_82542_EECD	drivers/e1000-7.x/src/e1000_hw.h	1100;"	d
E1000_82542_EEMNGCTL	drivers/e1000-7.x/src/e1000_hw.h	1170;"	d
E1000_82542_EEMNGCTL	drivers/e1000-7.x/src/e1000_hw.h	1269;"	d
E1000_82542_EERD	drivers/e1000-4.x/src/e1000_hw.h	662;"	d
E1000_82542_EERD	drivers/e1000-5.x/src/e1000_hw.h	806;"	d
E1000_82542_EERD	drivers/e1000-7.x/src/e1000_hw.h	1101;"	d
E1000_82542_EEWR	drivers/e1000-7.x/src/e1000_hw.h	1173;"	d
E1000_82542_ERT	drivers/e1000-5.x/src/e1000_hw.h	846;"	d
E1000_82542_ERT	drivers/e1000-7.x/src/e1000_hw.h	1181;"	d
E1000_82542_EXTCNF_CTRL	drivers/e1000-7.x/src/e1000_hw.h	1178;"	d
E1000_82542_EXTCNF_SIZE	drivers/e1000-7.x/src/e1000_hw.h	1179;"	d
E1000_82542_FACTPS	drivers/e1000-7.x/src/e1000_hw.h	1286;"	d
E1000_82542_FCAH	drivers/e1000-4.x/src/e1000_hw.h	666;"	d
E1000_82542_FCAH	drivers/e1000-5.x/src/e1000_hw.h	811;"	d
E1000_82542_FCAH	drivers/e1000-7.x/src/e1000_hw.h	1108;"	d
E1000_82542_FCAL	drivers/e1000-4.x/src/e1000_hw.h	665;"	d
E1000_82542_FCAL	drivers/e1000-5.x/src/e1000_hw.h	810;"	d
E1000_82542_FCAL	drivers/e1000-7.x/src/e1000_hw.h	1107;"	d
E1000_82542_FCRTH	drivers/e1000-4.x/src/e1000_hw.h	682;"	d
E1000_82542_FCRTH	drivers/e1000-5.x/src/e1000_hw.h	827;"	d
E1000_82542_FCRTH	drivers/e1000-7.x/src/e1000_hw.h	1149;"	d
E1000_82542_FCRTL	drivers/e1000-4.x/src/e1000_hw.h	683;"	d
E1000_82542_FCRTL	drivers/e1000-5.x/src/e1000_hw.h	828;"	d
E1000_82542_FCRTL	drivers/e1000-7.x/src/e1000_hw.h	1150;"	d
E1000_82542_FCRUC	drivers/e1000-4.x/src/e1000_hw.h	727;"	d
E1000_82542_FCRUC	drivers/e1000-5.x/src/e1000_hw.h	876;"	d
E1000_82542_FCRUC	drivers/e1000-7.x/src/e1000_hw.h	1213;"	d
E1000_82542_FCT	drivers/e1000-4.x/src/e1000_hw.h	667;"	d
E1000_82542_FCT	drivers/e1000-5.x/src/e1000_hw.h	812;"	d
E1000_82542_FCT	drivers/e1000-7.x/src/e1000_hw.h	1109;"	d
E1000_82542_FCTTV	drivers/e1000-4.x/src/e1000_hw.h	684;"	d
E1000_82542_FCTTV	drivers/e1000-5.x/src/e1000_hw.h	829;"	d
E1000_82542_FCTTV	drivers/e1000-7.x/src/e1000_hw.h	1151;"	d
E1000_82542_FEXTNVM	drivers/e1000-7.x/src/e1000_hw.h	1106;"	d
E1000_82542_FFLT	drivers/e1000-4.x/src/e1000_hw.h	776;"	d
E1000_82542_FFLT	drivers/e1000-5.x/src/e1000_hw.h	925;"	d
E1000_82542_FFLT	drivers/e1000-7.x/src/e1000_hw.h	1262;"	d
E1000_82542_FFLT_DBG	drivers/e1000-7.x/src/e1000_hw.h	1289;"	d
E1000_82542_FFMT	drivers/e1000-4.x/src/e1000_hw.h	777;"	d
E1000_82542_FFMT	drivers/e1000-5.x/src/e1000_hw.h	928;"	d
E1000_82542_FFMT	drivers/e1000-7.x/src/e1000_hw.h	1265;"	d
E1000_82542_FFVT	drivers/e1000-4.x/src/e1000_hw.h	778;"	d
E1000_82542_FFVT	drivers/e1000-5.x/src/e1000_hw.h	929;"	d
E1000_82542_FFVT	drivers/e1000-7.x/src/e1000_hw.h	1266;"	d
E1000_82542_FLA	drivers/e1000-5.x/src/e1000_hw.h	808;"	d
E1000_82542_FLA	drivers/e1000-7.x/src/e1000_hw.h	1103;"	d
E1000_82542_FLASHT	drivers/e1000-7.x/src/e1000_hw.h	1172;"	d
E1000_82542_FLOP	drivers/e1000-7.x/src/e1000_hw.h	1177;"	d
E1000_82542_FLSWCNT	drivers/e1000-7.x/src/e1000_hw.h	1176;"	d
E1000_82542_FLSWCTL	drivers/e1000-7.x/src/e1000_hw.h	1174;"	d
E1000_82542_FLSWDATA	drivers/e1000-7.x/src/e1000_hw.h	1175;"	d
E1000_82542_FWSM	drivers/e1000-7.x/src/e1000_hw.h	1288;"	d
E1000_82542_GCR	drivers/e1000-7.x/src/e1000_hw.h	1281;"	d
E1000_82542_GORCH	drivers/e1000-4.x/src/e1000_hw.h	739;"	d
E1000_82542_GORCH	drivers/e1000-5.x/src/e1000_hw.h	888;"	d
E1000_82542_GORCH	drivers/e1000-7.x/src/e1000_hw.h	1225;"	d
E1000_82542_GORCL	drivers/e1000-4.x/src/e1000_hw.h	738;"	d
E1000_82542_GORCL	drivers/e1000-5.x/src/e1000_hw.h	887;"	d
E1000_82542_GORCL	drivers/e1000-7.x/src/e1000_hw.h	1224;"	d
E1000_82542_GOTCH	drivers/e1000-4.x/src/e1000_hw.h	741;"	d
E1000_82542_GOTCH	drivers/e1000-5.x/src/e1000_hw.h	890;"	d
E1000_82542_GOTCH	drivers/e1000-7.x/src/e1000_hw.h	1227;"	d
E1000_82542_GOTCL	drivers/e1000-4.x/src/e1000_hw.h	740;"	d
E1000_82542_GOTCL	drivers/e1000-5.x/src/e1000_hw.h	889;"	d
E1000_82542_GOTCL	drivers/e1000-7.x/src/e1000_hw.h	1226;"	d
E1000_82542_GPRC	drivers/e1000-4.x/src/e1000_hw.h	734;"	d
E1000_82542_GPRC	drivers/e1000-5.x/src/e1000_hw.h	883;"	d
E1000_82542_GPRC	drivers/e1000-7.x/src/e1000_hw.h	1220;"	d
E1000_82542_GPTC	drivers/e1000-4.x/src/e1000_hw.h	737;"	d
E1000_82542_GPTC	drivers/e1000-5.x/src/e1000_hw.h	886;"	d
E1000_82542_GPTC	drivers/e1000-7.x/src/e1000_hw.h	1223;"	d
E1000_82542_GSCL_1	drivers/e1000-7.x/src/e1000_hw.h	1282;"	d
E1000_82542_GSCL_2	drivers/e1000-7.x/src/e1000_hw.h	1283;"	d
E1000_82542_GSCL_3	drivers/e1000-7.x/src/e1000_hw.h	1284;"	d
E1000_82542_GSCL_4	drivers/e1000-7.x/src/e1000_hw.h	1285;"	d
E1000_82542_HICR	drivers/e1000-7.x/src/e1000_hw.h	1299;"	d
E1000_82542_HOST_IF	drivers/e1000-5.x/src/e1000_hw.h	930;"	d
E1000_82542_HOST_IF	drivers/e1000-7.x/src/e1000_hw.h	1267;"	d
E1000_82542_IAC	drivers/e1000-7.x/src/e1000_hw.h	1290;"	d
E1000_82542_IAM	drivers/e1000-7.x/src/e1000_hw.h	1268;"	d
E1000_82542_ICR	drivers/e1000-4.x/src/e1000_hw.h	670;"	d
E1000_82542_ICR	drivers/e1000-5.x/src/e1000_hw.h	815;"	d
E1000_82542_ICR	drivers/e1000-7.x/src/e1000_hw.h	1112;"	d
E1000_82542_ICRXATC	drivers/e1000-7.x/src/e1000_hw.h	1292;"	d
E1000_82542_ICRXDMTC	drivers/e1000-7.x/src/e1000_hw.h	1297;"	d
E1000_82542_ICRXOC	drivers/e1000-7.x/src/e1000_hw.h	1298;"	d
E1000_82542_ICRXPTC	drivers/e1000-7.x/src/e1000_hw.h	1291;"	d
E1000_82542_ICS	drivers/e1000-4.x/src/e1000_hw.h	672;"	d
E1000_82542_ICS	drivers/e1000-5.x/src/e1000_hw.h	817;"	d
E1000_82542_ICS	drivers/e1000-7.x/src/e1000_hw.h	1114;"	d
E1000_82542_ICTXATC	drivers/e1000-7.x/src/e1000_hw.h	1294;"	d
E1000_82542_ICTXPTC	drivers/e1000-7.x/src/e1000_hw.h	1293;"	d
E1000_82542_ICTXQEC	drivers/e1000-7.x/src/e1000_hw.h	1295;"	d
E1000_82542_ICTXQMTC	drivers/e1000-7.x/src/e1000_hw.h	1296;"	d
E1000_82542_IMC	drivers/e1000-4.x/src/e1000_hw.h	674;"	d
E1000_82542_IMC	drivers/e1000-5.x/src/e1000_hw.h	819;"	d
E1000_82542_IMC	drivers/e1000-7.x/src/e1000_hw.h	1116;"	d
E1000_82542_IMS	drivers/e1000-4.x/src/e1000_hw.h	673;"	d
E1000_82542_IMS	drivers/e1000-5.x/src/e1000_hw.h	818;"	d
E1000_82542_IMS	drivers/e1000-7.x/src/e1000_hw.h	1115;"	d
E1000_82542_IP4AT	drivers/e1000-4.x/src/e1000_hw.h	772;"	d
E1000_82542_IP4AT	drivers/e1000-5.x/src/e1000_hw.h	921;"	d
E1000_82542_IP4AT	drivers/e1000-7.x/src/e1000_hw.h	1258;"	d
E1000_82542_IP6AT	drivers/e1000-4.x/src/e1000_hw.h	773;"	d
E1000_82542_IP6AT	drivers/e1000-5.x/src/e1000_hw.h	922;"	d
E1000_82542_IP6AT	drivers/e1000-7.x/src/e1000_hw.h	1259;"	d
E1000_82542_IPAV	drivers/e1000-4.x/src/e1000_hw.h	771;"	d
E1000_82542_IPAV	drivers/e1000-5.x/src/e1000_hw.h	920;"	d
E1000_82542_IPAV	drivers/e1000-7.x/src/e1000_hw.h	1257;"	d
E1000_82542_ITR	drivers/e1000-4.x/src/e1000_hw.h	671;"	d
E1000_82542_ITR	drivers/e1000-5.x/src/e1000_hw.h	816;"	d
E1000_82542_ITR	drivers/e1000-7.x/src/e1000_hw.h	1113;"	d
E1000_82542_KABGTXD	drivers/e1000-7.x/src/e1000_hw.h	1187;"	d
E1000_82542_KUMCTRLSTA	drivers/e1000-7.x/src/e1000_hw.h	1307;"	d
E1000_82542_LATECOL	drivers/e1000-4.x/src/e1000_hw.h	716;"	d
E1000_82542_LATECOL	drivers/e1000-5.x/src/e1000_hw.h	865;"	d
E1000_82542_LATECOL	drivers/e1000-7.x/src/e1000_hw.h	1202;"	d
E1000_82542_LEDCTL	drivers/e1000-4.x/src/e1000_hw.h	699;"	d
E1000_82542_LEDCTL	drivers/e1000-5.x/src/e1000_hw.h	844;"	d
E1000_82542_LEDCTL	drivers/e1000-7.x/src/e1000_hw.h	1167;"	d
E1000_82542_MANC	drivers/e1000-4.x/src/e1000_hw.h	770;"	d
E1000_82542_MANC	drivers/e1000-5.x/src/e1000_hw.h	919;"	d
E1000_82542_MANC	drivers/e1000-7.x/src/e1000_hw.h	1256;"	d
E1000_82542_MANC2H	drivers/e1000-7.x/src/e1000_hw.h	1309;"	d
E1000_82542_MCC	drivers/e1000-4.x/src/e1000_hw.h	715;"	d
E1000_82542_MCC	drivers/e1000-5.x/src/e1000_hw.h	864;"	d
E1000_82542_MCC	drivers/e1000-7.x/src/e1000_hw.h	1201;"	d
E1000_82542_MDIC	drivers/e1000-4.x/src/e1000_hw.h	664;"	d
E1000_82542_MDIC	drivers/e1000-5.x/src/e1000_hw.h	809;"	d
E1000_82542_MDIC	drivers/e1000-7.x/src/e1000_hw.h	1104;"	d
E1000_82542_MGTPDC	drivers/e1000-4.x/src/e1000_hw.h	748;"	d
E1000_82542_MGTPDC	drivers/e1000-5.x/src/e1000_hw.h	897;"	d
E1000_82542_MGTPDC	drivers/e1000-7.x/src/e1000_hw.h	1234;"	d
E1000_82542_MGTPRC	drivers/e1000-4.x/src/e1000_hw.h	747;"	d
E1000_82542_MGTPRC	drivers/e1000-5.x/src/e1000_hw.h	896;"	d
E1000_82542_MGTPRC	drivers/e1000-7.x/src/e1000_hw.h	1233;"	d
E1000_82542_MGTPTC	drivers/e1000-4.x/src/e1000_hw.h	749;"	d
E1000_82542_MGTPTC	drivers/e1000-5.x/src/e1000_hw.h	898;"	d
E1000_82542_MGTPTC	drivers/e1000-7.x/src/e1000_hw.h	1235;"	d
E1000_82542_MPC	drivers/e1000-4.x/src/e1000_hw.h	712;"	d
E1000_82542_MPC	drivers/e1000-5.x/src/e1000_hw.h	861;"	d
E1000_82542_MPC	drivers/e1000-7.x/src/e1000_hw.h	1198;"	d
E1000_82542_MPRC	drivers/e1000-4.x/src/e1000_hw.h	736;"	d
E1000_82542_MPRC	drivers/e1000-5.x/src/e1000_hw.h	885;"	d
E1000_82542_MPRC	drivers/e1000-7.x/src/e1000_hw.h	1222;"	d
E1000_82542_MPTC	drivers/e1000-4.x/src/e1000_hw.h	762;"	d
E1000_82542_MPTC	drivers/e1000-5.x/src/e1000_hw.h	911;"	d
E1000_82542_MPTC	drivers/e1000-7.x/src/e1000_hw.h	1248;"	d
E1000_82542_MRQC	drivers/e1000-7.x/src/e1000_hw.h	1302;"	d
E1000_82542_MTA	drivers/e1000-4.x/src/e1000_hw.h	687;"	d
E1000_82542_MTA	drivers/e1000-5.x/src/e1000_hw.h	832;"	d
E1000_82542_MTA	drivers/e1000-7.x/src/e1000_hw.h	1154;"	d
E1000_82542_PBA	drivers/e1000-4.x/src/e1000_hw.h	700;"	d
E1000_82542_PBA	drivers/e1000-5.x/src/e1000_hw.h	845;"	d
E1000_82542_PBA	drivers/e1000-7.x/src/e1000_hw.h	1168;"	d
E1000_82542_PBS	drivers/e1000-7.x/src/e1000_hw.h	1169;"	d
E1000_82542_PHY_CTRL	drivers/e1000-7.x/src/e1000_hw.h	1180;"	d
E1000_82542_PRC1023	drivers/e1000-4.x/src/e1000_hw.h	732;"	d
E1000_82542_PRC1023	drivers/e1000-5.x/src/e1000_hw.h	881;"	d
E1000_82542_PRC1023	drivers/e1000-7.x/src/e1000_hw.h	1218;"	d
E1000_82542_PRC127	drivers/e1000-4.x/src/e1000_hw.h	729;"	d
E1000_82542_PRC127	drivers/e1000-5.x/src/e1000_hw.h	878;"	d
E1000_82542_PRC127	drivers/e1000-7.x/src/e1000_hw.h	1215;"	d
E1000_82542_PRC1522	drivers/e1000-4.x/src/e1000_hw.h	733;"	d
E1000_82542_PRC1522	drivers/e1000-5.x/src/e1000_hw.h	882;"	d
E1000_82542_PRC1522	drivers/e1000-7.x/src/e1000_hw.h	1219;"	d
E1000_82542_PRC255	drivers/e1000-4.x/src/e1000_hw.h	730;"	d
E1000_82542_PRC255	drivers/e1000-5.x/src/e1000_hw.h	879;"	d
E1000_82542_PRC255	drivers/e1000-7.x/src/e1000_hw.h	1216;"	d
E1000_82542_PRC511	drivers/e1000-4.x/src/e1000_hw.h	731;"	d
E1000_82542_PRC511	drivers/e1000-5.x/src/e1000_hw.h	880;"	d
E1000_82542_PRC511	drivers/e1000-7.x/src/e1000_hw.h	1217;"	d
E1000_82542_PRC64	drivers/e1000-4.x/src/e1000_hw.h	728;"	d
E1000_82542_PRC64	drivers/e1000-5.x/src/e1000_hw.h	877;"	d
E1000_82542_PRC64	drivers/e1000-7.x/src/e1000_hw.h	1214;"	d
E1000_82542_PSRCTL	drivers/e1000-7.x/src/e1000_hw.h	1270;"	d
E1000_82542_PTC1023	drivers/e1000-4.x/src/e1000_hw.h	760;"	d
E1000_82542_PTC1023	drivers/e1000-5.x/src/e1000_hw.h	909;"	d
E1000_82542_PTC1023	drivers/e1000-7.x/src/e1000_hw.h	1246;"	d
E1000_82542_PTC127	drivers/e1000-4.x/src/e1000_hw.h	757;"	d
E1000_82542_PTC127	drivers/e1000-5.x/src/e1000_hw.h	906;"	d
E1000_82542_PTC127	drivers/e1000-7.x/src/e1000_hw.h	1243;"	d
E1000_82542_PTC1522	drivers/e1000-4.x/src/e1000_hw.h	761;"	d
E1000_82542_PTC1522	drivers/e1000-5.x/src/e1000_hw.h	910;"	d
E1000_82542_PTC1522	drivers/e1000-7.x/src/e1000_hw.h	1247;"	d
E1000_82542_PTC255	drivers/e1000-4.x/src/e1000_hw.h	758;"	d
E1000_82542_PTC255	drivers/e1000-5.x/src/e1000_hw.h	907;"	d
E1000_82542_PTC255	drivers/e1000-7.x/src/e1000_hw.h	1244;"	d
E1000_82542_PTC511	drivers/e1000-4.x/src/e1000_hw.h	759;"	d
E1000_82542_PTC511	drivers/e1000-5.x/src/e1000_hw.h	908;"	d
E1000_82542_PTC511	drivers/e1000-7.x/src/e1000_hw.h	1245;"	d
E1000_82542_PTC64	drivers/e1000-4.x/src/e1000_hw.h	756;"	d
E1000_82542_PTC64	drivers/e1000-5.x/src/e1000_hw.h	905;"	d
E1000_82542_PTC64	drivers/e1000-7.x/src/e1000_hw.h	1242;"	d
E1000_82542_RA	drivers/e1000-4.x/src/e1000_hw.h	669;"	d
E1000_82542_RA	drivers/e1000-5.x/src/e1000_hw.h	814;"	d
E1000_82542_RA	drivers/e1000-7.x/src/e1000_hw.h	1111;"	d
E1000_82542_RADV	drivers/e1000-4.x/src/e1000_hw.h	702;"	d
E1000_82542_RADV	drivers/e1000-5.x/src/e1000_hw.h	848;"	d
E1000_82542_RADV	drivers/e1000-7.x/src/e1000_hw.h	1184;"	d
E1000_82542_RAID	drivers/e1000-7.x/src/e1000_hw.h	1271;"	d
E1000_82542_RCTL	drivers/e1000-4.x/src/e1000_hw.h	675;"	d
E1000_82542_RCTL	drivers/e1000-5.x/src/e1000_hw.h	820;"	d
E1000_82542_RCTL	drivers/e1000-7.x/src/e1000_hw.h	1117;"	d
E1000_82542_RDBAH	drivers/e1000-4.x/src/e1000_hw.h	678;"	d
E1000_82542_RDBAH	drivers/e1000-5.x/src/e1000_hw.h	823;"	d
E1000_82542_RDBAH	drivers/e1000-7.x/src/e1000_hw.h	1120;"	d
E1000_82542_RDBAH0	drivers/e1000-7.x/src/e1000_hw.h	1126;"	d
E1000_82542_RDBAH1	drivers/e1000-7.x/src/e1000_hw.h	1145;"	d
E1000_82542_RDBAH2	drivers/e1000-7.x/src/e1000_hw.h	1139;"	d
E1000_82542_RDBAH3	drivers/e1000-7.x/src/e1000_hw.h	1133;"	d
E1000_82542_RDBAL	drivers/e1000-4.x/src/e1000_hw.h	677;"	d
E1000_82542_RDBAL	drivers/e1000-5.x/src/e1000_hw.h	822;"	d
E1000_82542_RDBAL	drivers/e1000-7.x/src/e1000_hw.h	1119;"	d
E1000_82542_RDBAL0	drivers/e1000-7.x/src/e1000_hw.h	1125;"	d
E1000_82542_RDBAL1	drivers/e1000-7.x/src/e1000_hw.h	1144;"	d
E1000_82542_RDBAL2	drivers/e1000-7.x/src/e1000_hw.h	1138;"	d
E1000_82542_RDBAL3	drivers/e1000-7.x/src/e1000_hw.h	1134;"	d
E1000_82542_RDH	drivers/e1000-4.x/src/e1000_hw.h	680;"	d
E1000_82542_RDH	drivers/e1000-5.x/src/e1000_hw.h	825;"	d
E1000_82542_RDH	drivers/e1000-7.x/src/e1000_hw.h	1122;"	d
E1000_82542_RDH0	drivers/e1000-7.x/src/e1000_hw.h	1128;"	d
E1000_82542_RDH1	drivers/e1000-7.x/src/e1000_hw.h	1147;"	d
E1000_82542_RDH2	drivers/e1000-7.x/src/e1000_hw.h	1141;"	d
E1000_82542_RDH3	drivers/e1000-7.x/src/e1000_hw.h	1136;"	d
E1000_82542_RDLEN	drivers/e1000-4.x/src/e1000_hw.h	679;"	d
E1000_82542_RDLEN	drivers/e1000-5.x/src/e1000_hw.h	824;"	d
E1000_82542_RDLEN	drivers/e1000-7.x/src/e1000_hw.h	1121;"	d
E1000_82542_RDLEN0	drivers/e1000-7.x/src/e1000_hw.h	1127;"	d
E1000_82542_RDLEN1	drivers/e1000-7.x/src/e1000_hw.h	1146;"	d
E1000_82542_RDLEN2	drivers/e1000-7.x/src/e1000_hw.h	1140;"	d
E1000_82542_RDLEN3	drivers/e1000-7.x/src/e1000_hw.h	1135;"	d
E1000_82542_RDT	drivers/e1000-4.x/src/e1000_hw.h	681;"	d
E1000_82542_RDT	drivers/e1000-5.x/src/e1000_hw.h	826;"	d
E1000_82542_RDT	drivers/e1000-7.x/src/e1000_hw.h	1123;"	d
E1000_82542_RDT0	drivers/e1000-7.x/src/e1000_hw.h	1129;"	d
E1000_82542_RDT1	drivers/e1000-7.x/src/e1000_hw.h	1148;"	d
E1000_82542_RDT2	drivers/e1000-7.x/src/e1000_hw.h	1142;"	d
E1000_82542_RDT3	drivers/e1000-7.x/src/e1000_hw.h	1137;"	d
E1000_82542_RDTR	drivers/e1000-4.x/src/e1000_hw.h	676;"	d
E1000_82542_RDTR	drivers/e1000-5.x/src/e1000_hw.h	821;"	d
E1000_82542_RDTR	drivers/e1000-7.x/src/e1000_hw.h	1118;"	d
E1000_82542_RDTR0	drivers/e1000-7.x/src/e1000_hw.h	1124;"	d
E1000_82542_RDTR1	drivers/e1000-7.x/src/e1000_hw.h	1143;"	d
E1000_82542_RETA	drivers/e1000-7.x/src/e1000_hw.h	1303;"	d
E1000_82542_RFC	drivers/e1000-4.x/src/e1000_hw.h	744;"	d
E1000_82542_RFC	drivers/e1000-5.x/src/e1000_hw.h	893;"	d
E1000_82542_RFC	drivers/e1000-7.x/src/e1000_hw.h	1230;"	d
E1000_82542_RFCTL	drivers/e1000-7.x/src/e1000_hw.h	1280;"	d
E1000_82542_RJC	drivers/e1000-4.x/src/e1000_hw.h	746;"	d
E1000_82542_RJC	drivers/e1000-5.x/src/e1000_hw.h	895;"	d
E1000_82542_RJC	drivers/e1000-7.x/src/e1000_hw.h	1232;"	d
E1000_82542_RLEC	drivers/e1000-4.x/src/e1000_hw.h	722;"	d
E1000_82542_RLEC	drivers/e1000-5.x/src/e1000_hw.h	871;"	d
E1000_82542_RLEC	drivers/e1000-7.x/src/e1000_hw.h	1208;"	d
E1000_82542_RNBC	drivers/e1000-4.x/src/e1000_hw.h	742;"	d
E1000_82542_RNBC	drivers/e1000-5.x/src/e1000_hw.h	891;"	d
E1000_82542_RNBC	drivers/e1000-7.x/src/e1000_hw.h	1228;"	d
E1000_82542_ROC	drivers/e1000-4.x/src/e1000_hw.h	745;"	d
E1000_82542_ROC	drivers/e1000-5.x/src/e1000_hw.h	894;"	d
E1000_82542_ROC	drivers/e1000-7.x/src/e1000_hw.h	1231;"	d
E1000_82542_RSRPD	drivers/e1000-4.x/src/e1000_hw.h	703;"	d
E1000_82542_RSRPD	drivers/e1000-5.x/src/e1000_hw.h	849;"	d
E1000_82542_RSRPD	drivers/e1000-7.x/src/e1000_hw.h	1185;"	d
E1000_82542_RSSIM	drivers/e1000-7.x/src/e1000_hw.h	1305;"	d
E1000_82542_RSSIR	drivers/e1000-7.x/src/e1000_hw.h	1306;"	d
E1000_82542_RSSRK	drivers/e1000-7.x/src/e1000_hw.h	1304;"	d
E1000_82542_RUC	drivers/e1000-4.x/src/e1000_hw.h	743;"	d
E1000_82542_RUC	drivers/e1000-5.x/src/e1000_hw.h	892;"	d
E1000_82542_RUC	drivers/e1000-7.x/src/e1000_hw.h	1229;"	d
E1000_82542_RXCSUM	drivers/e1000-4.x/src/e1000_hw.h	766;"	d
E1000_82542_RXCSUM	drivers/e1000-5.x/src/e1000_hw.h	915;"	d
E1000_82542_RXCSUM	drivers/e1000-7.x/src/e1000_hw.h	1252;"	d
E1000_82542_RXCW	drivers/e1000-4.x/src/e1000_hw.h	686;"	d
E1000_82542_RXCW	drivers/e1000-5.x/src/e1000_hw.h	831;"	d
E1000_82542_RXCW	drivers/e1000-7.x/src/e1000_hw.h	1153;"	d
E1000_82542_RXDCTL	drivers/e1000-4.x/src/e1000_hw.h	701;"	d
E1000_82542_RXDCTL	drivers/e1000-5.x/src/e1000_hw.h	847;"	d
E1000_82542_RXDCTL	drivers/e1000-7.x/src/e1000_hw.h	1182;"	d
E1000_82542_RXDCTL1	drivers/e1000-7.x/src/e1000_hw.h	1183;"	d
E1000_82542_RXERRC	drivers/e1000-4.x/src/e1000_hw.h	711;"	d
E1000_82542_RXERRC	drivers/e1000-5.x/src/e1000_hw.h	860;"	d
E1000_82542_RXERRC	drivers/e1000-7.x/src/e1000_hw.h	1197;"	d
E1000_82542_SCC	drivers/e1000-4.x/src/e1000_hw.h	713;"	d
E1000_82542_SCC	drivers/e1000-5.x/src/e1000_hw.h	862;"	d
E1000_82542_SCC	drivers/e1000-7.x/src/e1000_hw.h	1199;"	d
E1000_82542_SCTL	drivers/e1000-7.x/src/e1000_hw.h	1105;"	d
E1000_82542_SEC	drivers/e1000-4.x/src/e1000_hw.h	720;"	d
E1000_82542_SEC	drivers/e1000-5.x/src/e1000_hw.h	869;"	d
E1000_82542_SEC	drivers/e1000-7.x/src/e1000_hw.h	1206;"	d
E1000_82542_SRRCTL	drivers/e1000-7.x/src/e1000_hw.h	1130;"	d
E1000_82542_STATUS	drivers/e1000-4.x/src/e1000_hw.h	660;"	d
E1000_82542_STATUS	drivers/e1000-5.x/src/e1000_hw.h	804;"	d
E1000_82542_STATUS	drivers/e1000-7.x/src/e1000_hw.h	1099;"	d
E1000_82542_SWSM	drivers/e1000-7.x/src/e1000_hw.h	1287;"	d
E1000_82542_SW_FW_SYNC	drivers/e1000-7.x/src/e1000_hw.h	1308;"	d
E1000_82542_SYMERRS	drivers/e1000-4.x/src/e1000_hw.h	710;"	d
E1000_82542_SYMERRS	drivers/e1000-5.x/src/e1000_hw.h	859;"	d
E1000_82542_SYMERRS	drivers/e1000-7.x/src/e1000_hw.h	1196;"	d
E1000_82542_TADV	drivers/e1000-4.x/src/e1000_hw.h	706;"	d
E1000_82542_TADV	drivers/e1000-5.x/src/e1000_hw.h	855;"	d
E1000_82542_TADV	drivers/e1000-7.x/src/e1000_hw.h	1192;"	d
E1000_82542_TARC0	drivers/e1000-7.x/src/e1000_hw.h	1272;"	d
E1000_82542_TARC1	drivers/e1000-7.x/src/e1000_hw.h	1279;"	d
E1000_82542_TBT	drivers/e1000-4.x/src/e1000_hw.h	696;"	d
E1000_82542_TBT	drivers/e1000-5.x/src/e1000_hw.h	841;"	d
E1000_82542_TBT	drivers/e1000-7.x/src/e1000_hw.h	1164;"	d
E1000_82542_TCTL	drivers/e1000-4.x/src/e1000_hw.h	688;"	d
E1000_82542_TCTL	drivers/e1000-5.x/src/e1000_hw.h	833;"	d
E1000_82542_TCTL	drivers/e1000-7.x/src/e1000_hw.h	1155;"	d
E1000_82542_TCTL_EXT	drivers/e1000-7.x/src/e1000_hw.h	1156;"	d
E1000_82542_TDBAH	drivers/e1000-4.x/src/e1000_hw.h	691;"	d
E1000_82542_TDBAH	drivers/e1000-5.x/src/e1000_hw.h	836;"	d
E1000_82542_TDBAH	drivers/e1000-7.x/src/e1000_hw.h	1159;"	d
E1000_82542_TDBAH1	drivers/e1000-7.x/src/e1000_hw.h	1274;"	d
E1000_82542_TDBAL	drivers/e1000-4.x/src/e1000_hw.h	690;"	d
E1000_82542_TDBAL	drivers/e1000-5.x/src/e1000_hw.h	835;"	d
E1000_82542_TDBAL	drivers/e1000-7.x/src/e1000_hw.h	1158;"	d
E1000_82542_TDBAL1	drivers/e1000-7.x/src/e1000_hw.h	1273;"	d
E1000_82542_TDFH	drivers/e1000-5.x/src/e1000_hw.h	926;"	d
E1000_82542_TDFH	drivers/e1000-7.x/src/e1000_hw.h	1263;"	d
E1000_82542_TDFHS	drivers/e1000-5.x/src/e1000_hw.h	851;"	d
E1000_82542_TDFHS	drivers/e1000-7.x/src/e1000_hw.h	1188;"	d
E1000_82542_TDFPC	drivers/e1000-5.x/src/e1000_hw.h	853;"	d
E1000_82542_TDFPC	drivers/e1000-7.x/src/e1000_hw.h	1190;"	d
E1000_82542_TDFT	drivers/e1000-5.x/src/e1000_hw.h	927;"	d
E1000_82542_TDFT	drivers/e1000-7.x/src/e1000_hw.h	1264;"	d
E1000_82542_TDFTS	drivers/e1000-5.x/src/e1000_hw.h	852;"	d
E1000_82542_TDFTS	drivers/e1000-7.x/src/e1000_hw.h	1189;"	d
E1000_82542_TDH	drivers/e1000-4.x/src/e1000_hw.h	693;"	d
E1000_82542_TDH	drivers/e1000-5.x/src/e1000_hw.h	838;"	d
E1000_82542_TDH	drivers/e1000-7.x/src/e1000_hw.h	1161;"	d
E1000_82542_TDH1	drivers/e1000-7.x/src/e1000_hw.h	1276;"	d
E1000_82542_TDLEN	drivers/e1000-4.x/src/e1000_hw.h	692;"	d
E1000_82542_TDLEN	drivers/e1000-5.x/src/e1000_hw.h	837;"	d
E1000_82542_TDLEN	drivers/e1000-7.x/src/e1000_hw.h	1160;"	d
E1000_82542_TDLEN1	drivers/e1000-7.x/src/e1000_hw.h	1275;"	d
E1000_82542_TDT	drivers/e1000-4.x/src/e1000_hw.h	694;"	d
E1000_82542_TDT	drivers/e1000-5.x/src/e1000_hw.h	839;"	d
E1000_82542_TDT	drivers/e1000-7.x/src/e1000_hw.h	1162;"	d
E1000_82542_TDT1	drivers/e1000-7.x/src/e1000_hw.h	1277;"	d
E1000_82542_TIDV	drivers/e1000-4.x/src/e1000_hw.h	695;"	d
E1000_82542_TIDV	drivers/e1000-5.x/src/e1000_hw.h	840;"	d
E1000_82542_TIDV	drivers/e1000-7.x/src/e1000_hw.h	1163;"	d
E1000_82542_TIPG	drivers/e1000-4.x/src/e1000_hw.h	689;"	d
E1000_82542_TIPG	drivers/e1000-5.x/src/e1000_hw.h	834;"	d
E1000_82542_TIPG	drivers/e1000-7.x/src/e1000_hw.h	1157;"	d
E1000_82542_TNCRS	drivers/e1000-4.x/src/e1000_hw.h	719;"	d
E1000_82542_TNCRS	drivers/e1000-5.x/src/e1000_hw.h	868;"	d
E1000_82542_TNCRS	drivers/e1000-7.x/src/e1000_hw.h	1205;"	d
E1000_82542_TORH	drivers/e1000-4.x/src/e1000_hw.h	751;"	d
E1000_82542_TORH	drivers/e1000-5.x/src/e1000_hw.h	900;"	d
E1000_82542_TORH	drivers/e1000-7.x/src/e1000_hw.h	1237;"	d
E1000_82542_TORL	drivers/e1000-4.x/src/e1000_hw.h	750;"	d
E1000_82542_TORL	drivers/e1000-5.x/src/e1000_hw.h	899;"	d
E1000_82542_TORL	drivers/e1000-7.x/src/e1000_hw.h	1236;"	d
E1000_82542_TOTH	drivers/e1000-4.x/src/e1000_hw.h	753;"	d
E1000_82542_TOTH	drivers/e1000-5.x/src/e1000_hw.h	902;"	d
E1000_82542_TOTH	drivers/e1000-7.x/src/e1000_hw.h	1239;"	d
E1000_82542_TOTL	drivers/e1000-4.x/src/e1000_hw.h	752;"	d
E1000_82542_TOTL	drivers/e1000-5.x/src/e1000_hw.h	901;"	d
E1000_82542_TOTL	drivers/e1000-7.x/src/e1000_hw.h	1238;"	d
E1000_82542_TPR	drivers/e1000-4.x/src/e1000_hw.h	754;"	d
E1000_82542_TPR	drivers/e1000-5.x/src/e1000_hw.h	903;"	d
E1000_82542_TPR	drivers/e1000-7.x/src/e1000_hw.h	1240;"	d
E1000_82542_TPT	drivers/e1000-4.x/src/e1000_hw.h	755;"	d
E1000_82542_TPT	drivers/e1000-5.x/src/e1000_hw.h	904;"	d
E1000_82542_TPT	drivers/e1000-7.x/src/e1000_hw.h	1241;"	d
E1000_82542_TSCTC	drivers/e1000-4.x/src/e1000_hw.h	764;"	d
E1000_82542_TSCTC	drivers/e1000-5.x/src/e1000_hw.h	913;"	d
E1000_82542_TSCTC	drivers/e1000-7.x/src/e1000_hw.h	1250;"	d
E1000_82542_TSCTFC	drivers/e1000-4.x/src/e1000_hw.h	765;"	d
E1000_82542_TSCTFC	drivers/e1000-5.x/src/e1000_hw.h	914;"	d
E1000_82542_TSCTFC	drivers/e1000-7.x/src/e1000_hw.h	1251;"	d
E1000_82542_TSPMT	drivers/e1000-4.x/src/e1000_hw.h	707;"	d
E1000_82542_TSPMT	drivers/e1000-5.x/src/e1000_hw.h	856;"	d
E1000_82542_TSPMT	drivers/e1000-7.x/src/e1000_hw.h	1193;"	d
E1000_82542_TXCW	drivers/e1000-4.x/src/e1000_hw.h	685;"	d
E1000_82542_TXCW	drivers/e1000-5.x/src/e1000_hw.h	830;"	d
E1000_82542_TXCW	drivers/e1000-7.x/src/e1000_hw.h	1152;"	d
E1000_82542_TXDCTL	drivers/e1000-4.x/src/e1000_hw.h	705;"	d
E1000_82542_TXDCTL	drivers/e1000-5.x/src/e1000_hw.h	854;"	d
E1000_82542_TXDCTL	drivers/e1000-7.x/src/e1000_hw.h	1191;"	d
E1000_82542_TXDCTL1	drivers/e1000-7.x/src/e1000_hw.h	1278;"	d
E1000_82542_TXDMAC	drivers/e1000-4.x/src/e1000_hw.h	704;"	d
E1000_82542_TXDMAC	drivers/e1000-5.x/src/e1000_hw.h	850;"	d
E1000_82542_TXDMAC	drivers/e1000-7.x/src/e1000_hw.h	1186;"	d
E1000_82542_VET	drivers/e1000-4.x/src/e1000_hw.h	668;"	d
E1000_82542_VET	drivers/e1000-5.x/src/e1000_hw.h	813;"	d
E1000_82542_VET	drivers/e1000-7.x/src/e1000_hw.h	1110;"	d
E1000_82542_VFTA	drivers/e1000-4.x/src/e1000_hw.h	698;"	d
E1000_82542_VFTA	drivers/e1000-5.x/src/e1000_hw.h	843;"	d
E1000_82542_VFTA	drivers/e1000-7.x/src/e1000_hw.h	1166;"	d
E1000_82542_WUC	drivers/e1000-4.x/src/e1000_hw.h	767;"	d
E1000_82542_WUC	drivers/e1000-5.x/src/e1000_hw.h	916;"	d
E1000_82542_WUC	drivers/e1000-7.x/src/e1000_hw.h	1253;"	d
E1000_82542_WUFC	drivers/e1000-4.x/src/e1000_hw.h	768;"	d
E1000_82542_WUFC	drivers/e1000-5.x/src/e1000_hw.h	917;"	d
E1000_82542_WUFC	drivers/e1000-7.x/src/e1000_hw.h	1254;"	d
E1000_82542_WUPL	drivers/e1000-4.x/src/e1000_hw.h	774;"	d
E1000_82542_WUPL	drivers/e1000-5.x/src/e1000_hw.h	923;"	d
E1000_82542_WUPL	drivers/e1000-7.x/src/e1000_hw.h	1260;"	d
E1000_82542_WUPM	drivers/e1000-4.x/src/e1000_hw.h	775;"	d
E1000_82542_WUPM	drivers/e1000-5.x/src/e1000_hw.h	924;"	d
E1000_82542_WUPM	drivers/e1000-7.x/src/e1000_hw.h	1261;"	d
E1000_82542_WUS	drivers/e1000-4.x/src/e1000_hw.h	769;"	d
E1000_82542_WUS	drivers/e1000-5.x/src/e1000_hw.h	918;"	d
E1000_82542_WUS	drivers/e1000-7.x/src/e1000_hw.h	1255;"	d
E1000_82542_XOFFRXC	drivers/e1000-4.x/src/e1000_hw.h	725;"	d
E1000_82542_XOFFRXC	drivers/e1000-5.x/src/e1000_hw.h	874;"	d
E1000_82542_XOFFRXC	drivers/e1000-7.x/src/e1000_hw.h	1211;"	d
E1000_82542_XOFFTXC	drivers/e1000-4.x/src/e1000_hw.h	726;"	d
E1000_82542_XOFFTXC	drivers/e1000-5.x/src/e1000_hw.h	875;"	d
E1000_82542_XOFFTXC	drivers/e1000-7.x/src/e1000_hw.h	1212;"	d
E1000_82542_XONRXC	drivers/e1000-4.x/src/e1000_hw.h	723;"	d
E1000_82542_XONRXC	drivers/e1000-5.x/src/e1000_hw.h	872;"	d
E1000_82542_XONRXC	drivers/e1000-7.x/src/e1000_hw.h	1209;"	d
E1000_82542_XONTXC	drivers/e1000-4.x/src/e1000_hw.h	724;"	d
E1000_82542_XONTXC	drivers/e1000-5.x/src/e1000_hw.h	873;"	d
E1000_82542_XONTXC	drivers/e1000-7.x/src/e1000_hw.h	1210;"	d
E1000_82547_PAD_LEN	drivers/e1000-5.x/src/e1000_main.c	1958;"	d	file:
E1000_82547_PAD_LEN	drivers/e1000-7.x/src/e1000_main.c	3325;"	d	file:
E1000_AIT	drivers/e1000-4.x/src/e1000_hw.h	554;"	d
E1000_AIT	drivers/e1000-5.x/src/e1000_hw.h	690;"	d
E1000_AIT	drivers/e1000-7.x/src/e1000_hw.h	919;"	d
E1000_ALGNERRC	drivers/e1000-4.x/src/e1000_hw.h	579;"	d
E1000_ALGNERRC	drivers/e1000-5.x/src/e1000_hw.h	721;"	d
E1000_ALGNERRC	drivers/e1000-7.x/src/e1000_hw.h	982;"	d
E1000_BIG_ENDIAN	drivers/e1000-7.x/src/e1000_osdep.h	81;"	d
E1000_BLK_PHY_RESET	drivers/e1000-7.x/src/e1000_hw.h	294;"	d
E1000_BPRC	drivers/e1000-4.x/src/e1000_hw.h	605;"	d
E1000_BPRC	drivers/e1000-5.x/src/e1000_hw.h	747;"	d
E1000_BPRC	drivers/e1000-7.x/src/e1000_hw.h	1008;"	d
E1000_BPTC	drivers/e1000-4.x/src/e1000_hw.h	633;"	d
E1000_BPTC	drivers/e1000-5.x/src/e1000_hw.h	775;"	d
E1000_BPTC	drivers/e1000-7.x/src/e1000_hw.h	1036;"	d
E1000_BYTE_SWAP_WORD	drivers/e1000-7.x/src/e1000_hw.h	297;"	d
E1000_CEXTERR	drivers/e1000-4.x/src/e1000_hw.h	591;"	d
E1000_CEXTERR	drivers/e1000-5.x/src/e1000_hw.h	733;"	d
E1000_CEXTERR	drivers/e1000-7.x/src/e1000_hw.h	994;"	d
E1000_COLC	drivers/e1000-4.x/src/e1000_hw.h	587;"	d
E1000_COLC	drivers/e1000-5.x/src/e1000_hw.h	729;"	d
E1000_COLC	drivers/e1000-7.x/src/e1000_hw.h	990;"	d
E1000_COLD_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1368;"	d
E1000_COLD_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1589;"	d
E1000_COLD_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2376;"	d
E1000_COLLISION_DISTANCE	drivers/e1000-4.x/src/e1000_hw.h	1364;"	d
E1000_COLLISION_DISTANCE	drivers/e1000-5.x/src/e1000_hw.h	1586;"	d
E1000_COLLISION_DISTANCE	drivers/e1000-7.x/src/e1000_hw.h	2372;"	d
E1000_COLLISION_DISTANCE_82542	drivers/e1000-7.x/src/e1000_hw.h	2373;"	d
E1000_COLLISION_THRESHOLD	drivers/e1000-4.x/src/e1000_hw.h	1362;"	d
E1000_COLLISION_THRESHOLD	drivers/e1000-5.x/src/e1000_hw.h	1584;"	d
E1000_COLLISION_THRESHOLD	drivers/e1000-7.x/src/e1000_hw.h	2368;"	d
E1000_CONTEXT_DESC	drivers/e1000-4.x/src/e1000.h	159;"	d
E1000_CONTEXT_DESC	drivers/e1000-5.x/src/e1000.h	200;"	d
E1000_CONTEXT_DESC	drivers/e1000-7.x/src/e1000.h	243;"	d
E1000_CPUVEC	drivers/e1000-7.x/src/e1000_hw.h	1085;"	d
E1000_CRCERRS	drivers/e1000-4.x/src/e1000_hw.h	578;"	d
E1000_CRCERRS	drivers/e1000-5.x/src/e1000_hw.h	720;"	d
E1000_CRCERRS	drivers/e1000-7.x/src/e1000_hw.h	981;"	d
E1000_CRTL_EXT_PB_PAREN	drivers/e1000-7.x/src/e1000_hw.h	1643;"	d
E1000_CTRL	drivers/e1000-4.x/src/e1000_hw.h	532;"	d
E1000_CTRL	drivers/e1000-5.x/src/e1000_hw.h	666;"	d
E1000_CTRL	drivers/e1000-7.x/src/e1000_hw.h	885;"	d
E1000_CTRL_ADVD3WUC	drivers/e1000-4.x/src/e1000_main.c	2484;"	d	file:
E1000_CTRL_ADVD3WUC	drivers/e1000-5.x/src/e1000_main.c	3205;"	d	file:
E1000_CTRL_ADVD3WUC	drivers/e1000-7.x/src/e1000_main.c	5369;"	d	file:
E1000_CTRL_ASDE	drivers/e1000-4.x/src/e1000_hw.h	912;"	d
E1000_CTRL_ASDE	drivers/e1000-5.x/src/e1000_hw.h	1078;"	d
E1000_CTRL_ASDE	drivers/e1000-7.x/src/e1000_hw.h	1489;"	d
E1000_CTRL_BEM	drivers/e1000-4.x/src/e1000_hw.h	907;"	d
E1000_CTRL_BEM	drivers/e1000-5.x/src/e1000_hw.h	1073;"	d
E1000_CTRL_BEM	drivers/e1000-7.x/src/e1000_hw.h	1483;"	d
E1000_CTRL_BEM32	drivers/e1000-4.x/src/e1000_hw.h	919;"	d
E1000_CTRL_BEM32	drivers/e1000-5.x/src/e1000_hw.h	1085;"	d
E1000_CTRL_BEM32	drivers/e1000-7.x/src/e1000_hw.h	1496;"	d
E1000_CTRL_DUP	drivers/e1000-5.x/src/e1000_hw.h	667;"	d
E1000_CTRL_DUP	drivers/e1000-7.x/src/e1000_hw.h	886;"	d
E1000_CTRL_D_UD_EN	drivers/e1000-7.x/src/e1000_hw.h	1499;"	d
E1000_CTRL_D_UD_POLARITY	drivers/e1000-7.x/src/e1000_hw.h	1500;"	d
E1000_CTRL_EN_PHY_PWR_MGMT	drivers/e1000-5.x/src/e1000_main.c	3207;"	d	file:
E1000_CTRL_EN_PHY_PWR_MGMT	drivers/e1000-7.x/src/e1000_main.c	5371;"	d	file:
E1000_CTRL_EXT	drivers/e1000-4.x/src/e1000_hw.h	536;"	d
E1000_CTRL_EXT	drivers/e1000-5.x/src/e1000_hw.h	671;"	d
E1000_CTRL_EXT	drivers/e1000-7.x/src/e1000_hw.h	890;"	d
E1000_CTRL_EXT_ASDCHK	drivers/e1000-4.x/src/e1000_hw.h	998;"	d
E1000_CTRL_EXT_ASDCHK	drivers/e1000-5.x/src/e1000_hw.h	1177;"	d
E1000_CTRL_EXT_ASDCHK	drivers/e1000-7.x/src/e1000_hw.h	1624;"	d
E1000_CTRL_EXT_DF_PAREN	drivers/e1000-7.x/src/e1000_hw.h	1644;"	d
E1000_CTRL_EXT_DRV_LOAD	drivers/e1000-7.x/src/e1000_hw.h	1640;"	d
E1000_CTRL_EXT_EE_RST	drivers/e1000-4.x/src/e1000_hw.h	999;"	d
E1000_CTRL_EXT_EE_RST	drivers/e1000-5.x/src/e1000_hw.h	1178;"	d
E1000_CTRL_EXT_EE_RST	drivers/e1000-7.x/src/e1000_hw.h	1625;"	d
E1000_CTRL_EXT_GHOST_PAREN	drivers/e1000-7.x/src/e1000_hw.h	1645;"	d
E1000_CTRL_EXT_GPI0_EN	drivers/e1000-4.x/src/e1000_hw.h	984;"	d
E1000_CTRL_EXT_GPI0_EN	drivers/e1000-5.x/src/e1000_hw.h	1163;"	d
E1000_CTRL_EXT_GPI0_EN	drivers/e1000-7.x/src/e1000_hw.h	1610;"	d
E1000_CTRL_EXT_GPI1_EN	drivers/e1000-4.x/src/e1000_hw.h	985;"	d
E1000_CTRL_EXT_GPI1_EN	drivers/e1000-5.x/src/e1000_hw.h	1164;"	d
E1000_CTRL_EXT_GPI1_EN	drivers/e1000-7.x/src/e1000_hw.h	1611;"	d
E1000_CTRL_EXT_GPI2_EN	drivers/e1000-4.x/src/e1000_hw.h	987;"	d
E1000_CTRL_EXT_GPI2_EN	drivers/e1000-5.x/src/e1000_hw.h	1166;"	d
E1000_CTRL_EXT_GPI2_EN	drivers/e1000-7.x/src/e1000_hw.h	1613;"	d
E1000_CTRL_EXT_GPI3_EN	drivers/e1000-4.x/src/e1000_hw.h	988;"	d
E1000_CTRL_EXT_GPI3_EN	drivers/e1000-5.x/src/e1000_hw.h	1167;"	d
E1000_CTRL_EXT_GPI3_EN	drivers/e1000-7.x/src/e1000_hw.h	1614;"	d
E1000_CTRL_EXT_IAME	drivers/e1000-7.x/src/e1000_hw.h	1641;"	d
E1000_CTRL_EXT_INT_TIMER_CLR	drivers/e1000-7.x/src/e1000_hw.h	1642;"	d
E1000_CTRL_EXT_IPS	drivers/e1000-4.x/src/e1000_hw.h	1000;"	d
E1000_CTRL_EXT_IPS	drivers/e1000-5.x/src/e1000_hw.h	1179;"	d
E1000_CTRL_EXT_IPS	drivers/e1000-7.x/src/e1000_hw.h	1626;"	d
E1000_CTRL_EXT_LINK_EN	drivers/e1000-7.x/src/e1000_hw.h	1502;"	d
E1000_CTRL_EXT_LINK_MODE_GMII	drivers/e1000-4.x/src/e1000_hw.h	1003;"	d
E1000_CTRL_EXT_LINK_MODE_GMII	drivers/e1000-5.x/src/e1000_hw.h	1182;"	d
E1000_CTRL_EXT_LINK_MODE_GMII	drivers/e1000-7.x/src/e1000_hw.h	1630;"	d
E1000_CTRL_EXT_LINK_MODE_KMRN	drivers/e1000-7.x/src/e1000_hw.h	1632;"	d
E1000_CTRL_EXT_LINK_MODE_MASK	drivers/e1000-4.x/src/e1000_hw.h	1002;"	d
E1000_CTRL_EXT_LINK_MODE_MASK	drivers/e1000-5.x/src/e1000_hw.h	1181;"	d
E1000_CTRL_EXT_LINK_MODE_MASK	drivers/e1000-7.x/src/e1000_hw.h	1629;"	d
E1000_CTRL_EXT_LINK_MODE_SERDES	drivers/e1000-7.x/src/e1000_hw.h	1633;"	d
E1000_CTRL_EXT_LINK_MODE_SGMII	drivers/e1000-7.x/src/e1000_hw.h	1634;"	d
E1000_CTRL_EXT_LINK_MODE_TBI	drivers/e1000-4.x/src/e1000_hw.h	1004;"	d
E1000_CTRL_EXT_LINK_MODE_TBI	drivers/e1000-5.x/src/e1000_hw.h	1183;"	d
E1000_CTRL_EXT_LINK_MODE_TBI	drivers/e1000-7.x/src/e1000_hw.h	1631;"	d
E1000_CTRL_EXT_PHYINT_EN	drivers/e1000-4.x/src/e1000_hw.h	986;"	d
E1000_CTRL_EXT_PHYINT_EN	drivers/e1000-5.x/src/e1000_hw.h	1165;"	d
E1000_CTRL_EXT_PHYINT_EN	drivers/e1000-7.x/src/e1000_hw.h	1612;"	d
E1000_CTRL_EXT_PHY_INT	drivers/e1000-4.x/src/e1000_hw.h	991;"	d
E1000_CTRL_EXT_PHY_INT	drivers/e1000-5.x/src/e1000_hw.h	1170;"	d
E1000_CTRL_EXT_PHY_INT	drivers/e1000-7.x/src/e1000_hw.h	1617;"	d
E1000_CTRL_EXT_RO_DIS	drivers/e1000-7.x/src/e1000_hw.h	1628;"	d
E1000_CTRL_EXT_SDP4_DATA	drivers/e1000-4.x/src/e1000_hw.h	989;"	d
E1000_CTRL_EXT_SDP4_DATA	drivers/e1000-5.x/src/e1000_hw.h	1168;"	d
E1000_CTRL_EXT_SDP4_DATA	drivers/e1000-7.x/src/e1000_hw.h	1615;"	d
E1000_CTRL_EXT_SDP4_DIR	drivers/e1000-4.x/src/e1000_hw.h	994;"	d
E1000_CTRL_EXT_SDP4_DIR	drivers/e1000-5.x/src/e1000_hw.h	1173;"	d
E1000_CTRL_EXT_SDP4_DIR	drivers/e1000-7.x/src/e1000_hw.h	1620;"	d
E1000_CTRL_EXT_SDP5_DATA	drivers/e1000-4.x/src/e1000_hw.h	990;"	d
E1000_CTRL_EXT_SDP5_DATA	drivers/e1000-5.x/src/e1000_hw.h	1169;"	d
E1000_CTRL_EXT_SDP5_DATA	drivers/e1000-7.x/src/e1000_hw.h	1616;"	d
E1000_CTRL_EXT_SDP5_DIR	drivers/e1000-4.x/src/e1000_hw.h	995;"	d
E1000_CTRL_EXT_SDP5_DIR	drivers/e1000-5.x/src/e1000_hw.h	1174;"	d
E1000_CTRL_EXT_SDP5_DIR	drivers/e1000-7.x/src/e1000_hw.h	1621;"	d
E1000_CTRL_EXT_SDP6_DATA	drivers/e1000-4.x/src/e1000_hw.h	992;"	d
E1000_CTRL_EXT_SDP6_DATA	drivers/e1000-5.x/src/e1000_hw.h	1171;"	d
E1000_CTRL_EXT_SDP6_DATA	drivers/e1000-7.x/src/e1000_hw.h	1618;"	d
E1000_CTRL_EXT_SDP6_DIR	drivers/e1000-4.x/src/e1000_hw.h	996;"	d
E1000_CTRL_EXT_SDP6_DIR	drivers/e1000-5.x/src/e1000_hw.h	1175;"	d
E1000_CTRL_EXT_SDP6_DIR	drivers/e1000-7.x/src/e1000_hw.h	1622;"	d
E1000_CTRL_EXT_SDP7_DATA	drivers/e1000-4.x/src/e1000_hw.h	993;"	d
E1000_CTRL_EXT_SDP7_DATA	drivers/e1000-5.x/src/e1000_hw.h	1172;"	d
E1000_CTRL_EXT_SDP7_DATA	drivers/e1000-7.x/src/e1000_hw.h	1619;"	d
E1000_CTRL_EXT_SDP7_DIR	drivers/e1000-4.x/src/e1000_hw.h	997;"	d
E1000_CTRL_EXT_SDP7_DIR	drivers/e1000-5.x/src/e1000_hw.h	1176;"	d
E1000_CTRL_EXT_SDP7_DIR	drivers/e1000-7.x/src/e1000_hw.h	1623;"	d
E1000_CTRL_EXT_SPD_BYPS	drivers/e1000-4.x/src/e1000_hw.h	1001;"	d
E1000_CTRL_EXT_SPD_BYPS	drivers/e1000-5.x/src/e1000_hw.h	1180;"	d
E1000_CTRL_EXT_SPD_BYPS	drivers/e1000-7.x/src/e1000_hw.h	1627;"	d
E1000_CTRL_EXT_WR_WMARK_256	drivers/e1000-4.x/src/e1000_hw.h	1006;"	d
E1000_CTRL_EXT_WR_WMARK_256	drivers/e1000-5.x/src/e1000_hw.h	1185;"	d
E1000_CTRL_EXT_WR_WMARK_256	drivers/e1000-7.x/src/e1000_hw.h	1636;"	d
E1000_CTRL_EXT_WR_WMARK_320	drivers/e1000-4.x/src/e1000_hw.h	1007;"	d
E1000_CTRL_EXT_WR_WMARK_320	drivers/e1000-5.x/src/e1000_hw.h	1186;"	d
E1000_CTRL_EXT_WR_WMARK_320	drivers/e1000-7.x/src/e1000_hw.h	1637;"	d
E1000_CTRL_EXT_WR_WMARK_384	drivers/e1000-4.x/src/e1000_hw.h	1008;"	d
E1000_CTRL_EXT_WR_WMARK_384	drivers/e1000-5.x/src/e1000_hw.h	1187;"	d
E1000_CTRL_EXT_WR_WMARK_384	drivers/e1000-7.x/src/e1000_hw.h	1638;"	d
E1000_CTRL_EXT_WR_WMARK_448	drivers/e1000-4.x/src/e1000_hw.h	1009;"	d
E1000_CTRL_EXT_WR_WMARK_448	drivers/e1000-5.x/src/e1000_hw.h	1188;"	d
E1000_CTRL_EXT_WR_WMARK_448	drivers/e1000-7.x/src/e1000_hw.h	1639;"	d
E1000_CTRL_EXT_WR_WMARK_MASK	drivers/e1000-4.x/src/e1000_hw.h	1005;"	d
E1000_CTRL_EXT_WR_WMARK_MASK	drivers/e1000-5.x/src/e1000_hw.h	1184;"	d
E1000_CTRL_EXT_WR_WMARK_MASK	drivers/e1000-7.x/src/e1000_hw.h	1635;"	d
E1000_CTRL_FD	drivers/e1000-4.x/src/e1000_hw.h	906;"	d
E1000_CTRL_FD	drivers/e1000-5.x/src/e1000_hw.h	1072;"	d
E1000_CTRL_FD	drivers/e1000-7.x/src/e1000_hw.h	1482;"	d
E1000_CTRL_FORCE_PHY_RESET	drivers/e1000-7.x/src/e1000_hw.h	1501;"	d
E1000_CTRL_FRCDPX	drivers/e1000-4.x/src/e1000_hw.h	921;"	d
E1000_CTRL_FRCDPX	drivers/e1000-5.x/src/e1000_hw.h	1087;"	d
E1000_CTRL_FRCDPX	drivers/e1000-7.x/src/e1000_hw.h	1498;"	d
E1000_CTRL_FRCSPD	drivers/e1000-4.x/src/e1000_hw.h	920;"	d
E1000_CTRL_FRCSPD	drivers/e1000-5.x/src/e1000_hw.h	1086;"	d
E1000_CTRL_FRCSPD	drivers/e1000-7.x/src/e1000_hw.h	1497;"	d
E1000_CTRL_GIO_MASTER_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	1485;"	d
E1000_CTRL_ILOS	drivers/e1000-4.x/src/e1000_hw.h	914;"	d
E1000_CTRL_ILOS	drivers/e1000-5.x/src/e1000_hw.h	1080;"	d
E1000_CTRL_ILOS	drivers/e1000-7.x/src/e1000_hw.h	1491;"	d
E1000_CTRL_LRST	drivers/e1000-4.x/src/e1000_hw.h	909;"	d
E1000_CTRL_LRST	drivers/e1000-5.x/src/e1000_hw.h	1075;"	d
E1000_CTRL_LRST	drivers/e1000-7.x/src/e1000_hw.h	1486;"	d
E1000_CTRL_MDC	drivers/e1000-4.x/src/e1000_hw.h	1519;"	d
E1000_CTRL_MDC	drivers/e1000-5.x/src/e1000_hw.h	1737;"	d
E1000_CTRL_MDC	drivers/e1000-7.x/src/e1000_hw.h	2557;"	d
E1000_CTRL_MDC_DIR	drivers/e1000-4.x/src/e1000_hw.h	1518;"	d
E1000_CTRL_MDC_DIR	drivers/e1000-5.x/src/e1000_hw.h	1736;"	d
E1000_CTRL_MDC_DIR	drivers/e1000-7.x/src/e1000_hw.h	2556;"	d
E1000_CTRL_MDIO	drivers/e1000-4.x/src/e1000_hw.h	1517;"	d
E1000_CTRL_MDIO	drivers/e1000-5.x/src/e1000_hw.h	1735;"	d
E1000_CTRL_MDIO	drivers/e1000-7.x/src/e1000_hw.h	2555;"	d
E1000_CTRL_MDIO_DIR	drivers/e1000-4.x/src/e1000_hw.h	1516;"	d
E1000_CTRL_MDIO_DIR	drivers/e1000-5.x/src/e1000_hw.h	1734;"	d
E1000_CTRL_MDIO_DIR	drivers/e1000-7.x/src/e1000_hw.h	2554;"	d
E1000_CTRL_PHY_RESET	drivers/e1000-4.x/src/e1000_hw.h	1515;"	d
E1000_CTRL_PHY_RESET	drivers/e1000-5.x/src/e1000_hw.h	1733;"	d
E1000_CTRL_PHY_RESET	drivers/e1000-7.x/src/e1000_hw.h	2553;"	d
E1000_CTRL_PHY_RESET4	drivers/e1000-4.x/src/e1000_hw.h	1521;"	d
E1000_CTRL_PHY_RESET4	drivers/e1000-5.x/src/e1000_hw.h	1739;"	d
E1000_CTRL_PHY_RESET4	drivers/e1000-7.x/src/e1000_hw.h	2559;"	d
E1000_CTRL_PHY_RESET_DIR	drivers/e1000-4.x/src/e1000_hw.h	1514;"	d
E1000_CTRL_PHY_RESET_DIR	drivers/e1000-5.x/src/e1000_hw.h	1732;"	d
E1000_CTRL_PHY_RESET_DIR	drivers/e1000-7.x/src/e1000_hw.h	2552;"	d
E1000_CTRL_PHY_RESET_DIR4	drivers/e1000-4.x/src/e1000_hw.h	1520;"	d
E1000_CTRL_PHY_RESET_DIR4	drivers/e1000-5.x/src/e1000_hw.h	1738;"	d
E1000_CTRL_PHY_RESET_DIR4	drivers/e1000-7.x/src/e1000_hw.h	2558;"	d
E1000_CTRL_PHY_RST	drivers/e1000-4.x/src/e1000_hw.h	935;"	d
E1000_CTRL_PHY_RST	drivers/e1000-5.x/src/e1000_hw.h	1101;"	d
E1000_CTRL_PHY_RST	drivers/e1000-7.x/src/e1000_hw.h	1516;"	d
E1000_CTRL_PRIOR	drivers/e1000-4.x/src/e1000_hw.h	908;"	d
E1000_CTRL_PRIOR	drivers/e1000-5.x/src/e1000_hw.h	1074;"	d
E1000_CTRL_PRIOR	drivers/e1000-7.x/src/e1000_hw.h	1484;"	d
E1000_CTRL_RFCE	drivers/e1000-4.x/src/e1000_hw.h	931;"	d
E1000_CTRL_RFCE	drivers/e1000-5.x/src/e1000_hw.h	1097;"	d
E1000_CTRL_RFCE	drivers/e1000-7.x/src/e1000_hw.h	1512;"	d
E1000_CTRL_RST	drivers/e1000-4.x/src/e1000_hw.h	930;"	d
E1000_CTRL_RST	drivers/e1000-5.x/src/e1000_hw.h	1096;"	d
E1000_CTRL_RST	drivers/e1000-7.x/src/e1000_hw.h	1511;"	d
E1000_CTRL_RTE	drivers/e1000-4.x/src/e1000_hw.h	933;"	d
E1000_CTRL_RTE	drivers/e1000-5.x/src/e1000_hw.h	1099;"	d
E1000_CTRL_RTE	drivers/e1000-7.x/src/e1000_hw.h	1514;"	d
E1000_CTRL_SLE	drivers/e1000-4.x/src/e1000_hw.h	911;"	d
E1000_CTRL_SLE	drivers/e1000-5.x/src/e1000_hw.h	1077;"	d
E1000_CTRL_SLE	drivers/e1000-7.x/src/e1000_hw.h	1488;"	d
E1000_CTRL_SLU	drivers/e1000-4.x/src/e1000_hw.h	913;"	d
E1000_CTRL_SLU	drivers/e1000-5.x/src/e1000_hw.h	1079;"	d
E1000_CTRL_SLU	drivers/e1000-7.x/src/e1000_hw.h	1490;"	d
E1000_CTRL_SPD_10	drivers/e1000-4.x/src/e1000_hw.h	916;"	d
E1000_CTRL_SPD_10	drivers/e1000-5.x/src/e1000_hw.h	1082;"	d
E1000_CTRL_SPD_10	drivers/e1000-7.x/src/e1000_hw.h	1493;"	d
E1000_CTRL_SPD_100	drivers/e1000-4.x/src/e1000_hw.h	917;"	d
E1000_CTRL_SPD_100	drivers/e1000-5.x/src/e1000_hw.h	1083;"	d
E1000_CTRL_SPD_100	drivers/e1000-7.x/src/e1000_hw.h	1494;"	d
E1000_CTRL_SPD_1000	drivers/e1000-4.x/src/e1000_hw.h	918;"	d
E1000_CTRL_SPD_1000	drivers/e1000-5.x/src/e1000_hw.h	1084;"	d
E1000_CTRL_SPD_1000	drivers/e1000-7.x/src/e1000_hw.h	1495;"	d
E1000_CTRL_SPD_SEL	drivers/e1000-4.x/src/e1000_hw.h	915;"	d
E1000_CTRL_SPD_SEL	drivers/e1000-5.x/src/e1000_hw.h	1081;"	d
E1000_CTRL_SPD_SEL	drivers/e1000-7.x/src/e1000_hw.h	1492;"	d
E1000_CTRL_SW2FW_INT	drivers/e1000-7.x/src/e1000_hw.h	1517;"	d
E1000_CTRL_SWDPIN0	drivers/e1000-4.x/src/e1000_hw.h	922;"	d
E1000_CTRL_SWDPIN0	drivers/e1000-5.x/src/e1000_hw.h	1088;"	d
E1000_CTRL_SWDPIN0	drivers/e1000-7.x/src/e1000_hw.h	1503;"	d
E1000_CTRL_SWDPIN1	drivers/e1000-4.x/src/e1000_hw.h	923;"	d
E1000_CTRL_SWDPIN1	drivers/e1000-5.x/src/e1000_hw.h	1089;"	d
E1000_CTRL_SWDPIN1	drivers/e1000-7.x/src/e1000_hw.h	1504;"	d
E1000_CTRL_SWDPIN2	drivers/e1000-4.x/src/e1000_hw.h	924;"	d
E1000_CTRL_SWDPIN2	drivers/e1000-5.x/src/e1000_hw.h	1090;"	d
E1000_CTRL_SWDPIN2	drivers/e1000-7.x/src/e1000_hw.h	1505;"	d
E1000_CTRL_SWDPIN3	drivers/e1000-4.x/src/e1000_hw.h	925;"	d
E1000_CTRL_SWDPIN3	drivers/e1000-5.x/src/e1000_hw.h	1091;"	d
E1000_CTRL_SWDPIN3	drivers/e1000-7.x/src/e1000_hw.h	1506;"	d
E1000_CTRL_SWDPIO0	drivers/e1000-4.x/src/e1000_hw.h	926;"	d
E1000_CTRL_SWDPIO0	drivers/e1000-5.x/src/e1000_hw.h	1092;"	d
E1000_CTRL_SWDPIO0	drivers/e1000-7.x/src/e1000_hw.h	1507;"	d
E1000_CTRL_SWDPIO1	drivers/e1000-4.x/src/e1000_hw.h	927;"	d
E1000_CTRL_SWDPIO1	drivers/e1000-5.x/src/e1000_hw.h	1093;"	d
E1000_CTRL_SWDPIO1	drivers/e1000-7.x/src/e1000_hw.h	1508;"	d
E1000_CTRL_SWDPIO2	drivers/e1000-4.x/src/e1000_hw.h	928;"	d
E1000_CTRL_SWDPIO2	drivers/e1000-5.x/src/e1000_hw.h	1094;"	d
E1000_CTRL_SWDPIO2	drivers/e1000-7.x/src/e1000_hw.h	1509;"	d
E1000_CTRL_SWDPIO3	drivers/e1000-4.x/src/e1000_hw.h	929;"	d
E1000_CTRL_SWDPIO3	drivers/e1000-5.x/src/e1000_hw.h	1095;"	d
E1000_CTRL_SWDPIO3	drivers/e1000-7.x/src/e1000_hw.h	1510;"	d
E1000_CTRL_TFCE	drivers/e1000-4.x/src/e1000_hw.h	932;"	d
E1000_CTRL_TFCE	drivers/e1000-5.x/src/e1000_hw.h	1098;"	d
E1000_CTRL_TFCE	drivers/e1000-7.x/src/e1000_hw.h	1513;"	d
E1000_CTRL_TME	drivers/e1000-4.x/src/e1000_hw.h	910;"	d
E1000_CTRL_TME	drivers/e1000-5.x/src/e1000_hw.h	1076;"	d
E1000_CTRL_TME	drivers/e1000-7.x/src/e1000_hw.h	1487;"	d
E1000_CTRL_VME	drivers/e1000-4.x/src/e1000_hw.h	934;"	d
E1000_CTRL_VME	drivers/e1000-5.x/src/e1000_hw.h	1100;"	d
E1000_CTRL_VME	drivers/e1000-7.x/src/e1000_hw.h	1515;"	d
E1000_CT_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1363;"	d
E1000_CT_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1585;"	d
E1000_CT_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2369;"	d
E1000_DBG	drivers/e1000-4.x/src/e1000.h	97;"	d
E1000_DBG	drivers/e1000-4.x/src/e1000.h	99;"	d
E1000_DBG	drivers/e1000-5.x/src/e1000.h	96;"	d
E1000_DBG	drivers/e1000-5.x/src/e1000.h	98;"	d
E1000_DBG	drivers/e1000-7.x/src/e1000.h	95;"	d
E1000_DC	drivers/e1000-4.x/src/e1000_hw.h	588;"	d
E1000_DC	drivers/e1000-5.x/src/e1000_hw.h	730;"	d
E1000_DC	drivers/e1000-7.x/src/e1000_hw.h	991;"	d
E1000_DEFAULT_PBA	drivers/e1000-4.x/src/e1000.h	118;"	d
E1000_DEFAULT_RXD	drivers/e1000-5.x/src/e1000.h	117;"	d
E1000_DEFAULT_RXD	drivers/e1000-7.x/src/e1000.h	113;"	d
E1000_DEFAULT_TXD	drivers/e1000-5.x/src/e1000.h	112;"	d
E1000_DEFAULT_TXD	drivers/e1000-7.x/src/e1000.h	108;"	d
E1000_DESC_UNUSED	drivers/e1000-4.x/src/e1000.h	151;"	d
E1000_DESC_UNUSED	drivers/e1000-5.x/src/e1000.h	187;"	d
E1000_DESC_UNUSED	drivers/e1000-7.x/src/e1000.h	232;"	d
E1000_DEV_ID_80003ES2LAN_COPPER_DPT	drivers/e1000-7.x/src/e1000_hw.h	486;"	d
E1000_DEV_ID_80003ES2LAN_COPPER_SPT	drivers/e1000-7.x/src/e1000_hw.h	488;"	d
E1000_DEV_ID_80003ES2LAN_SERDES_DPT	drivers/e1000-7.x/src/e1000_hw.h	487;"	d
E1000_DEV_ID_80003ES2LAN_SERDES_SPT	drivers/e1000-7.x/src/e1000_hw.h	489;"	d
E1000_DEV_ID_82540EM	drivers/e1000-4.x/src/e1000_hw.h	247;"	d
E1000_DEV_ID_82540EM	drivers/e1000-5.x/src/e1000_hw.h	358;"	d
E1000_DEV_ID_82540EM	drivers/e1000-7.x/src/e1000_hw.h	445;"	d
E1000_DEV_ID_82540EM_LOM	drivers/e1000-4.x/src/e1000_hw.h	248;"	d
E1000_DEV_ID_82540EM_LOM	drivers/e1000-5.x/src/e1000_hw.h	359;"	d
E1000_DEV_ID_82540EM_LOM	drivers/e1000-7.x/src/e1000_hw.h	446;"	d
E1000_DEV_ID_82540EP	drivers/e1000-5.x/src/e1000_hw.h	361;"	d
E1000_DEV_ID_82540EP	drivers/e1000-7.x/src/e1000_hw.h	448;"	d
E1000_DEV_ID_82540EP_LOM	drivers/e1000-5.x/src/e1000_hw.h	360;"	d
E1000_DEV_ID_82540EP_LOM	drivers/e1000-7.x/src/e1000_hw.h	447;"	d
E1000_DEV_ID_82540EP_LP	drivers/e1000-5.x/src/e1000_hw.h	362;"	d
E1000_DEV_ID_82540EP_LP	drivers/e1000-7.x/src/e1000_hw.h	449;"	d
E1000_DEV_ID_82541EI	drivers/e1000-5.x/src/e1000_hw.h	371;"	d
E1000_DEV_ID_82541EI	drivers/e1000-7.x/src/e1000_hw.h	458;"	d
E1000_DEV_ID_82541EI_MOBILE	drivers/e1000-5.x/src/e1000_hw.h	372;"	d
E1000_DEV_ID_82541EI_MOBILE	drivers/e1000-7.x/src/e1000_hw.h	459;"	d
E1000_DEV_ID_82541ER	drivers/e1000-5.x/src/e1000_hw.h	373;"	d
E1000_DEV_ID_82541ER	drivers/e1000-7.x/src/e1000_hw.h	461;"	d
E1000_DEV_ID_82541ER_LOM	drivers/e1000-7.x/src/e1000_hw.h	460;"	d
E1000_DEV_ID_82541GI	drivers/e1000-5.x/src/e1000_hw.h	375;"	d
E1000_DEV_ID_82541GI	drivers/e1000-7.x/src/e1000_hw.h	463;"	d
E1000_DEV_ID_82541GI_LF	drivers/e1000-5.x/src/e1000_hw.h	377;"	d
E1000_DEV_ID_82541GI_LF	drivers/e1000-7.x/src/e1000_hw.h	465;"	d
E1000_DEV_ID_82541GI_MOBILE	drivers/e1000-5.x/src/e1000_hw.h	376;"	d
E1000_DEV_ID_82541GI_MOBILE	drivers/e1000-7.x/src/e1000_hw.h	464;"	d
E1000_DEV_ID_82542	drivers/e1000-4.x/src/e1000_hw.h	240;"	d
E1000_DEV_ID_82542	drivers/e1000-5.x/src/e1000_hw.h	351;"	d
E1000_DEV_ID_82542	drivers/e1000-7.x/src/e1000_hw.h	438;"	d
E1000_DEV_ID_82543GC_COPPER	drivers/e1000-4.x/src/e1000_hw.h	242;"	d
E1000_DEV_ID_82543GC_COPPER	drivers/e1000-5.x/src/e1000_hw.h	353;"	d
E1000_DEV_ID_82543GC_COPPER	drivers/e1000-7.x/src/e1000_hw.h	440;"	d
E1000_DEV_ID_82543GC_FIBER	drivers/e1000-4.x/src/e1000_hw.h	241;"	d
E1000_DEV_ID_82543GC_FIBER	drivers/e1000-5.x/src/e1000_hw.h	352;"	d
E1000_DEV_ID_82543GC_FIBER	drivers/e1000-7.x/src/e1000_hw.h	439;"	d
E1000_DEV_ID_82544EI_COPPER	drivers/e1000-4.x/src/e1000_hw.h	243;"	d
E1000_DEV_ID_82544EI_COPPER	drivers/e1000-5.x/src/e1000_hw.h	354;"	d
E1000_DEV_ID_82544EI_COPPER	drivers/e1000-7.x/src/e1000_hw.h	441;"	d
E1000_DEV_ID_82544EI_FIBER	drivers/e1000-4.x/src/e1000_hw.h	244;"	d
E1000_DEV_ID_82544EI_FIBER	drivers/e1000-5.x/src/e1000_hw.h	355;"	d
E1000_DEV_ID_82544EI_FIBER	drivers/e1000-7.x/src/e1000_hw.h	442;"	d
E1000_DEV_ID_82544GC_COPPER	drivers/e1000-4.x/src/e1000_hw.h	245;"	d
E1000_DEV_ID_82544GC_COPPER	drivers/e1000-5.x/src/e1000_hw.h	356;"	d
E1000_DEV_ID_82544GC_COPPER	drivers/e1000-7.x/src/e1000_hw.h	443;"	d
E1000_DEV_ID_82544GC_LOM	drivers/e1000-4.x/src/e1000_hw.h	246;"	d
E1000_DEV_ID_82544GC_LOM	drivers/e1000-5.x/src/e1000_hw.h	357;"	d
E1000_DEV_ID_82544GC_LOM	drivers/e1000-7.x/src/e1000_hw.h	444;"	d
E1000_DEV_ID_82545EM_COPPER	drivers/e1000-4.x/src/e1000_hw.h	249;"	d
E1000_DEV_ID_82545EM_COPPER	drivers/e1000-5.x/src/e1000_hw.h	363;"	d
E1000_DEV_ID_82545EM_COPPER	drivers/e1000-7.x/src/e1000_hw.h	450;"	d
E1000_DEV_ID_82545EM_FIBER	drivers/e1000-4.x/src/e1000_hw.h	250;"	d
E1000_DEV_ID_82545EM_FIBER	drivers/e1000-5.x/src/e1000_hw.h	364;"	d
E1000_DEV_ID_82545EM_FIBER	drivers/e1000-7.x/src/e1000_hw.h	451;"	d
E1000_DEV_ID_82545GM_COPPER	drivers/e1000-5.x/src/e1000_hw.h	365;"	d
E1000_DEV_ID_82545GM_COPPER	drivers/e1000-7.x/src/e1000_hw.h	452;"	d
E1000_DEV_ID_82545GM_FIBER	drivers/e1000-5.x/src/e1000_hw.h	366;"	d
E1000_DEV_ID_82545GM_FIBER	drivers/e1000-7.x/src/e1000_hw.h	453;"	d
E1000_DEV_ID_82545GM_SERDES	drivers/e1000-5.x/src/e1000_hw.h	367;"	d
E1000_DEV_ID_82545GM_SERDES	drivers/e1000-7.x/src/e1000_hw.h	454;"	d
E1000_DEV_ID_82546EB_COPPER	drivers/e1000-4.x/src/e1000_hw.h	251;"	d
E1000_DEV_ID_82546EB_COPPER	drivers/e1000-5.x/src/e1000_hw.h	368;"	d
E1000_DEV_ID_82546EB_COPPER	drivers/e1000-7.x/src/e1000_hw.h	455;"	d
E1000_DEV_ID_82546EB_FIBER	drivers/e1000-4.x/src/e1000_hw.h	252;"	d
E1000_DEV_ID_82546EB_FIBER	drivers/e1000-5.x/src/e1000_hw.h	369;"	d
E1000_DEV_ID_82546EB_FIBER	drivers/e1000-7.x/src/e1000_hw.h	456;"	d
E1000_DEV_ID_82546EB_QUAD_COPPER	drivers/e1000-5.x/src/e1000_hw.h	370;"	d
E1000_DEV_ID_82546EB_QUAD_COPPER	drivers/e1000-7.x/src/e1000_hw.h	457;"	d
E1000_DEV_ID_82546GB_COPPER	drivers/e1000-5.x/src/e1000_hw.h	378;"	d
E1000_DEV_ID_82546GB_COPPER	drivers/e1000-7.x/src/e1000_hw.h	466;"	d
E1000_DEV_ID_82546GB_FIBER	drivers/e1000-5.x/src/e1000_hw.h	379;"	d
E1000_DEV_ID_82546GB_FIBER	drivers/e1000-7.x/src/e1000_hw.h	467;"	d
E1000_DEV_ID_82546GB_PCIE	drivers/e1000-5.x/src/e1000_hw.h	381;"	d
E1000_DEV_ID_82546GB_PCIE	drivers/e1000-7.x/src/e1000_hw.h	469;"	d
E1000_DEV_ID_82546GB_QUAD_COPPER	drivers/e1000-7.x/src/e1000_hw.h	470;"	d
E1000_DEV_ID_82546GB_QUAD_COPPER_KSP3	drivers/e1000-7.x/src/e1000_hw.h	485;"	d
E1000_DEV_ID_82546GB_SERDES	drivers/e1000-5.x/src/e1000_hw.h	380;"	d
E1000_DEV_ID_82546GB_SERDES	drivers/e1000-7.x/src/e1000_hw.h	468;"	d
E1000_DEV_ID_82547EI	drivers/e1000-5.x/src/e1000_hw.h	382;"	d
E1000_DEV_ID_82547EI	drivers/e1000-7.x/src/e1000_hw.h	471;"	d
E1000_DEV_ID_82547EI_MOBILE	drivers/e1000-7.x/src/e1000_hw.h	472;"	d
E1000_DEV_ID_82547GI	drivers/e1000-5.x/src/e1000_hw.h	374;"	d
E1000_DEV_ID_82547GI	drivers/e1000-7.x/src/e1000_hw.h	462;"	d
E1000_DEV_ID_82571EB_COPPER	drivers/e1000-7.x/src/e1000_hw.h	473;"	d
E1000_DEV_ID_82571EB_FIBER	drivers/e1000-7.x/src/e1000_hw.h	474;"	d
E1000_DEV_ID_82571EB_QUAD_COPPER	drivers/e1000-7.x/src/e1000_hw.h	476;"	d
E1000_DEV_ID_82571EB_QUAD_COPPER_LOWPROFILE	drivers/e1000-7.x/src/e1000_hw.h	477;"	d
E1000_DEV_ID_82571EB_SERDES	drivers/e1000-7.x/src/e1000_hw.h	475;"	d
E1000_DEV_ID_82572EI	drivers/e1000-7.x/src/e1000_hw.h	481;"	d
E1000_DEV_ID_82572EI_COPPER	drivers/e1000-7.x/src/e1000_hw.h	478;"	d
E1000_DEV_ID_82572EI_FIBER	drivers/e1000-7.x/src/e1000_hw.h	479;"	d
E1000_DEV_ID_82572EI_SERDES	drivers/e1000-7.x/src/e1000_hw.h	480;"	d
E1000_DEV_ID_82573E	drivers/e1000-7.x/src/e1000_hw.h	482;"	d
E1000_DEV_ID_82573E_IAMT	drivers/e1000-7.x/src/e1000_hw.h	483;"	d
E1000_DEV_ID_82573L	drivers/e1000-7.x/src/e1000_hw.h	484;"	d
E1000_DEV_ID_ICH8_IFE	drivers/e1000-7.x/src/e1000_hw.h	494;"	d
E1000_DEV_ID_ICH8_IFE_G	drivers/e1000-7.x/src/e1000_hw.h	496;"	d
E1000_DEV_ID_ICH8_IFE_GT	drivers/e1000-7.x/src/e1000_hw.h	495;"	d
E1000_DEV_ID_ICH8_IGP_AMT	drivers/e1000-7.x/src/e1000_hw.h	492;"	d
E1000_DEV_ID_ICH8_IGP_C	drivers/e1000-7.x/src/e1000_hw.h	493;"	d
E1000_DEV_ID_ICH8_IGP_M	drivers/e1000-7.x/src/e1000_hw.h	497;"	d
E1000_DEV_ID_ICH8_IGP_M_AMT	drivers/e1000-7.x/src/e1000_hw.h	491;"	d
E1000_DISABLE_SERDES_LOOPBACK	drivers/e1000-7.x/src/e1000_hw.h	871;"	d
E1000_ECOL	drivers/e1000-4.x/src/e1000_hw.h	584;"	d
E1000_ECOL	drivers/e1000-5.x/src/e1000_hw.h	726;"	d
E1000_ECOL	drivers/e1000-7.x/src/e1000_hw.h	987;"	d
E1000_EEARBC	drivers/e1000-7.x/src/e1000_hw.h	929;"	d
E1000_EECD	drivers/e1000-4.x/src/e1000_hw.h	534;"	d
E1000_EECD	drivers/e1000-5.x/src/e1000_hw.h	669;"	d
E1000_EECD	drivers/e1000-7.x/src/e1000_hw.h	888;"	d
E1000_EECD_ADDR_BITS	drivers/e1000-5.x/src/e1000_hw.h	1140;"	d
E1000_EECD_ADDR_BITS	drivers/e1000-7.x/src/e1000_hw.h	1570;"	d
E1000_EECD_AUPDEN	drivers/e1000-7.x/src/e1000_hw.h	1583;"	d
E1000_EECD_AUTO_RD	drivers/e1000-7.x/src/e1000_hw.h	1576;"	d
E1000_EECD_CS	drivers/e1000-4.x/src/e1000_hw.h	963;"	d
E1000_EECD_CS	drivers/e1000-5.x/src/e1000_hw.h	1129;"	d
E1000_EECD_CS	drivers/e1000-7.x/src/e1000_hw.h	1559;"	d
E1000_EECD_DI	drivers/e1000-4.x/src/e1000_hw.h	964;"	d
E1000_EECD_DI	drivers/e1000-5.x/src/e1000_hw.h	1130;"	d
E1000_EECD_DI	drivers/e1000-7.x/src/e1000_hw.h	1560;"	d
E1000_EECD_DO	drivers/e1000-4.x/src/e1000_hw.h	965;"	d
E1000_EECD_DO	drivers/e1000-5.x/src/e1000_hw.h	1131;"	d
E1000_EECD_DO	drivers/e1000-7.x/src/e1000_hw.h	1561;"	d
E1000_EECD_FLUPD	drivers/e1000-7.x/src/e1000_hw.h	1582;"	d
E1000_EECD_FWE_DIS	drivers/e1000-4.x/src/e1000_hw.h	967;"	d
E1000_EECD_FWE_DIS	drivers/e1000-5.x/src/e1000_hw.h	1133;"	d
E1000_EECD_FWE_DIS	drivers/e1000-7.x/src/e1000_hw.h	1563;"	d
E1000_EECD_FWE_EN	drivers/e1000-4.x/src/e1000_hw.h	968;"	d
E1000_EECD_FWE_EN	drivers/e1000-5.x/src/e1000_hw.h	1134;"	d
E1000_EECD_FWE_EN	drivers/e1000-7.x/src/e1000_hw.h	1564;"	d
E1000_EECD_FWE_MASK	drivers/e1000-4.x/src/e1000_hw.h	966;"	d
E1000_EECD_FWE_MASK	drivers/e1000-5.x/src/e1000_hw.h	1132;"	d
E1000_EECD_FWE_MASK	drivers/e1000-7.x/src/e1000_hw.h	1562;"	d
E1000_EECD_FWE_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	969;"	d
E1000_EECD_FWE_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1135;"	d
E1000_EECD_FWE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1565;"	d
E1000_EECD_GNT	drivers/e1000-4.x/src/e1000_hw.h	972;"	d
E1000_EECD_GNT	drivers/e1000-5.x/src/e1000_hw.h	1137;"	d
E1000_EECD_GNT	drivers/e1000-7.x/src/e1000_hw.h	1567;"	d
E1000_EECD_INITSRAM	drivers/e1000-7.x/src/e1000_hw.h	1581;"	d
E1000_EECD_NVADDS	drivers/e1000-7.x/src/e1000_hw.h	1579;"	d
E1000_EECD_PRES	drivers/e1000-4.x/src/e1000_hw.h	973;"	d
E1000_EECD_PRES	drivers/e1000-5.x/src/e1000_hw.h	1138;"	d
E1000_EECD_PRES	drivers/e1000-7.x/src/e1000_hw.h	1568;"	d
E1000_EECD_REQ	drivers/e1000-4.x/src/e1000_hw.h	971;"	d
E1000_EECD_REQ	drivers/e1000-5.x/src/e1000_hw.h	1136;"	d
E1000_EECD_REQ	drivers/e1000-7.x/src/e1000_hw.h	1566;"	d
E1000_EECD_SEC1VAL	drivers/e1000-7.x/src/e1000_hw.h	1585;"	d
E1000_EECD_SECVAL_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1586;"	d
E1000_EECD_SELSHAD	drivers/e1000-7.x/src/e1000_hw.h	1580;"	d
E1000_EECD_SHADV	drivers/e1000-7.x/src/e1000_hw.h	1584;"	d
E1000_EECD_SIZE	drivers/e1000-4.x/src/e1000_hw.h	970;"	d
E1000_EECD_SIZE	drivers/e1000-5.x/src/e1000_hw.h	1139;"	d
E1000_EECD_SIZE	drivers/e1000-7.x/src/e1000_hw.h	1569;"	d
E1000_EECD_SIZE_EX_MASK	drivers/e1000-7.x/src/e1000_hw.h	1577;"	d
E1000_EECD_SIZE_EX_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1578;"	d
E1000_EECD_SK	drivers/e1000-4.x/src/e1000_hw.h	962;"	d
E1000_EECD_SK	drivers/e1000-5.x/src/e1000_hw.h	1128;"	d
E1000_EECD_SK	drivers/e1000-7.x/src/e1000_hw.h	1558;"	d
E1000_EECD_TYPE	drivers/e1000-5.x/src/e1000_hw.h	1142;"	d
E1000_EECD_TYPE	drivers/e1000-7.x/src/e1000_hw.h	1572;"	d
E1000_EEMNGCTL	drivers/e1000-7.x/src/e1000_hw.h	927;"	d
E1000_EEPROM_82544_APM	drivers/e1000-5.x/src/e1000.h	149;"	d
E1000_EEPROM_82544_APM	drivers/e1000-7.x/src/e1000.h	152;"	d
E1000_EEPROM_APME	drivers/e1000-5.x/src/e1000.h	150;"	d
E1000_EEPROM_APME	drivers/e1000-7.x/src/e1000.h	154;"	d
E1000_EEPROM_CFG_DONE	drivers/e1000-7.x/src/e1000_hw.h	2296;"	d
E1000_EEPROM_CFG_DONE_PORT_1	drivers/e1000-7.x/src/e1000_hw.h	2297;"	d
E1000_EEPROM_GRANT_ATTEMPTS	drivers/e1000-5.x/src/e1000_hw.h	1144;"	d
E1000_EEPROM_GRANT_ATTEMPTS	drivers/e1000-7.x/src/e1000_hw.h	1574;"	d
E1000_EEPROM_ICH8_APME	drivers/e1000-7.x/src/e1000.h	153;"	d
E1000_EEPROM_LED_LOGIC	drivers/e1000-4.x/src/e1000_hw.h	902;"	d
E1000_EEPROM_LED_LOGIC	drivers/e1000-5.x/src/e1000_hw.h	1069;"	d
E1000_EEPROM_LED_LOGIC	drivers/e1000-7.x/src/e1000_hw.h	1473;"	d
E1000_EEPROM_POLL_READ	drivers/e1000-7.x/src/e1000_hw.h	1479;"	d
E1000_EEPROM_POLL_WRITE	drivers/e1000-7.x/src/e1000_hw.h	1478;"	d
E1000_EEPROM_RW_ADDR_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1477;"	d
E1000_EEPROM_RW_REG_DATA	drivers/e1000-7.x/src/e1000_hw.h	1474;"	d
E1000_EEPROM_RW_REG_DONE	drivers/e1000-7.x/src/e1000_hw.h	1475;"	d
E1000_EEPROM_RW_REG_START	drivers/e1000-7.x/src/e1000_hw.h	1476;"	d
E1000_EEPROM_SWDPIN0	drivers/e1000-4.x/src/e1000_hw.h	901;"	d
E1000_EEPROM_SWDPIN0	drivers/e1000-5.x/src/e1000_hw.h	1068;"	d
E1000_EEPROM_SWDPIN0	drivers/e1000-7.x/src/e1000_hw.h	1472;"	d
E1000_EERD	drivers/e1000-4.x/src/e1000_hw.h	535;"	d
E1000_EERD	drivers/e1000-5.x/src/e1000_hw.h	670;"	d
E1000_EERD	drivers/e1000-7.x/src/e1000_hw.h	889;"	d
E1000_EERD_ADDR_MASK	drivers/e1000-4.x/src/e1000_hw.h	979;"	d
E1000_EERD_ADDR_MASK	drivers/e1000-5.x/src/e1000_hw.h	1151;"	d
E1000_EERD_ADDR_MASK	drivers/e1000-7.x/src/e1000_hw.h	1598;"	d
E1000_EERD_ADDR_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	978;"	d
E1000_EERD_ADDR_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1150;"	d
E1000_EERD_ADDR_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1597;"	d
E1000_EERD_DATA_MASK	drivers/e1000-4.x/src/e1000_hw.h	981;"	d
E1000_EERD_DATA_MASK	drivers/e1000-5.x/src/e1000_hw.h	1153;"	d
E1000_EERD_DATA_MASK	drivers/e1000-7.x/src/e1000_hw.h	1600;"	d
E1000_EERD_DATA_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	980;"	d
E1000_EERD_DATA_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1152;"	d
E1000_EERD_DATA_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1599;"	d
E1000_EERD_DONE	drivers/e1000-4.x/src/e1000_hw.h	977;"	d
E1000_EERD_DONE	drivers/e1000-5.x/src/e1000_hw.h	1149;"	d
E1000_EERD_DONE	drivers/e1000-7.x/src/e1000_hw.h	1596;"	d
E1000_EERD_START	drivers/e1000-4.x/src/e1000_hw.h	976;"	d
E1000_EERD_START	drivers/e1000-5.x/src/e1000_hw.h	1148;"	d
E1000_EERD_START	drivers/e1000-7.x/src/e1000_hw.h	1595;"	d
E1000_EEWR	drivers/e1000-7.x/src/e1000_hw.h	931;"	d
E1000_ERR	drivers/e1000-4.x/src/e1000.h	102;"	d
E1000_ERR	drivers/e1000-5.x/src/e1000.h	101;"	d
E1000_ERR	drivers/e1000-7.x/src/e1000.h	97;"	d
E1000_ERR_CONFIG	drivers/e1000-4.x/src/e1000_hw.h	166;"	d
E1000_ERR_CONFIG	drivers/e1000-5.x/src/e1000_hw.h	262;"	d
E1000_ERR_CONFIG	drivers/e1000-7.x/src/e1000_hw.h	287;"	d
E1000_ERR_EEPROM	drivers/e1000-4.x/src/e1000_hw.h	164;"	d
E1000_ERR_EEPROM	drivers/e1000-5.x/src/e1000_hw.h	260;"	d
E1000_ERR_EEPROM	drivers/e1000-7.x/src/e1000_hw.h	285;"	d
E1000_ERR_HOST_INTERFACE_COMMAND	drivers/e1000-7.x/src/e1000_hw.h	293;"	d
E1000_ERR_MAC_TYPE	drivers/e1000-4.x/src/e1000_hw.h	168;"	d
E1000_ERR_MAC_TYPE	drivers/e1000-5.x/src/e1000_hw.h	264;"	d
E1000_ERR_MAC_TYPE	drivers/e1000-7.x/src/e1000_hw.h	289;"	d
E1000_ERR_MASTER_REQUESTS_PENDING	drivers/e1000-7.x/src/e1000_hw.h	292;"	d
E1000_ERR_PARAM	drivers/e1000-4.x/src/e1000_hw.h	167;"	d
E1000_ERR_PARAM	drivers/e1000-5.x/src/e1000_hw.h	263;"	d
E1000_ERR_PARAM	drivers/e1000-7.x/src/e1000_hw.h	288;"	d
E1000_ERR_PHY	drivers/e1000-4.x/src/e1000_hw.h	165;"	d
E1000_ERR_PHY	drivers/e1000-5.x/src/e1000_hw.h	261;"	d
E1000_ERR_PHY	drivers/e1000-7.x/src/e1000_hw.h	286;"	d
E1000_ERR_PHY_TYPE	drivers/e1000-5.x/src/e1000_hw.h	265;"	d
E1000_ERR_PHY_TYPE	drivers/e1000-7.x/src/e1000_hw.h	290;"	d
E1000_ERR_RESET	drivers/e1000-7.x/src/e1000_hw.h	291;"	d
E1000_ERR_SWFW_SYNC	drivers/e1000-7.x/src/e1000_hw.h	295;"	d
E1000_ERT	drivers/e1000-5.x/src/e1000_hw.h	693;"	d
E1000_ERT	drivers/e1000-7.x/src/e1000_hw.h	936;"	d
E1000_ERT_2048	drivers/e1000-7.x/src/e1000_main.c	2214;"	d	file:
E1000_EXTCNF_CTRL	drivers/e1000-7.x/src/e1000_hw.h	921;"	d
E1000_EXTCNF_CTRL_D_UD_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2420;"	d
E1000_EXTCNF_CTRL_D_UD_LATENCY	drivers/e1000-7.x/src/e1000_hw.h	2421;"	d
E1000_EXTCNF_CTRL_D_UD_OWNER	drivers/e1000-7.x/src/e1000_hw.h	2422;"	d
E1000_EXTCNF_CTRL_EXT_CNF_POINTER	drivers/e1000-7.x/src/e1000_hw.h	2425;"	d
E1000_EXTCNF_CTRL_LCD_WRITE_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2430;"	d
E1000_EXTCNF_CTRL_MDIO_HW_OWNERSHIP	drivers/e1000-7.x/src/e1000_hw.h	2424;"	d
E1000_EXTCNF_CTRL_MDIO_SW_OWNERSHIP	drivers/e1000-7.x/src/e1000_hw.h	2423;"	d
E1000_EXTCNF_CTRL_PCIE_WRITE_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2418;"	d
E1000_EXTCNF_CTRL_PHY_WRITE_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2419;"	d
E1000_EXTCNF_CTRL_SWFLAG	drivers/e1000-7.x/src/e1000_hw.h	2431;"	d
E1000_EXTCNF_SIZE	drivers/e1000-7.x/src/e1000_hw.h	922;"	d
E1000_EXTCNF_SIZE_EXT_DOCK_LENGTH	drivers/e1000-7.x/src/e1000_hw.h	2428;"	d
E1000_EXTCNF_SIZE_EXT_PCIE_LENGTH	drivers/e1000-7.x/src/e1000_hw.h	2429;"	d
E1000_EXTCNF_SIZE_EXT_PHY_LENGTH	drivers/e1000-7.x/src/e1000_hw.h	2427;"	d
E1000_FACTPS	drivers/e1000-7.x/src/e1000_hw.h	1078;"	d
E1000_FACTPS_FUNC0_AUX_EN	drivers/e1000-7.x/src/e1000_hw.h	2228;"	d
E1000_FACTPS_FUNC0_POWER_STATE_MASK	drivers/e1000-7.x/src/e1000_hw.h	2226;"	d
E1000_FACTPS_FUNC1_AUX_EN	drivers/e1000-7.x/src/e1000_hw.h	2232;"	d
E1000_FACTPS_FUNC1_POWER_STATE_MASK	drivers/e1000-7.x/src/e1000_hw.h	2229;"	d
E1000_FACTPS_FUNC1_POWER_STATE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2230;"	d
E1000_FACTPS_FUNC2_AUX_EN	drivers/e1000-7.x/src/e1000_hw.h	2236;"	d
E1000_FACTPS_FUNC2_POWER_STATE_MASK	drivers/e1000-7.x/src/e1000_hw.h	2233;"	d
E1000_FACTPS_FUNC2_POWER_STATE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2234;"	d
E1000_FACTPS_FUNC3_AUX_EN	drivers/e1000-7.x/src/e1000_hw.h	2240;"	d
E1000_FACTPS_FUNC3_POWER_STATE_MASK	drivers/e1000-7.x/src/e1000_hw.h	2237;"	d
E1000_FACTPS_FUNC3_POWER_STATE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2238;"	d
E1000_FACTPS_FUNC4_AUX_EN	drivers/e1000-7.x/src/e1000_hw.h	2244;"	d
E1000_FACTPS_FUNC4_POWER_STATE_MASK	drivers/e1000-7.x/src/e1000_hw.h	2241;"	d
E1000_FACTPS_FUNC4_POWER_STATE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2242;"	d
E1000_FACTPS_IDE_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2235;"	d
E1000_FACTPS_IPMI_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2243;"	d
E1000_FACTPS_LAN0_VALID	drivers/e1000-7.x/src/e1000_hw.h	2227;"	d
E1000_FACTPS_LAN1_VALID	drivers/e1000-7.x/src/e1000_hw.h	2231;"	d
E1000_FACTPS_LAN_FUNC_SEL	drivers/e1000-7.x/src/e1000_hw.h	2246;"	d
E1000_FACTPS_MNGCG	drivers/e1000-7.x/src/e1000_hw.h	2245;"	d
E1000_FACTPS_PM_STATE_CHANGED	drivers/e1000-7.x/src/e1000_hw.h	2247;"	d
E1000_FACTPS_SP_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2239;"	d
E1000_FCAH	drivers/e1000-4.x/src/e1000_hw.h	539;"	d
E1000_FCAH	drivers/e1000-5.x/src/e1000_hw.h	675;"	d
E1000_FCAH	drivers/e1000-7.x/src/e1000_hw.h	896;"	d
E1000_FCAL	drivers/e1000-4.x/src/e1000_hw.h	538;"	d
E1000_FCAL	drivers/e1000-5.x/src/e1000_hw.h	674;"	d
E1000_FCAL	drivers/e1000-7.x/src/e1000_hw.h	895;"	d
E1000_FCRTH	drivers/e1000-4.x/src/e1000_hw.h	558;"	d
E1000_FCRTH	drivers/e1000-5.x/src/e1000_hw.h	695;"	d
E1000_FCRTH	drivers/e1000-7.x/src/e1000_hw.h	938;"	d
E1000_FCRTH_RTH	drivers/e1000-4.x/src/e1000_hw.h	1174;"	d
E1000_FCRTH_RTH	drivers/e1000-5.x/src/e1000_hw.h	1354;"	d
E1000_FCRTH_RTH	drivers/e1000-7.x/src/e1000_hw.h	1950;"	d
E1000_FCRTH_XFCE	drivers/e1000-4.x/src/e1000_hw.h	1175;"	d
E1000_FCRTH_XFCE	drivers/e1000-5.x/src/e1000_hw.h	1355;"	d
E1000_FCRTH_XFCE	drivers/e1000-7.x/src/e1000_hw.h	1951;"	d
E1000_FCRTL	drivers/e1000-4.x/src/e1000_hw.h	557;"	d
E1000_FCRTL	drivers/e1000-5.x/src/e1000_hw.h	694;"	d
E1000_FCRTL	drivers/e1000-7.x/src/e1000_hw.h	937;"	d
E1000_FCRTL_RTL	drivers/e1000-4.x/src/e1000_hw.h	1176;"	d
E1000_FCRTL_RTL	drivers/e1000-5.x/src/e1000_hw.h	1356;"	d
E1000_FCRTL_RTL	drivers/e1000-7.x/src/e1000_hw.h	1952;"	d
E1000_FCRTL_XONE	drivers/e1000-4.x/src/e1000_hw.h	1177;"	d
E1000_FCRTL_XONE	drivers/e1000-5.x/src/e1000_hw.h	1357;"	d
E1000_FCRTL_XONE	drivers/e1000-7.x/src/e1000_hw.h	1953;"	d
E1000_FCRUC	drivers/e1000-4.x/src/e1000_hw.h	597;"	d
E1000_FCRUC	drivers/e1000-5.x/src/e1000_hw.h	739;"	d
E1000_FCRUC	drivers/e1000-7.x/src/e1000_hw.h	1000;"	d
E1000_FCT	drivers/e1000-4.x/src/e1000_hw.h	540;"	d
E1000_FCT	drivers/e1000-5.x/src/e1000_hw.h	676;"	d
E1000_FCT	drivers/e1000-7.x/src/e1000_hw.h	897;"	d
E1000_FCTTV	drivers/e1000-4.x/src/e1000_hw.h	548;"	d
E1000_FCTTV	drivers/e1000-5.x/src/e1000_hw.h	684;"	d
E1000_FCTTV	drivers/e1000-7.x/src/e1000_hw.h	912;"	d
E1000_FC_DEFAULT	drivers/e1000-7.x/src/e1000_hw.h	1960;"	d
E1000_FC_FULL	drivers/e1000-7.x/src/e1000_hw.h	1959;"	d
E1000_FC_HIGH_DIFF	drivers/e1000-5.x/src/e1000.h	138;"	d
E1000_FC_HIGH_DIFF	drivers/e1000-7.x/src/e1000.h	141;"	d
E1000_FC_LOW_DIFF	drivers/e1000-5.x/src/e1000.h	139;"	d
E1000_FC_LOW_DIFF	drivers/e1000-7.x/src/e1000.h	142;"	d
E1000_FC_NONE	drivers/e1000-7.x/src/e1000_hw.h	1956;"	d
E1000_FC_PAUSE_TIME	drivers/e1000-5.x/src/e1000.h	141;"	d
E1000_FC_PAUSE_TIME	drivers/e1000-7.x/src/e1000.h	144;"	d
E1000_FC_RX_PAUSE	drivers/e1000-7.x/src/e1000_hw.h	1957;"	d
E1000_FC_TX_PAUSE	drivers/e1000-7.x/src/e1000_hw.h	1958;"	d
E1000_FDX_COLLISION_DISTANCE	drivers/e1000-4.x/src/e1000_hw.h	1365;"	d
E1000_FDX_COLLISION_DISTANCE	drivers/e1000-5.x/src/e1000_hw.h	1587;"	d
E1000_FDX_COLLISION_DISTANCE	drivers/e1000-7.x/src/e1000_hw.h	2374;"	d
E1000_FEXTNVM	drivers/e1000-7.x/src/e1000_hw.h	894;"	d
E1000_FFLT	drivers/e1000-4.x/src/e1000_hw.h	649;"	d
E1000_FFLT	drivers/e1000-5.x/src/e1000_hw.h	791;"	d
E1000_FFLT	drivers/e1000-7.x/src/e1000_hw.h	1063;"	d
E1000_FFLT_DBG	drivers/e1000-7.x/src/e1000_hw.h	1081;"	d
E1000_FFLT_DBG_INVC	drivers/e1000-7.x/src/e1000_hw.h	2151;"	d
E1000_FFLT_SIZE	drivers/e1000-4.x/src/e1000_hw.h	516;"	d
E1000_FFLT_SIZE	drivers/e1000-5.x/src/e1000_hw.h	650;"	d
E1000_FFLT_SIZE	drivers/e1000-7.x/src/e1000_hw.h	867;"	d
E1000_FFMT	drivers/e1000-4.x/src/e1000_hw.h	650;"	d
E1000_FFMT	drivers/e1000-5.x/src/e1000_hw.h	793;"	d
E1000_FFMT	drivers/e1000-7.x/src/e1000_hw.h	1065;"	d
E1000_FFMT_SIZE	drivers/e1000-4.x/src/e1000_hw.h	517;"	d
E1000_FFMT_SIZE	drivers/e1000-5.x/src/e1000_hw.h	651;"	d
E1000_FFMT_SIZE	drivers/e1000-7.x/src/e1000_hw.h	868;"	d
E1000_FFVT	drivers/e1000-4.x/src/e1000_hw.h	651;"	d
E1000_FFVT	drivers/e1000-5.x/src/e1000_hw.h	794;"	d
E1000_FFVT	drivers/e1000-7.x/src/e1000_hw.h	1066;"	d
E1000_FFVT_SIZE	drivers/e1000-4.x/src/e1000_hw.h	518;"	d
E1000_FFVT_SIZE	drivers/e1000-5.x/src/e1000_hw.h	652;"	d
E1000_FFVT_SIZE	drivers/e1000-7.x/src/e1000_hw.h	869;"	d
E1000_FIFO_HDR	drivers/e1000-5.x/src/e1000_main.c	1957;"	d	file:
E1000_FIFO_HDR	drivers/e1000-7.x/src/e1000_main.c	3324;"	d	file:
E1000_FLA	drivers/e1000-5.x/src/e1000_hw.h	672;"	d
E1000_FLA	drivers/e1000-7.x/src/e1000_hw.h	891;"	d
E1000_FLASHT	drivers/e1000-7.x/src/e1000_hw.h	930;"	d
E1000_FLASH_UPDATES	drivers/e1000-7.x/src/e1000_hw.h	928;"	d
E1000_FLEXIBLE_FILTER_COUNT_MAX	drivers/e1000-4.x/src/e1000_hw.h	511;"	d
E1000_FLEXIBLE_FILTER_COUNT_MAX	drivers/e1000-5.x/src/e1000_hw.h	645;"	d
E1000_FLEXIBLE_FILTER_COUNT_MAX	drivers/e1000-7.x/src/e1000_hw.h	862;"	d
E1000_FLEXIBLE_FILTER_SIZE_MAX	drivers/e1000-4.x/src/e1000_hw.h	514;"	d
E1000_FLEXIBLE_FILTER_SIZE_MAX	drivers/e1000-5.x/src/e1000_hw.h	648;"	d
E1000_FLEXIBLE_FILTER_SIZE_MAX	drivers/e1000-7.x/src/e1000_hw.h	865;"	d
E1000_FLOP	drivers/e1000-7.x/src/e1000_hw.h	935;"	d
E1000_FLSWCNT	drivers/e1000-7.x/src/e1000_hw.h	934;"	d
E1000_FLSWCTL	drivers/e1000-7.x/src/e1000_hw.h	932;"	d
E1000_FLSWDATA	drivers/e1000-7.x/src/e1000_hw.h	933;"	d
E1000_FWSM	drivers/e1000-7.x/src/e1000_hw.h	1080;"	d
E1000_FWSM_DISSW	drivers/e1000-7.x/src/e1000_hw.h	2142;"	d
E1000_FWSM_FW_VALID	drivers/e1000-7.x/src/e1000_hw.h	2139;"	d
E1000_FWSM_MODE_MASK	drivers/e1000-7.x/src/e1000_hw.h	2137;"	d
E1000_FWSM_MODE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2138;"	d
E1000_FWSM_RSPCIPHY	drivers/e1000-7.x/src/e1000_hw.h	2141;"	d
E1000_FWSM_SKUEL_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2144;"	d
E1000_FWSM_SKUSEL_CONS	drivers/e1000-7.x/src/e1000_hw.h	2146;"	d
E1000_FWSM_SKUSEL_EMB	drivers/e1000-7.x/src/e1000_hw.h	2145;"	d
E1000_FWSM_SKUSEL_MASK	drivers/e1000-7.x/src/e1000_hw.h	2143;"	d
E1000_FWSM_SKUSEL_PERF_100	drivers/e1000-7.x/src/e1000_hw.h	2147;"	d
E1000_FWSM_SKUSEL_PERF_GBE	drivers/e1000-7.x/src/e1000_hw.h	2148;"	d
E1000_FWSTS_FWS_MASK	drivers/e1000-7.x/src/e1000_hw.h	2198;"	d
E1000_GB_HDX_COLLISION_DISTANCE	drivers/e1000-4.x/src/e1000_hw.h	1367;"	d
E1000_GCR	drivers/e1000-7.x/src/e1000_hw.h	1073;"	d
E1000_GCR_L1_ACT_WITHOUT_L0S_RX	drivers/e1000-7.x/src/e1000_hw.h	2224;"	d
E1000_GCR_RXDSCR_NO_SNOOP	drivers/e1000-7.x/src/e1000_hw.h	2210;"	d
E1000_GCR_RXDSCW_NO_SNOOP	drivers/e1000-7.x/src/e1000_hw.h	2209;"	d
E1000_GCR_RXD_NO_SNOOP	drivers/e1000-7.x/src/e1000_hw.h	2208;"	d
E1000_GCR_TXDSCR_NO_SNOOP	drivers/e1000-7.x/src/e1000_hw.h	2213;"	d
E1000_GCR_TXDSCW_NO_SNOOP	drivers/e1000-7.x/src/e1000_hw.h	2212;"	d
E1000_GCR_TXD_NO_SNOOP	drivers/e1000-7.x/src/e1000_hw.h	2211;"	d
E1000_GET_DESC	drivers/e1000-4.x/src/e1000.h	156;"	d
E1000_GET_DESC	drivers/e1000-5.x/src/e1000.h	197;"	d
E1000_GET_DESC	drivers/e1000-7.x/src/e1000.h	240;"	d
E1000_GLOBAL_STATS_LEN	drivers/e1000-7.x/src/e1000_ethtool.c	126;"	d	file:
E1000_GORCH	drivers/e1000-4.x/src/e1000_hw.h	609;"	d
E1000_GORCH	drivers/e1000-5.x/src/e1000_hw.h	751;"	d
E1000_GORCH	drivers/e1000-7.x/src/e1000_hw.h	1012;"	d
E1000_GORCL	drivers/e1000-4.x/src/e1000_hw.h	608;"	d
E1000_GORCL	drivers/e1000-5.x/src/e1000_hw.h	750;"	d
E1000_GORCL	drivers/e1000-7.x/src/e1000_hw.h	1011;"	d
E1000_GOTCH	drivers/e1000-4.x/src/e1000_hw.h	611;"	d
E1000_GOTCH	drivers/e1000-5.x/src/e1000_hw.h	753;"	d
E1000_GOTCH	drivers/e1000-7.x/src/e1000_hw.h	1014;"	d
E1000_GOTCL	drivers/e1000-4.x/src/e1000_hw.h	610;"	d
E1000_GOTCL	drivers/e1000-5.x/src/e1000_hw.h	752;"	d
E1000_GOTCL	drivers/e1000-7.x/src/e1000_hw.h	1013;"	d
E1000_GPRC	drivers/e1000-4.x/src/e1000_hw.h	604;"	d
E1000_GPRC	drivers/e1000-5.x/src/e1000_hw.h	746;"	d
E1000_GPRC	drivers/e1000-7.x/src/e1000_hw.h	1007;"	d
E1000_GPTC	drivers/e1000-4.x/src/e1000_hw.h	607;"	d
E1000_GPTC	drivers/e1000-5.x/src/e1000_hw.h	749;"	d
E1000_GPTC	drivers/e1000-7.x/src/e1000_hw.h	1010;"	d
E1000_GSCL_1	drivers/e1000-7.x/src/e1000_hw.h	1074;"	d
E1000_GSCL_2	drivers/e1000-7.x/src/e1000_hw.h	1075;"	d
E1000_GSCL_3	drivers/e1000-7.x/src/e1000_hw.h	1076;"	d
E1000_GSCL_4	drivers/e1000-7.x/src/e1000_hw.h	1077;"	d
E1000_HDX_COLLISION_DISTANCE	drivers/e1000-4.x/src/e1000_hw.h	1366;"	d
E1000_HDX_COLLISION_DISTANCE	drivers/e1000-5.x/src/e1000_hw.h	1588;"	d
E1000_HDX_COLLISION_DISTANCE	drivers/e1000-7.x/src/e1000_hw.h	2375;"	d
E1000_HICR	drivers/e1000-7.x/src/e1000_hw.h	1082;"	d
E1000_HICR_C	drivers/e1000-7.x/src/e1000_hw.h	2163;"	d
E1000_HICR_EN	drivers/e1000-7.x/src/e1000_hw.h	2162;"	d
E1000_HICR_FWR	drivers/e1000-7.x/src/e1000_hw.h	2166;"	d
E1000_HICR_FW_RESET	drivers/e1000-7.x/src/e1000_hw.h	1588;"	d
E1000_HICR_SV	drivers/e1000-7.x/src/e1000_hw.h	2165;"	d
E1000_HI_COMMAND_TIMEOUT	drivers/e1000-7.x/src/e1000_hw.h	2172;"	d
E1000_HI_MAX_BLOCK_BYTE_LENGTH	drivers/e1000-7.x/src/e1000_hw.h	2170;"	d
E1000_HI_MAX_BLOCK_DWORD_LENGTH	drivers/e1000-7.x/src/e1000_hw.h	2171;"	d
E1000_HI_MAX_DATA_LENGTH	drivers/e1000-7.x/src/e1000_hw.h	2169;"	d
E1000_HI_MAX_MNG_DATA_LENGTH	drivers/e1000-7.x/src/e1000_hw.h	333;"	d
E1000_HOST_IF	drivers/e1000-5.x/src/e1000_hw.h	792;"	d
E1000_HOST_IF	drivers/e1000-7.x/src/e1000_hw.h	1064;"	d
E1000_HOST_IF_MAX_SIZE	drivers/e1000-5.x/src/e1000_hw.h	248;"	d
E1000_HOST_IF_MAX_SIZE	drivers/e1000-7.x/src/e1000_hw.h	273;"	d
E1000_HSMC0R_CLKIN	drivers/e1000-7.x/src/e1000_hw.h	2186;"	d
E1000_HSMC0R_CLKOUT	drivers/e1000-7.x/src/e1000_hw.h	2189;"	d
E1000_HSMC0R_DATAIN	drivers/e1000-7.x/src/e1000_hw.h	2187;"	d
E1000_HSMC0R_DATAOUT	drivers/e1000-7.x/src/e1000_hw.h	2188;"	d
E1000_HSMC1R_CLKIN	drivers/e1000-7.x/src/e1000_hw.h	2192;"	d
E1000_HSMC1R_CLKOUT	drivers/e1000-7.x/src/e1000_hw.h	2195;"	d
E1000_HSMC1R_DATAIN	drivers/e1000-7.x/src/e1000_hw.h	2193;"	d
E1000_HSMC1R_DATAOUT	drivers/e1000-7.x/src/e1000_hw.h	2194;"	d
E1000_IAC	drivers/e1000-7.x/src/e1000_hw.h	1039;"	d
E1000_IAM	drivers/e1000-7.x/src/e1000_hw.h	904;"	d
E1000_IAMT_SIGNATURE	drivers/e1000-7.x/src/e1000_hw.h	340;"	d
E1000_ICH_NVM_SIG_MASK	drivers/e1000-7.x/src/e1000_hw.h	1592;"	d
E1000_ICH_NVM_SIG_WORD	drivers/e1000-7.x/src/e1000_hw.h	1591;"	d
E1000_ICR	drivers/e1000-4.x/src/e1000_hw.h	542;"	d
E1000_ICR	drivers/e1000-5.x/src/e1000_hw.h	678;"	d
E1000_ICR	drivers/e1000-7.x/src/e1000_hw.h	899;"	d
E1000_ICRXATC	drivers/e1000-7.x/src/e1000_hw.h	1041;"	d
E1000_ICRXDMTC	drivers/e1000-7.x/src/e1000_hw.h	1046;"	d
E1000_ICRXOC	drivers/e1000-7.x/src/e1000_hw.h	1047;"	d
E1000_ICRXPTC	drivers/e1000-7.x/src/e1000_hw.h	1040;"	d
E1000_ICR_ACK	drivers/e1000-7.x/src/e1000_hw.h	1762;"	d
E1000_ICR_ALL_PARITY	drivers/e1000-7.x/src/e1000_hw.h	1772;"	d
E1000_ICR_DOCK	drivers/e1000-7.x/src/e1000_hw.h	1764;"	d
E1000_ICR_DSW	drivers/e1000-7.x/src/e1000_hw.h	1773;"	d
E1000_ICR_EPRST	drivers/e1000-7.x/src/e1000_hw.h	1775;"	d
E1000_ICR_GPI_EN0	drivers/e1000-4.x/src/e1000_hw.h	1071;"	d
E1000_ICR_GPI_EN0	drivers/e1000-5.x/src/e1000_hw.h	1250;"	d
E1000_ICR_GPI_EN0	drivers/e1000-7.x/src/e1000_hw.h	1756;"	d
E1000_ICR_GPI_EN1	drivers/e1000-4.x/src/e1000_hw.h	1072;"	d
E1000_ICR_GPI_EN1	drivers/e1000-5.x/src/e1000_hw.h	1251;"	d
E1000_ICR_GPI_EN1	drivers/e1000-7.x/src/e1000_hw.h	1757;"	d
E1000_ICR_GPI_EN2	drivers/e1000-4.x/src/e1000_hw.h	1073;"	d
E1000_ICR_GPI_EN2	drivers/e1000-5.x/src/e1000_hw.h	1252;"	d
E1000_ICR_GPI_EN2	drivers/e1000-7.x/src/e1000_hw.h	1758;"	d
E1000_ICR_GPI_EN3	drivers/e1000-4.x/src/e1000_hw.h	1074;"	d
E1000_ICR_GPI_EN3	drivers/e1000-5.x/src/e1000_hw.h	1253;"	d
E1000_ICR_GPI_EN3	drivers/e1000-7.x/src/e1000_hw.h	1759;"	d
E1000_ICR_HOST_ARB_PAR	drivers/e1000-7.x/src/e1000_hw.h	1768;"	d
E1000_ICR_INT_ASSERTED	drivers/e1000-7.x/src/e1000_hw.h	1765;"	d
E1000_ICR_LSC	drivers/e1000-4.x/src/e1000_hw.h	1064;"	d
E1000_ICR_LSC	drivers/e1000-5.x/src/e1000_hw.h	1243;"	d
E1000_ICR_LSC	drivers/e1000-7.x/src/e1000_hw.h	1749;"	d
E1000_ICR_MDAC	drivers/e1000-4.x/src/e1000_hw.h	1069;"	d
E1000_ICR_MDAC	drivers/e1000-5.x/src/e1000_hw.h	1248;"	d
E1000_ICR_MDAC	drivers/e1000-7.x/src/e1000_hw.h	1754;"	d
E1000_ICR_MNG	drivers/e1000-7.x/src/e1000_hw.h	1763;"	d
E1000_ICR_PB_PAR	drivers/e1000-7.x/src/e1000_hw.h	1769;"	d
E1000_ICR_PHYINT	drivers/e1000-7.x/src/e1000_hw.h	1774;"	d
E1000_ICR_RXCFG	drivers/e1000-4.x/src/e1000_hw.h	1070;"	d
E1000_ICR_RXCFG	drivers/e1000-5.x/src/e1000_hw.h	1249;"	d
E1000_ICR_RXCFG	drivers/e1000-7.x/src/e1000_hw.h	1755;"	d
E1000_ICR_RXDMT0	drivers/e1000-4.x/src/e1000_hw.h	1066;"	d
E1000_ICR_RXDMT0	drivers/e1000-5.x/src/e1000_hw.h	1245;"	d
E1000_ICR_RXDMT0	drivers/e1000-7.x/src/e1000_hw.h	1751;"	d
E1000_ICR_RXD_FIFO_PAR0	drivers/e1000-7.x/src/e1000_hw.h	1766;"	d
E1000_ICR_RXD_FIFO_PAR1	drivers/e1000-7.x/src/e1000_hw.h	1770;"	d
E1000_ICR_RXO	drivers/e1000-4.x/src/e1000_hw.h	1067;"	d
E1000_ICR_RXO	drivers/e1000-5.x/src/e1000_hw.h	1246;"	d
E1000_ICR_RXO	drivers/e1000-7.x/src/e1000_hw.h	1752;"	d
E1000_ICR_RXSEQ	drivers/e1000-4.x/src/e1000_hw.h	1065;"	d
E1000_ICR_RXSEQ	drivers/e1000-5.x/src/e1000_hw.h	1244;"	d
E1000_ICR_RXSEQ	drivers/e1000-7.x/src/e1000_hw.h	1750;"	d
E1000_ICR_RXT0	drivers/e1000-4.x/src/e1000_hw.h	1068;"	d
E1000_ICR_RXT0	drivers/e1000-5.x/src/e1000_hw.h	1247;"	d
E1000_ICR_RXT0	drivers/e1000-7.x/src/e1000_hw.h	1753;"	d
E1000_ICR_SRPD	drivers/e1000-4.x/src/e1000_hw.h	1076;"	d
E1000_ICR_SRPD	drivers/e1000-5.x/src/e1000_hw.h	1255;"	d
E1000_ICR_SRPD	drivers/e1000-7.x/src/e1000_hw.h	1761;"	d
E1000_ICR_TXDW	drivers/e1000-4.x/src/e1000_hw.h	1062;"	d
E1000_ICR_TXDW	drivers/e1000-5.x/src/e1000_hw.h	1241;"	d
E1000_ICR_TXDW	drivers/e1000-7.x/src/e1000_hw.h	1747;"	d
E1000_ICR_TXD_FIFO_PAR0	drivers/e1000-7.x/src/e1000_hw.h	1767;"	d
E1000_ICR_TXD_FIFO_PAR1	drivers/e1000-7.x/src/e1000_hw.h	1771;"	d
E1000_ICR_TXD_LOW	drivers/e1000-4.x/src/e1000_hw.h	1075;"	d
E1000_ICR_TXD_LOW	drivers/e1000-5.x/src/e1000_hw.h	1254;"	d
E1000_ICR_TXD_LOW	drivers/e1000-7.x/src/e1000_hw.h	1760;"	d
E1000_ICR_TXQE	drivers/e1000-4.x/src/e1000_hw.h	1063;"	d
E1000_ICR_TXQE	drivers/e1000-5.x/src/e1000_hw.h	1242;"	d
E1000_ICR_TXQE	drivers/e1000-7.x/src/e1000_hw.h	1748;"	d
E1000_ICS	drivers/e1000-4.x/src/e1000_hw.h	544;"	d
E1000_ICS	drivers/e1000-5.x/src/e1000_hw.h	680;"	d
E1000_ICS	drivers/e1000-7.x/src/e1000_hw.h	901;"	d
E1000_ICS_ACK	drivers/e1000-7.x/src/e1000_hw.h	1794;"	d
E1000_ICS_DOCK	drivers/e1000-7.x/src/e1000_hw.h	1796;"	d
E1000_ICS_DSW	drivers/e1000-7.x/src/e1000_hw.h	1803;"	d
E1000_ICS_EPRST	drivers/e1000-7.x/src/e1000_hw.h	1805;"	d
E1000_ICS_GPI_EN0	drivers/e1000-4.x/src/e1000_hw.h	1088;"	d
E1000_ICS_GPI_EN0	drivers/e1000-5.x/src/e1000_hw.h	1267;"	d
E1000_ICS_GPI_EN0	drivers/e1000-7.x/src/e1000_hw.h	1788;"	d
E1000_ICS_GPI_EN1	drivers/e1000-4.x/src/e1000_hw.h	1089;"	d
E1000_ICS_GPI_EN1	drivers/e1000-5.x/src/e1000_hw.h	1268;"	d
E1000_ICS_GPI_EN1	drivers/e1000-7.x/src/e1000_hw.h	1789;"	d
E1000_ICS_GPI_EN2	drivers/e1000-4.x/src/e1000_hw.h	1090;"	d
E1000_ICS_GPI_EN2	drivers/e1000-5.x/src/e1000_hw.h	1269;"	d
E1000_ICS_GPI_EN2	drivers/e1000-7.x/src/e1000_hw.h	1790;"	d
E1000_ICS_GPI_EN3	drivers/e1000-4.x/src/e1000_hw.h	1091;"	d
E1000_ICS_GPI_EN3	drivers/e1000-5.x/src/e1000_hw.h	1270;"	d
E1000_ICS_GPI_EN3	drivers/e1000-7.x/src/e1000_hw.h	1791;"	d
E1000_ICS_HOST_ARB_PAR	drivers/e1000-7.x/src/e1000_hw.h	1799;"	d
E1000_ICS_LSC	drivers/e1000-4.x/src/e1000_hw.h	1081;"	d
E1000_ICS_LSC	drivers/e1000-5.x/src/e1000_hw.h	1260;"	d
E1000_ICS_LSC	drivers/e1000-7.x/src/e1000_hw.h	1781;"	d
E1000_ICS_MDAC	drivers/e1000-4.x/src/e1000_hw.h	1086;"	d
E1000_ICS_MDAC	drivers/e1000-5.x/src/e1000_hw.h	1265;"	d
E1000_ICS_MDAC	drivers/e1000-7.x/src/e1000_hw.h	1786;"	d
E1000_ICS_MNG	drivers/e1000-7.x/src/e1000_hw.h	1795;"	d
E1000_ICS_PB_PAR	drivers/e1000-7.x/src/e1000_hw.h	1800;"	d
E1000_ICS_PHYINT	drivers/e1000-7.x/src/e1000_hw.h	1804;"	d
E1000_ICS_RXCFG	drivers/e1000-4.x/src/e1000_hw.h	1087;"	d
E1000_ICS_RXCFG	drivers/e1000-5.x/src/e1000_hw.h	1266;"	d
E1000_ICS_RXCFG	drivers/e1000-7.x/src/e1000_hw.h	1787;"	d
E1000_ICS_RXDMT0	drivers/e1000-4.x/src/e1000_hw.h	1083;"	d
E1000_ICS_RXDMT0	drivers/e1000-5.x/src/e1000_hw.h	1262;"	d
E1000_ICS_RXDMT0	drivers/e1000-7.x/src/e1000_hw.h	1783;"	d
E1000_ICS_RXD_FIFO_PAR0	drivers/e1000-7.x/src/e1000_hw.h	1797;"	d
E1000_ICS_RXD_FIFO_PAR1	drivers/e1000-7.x/src/e1000_hw.h	1801;"	d
E1000_ICS_RXO	drivers/e1000-4.x/src/e1000_hw.h	1084;"	d
E1000_ICS_RXO	drivers/e1000-5.x/src/e1000_hw.h	1263;"	d
E1000_ICS_RXO	drivers/e1000-7.x/src/e1000_hw.h	1784;"	d
E1000_ICS_RXSEQ	drivers/e1000-4.x/src/e1000_hw.h	1082;"	d
E1000_ICS_RXSEQ	drivers/e1000-5.x/src/e1000_hw.h	1261;"	d
E1000_ICS_RXSEQ	drivers/e1000-7.x/src/e1000_hw.h	1782;"	d
E1000_ICS_RXT0	drivers/e1000-4.x/src/e1000_hw.h	1085;"	d
E1000_ICS_RXT0	drivers/e1000-5.x/src/e1000_hw.h	1264;"	d
E1000_ICS_RXT0	drivers/e1000-7.x/src/e1000_hw.h	1785;"	d
E1000_ICS_SRPD	drivers/e1000-4.x/src/e1000_hw.h	1093;"	d
E1000_ICS_SRPD	drivers/e1000-5.x/src/e1000_hw.h	1272;"	d
E1000_ICS_SRPD	drivers/e1000-7.x/src/e1000_hw.h	1793;"	d
E1000_ICS_TXDW	drivers/e1000-4.x/src/e1000_hw.h	1079;"	d
E1000_ICS_TXDW	drivers/e1000-5.x/src/e1000_hw.h	1258;"	d
E1000_ICS_TXDW	drivers/e1000-7.x/src/e1000_hw.h	1779;"	d
E1000_ICS_TXD_FIFO_PAR0	drivers/e1000-7.x/src/e1000_hw.h	1798;"	d
E1000_ICS_TXD_FIFO_PAR1	drivers/e1000-7.x/src/e1000_hw.h	1802;"	d
E1000_ICS_TXD_LOW	drivers/e1000-4.x/src/e1000_hw.h	1092;"	d
E1000_ICS_TXD_LOW	drivers/e1000-5.x/src/e1000_hw.h	1271;"	d
E1000_ICS_TXD_LOW	drivers/e1000-7.x/src/e1000_hw.h	1792;"	d
E1000_ICS_TXQE	drivers/e1000-4.x/src/e1000_hw.h	1080;"	d
E1000_ICS_TXQE	drivers/e1000-5.x/src/e1000_hw.h	1259;"	d
E1000_ICS_TXQE	drivers/e1000-7.x/src/e1000_hw.h	1780;"	d
E1000_ICTXATC	drivers/e1000-7.x/src/e1000_hw.h	1043;"	d
E1000_ICTXPTC	drivers/e1000-7.x/src/e1000_hw.h	1042;"	d
E1000_ICTXQEC	drivers/e1000-7.x/src/e1000_hw.h	1044;"	d
E1000_ICTXQMTC	drivers/e1000-7.x/src/e1000_hw.h	1045;"	d
E1000_ID_INTERVAL	drivers/e1000-4.x/src/e1000_ethtool.c	400;"	d	file:
E1000_ID_INTERVAL	drivers/e1000-5.x/src/e1000_ethtool.c	1558;"	d	file:
E1000_ID_INTERVAL	drivers/e1000-7.x/src/e1000_ethtool.c	1858;"	d	file:
E1000_IMC	drivers/e1000-4.x/src/e1000_hw.h	546;"	d
E1000_IMC	drivers/e1000-5.x/src/e1000_hw.h	682;"	d
E1000_IMC	drivers/e1000-7.x/src/e1000_hw.h	903;"	d
E1000_IMC_ACK	drivers/e1000-7.x/src/e1000_hw.h	1854;"	d
E1000_IMC_DOCK	drivers/e1000-7.x/src/e1000_hw.h	1856;"	d
E1000_IMC_DSW	drivers/e1000-7.x/src/e1000_hw.h	1863;"	d
E1000_IMC_EPRST	drivers/e1000-7.x/src/e1000_hw.h	1865;"	d
E1000_IMC_GPI_EN0	drivers/e1000-4.x/src/e1000_hw.h	1122;"	d
E1000_IMC_GPI_EN0	drivers/e1000-5.x/src/e1000_hw.h	1301;"	d
E1000_IMC_GPI_EN0	drivers/e1000-7.x/src/e1000_hw.h	1848;"	d
E1000_IMC_GPI_EN1	drivers/e1000-4.x/src/e1000_hw.h	1123;"	d
E1000_IMC_GPI_EN1	drivers/e1000-5.x/src/e1000_hw.h	1302;"	d
E1000_IMC_GPI_EN1	drivers/e1000-7.x/src/e1000_hw.h	1849;"	d
E1000_IMC_GPI_EN2	drivers/e1000-4.x/src/e1000_hw.h	1124;"	d
E1000_IMC_GPI_EN2	drivers/e1000-5.x/src/e1000_hw.h	1303;"	d
E1000_IMC_GPI_EN2	drivers/e1000-7.x/src/e1000_hw.h	1850;"	d
E1000_IMC_GPI_EN3	drivers/e1000-4.x/src/e1000_hw.h	1125;"	d
E1000_IMC_GPI_EN3	drivers/e1000-5.x/src/e1000_hw.h	1304;"	d
E1000_IMC_GPI_EN3	drivers/e1000-7.x/src/e1000_hw.h	1851;"	d
E1000_IMC_HOST_ARB_PAR	drivers/e1000-7.x/src/e1000_hw.h	1859;"	d
E1000_IMC_LSC	drivers/e1000-4.x/src/e1000_hw.h	1115;"	d
E1000_IMC_LSC	drivers/e1000-5.x/src/e1000_hw.h	1294;"	d
E1000_IMC_LSC	drivers/e1000-7.x/src/e1000_hw.h	1841;"	d
E1000_IMC_MDAC	drivers/e1000-4.x/src/e1000_hw.h	1120;"	d
E1000_IMC_MDAC	drivers/e1000-5.x/src/e1000_hw.h	1299;"	d
E1000_IMC_MDAC	drivers/e1000-7.x/src/e1000_hw.h	1846;"	d
E1000_IMC_MNG	drivers/e1000-7.x/src/e1000_hw.h	1855;"	d
E1000_IMC_PB_PAR	drivers/e1000-7.x/src/e1000_hw.h	1860;"	d
E1000_IMC_PHYINT	drivers/e1000-7.x/src/e1000_hw.h	1864;"	d
E1000_IMC_RXCFG	drivers/e1000-4.x/src/e1000_hw.h	1121;"	d
E1000_IMC_RXCFG	drivers/e1000-5.x/src/e1000_hw.h	1300;"	d
E1000_IMC_RXCFG	drivers/e1000-7.x/src/e1000_hw.h	1847;"	d
E1000_IMC_RXDMT0	drivers/e1000-4.x/src/e1000_hw.h	1117;"	d
E1000_IMC_RXDMT0	drivers/e1000-5.x/src/e1000_hw.h	1296;"	d
E1000_IMC_RXDMT0	drivers/e1000-7.x/src/e1000_hw.h	1843;"	d
E1000_IMC_RXD_FIFO_PAR0	drivers/e1000-7.x/src/e1000_hw.h	1857;"	d
E1000_IMC_RXD_FIFO_PAR1	drivers/e1000-7.x/src/e1000_hw.h	1861;"	d
E1000_IMC_RXO	drivers/e1000-4.x/src/e1000_hw.h	1118;"	d
E1000_IMC_RXO	drivers/e1000-5.x/src/e1000_hw.h	1297;"	d
E1000_IMC_RXO	drivers/e1000-7.x/src/e1000_hw.h	1844;"	d
E1000_IMC_RXSEQ	drivers/e1000-4.x/src/e1000_hw.h	1116;"	d
E1000_IMC_RXSEQ	drivers/e1000-5.x/src/e1000_hw.h	1295;"	d
E1000_IMC_RXSEQ	drivers/e1000-7.x/src/e1000_hw.h	1842;"	d
E1000_IMC_RXT0	drivers/e1000-4.x/src/e1000_hw.h	1119;"	d
E1000_IMC_RXT0	drivers/e1000-5.x/src/e1000_hw.h	1298;"	d
E1000_IMC_RXT0	drivers/e1000-7.x/src/e1000_hw.h	1845;"	d
E1000_IMC_SRPD	drivers/e1000-4.x/src/e1000_hw.h	1127;"	d
E1000_IMC_SRPD	drivers/e1000-5.x/src/e1000_hw.h	1306;"	d
E1000_IMC_SRPD	drivers/e1000-7.x/src/e1000_hw.h	1853;"	d
E1000_IMC_TXDW	drivers/e1000-4.x/src/e1000_hw.h	1113;"	d
E1000_IMC_TXDW	drivers/e1000-5.x/src/e1000_hw.h	1292;"	d
E1000_IMC_TXDW	drivers/e1000-7.x/src/e1000_hw.h	1839;"	d
E1000_IMC_TXD_FIFO_PAR0	drivers/e1000-7.x/src/e1000_hw.h	1858;"	d
E1000_IMC_TXD_FIFO_PAR1	drivers/e1000-7.x/src/e1000_hw.h	1862;"	d
E1000_IMC_TXD_LOW	drivers/e1000-4.x/src/e1000_hw.h	1126;"	d
E1000_IMC_TXD_LOW	drivers/e1000-5.x/src/e1000_hw.h	1305;"	d
E1000_IMC_TXD_LOW	drivers/e1000-7.x/src/e1000_hw.h	1852;"	d
E1000_IMC_TXQE	drivers/e1000-4.x/src/e1000_hw.h	1114;"	d
E1000_IMC_TXQE	drivers/e1000-5.x/src/e1000_hw.h	1293;"	d
E1000_IMC_TXQE	drivers/e1000-7.x/src/e1000_hw.h	1840;"	d
E1000_IMS	drivers/e1000-4.x/src/e1000_hw.h	545;"	d
E1000_IMS	drivers/e1000-5.x/src/e1000_hw.h	681;"	d
E1000_IMS	drivers/e1000-7.x/src/e1000_hw.h	902;"	d
E1000_IMS_ACK	drivers/e1000-7.x/src/e1000_hw.h	1824;"	d
E1000_IMS_DOCK	drivers/e1000-7.x/src/e1000_hw.h	1826;"	d
E1000_IMS_DSW	drivers/e1000-7.x/src/e1000_hw.h	1833;"	d
E1000_IMS_EPRST	drivers/e1000-7.x/src/e1000_hw.h	1835;"	d
E1000_IMS_GPI_EN0	drivers/e1000-4.x/src/e1000_hw.h	1105;"	d
E1000_IMS_GPI_EN0	drivers/e1000-5.x/src/e1000_hw.h	1284;"	d
E1000_IMS_GPI_EN0	drivers/e1000-7.x/src/e1000_hw.h	1818;"	d
E1000_IMS_GPI_EN1	drivers/e1000-4.x/src/e1000_hw.h	1106;"	d
E1000_IMS_GPI_EN1	drivers/e1000-5.x/src/e1000_hw.h	1285;"	d
E1000_IMS_GPI_EN1	drivers/e1000-7.x/src/e1000_hw.h	1819;"	d
E1000_IMS_GPI_EN2	drivers/e1000-4.x/src/e1000_hw.h	1107;"	d
E1000_IMS_GPI_EN2	drivers/e1000-5.x/src/e1000_hw.h	1286;"	d
E1000_IMS_GPI_EN2	drivers/e1000-7.x/src/e1000_hw.h	1820;"	d
E1000_IMS_GPI_EN3	drivers/e1000-4.x/src/e1000_hw.h	1108;"	d
E1000_IMS_GPI_EN3	drivers/e1000-5.x/src/e1000_hw.h	1287;"	d
E1000_IMS_GPI_EN3	drivers/e1000-7.x/src/e1000_hw.h	1821;"	d
E1000_IMS_HOST_ARB_PAR	drivers/e1000-7.x/src/e1000_hw.h	1829;"	d
E1000_IMS_LSC	drivers/e1000-4.x/src/e1000_hw.h	1098;"	d
E1000_IMS_LSC	drivers/e1000-5.x/src/e1000_hw.h	1277;"	d
E1000_IMS_LSC	drivers/e1000-7.x/src/e1000_hw.h	1811;"	d
E1000_IMS_MDAC	drivers/e1000-4.x/src/e1000_hw.h	1103;"	d
E1000_IMS_MDAC	drivers/e1000-5.x/src/e1000_hw.h	1282;"	d
E1000_IMS_MDAC	drivers/e1000-7.x/src/e1000_hw.h	1816;"	d
E1000_IMS_MNG	drivers/e1000-7.x/src/e1000_hw.h	1825;"	d
E1000_IMS_PB_PAR	drivers/e1000-7.x/src/e1000_hw.h	1830;"	d
E1000_IMS_PHYINT	drivers/e1000-7.x/src/e1000_hw.h	1834;"	d
E1000_IMS_RXCFG	drivers/e1000-4.x/src/e1000_hw.h	1104;"	d
E1000_IMS_RXCFG	drivers/e1000-5.x/src/e1000_hw.h	1283;"	d
E1000_IMS_RXCFG	drivers/e1000-7.x/src/e1000_hw.h	1817;"	d
E1000_IMS_RXDMT0	drivers/e1000-4.x/src/e1000_hw.h	1100;"	d
E1000_IMS_RXDMT0	drivers/e1000-5.x/src/e1000_hw.h	1279;"	d
E1000_IMS_RXDMT0	drivers/e1000-7.x/src/e1000_hw.h	1813;"	d
E1000_IMS_RXD_FIFO_PAR0	drivers/e1000-7.x/src/e1000_hw.h	1827;"	d
E1000_IMS_RXD_FIFO_PAR1	drivers/e1000-7.x/src/e1000_hw.h	1831;"	d
E1000_IMS_RXO	drivers/e1000-4.x/src/e1000_hw.h	1101;"	d
E1000_IMS_RXO	drivers/e1000-5.x/src/e1000_hw.h	1280;"	d
E1000_IMS_RXO	drivers/e1000-7.x/src/e1000_hw.h	1814;"	d
E1000_IMS_RXSEQ	drivers/e1000-4.x/src/e1000_hw.h	1099;"	d
E1000_IMS_RXSEQ	drivers/e1000-5.x/src/e1000_hw.h	1278;"	d
E1000_IMS_RXSEQ	drivers/e1000-7.x/src/e1000_hw.h	1812;"	d
E1000_IMS_RXT0	drivers/e1000-4.x/src/e1000_hw.h	1102;"	d
E1000_IMS_RXT0	drivers/e1000-5.x/src/e1000_hw.h	1281;"	d
E1000_IMS_RXT0	drivers/e1000-7.x/src/e1000_hw.h	1815;"	d
E1000_IMS_SRPD	drivers/e1000-4.x/src/e1000_hw.h	1110;"	d
E1000_IMS_SRPD	drivers/e1000-5.x/src/e1000_hw.h	1289;"	d
E1000_IMS_SRPD	drivers/e1000-7.x/src/e1000_hw.h	1823;"	d
E1000_IMS_TXDW	drivers/e1000-4.x/src/e1000_hw.h	1096;"	d
E1000_IMS_TXDW	drivers/e1000-5.x/src/e1000_hw.h	1275;"	d
E1000_IMS_TXDW	drivers/e1000-7.x/src/e1000_hw.h	1809;"	d
E1000_IMS_TXD_FIFO_PAR0	drivers/e1000-7.x/src/e1000_hw.h	1828;"	d
E1000_IMS_TXD_FIFO_PAR1	drivers/e1000-7.x/src/e1000_hw.h	1832;"	d
E1000_IMS_TXD_LOW	drivers/e1000-4.x/src/e1000_hw.h	1109;"	d
E1000_IMS_TXD_LOW	drivers/e1000-5.x/src/e1000_hw.h	1288;"	d
E1000_IMS_TXD_LOW	drivers/e1000-7.x/src/e1000_hw.h	1822;"	d
E1000_IMS_TXQE	drivers/e1000-4.x/src/e1000_hw.h	1097;"	d
E1000_IMS_TXQE	drivers/e1000-5.x/src/e1000_hw.h	1276;"	d
E1000_IMS_TXQE	drivers/e1000-7.x/src/e1000_hw.h	1810;"	d
E1000_IP4AT	drivers/e1000-4.x/src/e1000_hw.h	645;"	d
E1000_IP4AT	drivers/e1000-5.x/src/e1000_hw.h	787;"	d
E1000_IP4AT	drivers/e1000-7.x/src/e1000_hw.h	1059;"	d
E1000_IP4AT_SIZE	drivers/e1000-4.x/src/e1000_hw.h	484;"	d
E1000_IP4AT_SIZE	drivers/e1000-5.x/src/e1000_hw.h	618;"	d
E1000_IP4AT_SIZE	drivers/e1000-7.x/src/e1000_hw.h	834;"	d
E1000_IP4AT_SIZE_ICH8LAN	drivers/e1000-7.x/src/e1000_hw.h	835;"	d
E1000_IP6AT	drivers/e1000-4.x/src/e1000_hw.h	646;"	d
E1000_IP6AT	drivers/e1000-5.x/src/e1000_hw.h	788;"	d
E1000_IP6AT	drivers/e1000-7.x/src/e1000_hw.h	1060;"	d
E1000_IP6AT_SIZE	drivers/e1000-4.x/src/e1000_hw.h	485;"	d
E1000_IP6AT_SIZE	drivers/e1000-5.x/src/e1000_hw.h	619;"	d
E1000_IP6AT_SIZE	drivers/e1000-7.x/src/e1000_hw.h	836;"	d
E1000_IPAV	drivers/e1000-4.x/src/e1000_hw.h	644;"	d
E1000_IPAV	drivers/e1000-5.x/src/e1000_hw.h	786;"	d
E1000_IPAV	drivers/e1000-7.x/src/e1000_hw.h	1058;"	d
E1000_ITR	drivers/e1000-4.x/src/e1000_hw.h	543;"	d
E1000_ITR	drivers/e1000-5.x/src/e1000_hw.h	679;"	d
E1000_ITR	drivers/e1000-7.x/src/e1000_hw.h	900;"	d
E1000_JUMBO_PBA	drivers/e1000-4.x/src/e1000.h	117;"	d
E1000_KABGTXD	drivers/e1000-7.x/src/e1000_hw.h	958;"	d
E1000_KABGTXD_BGSQLBIAS	drivers/e1000-7.x/src/e1000_hw.h	1695;"	d
E1000_KUMCTRLSTA	drivers/e1000-7.x/src/e1000_hw.h	1068;"	d
E1000_KUMCTRLSTA_DIAG_FELPBK	drivers/e1000-7.x/src/e1000_hw.h	1688;"	d
E1000_KUMCTRLSTA_DIAG_NELPBK	drivers/e1000-7.x/src/e1000_hw.h	1689;"	d
E1000_KUMCTRLSTA_FIFO_CTRL_RX_BYPASS	drivers/e1000-7.x/src/e1000_hw.h	1675;"	d
E1000_KUMCTRLSTA_FIFO_CTRL_TX_BYPASS	drivers/e1000-7.x/src/e1000_hw.h	1676;"	d
E1000_KUMCTRLSTA_HD_CTRL_1000_DEFAULT	drivers/e1000-7.x/src/e1000_hw.h	1684;"	d
E1000_KUMCTRLSTA_HD_CTRL_10_100_DEFAULT	drivers/e1000-7.x/src/e1000_hw.h	1683;"	d
E1000_KUMCTRLSTA_INB_CTRL_DIS_PADDING	drivers/e1000-7.x/src/e1000_hw.h	1680;"	d
E1000_KUMCTRLSTA_INB_CTRL_LINK_STATUS_TX_TIMEOUT_DEFAULT	drivers/e1000-7.x/src/e1000_hw.h	1679;"	d
E1000_KUMCTRLSTA_K0S_100_EN	drivers/e1000-7.x/src/e1000_hw.h	1691;"	d
E1000_KUMCTRLSTA_K0S_ENTRY_LATENCY_MASK	drivers/e1000-7.x/src/e1000_hw.h	1693;"	d
E1000_KUMCTRLSTA_K0S_GBE_EN	drivers/e1000-7.x/src/e1000_hw.h	1692;"	d
E1000_KUMCTRLSTA_MASK	drivers/e1000-7.x/src/e1000_hw.h	1659;"	d
E1000_KUMCTRLSTA_OFFSET	drivers/e1000-7.x/src/e1000_hw.h	1660;"	d
E1000_KUMCTRLSTA_OFFSET_CTRL	drivers/e1000-7.x/src/e1000_hw.h	1665;"	d
E1000_KUMCTRLSTA_OFFSET_DIAG	drivers/e1000-7.x/src/e1000_hw.h	1667;"	d
E1000_KUMCTRLSTA_OFFSET_FIFO_CTRL	drivers/e1000-7.x/src/e1000_hw.h	1664;"	d
E1000_KUMCTRLSTA_OFFSET_HD_CTRL	drivers/e1000-7.x/src/e1000_hw.h	1670;"	d
E1000_KUMCTRLSTA_OFFSET_INB_CTRL	drivers/e1000-7.x/src/e1000_hw.h	1666;"	d
E1000_KUMCTRLSTA_OFFSET_INB_PARAM	drivers/e1000-7.x/src/e1000_hw.h	1669;"	d
E1000_KUMCTRLSTA_OFFSET_K0S_CTRL	drivers/e1000-7.x/src/e1000_hw.h	1686;"	d
E1000_KUMCTRLSTA_OFFSET_M2P_MODES	drivers/e1000-7.x/src/e1000_hw.h	1672;"	d
E1000_KUMCTRLSTA_OFFSET_M2P_SERDES	drivers/e1000-7.x/src/e1000_hw.h	1671;"	d
E1000_KUMCTRLSTA_OFFSET_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1661;"	d
E1000_KUMCTRLSTA_OFFSET_TIMEOUTS	drivers/e1000-7.x/src/e1000_hw.h	1668;"	d
E1000_KUMCTRLSTA_REN	drivers/e1000-7.x/src/e1000_hw.h	1662;"	d
E1000_LATECOL	drivers/e1000-4.x/src/e1000_hw.h	586;"	d
E1000_LATECOL	drivers/e1000-5.x/src/e1000_hw.h	728;"	d
E1000_LATECOL	drivers/e1000-7.x/src/e1000_hw.h	989;"	d
E1000_LEDCTL	drivers/e1000-4.x/src/e1000_hw.h	555;"	d
E1000_LEDCTL	drivers/e1000-5.x/src/e1000_hw.h	691;"	d
E1000_LEDCTL	drivers/e1000-7.x/src/e1000_hw.h	920;"	d
E1000_LEDCTL_LED0_BLINK	drivers/e1000-4.x/src/e1000_hw.h	1027;"	d
E1000_LEDCTL_LED0_BLINK	drivers/e1000-5.x/src/e1000_hw.h	1206;"	d
E1000_LEDCTL_LED0_BLINK	drivers/e1000-7.x/src/e1000_hw.h	1709;"	d
E1000_LEDCTL_LED0_BLINK_RATE	drivers/e1000-7.x/src/e1000_hw.h	1707;"	d
E1000_LEDCTL_LED0_IVRT	drivers/e1000-4.x/src/e1000_hw.h	1026;"	d
E1000_LEDCTL_LED0_IVRT	drivers/e1000-5.x/src/e1000_hw.h	1205;"	d
E1000_LEDCTL_LED0_IVRT	drivers/e1000-7.x/src/e1000_hw.h	1708;"	d
E1000_LEDCTL_LED0_MODE_MASK	drivers/e1000-4.x/src/e1000_hw.h	1024;"	d
E1000_LEDCTL_LED0_MODE_MASK	drivers/e1000-5.x/src/e1000_hw.h	1203;"	d
E1000_LEDCTL_LED0_MODE_MASK	drivers/e1000-7.x/src/e1000_hw.h	1705;"	d
E1000_LEDCTL_LED0_MODE_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1025;"	d
E1000_LEDCTL_LED0_MODE_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1204;"	d
E1000_LEDCTL_LED0_MODE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1706;"	d
E1000_LEDCTL_LED1_BLINK	drivers/e1000-4.x/src/e1000_hw.h	1031;"	d
E1000_LEDCTL_LED1_BLINK	drivers/e1000-5.x/src/e1000_hw.h	1210;"	d
E1000_LEDCTL_LED1_BLINK	drivers/e1000-7.x/src/e1000_hw.h	1714;"	d
E1000_LEDCTL_LED1_BLINK_RATE	drivers/e1000-7.x/src/e1000_hw.h	1712;"	d
E1000_LEDCTL_LED1_IVRT	drivers/e1000-4.x/src/e1000_hw.h	1030;"	d
E1000_LEDCTL_LED1_IVRT	drivers/e1000-5.x/src/e1000_hw.h	1209;"	d
E1000_LEDCTL_LED1_IVRT	drivers/e1000-7.x/src/e1000_hw.h	1713;"	d
E1000_LEDCTL_LED1_MODE_MASK	drivers/e1000-4.x/src/e1000_hw.h	1028;"	d
E1000_LEDCTL_LED1_MODE_MASK	drivers/e1000-5.x/src/e1000_hw.h	1207;"	d
E1000_LEDCTL_LED1_MODE_MASK	drivers/e1000-7.x/src/e1000_hw.h	1710;"	d
E1000_LEDCTL_LED1_MODE_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1029;"	d
E1000_LEDCTL_LED1_MODE_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1208;"	d
E1000_LEDCTL_LED1_MODE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1711;"	d
E1000_LEDCTL_LED2_BLINK	drivers/e1000-4.x/src/e1000_hw.h	1035;"	d
E1000_LEDCTL_LED2_BLINK	drivers/e1000-5.x/src/e1000_hw.h	1214;"	d
E1000_LEDCTL_LED2_BLINK	drivers/e1000-7.x/src/e1000_hw.h	1719;"	d
E1000_LEDCTL_LED2_BLINK_RATE	drivers/e1000-7.x/src/e1000_hw.h	1717;"	d
E1000_LEDCTL_LED2_IVRT	drivers/e1000-4.x/src/e1000_hw.h	1034;"	d
E1000_LEDCTL_LED2_IVRT	drivers/e1000-5.x/src/e1000_hw.h	1213;"	d
E1000_LEDCTL_LED2_IVRT	drivers/e1000-7.x/src/e1000_hw.h	1718;"	d
E1000_LEDCTL_LED2_MODE_MASK	drivers/e1000-4.x/src/e1000_hw.h	1032;"	d
E1000_LEDCTL_LED2_MODE_MASK	drivers/e1000-5.x/src/e1000_hw.h	1211;"	d
E1000_LEDCTL_LED2_MODE_MASK	drivers/e1000-7.x/src/e1000_hw.h	1715;"	d
E1000_LEDCTL_LED2_MODE_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1033;"	d
E1000_LEDCTL_LED2_MODE_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1212;"	d
E1000_LEDCTL_LED2_MODE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1716;"	d
E1000_LEDCTL_LED3_BLINK	drivers/e1000-4.x/src/e1000_hw.h	1039;"	d
E1000_LEDCTL_LED3_BLINK	drivers/e1000-5.x/src/e1000_hw.h	1218;"	d
E1000_LEDCTL_LED3_BLINK	drivers/e1000-7.x/src/e1000_hw.h	1724;"	d
E1000_LEDCTL_LED3_BLINK_RATE	drivers/e1000-7.x/src/e1000_hw.h	1722;"	d
E1000_LEDCTL_LED3_IVRT	drivers/e1000-4.x/src/e1000_hw.h	1038;"	d
E1000_LEDCTL_LED3_IVRT	drivers/e1000-5.x/src/e1000_hw.h	1217;"	d
E1000_LEDCTL_LED3_IVRT	drivers/e1000-7.x/src/e1000_hw.h	1723;"	d
E1000_LEDCTL_LED3_MODE_MASK	drivers/e1000-4.x/src/e1000_hw.h	1036;"	d
E1000_LEDCTL_LED3_MODE_MASK	drivers/e1000-5.x/src/e1000_hw.h	1215;"	d
E1000_LEDCTL_LED3_MODE_MASK	drivers/e1000-7.x/src/e1000_hw.h	1720;"	d
E1000_LEDCTL_LED3_MODE_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1037;"	d
E1000_LEDCTL_LED3_MODE_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1216;"	d
E1000_LEDCTL_LED3_MODE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1721;"	d
E1000_LEDCTL_MODE_ACTIVITY	drivers/e1000-4.x/src/e1000_hw.h	1044;"	d
E1000_LEDCTL_MODE_ACTIVITY	drivers/e1000-5.x/src/e1000_hw.h	1223;"	d
E1000_LEDCTL_MODE_ACTIVITY	drivers/e1000-7.x/src/e1000_hw.h	1729;"	d
E1000_LEDCTL_MODE_BUS_SIZE	drivers/e1000-4.x/src/e1000_hw.h	1053;"	d
E1000_LEDCTL_MODE_BUS_SIZE	drivers/e1000-5.x/src/e1000_hw.h	1232;"	d
E1000_LEDCTL_MODE_BUS_SIZE	drivers/e1000-7.x/src/e1000_hw.h	1738;"	d
E1000_LEDCTL_MODE_BUS_SPEED	drivers/e1000-4.x/src/e1000_hw.h	1052;"	d
E1000_LEDCTL_MODE_BUS_SPEED	drivers/e1000-5.x/src/e1000_hw.h	1231;"	d
E1000_LEDCTL_MODE_BUS_SPEED	drivers/e1000-7.x/src/e1000_hw.h	1737;"	d
E1000_LEDCTL_MODE_COLLISION	drivers/e1000-4.x/src/e1000_hw.h	1051;"	d
E1000_LEDCTL_MODE_COLLISION	drivers/e1000-5.x/src/e1000_hw.h	1230;"	d
E1000_LEDCTL_MODE_COLLISION	drivers/e1000-7.x/src/e1000_hw.h	1736;"	d
E1000_LEDCTL_MODE_FULL_DUPLEX	drivers/e1000-4.x/src/e1000_hw.h	1050;"	d
E1000_LEDCTL_MODE_FULL_DUPLEX	drivers/e1000-5.x/src/e1000_hw.h	1229;"	d
E1000_LEDCTL_MODE_FULL_DUPLEX	drivers/e1000-7.x/src/e1000_hw.h	1735;"	d
E1000_LEDCTL_MODE_LED_OFF	drivers/e1000-4.x/src/e1000_hw.h	1056;"	d
E1000_LEDCTL_MODE_LED_OFF	drivers/e1000-5.x/src/e1000_hw.h	1235;"	d
E1000_LEDCTL_MODE_LED_OFF	drivers/e1000-7.x/src/e1000_hw.h	1741;"	d
E1000_LEDCTL_MODE_LED_ON	drivers/e1000-4.x/src/e1000_hw.h	1055;"	d
E1000_LEDCTL_MODE_LED_ON	drivers/e1000-5.x/src/e1000_hw.h	1234;"	d
E1000_LEDCTL_MODE_LED_ON	drivers/e1000-7.x/src/e1000_hw.h	1740;"	d
E1000_LEDCTL_MODE_LINK_10	drivers/e1000-4.x/src/e1000_hw.h	1046;"	d
E1000_LEDCTL_MODE_LINK_10	drivers/e1000-5.x/src/e1000_hw.h	1225;"	d
E1000_LEDCTL_MODE_LINK_10	drivers/e1000-7.x/src/e1000_hw.h	1731;"	d
E1000_LEDCTL_MODE_LINK_100	drivers/e1000-4.x/src/e1000_hw.h	1047;"	d
E1000_LEDCTL_MODE_LINK_100	drivers/e1000-5.x/src/e1000_hw.h	1226;"	d
E1000_LEDCTL_MODE_LINK_100	drivers/e1000-7.x/src/e1000_hw.h	1732;"	d
E1000_LEDCTL_MODE_LINK_1000	drivers/e1000-4.x/src/e1000_hw.h	1048;"	d
E1000_LEDCTL_MODE_LINK_1000	drivers/e1000-5.x/src/e1000_hw.h	1227;"	d
E1000_LEDCTL_MODE_LINK_1000	drivers/e1000-7.x/src/e1000_hw.h	1733;"	d
E1000_LEDCTL_MODE_LINK_100_1000	drivers/e1000-4.x/src/e1000_hw.h	1042;"	d
E1000_LEDCTL_MODE_LINK_100_1000	drivers/e1000-5.x/src/e1000_hw.h	1221;"	d
E1000_LEDCTL_MODE_LINK_100_1000	drivers/e1000-7.x/src/e1000_hw.h	1727;"	d
E1000_LEDCTL_MODE_LINK_10_1000	drivers/e1000-4.x/src/e1000_hw.h	1041;"	d
E1000_LEDCTL_MODE_LINK_10_1000	drivers/e1000-5.x/src/e1000_hw.h	1220;"	d
E1000_LEDCTL_MODE_LINK_10_1000	drivers/e1000-7.x/src/e1000_hw.h	1726;"	d
E1000_LEDCTL_MODE_LINK_ACTIVITY	drivers/e1000-4.x/src/e1000_hw.h	1045;"	d
E1000_LEDCTL_MODE_LINK_ACTIVITY	drivers/e1000-5.x/src/e1000_hw.h	1224;"	d
E1000_LEDCTL_MODE_LINK_ACTIVITY	drivers/e1000-7.x/src/e1000_hw.h	1730;"	d
E1000_LEDCTL_MODE_LINK_UP	drivers/e1000-4.x/src/e1000_hw.h	1043;"	d
E1000_LEDCTL_MODE_LINK_UP	drivers/e1000-5.x/src/e1000_hw.h	1222;"	d
E1000_LEDCTL_MODE_LINK_UP	drivers/e1000-7.x/src/e1000_hw.h	1728;"	d
E1000_LEDCTL_MODE_PAUSED	drivers/e1000-4.x/src/e1000_hw.h	1054;"	d
E1000_LEDCTL_MODE_PAUSED	drivers/e1000-5.x/src/e1000_hw.h	1233;"	d
E1000_LEDCTL_MODE_PAUSED	drivers/e1000-7.x/src/e1000_hw.h	1739;"	d
E1000_LEDCTL_MODE_PCIX_MODE	drivers/e1000-4.x/src/e1000_hw.h	1049;"	d
E1000_LEDCTL_MODE_PCIX_MODE	drivers/e1000-5.x/src/e1000_hw.h	1228;"	d
E1000_LEDCTL_MODE_PCIX_MODE	drivers/e1000-7.x/src/e1000_hw.h	1734;"	d
E1000_LED_ON	drivers/e1000-4.x/src/e1000_ethtool.c	403;"	d	file:
E1000_LED_ON	drivers/e1000-5.x/src/e1000_ethtool.c	1561;"	d	file:
E1000_LED_ON	drivers/e1000-7.x/src/e1000_ethtool.c	1861;"	d	file:
E1000_MANC	drivers/e1000-4.x/src/e1000_hw.h	643;"	d
E1000_MANC	drivers/e1000-5.x/src/e1000_hw.h	785;"	d
E1000_MANC	drivers/e1000-7.x/src/e1000_hw.h	1057;"	d
E1000_MANC2H	drivers/e1000-7.x/src/e1000_hw.h	1070;"	d
E1000_MANC_0298_EN	drivers/e1000-4.x/src/e1000_hw.h	1276;"	d
E1000_MANC_0298_EN	drivers/e1000-5.x/src/e1000_hw.h	1459;"	d
E1000_MANC_0298_EN	drivers/e1000-7.x/src/e1000_hw.h	2099;"	d
E1000_MANC_ARP_EN	drivers/e1000-4.x/src/e1000_hw.h	1280;"	d
E1000_MANC_ARP_EN	drivers/e1000-5.x/src/e1000_hw.h	1463;"	d
E1000_MANC_ARP_EN	drivers/e1000-7.x/src/e1000_hw.h	2103;"	d
E1000_MANC_ARP_RES_EN	drivers/e1000-7.x/src/e1000_hw.h	2106;"	d
E1000_MANC_ASF_EN	drivers/e1000-4.x/src/e1000_hw.h	1273;"	d
E1000_MANC_ASF_EN	drivers/e1000-5.x/src/e1000_hw.h	1456;"	d
E1000_MANC_ASF_EN	drivers/e1000-7.x/src/e1000_hw.h	2096;"	d
E1000_MANC_BLK_PHY_RST_ON_IDE	drivers/e1000-5.x/src/e1000_hw.h	1469;"	d
E1000_MANC_BLK_PHY_RST_ON_IDE	drivers/e1000-7.x/src/e1000_hw.h	2111;"	d
E1000_MANC_BR_EN	drivers/e1000-7.x/src/e1000_hw.h	2119;"	d
E1000_MANC_EN_IP_ADDR_FILTER	drivers/e1000-7.x/src/e1000_hw.h	2116;"	d
E1000_MANC_EN_MAC_ADDR_FILTER	drivers/e1000-5.x/src/e1000_hw.h	1470;"	d
E1000_MANC_EN_MAC_ADDR_FILTER	drivers/e1000-7.x/src/e1000_hw.h	2112;"	d
E1000_MANC_EN_MNG2HOST	drivers/e1000-5.x/src/e1000_hw.h	1472;"	d
E1000_MANC_EN_MNG2HOST	drivers/e1000-7.x/src/e1000_hw.h	2114;"	d
E1000_MANC_EN_XSUM_FILTER	drivers/e1000-7.x/src/e1000_hw.h	2118;"	d
E1000_MANC_IPV4_EN	drivers/e1000-4.x/src/e1000_hw.h	1277;"	d
E1000_MANC_IPV4_EN	drivers/e1000-5.x/src/e1000_hw.h	1460;"	d
E1000_MANC_IPV4_EN	drivers/e1000-7.x/src/e1000_hw.h	2100;"	d
E1000_MANC_IPV6_EN	drivers/e1000-4.x/src/e1000_hw.h	1278;"	d
E1000_MANC_IPV6_EN	drivers/e1000-5.x/src/e1000_hw.h	1461;"	d
E1000_MANC_IPV6_EN	drivers/e1000-7.x/src/e1000_hw.h	2101;"	d
E1000_MANC_NEIGHBOR_EN	drivers/e1000-4.x/src/e1000_hw.h	1281;"	d
E1000_MANC_NEIGHBOR_EN	drivers/e1000-5.x/src/e1000_hw.h	1464;"	d
E1000_MANC_NEIGHBOR_EN	drivers/e1000-7.x/src/e1000_hw.h	2104;"	d
E1000_MANC_RCV_ALL	drivers/e1000-7.x/src/e1000_hw.h	2110;"	d
E1000_MANC_RCV_TCO_EN	drivers/e1000-4.x/src/e1000_hw.h	1284;"	d
E1000_MANC_RCV_TCO_EN	drivers/e1000-5.x/src/e1000_hw.h	1467;"	d
E1000_MANC_RCV_TCO_EN	drivers/e1000-7.x/src/e1000_hw.h	2108;"	d
E1000_MANC_REPORT_STATUS	drivers/e1000-4.x/src/e1000_hw.h	1285;"	d
E1000_MANC_REPORT_STATUS	drivers/e1000-5.x/src/e1000_hw.h	1468;"	d
E1000_MANC_REPORT_STATUS	drivers/e1000-7.x/src/e1000_hw.h	2109;"	d
E1000_MANC_RMCP_EN	drivers/e1000-4.x/src/e1000_hw.h	1275;"	d
E1000_MANC_RMCP_EN	drivers/e1000-5.x/src/e1000_hw.h	1458;"	d
E1000_MANC_RMCP_EN	drivers/e1000-7.x/src/e1000_hw.h	2098;"	d
E1000_MANC_R_ON_FORCE	drivers/e1000-4.x/src/e1000_hw.h	1274;"	d
E1000_MANC_R_ON_FORCE	drivers/e1000-5.x/src/e1000_hw.h	1457;"	d
E1000_MANC_R_ON_FORCE	drivers/e1000-7.x/src/e1000_hw.h	2097;"	d
E1000_MANC_SMBUS_EN	drivers/e1000-4.x/src/e1000_hw.h	1272;"	d
E1000_MANC_SMBUS_EN	drivers/e1000-5.x/src/e1000_hw.h	1455;"	d
E1000_MANC_SMBUS_EN	drivers/e1000-7.x/src/e1000_hw.h	2095;"	d
E1000_MANC_SMB_CLK_IN	drivers/e1000-4.x/src/e1000_hw.h	1288;"	d
E1000_MANC_SMB_CLK_IN	drivers/e1000-5.x/src/e1000_hw.h	1476;"	d
E1000_MANC_SMB_CLK_IN	drivers/e1000-7.x/src/e1000_hw.h	2122;"	d
E1000_MANC_SMB_CLK_OUT	drivers/e1000-4.x/src/e1000_hw.h	1291;"	d
E1000_MANC_SMB_CLK_OUT	drivers/e1000-5.x/src/e1000_hw.h	1479;"	d
E1000_MANC_SMB_CLK_OUT	drivers/e1000-7.x/src/e1000_hw.h	2125;"	d
E1000_MANC_SMB_CLK_OUT_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1294;"	d
E1000_MANC_SMB_CLK_OUT_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1482;"	d
E1000_MANC_SMB_CLK_OUT_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2128;"	d
E1000_MANC_SMB_DATA_IN	drivers/e1000-4.x/src/e1000_hw.h	1289;"	d
E1000_MANC_SMB_DATA_IN	drivers/e1000-5.x/src/e1000_hw.h	1477;"	d
E1000_MANC_SMB_DATA_IN	drivers/e1000-7.x/src/e1000_hw.h	2123;"	d
E1000_MANC_SMB_DATA_OUT	drivers/e1000-4.x/src/e1000_hw.h	1290;"	d
E1000_MANC_SMB_DATA_OUT	drivers/e1000-5.x/src/e1000_hw.h	1478;"	d
E1000_MANC_SMB_DATA_OUT	drivers/e1000-7.x/src/e1000_hw.h	2124;"	d
E1000_MANC_SMB_DATA_OUT_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1293;"	d
E1000_MANC_SMB_DATA_OUT_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1481;"	d
E1000_MANC_SMB_DATA_OUT_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2127;"	d
E1000_MANC_SMB_GNT	drivers/e1000-4.x/src/e1000_hw.h	1287;"	d
E1000_MANC_SMB_GNT	drivers/e1000-5.x/src/e1000_hw.h	1475;"	d
E1000_MANC_SMB_GNT	drivers/e1000-7.x/src/e1000_hw.h	2121;"	d
E1000_MANC_SMB_REQ	drivers/e1000-4.x/src/e1000_hw.h	1286;"	d
E1000_MANC_SMB_REQ	drivers/e1000-5.x/src/e1000_hw.h	1474;"	d
E1000_MANC_SMB_REQ	drivers/e1000-7.x/src/e1000_hw.h	2120;"	d
E1000_MANC_SNAP_EN	drivers/e1000-4.x/src/e1000_hw.h	1279;"	d
E1000_MANC_SNAP_EN	drivers/e1000-5.x/src/e1000_hw.h	1462;"	d
E1000_MANC_SNAP_EN	drivers/e1000-7.x/src/e1000_hw.h	2102;"	d
E1000_MANC_TCO_RESET	drivers/e1000-4.x/src/e1000_hw.h	1283;"	d
E1000_MANC_TCO_RESET	drivers/e1000-5.x/src/e1000_hw.h	1466;"	d
E1000_MANC_TCO_RESET	drivers/e1000-7.x/src/e1000_hw.h	2107;"	d
E1000_MASTER_SLAVE	drivers/e1000-5.x/src/e1000.h	154;"	d
E1000_MASTER_SLAVE	drivers/e1000-7.x/src/e1000.h	158;"	d
E1000_MAX_82544_RXD	drivers/e1000-5.x/src/e1000.h	120;"	d
E1000_MAX_82544_RXD	drivers/e1000-7.x/src/e1000.h	116;"	d
E1000_MAX_82544_TXD	drivers/e1000-5.x/src/e1000.h	115;"	d
E1000_MAX_82544_TXD	drivers/e1000-7.x/src/e1000.h	111;"	d
E1000_MAX_DATA_PER_TXD	drivers/e1000-5.x/src/e1000_main.c	1802;"	d	file:
E1000_MAX_DATA_PER_TXD	drivers/e1000-7.x/src/e1000_main.c	3143;"	d	file:
E1000_MAX_DSP_RESETS	drivers/e1000-5.x/src/e1000_hw.h	2084;"	d
E1000_MAX_DSP_RESETS	drivers/e1000-7.x/src/e1000_hw.h	3001;"	d
E1000_MAX_INTR	drivers/e1000-4.x/src/e1000.h	104;"	d
E1000_MAX_INTR	drivers/e1000-5.x/src/e1000.h	109;"	d
E1000_MAX_INTR	drivers/e1000-7.x/src/e1000.h	105;"	d
E1000_MAX_NIC	drivers/e1000-4.x/src/e1000_param.c	35;"	d	file:
E1000_MAX_NIC	drivers/e1000-5.x/src/e1000_param.c	35;"	d	file:
E1000_MAX_NIC	drivers/e1000-7.x/src/e1000_param.c	35;"	d	file:
E1000_MAX_RXD	drivers/e1000-5.x/src/e1000.h	118;"	d
E1000_MAX_RXD	drivers/e1000-7.x/src/e1000.h	114;"	d
E1000_MAX_TXD	drivers/e1000-5.x/src/e1000.h	113;"	d
E1000_MAX_TXD	drivers/e1000-7.x/src/e1000.h	109;"	d
E1000_MAX_TXD_PWR	drivers/e1000-5.x/src/e1000_main.c	1801;"	d	file:
E1000_MAX_TXD_PWR	drivers/e1000-7.x/src/e1000_main.c	3142;"	d	file:
E1000_MCC	drivers/e1000-4.x/src/e1000_hw.h	585;"	d
E1000_MCC	drivers/e1000-5.x/src/e1000_hw.h	727;"	d
E1000_MCC	drivers/e1000-7.x/src/e1000_hw.h	988;"	d
E1000_MC_TBL_SIZE	drivers/e1000-4.x/src/e1000_hw.h	463;"	d
E1000_MC_TBL_SIZE	drivers/e1000-5.x/src/e1000_hw.h	597;"	d
E1000_MC_TBL_SIZE	drivers/e1000-7.x/src/e1000_hw.h	809;"	d
E1000_MC_TBL_SIZE_ICHXLAN	drivers/e1000-7.x/src/e1000_hw.h	813;"	d
E1000_MDALIGN	drivers/e1000-4.x/src/e1000_hw.h	1299;"	d
E1000_MDALIGN	drivers/e1000-5.x/src/e1000_hw.h	1487;"	d
E1000_MDALIGN	drivers/e1000-7.x/src/e1000_hw.h	2203;"	d
E1000_MDIC	drivers/e1000-4.x/src/e1000_hw.h	537;"	d
E1000_MDIC	drivers/e1000-5.x/src/e1000_hw.h	673;"	d
E1000_MDIC	drivers/e1000-7.x/src/e1000_hw.h	892;"	d
E1000_MDIC_DATA_MASK	drivers/e1000-4.x/src/e1000_hw.h	1012;"	d
E1000_MDIC_DATA_MASK	drivers/e1000-5.x/src/e1000_hw.h	1191;"	d
E1000_MDIC_DATA_MASK	drivers/e1000-7.x/src/e1000_hw.h	1648;"	d
E1000_MDIC_ERROR	drivers/e1000-4.x/src/e1000_hw.h	1021;"	d
E1000_MDIC_ERROR	drivers/e1000-5.x/src/e1000_hw.h	1200;"	d
E1000_MDIC_ERROR	drivers/e1000-7.x/src/e1000_hw.h	1657;"	d
E1000_MDIC_INT_EN	drivers/e1000-4.x/src/e1000_hw.h	1020;"	d
E1000_MDIC_INT_EN	drivers/e1000-5.x/src/e1000_hw.h	1199;"	d
E1000_MDIC_INT_EN	drivers/e1000-7.x/src/e1000_hw.h	1656;"	d
E1000_MDIC_OP_READ	drivers/e1000-4.x/src/e1000_hw.h	1018;"	d
E1000_MDIC_OP_READ	drivers/e1000-5.x/src/e1000_hw.h	1197;"	d
E1000_MDIC_OP_READ	drivers/e1000-7.x/src/e1000_hw.h	1654;"	d
E1000_MDIC_OP_WRITE	drivers/e1000-4.x/src/e1000_hw.h	1017;"	d
E1000_MDIC_OP_WRITE	drivers/e1000-5.x/src/e1000_hw.h	1196;"	d
E1000_MDIC_OP_WRITE	drivers/e1000-7.x/src/e1000_hw.h	1653;"	d
E1000_MDIC_PHY_MASK	drivers/e1000-4.x/src/e1000_hw.h	1015;"	d
E1000_MDIC_PHY_MASK	drivers/e1000-5.x/src/e1000_hw.h	1194;"	d
E1000_MDIC_PHY_MASK	drivers/e1000-7.x/src/e1000_hw.h	1651;"	d
E1000_MDIC_PHY_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1016;"	d
E1000_MDIC_PHY_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1195;"	d
E1000_MDIC_PHY_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1652;"	d
E1000_MDIC_READY	drivers/e1000-4.x/src/e1000_hw.h	1019;"	d
E1000_MDIC_READY	drivers/e1000-5.x/src/e1000_hw.h	1198;"	d
E1000_MDIC_READY	drivers/e1000-7.x/src/e1000_hw.h	1655;"	d
E1000_MDIC_REG_MASK	drivers/e1000-4.x/src/e1000_hw.h	1013;"	d
E1000_MDIC_REG_MASK	drivers/e1000-5.x/src/e1000_hw.h	1192;"	d
E1000_MDIC_REG_MASK	drivers/e1000-7.x/src/e1000_hw.h	1649;"	d
E1000_MDIC_REG_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1014;"	d
E1000_MDIC_REG_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1193;"	d
E1000_MDIC_REG_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1650;"	d
E1000_MDPHYA	drivers/e1000-7.x/src/e1000_hw.h	1069;"	d
E1000_MGTPDC	drivers/e1000-4.x/src/e1000_hw.h	618;"	d
E1000_MGTPDC	drivers/e1000-5.x/src/e1000_hw.h	760;"	d
E1000_MGTPDC	drivers/e1000-7.x/src/e1000_hw.h	1021;"	d
E1000_MGTPRC	drivers/e1000-4.x/src/e1000_hw.h	617;"	d
E1000_MGTPRC	drivers/e1000-5.x/src/e1000_hw.h	759;"	d
E1000_MGTPRC	drivers/e1000-7.x/src/e1000_hw.h	1020;"	d
E1000_MGTPTC	drivers/e1000-4.x/src/e1000_hw.h	619;"	d
E1000_MGTPTC	drivers/e1000-5.x/src/e1000_hw.h	761;"	d
E1000_MGTPTC	drivers/e1000-7.x/src/e1000_hw.h	1022;"	d
E1000_MIN_RXD	drivers/e1000-5.x/src/e1000.h	119;"	d
E1000_MIN_RXD	drivers/e1000-7.x/src/e1000.h	115;"	d
E1000_MIN_TXD	drivers/e1000-5.x/src/e1000.h	114;"	d
E1000_MIN_TXD	drivers/e1000-7.x/src/e1000.h	110;"	d
E1000_MNG2HOST_PORT_623	drivers/e1000-7.x/src/e1000_main.c	566;"	d	file:
E1000_MNG2HOST_PORT_664	drivers/e1000-7.x/src/e1000_main.c	567;"	d	file:
E1000_MNG_DHCP_COMMAND_TIMEOUT	drivers/e1000-7.x/src/e1000_hw.h	335;"	d
E1000_MNG_DHCP_COOKIE_LENGTH	drivers/e1000-7.x/src/e1000_hw.h	337;"	d
E1000_MNG_DHCP_COOKIE_OFFSET	drivers/e1000-7.x/src/e1000_hw.h	336;"	d
E1000_MNG_DHCP_COOKIE_STATUS_PARSING_SUPPORT	drivers/e1000-7.x/src/e1000_hw.h	342;"	d
E1000_MNG_DHCP_COOKIE_STATUS_VLAN_SUPPORT	drivers/e1000-7.x/src/e1000_hw.h	343;"	d
E1000_MNG_DHCP_TX_PAYLOAD_CMD	drivers/e1000-7.x/src/e1000_hw.h	332;"	d
E1000_MNG_IAMT_MODE	drivers/e1000-7.x/src/e1000_hw.h	338;"	d
E1000_MNG_ICH_IAMT_MODE	drivers/e1000-7.x/src/e1000_hw.h	339;"	d
E1000_MNG_VLAN_NONE	drivers/e1000-7.x/src/e1000.h	162;"	d
E1000_MPC	drivers/e1000-4.x/src/e1000_hw.h	582;"	d
E1000_MPC	drivers/e1000-5.x/src/e1000_hw.h	724;"	d
E1000_MPC	drivers/e1000-7.x/src/e1000_hw.h	985;"	d
E1000_MPRC	drivers/e1000-4.x/src/e1000_hw.h	606;"	d
E1000_MPRC	drivers/e1000-5.x/src/e1000_hw.h	748;"	d
E1000_MPRC	drivers/e1000-7.x/src/e1000_hw.h	1009;"	d
E1000_MPTC	drivers/e1000-4.x/src/e1000_hw.h	632;"	d
E1000_MPTC	drivers/e1000-5.x/src/e1000_hw.h	774;"	d
E1000_MPTC	drivers/e1000-7.x/src/e1000_hw.h	1035;"	d
E1000_MRQC	drivers/e1000-7.x/src/e1000_hw.h	1086;"	d
E1000_MRQC_ENABLE_MASK	drivers/e1000-7.x/src/e1000_hw.h	2042;"	d
E1000_MRQC_ENABLE_RSS_2Q	drivers/e1000-7.x/src/e1000_hw.h	2043;"	d
E1000_MRQC_ENABLE_RSS_INT	drivers/e1000-7.x/src/e1000_hw.h	2044;"	d
E1000_MRQC_RSS_FIELD_IPV4	drivers/e1000-7.x/src/e1000_hw.h	2047;"	d
E1000_MRQC_RSS_FIELD_IPV4_TCP	drivers/e1000-7.x/src/e1000_hw.h	2046;"	d
E1000_MRQC_RSS_FIELD_IPV6	drivers/e1000-7.x/src/e1000_hw.h	2050;"	d
E1000_MRQC_RSS_FIELD_IPV6_EX	drivers/e1000-7.x/src/e1000_hw.h	2049;"	d
E1000_MRQC_RSS_FIELD_IPV6_TCP	drivers/e1000-7.x/src/e1000_hw.h	2051;"	d
E1000_MRQC_RSS_FIELD_IPV6_TCP_EX	drivers/e1000-7.x/src/e1000_hw.h	2048;"	d
E1000_MRQC_RSS_FIELD_MASK	drivers/e1000-7.x/src/e1000_hw.h	2045;"	d
E1000_MTA	drivers/e1000-4.x/src/e1000_hw.h	637;"	d
E1000_MTA	drivers/e1000-5.x/src/e1000_hw.h	779;"	d
E1000_MTA	drivers/e1000-7.x/src/e1000_hw.h	1051;"	d
E1000_NEW_RX_DESC_UNUSED	drivers/e1000-5.x/src/e1000.h	194;"	d
E1000_NUM_MTA_REGISTERS	drivers/e1000-4.x/src/e1000_hw.h	474;"	d
E1000_NUM_MTA_REGISTERS	drivers/e1000-5.x/src/e1000_hw.h	608;"	d
E1000_NUM_MTA_REGISTERS	drivers/e1000-7.x/src/e1000_hw.h	823;"	d
E1000_NUM_MTA_REGISTERS_ICHXLAN	drivers/e1000-7.x/src/e1000_hw.h	824;"	d
E1000_NUM_UNICAST	drivers/e1000-4.x/src/e1000_hw.h	462;"	d
E1000_NUM_UNICAST	drivers/e1000-5.x/src/e1000_hw.h	596;"	d
E1000_NUM_UNICAST	drivers/e1000-7.x/src/e1000_hw.h	808;"	d
E1000_NUM_UNICAST_ICH8LAN	drivers/e1000-7.x/src/e1000_hw.h	812;"	d
E1000_PARAM	drivers/e1000-4.x/src/e1000_param.c	58;"	d	file:
E1000_PARAM	drivers/e1000-5.x/src/e1000_param.c	58;"	d	file:
E1000_PARAM	drivers/e1000-5.x/src/e1000_param.c	63;"	d	file:
E1000_PARAM	drivers/e1000-7.x/src/e1000_param.c	58;"	d	file:
E1000_PARAM	drivers/e1000-7.x/src/e1000_param.c	63;"	d	file:
E1000_PARAM_INIT	drivers/e1000-4.x/src/e1000_param.c	51;"	d	file:
E1000_PARAM_INIT	drivers/e1000-5.x/src/e1000_param.c	46;"	d	file:
E1000_PARAM_INIT	drivers/e1000-7.x/src/e1000_param.c	46;"	d	file:
E1000_PBA	drivers/e1000-4.x/src/e1000_hw.h	556;"	d
E1000_PBA	drivers/e1000-5.x/src/e1000_hw.h	692;"	d
E1000_PBA	drivers/e1000-7.x/src/e1000_hw.h	925;"	d
E1000_PBA_12K	drivers/e1000-7.x/src/e1000_hw.h	2435;"	d
E1000_PBA_16K	drivers/e1000-4.x/src/e1000_hw.h	1407;"	d
E1000_PBA_16K	drivers/e1000-5.x/src/e1000_hw.h	1628;"	d
E1000_PBA_16K	drivers/e1000-7.x/src/e1000_hw.h	2436;"	d
E1000_PBA_20K	drivers/e1000-7.x/src/e1000_main.c	789;"	d	file:
E1000_PBA_22K	drivers/e1000-5.x/src/e1000_hw.h	1629;"	d
E1000_PBA_22K	drivers/e1000-7.x/src/e1000_hw.h	2437;"	d
E1000_PBA_24K	drivers/e1000-4.x/src/e1000_hw.h	1408;"	d
E1000_PBA_24K	drivers/e1000-5.x/src/e1000_hw.h	1630;"	d
E1000_PBA_24K	drivers/e1000-7.x/src/e1000_hw.h	2438;"	d
E1000_PBA_30K	drivers/e1000-5.x/src/e1000_hw.h	1631;"	d
E1000_PBA_30K	drivers/e1000-7.x/src/e1000_hw.h	2439;"	d
E1000_PBA_32K	drivers/e1000-7.x/src/e1000_hw.h	2440;"	d
E1000_PBA_34K	drivers/e1000-7.x/src/e1000_hw.h	2441;"	d
E1000_PBA_38K	drivers/e1000-7.x/src/e1000_hw.h	2442;"	d
E1000_PBA_40K	drivers/e1000-4.x/src/e1000_hw.h	1409;"	d
E1000_PBA_40K	drivers/e1000-5.x/src/e1000_hw.h	1632;"	d
E1000_PBA_40K	drivers/e1000-7.x/src/e1000_hw.h	2443;"	d
E1000_PBA_48K	drivers/e1000-4.x/src/e1000_hw.h	1410;"	d
E1000_PBA_48K	drivers/e1000-5.x/src/e1000_hw.h	1633;"	d
E1000_PBA_48K	drivers/e1000-7.x/src/e1000_hw.h	2444;"	d
E1000_PBA_8K	drivers/e1000-7.x/src/e1000_hw.h	2434;"	d
E1000_PBA_BYTES_SHIFT	drivers/e1000-5.x/src/e1000.h	133;"	d
E1000_PBA_BYTES_SHIFT	drivers/e1000-7.x/src/e1000.h	136;"	d
E1000_PBA_TX_MASK	drivers/e1000-5.x/src/e1000.h	135;"	d
E1000_PBA_TX_MASK	drivers/e1000-7.x/src/e1000.h	138;"	d
E1000_PBS	drivers/e1000-7.x/src/e1000_hw.h	926;"	d
E1000_PBS_16K	drivers/e1000-7.x/src/e1000_hw.h	2446;"	d
E1000_PHY_ADDRESS	drivers/e1000-4.x/src/e1000_hw.h	1769;"	d
E1000_PHY_ADDRESS	drivers/e1000-5.x/src/e1000_hw.h	2145;"	d
E1000_PHY_ADDRESS	drivers/e1000-7.x/src/e1000_hw.h	3396;"	d
E1000_PHY_CTRL	drivers/e1000-7.x/src/e1000_hw.h	923;"	d
E1000_PHY_CTRL_B2B_EN	drivers/e1000-7.x/src/e1000_hw.h	1702;"	d
E1000_PHY_CTRL_D0A_LPLU	drivers/e1000-7.x/src/e1000_hw.h	1698;"	d
E1000_PHY_CTRL_GBE_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	1701;"	d
E1000_PHY_CTRL_NOND0A_GBE_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	1700;"	d
E1000_PHY_CTRL_NOND0A_LPLU	drivers/e1000-7.x/src/e1000_hw.h	1699;"	d
E1000_PHY_CTRL_SPD_EN	drivers/e1000-7.x/src/e1000_hw.h	1697;"	d
E1000_PRC1023	drivers/e1000-4.x/src/e1000_hw.h	602;"	d
E1000_PRC1023	drivers/e1000-5.x/src/e1000_hw.h	744;"	d
E1000_PRC1023	drivers/e1000-7.x/src/e1000_hw.h	1005;"	d
E1000_PRC127	drivers/e1000-4.x/src/e1000_hw.h	599;"	d
E1000_PRC127	drivers/e1000-5.x/src/e1000_hw.h	741;"	d
E1000_PRC127	drivers/e1000-7.x/src/e1000_hw.h	1002;"	d
E1000_PRC1522	drivers/e1000-4.x/src/e1000_hw.h	603;"	d
E1000_PRC1522	drivers/e1000-5.x/src/e1000_hw.h	745;"	d
E1000_PRC1522	drivers/e1000-7.x/src/e1000_hw.h	1006;"	d
E1000_PRC255	drivers/e1000-4.x/src/e1000_hw.h	600;"	d
E1000_PRC255	drivers/e1000-5.x/src/e1000_hw.h	742;"	d
E1000_PRC255	drivers/e1000-7.x/src/e1000_hw.h	1003;"	d
E1000_PRC511	drivers/e1000-4.x/src/e1000_hw.h	601;"	d
E1000_PRC511	drivers/e1000-5.x/src/e1000_hw.h	743;"	d
E1000_PRC511	drivers/e1000-7.x/src/e1000_hw.h	1004;"	d
E1000_PRC64	drivers/e1000-4.x/src/e1000_hw.h	598;"	d
E1000_PRC64	drivers/e1000-5.x/src/e1000_hw.h	740;"	d
E1000_PRC64	drivers/e1000-7.x/src/e1000_hw.h	1001;"	d
E1000_PSRCTL	drivers/e1000-7.x/src/e1000_hw.h	939;"	d
E1000_PSRCTL_BSIZE0_MASK	drivers/e1000-7.x/src/e1000_hw.h	1926;"	d
E1000_PSRCTL_BSIZE0_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1931;"	d
E1000_PSRCTL_BSIZE1_MASK	drivers/e1000-7.x/src/e1000_hw.h	1927;"	d
E1000_PSRCTL_BSIZE1_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1932;"	d
E1000_PSRCTL_BSIZE2_MASK	drivers/e1000-7.x/src/e1000_hw.h	1928;"	d
E1000_PSRCTL_BSIZE2_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1933;"	d
E1000_PSRCTL_BSIZE3_MASK	drivers/e1000-7.x/src/e1000_hw.h	1929;"	d
E1000_PSRCTL_BSIZE3_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1934;"	d
E1000_PTC1023	drivers/e1000-4.x/src/e1000_hw.h	630;"	d
E1000_PTC1023	drivers/e1000-5.x/src/e1000_hw.h	772;"	d
E1000_PTC1023	drivers/e1000-7.x/src/e1000_hw.h	1033;"	d
E1000_PTC127	drivers/e1000-4.x/src/e1000_hw.h	627;"	d
E1000_PTC127	drivers/e1000-5.x/src/e1000_hw.h	769;"	d
E1000_PTC127	drivers/e1000-7.x/src/e1000_hw.h	1030;"	d
E1000_PTC1522	drivers/e1000-4.x/src/e1000_hw.h	631;"	d
E1000_PTC1522	drivers/e1000-5.x/src/e1000_hw.h	773;"	d
E1000_PTC1522	drivers/e1000-7.x/src/e1000_hw.h	1034;"	d
E1000_PTC255	drivers/e1000-4.x/src/e1000_hw.h	628;"	d
E1000_PTC255	drivers/e1000-5.x/src/e1000_hw.h	770;"	d
E1000_PTC255	drivers/e1000-7.x/src/e1000_hw.h	1031;"	d
E1000_PTC511	drivers/e1000-4.x/src/e1000_hw.h	629;"	d
E1000_PTC511	drivers/e1000-5.x/src/e1000_hw.h	771;"	d
E1000_PTC511	drivers/e1000-7.x/src/e1000_hw.h	1032;"	d
E1000_PTC64	drivers/e1000-4.x/src/e1000_hw.h	626;"	d
E1000_PTC64	drivers/e1000-5.x/src/e1000_hw.h	768;"	d
E1000_PTC64	drivers/e1000-7.x/src/e1000_hw.h	1029;"	d
E1000_QUEUE_STATS_LEN	drivers/e1000-7.x/src/e1000_ethtool.c	125;"	d	file:
E1000_RA	drivers/e1000-4.x/src/e1000_hw.h	638;"	d
E1000_RA	drivers/e1000-5.x/src/e1000_hw.h	780;"	d
E1000_RA	drivers/e1000-7.x/src/e1000_hw.h	1052;"	d
E1000_RADV	drivers/e1000-4.x/src/e1000_hw.h	566;"	d
E1000_RADV	drivers/e1000-5.x/src/e1000_hw.h	703;"	d
E1000_RADV	drivers/e1000-7.x/src/e1000_hw.h	954;"	d
E1000_RAH_AV	drivers/e1000-4.x/src/e1000_hw.h	1059;"	d
E1000_RAH_AV	drivers/e1000-5.x/src/e1000_hw.h	1238;"	d
E1000_RAH_AV	drivers/e1000-7.x/src/e1000_hw.h	1744;"	d
E1000_RAID	drivers/e1000-7.x/src/e1000_hw.h	956;"	d
E1000_RAR_ENTRIES	drivers/e1000-4.x/src/e1000_hw.h	324;"	d
E1000_RAR_ENTRIES	drivers/e1000-5.x/src/e1000_hw.h	457;"	d
E1000_RAR_ENTRIES	drivers/e1000-7.x/src/e1000_hw.h	587;"	d
E1000_RAR_ENTRIES_ICH8LAN	drivers/e1000-7.x/src/e1000_hw.h	589;"	d
E1000_RCTL	drivers/e1000-4.x/src/e1000_hw.h	547;"	d
E1000_RCTL	drivers/e1000-5.x/src/e1000_hw.h	683;"	d
E1000_RCTL	drivers/e1000-7.x/src/e1000_hw.h	905;"	d
E1000_RCTL_BAM	drivers/e1000-4.x/src/e1000_hw.h	1149;"	d
E1000_RCTL_BAM	drivers/e1000-5.x/src/e1000_hw.h	1328;"	d
E1000_RCTL_BAM	drivers/e1000-7.x/src/e1000_hw.h	1890;"	d
E1000_RCTL_BSEX	drivers/e1000-4.x/src/e1000_hw.h	1164;"	d
E1000_RCTL_BSEX	drivers/e1000-5.x/src/e1000_hw.h	1343;"	d
E1000_RCTL_BSEX	drivers/e1000-7.x/src/e1000_hw.h	1905;"	d
E1000_RCTL_CFI	drivers/e1000-4.x/src/e1000_hw.h	1161;"	d
E1000_RCTL_CFI	drivers/e1000-5.x/src/e1000_hw.h	1340;"	d
E1000_RCTL_CFI	drivers/e1000-7.x/src/e1000_hw.h	1902;"	d
E1000_RCTL_CFIEN	drivers/e1000-4.x/src/e1000_hw.h	1160;"	d
E1000_RCTL_CFIEN	drivers/e1000-5.x/src/e1000_hw.h	1339;"	d
E1000_RCTL_CFIEN	drivers/e1000-7.x/src/e1000_hw.h	1901;"	d
E1000_RCTL_DPF	drivers/e1000-4.x/src/e1000_hw.h	1162;"	d
E1000_RCTL_DPF	drivers/e1000-5.x/src/e1000_hw.h	1341;"	d
E1000_RCTL_DPF	drivers/e1000-7.x/src/e1000_hw.h	1903;"	d
E1000_RCTL_DTYP_MASK	drivers/e1000-7.x/src/e1000_hw.h	1879;"	d
E1000_RCTL_DTYP_PS	drivers/e1000-7.x/src/e1000_hw.h	1880;"	d
E1000_RCTL_EN	drivers/e1000-4.x/src/e1000_hw.h	1131;"	d
E1000_RCTL_EN	drivers/e1000-5.x/src/e1000_hw.h	1310;"	d
E1000_RCTL_EN	drivers/e1000-7.x/src/e1000_hw.h	1870;"	d
E1000_RCTL_FLXBUF_MASK	drivers/e1000-7.x/src/e1000_hw.h	1907;"	d
E1000_RCTL_FLXBUF_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1908;"	d
E1000_RCTL_LBM_MAC	drivers/e1000-4.x/src/e1000_hw.h	1137;"	d
E1000_RCTL_LBM_MAC	drivers/e1000-5.x/src/e1000_hw.h	1316;"	d
E1000_RCTL_LBM_MAC	drivers/e1000-7.x/src/e1000_hw.h	1876;"	d
E1000_RCTL_LBM_NO	drivers/e1000-4.x/src/e1000_hw.h	1136;"	d
E1000_RCTL_LBM_NO	drivers/e1000-5.x/src/e1000_hw.h	1315;"	d
E1000_RCTL_LBM_NO	drivers/e1000-7.x/src/e1000_hw.h	1875;"	d
E1000_RCTL_LBM_SLP	drivers/e1000-4.x/src/e1000_hw.h	1138;"	d
E1000_RCTL_LBM_SLP	drivers/e1000-5.x/src/e1000_hw.h	1317;"	d
E1000_RCTL_LBM_SLP	drivers/e1000-7.x/src/e1000_hw.h	1877;"	d
E1000_RCTL_LBM_TCVR	drivers/e1000-4.x/src/e1000_hw.h	1139;"	d
E1000_RCTL_LBM_TCVR	drivers/e1000-5.x/src/e1000_hw.h	1318;"	d
E1000_RCTL_LBM_TCVR	drivers/e1000-7.x/src/e1000_hw.h	1878;"	d
E1000_RCTL_LPE	drivers/e1000-4.x/src/e1000_hw.h	1135;"	d
E1000_RCTL_LPE	drivers/e1000-5.x/src/e1000_hw.h	1314;"	d
E1000_RCTL_LPE	drivers/e1000-7.x/src/e1000_hw.h	1874;"	d
E1000_RCTL_MDR	drivers/e1000-4.x/src/e1000_hw.h	1148;"	d
E1000_RCTL_MDR	drivers/e1000-5.x/src/e1000_hw.h	1327;"	d
E1000_RCTL_MDR	drivers/e1000-7.x/src/e1000_hw.h	1889;"	d
E1000_RCTL_MO_0	drivers/e1000-4.x/src/e1000_hw.h	1144;"	d
E1000_RCTL_MO_0	drivers/e1000-5.x/src/e1000_hw.h	1323;"	d
E1000_RCTL_MO_0	drivers/e1000-7.x/src/e1000_hw.h	1885;"	d
E1000_RCTL_MO_1	drivers/e1000-4.x/src/e1000_hw.h	1145;"	d
E1000_RCTL_MO_1	drivers/e1000-5.x/src/e1000_hw.h	1324;"	d
E1000_RCTL_MO_1	drivers/e1000-7.x/src/e1000_hw.h	1886;"	d
E1000_RCTL_MO_2	drivers/e1000-4.x/src/e1000_hw.h	1146;"	d
E1000_RCTL_MO_2	drivers/e1000-5.x/src/e1000_hw.h	1325;"	d
E1000_RCTL_MO_2	drivers/e1000-7.x/src/e1000_hw.h	1887;"	d
E1000_RCTL_MO_3	drivers/e1000-4.x/src/e1000_hw.h	1147;"	d
E1000_RCTL_MO_3	drivers/e1000-5.x/src/e1000_hw.h	1326;"	d
E1000_RCTL_MO_3	drivers/e1000-7.x/src/e1000_hw.h	1888;"	d
E1000_RCTL_MO_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1143;"	d
E1000_RCTL_MO_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1322;"	d
E1000_RCTL_MO_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1884;"	d
E1000_RCTL_MPE	drivers/e1000-4.x/src/e1000_hw.h	1134;"	d
E1000_RCTL_MPE	drivers/e1000-5.x/src/e1000_hw.h	1313;"	d
E1000_RCTL_MPE	drivers/e1000-7.x/src/e1000_hw.h	1873;"	d
E1000_RCTL_PMCF	drivers/e1000-4.x/src/e1000_hw.h	1163;"	d
E1000_RCTL_PMCF	drivers/e1000-5.x/src/e1000_hw.h	1342;"	d
E1000_RCTL_PMCF	drivers/e1000-7.x/src/e1000_hw.h	1904;"	d
E1000_RCTL_RDMTS_EIGTH	drivers/e1000-4.x/src/e1000_hw.h	1142;"	d
E1000_RCTL_RDMTS_EIGTH	drivers/e1000-5.x/src/e1000_hw.h	1321;"	d
E1000_RCTL_RDMTS_EIGTH	drivers/e1000-7.x/src/e1000_hw.h	1883;"	d
E1000_RCTL_RDMTS_HALF	drivers/e1000-4.x/src/e1000_hw.h	1140;"	d
E1000_RCTL_RDMTS_HALF	drivers/e1000-5.x/src/e1000_hw.h	1319;"	d
E1000_RCTL_RDMTS_HALF	drivers/e1000-7.x/src/e1000_hw.h	1881;"	d
E1000_RCTL_RDMTS_QUAT	drivers/e1000-4.x/src/e1000_hw.h	1141;"	d
E1000_RCTL_RDMTS_QUAT	drivers/e1000-5.x/src/e1000_hw.h	1320;"	d
E1000_RCTL_RDMTS_QUAT	drivers/e1000-7.x/src/e1000_hw.h	1882;"	d
E1000_RCTL_RST	drivers/e1000-4.x/src/e1000_hw.h	1130;"	d
E1000_RCTL_RST	drivers/e1000-5.x/src/e1000_hw.h	1309;"	d
E1000_RCTL_RST	drivers/e1000-7.x/src/e1000_hw.h	1869;"	d
E1000_RCTL_SBP	drivers/e1000-4.x/src/e1000_hw.h	1132;"	d
E1000_RCTL_SBP	drivers/e1000-5.x/src/e1000_hw.h	1311;"	d
E1000_RCTL_SBP	drivers/e1000-7.x/src/e1000_hw.h	1871;"	d
E1000_RCTL_SECRC	drivers/e1000-5.x/src/e1000_hw.h	1344;"	d
E1000_RCTL_SECRC	drivers/e1000-7.x/src/e1000_hw.h	1906;"	d
E1000_RCTL_SZ_1024	drivers/e1000-4.x/src/e1000_hw.h	1152;"	d
E1000_RCTL_SZ_1024	drivers/e1000-5.x/src/e1000_hw.h	1331;"	d
E1000_RCTL_SZ_1024	drivers/e1000-7.x/src/e1000_hw.h	1893;"	d
E1000_RCTL_SZ_16384	drivers/e1000-4.x/src/e1000_hw.h	1156;"	d
E1000_RCTL_SZ_16384	drivers/e1000-5.x/src/e1000_hw.h	1335;"	d
E1000_RCTL_SZ_16384	drivers/e1000-7.x/src/e1000_hw.h	1897;"	d
E1000_RCTL_SZ_2048	drivers/e1000-4.x/src/e1000_hw.h	1151;"	d
E1000_RCTL_SZ_2048	drivers/e1000-5.x/src/e1000_hw.h	1330;"	d
E1000_RCTL_SZ_2048	drivers/e1000-7.x/src/e1000_hw.h	1892;"	d
E1000_RCTL_SZ_256	drivers/e1000-4.x/src/e1000_hw.h	1154;"	d
E1000_RCTL_SZ_256	drivers/e1000-5.x/src/e1000_hw.h	1333;"	d
E1000_RCTL_SZ_256	drivers/e1000-7.x/src/e1000_hw.h	1895;"	d
E1000_RCTL_SZ_4096	drivers/e1000-4.x/src/e1000_hw.h	1158;"	d
E1000_RCTL_SZ_4096	drivers/e1000-5.x/src/e1000_hw.h	1337;"	d
E1000_RCTL_SZ_4096	drivers/e1000-7.x/src/e1000_hw.h	1899;"	d
E1000_RCTL_SZ_512	drivers/e1000-4.x/src/e1000_hw.h	1153;"	d
E1000_RCTL_SZ_512	drivers/e1000-5.x/src/e1000_hw.h	1332;"	d
E1000_RCTL_SZ_512	drivers/e1000-7.x/src/e1000_hw.h	1894;"	d
E1000_RCTL_SZ_8192	drivers/e1000-4.x/src/e1000_hw.h	1157;"	d
E1000_RCTL_SZ_8192	drivers/e1000-5.x/src/e1000_hw.h	1336;"	d
E1000_RCTL_SZ_8192	drivers/e1000-7.x/src/e1000_hw.h	1898;"	d
E1000_RCTL_UPE	drivers/e1000-4.x/src/e1000_hw.h	1133;"	d
E1000_RCTL_UPE	drivers/e1000-5.x/src/e1000_hw.h	1312;"	d
E1000_RCTL_UPE	drivers/e1000-7.x/src/e1000_hw.h	1872;"	d
E1000_RCTL_VFE	drivers/e1000-4.x/src/e1000_hw.h	1159;"	d
E1000_RCTL_VFE	drivers/e1000-5.x/src/e1000_hw.h	1338;"	d
E1000_RCTL_VFE	drivers/e1000-7.x/src/e1000_hw.h	1900;"	d
E1000_RDBAH	drivers/e1000-4.x/src/e1000_hw.h	560;"	d
E1000_RDBAH	drivers/e1000-5.x/src/e1000_hw.h	697;"	d
E1000_RDBAH	drivers/e1000-7.x/src/e1000_hw.h	941;"	d
E1000_RDBAH0	drivers/e1000-7.x/src/e1000_hw.h	947;"	d
E1000_RDBAH1	drivers/e1000-7.x/src/e1000_hw.h	908;"	d
E1000_RDBAL	drivers/e1000-4.x/src/e1000_hw.h	559;"	d
E1000_RDBAL	drivers/e1000-5.x/src/e1000_hw.h	696;"	d
E1000_RDBAL	drivers/e1000-7.x/src/e1000_hw.h	940;"	d
E1000_RDBAL0	drivers/e1000-7.x/src/e1000_hw.h	946;"	d
E1000_RDBAL1	drivers/e1000-7.x/src/e1000_hw.h	907;"	d
E1000_RDH	drivers/e1000-4.x/src/e1000_hw.h	562;"	d
E1000_RDH	drivers/e1000-5.x/src/e1000_hw.h	699;"	d
E1000_RDH	drivers/e1000-7.x/src/e1000_hw.h	943;"	d
E1000_RDH0	drivers/e1000-7.x/src/e1000_hw.h	949;"	d
E1000_RDH1	drivers/e1000-7.x/src/e1000_hw.h	910;"	d
E1000_RDH_RDH	drivers/e1000-4.x/src/e1000_hw.h	1170;"	d
E1000_RDH_RDH	drivers/e1000-5.x/src/e1000_hw.h	1350;"	d
E1000_RDH_RDH	drivers/e1000-7.x/src/e1000_hw.h	1946;"	d
E1000_RDLEN	drivers/e1000-4.x/src/e1000_hw.h	561;"	d
E1000_RDLEN	drivers/e1000-5.x/src/e1000_hw.h	698;"	d
E1000_RDLEN	drivers/e1000-7.x/src/e1000_hw.h	942;"	d
E1000_RDLEN0	drivers/e1000-7.x/src/e1000_hw.h	948;"	d
E1000_RDLEN1	drivers/e1000-7.x/src/e1000_hw.h	909;"	d
E1000_RDLEN_LEN	drivers/e1000-4.x/src/e1000_hw.h	1169;"	d
E1000_RDLEN_LEN	drivers/e1000-5.x/src/e1000_hw.h	1349;"	d
E1000_RDLEN_LEN	drivers/e1000-7.x/src/e1000_hw.h	1945;"	d
E1000_RDT	drivers/e1000-4.x/src/e1000_hw.h	563;"	d
E1000_RDT	drivers/e1000-5.x/src/e1000_hw.h	700;"	d
E1000_RDT	drivers/e1000-7.x/src/e1000_hw.h	944;"	d
E1000_RDT0	drivers/e1000-7.x/src/e1000_hw.h	950;"	d
E1000_RDT1	drivers/e1000-7.x/src/e1000_hw.h	911;"	d
E1000_RDTR	drivers/e1000-4.x/src/e1000_hw.h	564;"	d
E1000_RDTR	drivers/e1000-5.x/src/e1000_hw.h	701;"	d
E1000_RDTR	drivers/e1000-7.x/src/e1000_hw.h	945;"	d
E1000_RDTR0	drivers/e1000-7.x/src/e1000_hw.h	951;"	d
E1000_RDTR1	drivers/e1000-7.x/src/e1000_hw.h	906;"	d
E1000_RDT_DELAY	drivers/e1000-4.x/src/e1000_hw.h	1167;"	d
E1000_RDT_DELAY	drivers/e1000-5.x/src/e1000_hw.h	1347;"	d
E1000_RDT_DELAY	drivers/e1000-7.x/src/e1000_hw.h	1943;"	d
E1000_RDT_FPDB	drivers/e1000-4.x/src/e1000_hw.h	1168;"	d
E1000_RDT_FPDB	drivers/e1000-5.x/src/e1000_hw.h	1348;"	d
E1000_RDT_FPDB	drivers/e1000-7.x/src/e1000_hw.h	1944;"	d
E1000_RDT_RDT	drivers/e1000-4.x/src/e1000_hw.h	1171;"	d
E1000_RDT_RDT	drivers/e1000-5.x/src/e1000_hw.h	1351;"	d
E1000_RDT_RDT	drivers/e1000-7.x/src/e1000_hw.h	1947;"	d
E1000_READ_ICH_FLASH_REG	drivers/e1000-7.x/src/e1000_osdep.h	130;"	d
E1000_READ_ICH_FLASH_REG16	drivers/e1000-7.x/src/e1000_osdep.h	136;"	d
E1000_READ_REG	drivers/e1000-4.x/src/e1000_osdep.h	85;"	d
E1000_READ_REG	drivers/e1000-5.x/src/e1000_osdep.h	87;"	d
E1000_READ_REG	drivers/e1000-7.x/src/e1000_osdep.h	88;"	d
E1000_READ_REG_ARRAY	drivers/e1000-4.x/src/e1000_osdep.h	95;"	d
E1000_READ_REG_ARRAY	drivers/e1000-5.x/src/e1000_osdep.h	96;"	d
E1000_READ_REG_ARRAY	drivers/e1000-7.x/src/e1000_osdep.h	97;"	d
E1000_READ_REG_ARRAY_BYTE	drivers/e1000-7.x/src/e1000_osdep.h	120;"	d
E1000_READ_REG_ARRAY_DWORD	drivers/e1000-7.x/src/e1000_osdep.h	102;"	d
E1000_READ_REG_ARRAY_WORD	drivers/e1000-7.x/src/e1000_osdep.h	110;"	d
E1000_READ_REG_IO	drivers/e1000-4.x/src/e1000_hw.h	234;"	d
E1000_READ_REG_IO	drivers/e1000-5.x/src/e1000_hw.h	345;"	d
E1000_READ_REG_IO	drivers/e1000-7.x/src/e1000_hw.h	432;"	d
E1000_REGS_LEN	drivers/e1000-4.x/src/e1000_ethtool.c	181;"	d	file:
E1000_REGS_LEN	drivers/e1000-5.x/src/e1000_ethtool.c	353;"	d	file:
E1000_REGS_LEN	drivers/e1000-7.x/src/e1000_ethtool.c	405;"	d	file:
E1000_RETA	drivers/e1000-7.x/src/e1000_hw.h	1087;"	d
E1000_REVISION_0	drivers/e1000-5.x/src/e1000_hw.h	392;"	d
E1000_REVISION_0	drivers/e1000-7.x/src/e1000_hw.h	510;"	d
E1000_REVISION_1	drivers/e1000-5.x/src/e1000_hw.h	393;"	d
E1000_REVISION_1	drivers/e1000-7.x/src/e1000_hw.h	511;"	d
E1000_REVISION_2	drivers/e1000-5.x/src/e1000_hw.h	394;"	d
E1000_REVISION_2	drivers/e1000-7.x/src/e1000_hw.h	512;"	d
E1000_REVISION_3	drivers/e1000-5.x/src/e1000_hw.h	395;"	d
E1000_REVISION_3	drivers/e1000-7.x/src/e1000_hw.h	513;"	d
E1000_RFC	drivers/e1000-4.x/src/e1000_hw.h	614;"	d
E1000_RFC	drivers/e1000-5.x/src/e1000_hw.h	756;"	d
E1000_RFC	drivers/e1000-7.x/src/e1000_hw.h	1017;"	d
E1000_RFCTL	drivers/e1000-7.x/src/e1000_hw.h	1050;"	d
E1000_RFCTL_ACKD_DIS	drivers/e1000-7.x/src/e1000_hw.h	1973;"	d
E1000_RFCTL_ACK_DIS	drivers/e1000-7.x/src/e1000_hw.h	1972;"	d
E1000_RFCTL_EXTEN	drivers/e1000-7.x/src/e1000_hw.h	1975;"	d
E1000_RFCTL_IPFRSP_DIS	drivers/e1000-7.x/src/e1000_hw.h	1974;"	d
E1000_RFCTL_IPV6_DIS	drivers/e1000-7.x/src/e1000_hw.h	1970;"	d
E1000_RFCTL_IPV6_EX_DIS	drivers/e1000-7.x/src/e1000_hw.h	1976;"	d
E1000_RFCTL_IPV6_XSUM_DIS	drivers/e1000-7.x/src/e1000_hw.h	1971;"	d
E1000_RFCTL_ISCSI_DIS	drivers/e1000-7.x/src/e1000_hw.h	1963;"	d
E1000_RFCTL_ISCSI_DWC_MASK	drivers/e1000-7.x/src/e1000_hw.h	1964;"	d
E1000_RFCTL_ISCSI_DWC_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1965;"	d
E1000_RFCTL_NEW_IPV6_EXT_DIS	drivers/e1000-7.x/src/e1000_hw.h	1977;"	d
E1000_RFCTL_NFSR_DIS	drivers/e1000-7.x/src/e1000_hw.h	1967;"	d
E1000_RFCTL_NFSW_DIS	drivers/e1000-7.x/src/e1000_hw.h	1966;"	d
E1000_RFCTL_NFS_VER_MASK	drivers/e1000-7.x/src/e1000_hw.h	1968;"	d
E1000_RFCTL_NFS_VER_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1969;"	d
E1000_RJC	drivers/e1000-4.x/src/e1000_hw.h	616;"	d
E1000_RJC	drivers/e1000-5.x/src/e1000_hw.h	758;"	d
E1000_RJC	drivers/e1000-7.x/src/e1000_hw.h	1019;"	d
E1000_RLEC	drivers/e1000-4.x/src/e1000_hw.h	592;"	d
E1000_RLEC	drivers/e1000-5.x/src/e1000_hw.h	734;"	d
E1000_RLEC	drivers/e1000-7.x/src/e1000_hw.h	995;"	d
E1000_RLPML	drivers/e1000-7.x/src/e1000_hw.h	1049;"	d
E1000_RNBC	drivers/e1000-4.x/src/e1000_hw.h	612;"	d
E1000_RNBC	drivers/e1000-5.x/src/e1000_hw.h	754;"	d
E1000_RNBC	drivers/e1000-7.x/src/e1000_hw.h	1015;"	d
E1000_ROC	drivers/e1000-4.x/src/e1000_hw.h	615;"	d
E1000_ROC	drivers/e1000-5.x/src/e1000_hw.h	757;"	d
E1000_ROC	drivers/e1000-7.x/src/e1000_hw.h	1018;"	d
E1000_ROUNDUP	drivers/e1000-4.x/src/e1000.h	123;"	d
E1000_ROUNDUP	drivers/e1000-5.x/src/e1000.h	158;"	d
E1000_ROUNDUP	drivers/e1000-7.x/src/e1000.h	168;"	d
E1000_RSRPD	drivers/e1000-4.x/src/e1000_hw.h	567;"	d
E1000_RSRPD	drivers/e1000-5.x/src/e1000_hw.h	704;"	d
E1000_RSRPD	drivers/e1000-7.x/src/e1000_hw.h	955;"	d
E1000_RSSIM	drivers/e1000-7.x/src/e1000_hw.h	1089;"	d
E1000_RSSIR	drivers/e1000-7.x/src/e1000_hw.h	1090;"	d
E1000_RSSRK	drivers/e1000-7.x/src/e1000_hw.h	1088;"	d
E1000_RUC	drivers/e1000-4.x/src/e1000_hw.h	613;"	d
E1000_RUC	drivers/e1000-5.x/src/e1000_hw.h	755;"	d
E1000_RUC	drivers/e1000-7.x/src/e1000_hw.h	1016;"	d
E1000_RXBUFFER_1024	drivers/e1000-7.x/src/e1000.h	125;"	d
E1000_RXBUFFER_128	drivers/e1000-7.x/src/e1000.h	122;"	d
E1000_RXBUFFER_16384	drivers/e1000-4.x/src/e1000.h	110;"	d
E1000_RXBUFFER_16384	drivers/e1000-5.x/src/e1000.h	126;"	d
E1000_RXBUFFER_16384	drivers/e1000-7.x/src/e1000.h	129;"	d
E1000_RXBUFFER_2048	drivers/e1000-4.x/src/e1000.h	107;"	d
E1000_RXBUFFER_2048	drivers/e1000-5.x/src/e1000.h	123;"	d
E1000_RXBUFFER_2048	drivers/e1000-7.x/src/e1000.h	126;"	d
E1000_RXBUFFER_256	drivers/e1000-7.x/src/e1000.h	123;"	d
E1000_RXBUFFER_4096	drivers/e1000-4.x/src/e1000.h	108;"	d
E1000_RXBUFFER_4096	drivers/e1000-5.x/src/e1000.h	124;"	d
E1000_RXBUFFER_4096	drivers/e1000-7.x/src/e1000.h	127;"	d
E1000_RXBUFFER_512	drivers/e1000-7.x/src/e1000.h	124;"	d
E1000_RXBUFFER_8192	drivers/e1000-4.x/src/e1000.h	109;"	d
E1000_RXBUFFER_8192	drivers/e1000-5.x/src/e1000.h	125;"	d
E1000_RXBUFFER_8192	drivers/e1000-7.x/src/e1000.h	128;"	d
E1000_RXCSUM	drivers/e1000-4.x/src/e1000_hw.h	636;"	d
E1000_RXCSUM	drivers/e1000-5.x/src/e1000_hw.h	778;"	d
E1000_RXCSUM	drivers/e1000-7.x/src/e1000_hw.h	1048;"	d
E1000_RXCSUM_IPOFL	drivers/e1000-4.x/src/e1000_hw.h	1228;"	d
E1000_RXCSUM_IPOFL	drivers/e1000-5.x/src/e1000_hw.h	1410;"	d
E1000_RXCSUM_IPOFL	drivers/e1000-7.x/src/e1000_hw.h	2035;"	d
E1000_RXCSUM_IPPCSE	drivers/e1000-7.x/src/e1000_hw.h	2038;"	d
E1000_RXCSUM_IPV6OFL	drivers/e1000-4.x/src/e1000_hw.h	1230;"	d
E1000_RXCSUM_IPV6OFL	drivers/e1000-5.x/src/e1000_hw.h	1412;"	d
E1000_RXCSUM_IPV6OFL	drivers/e1000-7.x/src/e1000_hw.h	2037;"	d
E1000_RXCSUM_PCSD	drivers/e1000-7.x/src/e1000_hw.h	2039;"	d
E1000_RXCSUM_PCSS_MASK	drivers/e1000-4.x/src/e1000_hw.h	1227;"	d
E1000_RXCSUM_PCSS_MASK	drivers/e1000-5.x/src/e1000_hw.h	1409;"	d
E1000_RXCSUM_PCSS_MASK	drivers/e1000-7.x/src/e1000_hw.h	2034;"	d
E1000_RXCSUM_TUOFL	drivers/e1000-4.x/src/e1000_hw.h	1229;"	d
E1000_RXCSUM_TUOFL	drivers/e1000-5.x/src/e1000_hw.h	1411;"	d
E1000_RXCSUM_TUOFL	drivers/e1000-7.x/src/e1000_hw.h	2036;"	d
E1000_RXCW	drivers/e1000-4.x/src/e1000_hw.h	550;"	d
E1000_RXCW	drivers/e1000-5.x/src/e1000_hw.h	686;"	d
E1000_RXCW	drivers/e1000-7.x/src/e1000_hw.h	914;"	d
E1000_RXCW_ANC	drivers/e1000-4.x/src/e1000_hw.h	1212;"	d
E1000_RXCW_ANC	drivers/e1000-5.x/src/e1000_hw.h	1394;"	d
E1000_RXCW_ANC	drivers/e1000-7.x/src/e1000_hw.h	2013;"	d
E1000_RXCW_C	drivers/e1000-4.x/src/e1000_hw.h	1210;"	d
E1000_RXCW_C	drivers/e1000-5.x/src/e1000_hw.h	1392;"	d
E1000_RXCW_C	drivers/e1000-7.x/src/e1000_hw.h	2011;"	d
E1000_RXCW_CC	drivers/e1000-4.x/src/e1000_hw.h	1209;"	d
E1000_RXCW_CC	drivers/e1000-5.x/src/e1000_hw.h	1391;"	d
E1000_RXCW_CC	drivers/e1000-7.x/src/e1000_hw.h	2010;"	d
E1000_RXCW_CW	drivers/e1000-4.x/src/e1000_hw.h	1206;"	d
E1000_RXCW_CW	drivers/e1000-5.x/src/e1000_hw.h	1388;"	d
E1000_RXCW_CW	drivers/e1000-7.x/src/e1000_hw.h	2007;"	d
E1000_RXCW_IV	drivers/e1000-4.x/src/e1000_hw.h	1208;"	d
E1000_RXCW_IV	drivers/e1000-5.x/src/e1000_hw.h	1390;"	d
E1000_RXCW_IV	drivers/e1000-7.x/src/e1000_hw.h	2009;"	d
E1000_RXCW_NC	drivers/e1000-4.x/src/e1000_hw.h	1207;"	d
E1000_RXCW_NC	drivers/e1000-5.x/src/e1000_hw.h	1389;"	d
E1000_RXCW_NC	drivers/e1000-7.x/src/e1000_hw.h	2008;"	d
E1000_RXCW_SYNCH	drivers/e1000-4.x/src/e1000_hw.h	1211;"	d
E1000_RXCW_SYNCH	drivers/e1000-5.x/src/e1000_hw.h	1393;"	d
E1000_RXCW_SYNCH	drivers/e1000-7.x/src/e1000_hw.h	2012;"	d
E1000_RXDCTL	drivers/e1000-4.x/src/e1000_hw.h	565;"	d
E1000_RXDCTL	drivers/e1000-5.x/src/e1000_hw.h	702;"	d
E1000_RXDCTL	drivers/e1000-7.x/src/e1000_hw.h	952;"	d
E1000_RXDCTL1	drivers/e1000-7.x/src/e1000_hw.h	953;"	d
E1000_RXDCTL_GRAN	drivers/e1000-4.x/src/e1000_hw.h	1183;"	d
E1000_RXDCTL_GRAN	drivers/e1000-5.x/src/e1000_hw.h	1363;"	d
E1000_RXDCTL_GRAN	drivers/e1000-7.x/src/e1000_hw.h	1983;"	d
E1000_RXDCTL_HTHRESH	drivers/e1000-4.x/src/e1000_hw.h	1181;"	d
E1000_RXDCTL_HTHRESH	drivers/e1000-5.x/src/e1000_hw.h	1361;"	d
E1000_RXDCTL_HTHRESH	drivers/e1000-7.x/src/e1000_hw.h	1981;"	d
E1000_RXDCTL_PTHRESH	drivers/e1000-4.x/src/e1000_hw.h	1180;"	d
E1000_RXDCTL_PTHRESH	drivers/e1000-5.x/src/e1000_hw.h	1360;"	d
E1000_RXDCTL_PTHRESH	drivers/e1000-7.x/src/e1000_hw.h	1980;"	d
E1000_RXDCTL_WTHRESH	drivers/e1000-4.x/src/e1000_hw.h	1182;"	d
E1000_RXDCTL_WTHRESH	drivers/e1000-5.x/src/e1000_hw.h	1362;"	d
E1000_RXDCTL_WTHRESH	drivers/e1000-7.x/src/e1000_hw.h	1982;"	d
E1000_RXDEXT_ERR_FRAME_ERR_MASK	drivers/e1000-7.x/src/e1000_hw.h	706;"	d
E1000_RXDEXT_STATERR_CE	drivers/e1000-7.x/src/e1000_hw.h	685;"	d
E1000_RXDEXT_STATERR_CXE	drivers/e1000-7.x/src/e1000_hw.h	688;"	d
E1000_RXDEXT_STATERR_IPE	drivers/e1000-7.x/src/e1000_hw.h	690;"	d
E1000_RXDEXT_STATERR_RXE	drivers/e1000-7.x/src/e1000_hw.h	691;"	d
E1000_RXDEXT_STATERR_SE	drivers/e1000-7.x/src/e1000_hw.h	686;"	d
E1000_RXDEXT_STATERR_SEQ	drivers/e1000-7.x/src/e1000_hw.h	687;"	d
E1000_RXDEXT_STATERR_TCPE	drivers/e1000-7.x/src/e1000_hw.h	689;"	d
E1000_RXDPS_HDRSTAT_HDRLEN_MASK	drivers/e1000-7.x/src/e1000_hw.h	694;"	d
E1000_RXDPS_HDRSTAT_HDRSP	drivers/e1000-7.x/src/e1000_hw.h	693;"	d
E1000_RXD_ERR_CE	drivers/e1000-4.x/src/e1000_hw.h	347;"	d
E1000_RXD_ERR_CE	drivers/e1000-5.x/src/e1000_hw.h	480;"	d
E1000_RXD_ERR_CE	drivers/e1000-7.x/src/e1000_hw.h	672;"	d
E1000_RXD_ERR_CXE	drivers/e1000-4.x/src/e1000_hw.h	350;"	d
E1000_RXD_ERR_CXE	drivers/e1000-5.x/src/e1000_hw.h	483;"	d
E1000_RXD_ERR_CXE	drivers/e1000-7.x/src/e1000_hw.h	675;"	d
E1000_RXD_ERR_FRAME_ERR_MASK	drivers/e1000-4.x/src/e1000_hw.h	361;"	d
E1000_RXD_ERR_FRAME_ERR_MASK	drivers/e1000-5.x/src/e1000_hw.h	494;"	d
E1000_RXD_ERR_FRAME_ERR_MASK	drivers/e1000-7.x/src/e1000_hw.h	697;"	d
E1000_RXD_ERR_IPE	drivers/e1000-4.x/src/e1000_hw.h	352;"	d
E1000_RXD_ERR_IPE	drivers/e1000-5.x/src/e1000_hw.h	485;"	d
E1000_RXD_ERR_IPE	drivers/e1000-7.x/src/e1000_hw.h	677;"	d
E1000_RXD_ERR_RXE	drivers/e1000-4.x/src/e1000_hw.h	353;"	d
E1000_RXD_ERR_RXE	drivers/e1000-5.x/src/e1000_hw.h	486;"	d
E1000_RXD_ERR_RXE	drivers/e1000-7.x/src/e1000_hw.h	678;"	d
E1000_RXD_ERR_SE	drivers/e1000-4.x/src/e1000_hw.h	348;"	d
E1000_RXD_ERR_SE	drivers/e1000-5.x/src/e1000_hw.h	481;"	d
E1000_RXD_ERR_SE	drivers/e1000-7.x/src/e1000_hw.h	673;"	d
E1000_RXD_ERR_SEQ	drivers/e1000-4.x/src/e1000_hw.h	349;"	d
E1000_RXD_ERR_SEQ	drivers/e1000-5.x/src/e1000_hw.h	482;"	d
E1000_RXD_ERR_SEQ	drivers/e1000-7.x/src/e1000_hw.h	674;"	d
E1000_RXD_ERR_TCPE	drivers/e1000-4.x/src/e1000_hw.h	351;"	d
E1000_RXD_ERR_TCPE	drivers/e1000-5.x/src/e1000_hw.h	484;"	d
E1000_RXD_ERR_TCPE	drivers/e1000-7.x/src/e1000_hw.h	676;"	d
E1000_RXD_SPC_CFI_MASK	drivers/e1000-4.x/src/e1000_hw.h	357;"	d
E1000_RXD_SPC_CFI_MASK	drivers/e1000-5.x/src/e1000_hw.h	490;"	d
E1000_RXD_SPC_CFI_MASK	drivers/e1000-7.x/src/e1000_hw.h	682;"	d
E1000_RXD_SPC_CFI_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	358;"	d
E1000_RXD_SPC_CFI_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	491;"	d
E1000_RXD_SPC_CFI_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	683;"	d
E1000_RXD_SPC_PRI_MASK	drivers/e1000-4.x/src/e1000_hw.h	355;"	d
E1000_RXD_SPC_PRI_MASK	drivers/e1000-5.x/src/e1000_hw.h	488;"	d
E1000_RXD_SPC_PRI_MASK	drivers/e1000-7.x/src/e1000_hw.h	680;"	d
E1000_RXD_SPC_PRI_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	356;"	d
E1000_RXD_SPC_PRI_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	489;"	d
E1000_RXD_SPC_PRI_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	681;"	d
E1000_RXD_SPC_VLAN_MASK	drivers/e1000-4.x/src/e1000_hw.h	354;"	d
E1000_RXD_SPC_VLAN_MASK	drivers/e1000-5.x/src/e1000_hw.h	487;"	d
E1000_RXD_SPC_VLAN_MASK	drivers/e1000-7.x/src/e1000_hw.h	679;"	d
E1000_RXD_STAT_ACK	drivers/e1000-7.x/src/e1000_hw.h	671;"	d
E1000_RXD_STAT_DD	drivers/e1000-4.x/src/e1000_hw.h	340;"	d
E1000_RXD_STAT_DD	drivers/e1000-5.x/src/e1000_hw.h	473;"	d
E1000_RXD_STAT_DD	drivers/e1000-7.x/src/e1000_hw.h	661;"	d
E1000_RXD_STAT_EOP	drivers/e1000-4.x/src/e1000_hw.h	341;"	d
E1000_RXD_STAT_EOP	drivers/e1000-5.x/src/e1000_hw.h	474;"	d
E1000_RXD_STAT_EOP	drivers/e1000-7.x/src/e1000_hw.h	662;"	d
E1000_RXD_STAT_IPCS	drivers/e1000-4.x/src/e1000_hw.h	345;"	d
E1000_RXD_STAT_IPCS	drivers/e1000-5.x/src/e1000_hw.h	478;"	d
E1000_RXD_STAT_IPCS	drivers/e1000-7.x/src/e1000_hw.h	667;"	d
E1000_RXD_STAT_IPIDV	drivers/e1000-7.x/src/e1000_hw.h	669;"	d
E1000_RXD_STAT_IXSM	drivers/e1000-4.x/src/e1000_hw.h	342;"	d
E1000_RXD_STAT_IXSM	drivers/e1000-5.x/src/e1000_hw.h	475;"	d
E1000_RXD_STAT_IXSM	drivers/e1000-7.x/src/e1000_hw.h	663;"	d
E1000_RXD_STAT_PIF	drivers/e1000-4.x/src/e1000_hw.h	346;"	d
E1000_RXD_STAT_PIF	drivers/e1000-5.x/src/e1000_hw.h	479;"	d
E1000_RXD_STAT_PIF	drivers/e1000-7.x/src/e1000_hw.h	668;"	d
E1000_RXD_STAT_TCPCS	drivers/e1000-4.x/src/e1000_hw.h	344;"	d
E1000_RXD_STAT_TCPCS	drivers/e1000-5.x/src/e1000_hw.h	477;"	d
E1000_RXD_STAT_TCPCS	drivers/e1000-7.x/src/e1000_hw.h	666;"	d
E1000_RXD_STAT_UDPCS	drivers/e1000-7.x/src/e1000_hw.h	665;"	d
E1000_RXD_STAT_UDPV	drivers/e1000-7.x/src/e1000_hw.h	670;"	d
E1000_RXD_STAT_VP	drivers/e1000-4.x/src/e1000_hw.h	343;"	d
E1000_RXD_STAT_VP	drivers/e1000-5.x/src/e1000_hw.h	476;"	d
E1000_RXD_STAT_VP	drivers/e1000-7.x/src/e1000_hw.h	664;"	d
E1000_RXERRC	drivers/e1000-4.x/src/e1000_hw.h	581;"	d
E1000_RXERRC	drivers/e1000-5.x/src/e1000_hw.h	723;"	d
E1000_RXERRC	drivers/e1000-7.x/src/e1000_hw.h	984;"	d
E1000_RX_BUFFER_WRITE	drivers/e1000-4.x/src/e1000.h	115;"	d
E1000_RX_BUFFER_WRITE	drivers/e1000-5.x/src/e1000.h	146;"	d
E1000_RX_BUFFER_WRITE	drivers/e1000-7.x/src/e1000.h	149;"	d
E1000_RX_DESC	drivers/e1000-4.x/src/e1000.h	157;"	d
E1000_RX_DESC	drivers/e1000-5.x/src/e1000.h	198;"	d
E1000_RX_DESC	drivers/e1000-7.x/src/e1000.h	241;"	d
E1000_RX_DESC_EXT	drivers/e1000-7.x/src/e1000.h	238;"	d
E1000_RX_DESC_PS	drivers/e1000-7.x/src/e1000.h	236;"	d
E1000_RX_DESC_UNUSED	drivers/e1000-4.x/src/e1000.h	153;"	d
E1000_RX_DESC_UNUSED	drivers/e1000-5.x/src/e1000.h	190;"	d
E1000_RX_STATE_LOCKUP	drivers/e1000-7.x/src/e1000.h	247;"	d
E1000_RX_STATE_NORMAL	drivers/e1000-7.x/src/e1000.h	245;"	d
E1000_RX_STATE_QUIET	drivers/e1000-7.x/src/e1000.h	246;"	d
E1000_SCC	drivers/e1000-4.x/src/e1000_hw.h	583;"	d
E1000_SCC	drivers/e1000-5.x/src/e1000_hw.h	725;"	d
E1000_SCC	drivers/e1000-7.x/src/e1000_hw.h	986;"	d
E1000_SCTL	drivers/e1000-7.x/src/e1000_hw.h	893;"	d
E1000_SEC	drivers/e1000-4.x/src/e1000_hw.h	590;"	d
E1000_SEC	drivers/e1000-5.x/src/e1000_hw.h	732;"	d
E1000_SEC	drivers/e1000-7.x/src/e1000_hw.h	993;"	d
E1000_SERDES_LB_OFF	drivers/e1000-7.x/src/e1000_ethtool.c	1471;"	d	file:
E1000_SERDES_LB_ON	drivers/e1000-7.x/src/e1000_ethtool.c	1437;"	d	file:
E1000_SHADOW_RAM_WORDS	drivers/e1000-7.x/src/e1000_hw.h	1590;"	d
E1000_SMARTSPEED_DOWNSHIFT	drivers/e1000-5.x/src/e1000.h	129;"	d
E1000_SMARTSPEED_DOWNSHIFT	drivers/e1000-7.x/src/e1000.h	132;"	d
E1000_SMARTSPEED_MAX	drivers/e1000-5.x/src/e1000.h	130;"	d
E1000_SMARTSPEED_MAX	drivers/e1000-7.x/src/e1000.h	133;"	d
E1000_STAT	drivers/e1000-5.x/src/e1000_ethtool.c	66;"	d	file:
E1000_STAT	drivers/e1000-7.x/src/e1000_ethtool.c	61;"	d	file:
E1000_STATS_LEN	drivers/e1000-5.x/src/e1000_ethtool.c	107;"	d	file:
E1000_STATS_LEN	drivers/e1000-7.x/src/e1000_ethtool.c	128;"	d	file:
E1000_STATUS	drivers/e1000-4.x/src/e1000_hw.h	533;"	d
E1000_STATUS	drivers/e1000-5.x/src/e1000_hw.h	668;"	d
E1000_STATUS	drivers/e1000-7.x/src/e1000_hw.h	887;"	d
E1000_STATUS_ASDV	drivers/e1000-4.x/src/e1000_hw.h	949;"	d
E1000_STATUS_ASDV	drivers/e1000-5.x/src/e1000_hw.h	1115;"	d
E1000_STATUS_ASDV	drivers/e1000-7.x/src/e1000_hw.h	1533;"	d
E1000_STATUS_BMC_CRYPTO	drivers/e1000-7.x/src/e1000_hw.h	1544;"	d
E1000_STATUS_BMC_LITE	drivers/e1000-7.x/src/e1000_hw.h	1545;"	d
E1000_STATUS_BMC_SKU_0	drivers/e1000-7.x/src/e1000_hw.h	1541;"	d
E1000_STATUS_BMC_SKU_1	drivers/e1000-7.x/src/e1000_hw.h	1542;"	d
E1000_STATUS_BMC_SKU_2	drivers/e1000-7.x/src/e1000_hw.h	1543;"	d
E1000_STATUS_BUS64	drivers/e1000-4.x/src/e1000_hw.h	952;"	d
E1000_STATUS_BUS64	drivers/e1000-5.x/src/e1000_hw.h	1118;"	d
E1000_STATUS_BUS64	drivers/e1000-7.x/src/e1000_hw.h	1538;"	d
E1000_STATUS_DOCK_CI	drivers/e1000-7.x/src/e1000_hw.h	1534;"	d
E1000_STATUS_FD	drivers/e1000-4.x/src/e1000_hw.h	938;"	d
E1000_STATUS_FD	drivers/e1000-5.x/src/e1000_hw.h	1104;"	d
E1000_STATUS_FD	drivers/e1000-7.x/src/e1000_hw.h	1519;"	d
E1000_STATUS_FUNC_0	drivers/e1000-4.x/src/e1000_hw.h	941;"	d
E1000_STATUS_FUNC_0	drivers/e1000-5.x/src/e1000_hw.h	1107;"	d
E1000_STATUS_FUNC_0	drivers/e1000-7.x/src/e1000_hw.h	1523;"	d
E1000_STATUS_FUNC_1	drivers/e1000-4.x/src/e1000_hw.h	942;"	d
E1000_STATUS_FUNC_1	drivers/e1000-5.x/src/e1000_hw.h	1108;"	d
E1000_STATUS_FUNC_1	drivers/e1000-7.x/src/e1000_hw.h	1524;"	d
E1000_STATUS_FUNC_MASK	drivers/e1000-4.x/src/e1000_hw.h	940;"	d
E1000_STATUS_FUNC_MASK	drivers/e1000-5.x/src/e1000_hw.h	1106;"	d
E1000_STATUS_FUNC_MASK	drivers/e1000-7.x/src/e1000_hw.h	1521;"	d
E1000_STATUS_FUNC_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	1522;"	d
E1000_STATUS_FUSE_8	drivers/e1000-7.x/src/e1000_hw.h	1547;"	d
E1000_STATUS_FUSE_9	drivers/e1000-7.x/src/e1000_hw.h	1548;"	d
E1000_STATUS_GIO_MASTER_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	1535;"	d
E1000_STATUS_LAN_INIT_DONE	drivers/e1000-7.x/src/e1000_hw.h	1531;"	d
E1000_STATUS_LU	drivers/e1000-4.x/src/e1000_hw.h	939;"	d
E1000_STATUS_LU	drivers/e1000-5.x/src/e1000_hw.h	1105;"	d
E1000_STATUS_LU	drivers/e1000-7.x/src/e1000_hw.h	1520;"	d
E1000_STATUS_MTXCKOK	drivers/e1000-4.x/src/e1000_hw.h	950;"	d
E1000_STATUS_MTXCKOK	drivers/e1000-5.x/src/e1000_hw.h	1116;"	d
E1000_STATUS_MTXCKOK	drivers/e1000-7.x/src/e1000_hw.h	1536;"	d
E1000_STATUS_PCI66	drivers/e1000-4.x/src/e1000_hw.h	951;"	d
E1000_STATUS_PCI66	drivers/e1000-5.x/src/e1000_hw.h	1117;"	d
E1000_STATUS_PCI66	drivers/e1000-7.x/src/e1000_hw.h	1537;"	d
E1000_STATUS_PCIX_MODE	drivers/e1000-4.x/src/e1000_hw.h	953;"	d
E1000_STATUS_PCIX_MODE	drivers/e1000-5.x/src/e1000_hw.h	1119;"	d
E1000_STATUS_PCIX_MODE	drivers/e1000-7.x/src/e1000_hw.h	1539;"	d
E1000_STATUS_PCIX_SPEED	drivers/e1000-4.x/src/e1000_hw.h	954;"	d
E1000_STATUS_PCIX_SPEED	drivers/e1000-5.x/src/e1000_hw.h	1120;"	d
E1000_STATUS_PCIX_SPEED	drivers/e1000-7.x/src/e1000_hw.h	1540;"	d
E1000_STATUS_PCIX_SPEED_100	drivers/e1000-4.x/src/e1000_hw.h	958;"	d
E1000_STATUS_PCIX_SPEED_100	drivers/e1000-5.x/src/e1000_hw.h	1124;"	d
E1000_STATUS_PCIX_SPEED_100	drivers/e1000-7.x/src/e1000_hw.h	1554;"	d
E1000_STATUS_PCIX_SPEED_133	drivers/e1000-4.x/src/e1000_hw.h	959;"	d
E1000_STATUS_PCIX_SPEED_133	drivers/e1000-5.x/src/e1000_hw.h	1125;"	d
E1000_STATUS_PCIX_SPEED_133	drivers/e1000-7.x/src/e1000_hw.h	1555;"	d
E1000_STATUS_PCIX_SPEED_66	drivers/e1000-4.x/src/e1000_hw.h	957;"	d
E1000_STATUS_PCIX_SPEED_66	drivers/e1000-5.x/src/e1000_hw.h	1123;"	d
E1000_STATUS_PCIX_SPEED_66	drivers/e1000-7.x/src/e1000_hw.h	1553;"	d
E1000_STATUS_RGMII_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	1546;"	d
E1000_STATUS_SERDES0_DIS	drivers/e1000-7.x/src/e1000_hw.h	1549;"	d
E1000_STATUS_SERDES1_DIS	drivers/e1000-7.x/src/e1000_hw.h	1550;"	d
E1000_STATUS_SPEED_10	drivers/e1000-4.x/src/e1000_hw.h	946;"	d
E1000_STATUS_SPEED_10	drivers/e1000-5.x/src/e1000_hw.h	1112;"	d
E1000_STATUS_SPEED_10	drivers/e1000-7.x/src/e1000_hw.h	1528;"	d
E1000_STATUS_SPEED_100	drivers/e1000-4.x/src/e1000_hw.h	947;"	d
E1000_STATUS_SPEED_100	drivers/e1000-5.x/src/e1000_hw.h	1113;"	d
E1000_STATUS_SPEED_100	drivers/e1000-7.x/src/e1000_hw.h	1529;"	d
E1000_STATUS_SPEED_1000	drivers/e1000-4.x/src/e1000_hw.h	948;"	d
E1000_STATUS_SPEED_1000	drivers/e1000-5.x/src/e1000_hw.h	1114;"	d
E1000_STATUS_SPEED_1000	drivers/e1000-7.x/src/e1000_hw.h	1530;"	d
E1000_STATUS_SPEED_MASK	drivers/e1000-4.x/src/e1000_hw.h	945;"	d
E1000_STATUS_SPEED_MASK	drivers/e1000-5.x/src/e1000_hw.h	1111;"	d
E1000_STATUS_SPEED_MASK	drivers/e1000-7.x/src/e1000_hw.h	1527;"	d
E1000_STATUS_TBIMODE	drivers/e1000-4.x/src/e1000_hw.h	944;"	d
E1000_STATUS_TBIMODE	drivers/e1000-5.x/src/e1000_hw.h	1110;"	d
E1000_STATUS_TBIMODE	drivers/e1000-7.x/src/e1000_hw.h	1526;"	d
E1000_STATUS_TXOFF	drivers/e1000-4.x/src/e1000_hw.h	943;"	d
E1000_STATUS_TXOFF	drivers/e1000-5.x/src/e1000_hw.h	1109;"	d
E1000_STATUS_TXOFF	drivers/e1000-7.x/src/e1000_hw.h	1525;"	d
E1000_STM_OPCODE	drivers/e1000-7.x/src/e1000_hw.h	1587;"	d
E1000_SUCCESS	drivers/e1000-4.x/src/e1000_hw.h	163;"	d
E1000_SUCCESS	drivers/e1000-5.x/src/e1000_hw.h	259;"	d
E1000_SUCCESS	drivers/e1000-7.x/src/e1000_hw.h	284;"	d
E1000_SWFW_EEP_SM	drivers/e1000-7.x/src/e1000_hw.h	1937;"	d
E1000_SWFW_MAC_CSR_SM	drivers/e1000-7.x/src/e1000_hw.h	1940;"	d
E1000_SWFW_PHY0_SM	drivers/e1000-7.x/src/e1000_hw.h	1938;"	d
E1000_SWFW_PHY1_SM	drivers/e1000-7.x/src/e1000_hw.h	1939;"	d
E1000_SWSM	drivers/e1000-7.x/src/e1000_hw.h	1079;"	d
E1000_SWSM_DRV_LOAD	drivers/e1000-7.x/src/e1000_hw.h	2134;"	d
E1000_SWSM_SMBI	drivers/e1000-7.x/src/e1000_hw.h	2131;"	d
E1000_SWSM_SWESMBI	drivers/e1000-7.x/src/e1000_hw.h	2132;"	d
E1000_SWSM_WMNG	drivers/e1000-7.x/src/e1000_hw.h	2133;"	d
E1000_SW_FW_SYNC	drivers/e1000-7.x/src/e1000_hw.h	1071;"	d
E1000_SYMERRS	drivers/e1000-4.x/src/e1000_hw.h	580;"	d
E1000_SYMERRS	drivers/e1000-5.x/src/e1000_hw.h	722;"	d
E1000_SYMERRS	drivers/e1000-7.x/src/e1000_hw.h	983;"	d
E1000_TADV	drivers/e1000-4.x/src/e1000_hw.h	576;"	d
E1000_TADV	drivers/e1000-5.x/src/e1000_hw.h	718;"	d
E1000_TADV	drivers/e1000-7.x/src/e1000_hw.h	971;"	d
E1000_TARC0	drivers/e1000-7.x/src/e1000_hw.h	973;"	d
E1000_TARC1	drivers/e1000-7.x/src/e1000_hw.h	980;"	d
E1000_TBT	drivers/e1000-4.x/src/e1000_hw.h	553;"	d
E1000_TBT	drivers/e1000-5.x/src/e1000_hw.h	689;"	d
E1000_TBT	drivers/e1000-7.x/src/e1000_hw.h	918;"	d
E1000_TCTL	drivers/e1000-4.x/src/e1000_hw.h	551;"	d
E1000_TCTL	drivers/e1000-5.x/src/e1000_hw.h	687;"	d
E1000_TCTL	drivers/e1000-7.x/src/e1000_hw.h	915;"	d
E1000_TCTL_BCE	drivers/e1000-4.x/src/e1000_hw.h	1217;"	d
E1000_TCTL_BCE	drivers/e1000-5.x/src/e1000_hw.h	1399;"	d
E1000_TCTL_BCE	drivers/e1000-7.x/src/e1000_hw.h	2018;"	d
E1000_TCTL_COLD	drivers/e1000-4.x/src/e1000_hw.h	1220;"	d
E1000_TCTL_COLD	drivers/e1000-5.x/src/e1000_hw.h	1402;"	d
E1000_TCTL_COLD	drivers/e1000-7.x/src/e1000_hw.h	2021;"	d
E1000_TCTL_CT	drivers/e1000-4.x/src/e1000_hw.h	1219;"	d
E1000_TCTL_CT	drivers/e1000-5.x/src/e1000_hw.h	1401;"	d
E1000_TCTL_CT	drivers/e1000-7.x/src/e1000_hw.h	2020;"	d
E1000_TCTL_EN	drivers/e1000-4.x/src/e1000_hw.h	1216;"	d
E1000_TCTL_EN	drivers/e1000-5.x/src/e1000_hw.h	1398;"	d
E1000_TCTL_EN	drivers/e1000-7.x/src/e1000_hw.h	2017;"	d
E1000_TCTL_EXT	drivers/e1000-7.x/src/e1000_hw.h	916;"	d
E1000_TCTL_EXT_BST_MASK	drivers/e1000-7.x/src/e1000_hw.h	2028;"	d
E1000_TCTL_EXT_GCEX_MASK	drivers/e1000-7.x/src/e1000_hw.h	2029;"	d
E1000_TCTL_MULR	drivers/e1000-7.x/src/e1000_hw.h	2026;"	d
E1000_TCTL_NRTU	drivers/e1000-4.x/src/e1000_hw.h	1224;"	d
E1000_TCTL_NRTU	drivers/e1000-5.x/src/e1000_hw.h	1406;"	d
E1000_TCTL_NRTU	drivers/e1000-7.x/src/e1000_hw.h	2025;"	d
E1000_TCTL_PBE	drivers/e1000-4.x/src/e1000_hw.h	1222;"	d
E1000_TCTL_PBE	drivers/e1000-5.x/src/e1000_hw.h	1404;"	d
E1000_TCTL_PBE	drivers/e1000-7.x/src/e1000_hw.h	2023;"	d
E1000_TCTL_PSP	drivers/e1000-4.x/src/e1000_hw.h	1218;"	d
E1000_TCTL_PSP	drivers/e1000-5.x/src/e1000_hw.h	1400;"	d
E1000_TCTL_PSP	drivers/e1000-7.x/src/e1000_hw.h	2019;"	d
E1000_TCTL_RST	drivers/e1000-4.x/src/e1000_hw.h	1215;"	d
E1000_TCTL_RST	drivers/e1000-5.x/src/e1000_hw.h	1397;"	d
E1000_TCTL_RST	drivers/e1000-7.x/src/e1000_hw.h	2016;"	d
E1000_TCTL_RTLC	drivers/e1000-4.x/src/e1000_hw.h	1223;"	d
E1000_TCTL_RTLC	drivers/e1000-5.x/src/e1000_hw.h	1405;"	d
E1000_TCTL_RTLC	drivers/e1000-7.x/src/e1000_hw.h	2024;"	d
E1000_TCTL_SWXOFF	drivers/e1000-4.x/src/e1000_hw.h	1221;"	d
E1000_TCTL_SWXOFF	drivers/e1000-5.x/src/e1000_hw.h	1403;"	d
E1000_TCTL_SWXOFF	drivers/e1000-7.x/src/e1000_hw.h	2022;"	d
E1000_TDBAH	drivers/e1000-4.x/src/e1000_hw.h	570;"	d
E1000_TDBAH	drivers/e1000-5.x/src/e1000_hw.h	712;"	d
E1000_TDBAH	drivers/e1000-7.x/src/e1000_hw.h	965;"	d
E1000_TDBAH1	drivers/e1000-7.x/src/e1000_hw.h	975;"	d
E1000_TDBAL	drivers/e1000-4.x/src/e1000_hw.h	569;"	d
E1000_TDBAL	drivers/e1000-5.x/src/e1000_hw.h	711;"	d
E1000_TDBAL	drivers/e1000-7.x/src/e1000_hw.h	964;"	d
E1000_TDBAL1	drivers/e1000-7.x/src/e1000_hw.h	974;"	d
E1000_TDFH	drivers/e1000-5.x/src/e1000_hw.h	706;"	d
E1000_TDFH	drivers/e1000-7.x/src/e1000_hw.h	959;"	d
E1000_TDFHS	drivers/e1000-5.x/src/e1000_hw.h	708;"	d
E1000_TDFHS	drivers/e1000-7.x/src/e1000_hw.h	961;"	d
E1000_TDFPC	drivers/e1000-5.x/src/e1000_hw.h	710;"	d
E1000_TDFPC	drivers/e1000-7.x/src/e1000_hw.h	963;"	d
E1000_TDFT	drivers/e1000-5.x/src/e1000_hw.h	707;"	d
E1000_TDFT	drivers/e1000-7.x/src/e1000_hw.h	960;"	d
E1000_TDFTS	drivers/e1000-5.x/src/e1000_hw.h	709;"	d
E1000_TDFTS	drivers/e1000-7.x/src/e1000_hw.h	962;"	d
E1000_TDH	drivers/e1000-4.x/src/e1000_hw.h	572;"	d
E1000_TDH	drivers/e1000-5.x/src/e1000_hw.h	714;"	d
E1000_TDH	drivers/e1000-7.x/src/e1000_hw.h	967;"	d
E1000_TDH1	drivers/e1000-7.x/src/e1000_hw.h	977;"	d
E1000_TDLEN	drivers/e1000-4.x/src/e1000_hw.h	571;"	d
E1000_TDLEN	drivers/e1000-5.x/src/e1000_hw.h	713;"	d
E1000_TDLEN	drivers/e1000-7.x/src/e1000_hw.h	966;"	d
E1000_TDLEN1	drivers/e1000-7.x/src/e1000_hw.h	976;"	d
E1000_TDT	drivers/e1000-4.x/src/e1000_hw.h	573;"	d
E1000_TDT	drivers/e1000-5.x/src/e1000_hw.h	715;"	d
E1000_TDT	drivers/e1000-7.x/src/e1000_hw.h	968;"	d
E1000_TDT1	drivers/e1000-7.x/src/e1000_hw.h	978;"	d
E1000_TEST_LEN	drivers/e1000-5.x/src/e1000_ethtool.c	116;"	d	file:
E1000_TEST_LEN	drivers/e1000-7.x/src/e1000_ethtool.c	136;"	d	file:
E1000_TIDV	drivers/e1000-4.x/src/e1000_hw.h	574;"	d
E1000_TIDV	drivers/e1000-5.x/src/e1000_hw.h	716;"	d
E1000_TIDV	drivers/e1000-7.x/src/e1000_hw.h	969;"	d
E1000_TIPG	drivers/e1000-4.x/src/e1000_hw.h	552;"	d
E1000_TIPG	drivers/e1000-5.x/src/e1000_hw.h	688;"	d
E1000_TIPG	drivers/e1000-7.x/src/e1000_hw.h	917;"	d
E1000_TIPG_IPGR1_MASK	drivers/e1000-4.x/src/e1000_hw.h	1380;"	d
E1000_TIPG_IPGR1_MASK	drivers/e1000-5.x/src/e1000_hw.h	1601;"	d
E1000_TIPG_IPGR1_MASK	drivers/e1000-7.x/src/e1000_hw.h	2388;"	d
E1000_TIPG_IPGR1_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1385;"	d
E1000_TIPG_IPGR1_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1606;"	d
E1000_TIPG_IPGR1_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2393;"	d
E1000_TIPG_IPGR2_MASK	drivers/e1000-4.x/src/e1000_hw.h	1381;"	d
E1000_TIPG_IPGR2_MASK	drivers/e1000-5.x/src/e1000_hw.h	1602;"	d
E1000_TIPG_IPGR2_MASK	drivers/e1000-7.x/src/e1000_hw.h	2389;"	d
E1000_TIPG_IPGR2_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1389;"	d
E1000_TIPG_IPGR2_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1610;"	d
E1000_TIPG_IPGR2_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2398;"	d
E1000_TIPG_IPGT_MASK	drivers/e1000-4.x/src/e1000_hw.h	1379;"	d
E1000_TIPG_IPGT_MASK	drivers/e1000-5.x/src/e1000_hw.h	1600;"	d
E1000_TIPG_IPGT_MASK	drivers/e1000-7.x/src/e1000_hw.h	2387;"	d
E1000_TNCRS	drivers/e1000-4.x/src/e1000_hw.h	589;"	d
E1000_TNCRS	drivers/e1000-5.x/src/e1000_hw.h	731;"	d
E1000_TNCRS	drivers/e1000-7.x/src/e1000_hw.h	992;"	d
E1000_TORH	drivers/e1000-4.x/src/e1000_hw.h	621;"	d
E1000_TORH	drivers/e1000-5.x/src/e1000_hw.h	763;"	d
E1000_TORH	drivers/e1000-7.x/src/e1000_hw.h	1024;"	d
E1000_TORL	drivers/e1000-4.x/src/e1000_hw.h	620;"	d
E1000_TORL	drivers/e1000-5.x/src/e1000_hw.h	762;"	d
E1000_TORL	drivers/e1000-7.x/src/e1000_hw.h	1023;"	d
E1000_TOTH	drivers/e1000-4.x/src/e1000_hw.h	623;"	d
E1000_TOTH	drivers/e1000-5.x/src/e1000_hw.h	765;"	d
E1000_TOTH	drivers/e1000-7.x/src/e1000_hw.h	1026;"	d
E1000_TOTL	drivers/e1000-4.x/src/e1000_hw.h	622;"	d
E1000_TOTL	drivers/e1000-5.x/src/e1000_hw.h	764;"	d
E1000_TOTL	drivers/e1000-7.x/src/e1000_hw.h	1025;"	d
E1000_TPR	drivers/e1000-4.x/src/e1000_hw.h	624;"	d
E1000_TPR	drivers/e1000-5.x/src/e1000_hw.h	766;"	d
E1000_TPR	drivers/e1000-7.x/src/e1000_hw.h	1027;"	d
E1000_TPT	drivers/e1000-4.x/src/e1000_hw.h	625;"	d
E1000_TPT	drivers/e1000-5.x/src/e1000_hw.h	767;"	d
E1000_TPT	drivers/e1000-7.x/src/e1000_hw.h	1028;"	d
E1000_TSCTC	drivers/e1000-4.x/src/e1000_hw.h	634;"	d
E1000_TSCTC	drivers/e1000-5.x/src/e1000_hw.h	776;"	d
E1000_TSCTC	drivers/e1000-7.x/src/e1000_hw.h	1037;"	d
E1000_TSCTFC	drivers/e1000-4.x/src/e1000_hw.h	635;"	d
E1000_TSCTFC	drivers/e1000-5.x/src/e1000_hw.h	777;"	d
E1000_TSCTFC	drivers/e1000-7.x/src/e1000_hw.h	1038;"	d
E1000_TSPMT	drivers/e1000-4.x/src/e1000_hw.h	577;"	d
E1000_TSPMT	drivers/e1000-5.x/src/e1000_hw.h	719;"	d
E1000_TSPMT	drivers/e1000-7.x/src/e1000_hw.h	972;"	d
E1000_TXCW	drivers/e1000-4.x/src/e1000_hw.h	549;"	d
E1000_TXCW	drivers/e1000-5.x/src/e1000_hw.h	685;"	d
E1000_TXCW	drivers/e1000-7.x/src/e1000_hw.h	913;"	d
E1000_TXCW_ANE	drivers/e1000-4.x/src/e1000_hw.h	1203;"	d
E1000_TXCW_ANE	drivers/e1000-5.x/src/e1000_hw.h	1385;"	d
E1000_TXCW_ANE	drivers/e1000-7.x/src/e1000_hw.h	2004;"	d
E1000_TXCW_ASM_DIR	drivers/e1000-4.x/src/e1000_hw.h	1197;"	d
E1000_TXCW_ASM_DIR	drivers/e1000-5.x/src/e1000_hw.h	1379;"	d
E1000_TXCW_ASM_DIR	drivers/e1000-7.x/src/e1000_hw.h	1998;"	d
E1000_TXCW_CW	drivers/e1000-4.x/src/e1000_hw.h	1201;"	d
E1000_TXCW_CW	drivers/e1000-5.x/src/e1000_hw.h	1383;"	d
E1000_TXCW_CW	drivers/e1000-7.x/src/e1000_hw.h	2002;"	d
E1000_TXCW_FD	drivers/e1000-4.x/src/e1000_hw.h	1194;"	d
E1000_TXCW_FD	drivers/e1000-5.x/src/e1000_hw.h	1376;"	d
E1000_TXCW_FD	drivers/e1000-7.x/src/e1000_hw.h	1995;"	d
E1000_TXCW_HD	drivers/e1000-4.x/src/e1000_hw.h	1195;"	d
E1000_TXCW_HD	drivers/e1000-5.x/src/e1000_hw.h	1377;"	d
E1000_TXCW_HD	drivers/e1000-7.x/src/e1000_hw.h	1996;"	d
E1000_TXCW_NP	drivers/e1000-4.x/src/e1000_hw.h	1200;"	d
E1000_TXCW_NP	drivers/e1000-5.x/src/e1000_hw.h	1382;"	d
E1000_TXCW_NP	drivers/e1000-7.x/src/e1000_hw.h	2001;"	d
E1000_TXCW_PAUSE	drivers/e1000-4.x/src/e1000_hw.h	1196;"	d
E1000_TXCW_PAUSE	drivers/e1000-5.x/src/e1000_hw.h	1378;"	d
E1000_TXCW_PAUSE	drivers/e1000-7.x/src/e1000_hw.h	1997;"	d
E1000_TXCW_PAUSE_MASK	drivers/e1000-4.x/src/e1000_hw.h	1198;"	d
E1000_TXCW_PAUSE_MASK	drivers/e1000-5.x/src/e1000_hw.h	1380;"	d
E1000_TXCW_PAUSE_MASK	drivers/e1000-7.x/src/e1000_hw.h	1999;"	d
E1000_TXCW_RF	drivers/e1000-4.x/src/e1000_hw.h	1199;"	d
E1000_TXCW_RF	drivers/e1000-5.x/src/e1000_hw.h	1381;"	d
E1000_TXCW_RF	drivers/e1000-7.x/src/e1000_hw.h	2000;"	d
E1000_TXCW_TXC	drivers/e1000-4.x/src/e1000_hw.h	1202;"	d
E1000_TXCW_TXC	drivers/e1000-5.x/src/e1000_hw.h	1384;"	d
E1000_TXCW_TXC	drivers/e1000-7.x/src/e1000_hw.h	2003;"	d
E1000_TXDCTL	drivers/e1000-4.x/src/e1000_hw.h	575;"	d
E1000_TXDCTL	drivers/e1000-5.x/src/e1000_hw.h	717;"	d
E1000_TXDCTL	drivers/e1000-7.x/src/e1000_hw.h	970;"	d
E1000_TXDCTL1	drivers/e1000-7.x/src/e1000_hw.h	979;"	d
E1000_TXDCTL_COUNT_DESC	drivers/e1000-5.x/src/e1000_hw.h	1372;"	d
E1000_TXDCTL_COUNT_DESC	drivers/e1000-7.x/src/e1000_hw.h	1992;"	d
E1000_TXDCTL_FULL_TX_DESC_WB	drivers/e1000-4.x/src/e1000_hw.h	1191;"	d
E1000_TXDCTL_FULL_TX_DESC_WB	drivers/e1000-5.x/src/e1000_hw.h	1371;"	d
E1000_TXDCTL_FULL_TX_DESC_WB	drivers/e1000-7.x/src/e1000_hw.h	1991;"	d
E1000_TXDCTL_GRAN	drivers/e1000-4.x/src/e1000_hw.h	1189;"	d
E1000_TXDCTL_GRAN	drivers/e1000-5.x/src/e1000_hw.h	1369;"	d
E1000_TXDCTL_GRAN	drivers/e1000-7.x/src/e1000_hw.h	1989;"	d
E1000_TXDCTL_HTHRESH	drivers/e1000-4.x/src/e1000_hw.h	1187;"	d
E1000_TXDCTL_HTHRESH	drivers/e1000-5.x/src/e1000_hw.h	1367;"	d
E1000_TXDCTL_HTHRESH	drivers/e1000-7.x/src/e1000_hw.h	1987;"	d
E1000_TXDCTL_LWTHRESH	drivers/e1000-4.x/src/e1000_hw.h	1190;"	d
E1000_TXDCTL_LWTHRESH	drivers/e1000-5.x/src/e1000_hw.h	1370;"	d
E1000_TXDCTL_LWTHRESH	drivers/e1000-7.x/src/e1000_hw.h	1990;"	d
E1000_TXDCTL_PTHRESH	drivers/e1000-4.x/src/e1000_hw.h	1186;"	d
E1000_TXDCTL_PTHRESH	drivers/e1000-5.x/src/e1000_hw.h	1366;"	d
E1000_TXDCTL_PTHRESH	drivers/e1000-7.x/src/e1000_hw.h	1986;"	d
E1000_TXDCTL_WTHRESH	drivers/e1000-4.x/src/e1000_hw.h	1188;"	d
E1000_TXDCTL_WTHRESH	drivers/e1000-5.x/src/e1000_hw.h	1368;"	d
E1000_TXDCTL_WTHRESH	drivers/e1000-7.x/src/e1000_hw.h	1988;"	d
E1000_TXDMAC	drivers/e1000-4.x/src/e1000_hw.h	568;"	d
E1000_TXDMAC	drivers/e1000-5.x/src/e1000_hw.h	705;"	d
E1000_TXDMAC	drivers/e1000-7.x/src/e1000_hw.h	957;"	d
E1000_TXDMAC_DPP	drivers/e1000-4.x/src/e1000_hw.h	1391;"	d
E1000_TXDMAC_DPP	drivers/e1000-5.x/src/e1000_hw.h	1612;"	d
E1000_TXDMAC_DPP	drivers/e1000-7.x/src/e1000_hw.h	2402;"	d
E1000_TXD_CMD_DEXT	drivers/e1000-4.x/src/e1000_hw.h	399;"	d
E1000_TXD_CMD_DEXT	drivers/e1000-5.x/src/e1000_hw.h	533;"	d
E1000_TXD_CMD_DEXT	drivers/e1000-7.x/src/e1000_hw.h	745;"	d
E1000_TXD_CMD_EOP	drivers/e1000-4.x/src/e1000_hw.h	394;"	d
E1000_TXD_CMD_EOP	drivers/e1000-5.x/src/e1000_hw.h	528;"	d
E1000_TXD_CMD_EOP	drivers/e1000-7.x/src/e1000_hw.h	740;"	d
E1000_TXD_CMD_IC	drivers/e1000-4.x/src/e1000_hw.h	396;"	d
E1000_TXD_CMD_IC	drivers/e1000-5.x/src/e1000_hw.h	530;"	d
E1000_TXD_CMD_IC	drivers/e1000-7.x/src/e1000_hw.h	742;"	d
E1000_TXD_CMD_IDE	drivers/e1000-4.x/src/e1000_hw.h	401;"	d
E1000_TXD_CMD_IDE	drivers/e1000-5.x/src/e1000_hw.h	535;"	d
E1000_TXD_CMD_IDE	drivers/e1000-7.x/src/e1000_hw.h	747;"	d
E1000_TXD_CMD_IFCS	drivers/e1000-4.x/src/e1000_hw.h	395;"	d
E1000_TXD_CMD_IFCS	drivers/e1000-5.x/src/e1000_hw.h	529;"	d
E1000_TXD_CMD_IFCS	drivers/e1000-7.x/src/e1000_hw.h	741;"	d
E1000_TXD_CMD_IP	drivers/e1000-4.x/src/e1000_hw.h	407;"	d
E1000_TXD_CMD_IP	drivers/e1000-5.x/src/e1000_hw.h	541;"	d
E1000_TXD_CMD_IP	drivers/e1000-7.x/src/e1000_hw.h	753;"	d
E1000_TXD_CMD_RPS	drivers/e1000-4.x/src/e1000_hw.h	398;"	d
E1000_TXD_CMD_RPS	drivers/e1000-5.x/src/e1000_hw.h	532;"	d
E1000_TXD_CMD_RPS	drivers/e1000-7.x/src/e1000_hw.h	744;"	d
E1000_TXD_CMD_RS	drivers/e1000-4.x/src/e1000_hw.h	397;"	d
E1000_TXD_CMD_RS	drivers/e1000-5.x/src/e1000_hw.h	531;"	d
E1000_TXD_CMD_RS	drivers/e1000-7.x/src/e1000_hw.h	743;"	d
E1000_TXD_CMD_TCP	drivers/e1000-4.x/src/e1000_hw.h	406;"	d
E1000_TXD_CMD_TCP	drivers/e1000-5.x/src/e1000_hw.h	540;"	d
E1000_TXD_CMD_TCP	drivers/e1000-7.x/src/e1000_hw.h	752;"	d
E1000_TXD_CMD_TSE	drivers/e1000-4.x/src/e1000_hw.h	408;"	d
E1000_TXD_CMD_TSE	drivers/e1000-5.x/src/e1000_hw.h	542;"	d
E1000_TXD_CMD_TSE	drivers/e1000-7.x/src/e1000_hw.h	754;"	d
E1000_TXD_CMD_VLE	drivers/e1000-4.x/src/e1000_hw.h	400;"	d
E1000_TXD_CMD_VLE	drivers/e1000-5.x/src/e1000_hw.h	534;"	d
E1000_TXD_CMD_VLE	drivers/e1000-7.x/src/e1000_hw.h	746;"	d
E1000_TXD_DTYP_C	drivers/e1000-4.x/src/e1000_hw.h	391;"	d
E1000_TXD_DTYP_C	drivers/e1000-5.x/src/e1000_hw.h	525;"	d
E1000_TXD_DTYP_C	drivers/e1000-7.x/src/e1000_hw.h	737;"	d
E1000_TXD_DTYP_D	drivers/e1000-4.x/src/e1000_hw.h	390;"	d
E1000_TXD_DTYP_D	drivers/e1000-5.x/src/e1000_hw.h	524;"	d
E1000_TXD_DTYP_D	drivers/e1000-7.x/src/e1000_hw.h	736;"	d
E1000_TXD_POPTS_IXSM	drivers/e1000-4.x/src/e1000_hw.h	392;"	d
E1000_TXD_POPTS_IXSM	drivers/e1000-5.x/src/e1000_hw.h	526;"	d
E1000_TXD_POPTS_IXSM	drivers/e1000-7.x/src/e1000_hw.h	738;"	d
E1000_TXD_POPTS_TXSM	drivers/e1000-4.x/src/e1000_hw.h	393;"	d
E1000_TXD_POPTS_TXSM	drivers/e1000-5.x/src/e1000_hw.h	527;"	d
E1000_TXD_POPTS_TXSM	drivers/e1000-7.x/src/e1000_hw.h	739;"	d
E1000_TXD_STAT_DD	drivers/e1000-4.x/src/e1000_hw.h	402;"	d
E1000_TXD_STAT_DD	drivers/e1000-5.x/src/e1000_hw.h	536;"	d
E1000_TXD_STAT_DD	drivers/e1000-7.x/src/e1000_hw.h	748;"	d
E1000_TXD_STAT_EC	drivers/e1000-4.x/src/e1000_hw.h	403;"	d
E1000_TXD_STAT_EC	drivers/e1000-5.x/src/e1000_hw.h	537;"	d
E1000_TXD_STAT_EC	drivers/e1000-7.x/src/e1000_hw.h	749;"	d
E1000_TXD_STAT_LC	drivers/e1000-4.x/src/e1000_hw.h	404;"	d
E1000_TXD_STAT_LC	drivers/e1000-5.x/src/e1000_hw.h	538;"	d
E1000_TXD_STAT_LC	drivers/e1000-7.x/src/e1000_hw.h	750;"	d
E1000_TXD_STAT_TC	drivers/e1000-4.x/src/e1000_hw.h	409;"	d
E1000_TXD_STAT_TC	drivers/e1000-5.x/src/e1000_hw.h	543;"	d
E1000_TXD_STAT_TC	drivers/e1000-7.x/src/e1000_hw.h	755;"	d
E1000_TXD_STAT_TU	drivers/e1000-4.x/src/e1000_hw.h	405;"	d
E1000_TXD_STAT_TU	drivers/e1000-5.x/src/e1000_hw.h	539;"	d
E1000_TXD_STAT_TU	drivers/e1000-7.x/src/e1000_hw.h	751;"	d
E1000_TX_BUFFER_SIZE	drivers/e1000-4.x/src/e1000_hw.h	1466;"	d
E1000_TX_BUFFER_SIZE	drivers/e1000-5.x/src/e1000_hw.h	1684;"	d
E1000_TX_BUFFER_SIZE	drivers/e1000-7.x/src/e1000_hw.h	2504;"	d
E1000_TX_DESC	drivers/e1000-4.x/src/e1000.h	158;"	d
E1000_TX_DESC	drivers/e1000-5.x/src/e1000.h	199;"	d
E1000_TX_DESC	drivers/e1000-7.x/src/e1000.h	242;"	d
E1000_TX_FLAGS_CSUM	drivers/e1000-4.x/src/e1000_main.c	1430;"	d	file:
E1000_TX_FLAGS_CSUM	drivers/e1000-5.x/src/e1000_main.c	1713;"	d	file:
E1000_TX_FLAGS_CSUM	drivers/e1000-7.x/src/e1000_main.c	3019;"	d	file:
E1000_TX_FLAGS_IPV4	drivers/e1000-7.x/src/e1000_main.c	3022;"	d	file:
E1000_TX_FLAGS_TSO	drivers/e1000-5.x/src/e1000_main.c	1715;"	d	file:
E1000_TX_FLAGS_TSO	drivers/e1000-7.x/src/e1000_main.c	3021;"	d	file:
E1000_TX_FLAGS_VLAN	drivers/e1000-4.x/src/e1000_main.c	1431;"	d	file:
E1000_TX_FLAGS_VLAN	drivers/e1000-5.x/src/e1000_main.c	1714;"	d	file:
E1000_TX_FLAGS_VLAN	drivers/e1000-7.x/src/e1000_main.c	3020;"	d	file:
E1000_TX_FLAGS_VLAN_MASK	drivers/e1000-4.x/src/e1000_main.c	1432;"	d	file:
E1000_TX_FLAGS_VLAN_MASK	drivers/e1000-5.x/src/e1000_main.c	1716;"	d	file:
E1000_TX_FLAGS_VLAN_MASK	drivers/e1000-7.x/src/e1000_main.c	3023;"	d	file:
E1000_TX_FLAGS_VLAN_SHIFT	drivers/e1000-4.x/src/e1000_main.c	1433;"	d	file:
E1000_TX_FLAGS_VLAN_SHIFT	drivers/e1000-5.x/src/e1000_main.c	1717;"	d	file:
E1000_TX_FLAGS_VLAN_SHIFT	drivers/e1000-7.x/src/e1000_main.c	3024;"	d	file:
E1000_TX_HEAD_ADDR_SHIFT	drivers/e1000-5.x/src/e1000.h	134;"	d
E1000_TX_HEAD_ADDR_SHIFT	drivers/e1000-7.x/src/e1000.h	137;"	d
E1000_TX_QUEUE_WAKE	drivers/e1000-4.x/src/e1000.h	113;"	d
E1000_TX_QUEUE_WAKE	drivers/e1000-5.x/src/e1000.h	144;"	d
E1000_TX_QUEUE_WAKE	drivers/e1000-7.x/src/e1000.h	147;"	d
E1000_TX_WEIGHT	drivers/e1000-7.x/src/e1000_main.c	4230;"	d	file:
E1000_VET	drivers/e1000-4.x/src/e1000_hw.h	541;"	d
E1000_VET	drivers/e1000-5.x/src/e1000_hw.h	677;"	d
E1000_VET	drivers/e1000-7.x/src/e1000_hw.h	898;"	d
E1000_VFTA	drivers/e1000-4.x/src/e1000_hw.h	639;"	d
E1000_VFTA	drivers/e1000-5.x/src/e1000_hw.h	781;"	d
E1000_VFTA	drivers/e1000-7.x/src/e1000_hw.h	1053;"	d
E1000_VFTA_ENTRY_BIT_SHIFT_MASK	drivers/e1000-7.x/src/e1000_hw.h	346;"	d
E1000_VFTA_ENTRY_MASK	drivers/e1000-7.x/src/e1000_hw.h	345;"	d
E1000_VFTA_ENTRY_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	344;"	d
E1000_VLAN_FILTER_TBL_SIZE	drivers/e1000-4.x/src/e1000_hw.h	464;"	d
E1000_VLAN_FILTER_TBL_SIZE	drivers/e1000-5.x/src/e1000_hw.h	598;"	d
E1000_VLAN_FILTER_TBL_SIZE	drivers/e1000-7.x/src/e1000_hw.h	810;"	d
E1000_WAKEUP_IP_ADDRESS_COUNT_MAX	drivers/e1000-4.x/src/e1000_hw.h	483;"	d
E1000_WAKEUP_IP_ADDRESS_COUNT_MAX	drivers/e1000-5.x/src/e1000_hw.h	617;"	d
E1000_WAKEUP_IP_ADDRESS_COUNT_MAX	drivers/e1000-7.x/src/e1000_hw.h	833;"	d
E1000_WRITE_FLUSH	drivers/e1000-4.x/src/e1000_osdep.h	100;"	d
E1000_WRITE_FLUSH	drivers/e1000-5.x/src/e1000_osdep.h	101;"	d
E1000_WRITE_FLUSH	drivers/e1000-7.x/src/e1000_osdep.h	125;"	d
E1000_WRITE_ICH_FLASH_REG	drivers/e1000-7.x/src/e1000_osdep.h	127;"	d
E1000_WRITE_ICH_FLASH_REG16	drivers/e1000-7.x/src/e1000_osdep.h	133;"	d
E1000_WRITE_REG	drivers/e1000-4.x/src/e1000_osdep.h	80;"	d
E1000_WRITE_REG	drivers/e1000-5.x/src/e1000_osdep.h	83;"	d
E1000_WRITE_REG	drivers/e1000-7.x/src/e1000_osdep.h	84;"	d
E1000_WRITE_REG_ARRAY	drivers/e1000-4.x/src/e1000_osdep.h	90;"	d
E1000_WRITE_REG_ARRAY	drivers/e1000-5.x/src/e1000_osdep.h	91;"	d
E1000_WRITE_REG_ARRAY	drivers/e1000-7.x/src/e1000_osdep.h	92;"	d
E1000_WRITE_REG_ARRAY_BYTE	drivers/e1000-7.x/src/e1000_osdep.h	115;"	d
E1000_WRITE_REG_ARRAY_DWORD	drivers/e1000-7.x/src/e1000_osdep.h	103;"	d
E1000_WRITE_REG_ARRAY_WORD	drivers/e1000-7.x/src/e1000_osdep.h	105;"	d
E1000_WRITE_REG_IO	drivers/e1000-4.x/src/e1000_hw.h	236;"	d
E1000_WRITE_REG_IO	drivers/e1000-5.x/src/e1000_hw.h	347;"	d
E1000_WRITE_REG_IO	drivers/e1000-7.x/src/e1000_hw.h	434;"	d
E1000_WUC	drivers/e1000-4.x/src/e1000_hw.h	640;"	d
E1000_WUC	drivers/e1000-5.x/src/e1000_hw.h	782;"	d
E1000_WUC	drivers/e1000-7.x/src/e1000_hw.h	1054;"	d
E1000_WUC_APME	drivers/e1000-4.x/src/e1000_hw.h	1234;"	d
E1000_WUC_APME	drivers/e1000-5.x/src/e1000_hw.h	1416;"	d
E1000_WUC_APME	drivers/e1000-7.x/src/e1000_hw.h	2055;"	d
E1000_WUC_APMPME	drivers/e1000-4.x/src/e1000_hw.h	1237;"	d
E1000_WUC_APMPME	drivers/e1000-5.x/src/e1000_hw.h	1419;"	d
E1000_WUC_APMPME	drivers/e1000-7.x/src/e1000_hw.h	2058;"	d
E1000_WUC_PME_EN	drivers/e1000-4.x/src/e1000_hw.h	1235;"	d
E1000_WUC_PME_EN	drivers/e1000-5.x/src/e1000_hw.h	1417;"	d
E1000_WUC_PME_EN	drivers/e1000-7.x/src/e1000_hw.h	2056;"	d
E1000_WUC_PME_STATUS	drivers/e1000-4.x/src/e1000_hw.h	1236;"	d
E1000_WUC_PME_STATUS	drivers/e1000-5.x/src/e1000_hw.h	1418;"	d
E1000_WUC_PME_STATUS	drivers/e1000-7.x/src/e1000_hw.h	2057;"	d
E1000_WUC_SPM	drivers/e1000-5.x/src/e1000_hw.h	1420;"	d
E1000_WUC_SPM	drivers/e1000-7.x/src/e1000_hw.h	2059;"	d
E1000_WUFC	drivers/e1000-4.x/src/e1000_hw.h	641;"	d
E1000_WUFC	drivers/e1000-5.x/src/e1000_hw.h	783;"	d
E1000_WUFC	drivers/e1000-7.x/src/e1000_hw.h	1055;"	d
E1000_WUFC_ALL_FILTERS	drivers/e1000-4.x/src/e1000_hw.h	1252;"	d
E1000_WUFC_ALL_FILTERS	drivers/e1000-5.x/src/e1000_hw.h	1435;"	d
E1000_WUFC_ALL_FILTERS	drivers/e1000-7.x/src/e1000_hw.h	2075;"	d
E1000_WUFC_ARP	drivers/e1000-4.x/src/e1000_hw.h	1245;"	d
E1000_WUFC_ARP	drivers/e1000-5.x/src/e1000_hw.h	1428;"	d
E1000_WUFC_ARP	drivers/e1000-7.x/src/e1000_hw.h	2067;"	d
E1000_WUFC_BC	drivers/e1000-4.x/src/e1000_hw.h	1244;"	d
E1000_WUFC_BC	drivers/e1000-5.x/src/e1000_hw.h	1427;"	d
E1000_WUFC_BC	drivers/e1000-7.x/src/e1000_hw.h	2066;"	d
E1000_WUFC_EX	drivers/e1000-4.x/src/e1000_hw.h	1242;"	d
E1000_WUFC_EX	drivers/e1000-5.x/src/e1000_hw.h	1425;"	d
E1000_WUFC_EX	drivers/e1000-7.x/src/e1000_hw.h	2064;"	d
E1000_WUFC_FLX0	drivers/e1000-4.x/src/e1000_hw.h	1248;"	d
E1000_WUFC_FLX0	drivers/e1000-5.x/src/e1000_hw.h	1431;"	d
E1000_WUFC_FLX0	drivers/e1000-7.x/src/e1000_hw.h	2071;"	d
E1000_WUFC_FLX1	drivers/e1000-4.x/src/e1000_hw.h	1249;"	d
E1000_WUFC_FLX1	drivers/e1000-5.x/src/e1000_hw.h	1432;"	d
E1000_WUFC_FLX1	drivers/e1000-7.x/src/e1000_hw.h	2072;"	d
E1000_WUFC_FLX2	drivers/e1000-4.x/src/e1000_hw.h	1250;"	d
E1000_WUFC_FLX2	drivers/e1000-5.x/src/e1000_hw.h	1433;"	d
E1000_WUFC_FLX2	drivers/e1000-7.x/src/e1000_hw.h	2073;"	d
E1000_WUFC_FLX3	drivers/e1000-4.x/src/e1000_hw.h	1251;"	d
E1000_WUFC_FLX3	drivers/e1000-5.x/src/e1000_hw.h	1434;"	d
E1000_WUFC_FLX3	drivers/e1000-7.x/src/e1000_hw.h	2074;"	d
E1000_WUFC_FLX_FILTERS	drivers/e1000-4.x/src/e1000_hw.h	1254;"	d
E1000_WUFC_FLX_FILTERS	drivers/e1000-5.x/src/e1000_hw.h	1437;"	d
E1000_WUFC_FLX_FILTERS	drivers/e1000-7.x/src/e1000_hw.h	2077;"	d
E1000_WUFC_FLX_OFFSET	drivers/e1000-4.x/src/e1000_hw.h	1253;"	d
E1000_WUFC_FLX_OFFSET	drivers/e1000-5.x/src/e1000_hw.h	1436;"	d
E1000_WUFC_FLX_OFFSET	drivers/e1000-7.x/src/e1000_hw.h	2076;"	d
E1000_WUFC_IGNORE_TCO	drivers/e1000-7.x/src/e1000_hw.h	2070;"	d
E1000_WUFC_IPV4	drivers/e1000-4.x/src/e1000_hw.h	1246;"	d
E1000_WUFC_IPV4	drivers/e1000-5.x/src/e1000_hw.h	1429;"	d
E1000_WUFC_IPV4	drivers/e1000-7.x/src/e1000_hw.h	2068;"	d
E1000_WUFC_IPV6	drivers/e1000-4.x/src/e1000_hw.h	1247;"	d
E1000_WUFC_IPV6	drivers/e1000-5.x/src/e1000_hw.h	1430;"	d
E1000_WUFC_IPV6	drivers/e1000-7.x/src/e1000_hw.h	2069;"	d
E1000_WUFC_LNKC	drivers/e1000-4.x/src/e1000_hw.h	1240;"	d
E1000_WUFC_LNKC	drivers/e1000-5.x/src/e1000_hw.h	1423;"	d
E1000_WUFC_LNKC	drivers/e1000-7.x/src/e1000_hw.h	2062;"	d
E1000_WUFC_MAG	drivers/e1000-4.x/src/e1000_hw.h	1241;"	d
E1000_WUFC_MAG	drivers/e1000-5.x/src/e1000_hw.h	1424;"	d
E1000_WUFC_MAG	drivers/e1000-7.x/src/e1000_hw.h	2063;"	d
E1000_WUFC_MC	drivers/e1000-4.x/src/e1000_hw.h	1243;"	d
E1000_WUFC_MC	drivers/e1000-5.x/src/e1000_hw.h	1426;"	d
E1000_WUFC_MC	drivers/e1000-7.x/src/e1000_hw.h	2065;"	d
E1000_WUPL	drivers/e1000-4.x/src/e1000_hw.h	647;"	d
E1000_WUPL	drivers/e1000-5.x/src/e1000_hw.h	789;"	d
E1000_WUPL	drivers/e1000-7.x/src/e1000_hw.h	1061;"	d
E1000_WUPL_LENGTH_MASK	drivers/e1000-4.x/src/e1000_hw.h	1297;"	d
E1000_WUPL_LENGTH_MASK	drivers/e1000-5.x/src/e1000_hw.h	1485;"	d
E1000_WUPL_LENGTH_MASK	drivers/e1000-7.x/src/e1000_hw.h	2201;"	d
E1000_WUPM	drivers/e1000-4.x/src/e1000_hw.h	648;"	d
E1000_WUPM	drivers/e1000-5.x/src/e1000_hw.h	790;"	d
E1000_WUPM	drivers/e1000-7.x/src/e1000_hw.h	1062;"	d
E1000_WUS	drivers/e1000-4.x/src/e1000_hw.h	642;"	d
E1000_WUS	drivers/e1000-5.x/src/e1000_hw.h	784;"	d
E1000_WUS	drivers/e1000-7.x/src/e1000_hw.h	1056;"	d
E1000_WUS_ARP	drivers/e1000-4.x/src/e1000_hw.h	1262;"	d
E1000_WUS_ARP	drivers/e1000-5.x/src/e1000_hw.h	1445;"	d
E1000_WUS_ARP	drivers/e1000-7.x/src/e1000_hw.h	2085;"	d
E1000_WUS_BC	drivers/e1000-4.x/src/e1000_hw.h	1261;"	d
E1000_WUS_BC	drivers/e1000-5.x/src/e1000_hw.h	1444;"	d
E1000_WUS_BC	drivers/e1000-7.x/src/e1000_hw.h	2084;"	d
E1000_WUS_EX	drivers/e1000-4.x/src/e1000_hw.h	1259;"	d
E1000_WUS_EX	drivers/e1000-5.x/src/e1000_hw.h	1442;"	d
E1000_WUS_EX	drivers/e1000-7.x/src/e1000_hw.h	2082;"	d
E1000_WUS_FLX0	drivers/e1000-4.x/src/e1000_hw.h	1265;"	d
E1000_WUS_FLX0	drivers/e1000-5.x/src/e1000_hw.h	1448;"	d
E1000_WUS_FLX0	drivers/e1000-7.x/src/e1000_hw.h	2088;"	d
E1000_WUS_FLX1	drivers/e1000-4.x/src/e1000_hw.h	1266;"	d
E1000_WUS_FLX1	drivers/e1000-5.x/src/e1000_hw.h	1449;"	d
E1000_WUS_FLX1	drivers/e1000-7.x/src/e1000_hw.h	2089;"	d
E1000_WUS_FLX2	drivers/e1000-4.x/src/e1000_hw.h	1267;"	d
E1000_WUS_FLX2	drivers/e1000-5.x/src/e1000_hw.h	1450;"	d
E1000_WUS_FLX2	drivers/e1000-7.x/src/e1000_hw.h	2090;"	d
E1000_WUS_FLX3	drivers/e1000-4.x/src/e1000_hw.h	1268;"	d
E1000_WUS_FLX3	drivers/e1000-5.x/src/e1000_hw.h	1451;"	d
E1000_WUS_FLX3	drivers/e1000-7.x/src/e1000_hw.h	2091;"	d
E1000_WUS_FLX_FILTERS	drivers/e1000-4.x/src/e1000_hw.h	1269;"	d
E1000_WUS_FLX_FILTERS	drivers/e1000-5.x/src/e1000_hw.h	1452;"	d
E1000_WUS_FLX_FILTERS	drivers/e1000-7.x/src/e1000_hw.h	2092;"	d
E1000_WUS_IPV4	drivers/e1000-4.x/src/e1000_hw.h	1263;"	d
E1000_WUS_IPV4	drivers/e1000-5.x/src/e1000_hw.h	1446;"	d
E1000_WUS_IPV4	drivers/e1000-7.x/src/e1000_hw.h	2086;"	d
E1000_WUS_IPV6	drivers/e1000-4.x/src/e1000_hw.h	1264;"	d
E1000_WUS_IPV6	drivers/e1000-5.x/src/e1000_hw.h	1447;"	d
E1000_WUS_IPV6	drivers/e1000-7.x/src/e1000_hw.h	2087;"	d
E1000_WUS_LNKC	drivers/e1000-4.x/src/e1000_hw.h	1257;"	d
E1000_WUS_LNKC	drivers/e1000-5.x/src/e1000_hw.h	1440;"	d
E1000_WUS_LNKC	drivers/e1000-7.x/src/e1000_hw.h	2080;"	d
E1000_WUS_MAG	drivers/e1000-4.x/src/e1000_hw.h	1258;"	d
E1000_WUS_MAG	drivers/e1000-5.x/src/e1000_hw.h	1441;"	d
E1000_WUS_MAG	drivers/e1000-7.x/src/e1000_hw.h	2081;"	d
E1000_WUS_MC	drivers/e1000-4.x/src/e1000_hw.h	1260;"	d
E1000_WUS_MC	drivers/e1000-5.x/src/e1000_hw.h	1443;"	d
E1000_WUS_MC	drivers/e1000-7.x/src/e1000_hw.h	2083;"	d
E1000_XOFFRXC	drivers/e1000-4.x/src/e1000_hw.h	595;"	d
E1000_XOFFRXC	drivers/e1000-5.x/src/e1000_hw.h	737;"	d
E1000_XOFFRXC	drivers/e1000-7.x/src/e1000_hw.h	998;"	d
E1000_XOFFTXC	drivers/e1000-4.x/src/e1000_hw.h	596;"	d
E1000_XOFFTXC	drivers/e1000-5.x/src/e1000_hw.h	738;"	d
E1000_XOFFTXC	drivers/e1000-7.x/src/e1000_hw.h	999;"	d
E1000_XONRXC	drivers/e1000-4.x/src/e1000_hw.h	593;"	d
E1000_XONRXC	drivers/e1000-5.x/src/e1000_hw.h	735;"	d
E1000_XONRXC	drivers/e1000-7.x/src/e1000_hw.h	996;"	d
E1000_XONTXC	drivers/e1000-4.x/src/e1000_hw.h	594;"	d
E1000_XONTXC	drivers/e1000-5.x/src/e1000_hw.h	736;"	d
E1000_XONTXC	drivers/e1000-7.x/src/e1000_hw.h	997;"	d
E100_USE_PCI_ERS	drivers/e1000-7.x/src/kcompat.h	1039;"	d
E100_USE_PCI_ERS	drivers/e1000-7.x/src/kcompat.h	1043;"	d
E100_USE_REBOOT_NOTIFIER	drivers/e1000-7.x/src/kcompat.h	1022;"	d
E100_USE_SHUTDOWN_HANDLER	drivers/e1000-7.x/src/kcompat.h	1025;"	d
E2ELossMetric	elements/grid/e2elossmetric.cc	/^E2ELossMetric::E2ELossMetric()$/;"	f	class:E2ELossMetric
E2ELossMetric	elements/grid/e2elossmetric.hh	/^class E2ELossMetric : public GridGenericMetric {$/;"	c
E2EMETRIC_HH	elements/grid/e2elossmetric.hh	2;"	d
E2ESignalInfo	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^struct E2ESignalInfo {$/;"	s
EEPROM_A8_OPCODE_SPI	drivers/e1000-5.x/src/e1000_hw.h	1500;"	d
EEPROM_A8_OPCODE_SPI	drivers/e1000-7.x/src/e1000_hw.h	2265;"	d
EEPROM_CFG	drivers/e1000-5.x/src/e1000_hw.h	1525;"	d
EEPROM_CFG	drivers/e1000-7.x/src/e1000_hw.h	2292;"	d
EEPROM_CHECKSUM_REG	drivers/e1000-4.x/src/e1000_hw.h	1314;"	d
EEPROM_CHECKSUM_REG	drivers/e1000-5.x/src/e1000_hw.h	1527;"	d
EEPROM_CHECKSUM_REG	drivers/e1000-7.x/src/e1000_hw.h	2294;"	d
EEPROM_COMPAT	drivers/e1000-4.x/src/e1000_hw.h	1309;"	d
EEPROM_COMPAT	drivers/e1000-5.x/src/e1000_hw.h	1517;"	d
EEPROM_COMPAT	drivers/e1000-7.x/src/e1000_hw.h	2280;"	d
EEPROM_COMPAT_CLIENT	drivers/e1000-4.x/src/e1000_hw.h	1335;"	d
EEPROM_COMPAT_SERVER	drivers/e1000-4.x/src/e1000_hw.h	1334;"	d
EEPROM_ERASE256_OPCODE_SPI	drivers/e1000-7.x/src/e1000_hw.h	2272;"	d
EEPROM_ERASE4K_OPCODE_SPI	drivers/e1000-7.x/src/e1000_hw.h	2270;"	d
EEPROM_ERASE64K_OPCODE_SPI	drivers/e1000-7.x/src/e1000_hw.h	2271;"	d
EEPROM_ERASE_OPCODE	drivers/e1000-4.x/src/e1000_hw.h	1304;"	d
EEPROM_ERASE_OPCODE_MICROWIRE	drivers/e1000-5.x/src/e1000_hw.h	1492;"	d
EEPROM_ERASE_OPCODE_MICROWIRE	drivers/e1000-7.x/src/e1000_hw.h	2257;"	d
EEPROM_EWDS_OPCODE	drivers/e1000-4.x/src/e1000_hw.h	1306;"	d
EEPROM_EWDS_OPCODE_MICROWIRE	drivers/e1000-5.x/src/e1000_hw.h	1494;"	d
EEPROM_EWDS_OPCODE_MICROWIRE	drivers/e1000-7.x/src/e1000_hw.h	2259;"	d
EEPROM_EWEN_OPCODE	drivers/e1000-4.x/src/e1000_hw.h	1305;"	d
EEPROM_EWEN_OPCODE_MICROWIRE	drivers/e1000-5.x/src/e1000_hw.h	1493;"	d
EEPROM_EWEN_OPCODE_MICROWIRE	drivers/e1000-7.x/src/e1000_hw.h	2258;"	d
EEPROM_FLASH_VERSION	drivers/e1000-4.x/src/e1000_hw.h	1313;"	d
EEPROM_FLASH_VERSION	drivers/e1000-5.x/src/e1000_hw.h	1526;"	d
EEPROM_FLASH_VERSION	drivers/e1000-7.x/src/e1000_hw.h	2293;"	d
EEPROM_ID_LED_SETTINGS	drivers/e1000-4.x/src/e1000_hw.h	1310;"	d
EEPROM_ID_LED_SETTINGS	drivers/e1000-5.x/src/e1000_hw.h	1518;"	d
EEPROM_ID_LED_SETTINGS	drivers/e1000-7.x/src/e1000_hw.h	2281;"	d
EEPROM_INIT_3GIO_3	drivers/e1000-7.x/src/e1000_hw.h	2289;"	d
EEPROM_INIT_CONTROL1_REG	drivers/e1000-4.x/src/e1000_hw.h	1311;"	d
EEPROM_INIT_CONTROL1_REG	drivers/e1000-5.x/src/e1000_hw.h	1521;"	d
EEPROM_INIT_CONTROL1_REG	drivers/e1000-7.x/src/e1000_hw.h	2285;"	d
EEPROM_INIT_CONTROL2_REG	drivers/e1000-4.x/src/e1000_hw.h	1312;"	d
EEPROM_INIT_CONTROL2_REG	drivers/e1000-5.x/src/e1000_hw.h	1522;"	d
EEPROM_INIT_CONTROL2_REG	drivers/e1000-7.x/src/e1000_hw.h	2286;"	d
EEPROM_INIT_CONTROL3_PORT_A	drivers/e1000-5.x/src/e1000_hw.h	1524;"	d
EEPROM_INIT_CONTROL3_PORT_A	drivers/e1000-7.x/src/e1000_hw.h	2291;"	d
EEPROM_INIT_CONTROL3_PORT_B	drivers/e1000-5.x/src/e1000_hw.h	1523;"	d
EEPROM_INIT_CONTROL3_PORT_B	drivers/e1000-7.x/src/e1000_hw.h	2288;"	d
EEPROM_MAX_RETRY_SPI	drivers/e1000-5.x/src/e1000_hw.h	1497;"	d
EEPROM_MAX_RETRY_SPI	drivers/e1000-7.x/src/e1000_hw.h	2262;"	d
EEPROM_NODE_ADDRESS_BYTE_0	drivers/e1000-4.x/src/e1000_hw.h	1355;"	d
EEPROM_NODE_ADDRESS_BYTE_0	drivers/e1000-5.x/src/e1000_hw.h	1575;"	d
EEPROM_NODE_ADDRESS_BYTE_0	drivers/e1000-7.x/src/e1000_hw.h	2359;"	d
EEPROM_PBA_BYTE_1	drivers/e1000-4.x/src/e1000_hw.h	1356;"	d
EEPROM_PBA_BYTE_1	drivers/e1000-5.x/src/e1000_hw.h	1576;"	d
EEPROM_PBA_BYTE_1	drivers/e1000-7.x/src/e1000_hw.h	2360;"	d
EEPROM_PHY_CLASS_A	drivers/e1000-5.x/src/e1000_hw.h	1555;"	d
EEPROM_PHY_CLASS_A	drivers/e1000-7.x/src/e1000_hw.h	2331;"	d
EEPROM_PHY_CLASS_WORD	drivers/e1000-5.x/src/e1000_hw.h	1520;"	d
EEPROM_PHY_CLASS_WORD	drivers/e1000-7.x/src/e1000_hw.h	2284;"	d
EEPROM_RDSR_OPCODE_SPI	drivers/e1000-5.x/src/e1000_hw.h	1503;"	d
EEPROM_RDSR_OPCODE_SPI	drivers/e1000-7.x/src/e1000_hw.h	2268;"	d
EEPROM_READ_OPCODE	drivers/e1000-4.x/src/e1000_hw.h	1302;"	d
EEPROM_READ_OPCODE_MICROWIRE	drivers/e1000-5.x/src/e1000_hw.h	1490;"	d
EEPROM_READ_OPCODE_MICROWIRE	drivers/e1000-7.x/src/e1000_hw.h	2255;"	d
EEPROM_READ_OPCODE_SPI	drivers/e1000-5.x/src/e1000_hw.h	1498;"	d
EEPROM_READ_OPCODE_SPI	drivers/e1000-7.x/src/e1000_hw.h	2263;"	d
EEPROM_RESERVED_WORD	drivers/e1000-5.x/src/e1000_hw.h	1578;"	d
EEPROM_RESERVED_WORD	drivers/e1000-7.x/src/e1000_hw.h	2362;"	d
EEPROM_SERDES_AMPLITUDE	drivers/e1000-5.x/src/e1000_hw.h	1519;"	d
EEPROM_SERDES_AMPLITUDE	drivers/e1000-7.x/src/e1000_hw.h	2283;"	d
EEPROM_SERDES_AMPLITUDE_MASK	drivers/e1000-5.x/src/e1000_hw.h	1552;"	d
EEPROM_SERDES_AMPLITUDE_MASK	drivers/e1000-7.x/src/e1000_hw.h	2328;"	d
EEPROM_SIZE_128B	drivers/e1000-5.x/src/e1000_hw.h	1513;"	d
EEPROM_SIZE_16KB	drivers/e1000-5.x/src/e1000_hw.h	1507;"	d
EEPROM_SIZE_1KB	drivers/e1000-5.x/src/e1000_hw.h	1511;"	d
EEPROM_SIZE_2KB	drivers/e1000-5.x/src/e1000_hw.h	1510;"	d
EEPROM_SIZE_4KB	drivers/e1000-5.x/src/e1000_hw.h	1509;"	d
EEPROM_SIZE_512B	drivers/e1000-5.x/src/e1000_hw.h	1512;"	d
EEPROM_SIZE_8KB	drivers/e1000-5.x/src/e1000_hw.h	1508;"	d
EEPROM_SIZE_MASK	drivers/e1000-5.x/src/e1000_hw.h	1514;"	d
EEPROM_SIZE_MASK	drivers/e1000-7.x/src/e1000_hw.h	2277;"	d
EEPROM_SIZE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2276;"	d
EEPROM_STATUS_BP0_SPI	drivers/e1000-5.x/src/e1000_hw.h	1158;"	d
EEPROM_STATUS_BP0_SPI	drivers/e1000-7.x/src/e1000_hw.h	1605;"	d
EEPROM_STATUS_BP1_SPI	drivers/e1000-5.x/src/e1000_hw.h	1159;"	d
EEPROM_STATUS_BP1_SPI	drivers/e1000-7.x/src/e1000_hw.h	1606;"	d
EEPROM_STATUS_RDY_SPI	drivers/e1000-5.x/src/e1000_hw.h	1156;"	d
EEPROM_STATUS_RDY_SPI	drivers/e1000-7.x/src/e1000_hw.h	1603;"	d
EEPROM_STATUS_WEN_SPI	drivers/e1000-5.x/src/e1000_hw.h	1157;"	d
EEPROM_STATUS_WEN_SPI	drivers/e1000-7.x/src/e1000_hw.h	1604;"	d
EEPROM_STATUS_WPEN_SPI	drivers/e1000-5.x/src/e1000_hw.h	1160;"	d
EEPROM_STATUS_WPEN_SPI	drivers/e1000-7.x/src/e1000_hw.h	1607;"	d
EEPROM_SUM	drivers/e1000-4.x/src/e1000_hw.h	1352;"	d
EEPROM_SUM	drivers/e1000-5.x/src/e1000_hw.h	1572;"	d
EEPROM_SUM	drivers/e1000-7.x/src/e1000_hw.h	2356;"	d
EEPROM_SWDEF_PINS_CTRL_PORT_0	drivers/e1000-7.x/src/e1000_hw.h	2290;"	d
EEPROM_SWDEF_PINS_CTRL_PORT_1	drivers/e1000-7.x/src/e1000_hw.h	2287;"	d
EEPROM_VERSION	drivers/e1000-7.x/src/e1000_hw.h	2282;"	d
EEPROM_WORD0A_66MHZ	drivers/e1000-4.x/src/e1000_hw.h	1342;"	d
EEPROM_WORD0A_66MHZ	drivers/e1000-5.x/src/e1000_hw.h	1562;"	d
EEPROM_WORD0A_66MHZ	drivers/e1000-7.x/src/e1000_hw.h	2338;"	d
EEPROM_WORD0A_FD	drivers/e1000-4.x/src/e1000_hw.h	1341;"	d
EEPROM_WORD0A_FD	drivers/e1000-5.x/src/e1000_hw.h	1561;"	d
EEPROM_WORD0A_FD	drivers/e1000-7.x/src/e1000_hw.h	2337;"	d
EEPROM_WORD0A_ILOS	drivers/e1000-4.x/src/e1000_hw.h	1338;"	d
EEPROM_WORD0A_ILOS	drivers/e1000-5.x/src/e1000_hw.h	1558;"	d
EEPROM_WORD0A_ILOS	drivers/e1000-7.x/src/e1000_hw.h	2334;"	d
EEPROM_WORD0A_LRST	drivers/e1000-4.x/src/e1000_hw.h	1340;"	d
EEPROM_WORD0A_LRST	drivers/e1000-5.x/src/e1000_hw.h	1560;"	d
EEPROM_WORD0A_LRST	drivers/e1000-7.x/src/e1000_hw.h	2336;"	d
EEPROM_WORD0A_SWDPIO	drivers/e1000-4.x/src/e1000_hw.h	1339;"	d
EEPROM_WORD0A_SWDPIO	drivers/e1000-5.x/src/e1000_hw.h	1559;"	d
EEPROM_WORD0A_SWDPIO	drivers/e1000-7.x/src/e1000_hw.h	2335;"	d
EEPROM_WORD0F_ANE	drivers/e1000-4.x/src/e1000_hw.h	1348;"	d
EEPROM_WORD0F_ANE	drivers/e1000-5.x/src/e1000_hw.h	1568;"	d
EEPROM_WORD0F_ANE	drivers/e1000-7.x/src/e1000_hw.h	2344;"	d
EEPROM_WORD0F_ASM_DIR	drivers/e1000-4.x/src/e1000_hw.h	1347;"	d
EEPROM_WORD0F_ASM_DIR	drivers/e1000-5.x/src/e1000_hw.h	1567;"	d
EEPROM_WORD0F_ASM_DIR	drivers/e1000-7.x/src/e1000_hw.h	2343;"	d
EEPROM_WORD0F_LPLU	drivers/e1000-7.x/src/e1000_hw.h	2346;"	d
EEPROM_WORD0F_PAUSE	drivers/e1000-4.x/src/e1000_hw.h	1346;"	d
EEPROM_WORD0F_PAUSE	drivers/e1000-5.x/src/e1000_hw.h	1566;"	d
EEPROM_WORD0F_PAUSE	drivers/e1000-7.x/src/e1000_hw.h	2342;"	d
EEPROM_WORD0F_PAUSE_MASK	drivers/e1000-4.x/src/e1000_hw.h	1345;"	d
EEPROM_WORD0F_PAUSE_MASK	drivers/e1000-5.x/src/e1000_hw.h	1565;"	d
EEPROM_WORD0F_PAUSE_MASK	drivers/e1000-7.x/src/e1000_hw.h	2341;"	d
EEPROM_WORD0F_SWPDIO_EXT	drivers/e1000-4.x/src/e1000_hw.h	1349;"	d
EEPROM_WORD0F_SWPDIO_EXT	drivers/e1000-5.x/src/e1000_hw.h	1569;"	d
EEPROM_WORD0F_SWPDIO_EXT	drivers/e1000-7.x/src/e1000_hw.h	2345;"	d
EEPROM_WORD1020_GIGA_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	2349;"	d
EEPROM_WORD1020_GIGA_DISABLE_NON_D0A	drivers/e1000-7.x/src/e1000_hw.h	2350;"	d
EEPROM_WORD1A_ASPM_MASK	drivers/e1000-7.x/src/e1000_hw.h	2353;"	d
EEPROM_WORD_SIZE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2275;"	d
EEPROM_WRDI_OPCODE_SPI	drivers/e1000-5.x/src/e1000_hw.h	1502;"	d
EEPROM_WRDI_OPCODE_SPI	drivers/e1000-7.x/src/e1000_hw.h	2267;"	d
EEPROM_WREN_OPCODE_SPI	drivers/e1000-5.x/src/e1000_hw.h	1501;"	d
EEPROM_WREN_OPCODE_SPI	drivers/e1000-7.x/src/e1000_hw.h	2266;"	d
EEPROM_WRITE_OPCODE	drivers/e1000-4.x/src/e1000_hw.h	1303;"	d
EEPROM_WRITE_OPCODE_MICROWIRE	drivers/e1000-5.x/src/e1000_hw.h	1491;"	d
EEPROM_WRITE_OPCODE_MICROWIRE	drivers/e1000-7.x/src/e1000_hw.h	2256;"	d
EEPROM_WRITE_OPCODE_SPI	drivers/e1000-5.x/src/e1000_hw.h	1499;"	d
EEPROM_WRITE_OPCODE_SPI	drivers/e1000-7.x/src/e1000_hw.h	2264;"	d
EEPROM_WRSR_OPCODE_SPI	drivers/e1000-5.x/src/e1000_hw.h	1504;"	d
EEPROM_WRSR_OPCODE_SPI	drivers/e1000-7.x/src/e1000_hw.h	2269;"	d
ELEMENTSCONF	linuxmodule/Makefile	/^ELEMENTSCONF = elements$/;"	m
ELEMENTSCONF	linuxmodule/Makefile	/^ELEMENTSCONF = elements_$(MINDRIVER)$/;"	m
ELEMENTSCONF	ns/Makefile	/^ELEMENTSCONF = elements$/;"	m
ELEMENTSCONF	ns/Makefile	/^ELEMENTSCONF = elements_$(MINDRIVER)$/;"	m
ELEMENTSCONF	userlevel/Makefile	/^ELEMENTSCONF = elements$/;"	m
ELEMENTSCONF	userlevel/Makefile	/^ELEMENTSCONF = elements_$(MINDRIVER)$/;"	m
ELEMENTS_OPT	tools/click-flatten/click-flatten.cc	41;"	d	file:
ELEMENT_HEADER	include/click/config.h	223;"	d
ELEMENT_LIBS	include/click/config.h	224;"	d
ELEMENT_MT_SAFE	include/click/config.h	225;"	d
ELEMENT_OBJS	userlevel/elements.mk	/^ELEMENT_OBJS = \\$/;"	m
ELEMENT_OBJS__0	userlevel/elements.mk	/^ELEMENT_OBJS__0 = \\$/;"	m
ELEMENT_OBJS__1	userlevel/elements.mk	/^ELEMENT_OBJS__1 = \\$/;"	m
ELEMENT_OBJS__10	userlevel/elements.mk	/^ELEMENT_OBJS__10 = \\$/;"	m
ELEMENT_OBJS__11	userlevel/elements.mk	/^ELEMENT_OBJS__11 = \\$/;"	m
ELEMENT_OBJS__12	userlevel/elements.mk	/^ELEMENT_OBJS__12 = \\$/;"	m
ELEMENT_OBJS__13	userlevel/elements.mk	/^ELEMENT_OBJS__13 = \\$/;"	m
ELEMENT_OBJS__14	userlevel/elements.mk	/^ELEMENT_OBJS__14 = \\$/;"	m
ELEMENT_OBJS__15	userlevel/elements.mk	/^ELEMENT_OBJS__15 = \\$/;"	m
ELEMENT_OBJS__16	userlevel/elements.mk	/^ELEMENT_OBJS__16 = \\$/;"	m
ELEMENT_OBJS__17	userlevel/elements.mk	/^ELEMENT_OBJS__17 = \\$/;"	m
ELEMENT_OBJS__18	userlevel/elements.mk	/^ELEMENT_OBJS__18 = \\$/;"	m
ELEMENT_OBJS__19	userlevel/elements.mk	/^ELEMENT_OBJS__19 = \\$/;"	m
ELEMENT_OBJS__2	userlevel/elements.mk	/^ELEMENT_OBJS__2 = \\$/;"	m
ELEMENT_OBJS__20	userlevel/elements.mk	/^ELEMENT_OBJS__20 = \\$/;"	m
ELEMENT_OBJS__21	userlevel/elements.mk	/^ELEMENT_OBJS__21 = \\$/;"	m
ELEMENT_OBJS__22	userlevel/elements.mk	/^ELEMENT_OBJS__22 = \\$/;"	m
ELEMENT_OBJS__23	userlevel/elements.mk	/^ELEMENT_OBJS__23 = \\$/;"	m
ELEMENT_OBJS__24	userlevel/elements.mk	/^ELEMENT_OBJS__24 = \\$/;"	m
ELEMENT_OBJS__25	userlevel/elements.mk	/^ELEMENT_OBJS__25 = \\$/;"	m
ELEMENT_OBJS__26	userlevel/elements.mk	/^ELEMENT_OBJS__26 = \\$/;"	m
ELEMENT_OBJS__27	userlevel/elements.mk	/^ELEMENT_OBJS__27 = \\$/;"	m
ELEMENT_OBJS__28	userlevel/elements.mk	/^ELEMENT_OBJS__28 = \\$/;"	m
ELEMENT_OBJS__29	userlevel/elements.mk	/^ELEMENT_OBJS__29 = \\$/;"	m
ELEMENT_OBJS__3	userlevel/elements.mk	/^ELEMENT_OBJS__3 = \\$/;"	m
ELEMENT_OBJS__30	userlevel/elements.mk	/^ELEMENT_OBJS__30 = \\$/;"	m
ELEMENT_OBJS__4	userlevel/elements.mk	/^ELEMENT_OBJS__4 = \\$/;"	m
ELEMENT_OBJS__5	userlevel/elements.mk	/^ELEMENT_OBJS__5 = \\$/;"	m
ELEMENT_OBJS__6	userlevel/elements.mk	/^ELEMENT_OBJS__6 = \\$/;"	m
ELEMENT_OBJS__7	userlevel/elements.mk	/^ELEMENT_OBJS__7 = \\$/;"	m
ELEMENT_OBJS__8	userlevel/elements.mk	/^ELEMENT_OBJS__8 = \\$/;"	m
ELEMENT_OBJS__9	userlevel/elements.mk	/^ELEMENT_OBJS__9 = \\$/;"	m
ELEMENT_OPT	tools/click-mkmindriver/click-mkmindriver.cc	46;"	d	file:
ELEMENT_PROVIDES	click-buildtool	/^ELEMENT_PROVIDES() keywords.$/;"	f
ELEMENT_PROVIDES	include/click/config.h	222;"	d
ELEMENT_REQUIRES	include/click/config.h	221;"	d
EMERG_TABLE_ID_FOR_STATS	elements/local/OpenFlow/datapath.cc	212;"	d	file:
EMPTY_NOTIFIER	include/click/notifier.hh	/^    static const char EMPTY_NOTIFIER[];$/;"	m	class:Notifier
EMPTY_NOTIFIER	lib/notifier.cc	/^const char Notifier::EMPTY_NOTIFIER[] = "empty";$/;"	m	class:Notifier	file:
ENABLE_PAUSE	elements/grid/dsdvroutetable.hh	168;"	d
ENABLE_SEEN	elements/grid/dsdvroutetable.hh	188;"	d
END_EXPIRE_CODE	elements/grid/gridlogger.hh	/^  static const unsigned char END_EXPIRE_CODE            = 0x05;$/;"	m	class:GridLogger
END_RECV_CODE	elements/grid/gridlogger.hh	/^  static const unsigned char END_RECV_CODE              = 0x03;$/;"	m	class:GridLogger
ENET_HEADER_SIZE	drivers/e1000-4.x/src/e1000_hw.h	271;"	d
ENET_HEADER_SIZE	drivers/e1000-5.x/src/e1000_hw.h	404;"	d
ENET_HEADER_SIZE	drivers/e1000-7.x/src/e1000_hw.h	522;"	d
ENSURE_BUILD_STRING	lib/clp.c	2000;"	d	file:
EPSILON	elements/grid/gridlocationinfo.cc	321;"	d	file:
ERRH_SENTINEL	include/click/error.hh	/^		const char *begin, const char *end, ...) ERRH_SENTINEL;$/;"	m	class:ErrorHandler
ERRH_SENTINEL	include/click/error.hh	24;"	d
ERRH_SENTINEL	include/click/error.hh	26;"	d
ERRH_SENTINEL	include/click/error.hh	885;"	d
ERROR_CODE	elements/local/OpenFlow/lib/ofp-print.cc	890;"	d	file:
ERROR_TYPE	elements/local/OpenFlow/lib/ofp-print.cc	889;"	d	file:
ERROR_TYPE	include/click/lexer.hh	/^    enum { TUNNEL_TYPE = 0, ERROR_TYPE = 1 };$/;"	e	enum:Lexer::__anon444
ETHERNET_ADDRESS_LENGTH	drivers/e1000-4.x/src/ans.h	81;"	d
ETHERNET_ARP_TYPE	drivers/e1000-4.x/src/e1000_hw.h	289;"	d
ETHERNET_ARP_TYPE	drivers/e1000-5.x/src/e1000_hw.h	422;"	d
ETHERNET_ARP_TYPE	drivers/e1000-7.x/src/e1000_hw.h	540;"	d
ETHERNET_FCS_SIZE	drivers/e1000-4.x/src/e1000_hw.h	274;"	d
ETHERNET_FCS_SIZE	drivers/e1000-5.x/src/e1000_hw.h	407;"	d
ETHERNET_FCS_SIZE	drivers/e1000-7.x/src/e1000_hw.h	525;"	d
ETHERNET_IEEE_VLAN_TYPE	drivers/e1000-4.x/src/e1000_hw.h	287;"	d
ETHERNET_IEEE_VLAN_TYPE	drivers/e1000-5.x/src/e1000_hw.h	420;"	d
ETHERNET_IEEE_VLAN_TYPE	drivers/e1000-7.x/src/e1000_hw.h	538;"	d
ETHERNET_IP_TYPE	drivers/e1000-4.x/src/e1000_hw.h	288;"	d
ETHERNET_IP_TYPE	drivers/e1000-5.x/src/e1000_hw.h	421;"	d
ETHERNET_IP_TYPE	drivers/e1000-7.x/src/e1000_hw.h	539;"	d
ETHERTYPE	elements/grid/linktester.hh	/^  static const uint16_t ETHERTYPE = 0x7eee;$/;"	m	class:LinkTester
ETHERTYPE_8021Q	include/clicknet/ether.h	26;"	d
ETHERTYPE_ARP	include/clicknet/ether.h	24;"	d
ETHERTYPE_GRID	include/clicknet/ether.h	31;"	d
ETHERTYPE_GRID_ACK	elements/grid/ackresponder.hh	23;"	d
ETHERTYPE_IP	include/clicknet/ether.h	23;"	d
ETHERTYPE_IP6	include/clicknet/ether.h	27;"	d
ETHERTYPE_LINKSTAT	elements/grid/linkstat.hh	/^    ETHERTYPE_LINKSTAT = 0x7ffe,$/;"	e	enum:LinkStat::__anon221
ETHERTYPE_LINKSTAT	elements/grid/linkstat.hh	/^  static const unsigned short ETHERTYPE_LINKSTAT = 0x7ffe;$/;"	m	class:LinkStat
ETHERTYPE_LINKSTAT2	elements/grid/linkstat.hh	/^    ETHERTYPE_LINKSTAT2 = 0x7ffd$/;"	e	enum:LinkStat::__anon221
ETHERTYPE_LINKSTAT2	elements/grid/linkstat.hh	/^  static const unsigned short ETHERTYPE_LINKSTAT2 = 0x7ffd;$/;"	m	class:LinkStat
ETHERTYPE_LLDP	elements/local/OpenFlow/datapath.hh	94;"	d
ETHERTYPE_MACCONTROL	include/clicknet/ether.h	28;"	d
ETHERTYPE_PPPOE_DISC	include/clicknet/ether.h	29;"	d
ETHERTYPE_PPPOE_SESSION	include/clicknet/ether.h	30;"	d
ETHERTYPE_TRAIL	include/clicknet/ether.h	25;"	d
ETHER_MACCTL_OP_PAUSE	include/clicknet/ether.h	82;"	d
ETHTOOL_BUSINFO_LEN	drivers/e1000-7.x/src/kcompat.h	543;"	d
ETHTOOL_GCOALESCE	drivers/e1000-5.x/src/kcompat.h	198;"	d
ETHTOOL_GCOALESCE	drivers/e1000-7.x/src/kcompat.h	346;"	d
ETHTOOL_GEEPROM	drivers/e1000-5.x/src/kcompat.h	144;"	d
ETHTOOL_GEEPROM	drivers/e1000-5.x/src/kcompat.h	192;"	d
ETHTOOL_GEEPROM	drivers/e1000-7.x/src/kcompat.h	295;"	d
ETHTOOL_GEEPROM	drivers/e1000-7.x/src/kcompat.h	340;"	d
ETHTOOL_GLINK	drivers/e1000-5.x/src/kcompat.h	160;"	d
ETHTOOL_GLINK	drivers/e1000-5.x/src/kcompat.h	189;"	d
ETHTOOL_GLINK	drivers/e1000-7.x/src/kcompat.h	312;"	d
ETHTOOL_GLINK	drivers/e1000-7.x/src/kcompat.h	337;"	d
ETHTOOL_GMSGLVL	drivers/e1000-5.x/src/kcompat.h	180;"	d
ETHTOOL_GMSGLVL	drivers/e1000-7.x/src/kcompat.h	328;"	d
ETHTOOL_GPAUSEPARAM	drivers/e1000-5.x/src/kcompat.h	328;"	d
ETHTOOL_GPAUSEPARAM	drivers/e1000-7.x/src/kcompat.h	478;"	d
ETHTOOL_GREGS	drivers/e1000-5.x/src/kcompat.h	145;"	d
ETHTOOL_GREGS	drivers/e1000-5.x/src/kcompat.h	169;"	d
ETHTOOL_GREGS	drivers/e1000-7.x/src/kcompat.h	296;"	d
ETHTOOL_GREGS	drivers/e1000-7.x/src/kcompat.h	316;"	d
ETHTOOL_GRINGPARAM	drivers/e1000-5.x/src/kcompat.h	300;"	d
ETHTOOL_GRINGPARAM	drivers/e1000-7.x/src/kcompat.h	449;"	d
ETHTOOL_GRXCSUM	drivers/e1000-5.x/src/kcompat.h	353;"	d
ETHTOOL_GRXCSUM	drivers/e1000-7.x/src/kcompat.h	504;"	d
ETHTOOL_GSG	drivers/e1000-5.x/src/kcompat.h	365;"	d
ETHTOOL_GSG	drivers/e1000-7.x/src/kcompat.h	516;"	d
ETHTOOL_GSTATS	drivers/e1000-5.x/src/kcompat.h	382;"	d
ETHTOOL_GSTATS	drivers/e1000-5.x/src/kcompat.h	93;"	d
ETHTOOL_GSTATS	drivers/e1000-7.x/src/kcompat.h	237;"	d
ETHTOOL_GSTATS	drivers/e1000-7.x/src/kcompat.h	533;"	d
ETHTOOL_GSTRINGS	drivers/e1000-5.x/src/kcompat.h	119;"	d
ETHTOOL_GSTRINGS	drivers/e1000-5.x/src/kcompat.h	376;"	d
ETHTOOL_GSTRINGS	drivers/e1000-7.x/src/kcompat.h	266;"	d
ETHTOOL_GSTRINGS	drivers/e1000-7.x/src/kcompat.h	527;"	d
ETHTOOL_GTSO	drivers/e1000-5.x/src/kcompat.h	385;"	d
ETHTOOL_GTSO	drivers/e1000-7.x/src/kcompat.h	536;"	d
ETHTOOL_GTXCSUM	drivers/e1000-5.x/src/kcompat.h	359;"	d
ETHTOOL_GTXCSUM	drivers/e1000-7.x/src/kcompat.h	510;"	d
ETHTOOL_NWAY_RST	drivers/e1000-5.x/src/kcompat.h	186;"	d
ETHTOOL_NWAY_RST	drivers/e1000-7.x/src/kcompat.h	334;"	d
ETHTOOL_OPS_COMPAT	drivers/e1000-5.x/src/kcompat.h	597;"	d
ETHTOOL_OPS_COMPAT	drivers/e1000-5.x/src/kcompat_ethtool.c	763;"	d	file:
ETHTOOL_OPS_COMPAT	drivers/e1000-7.x/src/kcompat.h	788;"	d
ETHTOOL_OPS_COMPAT	drivers/e1000-7.x/src/kcompat_ethtool.c	773;"	d	file:
ETHTOOL_PHYS_ID	drivers/e1000-5.x/src/kcompat.h	117;"	d
ETHTOOL_PHYS_ID	drivers/e1000-5.x/src/kcompat.h	379;"	d
ETHTOOL_PHYS_ID	drivers/e1000-7.x/src/kcompat.h	262;"	d
ETHTOOL_PHYS_ID	drivers/e1000-7.x/src/kcompat.h	530;"	d
ETHTOOL_SCOALESCE	drivers/e1000-5.x/src/kcompat.h	297;"	d
ETHTOOL_SCOALESCE	drivers/e1000-7.x/src/kcompat.h	446;"	d
ETHTOOL_SEEPROM	drivers/e1000-5.x/src/kcompat.h	195;"	d
ETHTOOL_SEEPROM	drivers/e1000-7.x/src/kcompat.h	343;"	d
ETHTOOL_SMSGLVL	drivers/e1000-5.x/src/kcompat.h	183;"	d
ETHTOOL_SMSGLVL	drivers/e1000-7.x/src/kcompat.h	331;"	d
ETHTOOL_SPAUSEPARAM	drivers/e1000-5.x/src/kcompat.h	350;"	d
ETHTOOL_SPAUSEPARAM	drivers/e1000-7.x/src/kcompat.h	501;"	d
ETHTOOL_SRINGPARAM	drivers/e1000-5.x/src/kcompat.h	325;"	d
ETHTOOL_SRINGPARAM	drivers/e1000-7.x/src/kcompat.h	475;"	d
ETHTOOL_SRXCSUM	drivers/e1000-5.x/src/kcompat.h	356;"	d
ETHTOOL_SRXCSUM	drivers/e1000-7.x/src/kcompat.h	507;"	d
ETHTOOL_SSG	drivers/e1000-5.x/src/kcompat.h	369;"	d
ETHTOOL_SSG	drivers/e1000-7.x/src/kcompat.h	520;"	d
ETHTOOL_STSO	drivers/e1000-5.x/src/kcompat.h	388;"	d
ETHTOOL_STSO	drivers/e1000-7.x/src/kcompat.h	539;"	d
ETHTOOL_STXCSUM	drivers/e1000-5.x/src/kcompat.h	362;"	d
ETHTOOL_STXCSUM	drivers/e1000-7.x/src/kcompat.h	513;"	d
ETHTOOL_TEST	drivers/e1000-5.x/src/kcompat.h	131;"	d
ETHTOOL_TEST	drivers/e1000-5.x/src/kcompat.h	373;"	d
ETHTOOL_TEST	drivers/e1000-7.x/src/kcompat.h	280;"	d
ETHTOOL_TEST	drivers/e1000-7.x/src/kcompat.h	524;"	d
ETH_10MB	include/clicknet/dhcp.h	24;"	d
ETH_10MB_LEN	include/clicknet/dhcp.h	25;"	d
ETH_ADDR_ARGS	elements/local/OpenFlow/lib/packets.hh	109;"	d
ETH_ADDR_FMT	elements/local/OpenFlow/lib/packets.hh	107;"	d
ETH_ADDR_LEN	elements/local/OpenFlow/lib/packets.hh	45;"	d
ETH_GSTRING_LEN	drivers/e1000-5.x/src/e1000_ethtool.c	50;"	d	file:
ETH_GSTRING_LEN	drivers/e1000-7.x/src/kcompat.h	233;"	d
ETH_HEADER_LEN	elements/local/OpenFlow/lib/packets.hh	116;"	d
ETH_LENGTH_OF_ADDRESS	drivers/e1000-4.x/src/e1000_hw.h	256;"	d
ETH_LENGTH_OF_ADDRESS	drivers/e1000-5.x/src/e1000_hw.h	385;"	d
ETH_LENGTH_OF_ADDRESS	drivers/e1000-7.x/src/e1000_hw.h	503;"	d
ETH_PAYLOAD_MAX	elements/local/OpenFlow/lib/packets.hh	118;"	d
ETH_PAYLOAD_MIN	elements/local/OpenFlow/lib/packets.hh	117;"	d
ETH_SS_STATS	drivers/e1000-5.x/src/kcompat.h	/^	ETH_SS_STATS,$/;"	e	enum:ethtool_stringset
ETH_SS_STATS	drivers/e1000-7.x/src/kcompat.h	/^	ETH_SS_STATS,$/;"	e	enum:ethtool_stringset
ETH_SS_TEST	drivers/e1000-5.x/src/kcompat.h	/^	ETH_SS_TEST             = 0,$/;"	e	enum:ethtool_stringset
ETH_SS_TEST	drivers/e1000-7.x/src/kcompat.h	/^	ETH_SS_TEST             = 0,$/;"	e	enum:ethtool_stringset
ETH_TEST_FL_FAILED	drivers/e1000-5.x/src/kcompat.h	/^	ETH_TEST_FL_FAILED	= (1 << 1),$/;"	e	enum:ethtool_test_flags
ETH_TEST_FL_FAILED	drivers/e1000-7.x/src/kcompat.h	/^	ETH_TEST_FL_FAILED	= (1 << 1),$/;"	e	enum:ethtool_test_flags
ETH_TEST_FL_OFFLINE	drivers/e1000-5.x/src/kcompat.h	/^	ETH_TEST_FL_OFFLINE	= (1 << 0),$/;"	e	enum:ethtool_test_flags
ETH_TEST_FL_OFFLINE	drivers/e1000-7.x/src/kcompat.h	/^	ETH_TEST_FL_OFFLINE	= (1 << 0),$/;"	e	enum:ethtool_test_flags
ETH_TOTAL_MAX	elements/local/OpenFlow/lib/packets.hh	120;"	d
ETH_TOTAL_MIN	elements/local/OpenFlow/lib/packets.hh	119;"	d
ETH_TYPE_ARP	elements/local/OpenFlow/lib/packets.hh	113;"	d
ETH_TYPE_IP	elements/local/OpenFlow/lib/packets.hh	112;"	d
ETH_TYPE_VLAN	elements/local/OpenFlow/lib/packets.hh	114;"	d
ETH_VLAN_TOTAL_MAX	elements/local/OpenFlow/lib/packets.hh	121;"	d
ETX2METRIC_HH	elements/grid/etx2metric.hh	2;"	d
ETX2Metric	elements/grid/etx2metric.cc	/^ETX2Metric::ETX2Metric()$/;"	f	class:ETX2Metric
ETX2Metric	elements/grid/etx2metric.hh	/^class ETX2Metric : public GridGenericMetric {$/;"	c
ETXMETRIC_HH	elements/grid/etxmetric.hh	2;"	d
ETXMetric	elements/grid/etxmetric.cc	/^ETXMetric::ETXMetric()$/;"	f	class:ETXMetric
ETXMetric	elements/grid/etxmetric.hh	/^class ETXMetric : public GridGenericMetric {$/;"	c
ET_NULL	include/click/lexer.hh	/^    enum { ET_SCOPED = 0x80000000, ET_TMASK = 0x7FFFFFFF, ET_NULL = 0x7FFFFFFF };$/;"	e	enum:Lexer::__anon446
ET_SCOPED	include/click/lexer.hh	/^    enum { ET_SCOPED = 0x80000000, ET_TMASK = 0x7FFFFFFF, ET_NULL = 0x7FFFFFFF };$/;"	e	enum:Lexer::__anon446
ET_TMASK	include/click/lexer.hh	/^    enum { ET_SCOPED = 0x80000000, ET_TMASK = 0x7FFFFFFF, ET_NULL = 0x7FFFFFFF };$/;"	e	enum:Lexer::__anon446
EVP_MAX_MD_SIZE	elements/ipsec/hmac.hh	65;"	d
EV_SET_UDATA_CAST	lib/selectset.cc	31;"	d	file:
EV_SET_UDATA_CAST	lib/selectset.cc	33;"	d	file:
EWMAParameters	elements/ip/ipratemon.hh	/^    struct EWMAParameters : public FixedEWMAXParameters<stability_shift, scale> {$/;"	s	class:IPRateMonitor
EXCHANGE	elements/ip/lineariplookup.cc	216;"	d	file:
EXCHANGE	elements/ip/sortediplookup.cc	154;"	d	file:
EXCLUSIVE	include/click/handler.hh	/^	EXCLUSIVE = h_exclusive,$/;"	e	enum:Handler::DeprecatedFlags
EXIT_HANDLER_OPT	userlevel/click.cc	72;"	d	file:
EXPAND_VARS_OPT	tools/click-flatten/click-flatten.cc	44;"	d	file:
EXPENSIVE	include/click/handler.hh	/^	EXPENSIVE = h_expensive,$/;"	e	enum:Handler::DeprecatedFlags
EXPIRE_HANDLER	elements/grid/gridlogger.hh	/^    EXPIRE_HANDLER$/;"	e	enum:GridLogger::state_t
EXPIRE_TIMEOUT_MS	elements/ethernet/ip6ndsolicitor.hh	/^  enum { EXPIRE_TIMEOUT_MS = 15 * 1000 };$/;"	e	enum:IP6NDSolicitor::__anon233
EXPIRE_TIMEOUT_MS	elements/grid/floodinglocquerier.hh	/^  enum { EXPIRE_TIMEOUT_MS = 15 * 1000 };$/;"	e	enum:FloodingLocQuerier::__anon222
EXPIRE_TIMEOUT_MS	elements/grid/locqueryresponder.hh	/^  static const int EXPIRE_TIMEOUT_MS = 2 * 1000;$/;"	m	class:LocQueryResponder
EXPIRE_TIMER_PERIOD	elements/grid/gridroutetable.hh	/^  static const unsigned int EXPIRE_TIMER_PERIOD = 100; \/\/ msecs$/;"	m	class:GridRouteTable
EXPIRE_TIMER_PERIOD	elements/grid/updateroutes.hh	/^  static const unsigned int EXPIRE_TIMER_PERIOD = 100; \/\/ msecs$/;"	m	class:UpdateGridRoutes
EXPORT_ELEMENT	include/click/config.h	220;"	d
EXPORT_SYMTAB	linuxmodule/proclikefs.c	27;"	d	file:
EXPRESSION_OPT	apps/clicky/src/clicky.cc	34;"	d	file:
EXPRESSION_OPT	ns/nsclick.cc	67;"	d	file:
EXPRESSION_OPT	tools/click-align/click-align.cc	300;"	d	file:
EXPRESSION_OPT	tools/click-check/click-check.cc	44;"	d	file:
EXPRESSION_OPT	tools/click-combine/click-combine.cc	46;"	d	file:
EXPRESSION_OPT	tools/click-devirtualize/click-devirtualize.cc	46;"	d	file:
EXPRESSION_OPT	tools/click-fastclassifier/click-fastclassifier.cc	51;"	d	file:
EXPRESSION_OPT	tools/click-flatten/click-flatten.cc	37;"	d	file:
EXPRESSION_OPT	tools/click-install/click-install.cc	56;"	d	file:
EXPRESSION_OPT	tools/click-mkmindriver/click-mkmindriver.cc	41;"	d	file:
EXPRESSION_OPT	tools/click-pretty/click-pretty.cc	41;"	d	file:
EXPRESSION_OPT	tools/click-undead/click-undead.cc	47;"	d	file:
EXPRESSION_OPT	tools/click-xform/click-xform.cc	411;"	d	file:
EXPRESSION_OPT	tools/click2xml/click2xml.cc	38;"	d	file:
EXPRESSION_OPT	tools/click2xml/xml2click.cc	40;"	d	file:
EXPRESSION_OPT	userlevel/click.cc	62;"	d	file:
EXTRAS_OPT	tools/click-mkmindriver/click-mkmindriver.cc	51;"	d	file:
EXTRA_CFLAGS	linuxmodule/Makefile	/^EXTRA_CFLAGS = $(CLICKCPPFLAGS) $(CLICKCFLAGS) $(CLICKDEFS) $(CLICKINCLUDES)$/;"	m
EXTRA_DRIVER_OBJS	bsdmodule/Makefile	/^EXTRA_DRIVER_OBJS = $/;"	m
EXTRA_DRIVER_OBJS	linuxmodule/Makefile	/^EXTRA_DRIVER_OBJS = $/;"	m
EXTRA_DRIVER_OBJS	ns/Makefile	/^EXTRA_DRIVER_OBJS = $/;"	m
EXTRA_DRIVER_OBJS	userlevel/Makefile	/^EXTRA_DRIVER_OBJS = $/;"	m
EXTRA_LENGTH_ANNO	include/click/packet_anno.hh	88;"	d
EXTRA_LENGTH_ANNO_OFFSET	include/click/packet_anno.hh	86;"	d
EXTRA_LENGTH_ANNO_SIZE	include/click/packet_anno.hh	87;"	d
EXTRA_PACKETS_ANNO	include/click/packet_anno.hh	62;"	d
EXTRA_PACKETS_ANNO_OFFSET	include/click/packet_anno.hh	60;"	d
EXTRA_PACKETS_ANNO_SIZE	include/click/packet_anno.hh	61;"	d
EXTRA_PROVIDES	Makefile	/^EXTRA_PROVIDES =$/;"	m
EXTRA_PROVIDES	doc/Makefile	/^EXTRA_PROVIDES =$/;"	m
Element	include/click/element.hh	/^class Element { public:$/;"	c
Element	lib/element.cc	/^Element::Element()$/;"	f	class:Element
ElementArg	include/click/args.hh	/^struct ElementArg {$/;"	s
ElementCastArg	include/click/args.hh	/^    ElementCastArg(const char *t)$/;"	f	struct:ElementCastArg
ElementCastArg	include/click/args.hh	/^struct ElementCastArg {$/;"	s
ElementCastTracker	include/click/routervisitor.hh	/^    ElementCastTracker(Router *router, const String &name)$/;"	f	class:ElementCastTracker
ElementCastTracker	include/click/routervisitor.hh	/^class ElementCastTracker : public ElementTracker { public:$/;"	c
ElementClassT	tools/lib/eclasst.cc	/^ElementClassT::ElementClassT(const String &name)$/;"	f	class:ElementClassT
ElementClassT	tools/lib/eclasst.hh	/^class ElementClassT { public:$/;"	c
ElementFactory	include/click/lexer.hh	/^    typedef Element *(*ElementFactory)(uintptr_t);$/;"	t	class:Lexer
ElementFilter	include/click/elemfilter.hh	/^    ElementFilter() {$/;"	f	class:ElementFilter
ElementFilter	include/click/elemfilter.hh	/^class ElementFilter { public:$/;"	c
ElementFilterRouterVisitor	lib/router.cc	/^    ElementFilterRouterVisitor(ElementFilter *filter,$/;"	f	class:__anon512::ElementFilterRouterVisitor
ElementFilterRouterVisitor	lib/router.cc	/^class ElementFilterRouterVisitor : public RouterVisitor { public:$/;"	c	namespace:__anon512	file:
ElementMap	tools/lib/elementmap.cc	/^ElementMap::ElementMap()$/;"	f	class:ElementMap
ElementMap	tools/lib/elementmap.cc	/^ElementMap::ElementMap(const String& str, ErrorHandler* errh)$/;"	f	class:ElementMap
ElementMap	tools/lib/elementmap.hh	/^class ElementMap { public:$/;"	c
ElementNeighborhoodTracker	include/click/routervisitor.hh	/^    ElementNeighborhoodTracker(Router *router, int diameter = 1)$/;"	f	class:ElementNeighborhoodTracker
ElementNeighborhoodTracker	include/click/routervisitor.hh	/^class ElementNeighborhoodTracker : public ElementTracker { public:$/;"	c
ElementState	lib/lexer.cc	/^    ElementState(const String &name_, int type_, bool bare_,$/;"	f	struct:__anon511::ElementState
ElementState	lib/lexer.cc	/^struct ElementState {$/;"	s	namespace:__anon511	file:
ElementState	tools/lib/lexert.cc	/^    ElementState(const String &name_, ElementClassT *type_, bool bare_,$/;"	f	struct:__anon534::ElementState
ElementState	tools/lib/lexert.cc	/^struct ElementState {$/;"	s	namespace:__anon534	file:
ElementT	tools/lib/elementt.cc	/^ElementT::ElementT()$/;"	f	class:ElementT
ElementT	tools/lib/elementt.cc	/^ElementT::ElementT(const ElementT &o)$/;"	f	class:ElementT
ElementT	tools/lib/elementt.cc	/^ElementT::ElementT(const String &n, ElementClassT *eclass,$/;"	f	class:ElementT
ElementT	tools/lib/elementt.hh	/^struct ElementT {$/;"	s
ElementTracker	include/click/routervisitor.hh	/^class ElementTracker : public RouterVisitor { public:$/;"	c
ElementTracker	lib/routervisitor.cc	/^ElementTracker::ElementTracker(Router *router)$/;"	f	class:ElementTracker
ElementTraits	tools/lib/etraits.hh	/^ElementTraits::ElementTraits()$/;"	f	class:ElementTraits
ElementTraits	tools/lib/etraits.hh	/^struct ElementTraits {$/;"	s
ElementType	include/click/lexer.hh	/^    struct ElementType {$/;"	s	class:Lexer
ElementType	tools/lib/routert.hh	/^	ElementType(ElementClassT *c, int sc, int pn) : type(c), scope_cookie(sc), prev_name(pn) { assert(type); type->use(); }$/;"	f	struct:RouterT::ElementType
ElementType	tools/lib/routert.hh	/^	ElementType(const ElementType &o) : type(o.type), scope_cookie(o.scope_cookie), prev_name(o.prev_name) { type->use(); }$/;"	f	struct:RouterT::ElementType
ElementType	tools/lib/routert.hh	/^    struct ElementType {$/;"	s	class:RouterT
ElementTypeInfo	tools/click-devirtualize/specializer.hh	/^ElementTypeInfo::ElementTypeInfo()$/;"	f	class:ElementTypeInfo
ElementTypeInfo	tools/click-devirtualize/specializer.hh	/^struct ElementTypeInfo {$/;"	s
ElementsOutput	tools/click-pretty/click-pretty.cc	/^ElementsOutput::ElementsOutput(RouterT *r, const ProcessingT &processing, const HashTable<String, String> &main_attrs)$/;"	f	class:ElementsOutput
ElementsOutput	tools/click-pretty/click-pretty.cc	/^class ElementsOutput { public:$/;"	c	file:
Elt	include/click/hashmap.hh	/^	Elt(const Pair &p)		: Pair(p) { }$/;"	f	struct:HashMap::Elt
Elt	include/click/hashmap.hh	/^    struct Elt : public Pair {$/;"	s	class:HashMap
Encryption_key	elements/ipsec/sadatatuple.hh	/^    uint8_t Encryption_key[KEY_SIZE]; \/\/ The Data key$/;"	m	class:SADataTuple
Endian_Reverse32	elements/ipsec/sha1_impl.cc	169;"	d	file:
Endian_Reverse32	elements/ipsec/sha1_impl.cc	176;"	d	file:
EnsureEther	elements/ethernet/ensureether.cc	/^EnsureEther::EnsureEther()$/;"	f	class:EnsureEther
EnsureEther	elements/ethernet/ensureether.hh	/^class EnsureEther : public Element { public:$/;"	c
Entry	elements/ethernet/arpresponder.hh	/^    struct Entry {$/;"	s	class:ARPResponder
Entry	elements/ethernet/ip6ndadvertiser.hh	/^  struct Entry {$/;"	s	class:IP6NDAdvertiser
Entry	elements/grid/pep.hh	/^  struct Entry {$/;"	s	class:PEP
Entry	elements/grid/regionpep.hh	/^  struct Entry {$/;"	s	class:EstimateRouterRegion
Entry	elements/ip/ipfragmentmap.hh	/^	Entry(const IPFlowID &key_)$/;"	f	struct:IPFragmentMap::Entry
Entry	elements/ip/ipfragmentmap.hh	/^    struct Entry {$/;"	s	class:IPFragmentMap
Entry	include/click/ino.hh	/^    struct Entry {$/;"	s	class:ClickIno
Entry	include/click/ip6table.hh	/^  struct Entry {$/;"	s	class:IP6Table
Entry	include/click/iptable.hh	/^  struct Entry {$/;"	s	class:IPTable
Entry	include/click/nameinfo.hh	/^    struct Entry {$/;"	s	class:StaticNameDB
EntryMap	elements/ip6/addresstranslator.hh	/^ struct EntryMap {$/;"	s	class:AddressTranslator
EraseIPPayload	elements/analysis/eraseippayload.cc	/^EraseIPPayload::EraseIPPayload()$/;"	f	class:EraseIPPayload
EraseIPPayload	elements/analysis/eraseippayload.hh	/^class EraseIPPayload : public Element { public:$/;"	c
ErrH	lib/error.cc	320;"	d	file:
ErrorElement	elements/standard/errorelement.cc	/^ErrorElement::ErrorElement()$/;"	f	class:ErrorElement
ErrorElement	include/click/standard/errorelement.hh	/^class ErrorElement : public Element { public:$/;"	c
ErrorHandler	include/click/error.hh	/^    ErrorHandler()$/;"	f	class:ErrorHandler
ErrorHandler	include/click/error.hh	/^class ErrorHandler { public:$/;"	c
ErrorReceiver	elements/userlevel/handlerproxy.hh	/^    struct ErrorReceiver {$/;"	s	class:HandlerProxy
ErrorReceiverHook	elements/userlevel/handlerproxy.hh	/^    typedef ErrorHandler* (*ErrorReceiverHook)(const String&, void*);$/;"	t	class:HandlerProxy
ErrorTest	elements/test/errortest.cc	/^ErrorTest::ErrorTest()$/;"	f	class:ErrorTest
ErrorTest	elements/test/errortest.hh	/^class ErrorTest : public Element { public:$/;"	c
ErrorTestHandler	elements/test/errortest.cc	/^    ErrorTestHandler() { }$/;"	f	class:__anon401::ErrorTestHandler
ErrorTestHandler	elements/test/errortest.cc	/^class ErrorTestHandler : public ErrorHandler { public:$/;"	c	namespace:__anon401	file:
ErrorVeneer	include/click/error.hh	/^    ErrorVeneer(ErrorHandler *errh)$/;"	f	class:ErrorVeneer
ErrorVeneer	include/click/error.hh	/^class ErrorVeneer : public ErrorHandler { public:$/;"	c
EstByMeas	elements/grid/gridroutetable.hh	/^    EstByMeas$/;"	e	enum:GridRouteTable::__anon224
EstByQual	elements/grid/gridroutetable.hh	/^    EstByQual = 0,$/;"	e	enum:GridRouteTable::__anon224
EstBySig	elements/grid/gridroutetable.hh	/^    EstBySig,$/;"	e	enum:GridRouteTable::__anon224
EstBySigQual	elements/grid/gridroutetable.hh	/^    EstBySigQual,$/;"	e	enum:GridRouteTable::__anon224
EstimateRouterRegion	elements/grid/regionpep.cc	/^EstimateRouterRegion::EstimateRouterRegion()$/;"	f	class:EstimateRouterRegion
EstimateRouterRegion	elements/grid/regionpep.hh	/^class EstimateRouterRegion : public GridLocationInfo {$/;"	c
EtherAddress	include/click/etheraddress.hh	/^    EtherAddress(uint16_t m) {$/;"	f	class:EtherAddress
EtherAddress	include/click/etheraddress.hh	/^    explicit inline EtherAddress(const unsigned char *data) {$/;"	f	class:EtherAddress
EtherAddress	include/click/etheraddress.hh	/^    inline EtherAddress() {$/;"	f	class:EtherAddress
EtherAddress	include/click/etheraddress.hh	/^    inline EtherAddress(const uninitialized_t &unused) {$/;"	f	class:EtherAddress
EtherAddress	include/click/etheraddress.hh	/^class EtherAddress { public:$/;"	c
EtherAddressArg	include/click/etheraddress.hh	/^struct EtherAddressArg {$/;"	s
EtherCount	elements/wifi/ethercount.cc	/^EtherCount::EtherCount()$/;"	f	class:EtherCount
EtherCount	elements/wifi/ethercount.hh	/^class EtherCount : public Element { public:$/;"	c
EtherCount_read_param	elements/wifi/ethercount.cc	/^EtherCount_read_param(Element *e, void *thunk)$/;"	f	file:
EtherCount_write_param	elements/wifi/ethercount.cc	/^EtherCount_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
EtherEncap	elements/ethernet/etherencap.cc	/^EtherEncap::EtherEncap()$/;"	f	class:EtherEncap
EtherEncap	elements/ethernet/etherencap.hh	/^class EtherEncap : public Element { public:$/;"	c
EtherEncap	elements/ethernet/stripetherheader.hh	/^class EtherEncap : public Element { public:$/;"	c
EtherMirror	elements/ethernet/ethermirror.cc	/^EtherMirror::EtherMirror()$/;"	f	class:EtherMirror
EtherMirror	elements/ethernet/ethermirror.hh	/^class EtherMirror : public Element { public:$/;"	c
EtherPauseSource	elements/ethernet/etherpausesource.cc	/^EtherPauseSource::EtherPauseSource()$/;"	f	class:EtherPauseSource
EtherPauseSource	elements/ethernet/etherpausesource.hh	/^class EtherPauseSource : public Element { public:$/;"	c
EtherSpanTree	elements/etherswitch/spantree.cc	/^EtherSpanTree::EtherSpanTree()$/;"	f	class:EtherSpanTree
EtherSpanTree	elements/etherswitch/spantree.hh	/^class EtherSpanTree : public Element {$/;"	c
EtherSwitch	elements/etherswitch/etherswitch.cc	/^EtherSwitch::EtherSwitch()$/;"	f	class:EtherSwitch
EtherSwitch	elements/etherswitch/etherswitch.hh	/^class EtherSwitch : public Element { public:$/;"	c
EtherType	drivers/e1000-4.x/src/ans.h	/^    u16 EtherType;$/;"	m	struct:_x8021Q_tag_t
EtherVLANAnnoEncap	elements/ethernet/ethervlanannoencap.hh	/^class EtherVLANAnnoEncap : public Element { public:$/;"	c
EtherVLANEncap	elements/ethernet/ethervlanencap.cc	/^EtherVLANEncap::EtherVLANEncap()$/;"	f	class:EtherVLANEncap
EtherVLANEncap	elements/ethernet/ethervlanencap.hh	/^class EtherVLANEncap : public Element { public:$/;"	c
Expander	elements/standard/script.hh	/^    struct Expander : public VariableExpander {$/;"	s	class:Script
ExtraDecap	elements/wifi/extradecap.cc	/^ExtraDecap::ExtraDecap()$/;"	f	class:ExtraDecap
ExtraDecap	elements/wifi/extradecap.hh	/^class ExtraDecap : public Element { public:$/;"	c
ExtraDecap_read_param	elements/wifi/extradecap.cc	/^ExtraDecap_read_param(Element *e, void *thunk)$/;"	f	file:
ExtraDecap_write_param	elements/wifi/extradecap.cc	/^ExtraDecap_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
ExtraEncap	elements/wifi/extraencap.cc	/^ExtraEncap::ExtraEncap()$/;"	f	class:ExtraEncap
ExtraEncap	elements/wifi/extraencap.hh	/^class ExtraEncap : public Element { public:$/;"	c
ExtraEncap_read_param	elements/wifi/extraencap.cc	/^ExtraEncap_read_param(Element *e, void *thunk)$/;"	f	file:
ExtraEncap_write_param	elements/wifi/extraencap.cc	/^ExtraEncap_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
F	lib/md5.cc	208;"	d	file:
FAKE_DLT_AIRONET_HEADER	elements/userlevel/fakepcap.hh	25;"	d
FAKE_DLT_ATM_RFC1483	elements/userlevel/fakepcap.hh	19;"	d
FAKE_DLT_C_HDLC	elements/userlevel/fakepcap.hh	21;"	d
FAKE_DLT_EN10MB	elements/userlevel/fakepcap.hh	15;"	d
FAKE_DLT_FDDI	elements/userlevel/fakepcap.hh	17;"	d
FAKE_DLT_HOST_RAW	elements/userlevel/fakepcap.hh	30;"	d
FAKE_DLT_IEEE802_11	elements/userlevel/fakepcap.hh	22;"	d
FAKE_DLT_IEEE802_11_RADIO	elements/userlevel/fakepcap.hh	27;"	d
FAKE_DLT_LINUX_SLL	elements/userlevel/fakepcap.hh	23;"	d
FAKE_DLT_NONE	elements/userlevel/fakepcap.hh	13;"	d
FAKE_DLT_NULL	elements/userlevel/fakepcap.hh	14;"	d
FAKE_DLT_PPP	elements/userlevel/fakepcap.hh	16;"	d
FAKE_DLT_PPP_HDLC	elements/userlevel/fakepcap.hh	18;"	d
FAKE_DLT_PRISM_HEADER	elements/userlevel/fakepcap.hh	24;"	d
FAKE_DLT_RAW	elements/userlevel/fakepcap.hh	20;"	d
FAKE_DLT_SUNATM	elements/userlevel/fakepcap.hh	26;"	d
FAKE_MODIFIED_PCAP_MAGIC	elements/userlevel/fakepcap.hh	8;"	d
FAKE_PCAP_MAGIC	elements/userlevel/fakepcap.hh	7;"	d
FAKE_PCAP_VERSION_MAJOR	elements/userlevel/fakepcap.hh	9;"	d
FAKE_PCAP_VERSION_MINOR	elements/userlevel/fakepcap.hh	10;"	d
FALSE	drivers/e1000-4.x/src/e1000_osdep.h	/^    FALSE = 0,$/;"	e	enum:__anon35
FALSE	drivers/e1000-5.x/src/e1000_osdep.h	/^    FALSE = 0,$/;"	e	enum:__anon126
FALSE	drivers/e1000-5.x/src/e1000_osdep.h	61;"	d
FALSE	drivers/e1000-7.x/src/e1000_osdep.h	/^    FALSE = 0,$/;"	e	enum:__anon70
FALSE	drivers/e1000-7.x/src/e1000_osdep.h	66;"	d
FASTROUTE	include/click/packet.hh	/^	FASTROUTE = 6$/;"	e	enum:Packet::PacketType
FASTTCPFLOWS_HH	elements/linuxmodule/fasttcpflows.hh	2;"	d
FASTUDPFLOWS_HH	elements/linuxmodule/fastudpflows.hh	2;"	d
FASTUDPSRCIP6_HH	elements/linuxmodule/fastudpsrcip6.hh	2;"	d
FASTUDPSRC_HH	elements/linuxmodule/fastudpsrc.hh	2;"	d
FAST_CHECKSUM_ALIGNED	include/click/config-linuxmodule.h	163;"	d
FATAL_SIGNAL_H	elements/local/OpenFlow/lib/fatal-signal.hh	35;"	d
FC_DEFAULT_HI_THRESH	drivers/e1000-4.x/src/e1000_hw.h	1418;"	d
FC_DEFAULT_HI_THRESH	drivers/e1000-5.x/src/e1000_hw.h	1641;"	d
FC_DEFAULT_HI_THRESH	drivers/e1000-7.x/src/e1000_hw.h	2454;"	d
FC_DEFAULT_LO_THRESH	drivers/e1000-4.x/src/e1000_hw.h	1419;"	d
FC_DEFAULT_LO_THRESH	drivers/e1000-5.x/src/e1000_hw.h	1642;"	d
FC_DEFAULT_LO_THRESH	drivers/e1000-7.x/src/e1000_hw.h	2455;"	d
FC_DEFAULT_TX_TIMER	drivers/e1000-4.x/src/e1000_hw.h	1420;"	d
FC_DEFAULT_TX_TIMER	drivers/e1000-5.x/src/e1000_hw.h	1643;"	d
FC_DEFAULT_TX_TIMER	drivers/e1000-7.x/src/e1000_hw.h	2456;"	d
FDDI_FC_LLCMASK	include/clicknet/fddi.h	41;"	d
FDDI_FC_LLC_ASYNC	include/clicknet/fddi.h	40;"	d
FEXTNVM_SW_CONFIG	drivers/e1000-7.x/src/e1000_hw.h	924;"	d
FFE_IDLE_ERR_COUNT_TIMEOUT_100	drivers/e1000-5.x/src/e1000_hw.h	1937;"	d
FFE_IDLE_ERR_COUNT_TIMEOUT_100	drivers/e1000-7.x/src/e1000_hw.h	2839;"	d
FFE_IDLE_ERR_COUNT_TIMEOUT_20	drivers/e1000-5.x/src/e1000_hw.h	1936;"	d
FFE_IDLE_ERR_COUNT_TIMEOUT_20	drivers/e1000-7.x/src/e1000_hw.h	2838;"	d
FF_BEG	elements/analysis/fromflandump.hh	/^	   FF_SADDR, FF_DADDR, FF_DPORT, FF_CT_PKT, FF_CT_BYTES, FF_BEG,$/;"	e	enum:FromFlanDump::__anon294
FF_CT_BYTES	elements/analysis/fromflandump.hh	/^	   FF_SADDR, FF_DADDR, FF_DPORT, FF_CT_PKT, FF_CT_BYTES, FF_BEG,$/;"	e	enum:FromFlanDump::__anon294
FF_CT_PKT	elements/analysis/fromflandump.hh	/^	   FF_SADDR, FF_DADDR, FF_DPORT, FF_CT_PKT, FF_CT_BYTES, FF_BEG,$/;"	e	enum:FromFlanDump::__anon294
FF_DADDR	elements/analysis/fromflandump.hh	/^	   FF_SADDR, FF_DADDR, FF_DPORT, FF_CT_PKT, FF_CT_BYTES, FF_BEG,$/;"	e	enum:FromFlanDump::__anon294
FF_DPORT	elements/analysis/fromflandump.hh	/^	   FF_SADDR, FF_DADDR, FF_DPORT, FF_CT_PKT, FF_CT_BYTES, FF_BEG,$/;"	e	enum:FromFlanDump::__anon294
FF_FIRST_FLOW	elements/analysis/fromflandump.hh	/^	   FF_FIRST_FLOW = FF_SADDR, FF_LAST_FLOW = FF_BEG + 1,$/;"	e	enum:FromFlanDump::__anon294
FF_FIRST_PKT	elements/analysis/fromflandump.hh	/^	   FF_FIRST_PKT = FF_FLID, FF_LAST_PKT = FF_FLAGS + 1,$/;"	e	enum:FromFlanDump::__anon294
FF_FLAGS	elements/analysis/fromflandump.hh	/^    enum { FF_FLID = 0, FF_TIME, FF_SIZE, FF_FLAGS,$/;"	e	enum:FromFlanDump::__anon294
FF_FLID	elements/analysis/fromflandump.hh	/^    enum { FF_FLID = 0, FF_TIME, FF_SIZE, FF_FLAGS,$/;"	e	enum:FromFlanDump::__anon294
FF_LAST	elements/analysis/fromflandump.hh	/^	   FF_LAST = FF_LAST_FLOW };$/;"	e	enum:FromFlanDump::__anon294
FF_LAST_FLOW	elements/analysis/fromflandump.hh	/^	   FF_FIRST_FLOW = FF_SADDR, FF_LAST_FLOW = FF_BEG + 1,$/;"	e	enum:FromFlanDump::__anon294
FF_LAST_PKT	elements/analysis/fromflandump.hh	/^	   FF_FIRST_PKT = FF_FLID, FF_LAST_PKT = FF_FLAGS + 1,$/;"	e	enum:FromFlanDump::__anon294
FF_SADDR	elements/analysis/fromflandump.hh	/^	   FF_SADDR, FF_DADDR, FF_DPORT, FF_CT_PKT, FF_CT_BYTES, FF_BEG,$/;"	e	enum:FromFlanDump::__anon294
FF_SIZE	elements/analysis/fromflandump.hh	/^    enum { FF_FLID = 0, FF_TIME, FF_SIZE, FF_FLAGS,$/;"	e	enum:FromFlanDump::__anon294
FF_TIME	elements/analysis/fromflandump.hh	/^    enum { FF_FLID = 0, FF_TIME, FF_SIZE, FF_FLAGS,$/;"	e	enum:FromFlanDump::__anon294
FIELD_CSUM	elements/ip/ipfilter.hh	/^	FIELD_CSUM	= (TYPE_FIELD | ((10*8) << FIELD_OFFSET_SHIFT) | 15),$/;"	e	enum:IPFilter::__anon347
FIELD_DSCP	elements/ip/ipfilter.hh	/^	FIELD_DSCP	= (TYPE_FIELD | ((1*8) << FIELD_OFFSET_SHIFT) | 5),$/;"	e	enum:IPFilter::__anon347
FIELD_HL	elements/ip/ipfilter.hh	/^	FIELD_HL	= (TYPE_FIELD | (4 << FIELD_OFFSET_SHIFT) | 3),$/;"	e	enum:IPFilter::__anon347
FIELD_ICMP_TYPE	elements/ip/ipfilter.hh	/^	FIELD_ICMP_TYPE = (TYPE_FIELD | (IP_PROTO_ICMP << FIELD_PROTO_SHIFT) | (0 << FIELD_OFFSET_SHIFT) | 7)$/;"	e	enum:IPFilter::__anon347
FIELD_ID	elements/ip/ipfilter.hh	/^	FIELD_ID	= (TYPE_FIELD | ((4*8) << FIELD_OFFSET_SHIFT) | 15),$/;"	e	enum:IPFilter::__anon347
FIELD_IPLEN	elements/ip/ipfilter.hh	/^	FIELD_IPLEN	= (TYPE_FIELD | ((2*8) << FIELD_OFFSET_SHIFT) | 15),$/;"	e	enum:IPFilter::__anon347
FIELD_LENGTH_MASK	elements/ip/ipfilter.hh	/^	FIELD_LENGTH_MASK = (0x1F << FIELD_LENGTH_SHIFT),$/;"	e	enum:IPFilter::__anon347
FIELD_LENGTH_SHIFT	elements/ip/ipfilter.hh	/^	FIELD_LENGTH_SHIFT = 0,$/;"	e	enum:IPFilter::__anon347
FIELD_MAX_LENGTH	drivers/e1000-4.x/src/e1000_proc.c	55;"	d	file:
FIELD_OFFSET_MASK	elements/ip/ipfilter.hh	/^	FIELD_OFFSET_MASK = (0xFFFF << FIELD_OFFSET_SHIFT),$/;"	e	enum:IPFilter::__anon347
FIELD_OFFSET_SHIFT	elements/ip/ipfilter.hh	/^	FIELD_OFFSET_SHIFT = 5,$/;"	e	enum:IPFilter::__anon347
FIELD_PROTO_MASK	elements/ip/ipfilter.hh	/^	FIELD_PROTO_MASK = (0x1FF << FIELD_PROTO_SHIFT),$/;"	e	enum:IPFilter::__anon347
FIELD_PROTO_SHIFT	elements/ip/ipfilter.hh	/^	FIELD_PROTO_SHIFT = 21,$/;"	e	enum:IPFilter::__anon347
FIELD_TCP_WIN	elements/ip/ipfilter.hh	/^	FIELD_TCP_WIN = (TYPE_FIELD | (IP_PROTO_TCP << FIELD_PROTO_SHIFT) | ((14*8) << FIELD_OFFSET_SHIFT) | 15),$/;"	e	enum:IPFilter::__anon347
FIELD_TOS	elements/ip/ipfilter.hh	/^	FIELD_TOS	= (TYPE_FIELD | ((1*8) << FIELD_OFFSET_SHIFT) | 7),$/;"	e	enum:IPFilter::__anon347
FIELD_TTL	elements/ip/ipfilter.hh	/^	FIELD_TTL	= (TYPE_FIELD | ((8*8) << FIELD_OFFSET_SHIFT) | 7),$/;"	e	enum:IPFilter::__anon347
FIELD_VERSION	elements/ip/ipfilter.hh	/^	FIELD_VERSION	= (TYPE_FIELD | (0 << FIELD_OFFSET_SHIFT) | 3),$/;"	e	enum:IPFilter::__anon347
FIGS	etc/diagrams/Makefile	/^FIGS = samp01_examples.1 samp01_examples.2 samp01_examples.3 samp01_examples.4 samp01_examples.5 samp01_examples.6 samp01_examples.7 samp01_examples.8 \\$/;"	m
FILEPART	drivers/e1000-4.x/src/idiag_test.c	50;"	d	file:
FILEPOS_THUNK	elements/analysis/fromflandump.cc	/^    ACTIVE_THUNK, STOP_THUNK, FILESIZE_THUNK, FILEPOS_THUNK$/;"	e	enum:__anon256	file:
FILESIZE_THUNK	elements/analysis/fromflandump.cc	/^    ACTIVE_THUNK, STOP_THUNK, FILESIZE_THUNK, FILEPOS_THUNK$/;"	e	enum:__anon256	file:
FILE_OPT	apps/clicky/src/clicky.cc	37;"	d	file:
FILLDIR	lib/ino.cc	332;"	d	file:
FILP_READ_STRINGNO	linuxmodule/clickfs.cc	439;"	d	file:
FILP_STRINGNO	linuxmodule/clickfs.cc	438;"	d	file:
FILP_WRITE_STRINGNO	linuxmodule/clickfs.cc	440;"	d	file:
FILTER_OPT	tools/click-check/click-check.cc	46;"	d	file:
FINDELEMFLAGS	Makefile	/^FINDELEMFLAGS = $/;"	m
FINDELEMFLAGS	bsdmodule/Makefile	/^FINDELEMFLAGS = $/;"	m
FINDELEMFLAGS	linuxmodule/Makefile	/^FINDELEMFLAGS = $/;"	m
FINDELEMFLAGS	ns/Makefile	/^FINDELEMFLAGS = $/;"	m
FINDELEMFLAGS	userlevel/Makefile	/^FINDELEMFLAGS = $/;"	m
FIRST_DRIVER_OPT	tools/click-align/click-align.cc	305;"	d	file:
FIRST_DRIVER_OPT	tools/click-check/click-check.cc	49;"	d	file:
FIRST_DRIVER_OPT	tools/click-pretty/click-pretty.cc	53;"	d	file:
FIRST_DRIVER_OPT	tools/click2xml/click2xml.cc	42;"	d	file:
FIRST_GLOBAL_HANDLER	include/click/router.hh	/^    enum { FIRST_GLOBAL_HANDLER = 0x40000000 };$/;"	e	enum:Router::__anon439
FIRST_TIMESTAMP_ANNO	include/click/packet_anno.hh	95;"	d
FIRST_TIMESTAMP_ANNO_OFFSET	include/click/packet_anno.hh	92;"	d
FIRST_TIMESTAMP_ANNO_SIZE	include/click/packet_anno.hh	93;"	d
FIXDEP	etc/pkg-bsdmodule.mk	/^FIXDEP = @-sed 's\/\\.o:\/\\.bo:\/' < $*.d > $*.bd; \/bin\/rm -f $*.d$/;"	m
FIXDEP	etc/pkg-linuxmodule.mk	/^FIXDEP = @-sed 's\/\\.o:\/\\.ko:\/' < $*.d > $*.kd; \/bin\/rm -f $*.d$/;"	m
FIXDEP	etc/pkg-userlevel.mk	/^FIXDEP = @-sed 's\/\\.o:\/\\.uo:\/' < $*.d > $*.ud; \/bin\/rm -f $*.d$/;"	m
FIXSRCLOC_HH	elements/grid/fixsrcloc.hh	2;"	d
FIX_IP_SRC_ANNO	include/click/packet_anno.hh	34;"	d
FIX_IP_SRC_ANNO_OFFSET	include/click/packet_anno.hh	32;"	d
FIX_IP_SRC_ANNO_SIZE	include/click/packet_anno.hh	33;"	d
FLATTEN_OPT	tools/click-flatten/click-flatten.cc	39;"	d	file:
FLATTEN_OPT	tools/click2xml/click2xml.cc	40;"	d	file:
FLATTEN_OPT	tools/click2xml/xml2click.cc	42;"	d	file:
FLOWMAP_BITS	elements/analysis/aggpktcounter.hh	/^    enum { FLOWMAP_BITS = 10, NFLOWMAP = 1 << FLOWMAP_BITS };$/;"	e	enum:AggregatePacketCounter::__anon286
FLOWMAP_BITS	elements/analysis/toipflowdumps.hh	/^    enum { FLOWMAP_BITS = 10, NFLOWMAP = 1 << FLOWMAP_BITS };$/;"	e	enum:ToIPFlowDumps::__anon298
FLOWMAP_BITS	elements/userlevel/ipflowrawsockets.hh	/^    enum { FLOWMAP_BITS = 10, NFLOWMAP = 1 << FLOWMAP_BITS };$/;"	e	enum:IPFlowRawSockets::__anon212
FLOWNET_ALGORITHM_NAME_SIZE	elements/local/FlowNet/common/Algorithm.hh	4;"	d
FLOW_CONTROL_ADDRESS_HIGH	drivers/e1000-4.x/src/e1000_hw.h	1414;"	d
FLOW_CONTROL_ADDRESS_HIGH	drivers/e1000-5.x/src/e1000_hw.h	1637;"	d
FLOW_CONTROL_ADDRESS_HIGH	drivers/e1000-7.x/src/e1000_hw.h	2450;"	d
FLOW_CONTROL_ADDRESS_LOW	drivers/e1000-4.x/src/e1000_hw.h	1413;"	d
FLOW_CONTROL_ADDRESS_LOW	drivers/e1000-5.x/src/e1000_hw.h	1636;"	d
FLOW_CONTROL_ADDRESS_LOW	drivers/e1000-7.x/src/e1000_hw.h	2449;"	d
FLOW_CONTROL_DEFAULT	drivers/e1000-4.x/src/e1000_param.c	188;"	d	file:
FLOW_CONTROL_DEFAULT	drivers/e1000-5.x/src/e1000_param.c	204;"	d	file:
FLOW_CONTROL_DEFAULT	drivers/e1000-7.x/src/e1000_param.c	140;"	d	file:
FLOW_CONTROL_TYPE	drivers/e1000-4.x/src/e1000_hw.h	1415;"	d
FLOW_CONTROL_TYPE	drivers/e1000-5.x/src/e1000_hw.h	1638;"	d
FLOW_CONTROL_TYPE	drivers/e1000-7.x/src/e1000_hw.h	2451;"	d
FLOW_EXPIRE_TIMER_INTERVAL	elements/local/FlowNet/scheduler/PFSchedFW.hh	74;"	d
FLOW_H	elements/local/OpenFlow/lib/flow.hh	34;"	d
FLOW_MAX_AGE	elements/local/FlowNet/common/Flow.hh	65;"	d
FOLD_FACTOR	elements/ip/ipratemon.cc	171;"	d	file:
FOLD_INCREASE_FACTOR	elements/ip/ipratemon.cc	151;"	d	file:
FORWARD	elements/etherswitch/spantree.hh	/^  enum PortState {BLOCK, LISTEN, LEARN, FORWARD};$/;"	e	enum:EtherSpanTree::PortState
FOR_BSDMODULE	tools/click-install/common.hh	19;"	d
FOR_EACH_ENABLED_PORT	elements/local/OpenFlow/lib/stp.cc	151;"	d	file:
FOR_LINUXMODULE	tools/click-install/common.hh	17;"	d
FRAC_BITS	include/click/standard/scheduleinfo.hh	/^    enum { FRAC_BITS = 10 };$/;"	e	enum:ScheduleInfo::__anon414
FRAME_DATA	drivers/e1000-4.x/src/ans_driver.h	37;"	d
FRCell	elements/analysis/fromnlanrdump.hh	/^    struct FRCell {$/;"	s	class:FromNLANRDump
FREEBSD_INCLUDEDIR	include/click/pathvars.h	16;"	d
FROMDEVICE_LINUX	elements/userlevel/fromdevice.hh	6;"	d
FROMDEVICE_PCAP	elements/userlevel/fromdevice.hh	9;"	d
FRPlusCell	elements/analysis/fromnlanrdump.hh	/^    struct FRPlusCell {$/;"	s	class:FromNLANRDump
FTPPortMapper	elements/app/ftpportmapper.cc	/^FTPPortMapper::FTPPortMapper()$/;"	f	class:FTPPortMapper
FTPPortMapper	elements/app/ftpportmapper.hh	/^class FTPPortMapper : public Element { public:$/;"	c
FUCKED	elements/grid/airoinfo.cc	36;"	d	file:
FUCKED_GCC_2_96	elements/grid/linkstat.hh	93;"	d
FULL_DUMP_ON_TRIG_UPDATE	elements/grid/dsdvroutetable.cc	43;"	d	file:
FULL_DUPLEX	drivers/e1000-4.x/src/e1000_hw.h	268;"	d
FULL_DUPLEX	drivers/e1000-5.x/src/e1000_hw.h	401;"	d
FULL_DUPLEX	drivers/e1000-7.x/src/e1000_hw.h	519;"	d
FULL_NOTIFIER	include/click/notifier.hh	/^    static const char FULL_NOTIFIER[];$/;"	m	class:Notifier
FULL_NOTIFIER	lib/notifier.cc	/^const char Notifier::FULL_NOTIFIER[] = "full";$/;"	m	class:Notifier	file:
FWD_RATE_ANNO	include/click/packet_anno.hh	51;"	d
FWD_RATE_ANNO_OFFSET	include/click/packet_anno.hh	49;"	d
FWD_RATE_ANNO_SIZE	include/click/packet_anno.hh	50;"	d
FWReqIter	elements/grid/dsrroutetable.hh	/^  typedef ForwardedReqMap::iterator FWReqIter;$/;"	t	class:DSRRouteTable
F_00_19	elements/ipsec/sha1_impl.cc	191;"	d	file:
F_20_39	elements/ipsec/sha1_impl.cc	192;"	d	file:
F_40_59	elements/ipsec/sha1_impl.cc	193;"	d	file:
F_60_79	elements/ipsec/sha1_impl.cc	194;"	d	file:
F_ICMP_TYPE	elements/ip/ipfieldinfo.hh	/^	F_ICMP_TYPE = (IP_PROTO_ICMP << PROTO_SHIFT) | (7 << LENGTH_SHIFT)$/;"	e	enum:IPField::__anon344
F_IP_TOS	elements/ip/ipfieldinfo.hh	/^	F_IP_TOS = (8 << OFFSET_SHIFT) | (7 << LENGTH_SHIFT),$/;"	e	enum:IPField::__anon344
FallbackToGF	elements/grid/gridroutecb.hh	/^    FallbackToGF       = 3,$/;"	e	enum:GridRouteActionCallback::Action
FarTable	elements/grid/updateroutes.hh	/^  typedef HashMap<IPAddress, far_entry> FarTable;$/;"	t	class:UpdateGridRoutes
FastClassifier_Cid	tools/click-fastclassifier/click-fastclassifier.cc	/^struct FastClassifier_Cid {$/;"	s	file:
FastDirectEWMA	include/click/ewma.hh	/^typedef DirectEWMAX<FixedEWMAXParameters<3, 10> > FastDirectEWMA;$/;"	t
FastTCPFlows	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows::FastTCPFlows()$/;"	f	class:FastTCPFlows
FastTCPFlows	elements/linuxmodule/fasttcpflows.hh	/^class FastTCPFlows : public Element {$/;"	c
FastTCPFlows_active_write_handler	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows_active_write_handler$/;"	f	file:
FastTCPFlows_limit_write_handler	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows_limit_write_handler$/;"	f	file:
FastTCPFlows_rate_write_handler	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows_rate_write_handler$/;"	f	file:
FastTCPFlows_read_count_handler	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows_read_count_handler(Element *e, void *)$/;"	f	file:
FastTCPFlows_read_rate_handler	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows_read_rate_handler(Element *e, void *)$/;"	f	file:
FastTCPFlows_reset_write_handler	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows_reset_write_handler$/;"	f	file:
FastUDPFlows	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows::FastUDPFlows()$/;"	f	class:FastUDPFlows
FastUDPFlows	elements/linuxmodule/fastudpflows.hh	/^class FastUDPFlows : public Element {$/;"	c
FastUDPFlows_active_write_handler	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows_active_write_handler$/;"	f	file:
FastUDPFlows_limit_write_handler	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows_limit_write_handler$/;"	f	file:
FastUDPFlows_rate_write_handler	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows_rate_write_handler$/;"	f	file:
FastUDPFlows_read_count_handler	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows_read_count_handler(Element *e, void *)$/;"	f	file:
FastUDPFlows_read_rate_handler	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows_read_rate_handler(Element *e, void *)$/;"	f	file:
FastUDPFlows_reset_write_handler	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows_reset_write_handler$/;"	f	file:
FastUDPSource	elements/bsdmodule/fastudpsrc.cc	/^FastUDPSource::FastUDPSource()$/;"	f	class:FastUDPSource
FastUDPSource	elements/bsdmodule/fastudpsrc.hh	/^class FastUDPSource : public Element {$/;"	c
FastUDPSource	elements/linuxmodule/fastudpsrc.cc	/^FastUDPSource::FastUDPSource()$/;"	f	class:FastUDPSource
FastUDPSource	elements/linuxmodule/fastudpsrc.hh	/^class FastUDPSource : public Element {$/;"	c
FastUDPSourceIP6	elements/linuxmodule/fastudpsrcip6.cc	/^FastUDPSourceIP6::FastUDPSourceIP6()$/;"	f	class:FastUDPSourceIP6
FastUDPSourceIP6	elements/linuxmodule/fastudpsrcip6.hh	/^class FastUDPSourceIP6 : public Element {$/;"	c
FastUDPSourceIP6_active_write_handler	elements/linuxmodule/fastudpsrcip6.cc	/^FastUDPSourceIP6_active_write_handler$/;"	f	file:
FastUDPSourceIP6_limit_write_handler	elements/linuxmodule/fastudpsrcip6.cc	/^FastUDPSourceIP6_limit_write_handler$/;"	f	file:
FastUDPSourceIP6_rate_write_handler	elements/linuxmodule/fastudpsrcip6.cc	/^FastUDPSourceIP6_rate_write_handler$/;"	f	file:
FastUDPSourceIP6_read_count_handler	elements/linuxmodule/fastudpsrcip6.cc	/^FastUDPSourceIP6_read_count_handler(Element *e, void *)$/;"	f	file:
FastUDPSourceIP6_read_rate_handler	elements/linuxmodule/fastudpsrcip6.cc	/^FastUDPSourceIP6_read_rate_handler(Element *e, void *)$/;"	f	file:
FastUDPSourceIP6_reset_write_handler	elements/linuxmodule/fastudpsrcip6.cc	/^FastUDPSourceIP6_reset_write_handler$/;"	f	file:
FastUDPSource_active_write_handler	elements/bsdmodule/fastudpsrc.cc	/^FastUDPSource_active_write_handler$/;"	f	file:
FastUDPSource_active_write_handler	elements/linuxmodule/fastudpsrc.cc	/^FastUDPSource_active_write_handler$/;"	f	file:
FastUDPSource_limit_write_handler	elements/bsdmodule/fastudpsrc.cc	/^FastUDPSource_limit_write_handler$/;"	f	file:
FastUDPSource_limit_write_handler	elements/linuxmodule/fastudpsrc.cc	/^FastUDPSource_limit_write_handler$/;"	f	file:
FastUDPSource_rate_write_handler	elements/bsdmodule/fastudpsrc.cc	/^FastUDPSource_rate_write_handler$/;"	f	file:
FastUDPSource_rate_write_handler	elements/linuxmodule/fastudpsrc.cc	/^FastUDPSource_rate_write_handler$/;"	f	file:
FastUDPSource_read_count_handler	elements/bsdmodule/fastudpsrc.cc	/^FastUDPSource_read_count_handler(Element *e, void *)$/;"	f	file:
FastUDPSource_read_count_handler	elements/linuxmodule/fastudpsrc.cc	/^FastUDPSource_read_count_handler(Element *e, void *)$/;"	f	file:
FastUDPSource_read_rate_handler	elements/bsdmodule/fastudpsrc.cc	/^FastUDPSource_read_rate_handler(Element *e, void *)$/;"	f	file:
FastUDPSource_read_rate_handler	elements/linuxmodule/fastudpsrc.cc	/^FastUDPSource_read_rate_handler(Element *e, void *)$/;"	f	file:
FastUDPSource_reset_write_handler	elements/bsdmodule/fastudpsrc.cc	/^FastUDPSource_reset_write_handler$/;"	f	file:
FastUDPSource_reset_write_handler	elements/linuxmodule/fastudpsrc.cc	/^FastUDPSource_reset_write_handler$/;"	f	file:
FieldReader	elements/analysis/ipsumdumpinfo.hh	/^struct FieldReader {$/;"	s	namespace:IPSummaryDump
FieldSynonym	elements/analysis/ipsumdumpinfo.hh	/^struct FieldSynonym {$/;"	s	namespace:IPSummaryDump
FieldWriter	elements/analysis/ipsumdumpinfo.hh	/^struct FieldWriter {$/;"	s	namespace:IPSummaryDump
FileErrorHandler	include/click/error.hh	/^class FileErrorHandler : public ErrorHandler { public:$/;"	c
FileErrorHandler	lib/error.cc	/^FileErrorHandler::FileErrorHandler(FILE *f, const String &context)$/;"	f	class:FileErrorHandler
FileState	include/click/lexer.hh	/^    struct FileState {$/;"	s	class:Lexer
FileState	lib/lexer.cc	/^Lexer::FileState::FileState(const String &data, const String &filename)$/;"	f	class:Lexer::FileState
FileState	tools/lib/lexert.cc	/^LexerT::FileState::FileState(const String &data, const String &filename)$/;"	f	class:LexerT::FileState
FileState	tools/lib/lexert.hh	/^	FileState(const FileState &x)$/;"	f	struct:LexerT::FileState
FileState	tools/lib/lexert.hh	/^    struct FileState {$/;"	s	class:LexerT
FilenameArg	include/click/args.hh	/^struct FilenameArg {$/;"	s
FilterByGridHops	elements/grid/filterbyhops.cc	/^FilterByGridHops::FilterByGridHops()$/;"	f	class:FilterByGridHops
FilterByGridHops	elements/grid/filterbyhops.hh	/^class FilterByGridHops : public Element {$/;"	c
FilterByRange	elements/grid/filterbyrange.cc	/^FilterByRange::FilterByRange() : _locinfo(0)$/;"	f	class:FilterByRange
FilterByRange	elements/grid/filterbyrange.hh	/^class FilterByRange : public Element {$/;"	c
FilterFailures	elements/wifi/filterfailures.cc	/^FilterFailures::FilterFailures()$/;"	f	class:FilterFailures
FilterFailures	elements/wifi/filterfailures.hh	/^class FilterFailures : public Element { public:$/;"	c
FilterFailures_read_param	elements/wifi/filterfailures.cc	/^FilterFailures_read_param(Element *e, void *thunk)$/;"	f	file:
FilterPhyErr	elements/wifi/filterphyerr.cc	/^FilterPhyErr::FilterPhyErr()$/;"	f	class:FilterPhyErr
FilterPhyErr	elements/wifi/filterphyerr.hh	/^class FilterPhyErr : public Element { public:$/;"	c
FilterPhyErr_read_param	elements/wifi/filterphyerr.cc	/^FilterPhyErr_read_param(Element *e, void *thunk)$/;"	f	file:
FilterTX	elements/wifi/filtertx.cc	/^FilterTX::FilterTX()$/;"	f	class:FilterTX
FilterTX	elements/wifi/filtertx.hh	/^class FilterTX : public Element { public:$/;"	c
FilterTX_read_param	elements/wifi/filtertx.cc	/^FilterTX_read_param(Element *e, void *thunk)$/;"	f	file:
FixDstLoc	elements/grid/fixdstloc.cc	/^FixDstLoc::FixDstLoc() : _loctab(0)$/;"	f	class:FixDstLoc
FixDstLoc	elements/grid/fixdstloc.hh	/^class FixDstLoc : public Element {$/;"	c
FixIPSrc	elements/ip/fixipsrc.cc	/^FixIPSrc::FixIPSrc()$/;"	f	class:FixIPSrc
FixIPSrc	elements/ip/fixipsrc.hh	/^class FixIPSrc : public Element {$/;"	c
FixSrcLoc	elements/grid/fixsrcloc.cc	/^FixSrcLoc::FixSrcLoc() : _locinfo(0)$/;"	f	class:FixSrcLoc
FixSrcLoc	elements/grid/fixsrcloc.hh	/^class FixSrcLoc : public Element {$/;"	c
FixedEWMAXParameters	include/click/ewma.hh	/^class FixedEWMAXParameters { public:$/;"	c
FixedPointArg	include/click/args.hh	/^    explicit FixedPointArg(int b, int exponent = 0)$/;"	f	struct:FixedPointArg
FixedPointArg	include/click/args.hh	/^struct FixedPointArg : public NumArg {$/;"	s
Flags	include/click/handler.hh	/^    enum Flags {$/;"	g	class:Handler
Flags	include/click/handlercall.hh	/^    enum Flags {$/;"	g	class:HandlerCall
FlanFile	elements/analysis/fromflandump.cc	/^FromFlanDump::FlanFile::FlanFile()$/;"	f	class:FromFlanDump::FlanFile
FlanFile	elements/analysis/fromflandump.hh	/^    class FlanFile { public:$/;"	c	class:FromFlanDump
FloodingLocQuerier	elements/grid/floodinglocquerier.cc	/^FloodingLocQuerier::FloodingLocQuerier()$/;"	f	class:FloodingLocQuerier
FloodingLocQuerier	elements/grid/floodinglocquerier.hh	/^class FloodingLocQuerier : public Element, public GridRouteActor {$/;"	c
FloodingLocQuerier_read_stats	elements/grid/floodinglocquerier.cc	/^FloodingLocQuerier_read_stats(Element *e, void *)$/;"	f	file:
Flow	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::Flow::Flow(uint32_t aggregate, int columns)$/;"	f	class:AggregatePacketCounter::Flow
Flow	elements/analysis/aggpktcounter.hh	/^    class Flow { public:$/;"	c	class:AggregatePacketCounter
Flow	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::Flow::Flow(const Packet *p, const String &filename,$/;"	f	class:ToIPFlowDumps::Flow
Flow	elements/analysis/toipflowdumps.hh	/^    class Flow { public:$/;"	c	class:ToIPFlowDumps
Flow	elements/local/FlowNet/common/Flow.hh	/^	Flow() {};$/;"	f	class:Flow
Flow	elements/local/FlowNet/common/Flow.hh	/^class Flow {$/;"	c
Flow	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::Flow::Flow(const Packet *p)$/;"	f	class:IPFlowRawSockets::Flow
Flow	elements/userlevel/ipflowrawsockets.hh	/^    class Flow { public:$/;"	c	class:IPFlowRawSockets
FlowBWShaperable	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^	FlowBWShaperable() {_vcShape=NULL;};$/;"	f	class:FlowBWShaperable
FlowBWShaperable	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^class FlowBWShaperable : public Flow {$/;"	c
FlowBWShaperableStat	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^struct FlowBWShaperableStat {$/;"	s
FlowDesc	elements/local/FlowNet/common/Flow.hh	/^struct FlowDesc {$/;"	s
FlowID	elements/local/FlowNet/common/Flow.hh	/^struct FlowID {$/;"	s
FlowInfo	elements/analysis/aggregateipaddrpair.hh	/^	FlowInfo()		: aggregate(0) { }$/;"	f	struct:AggregateIPAddrPair::FlowInfo
FlowInfo	elements/analysis/aggregateipaddrpair.hh	/^    struct FlowInfo {$/;"	s	class:AggregateIPAddrPair
FlowInfo	elements/analysis/aggregateipflows.hh	/^	FlowInfo(uint32_t ports, FlowInfo *next, uint32_t agg) : _ports(ports), _aggregate(agg), _flow_over(0), _next(next) { }$/;"	f	struct:AggregateIPFlows::FlowInfo
FlowInfo	elements/analysis/aggregateipflows.hh	/^    struct FlowInfo {$/;"	s	class:AggregateIPFlows
FlowInfo	elements/standard/flowinfo.cc	/^FlowInfo::FlowInfo()$/;"	f	class:FlowInfo
FlowInfo	elements/standard/flowinfo.hh	/^class FlowInfo : public Element { public:$/;"	c
FlowMpeg2AdaptDecap	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^FlowMpeg2AdaptDecap::FlowMpeg2AdaptDecap() $/;"	f	class:FlowMpeg2AdaptDecap
FlowMpeg2AdaptDecap	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^class FlowMpeg2AdaptDecap : public Flow  {$/;"	c
FlowMpeg2AdaptDecapStat	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^struct FlowMpeg2AdaptDecapStat {$/;"	s
FlowMpeg2AdaptEncap	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^class FlowMpeg2AdaptEncap : public Flow  {$/;"	c
FlowMpeg2AdaptEncapStat	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^struct FlowMpeg2AdaptEncapStat {$/;"	s
FlowNetGod	elements/local/FlowNet/common/FlowNetGod.cc	/^FlowNetGod::FlowNetGod(): $/;"	f	class:FlowNetGod
FlowNetGod	elements/local/FlowNet/common/FlowNetGod.hh	/^class FlowNetGod : public Element {$/;"	c
FlowRecord	elements/analysis/fromtcpdump.hh	/^	inline FlowRecord() { init_seq[0] = init_seq[1] = 0; }$/;"	f	struct:FromTcpdump::FlowRecord
FlowRecord	elements/analysis/fromtcpdump.hh	/^    struct FlowRecord {$/;"	s	class:FromTcpdump
FlowSchedulable	elements/local/FlowNet/scheduler/FlowSchedulable.cc	/^FlowSchedulable::FlowSchedulable() $/;"	f	class:FlowSchedulable
FlowSchedulable	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^class FlowSchedulable : public Flow {$/;"	c
FlowSchedulableStat	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^struct FlowSchedulableStat {$/;"	s
FlowStat	elements/local/FlowNet/common/Flow.hh	/^struct FlowStat {$/;"	s
Foo	elements/test/queueyanktest.cc	/^    Foo(const char *ss) : s(reinterpret_cast<const unsigned char *>(ss)) { }$/;"	f	struct:__anon402::Foo
Foo	elements/test/queueyanktest.cc	/^struct Foo {$/;"	s	namespace:__anon402	file:
ForwardDSDV	elements/grid/gridroutecb.hh	/^    ForwardDSDV        = 2,   \/\/ data = next hop ip, data2 = (qual << 16) | (-sig & 0xFFff)$/;"	e	enum:GridRouteActionCallback::Action
ForwardGF	elements/grid/gridroutecb.hh	/^    ForwardGF          = 5,   \/\/ data = next hop ip, data2 = best nbr ip$/;"	e	enum:GridRouteActionCallback::Action
ForwardedReqKey	elements/grid/dsrroutetable.hh	/^    ForwardedReqKey() {$/;"	f	class:DSRRouteTable::ForwardedReqKey
ForwardedReqKey	elements/grid/dsrroutetable.hh	/^    ForwardedReqKey(IPAddress src, IPAddress target, unsigned int id) {$/;"	f	class:DSRRouteTable::ForwardedReqKey
ForwardedReqKey	elements/grid/dsrroutetable.hh	/^  class ForwardedReqKey$/;"	c	class:DSRRouteTable
ForwardedReqMap	elements/grid/dsrroutetable.hh	/^  typedef HashMap<ForwardedReqKey, ForwardedReqVal> ForwardedReqMap;$/;"	t	class:DSRRouteTable
ForwardedReqVal	elements/grid/dsrroutetable.hh	/^  class ForwardedReqVal {$/;"	c	class:DSRRouteTable
FrameReceivingBuffer	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.cc	/^FrameReceivingBuffer::FrameReceivingBuffer(int ft, int fi, int ppf)$/;"	f	class:FrameReceivingBuffer
FrameReceivingBuffer	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.hh	/^class FrameReceivingBuffer {$/;"	c
FromCapDump	elements/analysis/fromcapdump.cc	/^FromCapDump::FromCapDump()$/;"	f	class:FromCapDump
FromCapDump	elements/analysis/fromcapdump.hh	/^class FromCapDump : public Element { public:$/;"	c
FromDAGDump	elements/analysis/fromdagdump.cc	/^FromDAGDump::FromDAGDump()$/;"	f	class:FromDAGDump
FromDAGDump	elements/analysis/fromdagdump.hh	/^class FromDAGDump : public Element { public:$/;"	c
FromDevice	elements/bsdmodule/fromdevice.cc	/^FromDevice::FromDevice()$/;"	f	class:FromDevice
FromDevice	elements/bsdmodule/fromdevice.hh	/^class FromDevice : public AnyDevice, public Storage { public:$/;"	c
FromDevice	elements/linuxmodule/fromdevice.cc	/^FromDevice::FromDevice()$/;"	f	class:FromDevice
FromDevice	elements/linuxmodule/fromdevice.hh	/^class FromDevice : public AnyTaskDevice, public Storage { public:$/;"	c
FromDevice	elements/userlevel/fromdevice.cc	/^FromDevice::FromDevice()$/;"	f	class:FromDevice
FromDevice	elements/userlevel/fromdevice.hh	/^class FromDevice : public Element { public:$/;"	c
FromDevice_get_packet	elements/userlevel/fromdevice.cc	/^FromDevice_get_packet(u_char* clientdata,$/;"	f
FromDevice_read_stats	elements/bsdmodule/fromdevice.cc	/^FromDevice_read_stats(Element *f, void *)$/;"	f	file:
FromDump	elements/userlevel/fromdump.cc	/^FromDump::FromDump()$/;"	f	class:FromDump
FromDump	elements/userlevel/fromdump.hh	/^class FromDump : public Element { public:$/;"	c
FromFile	include/click/fromfile.hh	/^class FromFile { public:$/;"	c
FromFile	lib/fromfile.cc	/^FromFile::FromFile()$/;"	f	class:FromFile
FromFlanDump	elements/analysis/fromflandump.cc	/^FromFlanDump::FromFlanDump()$/;"	f	class:FromFlanDump
FromFlanDump	elements/analysis/fromflandump.hh	/^class FromFlanDump : public Element { public:$/;"	c
FromHandler	elements/wifi/fromhandler.cc	/^FromHandler::FromHandler()$/;"	f	class:FromHandler
FromHandler	elements/wifi/fromhandler.hh	/^class FromHandler : public Element { public:$/;"	c
FromHost	elements/bsdmodule/fromhost.cc	/^FromHost::FromHost()$/;"	f	class:FromHost
FromHost	elements/bsdmodule/fromhost.hh	/^class FromHost : public AnyDevice {$/;"	c
FromHost	elements/linuxmodule/fromhost.cc	/^FromHost::FromHost()$/;"	f	class:FromHost
FromHost	elements/linuxmodule/fromhost.hh	/^class FromHost : public AnyDevice, public Storage { public:$/;"	c
FromHost	elements/userlevel/fromhost.cc	/^FromHost::FromHost()$/;"	f	class:FromHost
FromHost	elements/userlevel/fromhost.hh	/^class FromHost : public Element { public:$/;"	c
FromIPSummaryDump	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::FromIPSummaryDump()$/;"	f	class:FromIPSummaryDump
FromIPSummaryDump	elements/analysis/fromipsumdump.hh	/^class FromIPSummaryDump : public Element, public IPSummaryDumpInfo { public:$/;"	c
FromNLANRDump	elements/analysis/fromnlanrdump.cc	/^FromNLANRDump::FromNLANRDump()$/;"	f	class:FromNLANRDump
FromNLANRDump	elements/analysis/fromnlanrdump.hh	/^class FromNLANRDump : public Element { public:$/;"	c
FromNetFlowSummaryDump	elements/analysis/fromnetflowsumdump.cc	/^FromNetFlowSummaryDump::FromNetFlowSummaryDump()$/;"	f	class:FromNetFlowSummaryDump
FromNetFlowSummaryDump	elements/analysis/fromnetflowsumdump.hh	/^class FromNetFlowSummaryDump : public Element { public:$/;"	c
FromRawSocket	elements/userlevel/fromrawsocket.cc	/^FromRawSocket::FromRawSocket()$/;"	f	class:FromRawSocket
FromRawSocket	elements/userlevel/fromrawsocket.hh	/^class FromRawSocket : public RawSocket { public:$/;"	c
FromSimDevice	elements/ns/fromsimdevice.cc	/^FromSimDevice::FromSimDevice()$/;"	f	class:FromSimDevice
FromSimDevice	elements/ns/fromsimdevice.hh	/^class FromSimDevice : public Element {$/;"	c
FromSocket	elements/userlevel/fromsocket.cc	/^FromSocket::FromSocket()$/;"	f	class:FromSocket
FromSocket	elements/userlevel/fromsocket.hh	/^class FromSocket : public Socket { public:$/;"	c
FromTcpdump	elements/analysis/fromtcpdump.cc	/^FromTcpdump::FromTcpdump()$/;"	f	class:FromTcpdump
FromTcpdump	elements/analysis/fromtcpdump.hh	/^class FromTcpdump : public Element { public:$/;"	c
FromUserDevice	elements/linuxmodule/fromuserdevice.cc	/^FromUserDevice::FromUserDevice()$/;"	f	class:FromUserDevice
FromUserDevice	elements/linuxmodule/fromuserdevice.hh	/^class FromUserDevice : public Element$/;"	c
FrontDropQueue	elements/standard/frontdropqueue.cc	/^FrontDropQueue::FrontDropQueue()$/;"	f	class:FrontDropQueue
FrontDropQueue	elements/standard/frontdropqueue.hh	/^class FrontDropQueue : public NotifierQueue { public:$/;"	c
FullNoteQueue	elements/standard/fullnotequeue.cc	/^FullNoteQueue::FullNoteQueue()$/;"	f	class:FullNoteQueue
FullNoteQueue	elements/standard/fullnotequeue.hh	/^class FullNoteQueue : public NotifierQueue { public:$/;"	c
FunctionTest	elements/test/functiontest.cc	/^FunctionTest::FunctionTest()$/;"	f	class:FunctionTest
FunctionTest	elements/test/functiontest.hh	/^class FunctionTest : public Element { public:$/;"	c
G	lib/md5.cc	234;"	d	file:
GENERIC_OBJS	bsdmodule/Makefile	/^GENERIC_OBJS = string.o straccum.o nameinfo.o \\$/;"	m
GENERIC_OBJS	ns/Makefile	/^GENERIC_OBJS = string.o straccum.o nameinfo.o \\$/;"	m
GENERIC_OBJS	userlevel/Makefile	/^GENERIC_OBJS = string.o straccum.o nameinfo.o \\$/;"	m
GENL_HDRLEN	elements/local/OpenFlow/lib/netlink-protocol.hh	107;"	d
GENL_ID_CTRL	elements/local/OpenFlow/lib/netlink-protocol.hh	122;"	d
GENL_MAX_ID	elements/local/OpenFlow/lib/netlink-protocol.hh	120;"	d
GENL_MIN_ID	elements/local/OpenFlow/lib/netlink-protocol.hh	119;"	d
GEOMETRY_OPT	apps/clicky/src/clicky.cc	47;"	d	file:
GEOROUTE_HH	elements/grid/lookupgeogridroute.hh	2;"	d
GET1	elements/analysis/fromipsumdump.cc	49;"	d	file:
GET2	elements/analysis/fromipsumdump.cc	44;"	d	file:
GET2	elements/analysis/ipsumdumpinfo.cc	216;"	d	file:
GET2	elements/analysis/ipsumdumpinfo.cc	223;"	d	file:
GET4	elements/analysis/fromipsumdump.cc	43;"	d	file:
GET4	elements/analysis/ipsumdump_anno.cc	173;"	d	file:
GET4	elements/analysis/ipsumdump_anno.cc	176;"	d	file:
GET4	elements/analysis/ipsumdumpinfo.cc	215;"	d	file:
GET4	elements/analysis/ipsumdumpinfo.cc	222;"	d	file:
GET4NET	elements/analysis/ipsumdumpinfo.cc	214;"	d	file:
GET4NET	elements/analysis/ipsumdumpinfo.cc	221;"	d	file:
GETELEM	elements/linuxmodule/touserdevice.cc	113;"	d	file:
GETU32	elements/ipsec/aes.hh	23;"	d
GET_NEXT_TLV	drivers/e1000-4.x/src/ans.h	147;"	d
GET_PSUM	elements/grid/amoeba.cc	30;"	d	file:
GET_STATS_RESET	elements/bsdmodule/anydevice.hh	27;"	d
GET_STATS_RESET	elements/linuxmodule/anydevice.hh	37;"	d
GG82563_DSPD_CABLE_LENGTH	drivers/e1000-7.x/src/e1000_hw.h	3120;"	d
GG82563_E_PHY_ID	drivers/e1000-7.x/src/e1000_hw.h	3167;"	d
GG82563_ICR_DIS_PADDING	drivers/e1000-7.x/src/e1000_hw.h	3150;"	d
GG82563_KMCR_FORCE_LINK_UP	drivers/e1000-7.x/src/e1000_hw.h	3128;"	d
GG82563_KMCR_MDIO_BUS_SPEED_SELECT	drivers/e1000-7.x/src/e1000_hw.h	3131;"	d
GG82563_KMCR_MDIO_BUS_SPEED_SELECT_MASK	drivers/e1000-7.x/src/e1000_hw.h	3130;"	d
GG82563_KMCR_PASS_FALSE_CARRIER	drivers/e1000-7.x/src/e1000_hw.h	3132;"	d
GG82563_KMCR_PHY_LEDS_EN	drivers/e1000-7.x/src/e1000_hw.h	3127;"	d
GG82563_KMCR_SUPPRESS_SGMII_EPD_EXT	drivers/e1000-7.x/src/e1000_hw.h	3129;"	d
GG82563_MIN_ALT_REG	drivers/e1000-7.x/src/e1000_hw.h	2656;"	d
GG82563_MSCR_ASSERT_CRS_ON_TX	drivers/e1000-7.x/src/e1000_hw.h	3117;"	d
GG82563_MSCR_TX_CLK_1000MBPS_25MHZ	drivers/e1000-7.x/src/e1000_hw.h	3115;"	d
GG82563_MSCR_TX_CLK_1000MBPS_2_5MHZ	drivers/e1000-7.x/src/e1000_hw.h	3114;"	d
GG82563_MSCR_TX_CLK_100MBPS_25MHZ	drivers/e1000-7.x/src/e1000_hw.h	3113;"	d
GG82563_MSCR_TX_CLK_10MBPS_2_5MHZ	drivers/e1000-7.x/src/e1000_hw.h	3112;"	d
GG82563_MSCR_TX_CLK_MASK	drivers/e1000-7.x/src/e1000_hw.h	3111;"	d
GG82563_PAGE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2653;"	d
GG82563_PHY_ACK_TIMEOUTS	drivers/e1000-7.x/src/e1000_hw.h	2709;"	d
GG82563_PHY_ADV_ABILITY	drivers/e1000-7.x/src/e1000_hw.h	2711;"	d
GG82563_PHY_ADV_NEXT_PAGE	drivers/e1000-7.x/src/e1000_hw.h	2715;"	d
GG82563_PHY_DEVICE_ID	drivers/e1000-7.x/src/e1000_hw.h	2693;"	d
GG82563_PHY_DSP_DISTANCE	drivers/e1000-7.x/src/e1000_hw.h	2683;"	d
GG82563_PHY_INBAND_CTRL	drivers/e1000-7.x/src/e1000_hw.h	2705;"	d
GG82563_PHY_INT_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2663;"	d
GG82563_PHY_KMRN_CTRL	drivers/e1000-7.x/src/e1000_hw.h	2703;"	d
GG82563_PHY_KMRN_DIAGNOSTIC	drivers/e1000-7.x/src/e1000_hw.h	2707;"	d
GG82563_PHY_KMRN_FIFO_CTRL_STAT	drivers/e1000-7.x/src/e1000_hw.h	2701;"	d
GG82563_PHY_KMRN_MISC	drivers/e1000-7.x/src/e1000_hw.h	2719;"	d
GG82563_PHY_KMRN_MODE_CTRL	drivers/e1000-7.x/src/e1000_hw.h	2687;"	d
GG82563_PHY_LINK_PARTNER_ADV_ABILITY	drivers/e1000-7.x/src/e1000_hw.h	2713;"	d
GG82563_PHY_LINK_PARTNER_ADV_NEXT_PAGE	drivers/e1000-7.x/src/e1000_hw.h	2717;"	d
GG82563_PHY_MAC_SPEC_CTRL	drivers/e1000-7.x/src/e1000_hw.h	2678;"	d
GG82563_PHY_MAC_SPEC_CTRL_2	drivers/e1000-7.x/src/e1000_hw.h	2680;"	d
GG82563_PHY_PAGE_SELECT	drivers/e1000-7.x/src/e1000_hw.h	2669;"	d
GG82563_PHY_PAGE_SELECT_ALT	drivers/e1000-7.x/src/e1000_hw.h	2673;"	d
GG82563_PHY_PORT_RESET	drivers/e1000-7.x/src/e1000_hw.h	2689;"	d
GG82563_PHY_PWR_MGMT_CTRL	drivers/e1000-7.x/src/e1000_hw.h	2695;"	d
GG82563_PHY_RATE_ADAPT_CTRL	drivers/e1000-7.x/src/e1000_hw.h	2697;"	d
GG82563_PHY_REVISION_ID	drivers/e1000-7.x/src/e1000_hw.h	2691;"	d
GG82563_PHY_RX_ERR_CNTR	drivers/e1000-7.x/src/e1000_hw.h	2667;"	d
GG82563_PHY_SPEC_CTRL	drivers/e1000-7.x/src/e1000_hw.h	2659;"	d
GG82563_PHY_SPEC_CTRL_2	drivers/e1000-7.x/src/e1000_hw.h	2671;"	d
GG82563_PHY_SPEC_STATUS	drivers/e1000-7.x/src/e1000_hw.h	2661;"	d
GG82563_PHY_SPEC_STATUS_2	drivers/e1000-7.x/src/e1000_hw.h	2665;"	d
GG82563_PHY_TEST_CLK_CTRL	drivers/e1000-7.x/src/e1000_hw.h	2675;"	d
GG82563_PMCR_DISABLE_1000	drivers/e1000-7.x/src/e1000_hw.h	3140;"	d
GG82563_PMCR_DISABLE_1000_NON_D0	drivers/e1000-7.x/src/e1000_hw.h	3139;"	d
GG82563_PMCR_DISABLE_PORT	drivers/e1000-7.x/src/e1000_hw.h	3136;"	d
GG82563_PMCR_DISABLE_SERDES	drivers/e1000-7.x/src/e1000_hw.h	3137;"	d
GG82563_PMCR_ENABLE_ELECTRICAL_IDLE	drivers/e1000-7.x/src/e1000_hw.h	3135;"	d
GG82563_PMCR_FORCE_POWER_STATE	drivers/e1000-7.x/src/e1000_hw.h	3142;"	d
GG82563_PMCR_PROGRAMMED_POWER_STATE_D0A	drivers/e1000-7.x/src/e1000_hw.h	3146;"	d
GG82563_PMCR_PROGRAMMED_POWER_STATE_D0U	drivers/e1000-7.x/src/e1000_hw.h	3145;"	d
GG82563_PMCR_PROGRAMMED_POWER_STATE_D3	drivers/e1000-7.x/src/e1000_hw.h	3147;"	d
GG82563_PMCR_PROGRAMMED_POWER_STATE_DR	drivers/e1000-7.x/src/e1000_hw.h	3144;"	d
GG82563_PMCR_PROGRAMMED_POWER_STATE_MASK	drivers/e1000-7.x/src/e1000_hw.h	3143;"	d
GG82563_PMCR_REVERSE_AUTO_NEG	drivers/e1000-7.x/src/e1000_hw.h	3138;"	d
GG82563_PMCR_REVERSE_AUTO_NEG_D0A	drivers/e1000-7.x/src/e1000_hw.h	3141;"	d
GG82563_PSCR2_1000BT_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	3104;"	d
GG82563_PSCR2_1000MB_TEST_SELECT_112NS	drivers/e1000-7.x/src/e1000_hw.h	3101;"	d
GG82563_PSCR2_1000MB_TEST_SELECT_16NS	drivers/e1000-7.x/src/e1000_hw.h	3102;"	d
GG82563_PSCR2_1000MB_TEST_SELECT_MASK	drivers/e1000-7.x/src/e1000_hw.h	3099;"	d
GG82563_PSCR2_1000MB_TEST_SELECT_NORMAL	drivers/e1000-7.x/src/e1000_hw.h	3100;"	d
GG82563_PSCR2_10BT_POLARITY_FORCE	drivers/e1000-7.x/src/e1000_hw.h	3098;"	d
GG82563_PSCR2_REVERSE_AUTO_NEG	drivers/e1000-7.x/src/e1000_hw.h	3103;"	d
GG82563_PSCR2_TRANSMITER_TYPE_MASK	drivers/e1000-7.x/src/e1000_hw.h	3105;"	d
GG82563_PSCR2_TRANSMITTER_TYPE_CLASS_A	drivers/e1000-7.x/src/e1000_hw.h	3107;"	d
GG82563_PSCR2_TRANSMITTER_TYPE_CLASS_B	drivers/e1000-7.x/src/e1000_hw.h	3106;"	d
GG82563_PSCR_COPPER_TRANSMITER_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	3049;"	d
GG82563_PSCR_CROSSOVER_MODE_AUTO	drivers/e1000-7.x/src/e1000_hw.h	3053;"	d
GG82563_PSCR_CROSSOVER_MODE_MASK	drivers/e1000-7.x/src/e1000_hw.h	3050;"	d
GG82563_PSCR_CROSSOVER_MODE_MDI	drivers/e1000-7.x/src/e1000_hw.h	3051;"	d
GG82563_PSCR_CROSSOVER_MODE_MDIX	drivers/e1000-7.x/src/e1000_hw.h	3052;"	d
GG82563_PSCR_DISABLE_JABBER	drivers/e1000-7.x/src/e1000_hw.h	3046;"	d
GG82563_PSCR_DOWNSHIFT_COUNTER_MASK	drivers/e1000-7.x/src/e1000_hw.h	3061;"	d
GG82563_PSCR_DOWNSHIFT_COUNTER_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	3062;"	d
GG82563_PSCR_DOWNSHIFT_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	3060;"	d
GG82563_PSCR_ENALBE_EXTENDED_DISTANCE	drivers/e1000-7.x/src/e1000_hw.h	3054;"	d
GG82563_PSCR_ENERGY_DETECT_MASK	drivers/e1000-7.x/src/e1000_hw.h	3055;"	d
GG82563_PSCR_ENERGY_DETECT_OFF	drivers/e1000-7.x/src/e1000_hw.h	3056;"	d
GG82563_PSCR_ENERGY_DETECT_RX	drivers/e1000-7.x/src/e1000_hw.h	3057;"	d
GG82563_PSCR_ENERGY_DETECT_RX_TM	drivers/e1000-7.x/src/e1000_hw.h	3058;"	d
GG82563_PSCR_FORCE_LINK_GOOD	drivers/e1000-7.x/src/e1000_hw.h	3059;"	d
GG82563_PSCR_POLARITY_REVERSAL_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	3047;"	d
GG82563_PSCR_POWER_DOWN	drivers/e1000-7.x/src/e1000_hw.h	3048;"	d
GG82563_PSSR2_AUTO_NEG_COMPLETED	drivers/e1000-7.x/src/e1000_hw.h	3091;"	d
GG82563_PSSR2_AUTO_NEG_ERROR	drivers/e1000-7.x/src/e1000_hw.h	3095;"	d
GG82563_PSSR2_DOWNSHIFT_INTERRUPT	drivers/e1000-7.x/src/e1000_hw.h	3086;"	d
GG82563_PSSR2_DUPLEX_CHANGED	drivers/e1000-7.x/src/e1000_hw.h	3093;"	d
GG82563_PSSR2_ENERGY_DETECT_CHANGED	drivers/e1000-7.x/src/e1000_hw.h	3085;"	d
GG82563_PSSR2_FALSE_CARRIER	drivers/e1000-7.x/src/e1000_hw.h	3088;"	d
GG82563_PSSR2_JABBER	drivers/e1000-7.x/src/e1000_hw.h	3083;"	d
GG82563_PSSR2_LINK_STATUS_CHANGED	drivers/e1000-7.x/src/e1000_hw.h	3090;"	d
GG82563_PSSR2_MDI_CROSSOVER_CHANGE	drivers/e1000-7.x/src/e1000_hw.h	3087;"	d
GG82563_PSSR2_PAGE_RECEIVED	drivers/e1000-7.x/src/e1000_hw.h	3092;"	d
GG82563_PSSR2_POLARITY_CHANGED	drivers/e1000-7.x/src/e1000_hw.h	3084;"	d
GG82563_PSSR2_SPEED_CHANGED	drivers/e1000-7.x/src/e1000_hw.h	3094;"	d
GG82563_PSSR2_SYMBOL_ERROR	drivers/e1000-7.x/src/e1000_hw.h	3089;"	d
GG82563_PSSR_CROSSOVER_STATUS	drivers/e1000-7.x/src/e1000_hw.h	3070;"	d
GG82563_PSSR_DOWNSHIFT	drivers/e1000-7.x/src/e1000_hw.h	3069;"	d
GG82563_PSSR_DUPLEX	drivers/e1000-7.x/src/e1000_hw.h	3076;"	d
GG82563_PSSR_ENERGY_DETECT	drivers/e1000-7.x/src/e1000_hw.h	3068;"	d
GG82563_PSSR_JABBER	drivers/e1000-7.x/src/e1000_hw.h	3065;"	d
GG82563_PSSR_LINK	drivers/e1000-7.x/src/e1000_hw.h	3067;"	d
GG82563_PSSR_LINK_UP	drivers/e1000-7.x/src/e1000_hw.h	3073;"	d
GG82563_PSSR_PAGE_RECEIVED	drivers/e1000-7.x/src/e1000_hw.h	3075;"	d
GG82563_PSSR_POLARITY	drivers/e1000-7.x/src/e1000_hw.h	3066;"	d
GG82563_PSSR_RX_PAUSE_ENABLED	drivers/e1000-7.x/src/e1000_hw.h	3071;"	d
GG82563_PSSR_SPEED_1000MBPS	drivers/e1000-7.x/src/e1000_hw.h	3080;"	d
GG82563_PSSR_SPEED_100MBPS	drivers/e1000-7.x/src/e1000_hw.h	3079;"	d
GG82563_PSSR_SPEED_10MBPS	drivers/e1000-7.x/src/e1000_hw.h	3078;"	d
GG82563_PSSR_SPEED_DUPLEX_RESOLVED	drivers/e1000-7.x/src/e1000_hw.h	3074;"	d
GG82563_PSSR_SPEED_MASK	drivers/e1000-7.x/src/e1000_hw.h	3077;"	d
GG82563_PSSR_TX_PAUSE_ENABLED	drivers/e1000-7.x/src/e1000_hw.h	3072;"	d
GG82563_REG	drivers/e1000-7.x/src/e1000_hw.h	2654;"	d
GH_ACTIVE_PORTS	lib/router.cc	/^       GH_DRIVER, GH_ACTIVE_PORTS, GH_ACTIVE_PORT_STATS, GH_STRING_PROFILE,$/;"	e	enum:__anon513	file:
GH_ACTIVE_PORT_STATS	lib/router.cc	/^       GH_DRIVER, GH_ACTIVE_PORTS, GH_ACTIVE_PORT_STATS, GH_STRING_PROFILE,$/;"	e	enum:__anon513	file:
GH_CLASSES	lib/driver.cc	/^enum { GH_CLASSES, GH_PACKAGES };$/;"	e	enum:__anon504	file:
GH_CONFIG	lib/router.cc	/^enum { GH_VERSION, GH_CONFIG, GH_FLATCONFIG, GH_LIST, GH_REQUIREMENTS,$/;"	e	enum:__anon513	file:
GH_DRIVER	lib/router.cc	/^       GH_DRIVER, GH_ACTIVE_PORTS, GH_ACTIVE_PORT_STATS, GH_STRING_PROFILE,$/;"	e	enum:__anon513	file:
GH_FLATCONFIG	lib/router.cc	/^enum { GH_VERSION, GH_CONFIG, GH_FLATCONFIG, GH_LIST, GH_REQUIREMENTS,$/;"	e	enum:__anon513	file:
GH_LIST	lib/router.cc	/^enum { GH_VERSION, GH_CONFIG, GH_FLATCONFIG, GH_LIST, GH_REQUIREMENTS,$/;"	e	enum:__anon513	file:
GH_PACKAGES	lib/driver.cc	/^enum { GH_CLASSES, GH_PACKAGES };$/;"	e	enum:__anon504	file:
GH_REQUIREMENTS	lib/router.cc	/^enum { GH_VERSION, GH_CONFIG, GH_FLATCONFIG, GH_LIST, GH_REQUIREMENTS,$/;"	e	enum:__anon513	file:
GH_SCHEDULING_PROFILE	lib/router.cc	/^       GH_STRING_PROFILE_LONG, GH_SCHEDULING_PROFILE };$/;"	e	enum:__anon513	file:
GH_STRING_PROFILE	lib/router.cc	/^       GH_DRIVER, GH_ACTIVE_PORTS, GH_ACTIVE_PORT_STATS, GH_STRING_PROFILE,$/;"	e	enum:__anon513	file:
GH_STRING_PROFILE_LONG	lib/router.cc	/^       GH_STRING_PROFILE_LONG, GH_SCHEDULING_PROFILE };$/;"	e	enum:__anon513	file:
GH_VERSION	lib/router.cc	/^enum { GH_VERSION, GH_CONFIG, GH_FLATCONFIG, GH_LIST, GH_REQUIREMENTS,$/;"	e	enum:__anon513	file:
GID_OPT	tools/click-install/click-install.cc	66;"	d	file:
GIGABIT_ADAPTER_STRUCT	drivers/e1000-4.x/src/ans_driver.h	44;"	d
GLADE_HOOKUP_OBJECT	apps/clicky/src/interface.c	22;"	d	file:
GLADE_HOOKUP_OBJECT_NO_REF	apps/clicky/src/interface.c	26;"	d	file:
GML_OPT	tools/click-pretty/click-pretty.cc	49;"	d	file:
GRAPHML_OPT	tools/click-pretty/click-pretty.cc	50;"	d	file:
GRCB	elements/grid/floodinglocquerier.cc	/^typedef GridRouteActionCallback GRCB;$/;"	t	file:
GRCB	elements/grid/lookupgeogridroute.cc	/^typedef GridRouteActionCallback GRCB;$/;"	t	file:
GRCB	elements/grid/lookuplocalgridroute.cc	/^typedef GridRouteActionCallback GRCB;$/;"	t	file:
GRCB	elements/grid/lookuplocalgridroute2.cc	/^typedef GridRouteActionCallback GRCB;$/;"	t	file:
GREEDY_OPT	tools/click-install/click-install.cc	64;"	d	file:
GRIDGATEWAYINFO_HH	elements/grid/gridgatewayinfo.hh	2;"	d
GRIDGENERICLOCINFO_HH	elements/grid/gridgenericlocinfo.hh	2;"	d
GRIDGENERICLOGGER_HH	elements/grid/gridgenericlogger.hh	2;"	d
GRIDGENERICMETRIC_HH	elements/grid/gridgenericmetric.hh	2;"	d
GRIDGENERICRT_HH	elements/grid/gridgenericrt.hh	2;"	d
GRIDHEADERINFO_HH	elements/grid/gridheaderinfo.hh	2;"	d
GRIDLOCATIONINFO2_HH	elements/grid/gridlocationinfo2.hh	2;"	d
GRIDLOCATIONINFO_HH	elements/grid/gridlocationinfo.hh	2;"	d
GRIDLOGGER_HH	elements/grid/gridlogger.hh	2;"	d
GRIDPROBEHANDLER_HH	elements/grid/gridprobehandler.hh	2;"	d
GRIDPROBEREPLYRECEIVER_HH	elements/grid/gridprobereplyreceiver.hh	2;"	d
GRIDPROBESENDER_HH	elements/grid/gridprobesender.hh	2;"	d
GRIDROUTECB_HH	elements/grid/gridroutecb.hh	19;"	d
GRIDROUTETABLE_HH	elements/grid/gridroutetable.hh	2;"	d
GRIDSRFW	elements/grid/gridsrforwarder.hh	2;"	d
GRIDTXERR_HH	elements/grid/gridtxerror.hh	2;"	d
GRID_EARTH_RADIUS	elements/grid/grid.hh	/^static const double GRID_EARTH_RADIUS = 6378156; \/\/ metres XXX do i believe this?$/;"	v
GRID_GEOCAST	elements/grid/grid.hh	/^	GRID_GEOCAST = 8,	\/\/ followed by grid_geocast$/;"	e	enum:grid_hdr::Type
GRID_HELLO	elements/grid/grid.hh	/^	GRID_HELLO = 1,		\/\/ no additional info in packet beyond header$/;"	e	enum:grid_hdr::Type
GRID_HH	elements/grid/grid.hh	2;"	d
GRID_LINK_PROBE	elements/grid/grid.hh	/^	GRID_LINK_PROBE = 9	\/\/ followed by grid_link_probe$/;"	e	enum:grid_hdr::Type
GRID_LOC_QUERY	elements/grid/grid.hh	/^	GRID_LOC_QUERY = 4,	\/\/ followed by grid_loc_query$/;"	e	enum:grid_hdr::Type
GRID_LOC_REPLY	elements/grid/grid.hh	/^	GRID_LOC_REPLY = 5,	\/\/ followed by grid_nbr_encap$/;"	e	enum:grid_hdr::Type
GRID_LR_HELLO	elements/grid/grid.hh	/^	GRID_LR_HELLO = 2,	\/\/ followed by grid_hello and grid_nbr_entries$/;"	e	enum:grid_hdr::Type
GRID_MAX	elements/grid/dsdvroutetable.cc	45;"	d	file:
GRID_MIN	elements/grid/dsdvroutetable.cc	46;"	d	file:
GRID_NBR_ENCAP	elements/grid/grid.hh	/^	GRID_NBR_ENCAP = 3,	\/\/ followed by grid_nbr_encap$/;"	e	enum:grid_hdr::Type
GRID_PI	elements/grid/grid.hh	/^static const double GRID_PI = 3.1415927;$/;"	v
GRID_RAD_PER_DEG	elements/grid/grid.hh	/^static const double GRID_RAD_PER_DEG = 0.017453293; \/\/ from xcalc$/;"	v
GRID_ROUTE_CB_ANNO	include/click/packet_anno.hh	79;"	d
GRID_ROUTE_CB_ANNO_OFFSET	include/click/packet_anno.hh	77;"	d
GRID_ROUTE_CB_ANNO_SIZE	include/click/packet_anno.hh	78;"	d
GRID_ROUTE_PROBE	elements/grid/grid.hh	/^	GRID_ROUTE_PROBE = 6,	\/\/ followed by grid_nbr_encap and grid_route_probe$/;"	e	enum:grid_hdr::Type
GRID_ROUTE_REPLY	elements/grid/grid.hh	/^	GRID_ROUTE_REPLY = 7,	\/\/ followed by grid_nbr_encap and grid_route_reply$/;"	e	enum:grid_hdr::Type
GRID_VERSION	elements/grid/grid.hh	/^	GRID_VERSION = 0xFED4$/;"	e	enum:grid_hdr::__anon225
GROUPMASK	elements/analysis/aggregatefilter.hh	/^    enum { GROUPSHIFT = 8, GROUPMASK = 0xFFFFFFFFU << GROUPSHIFT,$/;"	e	enum:AggregateFilter::__anon254
GROUPSHIFT	elements/analysis/aggregatefilter.hh	/^    enum { GROUPSHIFT = 8, GROUPMASK = 0xFFFFFFFFU << GROUPSHIFT,$/;"	e	enum:AggregateFilter::__anon254
GapRate	include/click/gaprate.hh	/^GapRate::GapRate()$/;"	f	class:GapRate
GapRate	include/click/gaprate.hh	/^GapRate::GapRate(unsigned r)$/;"	f	class:GapRate
GapRate	include/click/gaprate.hh	/^class GapRate { public:$/;"	c
GatherErrorHandler	apps/clicky/src/gathererror.cc	/^GatherErrorHandler::GatherErrorHandler(bool utf8)$/;"	f	class:GatherErrorHandler
GatherErrorHandler	apps/clicky/src/gathererror.hh	/^class GatherErrorHandler : public ErrorHandler { public:$/;"	c
GeneratorAligner	tools/click-align/alignclass.hh	/^  GeneratorAligner(const Alignment &a) : _alignment(a) { }$/;"	f	class:GeneratorAligner
GeneratorAligner	tools/click-align/alignclass.hh	/^class GeneratorAligner : public Aligner {$/;"	c
GetIP6Address	elements/ip6/getip6address.cc	/^GetIP6Address::GetIP6Address()$/;"	f	class:GetIP6Address
GetIP6Address	elements/ip6/getip6address.hh	/^class GetIP6Address : public Element {$/;"	c
GetIPAddress	elements/ip/getipaddress.cc	/^GetIPAddress::GetIPAddress()$/;"	f	class:GetIPAddress
GetIPAddress	elements/ip/getipaddress.hh	/^class GetIPAddress : public Element {$/;"	c
Globals	tools/lib/elementmap.hh	/^    struct Globals {$/;"	s	class:ElementMap
GridEncap	elements/grid/gridencap.cc	/^GridEncap::GridEncap()$/;"	f	class:GridEncap
GridEncap	elements/grid/gridencap.hh	/^class GridEncap : public Element { public:$/;"	c
GridGatewayInfo	elements/grid/gridgatewayinfo.cc	/^GridGatewayInfo::GridGatewayInfo()$/;"	f	class:GridGatewayInfo
GridGatewayInfo	elements/grid/gridgatewayinfo.hh	/^class GridGatewayInfo : public Element {$/;"	c
GridGenericLocInfo	elements/grid/gridgenericlocinfo.hh	/^  GridGenericLocInfo() { }$/;"	f	class:GridGenericLocInfo
GridGenericLocInfo	elements/grid/gridgenericlocinfo.hh	/^class GridGenericLocInfo : public Element {$/;"	c
GridGenericLogger	elements/grid/gridgenericlogger.hh	/^  GridGenericLogger() { }$/;"	f	class:GridGenericLogger
GridGenericLogger	elements/grid/gridgenericlogger.hh	/^class GridGenericLogger : public Element {$/;"	c
GridGenericMetric	elements/grid/gridgenericmetric.hh	/^  GridGenericMetric() { }$/;"	f	class:GridGenericMetric
GridGenericMetric	elements/grid/gridgenericmetric.hh	/^class GridGenericMetric : public Element {$/;"	c
GridGenericRouteTable	elements/grid/gridgenericrt.hh	/^  GridGenericRouteTable() { }$/;"	f	class:GridGenericRouteTable
GridGenericRouteTable	elements/grid/gridgenericrt.hh	/^class GridGenericRouteTable : public Element {$/;"	c
GridHeaderInfo	elements/grid/gridheaderinfo.cc	/^GridHeaderInfo::GridHeaderInfo()$/;"	f	class:GridHeaderInfo
GridHeaderInfo	elements/grid/gridheaderinfo.hh	/^class GridHeaderInfo : public Element {$/;"	c
GridLocationInfo	elements/grid/gridlocationinfo.cc	/^GridLocationInfo::GridLocationInfo() : _seq_no(0), _logging_timer(logging_hook, this)$/;"	f	class:GridLocationInfo
GridLocationInfo	elements/grid/gridlocationinfo.hh	/^class GridLocationInfo : public GridGenericLocInfo {$/;"	c
GridLocationInfo2	elements/grid/gridlocationinfo2.cc	/^GridLocationInfo2::GridLocationInfo2()$/;"	f	class:GridLocationInfo2
GridLocationInfo2	elements/grid/gridlocationinfo2.hh	/^class GridLocationInfo2 : public GridGenericLocInfo {$/;"	c
GridLogger	elements/grid/gridlogger.cc	/^GridLogger::GridLogger()$/;"	f	class:GridLogger
GridLogger	elements/grid/gridlogger.hh	/^class GridLogger : public GridGenericLogger {$/;"	c
GridProbeHandler	elements/grid/gridprobehandler.cc	/^GridProbeHandler::GridProbeHandler() :$/;"	f	class:GridProbeHandler
GridProbeHandler	elements/grid/gridprobehandler.hh	/^class GridProbeHandler : public Element, GridRouteActionCallback {$/;"	c
GridProbeReplyReceiver	elements/grid/gridprobereplyreceiver.cc	/^GridProbeReplyReceiver::GridProbeReplyReceiver()$/;"	f	class:GridProbeReplyReceiver
GridProbeReplyReceiver	elements/grid/gridprobereplyreceiver.hh	/^class GridProbeReplyReceiver : public Element {$/;"	c
GridProbeSender	elements/grid/gridprobesender.cc	/^GridProbeSender::GridProbeSender()$/;"	f	class:GridProbeSender
GridProbeSender	elements/grid/gridprobesender.hh	/^class GridProbeSender : public Element {$/;"	c
GridProxy	elements/grid/gridproxy.cc	/^GridProxy::GridProxy()$/;"	f	class:GridProxy
GridProxy	elements/grid/gridproxy.hh	/^class GridProxy : public Element {$/;"	c
GridRouteActionCallback	elements/grid/gridroutecb.hh	/^class GridRouteActionCallback {$/;"	c
GridRouteActor	elements/grid/gridroutecb.hh	/^  GridRouteActor() { memset(&_cbs, 0, sizeof(_cbs)); }$/;"	f	class:GridRouteActor
GridRouteActor	elements/grid/gridroutecb.hh	/^class GridRouteActor {$/;"	c
GridRouteTable	elements/grid/gridroutetable.cc	/^GridRouteTable::GridRouteTable() :$/;"	f	class:GridRouteTable
GridRouteTable	elements/grid/gridroutetable.hh	/^class GridRouteTable : public GridGenericRouteTable {$/;"	c
GridSRForwarder	elements/grid/gridsrforwarder.cc	/^GridSRForwarder::GridSRForwarder()$/;"	f	class:GridSRForwarder
GridSRForwarder	elements/grid/gridsrforwarder.hh	/^class GridSRForwarder : public Element {$/;"	c
GridTxError	elements/grid/gridtxerror.cc	/^GridTxError::GridTxError()$/;"	f	class:GridTxError
GridTxError	elements/grid/gridtxerror.hh	/^class GridTxError : public Element { public:$/;"	c
Group	elements/analysis/aggregatefilter.cc	/^AggregateFilter::Group::Group(uint32_t aggregate)$/;"	f	class:AggregateFilter::Group
Group	elements/analysis/aggregatefilter.hh	/^    struct Group {$/;"	s	class:AggregateFilter
H	lib/md5.cc	260;"	d	file:
HALF_DUPLEX	drivers/e1000-4.x/src/e1000_hw.h	267;"	d
HALF_DUPLEX	drivers/e1000-5.x/src/e1000_hw.h	400;"	d
HALF_DUPLEX	drivers/e1000-7.x/src/e1000_hw.h	518;"	d
HANDLER_BUFSIZ	include/click/router.hh	/^    enum { HANDLER_BUFSIZ = 256 };$/;"	e	enum:Router::__anon442
HANDLER_DIRECT	linuxmodule/modulepriv.hh	27;"	d
HANDLER_DONE	linuxmodule/modulepriv.hh	28;"	d
HANDLER_NEED_READ	bsdmodule/modulepriv.hh	27;"	d
HANDLER_OPT	ns/nsclick.cc	60;"	d	file:
HANDLER_OPT	userlevel/click.cc	65;"	d	file:
HANDLER_RAW	linuxmodule/modulepriv.hh	29;"	d
HANDLER_REREAD	bsdmodule/modulepriv.hh	26;"	d
HANDLER_SPECIAL_INODE	bsdmodule/modulepriv.hh	28;"	d
HANDLER_SPECIAL_INODE	linuxmodule/modulepriv.hh	30;"	d
HANDLER_WRITE_UNLIMITED	bsdmodule/modulepriv.hh	29;"	d
HANDLER_WRITE_UNLIMITED	linuxmodule/modulepriv.hh	31;"	d
HASH_H	elements/local/OpenFlow/lib/hash.hh	34;"	d
HAS_LONG_CLICK_JIFFIES_T	include/click/glue.hh	392;"	d
HAVE_ACCEPT_SOCKLEN_T	include/click/config-userlevel.h	10;"	d
HAVE_ADDRESSABLE_VA_LIST	include/click/config.h	63;"	d
HAVE_ALLOW_KQUEUE	include/click/config-userlevel.h	13;"	d
HAVE_ALLOW_KQUEUE	include/click/selectset.hh	26;"	d
HAVE_ALLOW_POLL	include/click/config-userlevel.h	16;"	d
HAVE_ALLOW_POLL	include/click/selectset.hh	15;"	d
HAVE_ALLOW_POLL	include/click/selectset.hh	20;"	d
HAVE_ALLOW_SELECT	include/click/config-userlevel.h	19;"	d
HAVE_ALLOW_SELECT	include/click/selectset.hh	11;"	d
HAVE_ARITHMETIC_RIGHT_SHIFT	include/click/config.h	66;"	d
HAVE_BYTESWAP_H	include/click/config-userlevel.h	25;"	d
HAVE_CLICKFS	include/click/pathvars.h	22;"	d
HAVE_CLICK_PACKET_POOL	include/click/packet.hh	19;"	d
HAVE_CLOCK_GETTIME	include/click/config-userlevel.h	28;"	d
HAVE_DECL_CLOCK_GETTIME	include/click/config-userlevel.h	32;"	d
HAVE_DECL_MADVISE	include/click/config-userlevel.h	36;"	d
HAVE_DECL_PCAP_SETNONBLOCK	include/click/config-userlevel.h	40;"	d
HAVE_DLFCN_H	include/click/config-userlevel.h	43;"	d
HAVE_DYNAMIC_LINKING	include/click/config-userlevel.h	46;"	d
HAVE_EXECINFO_H	include/click/config-userlevel.h	49;"	d
HAVE_EXPAT	include/click/pathvars.h	25;"	d
HAVE_FAST_CHECKSUM	include/click/config-linuxmodule.h	20;"	d
HAVE_FFS	include/click/config-userlevel.h	52;"	d
HAVE_FFSL	include/click/config-userlevel.h	55;"	d
HAVE_FFSLL	include/click/config-userlevel.h	58;"	d
HAVE_FLOAT_TYPES	include/click/config-userlevel.h	61;"	d
HAVE_GRP_H	include/click/config-userlevel.h	64;"	d
HAVE_IFADDRS_H	include/click/config-userlevel.h	73;"	d
HAVE_IF_PACKET	elements/local/OpenFlow/include/config.h	58;"	d
HAVE_INDIFFERENT_ALIGNMENT	include/click/config.h	78;"	d
HAVE_INT64_DIVIDE	include/click/config-userlevel.h	269;"	d
HAVE_INT64_IS_LONG	include/click/config-bsdmodule.h	61;"	d
HAVE_INT64_IS_LONG	include/click/config-linuxmodule.h	148;"	d
HAVE_INT64_IS_LONG	include/click/config-userlevel.h	259;"	d
HAVE_INT64_IS_LONG_LONG	include/click/config-bsdmodule.h	66;"	d
HAVE_INT64_IS_LONG_LONG	include/click/config-linuxmodule.h	153;"	d
HAVE_INT64_IS_LONG_LONG	include/click/config-userlevel.h	264;"	d
HAVE_INT64_IS_LONG_LONG_USERLEVEL	include/click/config-userlevel.h	79;"	d
HAVE_INT64_TYPES	include/click/config.h	84;"	d
HAVE_INTTYPES_H	elements/local/OpenFlow/include/config.h	61;"	d
HAVE_INTTYPES_H	include/click/config-userlevel.h	82;"	d
HAVE_LARGE_FILE_SUPPORT	include/click/config-userlevel.h	88;"	d
HAVE_LINUX_FILES_LGLOCK	linuxmodule/proclikefs.c	55;"	d	file:
HAVE_LINUX_FILES_LOCK	linuxmodule/proclikefs.c	52;"	d	file:
HAVE_LINUX_IF_TUN_H	include/click/config-userlevel.h	91;"	d
HAVE_LINUX_SB_LOCK	linuxmodule/proclikefs.c	49;"	d	file:
HAVE_LONG_LONG	include/click/config.h	93;"	d
HAVE_MADVISE	include/click/config-userlevel.h	94;"	d
HAVE_MALLOC_HOOKS	elements/local/OpenFlow/include/config.h	68;"	d
HAVE_MEMORY_H	elements/local/OpenFlow/include/config.h	71;"	d
HAVE_MMAP	include/click/config-userlevel.h	97;"	d
HAVE_MOD_USE_COUNT	include/click/glue.hh	21;"	d
HAVE_MULTITHREAD	include/click/config-linuxmodule.h	158;"	d
HAVE_MULTITHREAD	include/click/config-userlevel.h	274;"	d
HAVE_NANOTIMESTAMP	include/click/config-userlevel.h	309;"	d
HAVE_NANOTIMESTAMP_ENABLED	include/click/config.h	96;"	d
HAVE_NETDB_H	include/click/config-userlevel.h	115;"	d
HAVE_NETIF_MSG	drivers/e1000-5.x/src/kcompat.h	601;"	d
HAVE_NETIF_MSG	drivers/e1000-7.x/src/kcompat.h	185;"	d
HAVE_NETLINK	elements/local/OpenFlow/include/config.h	74;"	d
HAVE_NETPACKET_PACKET_H	include/click/config-userlevel.h	118;"	d
HAVE_NEW_HDR	include/click/config-userlevel.h	124;"	d
HAVE_NO_INTEGER_BUILTINS	include/click/config-linuxmodule.h	240;"	d
HAVE_PCAP	include/click/config-userlevel.h	127;"	d
HAVE_PCAP_INJECT	include/click/config-userlevel.h	130;"	d
HAVE_PCAP_SENDPACKET	include/click/config-userlevel.h	133;"	d
HAVE_PCAP_SETDIRECTION	include/click/config-userlevel.h	136;"	d
HAVE_PCAP_SETNONBLOCK	include/click/config-userlevel.h	139;"	d
HAVE_PLACEMENT_NEW	include/click/config-bsdmodule.h	77;"	d
HAVE_PLACEMENT_NEW	include/click/config-linuxmodule.h	210;"	d
HAVE_PLACEMENT_NEW	include/click/config-userlevel.h	152;"	d
HAVE_POLL_H	include/click/config-userlevel.h	146;"	d
HAVE_PSELECT	include/click/config-userlevel.h	149;"	d
HAVE_PWD_H	include/click/config-userlevel.h	155;"	d
HAVE_RANDOM	include/click/config-userlevel.h	158;"	d
HAVE_SIGACTION	include/click/config-userlevel.h	161;"	d
HAVE_SNPRINTF	include/click/config-userlevel.h	164;"	d
HAVE_STDINT_H	elements/local/OpenFlow/include/config.h	80;"	d
HAVE_STDLIB_H	elements/local/OpenFlow/include/config.h	83;"	d
HAVE_STRERROR	include/click/config-userlevel.h	170;"	d
HAVE_STRIDE_SCHED	include/click/config.h	99;"	d
HAVE_STRING	include/click/config.h	102;"	d
HAVE_STRINGS_H	elements/local/OpenFlow/include/config.h	86;"	d
HAVE_STRINGS_H	include/click/config-userlevel.h	173;"	d
HAVE_STRING_H	elements/local/OpenFlow/include/config.h	89;"	d
HAVE_STRNLEN	include/click/config-linuxmodule.h	138;"	d
HAVE_STRNLEN	include/click/config-userlevel.h	176;"	d
HAVE_STRSIGNAL	elements/local/OpenFlow/include/config.h	95;"	d
HAVE_STRTOF	include/click/config-userlevel.h	179;"	d
HAVE_STRTOLD	include/click/config-userlevel.h	182;"	d
HAVE_STRTOUL	include/click/config-userlevel.h	185;"	d
HAVE_STRTOUL	lib/clp.c	30;"	d	file:
HAVE_STRUCT_TIMESPEC	include/click/config.h	105;"	d
HAVE_SYS_MMAN_H	include/click/config-userlevel.h	191;"	d
HAVE_SYS_STAT_H	elements/local/OpenFlow/include/config.h	98;"	d
HAVE_SYS_TYPES_H	elements/local/OpenFlow/include/config.h	101;"	d
HAVE_TCGETPGRP	include/click/config-userlevel.h	194;"	d
HAVE_TERMIO_H	include/click/config-userlevel.h	197;"	d
HAVE_UNISTD_H	elements/local/OpenFlow/include/config.h	104;"	d
HAVE_UNISTD_H	include/click/config-userlevel.h	203;"	d
HAVE_USERLEVEL_DRIVER	include/click/pathvars.h	34;"	d
HAVE_USE_CLOCK_GETTIME	include/click/config-ns.h	17;"	d
HAVE_USE_CLOCK_GETTIME	include/click/config-userlevel.h	280;"	d
HAVE_VSNPRINTF	include/click/config-userlevel.h	215;"	d
HAVE___BUILTIN_CLZ	include/click/config.h	36;"	d
HAVE___BUILTIN_CLZL	include/click/config.h	39;"	d
HAVE___BUILTIN_CLZLL	include/click/config.h	42;"	d
HAVE___BUILTIN_FFS	include/click/config.h	45;"	d
HAVE___BUILTIN_FFSL	include/click/config.h	48;"	d
HAVE___BUILTIN_FFSLL	include/click/config.h	51;"	d
HAVE___HAS_TRIVIAL_COPY	include/click/config.h	54;"	d
HAVE___SYNC_SYNCHRONIZE	include/click/config.h	57;"	d
HAVE___THREAD_STORAGE_CLASS	include/click/config-userlevel.h	7;"	d
HCMETRIC_HH	elements/grid/hopcountmetric.hh	2;"	d
HEADER_HMAC_H	elements/ipsec/hmac.hh	60;"	d
HEADER_SIZE	elements/analysis/fromdagdump.hh	/^	enum { HEADER_SIZE = 16, CELL_SIZE = 64 };$/;"	e	enum:FromDAGDump::DAGCell::__anon271
HELLO_HH	elements/grid/hello.hh	2;"	d
HELP_OPT	apps/clicky/src/clicky.cc	36;"	d	file:
HELP_OPT	ns/nsclick.cc	54;"	d	file:
HELP_OPT	tools/click-align/click-align.cc	297;"	d	file:
HELP_OPT	tools/click-check/click-check.cc	40;"	d	file:
HELP_OPT	tools/click-combine/click-combine.cc	40;"	d	file:
HELP_OPT	tools/click-combine/click-uncombine.cc	40;"	d	file:
HELP_OPT	tools/click-devirtualize/click-devirtualize.cc	42;"	d	file:
HELP_OPT	tools/click-fastclassifier/click-fastclassifier.cc	47;"	d	file:
HELP_OPT	tools/click-flatten/click-flatten.cc	33;"	d	file:
HELP_OPT	tools/click-install/click-install.cc	52;"	d	file:
HELP_OPT	tools/click-install/click-uninstall.cc	39;"	d	file:
HELP_OPT	tools/click-mkmindriver/click-mkmindriver.cc	37;"	d	file:
HELP_OPT	tools/click-pretty/click-pretty.cc	37;"	d	file:
HELP_OPT	tools/click-undead/click-undead.cc	43;"	d	file:
HELP_OPT	tools/click-xform/click-xform.cc	408;"	d	file:
HELP_OPT	tools/click2xml/click2xml.cc	34;"	d	file:
HELP_OPT	tools/click2xml/xml2click.cc	36;"	d	file:
HELP_OPT	userlevel/click.cc	58;"	d	file:
HFILES	drivers/e1000-4.x/src/Makefile	/^HFILES = e1000.h e1000_hw.h e1000_osdep.h kcompat.h$/;"	m
HFILES	drivers/e1000-5.x/src/Makefile	/^HFILES = e1000.h e1000_hw.h e1000_osdep.h kcompat.h$/;"	m
HFILES	drivers/e1000-7.x/src/Makefile	/^HFILES = e1000.h e1000_hw.h e1000_osdep.h kcompat.h$/;"	m
HMAC	elements/ipsec/hmac.cc	/^unsigned char *HMAC(void *key, int key_len,unsigned char *d, size_t n, unsigned char *md,unsigned int *md_len)$/;"	f
HMAC_CTX	elements/ipsec/hmac.hh	/^	} HMAC_CTX;$/;"	t	typeref:struct:hmac_ctx_st
HMAC_CTX_cleanup	elements/ipsec/hmac.cc	/^void HMAC_CTX_cleanup(HMAC_CTX *ctx)$/;"	f
HMAC_CTX_init	elements/ipsec/hmac.cc	/^void HMAC_CTX_init(HMAC_CTX *ctx)$/;"	f
HMAC_Final	elements/ipsec/hmac.cc	/^void HMAC_Final(HMAC_CTX *ctx, unsigned char *md, unsigned int *len)$/;"	f
HMAC_Init	elements/ipsec/hmac.cc	/^void HMAC_Init(HMAC_CTX *ctx, const void *key, int len)$/;"	f
HMAC_Init_ex	elements/ipsec/hmac.cc	/^void HMAC_Init_ex(HMAC_CTX *ctx, const void *key, int len)$/;"	f
HMAC_MAX_MD_CBLOCK	elements/ipsec/hmac.hh	62;"	d
HMAC_Update	elements/ipsec/hmac.cc	/^void HMAC_Update(HMAC_CTX *ctx, unsigned char *data, size_t len)$/;"	f
HMIter	elements/grid/dsdvroutetable.hh	/^  typedef HMap::iterator HMIter;$/;"	t	class:DSDVRouteTable
HMap	elements/grid/dsdvroutetable.hh	/^  typedef HashMap<IPAddress, HookPair *> HMap;$/;"	t	class:DSDVRouteTable
HOST	include/click/packet.hh	/^	HOST = 0,		\/**< Packet was sent to this host. *\/$/;"	e	enum:Packet::PacketType
HOST_TOOLS	tools/click-align/Makefile	/^HOST_TOOLS = host$/;"	m
HOST_TOOLS	tools/click-check/Makefile	/^HOST_TOOLS = host$/;"	m
HOST_TOOLS	tools/click-combine/Makefile	/^HOST_TOOLS = host$/;"	m
HOST_TOOLS	tools/click-devirtualize/Makefile	/^HOST_TOOLS = host$/;"	m
HOST_TOOLS	tools/click-fastclassifier/Makefile	/^HOST_TOOLS = host$/;"	m
HOST_TOOLS	tools/click-flatten/Makefile	/^HOST_TOOLS = host$/;"	m
HOST_TOOLS	tools/click-install/Makefile	/^HOST_TOOLS = host$/;"	m
HOST_TOOLS	tools/click-mkmindriver/Makefile	/^HOST_TOOLS = host$/;"	m
HOST_TOOLS	tools/click-pretty/Makefile	/^HOST_TOOLS = host$/;"	m
HOST_TOOLS	tools/click-undead/Makefile	/^HOST_TOOLS = host$/;"	m
HOST_TOOLS	tools/click-xform/Makefile	/^HOST_TOOLS = host$/;"	m
HOST_TOOLS	tools/click2xml/Makefile	/^HOST_TOOLS = host$/;"	m
HOST_TOOLS	tools/lib/Makefile	/^HOST_TOOLS = host$/;"	m
HOTSWAP_OPT	tools/click-install/click-install.cc	58;"	d	file:
HPERM_OP	elements/ipsec/des.cc	432;"	d	file:
HTIter	elements/wifi/linktable.hh	/^  typedef HTable::const_iterator HTIter;$/;"	t	class:LinkTable
HTable	elements/wifi/linktable.hh	/^  typedef HashMap<IPAddress, HostInfo> HTable;$/;"	t	class:LinkTable
HW_RX_DESCRIPTOR	drivers/e1000-4.x/src/ans_driver.h	35;"	d
HW_TX_DESCRIPTOR	drivers/e1000-4.x/src/ans_driver.h	36;"	d
H_ACTIVE	elements/analysis/fromcapdump.cc	/^enum { H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP };$/;"	e	enum:__anon284	file:
H_ACTIVE	elements/analysis/fromdagdump.cc	/^    H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP, H_EXTEND_INTERVAL$/;"	e	enum:__anon253	file:
H_ACTIVE	elements/analysis/fromipsumdump.cc	/^enum { H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP };$/;"	e	enum:__anon267	file:
H_ACTIVE	elements/analysis/fromnetflowsumdump.cc	/^enum { H_ACTIVE, H_ENCAP };$/;"	e	enum:__anon285	file:
H_ACTIVE	elements/analysis/fromnlanrdump.cc	/^    H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP, H_PACKET_FILEPOS,$/;"	e	enum:__anon302	file:
H_ACTIVE	elements/analysis/fromtcpdump.cc	/^enum { H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP };$/;"	e	enum:__anon295	file:
H_ACTIVE	elements/icmp/icmpsendpings.cc	/^enum { H_ACTIVE, H_LIMIT, H_INTERVAL, H_RESET_COUNTS, H_COUNT, H_SUMMARY,$/;"	e	enum:__anon400	file:
H_ACTIVE	elements/userlevel/fromdump.cc	/^    H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP, H_PACKET_FILEPOS,$/;"	e	enum:__anon199	file:
H_ACTIVE	elements/userlevel/progressbar.cc	/^enum { H_MARK_STOPPED, H_MARK_DONE, H_ACTIVE,$/;"	e	enum:__anon206	file:
H_ACTIVE	elements/wifi/autoratefallback.cc	/^      H_OFFSET, H_ACTIVE};$/;"	e	enum:__anon360	file:
H_ACTIVE	elements/wifi/fromhandler.cc	/^enum { H_ACTIVE, H_TIME};$/;"	e	enum:__anon381	file:
H_ACTIVE	elements/wifi/madwifirate.cc	/^      H_OFFSET, H_ACTIVE, H_PERIOD,$/;"	e	enum:__anon392	file:
H_ACTIVE	elements/wifi/probetxrate.cc	/^      H_ACTIVE,$/;"	e	enum:__anon396	file:
H_ACTIVE	elements/wifi/wepencap.cc	/^enum {H_DEBUG, H_ACTIVE, H_KEY, H_KEYID};$/;"	e	enum:__anon363	file:
H_ALL_SAME	elements/test/comparepackets.cc	/^enum { H_DIFFS, H_DIFF_DETAILS, H_ALL_SAME };$/;"	e	enum:__anon406	file:
H_ALT_RATE	elements/wifi/madwifirate.cc	/^      H_ALT_RATE};$/;"	e	enum:__anon392	file:
H_ASSOCIATED	elements/wifi/station/associationrequester.cc	/^      H_ASSOCIATED,$/;"	e	enum:__anon388	file:
H_BANDWIDTH	elements/standard/linkunqueue.cc	/^enum { H_LATENCY, H_BANDWIDTH, H_SIZE, H_RESET };$/;"	e	enum:__anon171	file:
H_BEACON_INTERVAL	elements/wifi/station/beacontracker.cc	/^      H_TRACK, H_BEACON_INTERVAL};$/;"	e	enum:__anon385	file:
H_BIT_RATE	elements/standard/counter.cc	/^enum { H_COUNT, H_BYTE_COUNT, H_RATE, H_BIT_RATE, H_BYTE_RATE, H_RESET,$/;"	e	enum:__anon172	file:
H_BLACKLIST	elements/wifi/linktable.cc	/^enum {H_BLACKLIST,$/;"	e	enum:__anon383	file:
H_BLACKLIST_ADD	elements/wifi/linktable.cc	/^      H_BLACKLIST_ADD,$/;"	e	enum:__anon383	file:
H_BLACKLIST_CLEAR	elements/wifi/linktable.cc	/^      H_BLACKLIST_CLEAR,$/;"	e	enum:__anon383	file:
H_BLACKLIST_REMOVE	elements/wifi/linktable.cc	/^      H_BLACKLIST_REMOVE,$/;"	e	enum:__anon383	file:
H_BSSID	elements/wifi/ap/proberesponder.cc	/^enum {H_DEBUG, H_BSSID, H_SSID, H_CHANNEL, H_INTERVAL};$/;"	e	enum:__anon365	file:
H_BSSID	elements/wifi/wifiencap.cc	/^enum {H_DEBUG, H_MODE, H_BSSID};$/;"	e	enum:__anon390	file:
H_BSSID	elements/wifi/wirelessinfo.cc	/^enum {H_SSID, H_BSSID, H_CHANNEL, H_INTERVAL, H_WEP, H_RESET};$/;"	e	enum:__anon372	file:
H_BYTES	elements/wifi/wifiseq.cc	/^enum {H_DEBUG, H_SEQ, H_OFFSET, H_BYTES, H_SHIFT, H_RESET};$/;"	e	enum:__anon364	file:
H_BYTE_COUNT	elements/standard/counter.cc	/^enum { H_COUNT, H_BYTE_COUNT, H_RATE, H_BIT_RATE, H_BYTE_RATE, H_RESET,$/;"	e	enum:__anon172	file:
H_BYTE_COUNT_CALL	elements/standard/counter.cc	/^       H_COUNT_CALL, H_BYTE_COUNT_CALL };$/;"	e	enum:__anon172	file:
H_BYTE_RATE	elements/standard/counter.cc	/^enum { H_COUNT, H_BYTE_COUNT, H_RATE, H_BIT_RATE, H_BYTE_RATE, H_RESET,$/;"	e	enum:__anon172	file:
H_CHANNEL	elements/wifi/ap/proberesponder.cc	/^enum {H_DEBUG, H_BSSID, H_SSID, H_CHANNEL, H_INTERVAL};$/;"	e	enum:__anon365	file:
H_CHANNEL	elements/wifi/wirelessinfo.cc	/^enum {H_SSID, H_BSSID, H_CHANNEL, H_INTERVAL, H_WEP, H_RESET};$/;"	e	enum:__anon372	file:
H_CLEAR	elements/analysis/aggpktcounter.cc	/^enum { H_CLEAR, H_COUNT };$/;"	e	enum:__anon291	file:
H_CLEAR	elements/analysis/aggregateipaddrpair.cc	/^enum { H_CLEAR };$/;"	e	enum:__anon255	file:
H_CLEAR	elements/analysis/aggregateipflows.cc	/^enum { H_CLEAR };$/;"	e	enum:__anon275	file:
H_CLEAR	elements/analysis/aggregatelast.cc	/^enum { H_CLEAR };$/;"	e	enum:__anon287	file:
H_CLEAR	elements/analysis/toipflowdumps.cc	/^enum { H_CLEAR };$/;"	e	enum:__anon273	file:
H_CLEAR	elements/userlevel/ipflowrawsockets.cc	/^enum { H_CLEAR };$/;"	e	enum:__anon197	file:
H_CLEAR	elements/wifi/linktable.cc	/^      H_CLEAR,$/;"	e	enum:__anon383	file:
H_COUNT	elements/analysis/aggpktcounter.cc	/^enum { H_CLEAR, H_COUNT };$/;"	e	enum:__anon291	file:
H_COUNT	elements/icmp/icmpsendpings.cc	/^enum { H_ACTIVE, H_LIMIT, H_INTERVAL, H_RESET_COUNTS, H_COUNT, H_SUMMARY,$/;"	e	enum:__anon400	file:
H_COUNT	elements/standard/counter.cc	/^enum { H_COUNT, H_BYTE_COUNT, H_RATE, H_BIT_RATE, H_BYTE_RATE, H_RESET,$/;"	e	enum:__anon172	file:
H_COUNT	elements/userlevel/fromdump.cc	/^    H_EXTEND_INTERVAL, H_COUNT, H_RESET_COUNTS, H_RESET_TIMING$/;"	e	enum:__anon199	file:
H_COUNT	elements/userlevel/todump.cc	/^enum { H_FILENAME = 0, H_COUNT = 1, H_RESET_COUNTS = 2 };$/;"	e	enum:__anon201	file:
H_COUNT_CALL	elements/standard/counter.cc	/^       H_COUNT_CALL, H_BYTE_COUNT_CALL };$/;"	e	enum:__anon172	file:
H_DEBUG	elements/wifi/ap/associationresponder.cc	/^enum {H_DEBUG};$/;"	e	enum:__anon368	file:
H_DEBUG	elements/wifi/ap/beaconsource.cc	/^enum {H_DEBUG};$/;"	e	enum:__anon369	file:
H_DEBUG	elements/wifi/ap/openauthresponder.cc	/^enum {H_DEBUG};$/;"	e	enum:__anon367	file:
H_DEBUG	elements/wifi/ap/proberesponder.cc	/^enum {H_DEBUG, H_BSSID, H_SSID, H_CHANNEL, H_INTERVAL};$/;"	e	enum:__anon365	file:
H_DEBUG	elements/wifi/ap/stationtable.cc	/^enum {H_DEBUG};$/;"	e	enum:__anon366	file:
H_DEBUG	elements/wifi/athdescdecap.cc	/^enum {H_DEBUG};$/;"	e	enum:__anon373	file:
H_DEBUG	elements/wifi/athdescencap.cc	/^enum {H_DEBUG};$/;"	e	enum:__anon357	file:
H_DEBUG	elements/wifi/autoratefallback.cc	/^enum {H_DEBUG, H_STEPUP, H_STEPDOWN, H_THRESHOLD, H_RATES, H_RESET,$/;"	e	enum:__anon360	file:
H_DEBUG	elements/wifi/availablerates.cc	/^enum {H_DEBUG, H_INSERT, H_REMOVE, H_RATES};$/;"	e	enum:__anon362	file:
H_DEBUG	elements/wifi/extradecap.cc	/^enum {H_DEBUG};$/;"	e	enum:__anon361	file:
H_DEBUG	elements/wifi/extraencap.cc	/^enum {H_DEBUG};$/;"	e	enum:__anon395	file:
H_DEBUG	elements/wifi/madwifirate.cc	/^enum {H_DEBUG, H_STEPUP, H_STEPDOWN, H_THRESHOLD, H_RATES, H_RESET,$/;"	e	enum:__anon392	file:
H_DEBUG	elements/wifi/prism2decap.cc	/^enum {H_DEBUG};$/;"	e	enum:__anon374	file:
H_DEBUG	elements/wifi/prism2encap.cc	/^enum {H_DEBUG};$/;"	e	enum:__anon371	file:
H_DEBUG	elements/wifi/probetxrate.cc	/^enum {H_DEBUG,$/;"	e	enum:__anon396	file:
H_DEBUG	elements/wifi/radiotapdecap.cc	/^enum {H_DEBUG};$/;"	e	enum:__anon377	file:
H_DEBUG	elements/wifi/radiotapencap.cc	/^enum {H_DEBUG};$/;"	e	enum:__anon370	file:
H_DEBUG	elements/wifi/station/associationrequester.cc	/^enum {H_DEBUG, H_ETH,$/;"	e	enum:__anon388	file:
H_DEBUG	elements/wifi/station/beaconscanner.cc	/^enum {H_DEBUG, H_SCAN, H_RESET};$/;"	e	enum:__anon386	file:
H_DEBUG	elements/wifi/station/beacontracker.cc	/^enum {H_DEBUG, H_SCAN, H_RESET, H_STATS,$/;"	e	enum:__anon385	file:
H_DEBUG	elements/wifi/station/openauthrequester.cc	/^enum {H_DEBUG, H_ETH, H_SEND_AUTH_REQ};$/;"	e	enum:__anon387	file:
H_DEBUG	elements/wifi/station/proberequester.cc	/^enum {H_DEBUG, H_ETH, H_SEND_PROBE};$/;"	e	enum:__anon389	file:
H_DEBUG	elements/wifi/wepdecap.cc	/^enum {H_DEBUG, H_KEY, H_KEYID};$/;"	e	enum:__anon378	file:
H_DEBUG	elements/wifi/wepencap.cc	/^enum {H_DEBUG, H_ACTIVE, H_KEY, H_KEYID};$/;"	e	enum:__anon363	file:
H_DEBUG	elements/wifi/wifidecap.cc	/^enum {H_DEBUG};$/;"	e	enum:__anon398	file:
H_DEBUG	elements/wifi/wifidefrag.cc	/^enum {H_DEBUG, };$/;"	e	enum:__anon359	file:
H_DEBUG	elements/wifi/wifidupefilter.cc	/^enum {H_DEBUG, H_DUPES, H_RESET};$/;"	e	enum:__anon376	file:
H_DEBUG	elements/wifi/wifiencap.cc	/^enum {H_DEBUG, H_MODE, H_BSSID};$/;"	e	enum:__anon390	file:
H_DEBUG	elements/wifi/wififragment.cc	/^enum {H_DEBUG, };$/;"	e	enum:__anon394	file:
H_DEBUG	elements/wifi/wifiseq.cc	/^enum {H_DEBUG, H_SEQ, H_OFFSET, H_BYTES, H_SHIFT, H_RESET};$/;"	e	enum:__anon364	file:
H_DIFFS	elements/test/comparepackets.cc	/^enum { H_DIFFS, H_DIFF_DETAILS, H_ALL_SAME };$/;"	e	enum:__anon406	file:
H_DIFF_DETAILS	elements/test/comparepackets.cc	/^enum { H_DIFFS, H_DIFF_DETAILS, H_ALL_SAME };$/;"	e	enum:__anon406	file:
H_DIJKSTRA	elements/wifi/linktable.cc	/^      H_DIJKSTRA,$/;"	e	enum:__anon383	file:
H_DIJKSTRA_TIME	elements/wifi/linktable.cc	/^      H_DIJKSTRA_TIME};$/;"	e	enum:__anon383	file:
H_DIRTY	elements/wifi/packetstore.cc	/^enum {H_RESET, H_LEN, H_POP, H_DIRTY};$/;"	e	enum:__anon397	file:
H_DROPS	elements/wifi/filterfailures.cc	/^enum {H_DROPS };$/;"	e	enum:__anon382	file:
H_DROPS	elements/wifi/filterphyerr.cc	/^enum {H_DROPS };$/;"	e	enum:__anon375	file:
H_DROPS	elements/wifi/filtertx.cc	/^enum {H_DROPS };$/;"	e	enum:__anon358	file:
H_DST	elements/icmp/icmpsendpings.cc	/^       H_RTT_MIN, H_RTT_AVG, H_RTT_MAX, H_SRC, H_DST };$/;"	e	enum:__anon400	file:
H_DUPES	elements/wifi/wifidupefilter.cc	/^enum {H_DEBUG, H_DUPES, H_RESET};$/;"	e	enum:__anon376	file:
H_ENCAP	elements/analysis/fromcapdump.cc	/^enum { H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP };$/;"	e	enum:__anon284	file:
H_ENCAP	elements/analysis/fromdagdump.cc	/^    H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP, H_EXTEND_INTERVAL$/;"	e	enum:__anon253	file:
H_ENCAP	elements/analysis/fromipsumdump.cc	/^enum { H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP };$/;"	e	enum:__anon267	file:
H_ENCAP	elements/analysis/fromnetflowsumdump.cc	/^enum { H_ACTIVE, H_ENCAP };$/;"	e	enum:__anon285	file:
H_ENCAP	elements/analysis/fromnlanrdump.cc	/^    H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP, H_PACKET_FILEPOS,$/;"	e	enum:__anon302	file:
H_ENCAP	elements/analysis/fromtcpdump.cc	/^enum { H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP };$/;"	e	enum:__anon295	file:
H_ENCAP	elements/userlevel/fromdump.cc	/^    H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP, H_PACKET_FILEPOS,$/;"	e	enum:__anon199	file:
H_ETH	elements/wifi/station/associationrequester.cc	/^enum {H_DEBUG, H_ETH,$/;"	e	enum:__anon388	file:
H_ETH	elements/wifi/station/openauthrequester.cc	/^enum {H_DEBUG, H_ETH, H_SEND_AUTH_REQ};$/;"	e	enum:__anon387	file:
H_ETH	elements/wifi/station/proberequester.cc	/^enum {H_DEBUG, H_ETH, H_SEND_PROBE};$/;"	e	enum:__anon389	file:
H_EXTEND_INTERVAL	elements/analysis/fromdagdump.cc	/^    H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP, H_EXTEND_INTERVAL$/;"	e	enum:__anon253	file:
H_EXTEND_INTERVAL	elements/analysis/fromnlanrdump.cc	/^    H_EXTEND_INTERVAL$/;"	e	enum:__anon302	file:
H_EXTEND_INTERVAL	elements/userlevel/fromdump.cc	/^    H_EXTEND_INTERVAL, H_COUNT, H_RESET_COUNTS, H_RESET_TIMING$/;"	e	enum:__anon199	file:
H_FILENAME	elements/userlevel/todump.cc	/^enum { H_FILENAME = 0, H_COUNT = 1, H_RESET_COUNTS = 2 };$/;"	e	enum:__anon201	file:
H_HOSTS	elements/wifi/linktable.cc	/^      H_HOSTS,$/;"	e	enum:__anon383	file:
H_INSERT	elements/wifi/availablerates.cc	/^enum {H_DEBUG, H_INSERT, H_REMOVE, H_RATES};$/;"	e	enum:__anon362	file:
H_INTERVAL	elements/icmp/icmpsendpings.cc	/^enum { H_ACTIVE, H_LIMIT, H_INTERVAL, H_RESET_COUNTS, H_COUNT, H_SUMMARY,$/;"	e	enum:__anon400	file:
H_INTERVAL	elements/standard/timedsink.cc	/^enum { H_INTERVAL };$/;"	e	enum:__anon176	file:
H_INTERVAL	elements/wifi/ap/proberesponder.cc	/^enum {H_DEBUG, H_BSSID, H_SSID, H_CHANNEL, H_INTERVAL};$/;"	e	enum:__anon365	file:
H_INTERVAL	elements/wifi/wirelessinfo.cc	/^enum {H_SSID, H_BSSID, H_CHANNEL, H_INTERVAL, H_WEP, H_RESET};$/;"	e	enum:__anon372	file:
H_ITERS_PER_OS	bsdmodule/sched.cc	/^enum { H_TASKS_PER_ITER, H_ITERS_PER_TIMERS, H_ITERS_PER_OS };$/;"	e	enum:__anon33	file:
H_ITERS_PER_OS	linuxmodule/sched.cc	/^enum { H_TASKS_PER_ITER, H_ITERS_PER_TIMERS, H_ITERS_PER_OS };$/;"	e	enum:__anon521	file:
H_ITERS_PER_TIMERS	bsdmodule/sched.cc	/^enum { H_TASKS_PER_ITER, H_ITERS_PER_TIMERS, H_ITERS_PER_OS };$/;"	e	enum:__anon33	file:
H_ITERS_PER_TIMERS	linuxmodule/sched.cc	/^enum { H_TASKS_PER_ITER, H_ITERS_PER_TIMERS, H_ITERS_PER_OS };$/;"	e	enum:__anon521	file:
H_KEY	elements/wifi/wepdecap.cc	/^enum {H_DEBUG, H_KEY, H_KEYID};$/;"	e	enum:__anon378	file:
H_KEY	elements/wifi/wepencap.cc	/^enum {H_DEBUG, H_ACTIVE, H_KEY, H_KEYID};$/;"	e	enum:__anon363	file:
H_KEYID	elements/wifi/wepdecap.cc	/^enum {H_DEBUG, H_KEY, H_KEYID};$/;"	e	enum:__anon378	file:
H_KEYID	elements/wifi/wepencap.cc	/^enum {H_DEBUG, H_ACTIVE, H_KEY, H_KEYID};$/;"	e	enum:__anon363	file:
H_LATENCY	elements/standard/linkunqueue.cc	/^enum { H_LATENCY, H_BANDWIDTH, H_SIZE, H_RESET };$/;"	e	enum:__anon171	file:
H_LEN	elements/wifi/packetstore.cc	/^enum {H_RESET, H_LEN, H_POP, H_DIRTY};$/;"	e	enum:__anon397	file:
H_LIMIT	elements/icmp/icmpsendpings.cc	/^enum { H_ACTIVE, H_LIMIT, H_INTERVAL, H_RESET_COUNTS, H_COUNT, H_SUMMARY,$/;"	e	enum:__anon400	file:
H_LINKS	elements/wifi/linktable.cc	/^      H_LINKS,$/;"	e	enum:__anon383	file:
H_MARK_DONE	elements/userlevel/progressbar.cc	/^enum { H_MARK_STOPPED, H_MARK_DONE, H_ACTIVE,$/;"	e	enum:__anon206	file:
H_MARK_STOPPED	elements/userlevel/progressbar.cc	/^enum { H_MARK_STOPPED, H_MARK_DONE, H_ACTIVE,$/;"	e	enum:__anon206	file:
H_MODE	elements/wifi/wifiencap.cc	/^enum {H_DEBUG, H_MODE, H_BSSID};$/;"	e	enum:__anon390	file:
H_OFFSET	elements/wifi/autoratefallback.cc	/^      H_OFFSET, H_ACTIVE};$/;"	e	enum:__anon360	file:
H_OFFSET	elements/wifi/madwifirate.cc	/^      H_OFFSET, H_ACTIVE, H_PERIOD,$/;"	e	enum:__anon392	file:
H_OFFSET	elements/wifi/probetxrate.cc	/^      H_OFFSET,$/;"	e	enum:__anon396	file:
H_OFFSET	elements/wifi/wifiseq.cc	/^enum {H_DEBUG, H_SEQ, H_OFFSET, H_BYTES, H_SHIFT, H_RESET};$/;"	e	enum:__anon364	file:
H_PACKET_FILEPOS	elements/analysis/fromnlanrdump.cc	/^    H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP, H_PACKET_FILEPOS,$/;"	e	enum:__anon302	file:
H_PACKET_FILEPOS	elements/userlevel/fromdump.cc	/^    H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP, H_PACKET_FILEPOS,$/;"	e	enum:__anon199	file:
H_PERIOD	elements/wifi/madwifirate.cc	/^      H_OFFSET, H_ACTIVE, H_PERIOD,$/;"	e	enum:__anon392	file:
H_POP	elements/wifi/packetstore.cc	/^enum {H_RESET, H_LEN, H_POP, H_DIRTY};$/;"	e	enum:__anon397	file:
H_POSHANDLER	elements/userlevel/progressbar.cc	/^       H_POSHANDLER, H_SIZEHANDLER, H_RESET };$/;"	e	enum:__anon206	file:
H_POWER	elements/wifi/settxpower.cc	/^enum {H_POWER,$/;"	e	enum:__anon391	file:
H_RATE	elements/standard/counter.cc	/^enum { H_COUNT, H_BYTE_COUNT, H_RATE, H_BIT_RATE, H_BYTE_RATE, H_RESET,$/;"	e	enum:__anon172	file:
H_RATE	elements/wifi/settxrate.cc	/^enum {H_RATE, H_TRIES};$/;"	e	enum:__anon384	file:
H_RATES	elements/wifi/autoratefallback.cc	/^enum {H_DEBUG, H_STEPUP, H_STEPDOWN, H_THRESHOLD, H_RATES, H_RESET,$/;"	e	enum:__anon360	file:
H_RATES	elements/wifi/availablerates.cc	/^enum {H_DEBUG, H_INSERT, H_REMOVE, H_RATES};$/;"	e	enum:__anon362	file:
H_RATES	elements/wifi/madwifirate.cc	/^enum {H_DEBUG, H_STEPUP, H_STEPDOWN, H_THRESHOLD, H_RATES, H_RESET,$/;"	e	enum:__anon392	file:
H_RATES	elements/wifi/probetxrate.cc	/^      H_RATES,$/;"	e	enum:__anon396	file:
H_REMOVE	elements/wifi/availablerates.cc	/^enum {H_DEBUG, H_INSERT, H_REMOVE, H_RATES};$/;"	e	enum:__anon362	file:
H_RESET	elements/standard/counter.cc	/^enum { H_COUNT, H_BYTE_COUNT, H_RATE, H_BIT_RATE, H_BYTE_RATE, H_RESET,$/;"	e	enum:__anon172	file:
H_RESET	elements/standard/linkunqueue.cc	/^enum { H_LATENCY, H_BANDWIDTH, H_SIZE, H_RESET };$/;"	e	enum:__anon171	file:
H_RESET	elements/userlevel/progressbar.cc	/^       H_POSHANDLER, H_SIZEHANDLER, H_RESET };$/;"	e	enum:__anon206	file:
H_RESET	elements/wifi/autoratefallback.cc	/^enum {H_DEBUG, H_STEPUP, H_STEPDOWN, H_THRESHOLD, H_RATES, H_RESET,$/;"	e	enum:__anon360	file:
H_RESET	elements/wifi/ethercount.cc	/^enum {H_STATS, H_RESET};$/;"	e	enum:__anon379	file:
H_RESET	elements/wifi/madwifirate.cc	/^enum {H_DEBUG, H_STEPUP, H_STEPDOWN, H_THRESHOLD, H_RATES, H_RESET,$/;"	e	enum:__anon392	file:
H_RESET	elements/wifi/packetstore.cc	/^enum {H_RESET, H_LEN, H_POP, H_DIRTY};$/;"	e	enum:__anon397	file:
H_RESET	elements/wifi/probetxrate.cc	/^      H_RESET,$/;"	e	enum:__anon396	file:
H_RESET	elements/wifi/rxstats.cc	/^enum {H_STATS, H_RESET};$/;"	e	enum:__anon393	file:
H_RESET	elements/wifi/station/beaconscanner.cc	/^enum {H_DEBUG, H_SCAN, H_RESET};$/;"	e	enum:__anon386	file:
H_RESET	elements/wifi/station/beacontracker.cc	/^enum {H_DEBUG, H_SCAN, H_RESET, H_STATS,$/;"	e	enum:__anon385	file:
H_RESET	elements/wifi/wifidupefilter.cc	/^enum {H_DEBUG, H_DUPES, H_RESET};$/;"	e	enum:__anon376	file:
H_RESET	elements/wifi/wifiseq.cc	/^enum {H_DEBUG, H_SEQ, H_OFFSET, H_BYTES, H_SHIFT, H_RESET};$/;"	e	enum:__anon364	file:
H_RESET	elements/wifi/wirelessinfo.cc	/^enum {H_SSID, H_BSSID, H_CHANNEL, H_INTERVAL, H_WEP, H_RESET};$/;"	e	enum:__anon372	file:
H_RESET_COUNTS	elements/icmp/icmpsendpings.cc	/^enum { H_ACTIVE, H_LIMIT, H_INTERVAL, H_RESET_COUNTS, H_COUNT, H_SUMMARY,$/;"	e	enum:__anon400	file:
H_RESET_COUNTS	elements/userlevel/fromdump.cc	/^    H_EXTEND_INTERVAL, H_COUNT, H_RESET_COUNTS, H_RESET_TIMING$/;"	e	enum:__anon199	file:
H_RESET_COUNTS	elements/userlevel/todump.cc	/^enum { H_FILENAME = 0, H_COUNT = 1, H_RESET_COUNTS = 2 };$/;"	e	enum:__anon201	file:
H_RESET_TIMING	elements/userlevel/fromdump.cc	/^    H_EXTEND_INTERVAL, H_COUNT, H_RESET_COUNTS, H_RESET_TIMING$/;"	e	enum:__anon199	file:
H_ROUTES_FROM	elements/wifi/linktable.cc	/^      H_ROUTES_FROM,$/;"	e	enum:__anon383	file:
H_ROUTES_OLD	elements/wifi/linktable.cc	/^      H_ROUTES_OLD,$/;"	e	enum:__anon383	file:
H_ROUTES_TO	elements/wifi/linktable.cc	/^      H_ROUTES_TO,$/;"	e	enum:__anon383	file:
H_RTS	elements/wifi/setrts.cc	/^enum {H_RTS};$/;"	e	enum:__anon380	file:
H_RTT_AVG	elements/icmp/icmpsendpings.cc	/^       H_RTT_MIN, H_RTT_AVG, H_RTT_MAX, H_SRC, H_DST };$/;"	e	enum:__anon400	file:
H_RTT_MAX	elements/icmp/icmpsendpings.cc	/^       H_RTT_MIN, H_RTT_AVG, H_RTT_MAX, H_SRC, H_DST };$/;"	e	enum:__anon400	file:
H_RTT_MIN	elements/icmp/icmpsendpings.cc	/^       H_RTT_MIN, H_RTT_AVG, H_RTT_MAX, H_SRC, H_DST };$/;"	e	enum:__anon400	file:
H_SAMPLING_PROB	elements/analysis/fromcapdump.cc	/^enum { H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP };$/;"	e	enum:__anon284	file:
H_SAMPLING_PROB	elements/analysis/fromdagdump.cc	/^    H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP, H_EXTEND_INTERVAL$/;"	e	enum:__anon253	file:
H_SAMPLING_PROB	elements/analysis/fromipsumdump.cc	/^enum { H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP };$/;"	e	enum:__anon267	file:
H_SAMPLING_PROB	elements/analysis/fromnlanrdump.cc	/^    H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP, H_PACKET_FILEPOS,$/;"	e	enum:__anon302	file:
H_SAMPLING_PROB	elements/analysis/fromtcpdump.cc	/^enum { H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP };$/;"	e	enum:__anon295	file:
H_SAMPLING_PROB	elements/userlevel/fromdump.cc	/^    H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP, H_PACKET_FILEPOS,$/;"	e	enum:__anon199	file:
H_SCAN	elements/wifi/station/beaconscanner.cc	/^enum {H_DEBUG, H_SCAN, H_RESET};$/;"	e	enum:__anon386	file:
H_SCAN	elements/wifi/station/beacontracker.cc	/^enum {H_DEBUG, H_SCAN, H_RESET, H_STATS,$/;"	e	enum:__anon385	file:
H_SEND_ASSOC_REQ	elements/wifi/station/associationrequester.cc	/^      H_SEND_ASSOC_REQ,$/;"	e	enum:__anon388	file:
H_SEND_AUTH_REQ	elements/wifi/station/openauthrequester.cc	/^enum {H_DEBUG, H_ETH, H_SEND_AUTH_REQ};$/;"	e	enum:__anon387	file:
H_SEND_PROBE	elements/wifi/station/proberequester.cc	/^enum {H_DEBUG, H_ETH, H_SEND_PROBE};$/;"	e	enum:__anon389	file:
H_SEQ	elements/wifi/wifiseq.cc	/^enum {H_DEBUG, H_SEQ, H_OFFSET, H_BYTES, H_SHIFT, H_RESET};$/;"	e	enum:__anon364	file:
H_SHIFT	elements/wifi/wifiseq.cc	/^enum {H_DEBUG, H_SEQ, H_OFFSET, H_BYTES, H_SHIFT, H_RESET};$/;"	e	enum:__anon364	file:
H_SIGNAL	elements/test/upstreamnotifier.cc	/^enum { H_SIGNAL };$/;"	e	enum:__anon405	file:
H_SIZE	elements/standard/linkunqueue.cc	/^enum { H_LATENCY, H_BANDWIDTH, H_SIZE, H_RESET };$/;"	e	enum:__anon171	file:
H_SIZEHANDLER	elements/userlevel/progressbar.cc	/^       H_POSHANDLER, H_SIZEHANDLER, H_RESET };$/;"	e	enum:__anon206	file:
H_SRC	elements/icmp/icmpsendpings.cc	/^       H_RTT_MIN, H_RTT_AVG, H_RTT_MAX, H_SRC, H_DST };$/;"	e	enum:__anon400	file:
H_SSID	elements/wifi/ap/proberesponder.cc	/^enum {H_DEBUG, H_BSSID, H_SSID, H_CHANNEL, H_INTERVAL};$/;"	e	enum:__anon365	file:
H_SSID	elements/wifi/wirelessinfo.cc	/^enum {H_SSID, H_BSSID, H_CHANNEL, H_INTERVAL, H_WEP, H_RESET};$/;"	e	enum:__anon372	file:
H_STATS	elements/wifi/ethercount.cc	/^enum {H_STATS, H_RESET};$/;"	e	enum:__anon379	file:
H_STATS	elements/wifi/rxstats.cc	/^enum {H_STATS, H_RESET};$/;"	e	enum:__anon393	file:
H_STATS	elements/wifi/station/beacontracker.cc	/^enum {H_DEBUG, H_SCAN, H_RESET, H_STATS,$/;"	e	enum:__anon385	file:
H_STEPDOWN	elements/wifi/autoratefallback.cc	/^enum {H_DEBUG, H_STEPUP, H_STEPDOWN, H_THRESHOLD, H_RATES, H_RESET,$/;"	e	enum:__anon360	file:
H_STEPDOWN	elements/wifi/madwifirate.cc	/^enum {H_DEBUG, H_STEPUP, H_STEPDOWN, H_THRESHOLD, H_RATES, H_RESET,$/;"	e	enum:__anon392	file:
H_STEPUP	elements/wifi/autoratefallback.cc	/^enum {H_DEBUG, H_STEPUP, H_STEPDOWN, H_THRESHOLD, H_RATES, H_RESET,$/;"	e	enum:__anon360	file:
H_STEPUP	elements/wifi/madwifirate.cc	/^enum {H_DEBUG, H_STEPUP, H_STEPDOWN, H_THRESHOLD, H_RATES, H_RESET,$/;"	e	enum:__anon392	file:
H_STOP	elements/analysis/fromcapdump.cc	/^enum { H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP };$/;"	e	enum:__anon284	file:
H_STOP	elements/analysis/fromdagdump.cc	/^    H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP, H_EXTEND_INTERVAL$/;"	e	enum:__anon253	file:
H_STOP	elements/analysis/fromipsumdump.cc	/^enum { H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP };$/;"	e	enum:__anon267	file:
H_STOP	elements/analysis/fromnlanrdump.cc	/^    H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP, H_PACKET_FILEPOS,$/;"	e	enum:__anon302	file:
H_STOP	elements/analysis/fromtcpdump.cc	/^enum { H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP };$/;"	e	enum:__anon295	file:
H_STOP	elements/userlevel/fromdump.cc	/^    H_SAMPLING_PROB, H_ACTIVE, H_ENCAP, H_STOP, H_PACKET_FILEPOS,$/;"	e	enum:__anon199	file:
H_SUMMARY	elements/icmp/icmpsendpings.cc	/^enum { H_ACTIVE, H_LIMIT, H_INTERVAL, H_RESET_COUNTS, H_COUNT, H_SUMMARY,$/;"	e	enum:__anon400	file:
H_TASKS_PER_ITER	bsdmodule/sched.cc	/^enum { H_TASKS_PER_ITER, H_ITERS_PER_TIMERS, H_ITERS_PER_OS };$/;"	e	enum:__anon33	file:
H_TASKS_PER_ITER	linuxmodule/sched.cc	/^enum { H_TASKS_PER_ITER, H_ITERS_PER_TIMERS, H_ITERS_PER_OS };$/;"	e	enum:__anon521	file:
H_THRESHOLD	elements/wifi/autoratefallback.cc	/^enum {H_DEBUG, H_STEPUP, H_STEPDOWN, H_THRESHOLD, H_RATES, H_RESET,$/;"	e	enum:__anon360	file:
H_THRESHOLD	elements/wifi/madwifirate.cc	/^enum {H_DEBUG, H_STEPUP, H_STEPDOWN, H_THRESHOLD, H_RATES, H_RESET,$/;"	e	enum:__anon392	file:
H_THRESHOLD	elements/wifi/probetxrate.cc	/^      H_THRESHOLD,$/;"	e	enum:__anon396	file:
H_TIME	elements/wifi/fromhandler.cc	/^enum { H_ACTIVE, H_TIME};$/;"	e	enum:__anon381	file:
H_TRACK	elements/wifi/station/beacontracker.cc	/^      H_TRACK, H_BEACON_INTERVAL};$/;"	e	enum:__anon385	file:
H_TRIES	elements/wifi/settxrate.cc	/^enum {H_RATE, H_TRIES};$/;"	e	enum:__anon384	file:
H_WEP	elements/wifi/wirelessinfo.cc	/^enum {H_SSID, H_BSSID, H_CHANNEL, H_INTERVAL, H_WEP, H_RESET};$/;"	e	enum:__anon372	file:
H_W_DEST_STUB	elements/local/FlowNet/common/FlowNetGod.cc	/^enum {H_W_PFSCHEDFW, H_W_RRSCHED, H_W_SOURCEPROXY, H_W_E2E_SIGNAL_GEN, H_W_NEIGH_TABLE, H_W_DEST_STUB};$/;"	e	enum:__anon241	file:
H_W_E2E_SIGNAL_GEN	elements/local/FlowNet/common/FlowNetGod.cc	/^enum {H_W_PFSCHEDFW, H_W_RRSCHED, H_W_SOURCEPROXY, H_W_E2E_SIGNAL_GEN, H_W_NEIGH_TABLE, H_W_DEST_STUB};$/;"	e	enum:__anon241	file:
H_W_NEIGH_TABLE	elements/local/FlowNet/common/FlowNetGod.cc	/^enum {H_W_PFSCHEDFW, H_W_RRSCHED, H_W_SOURCEPROXY, H_W_E2E_SIGNAL_GEN, H_W_NEIGH_TABLE, H_W_DEST_STUB};$/;"	e	enum:__anon241	file:
H_W_PFSCHEDFW	elements/local/FlowNet/common/FlowNetGod.cc	/^enum {H_W_PFSCHEDFW, H_W_RRSCHED, H_W_SOURCEPROXY, H_W_E2E_SIGNAL_GEN, H_W_NEIGH_TABLE, H_W_DEST_STUB};$/;"	e	enum:__anon241	file:
H_W_RRSCHED	elements/local/FlowNet/common/FlowNetGod.cc	/^enum {H_W_PFSCHEDFW, H_W_RRSCHED, H_W_SOURCEPROXY, H_W_E2E_SIGNAL_GEN, H_W_NEIGH_TABLE, H_W_DEST_STUB};$/;"	e	enum:__anon241	file:
H_W_SOURCEPROXY	elements/local/FlowNet/common/FlowNetGod.cc	/^enum {H_W_PFSCHEDFW, H_W_RRSCHED, H_W_SOURCEPROXY, H_W_E2E_SIGNAL_GEN, H_W_NEIGH_TABLE, H_W_DEST_STUB};$/;"	e	enum:__anon241	file:
Handler	include/click/handler.hh	/^class Handler { public:$/;"	c
Handler	include/click/router.hh	/^Handler::Handler(const String &name)$/;"	f	class:Handler
HandlerCall	include/click/handlercall.hh	/^    HandlerCall()$/;"	f	class:HandlerCall
HandlerCall	include/click/handlercall.hh	/^    HandlerCall(const String &hdesc)$/;"	f	class:HandlerCall
HandlerCall	include/click/handlercall.hh	/^class HandlerCall { public:$/;"	c
HandlerCallArg	include/click/handlercall.hh	/^    HandlerCallArg(int f)$/;"	f	struct:HandlerCallArg
HandlerCallArg	include/click/handlercall.hh	/^struct HandlerCallArg {$/;"	s
HandlerCallback	include/click/handler.hh	/^typedef int (*HandlerCallback)(int operation, String &data, Element *element,$/;"	t
HandlerComparator	apps/ClickController/RouterTreeModel.java	/^    private static class HandlerComparator implements Comparator {$/;"	c	class:RouterTreeModel
HandlerErrorException	apps/ClickController/ClickException.java	/^	HandlerErrorException() { $/;"	m	class:ClickException.HandlerErrorException
HandlerErrorException	apps/ClickController/ClickException.java	/^	HandlerErrorException(String hid, String description) { $/;"	m	class:ClickException.HandlerErrorException
HandlerErrorException	apps/ClickController/ClickException.java	/^    static public class HandlerErrorException extends HandlerException {$/;"	c	class:ClickException
HandlerException	apps/ClickController/ClickException.java	/^	HandlerException(String handlerId, String description) {$/;"	m	class:ClickException.HandlerException
HandlerException	apps/ClickController/ClickException.java	/^    static public class HandlerException extends ClickException {$/;"	c	class:ClickException
HandlerFormatException	apps/ClickController/ClickException.java	/^	HandlerFormatException() {$/;"	m	class:ClickException.HandlerFormatException
HandlerFormatException	apps/ClickController/ClickException.java	/^	HandlerFormatException(String hid) { $/;"	m	class:ClickException.HandlerFormatException
HandlerFormatException	apps/ClickController/ClickException.java	/^    static public class HandlerFormatException extends HandlerException {$/;"	c	class:ClickException
HandlerInfo	apps/ClickController/ControlSocket.java	/^	HandlerInfo() {$/;"	m	class:ControlSocket.HandlerInfo
HandlerInfo	apps/ClickController/ControlSocket.java	/^	HandlerInfo(String el) {$/;"	m	class:ControlSocket.HandlerInfo
HandlerInfo	apps/ClickController/ControlSocket.java	/^	HandlerInfo(String el, String handler) {$/;"	m	class:ControlSocket.HandlerInfo
HandlerInfo	apps/ClickController/ControlSocket.java	/^    public static class HandlerInfo {$/;"	c	class:ControlSocket
HandlerProxy	elements/userlevel/handlerproxy.cc	/^HandlerProxy::HandlerProxy()$/;"	f	class:HandlerProxy
HandlerProxy	elements/userlevel/handlerproxy.hh	/^class HandlerProxy : public Element { public:$/;"	c
HandlerSelectAction	apps/ClickController/ClickController.java	/^    private class HandlerSelectAction implements TreeSelectionListener {$/;"	c	class:ClickController
HandlerStringInfo	linuxmodule/clickfs.cc	/^struct HandlerStringInfo {$/;"	s	file:
HandlerTask	elements/test/handlertask.cc	/^HandlerTask::HandlerTask()$/;"	f	class:HandlerTask
HandlerTask	elements/test/handlertask.hh	/^class HandlerTask : public Element { public:$/;"	c
HandlerUserObject	apps/ClickController/RouterTreeModel.java	/^	HandlerUserObject(ControlSocket.HandlerInfo hinfo, String name) {$/;"	m	class:RouterTreeModel.HandlerUserObject
HandlerUserObject	apps/ClickController/RouterTreeModel.java	/^	HandlerUserObject(String el, String name, String text) {$/;"	m	class:RouterTreeModel.HandlerUserObject
HandlerUserObject	apps/ClickController/RouterTreeModel.java	/^    static class HandlerUserObject {$/;"	c	class:RouterTreeModel
HardwareFailure	drivers/e1000-4.x/src/base_comm.h	/^    u32     HardwareFailure;     \/* Cast from IANS_BD_HW_FAILURE *\/$/;"	m	struct:_IANS_BD_PARAM_STATUS
HashAllocator	include/click/hashallocator.hh	/^class HashAllocator { public:$/;"	c
HashAllocator	lib/hashallocator.cc	/^HashAllocator::HashAllocator(size_t size)$/;"	f	class:HashAllocator
HashContainer	include/click/hashcontainer.hh	/^HashContainer<T, A>::HashContainer()$/;"	f	class:HashContainer
HashContainer	include/click/hashcontainer.hh	/^HashContainer<T, A>::HashContainer(size_type nb)$/;"	f	class:HashContainer
HashContainer	include/click/hashcontainer.hh	/^class HashContainer { public:$/;"	c
HashContainer_adapter	include/click/hashcontainer.hh	/^class HashContainer_adapter { public:$/;"	c
HashContainer_const_iterator	include/click/hashcontainer.hh	/^    HashContainer_const_iterator() {$/;"	f	class:HashContainer_const_iterator
HashContainer_const_iterator	include/click/hashcontainer.hh	/^    inline HashContainer_const_iterator(const HashContainer<T, A> *hc)$/;"	f	class:HashContainer_const_iterator
HashContainer_const_iterator	include/click/hashcontainer.hh	/^    inline HashContainer_const_iterator(const HashContainer<T, A> *hc, size_type b, T **pprev, T *element)$/;"	f	class:HashContainer_const_iterator
HashContainer_const_iterator	include/click/hashcontainer.hh	/^class HashContainer_const_iterator { public:$/;"	c
HashContainer_iterator	include/click/hashcontainer.hh	/^    HashContainer_iterator() {$/;"	f	class:HashContainer_iterator
HashContainer_iterator	include/click/hashcontainer.hh	/^    inline HashContainer_iterator(HashContainer<T, A> *hc)$/;"	f	class:HashContainer_iterator
HashContainer_iterator	include/click/hashcontainer.hh	/^    inline HashContainer_iterator(HashContainer<T, A> *hc, typename inherited::size_type b, T **pprev, T *element)$/;"	f	class:HashContainer_iterator
HashContainer_iterator	include/click/hashcontainer.hh	/^class HashContainer_iterator : public HashContainer_const_iterator<T, A> { public:$/;"	c
HashContainer_rep	include/click/hashcontainer.hh	/^class HashContainer_rep : public A {$/;"	c
HashMap	include/click/hashmap.cc	/^HashMap<K, V>::HashMap()$/;"	f	class:HashMap
HashMap	include/click/hashmap.cc	/^HashMap<K, V>::HashMap(const HashMap<K, V> &o)$/;"	f	class:HashMap
HashMap	include/click/hashmap.cc	/^HashMap<K, V>::HashMap(const V &def, HashMap_ArenaFactory *factory)$/;"	f	class:HashMap
HashMap	include/click/hashmap.cc	/^HashMap<K, void *>::HashMap()$/;"	f	class:HashMap
HashMap	include/click/hashmap.cc	/^HashMap<K, void *>::HashMap(const HashMap<K, void *> &o)$/;"	f	class:HashMap
HashMap	include/click/hashmap.cc	/^HashMap<K, void *>::HashMap(void *def, HashMap_ArenaFactory *factory)$/;"	f	class:HashMap
HashMap	include/click/hashmap.hh	/^  HashMap()				: inherited() { }$/;"	f	class:HashMap
HashMap	include/click/hashmap.hh	/^  HashMap(const HashMap<K, T *> &o) : inherited(o) { }$/;"	f	class:HashMap
HashMap	include/click/hashmap.hh	/^  explicit HashMap(T *def, HashMap_ArenaFactory *factory = 0)$/;"	f	class:HashMap
HashMap	include/click/hashmap.hh	/^class HashMap { public:$/;"	c
HashMap	include/click/hashmap.hh	/^class HashMap<K, T *> : public HashMap<K, void *> { public:$/;"	c
HashMap	include/click/hashmap.hh	/^class HashMap<K, void *> { public:$/;"	c
HashMap_Arena	include/click/bighashmap_arena.hh	/^class HashMap_Arena { public:$/;"	c
HashMap_Arena	lib/bighashmap_arena.cc	/^HashMap_Arena::HashMap_Arena(uint32_t element_size)$/;"	f	class:HashMap_Arena
HashMap_ArenaFactory	include/click/bighashmap_arena.hh	/^class HashMap_ArenaFactory { public:$/;"	c
HashMap_ArenaFactory	lib/bighashmap_arena.cc	/^HashMap_ArenaFactory::HashMap_ArenaFactory()$/;"	f	class:HashMap_ArenaFactory
HashSwitch	elements/standard/hashswitch.cc	/^HashSwitch::HashSwitch()$/;"	f	class:HashSwitch
HashSwitch	elements/standard/hashswitch.hh	/^class HashSwitch : public Element {$/;"	c
HashTable	include/click/hashtable.hh	/^    HashTable()$/;"	f	class:HashTable
HashTable	include/click/hashtable.hh	/^    HashTable(const HashTable<K, V> &x)$/;"	f	class:HashTable
HashTable	include/click/hashtable.hh	/^    HashTable(const HashTable<T> &x)$/;"	f	class:HashTable
HashTable	include/click/hashtable.hh	/^    HashTable(const mapped_type &d, size_type n)$/;"	f	class:HashTable
HashTable	include/click/hashtable.hh	/^    explicit HashTable(const mapped_type &d)$/;"	f	class:HashTable
HashTable	include/click/hashtable.hh	/^    explicit HashTable(size_type n)$/;"	f	class:HashTable
HashTable	include/click/hashtable.hh	/^class HashTable {$/;"	c
HashTable	include/click/hashtable.hh	/^class HashTable<T> {$/;"	c
HashTableTest	elements/test/hashtabletest.cc	/^HashTableTest::HashTableTest()$/;"	f	class:HashTableTest
HashTableTest	elements/test/hashtabletest.hh	/^class HashTableTest : public Element { public:$/;"	c
HashTable_const_iterator	include/click/hashtable.hh	/^    HashTable_const_iterator() {$/;"	f	class:HashTable_const_iterator
HashTable_const_iterator	include/click/hashtable.hh	/^    inline HashTable_const_iterator(const typename HashTable<Pair<K, V> >::rep_type::const_iterator &i)$/;"	f	class:HashTable_const_iterator
HashTable_const_iterator	include/click/hashtable.hh	/^    inline HashTable_const_iterator(const typename HashTable<T>::rep_type::const_iterator &i)$/;"	f	class:HashTable_const_iterator
HashTable_const_iterator	include/click/hashtable.hh	/^class HashTable_const_iterator { public:$/;"	c
HashTable_const_iterator	include/click/hashtable.hh	/^class HashTable_const_iterator<Pair<K, V> > { public:$/;"	c
HashTable_iterator	include/click/hashtable.hh	/^    HashTable_iterator() {$/;"	f	class:HashTable_iterator
HashTable_iterator	include/click/hashtable.hh	/^    inline HashTable_iterator(const typename HashTable<Pair<K, V> >::rep_type::const_iterator &i)$/;"	f	class:HashTable_iterator
HashTable_iterator	include/click/hashtable.hh	/^    inline HashTable_iterator(const typename HashTable<T>::rep_type::const_iterator &i)$/;"	f	class:HashTable_iterator
HashTable_iterator	include/click/hashtable.hh	/^class HashTable_iterator : public HashTable_const_iterator<T> { public:$/;"	c
HashTable_iterator	include/click/hashtable.hh	/^class HashTable_iterator<Pair<K, V> > : public HashTable_const_iterator<Pair<K, V> > { public:$/;"	c
Header	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_PARAM_HEADER           Header;                 \/* Common to all commands *\/$/;"	m	struct:_IANS_BD_PARAM_EXT_CAP
Header	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_PARAM_HEADER           Header;                 \/* Common to all commands *\/$/;"	m	struct:_IANS_BD_PARAM_ITAG_CAP
Header	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_PARAM_HEADER           Header;                 \/* Common to all commands *\/$/;"	m	struct:_IANS_BD_PARAM_IVLAN_CAP
Header	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_PARAM_HEADER           Header;              \/* Common to all commands *\/$/;"	m	struct:_IANS_BD_PARAM_ITAG_SET_MODE
Header	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_PARAM_HEADER           Header;          \/* Common to all commands *\/$/;"	m	struct:_IANS_BD_IOC_PARAM_STATUS
Header	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_PARAM_HEADER           Header;          \/* Common to all commands *\/$/;"	m	struct:_IANS_BD_PARAM_IDENTIFY
Header	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_PARAM_HEADER           Header;          \/* Common to all commands *\/$/;"	m	struct:_IANS_BD_PARAM_IVLAN_SET_MODE
Header	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_PARAM_HEADER           Header;         \/* Common to all commands *\/$/;"	m	struct:_IANS_BD_PARAM_IVLAN_TABLE
Header	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_PARAM_HEADER           Header; \/* Common to all commands *\/$/;"	m	struct:_IANS_BD_PARAM_EXT_SET_MODE
Header	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_PARAM_HEADER           Header;$/;"	m	struct:_IANS_BD_ANS_SET_CB
HeapTest	elements/test/heaptest.cc	/^HeapTest::HeapTest()$/;"	f	class:HeapTest
HeapTest	elements/test/heaptest.hh	/^class HeapTest : public Element { public:$/;"	c
HistQ	elements/grid/ackretrysender.hh	/^  typedef DEQueue<tx_result_t> HistQ;$/;"	t	class:ACKRetrySender
HistQ	elements/grid/ackretrysender2.hh	/^  typedef DEQueue<tx_result_t> HistQ;$/;"	t	class:ACKRetrySender2
HookPair	elements/grid/dsdvroutetable.hh	/^    HookPair() { }$/;"	f	struct:DSDVRouteTable::HookPair
HookPair	elements/grid/dsdvroutetable.hh	/^    HookPair(DSDVRouteTable *o, unsigned int _ip) : obj(o), ip(_ip) { }$/;"	f	struct:DSDVRouteTable::HookPair
HookPair	elements/grid/dsdvroutetable.hh	/^  struct HookPair {$/;"	s	class:DSDVRouteTable
HopcountMetric	elements/grid/hopcountmetric.cc	/^HopcountMetric::HopcountMetric()$/;"	f	class:HopcountMetric
HopcountMetric	elements/grid/hopcountmetric.hh	/^class HopcountMetric : public GridGenericMetric {$/;"	c
HostEtherFilter	elements/ethernet/hostetherfilter.cc	/^HostEtherFilter::HostEtherFilter()$/;"	f	class:HostEtherFilter
HostEtherFilter	elements/ethernet/hostetherfilter.hh	/^class HostEtherFilter : public Element { public:$/;"	c
HostInfo	elements/wifi/linktable.hh	/^    HostInfo(IPAddress p = IPAddress()) {$/;"	f	class:LinkTable::HostInfo
HostInfo	elements/wifi/linktable.hh	/^    HostInfo(const HostInfo &p) :$/;"	f	class:LinkTable::HostInfo
HostInfo	elements/wifi/linktable.hh	/^  class HostInfo {$/;"	c	class:LinkTable
HostPair	elements/analysis/aggregateipaddrpair.hh	/^	HostPair() : a(0), b(0) { }$/;"	f	struct:AggregateIPAddrPair::HostPair
HostPair	elements/analysis/aggregateipaddrpair.hh	/^	HostPair(uint32_t aa, uint32_t bb) {$/;"	f	struct:AggregateIPAddrPair::HostPair
HostPair	elements/analysis/aggregateipaddrpair.hh	/^    struct HostPair {$/;"	s	class:AggregateIPAddrPair
HostPair	elements/analysis/aggregateipflows.hh	/^	HostPair() : a(0), b(0) { }$/;"	f	struct:AggregateIPFlows::HostPair
HostPair	elements/analysis/aggregateipflows.hh	/^	HostPair(uint32_t aa, uint32_t bb) {$/;"	f	struct:AggregateIPFlows::HostPair
HostPair	elements/analysis/aggregateipflows.hh	/^    struct HostPair {$/;"	s	class:AggregateIPFlows
HostPairInfo	elements/analysis/aggregateipflows.hh	/^	HostPairInfo() : _flows(0), _fragment_head(0), _fragment_tail(0) { }$/;"	f	struct:AggregateIPFlows::HostPairInfo
HostPairInfo	elements/analysis/aggregateipflows.hh	/^    struct HostPairInfo {$/;"	s	class:AggregateIPFlows
HotPlug	drivers/e1000-4.x/src/base_comm.h	/^    u32     HotPlug;    \/* Cast from IANS_BD_HOT_PLUG_STATUS  *\/$/;"	m	struct:_IANS_BD_PARAM_STATUS
Hub	elements/standard/hub.cc	/^Hub::Hub()$/;"	f	class:Hub
Hub	elements/standard/hub.hh	/^class Hub : public Element { public:$/;"	c
I	lib/md5.cc	286;"	d	file:
IANS	drivers/e1000-4.x/src/Makefile	/^  IANS := n$/;"	m
IANS	drivers/e1000-4.x/src/Makefile	/^IANS := n$/;"	m
IANS_ATTR_COMMA	drivers/e1000-4.x/src/base_comm.h	/^    IANS_ATTR_COMMA$/;"	e	enum:_iANS_Attribute_ID
IANS_ATTR_DUMMY	drivers/e1000-4.x/src/base_comm.h	/^    IANS_ATTR_DUMMY,       \/* Non-initiating side should ignore this attribute *\/$/;"	e	enum:_iANS_Attribute_ID
IANS_ATTR_HEADER	drivers/e1000-4.x/src/base_comm.h	/^} IANS_ATTR_HEADER, *PIANS_ATTR_HEADER;$/;"	t	typeref:struct:_IANS_ATTR_HEADER
IANS_ATTR_LAST_ATTR	drivers/e1000-4.x/src/base_comm.h	/^    IANS_ATTR_LAST_ATTR=0, \/* Marks the last attribute in a list *\/$/;"	e	enum:_iANS_Attribute_ID
IANS_ATTR_TAGGING_FIRST	drivers/e1000-4.x/src/base_comm.h	/^    IANS_ATTR_TAGGING_FIRST = 0x200, \/* skip over reserved area *\/$/;"	e	enum:_iANS_Attribute_ID
IANS_ATTR_TAGGING_UNTAGGED	drivers/e1000-4.x/src/base_comm.h	/^    IANS_ATTR_TAGGING_UNTAGGED,     \/* This determines that frame is untagged *\/$/;"	e	enum:_iANS_Attribute_ID
IANS_ATTR_VLAN_FIRST	drivers/e1000-4.x/src/base_comm.h	/^    IANS_ATTR_VLAN_FIRST = 0x100, \/* skip over reserved area *\/$/;"	e	enum:_iANS_Attribute_ID
IANS_ATTR_VLAN_ID	drivers/e1000-4.x/src/base_comm.h	/^    IANS_ATTR_VLAN_ID,     \/* This attribute contains the VLan ID *\/$/;"	e	enum:_iANS_Attribute_ID
IANS_BASE_NOTIFY	drivers/e1000-4.x/src/base_comm.h	79;"	d
IANS_BASE_OPCODE	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BASE_OPCODE, *PIANS_BASE_OPCODE;$/;"	t	typeref:enum:_IANS_BASE_OPCODE
IANS_BASE_SIOC	drivers/e1000-4.x/src/base_comm.h	77;"	d
IANS_BD_ANS_SET_CB	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_ANS_SET_CB, *PIANS_BD_ANS_SET_CB;$/;"	t	typeref:struct:_IANS_BD_ANS_SET_CB
IANS_BD_COMM_VERSION_MAJOR	drivers/e1000-4.x/src/base_comm.h	94;"	d
IANS_BD_COMM_VERSION_MINOR	drivers/e1000-4.x/src/base_comm.h	95;"	d
IANS_BD_DOES_NOT_SUPPORT	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_DOES_NOT_SUPPORT = 0,$/;"	e	enum:_IANS_BD_SUPPORT
IANS_BD_DUPLEX_STATUS	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_DUPLEX_STATUS, *PIANS_BD_DUPLEX_STATUS;$/;"	t	typeref:enum:_IANS_BD_DUPLEX_STATUS
IANS_BD_FLAG1	drivers/e1000-4.x/src/base_comm.h	389;"	d
IANS_BD_FLAG2	drivers/e1000-4.x/src/base_comm.h	390;"	d
IANS_BD_FLAG3	drivers/e1000-4.x/src/base_comm.h	391;"	d
IANS_BD_FLAG4	drivers/e1000-4.x/src/base_comm.h	392;"	d
IANS_BD_FLAG5	drivers/e1000-4.x/src/base_comm.h	393;"	d
IANS_BD_FLAG6	drivers/e1000-4.x/src/base_comm.h	394;"	d
IANS_BD_FLAG7	drivers/e1000-4.x/src/base_comm.h	395;"	d
IANS_BD_FLAG8	drivers/e1000-4.x/src/base_comm.h	396;"	d
IANS_BD_HOT_PLUG_STATUS	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_HOT_PLUG_STATUS, *PIANS_BD_HOT_PLUG_STATUS;$/;"	t	typeref:enum:_IANS_BD_HOT_PLUG_STATUS
IANS_BD_HW_STATUS	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_HW_STATUS, *PIANS_BD_HW_STATUS;$/;"	t	typeref:enum:_IANS_BD_HW_STATUS
IANS_BD_IOC_PARAM_STATUS	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_IOC_PARAM_STATUS, *PIANS_BD_IOC_PARAM_STATUS;$/;"	t	typeref:struct:_IANS_BD_IOC_PARAM_STATUS
IANS_BD_LINK_SPEED	drivers/e1000-4.x/src/base_comm.h	/^}IANS_BD_LINK_SPEED, *PIANS_BD_LINK_SPEED;$/;"	t	typeref:enum:_IANS_BD_LINK_SPEED
IANS_BD_LINK_STATUS	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_LINK_STATUS, *PIANS_BD_LINK_STATUS;$/;"	t	typeref:enum:_IANS_BD_LINK_STATUS
IANS_BD_PARAM_EXT_CAP	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_EXT_CAP, *PIANS_BD_PARAM_EXT_CAP;$/;"	t	typeref:struct:_IANS_BD_PARAM_EXT_CAP
IANS_BD_PARAM_EXT_SET_MODE	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_EXT_SET_MODE, *PIANS_BD_PARAM_EXT_SET_MODE;$/;"	t	typeref:struct:_IANS_BD_PARAM_EXT_SET_MODE
IANS_BD_PARAM_HEADER	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_HEADER, *PIANS_BD_PARAM_HEADER;$/;"	t	typeref:struct:_IANS_BD_PARAM_HEADER
IANS_BD_PARAM_IDENTIFY	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_IDENTIFY, *PIANS_BD_PARAM_IDENTIFY;$/;"	t	typeref:struct:_IANS_BD_PARAM_IDENTIFY
IANS_BD_PARAM_ITAG_CAP	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_ITAG_CAP, *PIANS_BD_PARAM_ITAG_CAP;$/;"	t	typeref:struct:_IANS_BD_PARAM_ITAG_CAP
IANS_BD_PARAM_ITAG_SET_MODE	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_ITAG_SET_MODE, *PIANS_BD_PARAM_ITAG_SET_MODE;$/;"	t	typeref:struct:_IANS_BD_PARAM_ITAG_SET_MODE
IANS_BD_PARAM_IVLAN_CAP	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_IVLAN_CAP, *PIANS_BD_PARAM_IVLAN_CAP;$/;"	t	typeref:struct:_IANS_BD_PARAM_IVLAN_CAP
IANS_BD_PARAM_IVLAN_SET_MODE	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_IVLAN_SET_MODE, *PIANS_BD_PARAM_IVLAN_SET_MODE;$/;"	t	typeref:struct:_IANS_BD_PARAM_IVLAN_SET_MODE
IANS_BD_PARAM_IVLAN_TABLE	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_IVLAN_TABLE, *PIANS_BD_PARAM_IVLAN_TABLE;$/;"	t	typeref:struct:_IANS_BD_PARAM_IVLAN_TABLE
IANS_BD_PARAM_STATUS	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_STATUS, *PIANS_BD_PARAM_STATUS;$/;"	t	typeref:struct:_IANS_BD_PARAM_STATUS
IANS_BD_REQUEST_SUPPORT	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_REQUEST_SUPPORT, *PIANS_BD_REQUEST_SUPPORT;$/;"	t	typeref:enum:_IANS_BD_REQUEST_SUPPORT
IANS_BD_RESET_STAGE	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_RESET_STAGE, *PIANS_BD_RESET_STAGE;$/;"	t	typeref:enum:_IANS_BD_RESET_STAGE
IANS_BD_ROUTING	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_ROUTING, *PIANS_BD_ROUTING;$/;"	t	typeref:enum:_IANS_BD_ROUTING
IANS_BD_SUPPORT	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_SUPPORT, *PIANS_BD_SUPPORT;$/;"	t	typeref:enum:_IANS_BD_SUPPORT
IANS_BD_SUPPORTS	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_SUPPORTS$/;"	e	enum:_IANS_BD_SUPPORT
IANS_BD_SUSPENDED_STAGE	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_SUSPENDED_STAGE, *PIANS_BD_SUSPENDED_STAGE;$/;"	t	typeref:enum:_IANS_BD_SUSPENDED_STAGE
IANS_BD_TAGGING_802_3AC	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_TAGGING_802_3AC,$/;"	e	enum:_IANS_BD_TAGGING_MODE
IANS_BD_TAGGING_MODE	drivers/e1000-4.x/src/base_comm.h	/^}IANS_BD_TAGGING_MODE , *PIANS_BD_TAGGING_MODE ;$/;"	t	typeref:enum:_IANS_BD_TAGGING_MODE
IANS_BD_TAGGING_NONE	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_TAGGING_NONE =0,$/;"	e	enum:_IANS_BD_TAGGING_MODE
IANS_BD_TAGGING_UNDEFINED	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_TAGGING_UNDEFINED$/;"	e	enum:_IANS_BD_TAGGING_MODE
IANS_CFILES	drivers/e1000-4.x/src/Makefile	/^IANS_CFILES = ans.c ans_hw.c ans_os.c ans_driver.c$/;"	m
IANS_CFLAGS	drivers/e1000-4.x/src/Makefile	/^IANS_CFLAGS = -DIANS -DIANS_BASE_ADAPTER_TEAMING \\$/;"	m
IANS_COMMUNICATION_DOWN	drivers/e1000-4.x/src/ans.h	63;"	d
IANS_COMMUNICATION_UP	drivers/e1000-4.x/src/ans.h	64;"	d
IANS_COMM_VERSION_MAJOR	drivers/e1000-4.x/src/base_comm.h	90;"	d
IANS_COMM_VERSION_MINOR	drivers/e1000-4.x/src/base_comm.h	91;"	d
IANS_DONT_SUPPORT	drivers/e1000-4.x/src/base_comm.h	/^    IANS_DONT_SUPPORT = 0,$/;"	e	enum:_IANS_BD_REQUEST_SUPPORT
IANS_FRAME_TYPE	drivers/e1000-4.x/src/base_comm.h	675;"	d
IANS_HFILES	drivers/e1000-4.x/src/Makefile	/^IANS_HFILES = base_comm.h ans_interface.h ans.h ans_hw.h ans_os.h ans_driver.h$/;"	m
IANS_INDICATION	drivers/e1000-4.x/src/base_comm.h	/^} IANS_INDICATION, *PIANS_INDICATION;$/;"	t	typeref:enum:_IANS_INDICATION
IANS_IND_COMMA	drivers/e1000-4.x/src/base_comm.h	/^    IANS_IND_COMMA  \/* Dummy to satisfy last ifdef'ed commma *\/$/;"	e	enum:_IANS_INDICATION
IANS_IND_EXT_HWMODIFY	drivers/e1000-4.x/src/base_comm.h	/^    IANS_IND_EXT_HWMODIFY,                          $/;"	e	enum:_IANS_INDICATION
IANS_IND_EXT_STATUS_CHANGE	drivers/e1000-4.x/src/base_comm.h	/^    IANS_IND_EXT_STATUS_CHANGE,     \/* Report a new status *\/$/;"	e	enum:_IANS_INDICATION
IANS_IND_XMIT_QUEUE_FULL	drivers/e1000-4.x/src/base_comm.h	/^    IANS_IND_XMIT_QUEUE_FULL, \/\/ tell ANS to stop transmit through this member$/;"	e	enum:_IANS_INDICATION
IANS_IND_XMIT_QUEUE_READY	drivers/e1000-4.x/src/base_comm.h	/^    IANS_IND_XMIT_QUEUE_READY, \/\/ tell ANS to start transmit through this member$/;"	e	enum:_IANS_INDICATION
IANS_OP_ANS_SET_CB	drivers/e1000-4.x/src/base_comm.h	/^    IANS_OP_ANS_SET_CB, \/* pass ans function's pointers to base *\/$/;"	e	enum:_IANS_BASE_OPCODE
IANS_OP_BD_DISCONNECT	drivers/e1000-4.x/src/base_comm.h	/^    IANS_OP_BD_DISCONNECT,        \/* Tell the BD that iANS is about to unload *\/$/;"	e	enum:_IANS_BASE_OPCODE
IANS_OP_BD_IDENTIFY	drivers/e1000-4.x/src/base_comm.h	/^    IANS_OP_BD_IDENTIFY,          \/* Identify BD to make sure it $/;"	e	enum:_IANS_BASE_OPCODE
IANS_OP_COMMA	drivers/e1000-4.x/src/base_comm.h	/^    IANS_OP_COMMA       \/* Dummy to satisfy last ifdef'ed commma *\/$/;"	e	enum:_IANS_BASE_OPCODE
IANS_OP_EXT_GET_CAPABILITY	drivers/e1000-4.x/src/base_comm.h	/^    IANS_OP_EXT_GET_CAPABILITY,   \/* Get extended capabilities *\/$/;"	e	enum:_IANS_BASE_OPCODE
IANS_OP_EXT_GET_STATUS	drivers/e1000-4.x/src/base_comm.h	/^    IANS_OP_EXT_GET_STATUS,               \/* Get status from base driver *\/$/;"	e	enum:_IANS_BASE_OPCODE
IANS_OP_EXT_SET_MODE	drivers/e1000-4.x/src/base_comm.h	/^    IANS_OP_EXT_SET_MODE,         \/* Set extended capabilities *\/$/;"	e	enum:_IANS_BASE_OPCODE
IANS_OP_IAT_FIRST	drivers/e1000-4.x/src/base_comm.h	/^    IANS_OP_IAT_FIRST=0x0100,     \/* Skip over reserved area *\/$/;"	e	enum:_IANS_BASE_OPCODE
IANS_OP_ITAG_FIRST	drivers/e1000-4.x/src/base_comm.h	/^    IANS_OP_ITAG_FIRST=0x0200,          \/* Skip over reserved area *\/$/;"	e	enum:_IANS_BASE_OPCODE
IANS_OP_ITAG_GET_CAPABILITY	drivers/e1000-4.x/src/base_comm.h	/^    IANS_OP_ITAG_GET_CAPABILITY,        \/* Get tagging capabilities *\/$/;"	e	enum:_IANS_BASE_OPCODE
IANS_OP_ITAG_SET_MODE	drivers/e1000-4.x/src/base_comm.h	/^    IANS_OP_ITAG_SET_MODE,                      \/* None\/ISL\/802.3ac *\/$/;"	e	enum:_IANS_BASE_OPCODE
IANS_OP_IVLAN_ID_FIRST	drivers/e1000-4.x/src/base_comm.h	/^    IANS_OP_IVLAN_ID_FIRST=0x0300,       \/* Skip over reserved area *\/$/;"	e	enum:_IANS_BASE_OPCODE
IANS_OP_IVLAN_ID_GET_CAPABILITY	drivers/e1000-4.x/src/base_comm.h	/^    IANS_OP_IVLAN_ID_GET_CAPABILITY, \/* Get VLan ID capabilities *\/$/;"	e	enum:_IANS_BASE_OPCODE
IANS_OP_IVLAN_ID_SET_MODE	drivers/e1000-4.x/src/base_comm.h	/^    IANS_OP_IVLAN_ID_SET_MODE,           \/* Set Vlan ID mode *\/$/;"	e	enum:_IANS_BASE_OPCODE
IANS_OP_IVLAN_ID_SET_TABLE	drivers/e1000-4.x/src/base_comm.h	/^    IANS_OP_IVLAN_ID_SET_TABLE,          \/* ID list *\/$/;"	e	enum:_IANS_BASE_OPCODE
IANS_REQUEST_SUPPORT	drivers/e1000-4.x/src/base_comm.h	/^    IANS_REQUEST_SUPPORT$/;"	e	enum:_IANS_BD_REQUEST_SUPPORT
IANS_ROUTING_NOT_SUPPORTED	drivers/e1000-4.x/src/base_comm.h	/^    IANS_ROUTING_NOT_SUPPORTED  = 0x00,$/;"	e	enum:_IANS_BD_ROUTING
IANS_ROUTING_OFF	drivers/e1000-4.x/src/ans.h	71;"	d
IANS_ROUTING_ON	drivers/e1000-4.x/src/ans.h	72;"	d
IANS_ROUTING_RX_PROTOCOL	drivers/e1000-4.x/src/base_comm.h	/^    IANS_ROUTING_RX_PROTOCOL    = 0x01,$/;"	e	enum:_IANS_BD_ROUTING
IANS_SIGNATURE_LENGTH	drivers/e1000-4.x/src/base_comm.h	97;"	d
IANS_STATUS_DUPLEX_FULL	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_DUPLEX_FULL$/;"	e	enum:_IANS_BD_DUPLEX_STATUS
IANS_STATUS_DUPLEX_HALF	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_DUPLEX_HALF,$/;"	e	enum:_IANS_BD_DUPLEX_STATUS
IANS_STATUS_DUPLEX_NOT_SUPPORTED	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_DUPLEX_NOT_SUPPORTED = 0,$/;"	e	enum:_IANS_BD_DUPLEX_STATUS
IANS_STATUS_DURING_RESET	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_DURING_RESET$/;"	e	enum:_IANS_BD_RESET_STAGE
IANS_STATUS_HARDWARE_FAILURE	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_HARDWARE_FAILURE$/;"	e	enum:_IANS_BD_HW_STATUS
IANS_STATUS_HARDWARE_NOT_SUPPORTED	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_HARDWARE_NOT_SUPPORTED = 0,$/;"	e	enum:_IANS_BD_HW_STATUS
IANS_STATUS_HARDWARE_OK	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_HARDWARE_OK,$/;"	e	enum:_IANS_BD_HW_STATUS
IANS_STATUS_HOT_PLUG_NOT_DONE	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_HOT_PLUG_NOT_DONE,$/;"	e	enum:_IANS_BD_HOT_PLUG_STATUS
IANS_STATUS_HOT_PLUG_NOT_SUPPORTED	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_HOT_PLUG_NOT_SUPPORTED = 0,$/;"	e	enum:_IANS_BD_HOT_PLUG_STATUS
IANS_STATUS_HOT_PLUG_WAS_DONE	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_HOT_PLUG_WAS_DONE$/;"	e	enum:_IANS_BD_HOT_PLUG_STATUS
IANS_STATUS_LINK_FAIL	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_LINK_FAIL$/;"	e	enum:_IANS_BD_LINK_STATUS
IANS_STATUS_LINK_NOT_SUPPORTED	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_LINK_NOT_SUPPORTED = 0,$/;"	e	enum:_IANS_BD_LINK_STATUS
IANS_STATUS_LINK_OK	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_LINK_OK,$/;"	e	enum:_IANS_BD_LINK_STATUS
IANS_STATUS_LINK_SPEED_1000MBPS	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_LINK_SPEED_1000MBPS = 0x8$/;"	e	enum:_IANS_BD_LINK_SPEED
IANS_STATUS_LINK_SPEED_100MBPS	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_LINK_SPEED_100MBPS = 0x4,$/;"	e	enum:_IANS_BD_LINK_SPEED
IANS_STATUS_LINK_SPEED_10MBPS	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_LINK_SPEED_10MBPS = 0x2,$/;"	e	enum:_IANS_BD_LINK_SPEED
IANS_STATUS_LINK_SPEED_1MBPS	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_LINK_SPEED_1MBPS = 0x1,$/;"	e	enum:_IANS_BD_LINK_SPEED
IANS_STATUS_LINK_SPEED_NOT_SUPPORTED	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_LINK_SPEED_NOT_SUPPORTED = 0,$/;"	e	enum:_IANS_BD_LINK_SPEED
IANS_STATUS_NOT_DURING_RESET	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_NOT_DURING_RESET,$/;"	e	enum:_IANS_BD_RESET_STAGE
IANS_STATUS_NOT_SUSPENDED	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_NOT_SUSPENDED,$/;"	e	enum:_IANS_BD_SUSPENDED_STAGE
IANS_STATUS_REPORTING_OFF	drivers/e1000-4.x/src/ans.h	65;"	d
IANS_STATUS_REPORTING_ON	drivers/e1000-4.x/src/ans.h	66;"	d
IANS_STATUS_RESET_NOT_SUPPORTED	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_RESET_NOT_SUPPORTED =0,$/;"	e	enum:_IANS_BD_RESET_STAGE
IANS_STATUS_SUSPENDED	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_SUSPENDED$/;"	e	enum:_IANS_BD_SUSPENDED_STAGE
IANS_STATUS_SUSPENDED_NOT_SUPPORTED	drivers/e1000-4.x/src/base_comm.h	/^    IANS_STATUS_SUSPENDED_NOT_SUPPORTED =0,$/;"	e	enum:_IANS_BD_SUSPENDED_STAGE
IANS_STATUS_VERSION	drivers/e1000-4.x/src/base_comm.h	295;"	d
IANS_VLAN_FILTERING_OFF	drivers/e1000-4.x/src/ans.h	67;"	d
IANS_VLAN_FILTERING_ON	drivers/e1000-4.x/src/ans.h	68;"	d
IANS_VLAN_MODE_OFF	drivers/e1000-4.x/src/ans.h	69;"	d
IANS_VLAN_MODE_ON	drivers/e1000-4.x/src/ans.h	70;"	d
ICH_CYCLE_ERASE	drivers/e1000-7.x/src/e1000_hw.h	3293;"	d
ICH_CYCLE_READ	drivers/e1000-7.x/src/e1000_hw.h	3290;"	d
ICH_CYCLE_RESERVED	drivers/e1000-7.x/src/e1000_hw.h	3291;"	d
ICH_CYCLE_WRITE	drivers/e1000-7.x/src/e1000_hw.h	3292;"	d
ICH_FLASH_COMMAND_TIMEOUT	drivers/e1000-7.x/src/e1000_hw.h	3283;"	d
ICH_FLASH_CYCLE_REPEAT_COUNT	drivers/e1000-7.x/src/e1000_hw.h	3285;"	d
ICH_FLASH_ERASE_TIMEOUT	drivers/e1000-7.x/src/e1000_hw.h	3284;"	d
ICH_FLASH_FADDR	drivers/e1000-7.x/src/e1000_hw.h	3298;"	d
ICH_FLASH_FDATA0	drivers/e1000-7.x/src/e1000_hw.h	3299;"	d
ICH_FLASH_FPR0	drivers/e1000-7.x/src/e1000_hw.h	3305;"	d
ICH_FLASH_FPR1	drivers/e1000-7.x/src/e1000_hw.h	3306;"	d
ICH_FLASH_FRACC	drivers/e1000-7.x/src/e1000_hw.h	3300;"	d
ICH_FLASH_FREG0	drivers/e1000-7.x/src/e1000_hw.h	3301;"	d
ICH_FLASH_FREG1	drivers/e1000-7.x/src/e1000_hw.h	3302;"	d
ICH_FLASH_FREG2	drivers/e1000-7.x/src/e1000_hw.h	3303;"	d
ICH_FLASH_FREG3	drivers/e1000-7.x/src/e1000_hw.h	3304;"	d
ICH_FLASH_GFPREG	drivers/e1000-7.x/src/e1000_hw.h	3295;"	d
ICH_FLASH_HSFCTL	drivers/e1000-7.x/src/e1000_hw.h	3297;"	d
ICH_FLASH_HSFSTS	drivers/e1000-7.x/src/e1000_hw.h	3296;"	d
ICH_FLASH_LINEAR_ADDR_MASK	drivers/e1000-7.x/src/e1000_hw.h	3316;"	d
ICH_FLASH_OPMENU	drivers/e1000-7.x/src/e1000_hw.h	3311;"	d
ICH_FLASH_OPTYPE	drivers/e1000-7.x/src/e1000_hw.h	3310;"	d
ICH_FLASH_PREOP	drivers/e1000-7.x/src/e1000_hw.h	3309;"	d
ICH_FLASH_REG_MAPSIZE	drivers/e1000-7.x/src/e1000_hw.h	3313;"	d
ICH_FLASH_SECTOR_SIZE	drivers/e1000-7.x/src/e1000_hw.h	3314;"	d
ICH_FLASH_SEG_SIZE_256	drivers/e1000-7.x/src/e1000_hw.h	3286;"	d
ICH_FLASH_SEG_SIZE_4K	drivers/e1000-7.x/src/e1000_hw.h	3287;"	d
ICH_FLASH_SEG_SIZE_64K	drivers/e1000-7.x/src/e1000_hw.h	3288;"	d
ICH_FLASH_SSFCTL	drivers/e1000-7.x/src/e1000_hw.h	3308;"	d
ICH_FLASH_SSFSTS	drivers/e1000-7.x/src/e1000_hw.h	3307;"	d
ICH_GFPREG_BASE_MASK	drivers/e1000-7.x/src/e1000_hw.h	3315;"	d
ICMP6Error	elements/ip6/icmp6error.cc	/^ICMP6Error::ICMP6Error()$/;"	f	class:ICMP6Error
ICMP6Error	elements/ip6/icmp6error.hh	/^class ICMP6Error : public Element {$/;"	c
ICMP6_ECHO	include/clicknet/icmp6.h	17;"	d
ICMP6_ECHOREPLY	include/clicknet/icmp6.h	18;"	d
ICMP6_MEMBERSHIPQUERY	include/clicknet/icmp6.h	19;"	d
ICMP6_MEMBERSHIPREDUCTION	include/clicknet/icmp6.h	21;"	d
ICMP6_MEMBERSHIPREPORT	include/clicknet/icmp6.h	20;"	d
ICMP6_PARAMPROB	include/clicknet/icmp6.h	15;"	d
ICMP6_PARAMPROB_HEADER	include/clicknet/icmp6.h	38;"	d
ICMP6_PARAMPROB_NEXTHEADER	include/clicknet/icmp6.h	39;"	d
ICMP6_PARAMPROB_OPTION	include/clicknet/icmp6.h	40;"	d
ICMP6_PKTTOOBIG	include/clicknet/icmp6.h	13;"	d
ICMP6_REDIRECT	include/clicknet/icmp6.h	23;"	d
ICMP6_TIMXCEED	include/clicknet/icmp6.h	14;"	d
ICMP6_TIMXCEED_REASSEMBLY	include/clicknet/icmp6.h	35;"	d
ICMP6_TIMXCEED_TRANSIT	include/clicknet/icmp6.h	34;"	d
ICMP6_UNREACH	include/clicknet/icmp6.h	12;"	d
ICMP6_UNREACH_ADDR	include/clicknet/icmp6.h	30;"	d
ICMP6_UNREACH_ADMIN	include/clicknet/icmp6.h	28;"	d
ICMP6_UNREACH_NOPORT	include/clicknet/icmp6.h	31;"	d
ICMP6_UNREACH_NOROUTE	include/clicknet/icmp6.h	27;"	d
ICMP6_UNREACH_NOTNEIGHBOR	include/clicknet/icmp6.h	29;"	d
ICMPError	elements/icmp/icmperror.cc	/^ICMPError::ICMPError()$/;"	f	class:ICMPError
ICMPError	elements/icmp/icmperror.hh	/^class ICMPError : public Element { public:$/;"	c
ICMPErrorAlignClass	tools/click-align/alignclass.cc	/^ICMPErrorAlignClass::ICMPErrorAlignClass(const String &name)$/;"	f	class:ICMPErrorAlignClass
ICMPErrorAlignClass	tools/click-align/alignclass.hh	/^class ICMPErrorAlignClass : public AlignClass { public:$/;"	c
ICMPIPEncap	elements/icmp/icmpipencap.cc	/^ICMPIPEncap::ICMPIPEncap()$/;"	f	class:ICMPIPEncap
ICMPIPEncap	elements/icmp/icmpipencap.hh	/^class ICMPIPEncap : public Element { public:$/;"	c
ICMPPingEncap	elements/icmp/icmppingencap.cc	/^ICMPPingEncap::ICMPPingEncap()$/;"	f	class:ICMPPingEncap
ICMPPingEncap	elements/icmp/icmppingencap.hh	/^class ICMPPingEncap : public Element { public:$/;"	c
ICMPPingFlow	elements/icmp/icmppingrewriter.hh	/^	ICMPPingFlow(const IPFlowID &flowid, int output,$/;"	f	class:ICMPPingRewriter::ICMPPingFlow
ICMPPingFlow	elements/icmp/icmppingrewriter.hh	/^    class ICMPPingFlow : public IPRewriterFlow { public:$/;"	c	class:ICMPPingRewriter
ICMPPingResponder	elements/icmp/icmppingresponder.cc	/^ICMPPingResponder::ICMPPingResponder()$/;"	f	class:ICMPPingResponder
ICMPPingResponder	elements/icmp/icmppingresponder.hh	/^class ICMPPingResponder : public Element { public:$/;"	c
ICMPPingRewriter	elements/icmp/icmppingrewriter.cc	/^ICMPPingRewriter::ICMPPingRewriter()$/;"	f	class:ICMPPingRewriter
ICMPPingRewriter	elements/icmp/icmppingrewriter.hh	/^class ICMPPingRewriter : public IPRewriterBase { public:$/;"	c
ICMPPingSource	elements/icmp/icmpsendpings.cc	/^ICMPPingSource::ICMPPingSource()$/;"	f	class:ICMPPingSource
ICMPPingSource	elements/icmp/icmpsendpings.hh	/^class ICMPPingSource : public Element { public:$/;"	c
ICMPRewriter	elements/icmp/icmprewriter.cc	/^ICMPRewriter::ICMPRewriter()$/;"	f	class:ICMPRewriter
ICMPRewriter	elements/icmp/icmprewriter.hh	/^class ICMPRewriter : public Element { public:$/;"	c
ICMP_ECHO	include/clicknet/icmp.h	107;"	d
ICMP_ECHOREPLY	include/clicknet/icmp.h	83;"	d
ICMP_HEADER_LEN	elements/local/OpenFlow/lib/packets.hh	223;"	d
ICMP_IREQ	include/clicknet/icmp.h	119;"	d
ICMP_IREQREPLY	include/clicknet/icmp.h	120;"	d
ICMP_MASKREQ	include/clicknet/icmp.h	121;"	d
ICMP_MASKREQREPLY	include/clicknet/icmp.h	122;"	d
ICMP_PARAMPROB	include/clicknet/icmp.h	113;"	d
ICMP_PARAMPROB_ANNO	include/click/packet_anno.hh	28;"	d
ICMP_PARAMPROB_ANNO_OFFSET	include/click/packet_anno.hh	26;"	d
ICMP_PARAMPROB_ANNO_SIZE	include/click/packet_anno.hh	27;"	d
ICMP_PARAMPROB_ERRATPTR	include/clicknet/icmp.h	114;"	d
ICMP_PARAMPROB_LENGTH	include/clicknet/icmp.h	116;"	d
ICMP_PARAMPROB_OPTABSENT	include/clicknet/icmp.h	115;"	d
ICMP_REDIRECT	include/clicknet/icmp.h	102;"	d
ICMP_REDIRECT_HOST	include/clicknet/icmp.h	104;"	d
ICMP_REDIRECT_NET	include/clicknet/icmp.h	103;"	d
ICMP_REDIRECT_TOSHOST	include/clicknet/icmp.h	106;"	d
ICMP_REDIRECT_TOSNET	include/clicknet/icmp.h	105;"	d
ICMP_ROUTERADVERT	include/clicknet/icmp.h	108;"	d
ICMP_ROUTERSOLICIT	include/clicknet/icmp.h	109;"	d
ICMP_SOURCEQUENCH	include/clicknet/icmp.h	101;"	d
ICMP_TIMXCEED	include/clicknet/icmp.h	110;"	d
ICMP_TIMXCEED_REASSEMBLY	include/clicknet/icmp.h	112;"	d
ICMP_TIMXCEED_TRANSIT	include/clicknet/icmp.h	111;"	d
ICMP_TSTAMP	include/clicknet/icmp.h	117;"	d
ICMP_TSTAMPREPLY	include/clicknet/icmp.h	118;"	d
ICMP_TYPE_HAVE_FLOW	elements/analysis/ipsumdump_icmp.cc	/^    ICMP_TYPE_HAVE_FLOW = ((1U << ICMP_ECHO) | (1U << ICMP_ECHOREPLY)$/;"	e	enum:IPSummaryDump::__anon290	file:
ICMP_UNREACH	include/clicknet/icmp.h	84;"	d
ICMP_UNREACH_FILTER_PROHIB	include/clicknet/icmp.h	98;"	d
ICMP_UNREACH_HOST	include/clicknet/icmp.h	86;"	d
ICMP_UNREACH_HOST_PRECEDENCE	include/clicknet/icmp.h	99;"	d
ICMP_UNREACH_HOST_PROHIB	include/clicknet/icmp.h	95;"	d
ICMP_UNREACH_HOST_UNKNOWN	include/clicknet/icmp.h	92;"	d
ICMP_UNREACH_ISOLATED	include/clicknet/icmp.h	93;"	d
ICMP_UNREACH_NEEDFRAG	include/clicknet/icmp.h	89;"	d
ICMP_UNREACH_NET	include/clicknet/icmp.h	85;"	d
ICMP_UNREACH_NET_PROHIB	include/clicknet/icmp.h	94;"	d
ICMP_UNREACH_NET_UNKNOWN	include/clicknet/icmp.h	91;"	d
ICMP_UNREACH_PORT	include/clicknet/icmp.h	88;"	d
ICMP_UNREACH_PRECEDENCE_CUTOFF	include/clicknet/icmp.h	100;"	d
ICMP_UNREACH_PROTOCOL	include/clicknet/icmp.h	87;"	d
ICMP_UNREACH_SRCFAIL	include/clicknet/icmp.h	90;"	d
ICMP_UNREACH_TOSHOST	include/clicknet/icmp.h	97;"	d
ICMP_UNREACH_TOSNET	include/clicknet/icmp.h	96;"	d
IDIAG	drivers/e1000-4.x/src/Makefile	/^IDIAG := n$/;"	m
IDIAG_CFILES	drivers/e1000-4.x/src/Makefile	/^IDIAG_CFILES = e1000_idiag.c$/;"	m
IDIAG_CFLAGS	drivers/e1000-4.x/src/Makefile	/^IDIAG_CFLAGS = -DIDIAG$/;"	m
IDIAG_E1000_DIAG_INTR_TEST	drivers/e1000-4.x/src/idiag_e1000.h	40;"	d
IDIAG_E1000_DIAG_LINK_TEST	drivers/e1000-4.x/src/idiag_e1000.h	42;"	d
IDIAG_E1000_DIAG_LOOPBACK_TEST	drivers/e1000-4.x/src/idiag_e1000.h	41;"	d
IDIAG_E1000_DIAG_MAC_LB	drivers/e1000-4.x/src/idiag_e1000.h	/^	IDIAG_E1000_DIAG_MAC_LB,$/;"	e	enum:idiag_e1000_diag_loopback_mode
IDIAG_E1000_DIAG_NONE_LB	drivers/e1000-4.x/src/idiag_e1000.h	/^	IDIAG_E1000_DIAG_NONE_LB = 0,$/;"	e	enum:idiag_e1000_diag_loopback_mode
IDIAG_E1000_DIAG_PHY_TCVR_LB	drivers/e1000-4.x/src/idiag_e1000.h	/^	IDIAG_E1000_DIAG_PHY_TCVR_LB,$/;"	e	enum:idiag_e1000_diag_loopback_mode
IDIAG_E1000_DIAG_REG_TEST	drivers/e1000-4.x/src/idiag_e1000.h	38;"	d
IDIAG_E1000_DIAG_XSUM_TEST	drivers/e1000-4.x/src/idiag_e1000.h	39;"	d
IDIAG_E1000_DRIVER	drivers/e1000-4.x/src/idiag_e1000.h	34;"	d
IDIAG_E1000_INTR_TEST_FAILED_MASKED_ENABLED	drivers/e1000-4.x/src/idiag_e1000.h	/^	IDIAG_E1000_INTR_TEST_FAILED_MASKED_ENABLED$/;"	e	enum:idiag_e1000_diag_intr_test_param
IDIAG_E1000_INTR_TEST_FAILED_WHILE_DISABLED	drivers/e1000-4.x/src/idiag_e1000.h	/^	IDIAG_E1000_INTR_TEST_FAILED_WHILE_DISABLED,$/;"	e	enum:idiag_e1000_diag_intr_test_param
IDIAG_E1000_INTR_TEST_FAILED_WHILE_ENABLED	drivers/e1000-4.x/src/idiag_e1000.h	/^	IDIAG_E1000_INTR_TEST_FAILED_WHILE_ENABLED,$/;"	e	enum:idiag_e1000_diag_intr_test_param
IDIAG_E1000_INTR_TEST_NOT_EXEC	drivers/e1000-4.x/src/idiag_e1000.h	/^	IDIAG_E1000_INTR_TEST_NOT_EXEC,$/;"	e	enum:idiag_e1000_diag_intr_test_param
IDIAG_E1000_INTR_TEST_OK	drivers/e1000-4.x/src/idiag_e1000.h	/^	IDIAG_E1000_INTR_TEST_OK,$/;"	e	enum:idiag_e1000_diag_intr_test_param
IDIAG_E1000_LOOPBACK_TEST_FAILED	drivers/e1000-4.x/src/idiag_e1000.h	/^	IDIAG_E1000_LOOPBACK_TEST_FAILED$/;"	e	enum:idiag_e1000_diag_loopback_result
IDIAG_E1000_LOOPBACK_TEST_NOT_EXEC	drivers/e1000-4.x/src/idiag_e1000.h	/^	IDIAG_E1000_LOOPBACK_TEST_NOT_EXEC,$/;"	e	enum:idiag_e1000_diag_loopback_result
IDIAG_E1000_LOOPBACK_TEST_OK	drivers/e1000-4.x/src/idiag_e1000.h	/^	IDIAG_E1000_LOOPBACK_TEST_OK,$/;"	e	enum:idiag_e1000_diag_loopback_result
IDIAG_HFILES	drivers/e1000-4.x/src/Makefile	/^IDIAG_HFILES = idiag_pro.h idiag_e1000.h$/;"	m
IDIAG_PRO_BASE_SIOC	drivers/e1000-4.x/src/idiag_pro.h	38;"	d
IDIAG_PRO_DRIVER_UNKNOWN	drivers/e1000-4.x/src/idiag_pro.h	35;"	d
IDIAG_PRO_IDENTIFY_DRIVER	drivers/e1000-4.x/src/idiag_pro.h	36;"	d
IDIAG_PRO_PARAM_SIZE	drivers/e1000-4.x/src/idiag_pro.h	33;"	d
IDIAG_PRO_STAT_BAD_PARAM	drivers/e1000-4.x/src/idiag_pro.h	/^	IDIAG_PRO_STAT_BAD_PARAM,$/;"	e	enum:idiag_pro_stat
IDIAG_PRO_STAT_INVALID_STATE	drivers/e1000-4.x/src/idiag_pro.h	/^	IDIAG_PRO_STAT_INVALID_STATE,$/;"	e	enum:idiag_pro_stat
IDIAG_PRO_STAT_NOT_SUPPORTED	drivers/e1000-4.x/src/idiag_pro.h	/^	IDIAG_PRO_STAT_NOT_SUPPORTED,$/;"	e	enum:idiag_pro_stat
IDIAG_PRO_STAT_OK	drivers/e1000-4.x/src/idiag_pro.h	/^	IDIAG_PRO_STAT_OK,$/;"	e	enum:idiag_pro_stat
IDIAG_PRO_STAT_TEST_FAILED	drivers/e1000-4.x/src/idiag_pro.h	/^	IDIAG_PRO_STAT_TEST_FAILED,$/;"	e	enum:idiag_pro_stat
IDIAG_PRO_STAT_TEST_FATAL	drivers/e1000-4.x/src/idiag_pro.h	/^	IDIAG_PRO_STAT_TEST_FATAL$/;"	e	enum:idiag_pro_stat
IDIAG_PRO_VERSION	drivers/e1000-4.x/src/idiag_pro.h	32;"	d
IDIAG_TEST	drivers/e1000-4.x/src/Makefile	/^IDIAG_TEST = idiag_test$/;"	m
ID_LED_DEF1_DEF2	drivers/e1000-4.x/src/e1000_hw.h	1323;"	d
ID_LED_DEF1_DEF2	drivers/e1000-5.x/src/e1000_hw.h	1536;"	d
ID_LED_DEF1_DEF2	drivers/e1000-7.x/src/e1000_hw.h	2312;"	d
ID_LED_DEF1_OFF2	drivers/e1000-4.x/src/e1000_hw.h	1325;"	d
ID_LED_DEF1_OFF2	drivers/e1000-5.x/src/e1000_hw.h	1538;"	d
ID_LED_DEF1_OFF2	drivers/e1000-7.x/src/e1000_hw.h	2314;"	d
ID_LED_DEF1_ON2	drivers/e1000-4.x/src/e1000_hw.h	1324;"	d
ID_LED_DEF1_ON2	drivers/e1000-5.x/src/e1000_hw.h	1537;"	d
ID_LED_DEF1_ON2	drivers/e1000-7.x/src/e1000_hw.h	2313;"	d
ID_LED_DEFAULT	drivers/e1000-4.x/src/e1000_hw.h	1319;"	d
ID_LED_DEFAULT	drivers/e1000-5.x/src/e1000_hw.h	1532;"	d
ID_LED_DEFAULT	drivers/e1000-7.x/src/e1000_hw.h	2304;"	d
ID_LED_DEFAULT_82573	drivers/e1000-7.x/src/e1000_hw.h	2303;"	d
ID_LED_DEFAULT_ICH8LAN	drivers/e1000-7.x/src/e1000_hw.h	2308;"	d
ID_LED_OFF1_DEF2	drivers/e1000-4.x/src/e1000_hw.h	1329;"	d
ID_LED_OFF1_DEF2	drivers/e1000-5.x/src/e1000_hw.h	1542;"	d
ID_LED_OFF1_DEF2	drivers/e1000-7.x/src/e1000_hw.h	2318;"	d
ID_LED_OFF1_OFF2	drivers/e1000-4.x/src/e1000_hw.h	1331;"	d
ID_LED_OFF1_OFF2	drivers/e1000-5.x/src/e1000_hw.h	1544;"	d
ID_LED_OFF1_OFF2	drivers/e1000-7.x/src/e1000_hw.h	2320;"	d
ID_LED_OFF1_ON2	drivers/e1000-4.x/src/e1000_hw.h	1330;"	d
ID_LED_OFF1_ON2	drivers/e1000-5.x/src/e1000_hw.h	1543;"	d
ID_LED_OFF1_ON2	drivers/e1000-7.x/src/e1000_hw.h	2319;"	d
ID_LED_ON1_DEF2	drivers/e1000-4.x/src/e1000_hw.h	1326;"	d
ID_LED_ON1_DEF2	drivers/e1000-5.x/src/e1000_hw.h	1539;"	d
ID_LED_ON1_DEF2	drivers/e1000-7.x/src/e1000_hw.h	2315;"	d
ID_LED_ON1_OFF2	drivers/e1000-4.x/src/e1000_hw.h	1328;"	d
ID_LED_ON1_OFF2	drivers/e1000-5.x/src/e1000_hw.h	1541;"	d
ID_LED_ON1_OFF2	drivers/e1000-7.x/src/e1000_hw.h	2317;"	d
ID_LED_ON1_ON2	drivers/e1000-4.x/src/e1000_hw.h	1327;"	d
ID_LED_ON1_ON2	drivers/e1000-5.x/src/e1000_hw.h	1540;"	d
ID_LED_ON1_ON2	drivers/e1000-7.x/src/e1000_hw.h	2316;"	d
ID_LED_RESERVED_0000	drivers/e1000-4.x/src/e1000_hw.h	1317;"	d
ID_LED_RESERVED_0000	drivers/e1000-5.x/src/e1000_hw.h	1530;"	d
ID_LED_RESERVED_0000	drivers/e1000-7.x/src/e1000_hw.h	2300;"	d
ID_LED_RESERVED_82573	drivers/e1000-7.x/src/e1000_hw.h	2302;"	d
ID_LED_RESERVED_FFFF	drivers/e1000-4.x/src/e1000_hw.h	1318;"	d
ID_LED_RESERVED_FFFF	drivers/e1000-5.x/src/e1000_hw.h	1531;"	d
ID_LED_RESERVED_FFFF	drivers/e1000-7.x/src/e1000_hw.h	2301;"	d
IEEE80211_CHAN_2GHZ	include/clicknet/radiotap.h	206;"	d
IEEE80211_CHAN_5GHZ	include/clicknet/radiotap.h	207;"	d
IEEE80211_CHAN_CCK	include/clicknet/radiotap.h	204;"	d
IEEE80211_CHAN_DYN	include/clicknet/radiotap.h	209;"	d
IEEE80211_CHAN_GFSK	include/clicknet/radiotap.h	210;"	d
IEEE80211_CHAN_OFDM	include/clicknet/radiotap.h	205;"	d
IEEE80211_CHAN_PASSIVE	include/clicknet/radiotap.h	208;"	d
IEEE80211_CHAN_TURBO	include/clicknet/radiotap.h	203;"	d
IEEE80211_RADIOTAP_ANTENNA	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_ANTENNA = 11,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_CHANNEL	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_CHANNEL = 3,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DATA_RETRIES	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_DATA_RETRIES = 17,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DBM_ANTNOISE	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_DBM_ANTNOISE = 6,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DBM_ANTSIGNAL	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_DBM_ANTSIGNAL = 5,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DBM_TX_POWER	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_DBM_TX_POWER = 10,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DB_ANTNOISE	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_DB_ANTNOISE = 13,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DB_ANTSIGNAL	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_DB_ANTSIGNAL = 12,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_DB_TX_ATTENUATION	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_DB_TX_ATTENUATION = 9,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_EXT	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_EXT = 31$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_FHSS	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_FHSS = 4,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_FLAGS	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_FLAGS = 1,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_F_CFP	include/clicknet/radiotap.h	214;"	d
IEEE80211_RADIOTAP_F_DATAPAD	include/clicknet/radiotap.h	228;"	d
IEEE80211_RADIOTAP_F_FCS	include/clicknet/radiotap.h	227;"	d
IEEE80211_RADIOTAP_F_FRAG	include/clicknet/radiotap.h	224;"	d
IEEE80211_RADIOTAP_F_RX_BADFCS	include/clicknet/radiotap.h	233;"	d
IEEE80211_RADIOTAP_F_SHORTPRE	include/clicknet/radiotap.h	217;"	d
IEEE80211_RADIOTAP_F_TX_CTS	include/clicknet/radiotap.h	238;"	d
IEEE80211_RADIOTAP_F_TX_FAIL	include/clicknet/radiotap.h	236;"	d
IEEE80211_RADIOTAP_F_TX_RTS	include/clicknet/radiotap.h	239;"	d
IEEE80211_RADIOTAP_F_WEP	include/clicknet/radiotap.h	221;"	d
IEEE80211_RADIOTAP_HDRLEN	include/clicknet/radiotap.h	58;"	d
IEEE80211_RADIOTAP_LOCK_QUALITY	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_LOCK_QUALITY = 7,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_RATE	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_RATE = 2,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_RTS_RETRIES	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_RTS_RETRIES = 16,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_RX_FLAGS	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_RX_FLAGS = 14,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_TSFT	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_TSFT = 0,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_TX_ATTENUATION	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_TX_ATTENUATION = 8,$/;"	e	enum:ieee80211_radiotap_type
IEEE80211_RADIOTAP_TX_FLAGS	include/clicknet/radiotap.h	/^	IEEE80211_RADIOTAP_TX_FLAGS = 15,$/;"	e	enum:ieee80211_radiotap_type
IEEE802_3acTagMode	drivers/e1000-4.x/src/base_comm.h	/^    u32                 IEEE802_3acTagMode; \/* cast from IANS_BD_SUPPORT *\/$/;"	m	struct:_IANS_BD_PARAM_ITAG_CAP
IEEE_ESR_1000T_FD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1666;"	d
IEEE_ESR_1000T_FD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1941;"	d
IEEE_ESR_1000T_FD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2843;"	d
IEEE_ESR_1000T_HD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1665;"	d
IEEE_ESR_1000T_HD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1940;"	d
IEEE_ESR_1000T_HD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2842;"	d
IEEE_ESR_1000X_FD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1668;"	d
IEEE_ESR_1000X_FD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1943;"	d
IEEE_ESR_1000X_FD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2845;"	d
IEEE_ESR_1000X_HD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1667;"	d
IEEE_ESR_1000X_HD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1942;"	d
IEEE_ESR_1000X_HD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2844;"	d
IEEE_tag_support	drivers/e1000-4.x/src/ans.h	/^    BD_ANS_BOOLEAN IEEE_tag_support; \/* base driver supports 802.3ac *\/$/;"	m	struct:_iANSsupport_t
IFE_C_E_PHY_ID	drivers/e1000-7.x/src/e1000_hw.h	3232;"	d
IFE_E_PHY_ID	drivers/e1000-7.x/src/e1000_hw.h	3230;"	d
IFE_PESC_100BTX_POWER_DOWN	drivers/e1000-7.x/src/e1000_hw.h	3249;"	d
IFE_PESC_10BTX_POWER_DOWN	drivers/e1000-7.x/src/e1000_hw.h	3250;"	d
IFE_PESC_DUPLEX	drivers/e1000-7.x/src/e1000_hw.h	3254;"	d
IFE_PESC_PHY_ADDR_MASK	drivers/e1000-7.x/src/e1000_hw.h	3252;"	d
IFE_PESC_POLARITY_REVERSED	drivers/e1000-7.x/src/e1000_hw.h	3251;"	d
IFE_PESC_POLARITY_REVERSED_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	3255;"	d
IFE_PESC_REDUCED_POWER_DOWN_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	3248;"	d
IFE_PESC_SPEED	drivers/e1000-7.x/src/e1000_hw.h	3253;"	d
IFE_PHC_ABILITY_CHECK	drivers/e1000-7.x/src/e1000_hw.h	3272;"	d
IFE_PHC_DISTANCE_MASK	drivers/e1000-7.x/src/e1000_hw.h	3277;"	d
IFE_PHC_HIGHZ	drivers/e1000-7.x/src/e1000_hw.h	3274;"	d
IFE_PHC_HWI_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	3271;"	d
IFE_PHC_LOWZ	drivers/e1000-7.x/src/e1000_hw.h	3275;"	d
IFE_PHC_LOW_HIGH_Z_MASK	drivers/e1000-7.x/src/e1000_hw.h	3276;"	d
IFE_PHC_MDIX_RESET_ALL_MASK	drivers/e1000-7.x/src/e1000_hw.h	3269;"	d
IFE_PHC_RESET_ALL_MASK	drivers/e1000-7.x/src/e1000_hw.h	3278;"	d
IFE_PHC_TEST_EXEC	drivers/e1000-7.x/src/e1000_hw.h	3273;"	d
IFE_PHY_EQUALIZER	drivers/e1000-7.x/src/e1000_hw.h	3243;"	d
IFE_PHY_EXTENDED_STATUS_CONTROL	drivers/e1000-7.x/src/e1000_hw.h	3234;"	d
IFE_PHY_HWI_CONTROL	drivers/e1000-7.x/src/e1000_hw.h	3246;"	d
IFE_PHY_MDIX_CONTROL	drivers/e1000-7.x/src/e1000_hw.h	3245;"	d
IFE_PHY_PREM_EOF_ERR	drivers/e1000-7.x/src/e1000_hw.h	3240;"	d
IFE_PHY_RCV_DISCONNECT	drivers/e1000-7.x/src/e1000_hw.h	3237;"	d
IFE_PHY_RCV_EOF_ERR	drivers/e1000-7.x/src/e1000_hw.h	3241;"	d
IFE_PHY_RCV_ERROT_FRAME	drivers/e1000-7.x/src/e1000_hw.h	3238;"	d
IFE_PHY_RCV_FALSE_CARRIER	drivers/e1000-7.x/src/e1000_hw.h	3236;"	d
IFE_PHY_RCV_SYMBOL_ERR	drivers/e1000-7.x/src/e1000_hw.h	3239;"	d
IFE_PHY_SPECIAL_CONTROL	drivers/e1000-7.x/src/e1000_hw.h	3235;"	d
IFE_PHY_SPECIAL_CONTROL_LED	drivers/e1000-7.x/src/e1000_hw.h	3244;"	d
IFE_PHY_TX_JABBER_DETECT	drivers/e1000-7.x/src/e1000_hw.h	3242;"	d
IFE_PLUS_E_PHY_ID	drivers/e1000-7.x/src/e1000_hw.h	3231;"	d
IFE_PMC_AUTO_MDIX	drivers/e1000-7.x/src/e1000_hw.h	3264;"	d
IFE_PMC_AUTO_MDIX_COMPLETE	drivers/e1000-7.x/src/e1000_hw.h	3267;"	d
IFE_PMC_FORCE_MDIX	drivers/e1000-7.x/src/e1000_hw.h	3265;"	d
IFE_PMC_MDIX_MODE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	3268;"	d
IFE_PMC_MDIX_STATUS	drivers/e1000-7.x/src/e1000_hw.h	3266;"	d
IFE_PSCL_PROBE_LEDS_OFF	drivers/e1000-7.x/src/e1000_hw.h	3280;"	d
IFE_PSCL_PROBE_LEDS_ON	drivers/e1000-7.x/src/e1000_hw.h	3281;"	d
IFE_PSCL_PROBE_MODE	drivers/e1000-7.x/src/e1000_hw.h	3279;"	d
IFE_PSC_AUTO_POLARITY_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	3259;"	d
IFE_PSC_AUTO_POLARITY_DISABLE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	3262;"	d
IFE_PSC_DISABLE_DYNAMIC_POWER_DOWN	drivers/e1000-7.x/src/e1000_hw.h	3257;"	d
IFE_PSC_FORCE_POLARITY	drivers/e1000-7.x/src/e1000_hw.h	3258;"	d
IFE_PSC_FORCE_POLARITY_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	3261;"	d
IFE_PSC_JABBER_FUNC_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	3260;"	d
IFS_MAX	drivers/e1000-4.x/src/e1000_hw.h	1401;"	d
IFS_MAX	drivers/e1000-5.x/src/e1000_hw.h	1622;"	d
IFS_MAX	drivers/e1000-7.x/src/e1000_hw.h	2412;"	d
IFS_MIN	drivers/e1000-4.x/src/e1000_hw.h	1403;"	d
IFS_MIN	drivers/e1000-5.x/src/e1000_hw.h	1624;"	d
IFS_MIN	drivers/e1000-7.x/src/e1000_hw.h	2414;"	d
IFS_RATIO	drivers/e1000-4.x/src/e1000_hw.h	1404;"	d
IFS_RATIO	drivers/e1000-5.x/src/e1000_hw.h	1625;"	d
IFS_RATIO	drivers/e1000-7.x/src/e1000_hw.h	2415;"	d
IFS_STEP	drivers/e1000-4.x/src/e1000_hw.h	1402;"	d
IFS_STEP	drivers/e1000-5.x/src/e1000_hw.h	1623;"	d
IFS_STEP	drivers/e1000-7.x/src/e1000_hw.h	2413;"	d
IFU_FETCH	include/click/perfctr-i586.hh	14;"	d
IFU_FETCH_MISS	include/click/perfctr-i586.hh	15;"	d
IFU_MEM_STALL	include/click/perfctr-i586.hh	16;"	d
IGP01E1000_AGC_LENGTH_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	2088;"	d
IGP01E1000_AGC_LENGTH_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	3005;"	d
IGP01E1000_AGC_LENGTH_TABLE_SIZE	drivers/e1000-5.x/src/e1000_hw.h	2091;"	d
IGP01E1000_AGC_LENGTH_TABLE_SIZE	drivers/e1000-7.x/src/e1000_hw.h	3012;"	d
IGP01E1000_AGC_RANGE	drivers/e1000-5.x/src/e1000_hw.h	2094;"	d
IGP01E1000_AGC_RANGE	drivers/e1000-7.x/src/e1000_hw.h	3016;"	d
IGP01E1000_ANALOG_FUSE_BYPASS	drivers/e1000-5.x/src/e1000_hw.h	2109;"	d
IGP01E1000_ANALOG_FUSE_BYPASS	drivers/e1000-7.x/src/e1000_hw.h	3032;"	d
IGP01E1000_ANALOG_FUSE_COARSE_10	drivers/e1000-5.x/src/e1000_hw.h	2118;"	d
IGP01E1000_ANALOG_FUSE_COARSE_10	drivers/e1000-7.x/src/e1000_hw.h	3041;"	d
IGP01E1000_ANALOG_FUSE_COARSE_MASK	drivers/e1000-5.x/src/e1000_hw.h	2113;"	d
IGP01E1000_ANALOG_FUSE_COARSE_MASK	drivers/e1000-7.x/src/e1000_hw.h	3036;"	d
IGP01E1000_ANALOG_FUSE_COARSE_THRESH	drivers/e1000-5.x/src/e1000_hw.h	2117;"	d
IGP01E1000_ANALOG_FUSE_COARSE_THRESH	drivers/e1000-7.x/src/e1000_hw.h	3040;"	d
IGP01E1000_ANALOG_FUSE_CONTROL	drivers/e1000-5.x/src/e1000_hw.h	2108;"	d
IGP01E1000_ANALOG_FUSE_CONTROL	drivers/e1000-7.x/src/e1000_hw.h	3031;"	d
IGP01E1000_ANALOG_FUSE_ENABLE_SW_CONTROL	drivers/e1000-5.x/src/e1000_hw.h	2115;"	d
IGP01E1000_ANALOG_FUSE_ENABLE_SW_CONTROL	drivers/e1000-7.x/src/e1000_hw.h	3038;"	d
IGP01E1000_ANALOG_FUSE_FINE_1	drivers/e1000-5.x/src/e1000_hw.h	2119;"	d
IGP01E1000_ANALOG_FUSE_FINE_1	drivers/e1000-7.x/src/e1000_hw.h	3042;"	d
IGP01E1000_ANALOG_FUSE_FINE_10	drivers/e1000-5.x/src/e1000_hw.h	2120;"	d
IGP01E1000_ANALOG_FUSE_FINE_10	drivers/e1000-7.x/src/e1000_hw.h	3043;"	d
IGP01E1000_ANALOG_FUSE_FINE_MASK	drivers/e1000-5.x/src/e1000_hw.h	2112;"	d
IGP01E1000_ANALOG_FUSE_FINE_MASK	drivers/e1000-7.x/src/e1000_hw.h	3035;"	d
IGP01E1000_ANALOG_FUSE_POLY_MASK	drivers/e1000-5.x/src/e1000_hw.h	2111;"	d
IGP01E1000_ANALOG_FUSE_POLY_MASK	drivers/e1000-7.x/src/e1000_hw.h	3034;"	d
IGP01E1000_ANALOG_FUSE_STATUS	drivers/e1000-5.x/src/e1000_hw.h	2107;"	d
IGP01E1000_ANALOG_FUSE_STATUS	drivers/e1000-7.x/src/e1000_hw.h	3030;"	d
IGP01E1000_ANALOG_REGS_PAGE	drivers/e1000-5.x/src/e1000_hw.h	1817;"	d
IGP01E1000_ANALOG_REGS_PAGE	drivers/e1000-7.x/src/e1000_hw.h	2647;"	d
IGP01E1000_ANALOG_SPARE_FUSE_ENABLED	drivers/e1000-5.x/src/e1000_hw.h	2114;"	d
IGP01E1000_ANALOG_SPARE_FUSE_ENABLED	drivers/e1000-7.x/src/e1000_hw.h	3037;"	d
IGP01E1000_ANALOG_SPARE_FUSE_STATUS	drivers/e1000-5.x/src/e1000_hw.h	2106;"	d
IGP01E1000_ANALOG_SPARE_FUSE_STATUS	drivers/e1000-7.x/src/e1000_hw.h	3029;"	d
IGP01E1000_GMII_FIFO	drivers/e1000-5.x/src/e1000_hw.h	1782;"	d
IGP01E1000_GMII_FIFO	drivers/e1000-7.x/src/e1000_hw.h	2603;"	d
IGP01E1000_GMII_FLEX_SPD	drivers/e1000-5.x/src/e1000_hw.h	2101;"	d
IGP01E1000_GMII_FLEX_SPD	drivers/e1000-7.x/src/e1000_hw.h	3024;"	d
IGP01E1000_GMII_SPD	drivers/e1000-5.x/src/e1000_hw.h	2103;"	d
IGP01E1000_GMII_SPD	drivers/e1000-7.x/src/e1000_hw.h	3026;"	d
IGP01E1000_IEEE_FORCE_GIGA	drivers/e1000-5.x/src/e1000_hw.h	1775;"	d
IGP01E1000_IEEE_FORCE_GIGA	drivers/e1000-7.x/src/e1000_hw.h	2596;"	d
IGP01E1000_IEEE_REGS_PAGE	drivers/e1000-5.x/src/e1000_hw.h	1773;"	d
IGP01E1000_IEEE_REGS_PAGE	drivers/e1000-7.x/src/e1000_hw.h	2594;"	d
IGP01E1000_IEEE_RESTART_AUTONEG	drivers/e1000-5.x/src/e1000_hw.h	1774;"	d
IGP01E1000_IEEE_RESTART_AUTONEG	drivers/e1000-7.x/src/e1000_hw.h	2595;"	d
IGP01E1000_I_PHY_ID	drivers/e1000-5.x/src/e1000_hw.h	2130;"	d
IGP01E1000_I_PHY_ID	drivers/e1000-7.x/src/e1000_hw.h	3161;"	d
IGP01E1000_MSE_CHANNEL_A	drivers/e1000-5.x/src/e1000_hw.h	2079;"	d
IGP01E1000_MSE_CHANNEL_A	drivers/e1000-7.x/src/e1000_hw.h	2992;"	d
IGP01E1000_MSE_CHANNEL_B	drivers/e1000-5.x/src/e1000_hw.h	2078;"	d
IGP01E1000_MSE_CHANNEL_B	drivers/e1000-7.x/src/e1000_hw.h	2991;"	d
IGP01E1000_MSE_CHANNEL_C	drivers/e1000-5.x/src/e1000_hw.h	2077;"	d
IGP01E1000_MSE_CHANNEL_C	drivers/e1000-7.x/src/e1000_hw.h	2990;"	d
IGP01E1000_MSE_CHANNEL_D	drivers/e1000-5.x/src/e1000_hw.h	2076;"	d
IGP01E1000_MSE_CHANNEL_D	drivers/e1000-7.x/src/e1000_hw.h	2989;"	d
IGP01E1000_PHY_AGC_A	drivers/e1000-5.x/src/e1000_hw.h	1787;"	d
IGP01E1000_PHY_AGC_A	drivers/e1000-7.x/src/e1000_hw.h	2609;"	d
IGP01E1000_PHY_AGC_B	drivers/e1000-5.x/src/e1000_hw.h	1788;"	d
IGP01E1000_PHY_AGC_B	drivers/e1000-7.x/src/e1000_hw.h	2610;"	d
IGP01E1000_PHY_AGC_C	drivers/e1000-5.x/src/e1000_hw.h	1789;"	d
IGP01E1000_PHY_AGC_C	drivers/e1000-7.x/src/e1000_hw.h	2611;"	d
IGP01E1000_PHY_AGC_D	drivers/e1000-5.x/src/e1000_hw.h	1790;"	d
IGP01E1000_PHY_AGC_D	drivers/e1000-7.x/src/e1000_hw.h	2612;"	d
IGP01E1000_PHY_AGC_PARAM_A	drivers/e1000-5.x/src/e1000_hw.h	1798;"	d
IGP01E1000_PHY_AGC_PARAM_A	drivers/e1000-7.x/src/e1000_hw.h	2628;"	d
IGP01E1000_PHY_AGC_PARAM_B	drivers/e1000-5.x/src/e1000_hw.h	1799;"	d
IGP01E1000_PHY_AGC_PARAM_B	drivers/e1000-7.x/src/e1000_hw.h	2629;"	d
IGP01E1000_PHY_AGC_PARAM_C	drivers/e1000-5.x/src/e1000_hw.h	1800;"	d
IGP01E1000_PHY_AGC_PARAM_C	drivers/e1000-7.x/src/e1000_hw.h	2630;"	d
IGP01E1000_PHY_AGC_PARAM_D	drivers/e1000-5.x/src/e1000_hw.h	1801;"	d
IGP01E1000_PHY_AGC_PARAM_D	drivers/e1000-7.x/src/e1000_hw.h	2631;"	d
IGP01E1000_PHY_ANALOG_CLASS_A	drivers/e1000-5.x/src/e1000_hw.h	1807;"	d
IGP01E1000_PHY_ANALOG_CLASS_A	drivers/e1000-7.x/src/e1000_hw.h	2637;"	d
IGP01E1000_PHY_ANALOG_TX_STATE	drivers/e1000-5.x/src/e1000_hw.h	1806;"	d
IGP01E1000_PHY_ANALOG_TX_STATE	drivers/e1000-7.x/src/e1000_hw.h	2636;"	d
IGP01E1000_PHY_CHANNEL_NUM	drivers/e1000-5.x/src/e1000_hw.h	1797;"	d
IGP01E1000_PHY_CHANNEL_NUM	drivers/e1000-7.x/src/e1000_hw.h	2625;"	d
IGP01E1000_PHY_CHANNEL_QUALITY	drivers/e1000-5.x/src/e1000_hw.h	1783;"	d
IGP01E1000_PHY_CHANNEL_QUALITY	drivers/e1000-7.x/src/e1000_hw.h	2604;"	d
IGP01E1000_PHY_DSP_FFE	drivers/e1000-5.x/src/e1000_hw.h	1795;"	d
IGP01E1000_PHY_DSP_FFE	drivers/e1000-7.x/src/e1000_hw.h	2623;"	d
IGP01E1000_PHY_DSP_FFE_CM_CP	drivers/e1000-5.x/src/e1000_hw.h	1809;"	d
IGP01E1000_PHY_DSP_FFE_CM_CP	drivers/e1000-7.x/src/e1000_hw.h	2639;"	d
IGP01E1000_PHY_DSP_FFE_DEFAULT	drivers/e1000-5.x/src/e1000_hw.h	1811;"	d
IGP01E1000_PHY_DSP_FFE_DEFAULT	drivers/e1000-7.x/src/e1000_hw.h	2641;"	d
IGP01E1000_PHY_DSP_RESET	drivers/e1000-5.x/src/e1000_hw.h	1793;"	d
IGP01E1000_PHY_DSP_RESET	drivers/e1000-7.x/src/e1000_hw.h	2621;"	d
IGP01E1000_PHY_DSP_SET	drivers/e1000-5.x/src/e1000_hw.h	1794;"	d
IGP01E1000_PHY_DSP_SET	drivers/e1000-7.x/src/e1000_hw.h	2622;"	d
IGP01E1000_PHY_EDAC_MU_INDEX	drivers/e1000-5.x/src/e1000_hw.h	1803;"	d
IGP01E1000_PHY_EDAC_MU_INDEX	drivers/e1000-7.x/src/e1000_hw.h	2633;"	d
IGP01E1000_PHY_EDAC_SIGN_EXT_9_BITS	drivers/e1000-5.x/src/e1000_hw.h	1804;"	d
IGP01E1000_PHY_EDAC_SIGN_EXT_9_BITS	drivers/e1000-7.x/src/e1000_hw.h	2634;"	d
IGP01E1000_PHY_FORCE_ANALOG_ENABLE	drivers/e1000-5.x/src/e1000_hw.h	1808;"	d
IGP01E1000_PHY_FORCE_ANALOG_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2638;"	d
IGP01E1000_PHY_LINK_HEALTH	drivers/e1000-5.x/src/e1000_hw.h	1781;"	d
IGP01E1000_PHY_LINK_HEALTH	drivers/e1000-7.x/src/e1000_hw.h	2602;"	d
IGP01E1000_PHY_PAGE_SELECT	drivers/e1000-5.x/src/e1000_hw.h	1784;"	d
IGP01E1000_PHY_PAGE_SELECT	drivers/e1000-7.x/src/e1000_hw.h	2606;"	d
IGP01E1000_PHY_PCS_CTRL_REG	drivers/e1000-5.x/src/e1000_hw.h	1815;"	d
IGP01E1000_PHY_PCS_CTRL_REG	drivers/e1000-7.x/src/e1000_hw.h	2645;"	d
IGP01E1000_PHY_PCS_INIT_REG	drivers/e1000-5.x/src/e1000_hw.h	1814;"	d
IGP01E1000_PHY_PCS_INIT_REG	drivers/e1000-7.x/src/e1000_hw.h	2644;"	d
IGP01E1000_PHY_POLARITY_MASK	drivers/e1000-5.x/src/e1000_hw.h	2098;"	d
IGP01E1000_PHY_POLARITY_MASK	drivers/e1000-7.x/src/e1000_hw.h	3021;"	d
IGP01E1000_PHY_PORT_CONFIG	drivers/e1000-5.x/src/e1000_hw.h	1778;"	d
IGP01E1000_PHY_PORT_CONFIG	drivers/e1000-7.x/src/e1000_hw.h	2599;"	d
IGP01E1000_PHY_PORT_CTRL	drivers/e1000-5.x/src/e1000_hw.h	1780;"	d
IGP01E1000_PHY_PORT_CTRL	drivers/e1000-7.x/src/e1000_hw.h	2601;"	d
IGP01E1000_PHY_PORT_STATUS	drivers/e1000-5.x/src/e1000_hw.h	1779;"	d
IGP01E1000_PHY_PORT_STATUS	drivers/e1000-7.x/src/e1000_hw.h	2600;"	d
IGP01E1000_PLHR_AUTONEG_ACTIVE	drivers/e1000-5.x/src/e1000_hw.h	2069;"	d
IGP01E1000_PLHR_AUTONEG_ACTIVE	drivers/e1000-7.x/src/e1000_hw.h	2982;"	d
IGP01E1000_PLHR_AUTONEG_FAULT	drivers/e1000-5.x/src/e1000_hw.h	2068;"	d
IGP01E1000_PLHR_AUTONEG_FAULT	drivers/e1000-7.x/src/e1000_hw.h	2981;"	d
IGP01E1000_PLHR_DATA_ERR_0	drivers/e1000-5.x/src/e1000_hw.h	2067;"	d
IGP01E1000_PLHR_DATA_ERR_0	drivers/e1000-7.x/src/e1000_hw.h	2980;"	d
IGP01E1000_PLHR_DATA_ERR_1	drivers/e1000-5.x/src/e1000_hw.h	2066;"	d
IGP01E1000_PLHR_DATA_ERR_1	drivers/e1000-7.x/src/e1000_hw.h	2979;"	d
IGP01E1000_PLHR_GIG_REM_RCVR_NOK	drivers/e1000-5.x/src/e1000_hw.h	2064;"	d
IGP01E1000_PLHR_GIG_REM_RCVR_NOK	drivers/e1000-7.x/src/e1000_hw.h	2977;"	d
IGP01E1000_PLHR_GIG_SCRAMBLER_ERROR	drivers/e1000-5.x/src/e1000_hw.h	2061;"	d
IGP01E1000_PLHR_GIG_SCRAMBLER_ERROR	drivers/e1000-7.x/src/e1000_hw.h	2974;"	d
IGP01E1000_PLHR_IDLE_ERROR_CNT_OFLOW	drivers/e1000-5.x/src/e1000_hw.h	2065;"	d
IGP01E1000_PLHR_IDLE_ERROR_CNT_OFLOW	drivers/e1000-7.x/src/e1000_hw.h	2978;"	d
IGP01E1000_PLHR_MASTER_FAULT	drivers/e1000-5.x/src/e1000_hw.h	2062;"	d
IGP01E1000_PLHR_MASTER_FAULT	drivers/e1000-7.x/src/e1000_hw.h	2975;"	d
IGP01E1000_PLHR_MASTER_RESOLUTION	drivers/e1000-5.x/src/e1000_hw.h	2063;"	d
IGP01E1000_PLHR_MASTER_RESOLUTION	drivers/e1000-7.x/src/e1000_hw.h	2976;"	d
IGP01E1000_PLHR_SS_DOWNGRADE	drivers/e1000-5.x/src/e1000_hw.h	2060;"	d
IGP01E1000_PLHR_SS_DOWNGRADE	drivers/e1000-7.x/src/e1000_hw.h	2973;"	d
IGP01E1000_PLHR_VALID_CHANNEL_A	drivers/e1000-5.x/src/e1000_hw.h	2073;"	d
IGP01E1000_PLHR_VALID_CHANNEL_A	drivers/e1000-7.x/src/e1000_hw.h	2986;"	d
IGP01E1000_PLHR_VALID_CHANNEL_B	drivers/e1000-5.x/src/e1000_hw.h	2072;"	d
IGP01E1000_PLHR_VALID_CHANNEL_B	drivers/e1000-7.x/src/e1000_hw.h	2985;"	d
IGP01E1000_PLHR_VALID_CHANNEL_C	drivers/e1000-5.x/src/e1000_hw.h	2071;"	d
IGP01E1000_PLHR_VALID_CHANNEL_C	drivers/e1000-7.x/src/e1000_hw.h	2984;"	d
IGP01E1000_PLHR_VALID_CHANNEL_D	drivers/e1000-5.x/src/e1000_hw.h	2070;"	d
IGP01E1000_PLHR_VALID_CHANNEL_D	drivers/e1000-7.x/src/e1000_hw.h	2983;"	d
IGP01E1000_PSCFR_AUTO_MDIX_PAR_DETECT	drivers/e1000-5.x/src/e1000_hw.h	2030;"	d
IGP01E1000_PSCFR_AUTO_MDIX_PAR_DETECT	drivers/e1000-7.x/src/e1000_hw.h	2943;"	d
IGP01E1000_PSCFR_DISABLE_JABBER	drivers/e1000-5.x/src/e1000_hw.h	2034;"	d
IGP01E1000_PSCFR_DISABLE_JABBER	drivers/e1000-7.x/src/e1000_hw.h	2947;"	d
IGP01E1000_PSCFR_DISABLE_TPLOOPBACK	drivers/e1000-5.x/src/e1000_hw.h	2033;"	d
IGP01E1000_PSCFR_DISABLE_TPLOOPBACK	drivers/e1000-7.x/src/e1000_hw.h	2946;"	d
IGP01E1000_PSCFR_DISABLE_TRANSMIT	drivers/e1000-5.x/src/e1000_hw.h	2035;"	d
IGP01E1000_PSCFR_DISABLE_TRANSMIT	drivers/e1000-7.x/src/e1000_hw.h	2948;"	d
IGP01E1000_PSCFR_PRE_EN	drivers/e1000-5.x/src/e1000_hw.h	2031;"	d
IGP01E1000_PSCFR_PRE_EN	drivers/e1000-7.x/src/e1000_hw.h	2944;"	d
IGP01E1000_PSCFR_SMART_SPEED	drivers/e1000-5.x/src/e1000_hw.h	2032;"	d
IGP01E1000_PSCFR_SMART_SPEED	drivers/e1000-7.x/src/e1000_hw.h	2945;"	d
IGP01E1000_PSCR_AUTO_MDIX	drivers/e1000-5.x/src/e1000_hw.h	2056;"	d
IGP01E1000_PSCR_AUTO_MDIX	drivers/e1000-7.x/src/e1000_hw.h	2969;"	d
IGP01E1000_PSCR_CORRECT_NC_SCMBLR	drivers/e1000-5.x/src/e1000_hw.h	2053;"	d
IGP01E1000_PSCR_CORRECT_NC_SCMBLR	drivers/e1000-7.x/src/e1000_hw.h	2966;"	d
IGP01E1000_PSCR_FLIP_CHIP	drivers/e1000-5.x/src/e1000_hw.h	2055;"	d
IGP01E1000_PSCR_FLIP_CHIP	drivers/e1000-7.x/src/e1000_hw.h	2968;"	d
IGP01E1000_PSCR_FORCE_MDI_MDIX	drivers/e1000-5.x/src/e1000_hw.h	2057;"	d
IGP01E1000_PSCR_FORCE_MDI_MDIX	drivers/e1000-7.x/src/e1000_hw.h	2970;"	d
IGP01E1000_PSCR_TEN_CRS_SELECT	drivers/e1000-5.x/src/e1000_hw.h	2054;"	d
IGP01E1000_PSCR_TEN_CRS_SELECT	drivers/e1000-7.x/src/e1000_hw.h	2967;"	d
IGP01E1000_PSCR_TP_LOOPBACK	drivers/e1000-5.x/src/e1000_hw.h	2052;"	d
IGP01E1000_PSCR_TP_LOOPBACK	drivers/e1000-7.x/src/e1000_hw.h	2965;"	d
IGP01E1000_PSSR_AUTONEG_FAILED	drivers/e1000-5.x/src/e1000_hw.h	2038;"	d
IGP01E1000_PSSR_AUTONEG_FAILED	drivers/e1000-7.x/src/e1000_hw.h	2951;"	d
IGP01E1000_PSSR_CABLE_LENGTH	drivers/e1000-5.x/src/e1000_hw.h	2040;"	d
IGP01E1000_PSSR_CABLE_LENGTH	drivers/e1000-7.x/src/e1000_hw.h	2953;"	d
IGP01E1000_PSSR_CABLE_LENGTH_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	2048;"	d
IGP01E1000_PSSR_CABLE_LENGTH_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2961;"	d
IGP01E1000_PSSR_FULL_DUPLEX	drivers/e1000-5.x/src/e1000_hw.h	2041;"	d
IGP01E1000_PSSR_FULL_DUPLEX	drivers/e1000-7.x/src/e1000_hw.h	2954;"	d
IGP01E1000_PSSR_LINK_UP	drivers/e1000-5.x/src/e1000_hw.h	2042;"	d
IGP01E1000_PSSR_LINK_UP	drivers/e1000-7.x/src/e1000_hw.h	2955;"	d
IGP01E1000_PSSR_MDIX	drivers/e1000-5.x/src/e1000_hw.h	2043;"	d
IGP01E1000_PSSR_MDIX	drivers/e1000-7.x/src/e1000_hw.h	2956;"	d
IGP01E1000_PSSR_MDIX_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	2049;"	d
IGP01E1000_PSSR_MDIX_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2962;"	d
IGP01E1000_PSSR_POLARITY_REVERSED	drivers/e1000-5.x/src/e1000_hw.h	2039;"	d
IGP01E1000_PSSR_POLARITY_REVERSED	drivers/e1000-7.x/src/e1000_hw.h	2952;"	d
IGP01E1000_PSSR_SPEED_1000MBPS	drivers/e1000-5.x/src/e1000_hw.h	2047;"	d
IGP01E1000_PSSR_SPEED_1000MBPS	drivers/e1000-7.x/src/e1000_hw.h	2960;"	d
IGP01E1000_PSSR_SPEED_100MBPS	drivers/e1000-5.x/src/e1000_hw.h	2046;"	d
IGP01E1000_PSSR_SPEED_100MBPS	drivers/e1000-7.x/src/e1000_hw.h	2959;"	d
IGP01E1000_PSSR_SPEED_10MBPS	drivers/e1000-5.x/src/e1000_hw.h	2045;"	d
IGP01E1000_PSSR_SPEED_10MBPS	drivers/e1000-7.x/src/e1000_hw.h	2958;"	d
IGP01E1000_PSSR_SPEED_MASK	drivers/e1000-5.x/src/e1000_hw.h	2044;"	d
IGP01E1000_PSSR_SPEED_MASK	drivers/e1000-7.x/src/e1000_hw.h	2957;"	d
IGP02E1000_AGC_LENGTH_MASK	drivers/e1000-7.x/src/e1000_hw.h	3009;"	d
IGP02E1000_AGC_LENGTH_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	3006;"	d
IGP02E1000_AGC_LENGTH_TABLE_SIZE	drivers/e1000-7.x/src/e1000_hw.h	3013;"	d
IGP02E1000_AGC_RANGE	drivers/e1000-7.x/src/e1000_hw.h	3017;"	d
IGP02E1000_PHY_AGC_A	drivers/e1000-7.x/src/e1000_hw.h	2615;"	d
IGP02E1000_PHY_AGC_B	drivers/e1000-7.x/src/e1000_hw.h	2616;"	d
IGP02E1000_PHY_AGC_C	drivers/e1000-7.x/src/e1000_hw.h	2617;"	d
IGP02E1000_PHY_AGC_D	drivers/e1000-7.x/src/e1000_hw.h	2618;"	d
IGP02E1000_PHY_CHANNEL_NUM	drivers/e1000-7.x/src/e1000_hw.h	2626;"	d
IGP02E1000_PHY_POWER_MGMT	drivers/e1000-7.x/src/e1000_hw.h	2605;"	d
IGP02E1000_PM_D0_LPLU	drivers/e1000-7.x/src/e1000_hw.h	2996;"	d
IGP02E1000_PM_D3_LPLU	drivers/e1000-7.x/src/e1000_hw.h	2995;"	d
IGP02E1000_PM_SPD	drivers/e1000-7.x/src/e1000_hw.h	2994;"	d
IGP03E1000_E_PHY_ID	drivers/e1000-7.x/src/e1000_hw.h	3229;"	d
IGP3E1000_PHY_MISC_CTRL	drivers/e1000-7.x/src/e1000_hw.h	3223;"	d
IGP3_CAPABILITY	drivers/e1000-7.x/src/e1000_hw.h	3200;"	d
IGP3_CAP_8021PQ	drivers/e1000-7.x/src/e1000_hw.h	3212;"	d
IGP3_CAP_AMT_CB	drivers/e1000-7.x/src/e1000_hw.h	3213;"	d
IGP3_CAP_ASF	drivers/e1000-7.x/src/e1000_hw.h	3206;"	d
IGP3_CAP_DC_AUTO_SPEED	drivers/e1000-7.x/src/e1000_hw.h	3208;"	d
IGP3_CAP_INITIATE_TEAM	drivers/e1000-7.x/src/e1000_hw.h	3204;"	d
IGP3_CAP_LPLU	drivers/e1000-7.x/src/e1000_hw.h	3207;"	d
IGP3_CAP_MULT_QUEUE	drivers/e1000-7.x/src/e1000_hw.h	3210;"	d
IGP3_CAP_RSS	drivers/e1000-7.x/src/e1000_hw.h	3211;"	d
IGP3_CAP_SPD	drivers/e1000-7.x/src/e1000_hw.h	3209;"	d
IGP3_CAP_WFM	drivers/e1000-7.x/src/e1000_hw.h	3205;"	d
IGP3_KMRN_ACK_TIMEOUT	drivers/e1000-7.x/src/e1000_hw.h	3192;"	d
IGP3_KMRN_DIAG	drivers/e1000-7.x/src/e1000_hw.h	3189;"	d
IGP3_KMRN_DIAG_PCS_LOCK_LOSS	drivers/e1000-7.x/src/e1000_hw.h	3191;"	d
IGP3_KMRN_EC_DIS_INBAND	drivers/e1000-7.x/src/e1000_hw.h	3227;"	d
IGP3_KMRN_EXT_CTRL	drivers/e1000-7.x/src/e1000_hw.h	3226;"	d
IGP3_KMRN_FIFO_CTRL_STATS	drivers/e1000-7.x/src/e1000_hw.h	3183;"	d
IGP3_KMRN_INBAND_CTRL	drivers/e1000-7.x/src/e1000_hw.h	3187;"	d
IGP3_KMRN_PMC_EE_IDLE_LINK_DIS	drivers/e1000-7.x/src/e1000_hw.h	3218;"	d
IGP3_KMRN_PMC_K0S_ENTRY_LATENCY_MASK	drivers/e1000-7.x/src/e1000_hw.h	3219;"	d
IGP3_KMRN_PMC_K0S_MODE1_EN_100	drivers/e1000-7.x/src/e1000_hw.h	3221;"	d
IGP3_KMRN_PMC_K0S_MODE1_EN_GIGA	drivers/e1000-7.x/src/e1000_hw.h	3220;"	d
IGP3_KMRN_POWER_MNG_CTRL	drivers/e1000-7.x/src/e1000_hw.h	3185;"	d
IGP3_PHY_MISC_DUPLEX_MANUAL_SET	drivers/e1000-7.x/src/e1000_hw.h	3224;"	d
IGP3_PHY_PORT_CTRL	drivers/e1000-7.x/src/e1000_hw.h	3178;"	d
IGP3_PHY_RATE_ADAPT_CTRL	drivers/e1000-7.x/src/e1000_hw.h	3180;"	d
IGP3_PPC_JORDAN_EN	drivers/e1000-7.x/src/e1000_hw.h	3215;"	d
IGP3_PPC_JORDAN_GIGA_SPEED	drivers/e1000-7.x/src/e1000_hw.h	3216;"	d
IGP3_VR_CTRL	drivers/e1000-7.x/src/e1000_hw.h	3195;"	d
IGP3_VR_CTRL_MODE_MASK	drivers/e1000-7.x/src/e1000_hw.h	3198;"	d
IGP3_VR_CTRL_MODE_SHUT	drivers/e1000-7.x/src/e1000_hw.h	3197;"	d
IGP_ACTIVITY_LED_ENABLE	drivers/e1000-5.x/src/e1000_hw.h	1547;"	d
IGP_ACTIVITY_LED_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2323;"	d
IGP_ACTIVITY_LED_MASK	drivers/e1000-5.x/src/e1000_hw.h	1546;"	d
IGP_ACTIVITY_LED_MASK	drivers/e1000-7.x/src/e1000_hw.h	2322;"	d
IGP_LED3_MODE	drivers/e1000-5.x/src/e1000_hw.h	1548;"	d
IGP_LED3_MODE	drivers/e1000-7.x/src/e1000_hw.h	2324;"	d
ILOS_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1458;"	d
ILOS_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1676;"	d
ILOS_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2489;"	d
IMS_ENABLE_MASK	drivers/e1000-4.x/src/e1000_hw.h	312;"	d
IMS_ENABLE_MASK	drivers/e1000-5.x/src/e1000_hw.h	445;"	d
IMS_ENABLE_MASK	drivers/e1000-7.x/src/e1000_hw.h	563;"	d
IMS_ICH8LAN_ENABLE_MASK	drivers/e1000-7.x/src/e1000_hw.h	575;"	d
INCLUDES	bsdmodule/Makefile	/^INCLUDES = -nostdinc -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	etc/pkg-bsdmodule.mk	/^INCLUDES ?= -I$(clickincludedir) -I$(clicksrcdir)$/;"	m
INCLUDES	etc/pkg-linuxmodule-26.mk	/^INCLUDES ?= $(CLICKINCLUDES)$/;"	m
INCLUDES	etc/pkg-linuxmodule.mk	/^INCLUDES ?= -I$(clickincludedir) -I$(clicksrcdir)$/;"	m
INCLUDES	etc/pkg-userlevel.mk	/^INCLUDES ?= $(CLICKINCLUDES)$/;"	m
INCLUDES	linuxmodule/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	ns/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	tools/click-align/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	tools/click-check/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	tools/click-combine/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	tools/click-devirtualize/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	tools/click-fastclassifier/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	tools/click-flatten/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	tools/click-install/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	tools/click-mkmindriver/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	tools/click-pretty/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	tools/click-undead/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	tools/click-xform/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	tools/click2xml/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	tools/lib/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDES	userlevel/Makefile	/^INCLUDES = -I$(top_builddir)\/include -I$(top_srcdir)\/include \\$/;"	m
INCLUDE_KSYMS	linuxmodule/Makefile	/^INCLUDE_KSYMS = yes$/;"	m
INCLUDE_TEST_CODE	apps/csclient/csclient.cc	24;"	d	file:
INCSEQNO_HH	elements/grid/incseqno.hh	2;"	d
INC_IFP_STAT	elements/local/OpenFlow/lib/ofpstat.cc	41;"	d	file:
INGROUPMASK	elements/analysis/aggregatefilter.hh	/^	   NINGROUP = 1 << GROUPSHIFT, INGROUPMASK = NINGROUP - 1,$/;"	e	enum:AggregateFilter::__anon254
INIT_DATA_h0	elements/ipsec/sha1_impl.cc	243;"	d	file:
INIT_DATA_h1	elements/ipsec/sha1_impl.cc	244;"	d	file:
INIT_DATA_h2	elements/ipsec/sha1_impl.cc	245;"	d	file:
INIT_DATA_h3	elements/ipsec/sha1_impl.cc	246;"	d	file:
INIT_DATA_h4	elements/ipsec/sha1_impl.cc	247;"	d	file:
INIT_TQUEUE	drivers/e1000-5.x/src/kcompat.h	430;"	d
INIT_TQUEUE	drivers/e1000-7.x/src/kcompat.h	585;"	d
INIT_WORK	drivers/e1000-5.x/src/kcompat.h	583;"	d
INIT_WORK	drivers/e1000-7.x/src/kcompat.h	842;"	d
INLINE_PORTS	include/click/element.hh	/^    enum { INLINE_PORTS = 4 };$/;"	e	enum:Element::__anon450
INODE_INFO	linuxmodule/clickfs.cc	131;"	d	file:
INODE_INFO	linuxmodule/clickfs.cc	133;"	d	file:
INO_DEBUG	include/click/ino.hh	28;"	d
INO_DIRTYPE	include/click/ino.hh	9;"	d
INO_DT_GLOBAL	include/click/ino.hh	16;"	d
INO_DT_HAS_H	include/click/ino.hh	17;"	d
INO_DT_HAS_N	include/click/ino.hh	18;"	d
INO_DT_HH	include/click/ino.hh	13;"	d
INO_DT_HN	include/click/ino.hh	15;"	d
INO_DT_HU	include/click/ino.hh	14;"	d
INO_DT_U	include/click/ino.hh	12;"	d
INO_ELEMENTNO	include/click/ino.hh	10;"	d
INO_ENUMBERSDIR	include/click/ino.hh	25;"	d
INO_GLOBALDIR	include/click/ino.hh	24;"	d
INO_HANDLERNO	include/click/ino.hh	11;"	d
INO_ISHANDLER	include/click/ino.hh	26;"	d
INO_MKHANDLER	include/click/ino.hh	20;"	d
INO_MKHHDIR	include/click/ino.hh	21;"	d
INO_MKHNDIR	include/click/ino.hh	23;"	d
INO_MKHUDIR	include/click/ino.hh	22;"	d
INSN_APPEND	elements/standard/script.hh	/^	INSN_SAVE, INSN_APPEND,$/;"	e	enum:Script::Insn
INSN_GOTO	elements/standard/script.hh	/^	INSN_LABEL, INSN_GOTO, INSN_RETURN, insn_returnq,$/;"	e	enum:Script::Insn
INSN_INITIAL	elements/standard/script.hh	/^	INSN_INITIAL, INSN_WAIT_STEP, INSN_WAIT_TIME,$/;"	e	enum:Script::Insn
INSN_LABEL	elements/standard/script.hh	/^	INSN_LABEL, INSN_GOTO, INSN_RETURN, insn_returnq,$/;"	e	enum:Script::Insn
INSN_LOOP_PSEUDO	elements/standard/script.hh	/^	INSN_WAIT_PSEUDO, INSN_LOOP_PSEUDO,$/;"	e	enum:Script::Insn
INSN_PRINT	elements/standard/script.hh	/^	INSN_PRINT, INSN_PRINTN, INSN_READ, INSN_READQ, INSN_WRITE, INSN_WRITEQ,$/;"	e	enum:Script::Insn
INSN_PRINTN	elements/standard/script.hh	/^	INSN_PRINT, INSN_PRINTN, INSN_READ, INSN_READQ, INSN_WRITE, INSN_WRITEQ,$/;"	e	enum:Script::Insn
INSN_READ	elements/standard/script.hh	/^	INSN_PRINT, INSN_PRINTN, INSN_READ, INSN_READQ, INSN_WRITE, INSN_WRITEQ,$/;"	e	enum:Script::Insn
INSN_READQ	elements/standard/script.hh	/^	INSN_PRINT, INSN_PRINTN, INSN_READ, INSN_READQ, INSN_WRITE, INSN_WRITEQ,$/;"	e	enum:Script::Insn
INSN_RETURN	elements/standard/script.hh	/^	INSN_LABEL, INSN_GOTO, INSN_RETURN, insn_returnq,$/;"	e	enum:Script::Insn
INSN_SAVE	elements/standard/script.hh	/^	INSN_SAVE, INSN_APPEND,$/;"	e	enum:Script::Insn
INSN_SET	elements/standard/script.hh	/^	INSN_SET, insn_setq, insn_init, insn_initq, insn_export, insn_exportq,$/;"	e	enum:Script::Insn
INSN_WAIT_PSEUDO	elements/standard/script.hh	/^	INSN_WAIT_PSEUDO, INSN_LOOP_PSEUDO,$/;"	e	enum:Script::Insn
INSN_WAIT_STEP	elements/standard/script.hh	/^	INSN_INITIAL, INSN_WAIT_STEP, INSN_WAIT_TIME,$/;"	e	enum:Script::Insn
INSN_WAIT_TIME	elements/standard/script.hh	/^	INSN_INITIAL, INSN_WAIT_STEP, INSN_WAIT_TIME,$/;"	e	enum:Script::Insn
INSN_WRITE	elements/standard/script.hh	/^	INSN_PRINT, INSN_PRINTN, INSN_READ, INSN_READQ, INSN_WRITE, INSN_WRITEQ,$/;"	e	enum:Script::Insn
INSN_WRITEQ	elements/standard/script.hh	/^	INSN_PRINT, INSN_PRINTN, INSN_READ, INSN_READQ, INSN_WRITE, INSN_WRITEQ,$/;"	e	enum:Script::Insn
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	bsdmodule/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	doc/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	etc/libclick/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	linuxmodule/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	ns/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tools/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tools/click-align/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tools/click-check/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tools/click-combine/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tools/click-devirtualize/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tools/click-fastclassifier/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tools/click-flatten/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tools/click-install/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tools/click-mkmindriver/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tools/click-pretty/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tools/click-undead/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tools/click-xform/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tools/click2xml/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	tools/lib/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	userlevel/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALLLIBS	ns/Makefile	/^INSTALLLIBS = libns$(MINDRIVER)click.so$/;"	m
INSTALLLIBS	ns/Makefile	/^INSTALLLIBS = libnsclick.so$/;"	m
INSTALLLIBS	userlevel/Makefile	/^INSTALLLIBS = libclick.a$/;"	m
INSTALLOBJS	bsdmodule/Makefile	/^INSTALLOBJS = click.ko$/;"	m
INSTALLOBJS	linuxmodule/Makefile	/^INSTALLOBJS = $(DRIVER).o proclikefs.o$/;"	m
INSTALLPROGS	userlevel/Makefile	/^INSTALLPROGS = $(DRIVER)$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = $(INSTALL) -m 644$/;"	m
INSTALL_DATA	bsdmodule/Makefile	/^INSTALL_DATA = $(INSTALL) -m 644$/;"	m
INSTALL_DATA	doc/Makefile	/^INSTALL_DATA = $(INSTALL) -m 644$/;"	m
INSTALL_DATA	etc/libclick/Makefile	/^INSTALL_DATA = $(INSTALL) -m 644$/;"	m
INSTALL_DATA	linuxmodule/Makefile	/^INSTALL_DATA = $(INSTALL) -m 644$/;"	m
INSTALL_DATA	tools/lib/Makefile	/^INSTALL_DATA = $(INSTALL) -m 644$/;"	m
INSTALL_DATA_IF_CHANGED	Makefile	/^INSTALL_DATA_IF_CHANGED = $(INSTALL_IF_CHANGED) -m 644$/;"	m
INSTALL_DATA_IF_CHANGED	etc/libclick/Makefile	/^INSTALL_DATA_IF_CHANGED = $(INSTALL_IF_CHANGED) -m 644$/;"	m
INSTALL_DATA_IF_CHANGED	tools/lib/Makefile	/^INSTALL_DATA_IF_CHANGED = $(INSTALL_IF_CHANGED) -m 644$/;"	m
INSTALL_IF_CHANGED	Makefile	/^INSTALL_IF_CHANGED = $(INSTALL) -C$/;"	m
INSTALL_IF_CHANGED	etc/libclick/Makefile	/^INSTALL_IF_CHANGED = $(INSTALL) -C$/;"	m
INSTALL_IF_CHANGED	tools/lib/Makefile	/^INSTALL_IF_CHANGED = $(INSTALL) -C$/;"	m
INSTALL_TARGETS	Makefile	/^INSTALL_TARGETS =  install-userlevel install-tools$/;"	m
INSTALL_TARGETS	tools/Makefile	/^INSTALL_TARGETS =  install-click-align install-click-check install-click-combine install-click-devirtualize install-click-fastclassifier install-click-flatten install-click-mkmindriver install-click-pretty install-click-undead install-click-xform install-click2xml$/;"	m
INSTDIR	drivers/e1000-4.x/src/Makefile	/^  INSTDIR := \/lib\/modules\/$(KVER)\/kernel\/drivers\/net$/;"	m
INSTDIR	drivers/e1000-4.x/src/Makefile	/^  INSTDIR := \/lib\/modules\/$(KVER)\/net$/;"	m
INSTDIR	drivers/e1000-5.x/src/Makefile	/^INSTDIR := \/lib\/modules\/$(KVER)\/kernel\/drivers\/net\/e1000$/;"	m
INSTDIR	drivers/e1000-7.x/src/Makefile	/^INSTDIR := \/lib\/modules\/$(KVER)\/kernel\/drivers\/net\/e1000$/;"	m
INSTRS_OPT	tools/click-devirtualize/click-devirtualize.cc	54;"	d	file:
INST_RETIRED	include/click/perfctr-i586.hh	13;"	d
INTEL_E1000_ETHERNET_DEVICE	drivers/e1000-5.x/src/e1000.h	88;"	d
INTEL_E1000_ETHERNET_DEVICE	drivers/e1000-7.x/src/e1000.h	88;"	d
INVALID_VLAN_ID	drivers/e1000-4.x/src/ans.h	84;"	d
IORESOURCE_IO	drivers/e1000-4.x/src/kcompat.h	169;"	d
IORESOURCE_IO	drivers/e1000-4.x/src/kcompat.h	170;"	d
IP6Address	include/click/ip6address.hh	/^    explicit inline IP6Address(IPAddress x) {$/;"	f	class:IP6Address
IP6Address	include/click/ip6address.hh	/^    explicit inline IP6Address(const click_in6_addr &x)$/;"	f	class:IP6Address
IP6Address	include/click/ip6address.hh	/^    explicit inline IP6Address(const unsigned char *x) {$/;"	f	class:IP6Address
IP6Address	include/click/ip6address.hh	/^    inline IP6Address() {$/;"	f	class:IP6Address
IP6Address	include/click/ip6address.hh	/^    inline IP6Address(const uninitialized_t &unused) {$/;"	f	class:IP6Address
IP6Address	include/click/ip6address.hh	/^class IP6Address { public:$/;"	c
IP6Address	lib/ip6address.cc	/^IP6Address::IP6Address(const String &str)$/;"	f	class:IP6Address
IP6AddressArg	include/click/ip6address.hh	/^struct IP6AddressArg {$/;"	s
IP6Encap	elements/ip6/ip6encap.cc	/^IP6Encap::IP6Encap()$/;"	f	class:IP6Encap
IP6Encap	elements/ip6/ip6encap.hh	/^class IP6Encap : public Element { public:$/;"	c
IP6FlowID	include/click/ip6flowid.hh	/^IP6FlowID::IP6FlowID()$/;"	f	class:IP6FlowID
IP6FlowID	include/click/ip6flowid.hh	/^IP6FlowID::IP6FlowID(const IP6Address &saddr, uint16_t sport,$/;"	f	class:IP6FlowID
IP6FlowID	include/click/ip6flowid.hh	/^class IP6FlowID { public:$/;"	c
IP6FlowID	lib/ip6flowid.cc	/^IP6FlowID::IP6FlowID(Packet *p)$/;"	f	class:IP6FlowID
IP6FlowID_linker_trick	lib/ip6flowid.cc	/^int IP6FlowID_linker_trick;$/;"	v
IP6Fragmenter	elements/ip6/ip6fragmenter.cc	/^IP6Fragmenter::IP6Fragmenter()$/;"	f	class:IP6Fragmenter
IP6Fragmenter	elements/ip6/ip6fragmenter.hh	/^class IP6Fragmenter : public Element {$/;"	c
IP6Fragmenter_read_drops	elements/ip6/ip6fragmenter.cc	/^IP6Fragmenter_read_drops(Element *xf, void *)$/;"	f	file:
IP6Fragmenter_read_fragments	elements/ip6/ip6fragmenter.cc	/^IP6Fragmenter_read_fragments(Element *xf, void *)$/;"	f	file:
IP6Mirror	elements/ip6/ip6mirror.cc	/^IP6Mirror::IP6Mirror()$/;"	f	class:IP6Mirror
IP6Mirror	elements/ip6/ip6mirror.hh	/^class IP6Mirror : public Element {$/;"	c
IP6NDAdvertiser	elements/ethernet/ip6ndadvertiser.cc	/^IP6NDAdvertiser::IP6NDAdvertiser()$/;"	f	class:IP6NDAdvertiser
IP6NDAdvertiser	elements/ethernet/ip6ndadvertiser.hh	/^class IP6NDAdvertiser : public Element { public:$/;"	c
IP6NDSolicitor	elements/ethernet/ip6ndsolicitor.cc	/^IP6NDSolicitor::IP6NDSolicitor()$/;"	f	class:IP6NDSolicitor
IP6NDSolicitor	elements/ethernet/ip6ndsolicitor.hh	/^class IP6NDSolicitor : public Element {$/;"	c
IP6NDSolicitor_read_stats	elements/ethernet/ip6ndsolicitor.cc	/^IP6NDSolicitor_read_stats(Element *e, void *)$/;"	f	file:
IP6PrefixArg	include/click/ip6address.hh	/^    IP6PrefixArg(bool allow_bare_address_ = false)$/;"	f	struct:IP6PrefixArg
IP6PrefixArg	include/click/ip6address.hh	/^struct IP6PrefixArg {$/;"	s
IP6Print	elements/ip6/ip6print.cc	/^IP6Print::IP6Print()$/;"	f	class:IP6Print
IP6Print	elements/ip6/ip6print.hh	/^class IP6Print : public Element { public:$/;"	c
IP6RouteTable	elements/ip6/ip6routetable.hh	/^class IP6RouteTable : public Element { public:$/;"	c
IP6Table	include/click/ip6table.hh	/^class IP6Table { public:$/;"	c
IP6Table	lib/ip6table.cc	/^IP6Table::IP6Table()$/;"	f	class:IP6Table
IP6_CHECK_V	include/clicknet/ip6.h	77;"	d
IP6_CLASS_MASK	include/clicknet/ip6.h	70;"	d
IP6_CLASS_SHIFT	include/clicknet/ip6.h	71;"	d
IP6_DSCP_MASK	include/clicknet/ip6.h	72;"	d
IP6_DSCP_SHIFT	include/clicknet/ip6.h	73;"	d
IP6_FLOW_MASK	include/clicknet/ip6.h	68;"	d
IP6_FLOW_SHIFT	include/clicknet/ip6.h	69;"	d
IP6_V_MASK	include/clicknet/ip6.h	74;"	d
IP6_V_SHIFT	include/clicknet/ip6.h	75;"	d
IPADDR_LIST_BADSRC	elements/ip/checkipheader.cc	36;"	d	file:
IPADDR_LIST_BADSRC_OLD	elements/ip/checkipheader.cc	37;"	d	file:
IPADDR_LIST_INTERFACES	elements/ip/checkipheader.cc	35;"	d	file:
IPAddrFlow	elements/ip/ipaddrrewriter.hh	/^	IPAddrFlow(const IPFlowID &flowid, int output,$/;"	f	class:IPAddrRewriter::IPAddrFlow
IPAddrFlow	elements/ip/ipaddrrewriter.hh	/^    class IPAddrFlow : public IPRewriterFlow { public:$/;"	c	class:IPAddrRewriter
IPAddrPairFlow	elements/ip/ipaddrpairrewriter.hh	/^	IPAddrPairFlow(const IPFlowID &flowid, int output,$/;"	f	class:IPAddrPairRewriter::IPAddrPairFlow
IPAddrPairFlow	elements/ip/ipaddrpairrewriter.hh	/^    class IPAddrPairFlow : public IPRewriterFlow { public:$/;"	c	class:IPAddrPairRewriter
IPAddrPairRewriter	elements/ip/ipaddrpairrewriter.cc	/^IPAddrPairRewriter::IPAddrPairRewriter()$/;"	f	class:IPAddrPairRewriter
IPAddrPairRewriter	elements/ip/ipaddrpairrewriter.hh	/^class IPAddrPairRewriter : public IPRewriterBase { public:$/;"	c
IPAddrRewriter	elements/ip/ipaddrrewriter.cc	/^IPAddrRewriter::IPAddrRewriter()$/;"	f	class:IPAddrRewriter
IPAddrRewriter	elements/ip/ipaddrrewriter.hh	/^class IPAddrRewriter : public IPRewriterBase { public:$/;"	c
IPAddress	include/click/ipaddress.hh	/^    explicit IPAddress(const unsigned char *data) {$/;"	f	class:IPAddress
IPAddress	include/click/ipaddress.hh	/^    explicit inline IPAddress(int x)$/;"	f	class:IPAddress
IPAddress	include/click/ipaddress.hh	/^    explicit inline IPAddress(long x)$/;"	f	class:IPAddress
IPAddress	include/click/ipaddress.hh	/^    explicit inline IPAddress(unsigned long x)$/;"	f	class:IPAddress
IPAddress	include/click/ipaddress.hh	/^    inline IPAddress()$/;"	f	class:IPAddress
IPAddress	include/click/ipaddress.hh	/^    inline IPAddress(const uninitialized_t &unused) {$/;"	f	class:IPAddress
IPAddress	include/click/ipaddress.hh	/^    inline IPAddress(struct in_addr x)$/;"	f	class:IPAddress
IPAddress	include/click/ipaddress.hh	/^    inline IPAddress(unsigned x)$/;"	f	class:IPAddress
IPAddress	include/click/ipaddress.hh	/^class IPAddress { public:$/;"	c
IPAddress	lib/ipaddress.cc	/^IPAddress::IPAddress(const String &str)$/;"	f	class:IPAddress
IPAddressArg	include/click/ipaddress.hh	/^struct IPAddressArg {$/;"	s
IPCLASSIFIER_OFFSET_MAC	tools/click-fastclassifier/fc_ipclassifier.cc	27;"	d	file:
IPCLASSIFIER_OFFSET_NET	tools/click-fastclassifier/fc_ipclassifier.cc	28;"	d	file:
IPCLASSIFIER_OFFSET_TRANSP	tools/click-fastclassifier/fc_ipclassifier.cc	29;"	d	file:
IPClassifier	elements/ip/ipclassifier.cc	/^IPClassifier::IPClassifier()$/;"	f	class:IPClassifier
IPClassifier	elements/ip/ipclassifier.hh	/^class IPClassifier : public IPFilter { public:$/;"	c
IPEncap	elements/ip/ipencap.cc	/^IPEncap::IPEncap()$/;"	f	class:IPEncap
IPEncap	elements/ip/ipencap.hh	/^class IPEncap : public Element { public:$/;"	c
IPField	elements/ip/ipfieldinfo.cc	/^IPField::IPField(int proto, int bit_offset, int bit_length)$/;"	f	class:IPField
IPField	elements/ip/ipfieldinfo.hh	/^    IPField()			: _val(-1) { }$/;"	f	class:IPField
IPField	elements/ip/ipfieldinfo.hh	/^    IPField(int32_t f)		: _val(f) { }$/;"	f	class:IPField
IPField	elements/ip/ipfieldinfo.hh	/^class IPField { public:$/;"	c
IPFieldInfo	elements/ip/ipfieldinfo.hh	/^    IPFieldInfo()			{ }$/;"	f	class:IPFieldInfo
IPFieldInfo	elements/ip/ipfieldinfo.hh	/^class IPFieldInfo : public Element { public:$/;"	c
IPFilter	elements/ip/ipfilter.cc	/^IPFilter::IPFilter()$/;"	f	class:IPFilter
IPFilter	elements/ip/ipfilter.hh	/^class IPFilter : public Element { public:$/;"	c
IPFilterProgram	elements/ip/ipfilter.hh	/^    typedef Classification::Wordwise::CompressedProgram IPFilterProgram;$/;"	t	class:IPFilter
IPFlowID	include/click/ipflowid.hh	/^    IPFlowID()$/;"	f	class:IPFlowID
IPFlowID	include/click/ipflowid.hh	/^    IPFlowID(IPAddress saddr, uint16_t sport, IPAddress daddr, uint16_t dport)$/;"	f	class:IPFlowID
IPFlowID	include/click/ipflowid.hh	/^    inline IPFlowID(const uninitialized_t &unused) {$/;"	f	class:IPFlowID
IPFlowID	include/click/ipflowid.hh	/^class IPFlowID { public:$/;"	c
IPFlowID	lib/ipflowid.cc	/^IPFlowID::IPFlowID(const Packet *p, bool reverse)$/;"	f	class:IPFlowID
IPFlowID	lib/ipflowid.cc	/^IPFlowID::IPFlowID(const click_ip *iph, bool reverse)$/;"	f	class:IPFlowID
IPFlowRawSockets	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::IPFlowRawSockets()$/;"	f	class:IPFlowRawSockets
IPFlowRawSockets	elements/userlevel/ipflowrawsockets.hh	/^class IPFlowRawSockets : public Element, public AggregateListener { public:$/;"	c
IPFlowRawSockets_get_packet	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets_get_packet(u_char* clientdata,$/;"	f
IPFragReset	elements/local/FlowNet/scheduler/IPFragReset.cc	/^IPFragReset::IPFragReset()$/;"	f	class:IPFragReset
IPFragReset	elements/local/FlowNet/scheduler/IPFragReset.hh	/^class IPFragReset : public Element { public:$/;"	c
IPFragmentMap	elements/ip/ipfragmentmap.hh	/^    IPFragmentMap(unsigned capacity)$/;"	f	class:IPFragmentMap
IPFragmentMap	elements/ip/ipfragmentmap.hh	/^class IPFragmentMap { public:$/;"	c
IPFragmenter	elements/ip/ipfragmenter.cc	/^IPFragmenter::IPFragmenter()$/;"	f	class:IPFragmenter
IPFragmenter	elements/ip/ipfragmenter.hh	/^class IPFragmenter : public Element { public:$/;"	c
IPGWOptions	elements/ip/ipgwoptions.cc	/^IPGWOptions::IPGWOptions()$/;"	f	class:IPGWOptions
IPGWOptions	elements/ip/ipgwoptions.hh	/^class IPGWOptions : public Element { public:$/;"	c
IPH_MEM_USED	elements/ip/ipreassembler.hh	/^	   IPH_MEM_USED = 40 };$/;"	e	enum:IPReassembler::__anon321
IPInputCombo	elements/ip/ipinputcombo.cc	/^IPInputCombo::IPInputCombo()$/;"	f	class:IPInputCombo
IPInputCombo	elements/ip/ipinputcombo.hh	/^class IPInputCombo : public Element {$/;"	c
IPIter	elements/wifi/linktable.hh	/^  typedef IPTable::const_iterator IPIter;$/;"	t	class:LinkTable
IPMap	elements/grid/dsrarptable.hh	/^  typedef HashMap<IPAddress, EtherAddress> IPMap;$/;"	t	class:DSRArpTable
IPMapper	elements/ip/iprewriterbase.hh	/^    IPMapper()				{ }$/;"	f	class:IPMapper
IPMapper	elements/ip/iprewriterbase.hh	/^class IPMapper { public:$/;"	c
IPMirror	elements/ip/ipmirror.cc	/^IPMirror::IPMirror()$/;"	f	class:IPMirror
IPMirror	elements/ip/ipmirror.hh	/^class IPMirror : public Element { public:$/;"	c
IPNameInfo	elements/ip/ipnameinfo.hh	/^class IPNameInfo : public Element { public:$/;"	c
IPOPT_EOL	include/clicknet/ip.h	109;"	d
IPOPT_LSRR	include/clicknet/ip.h	114;"	d
IPOPT_NOP	include/clicknet/ip.h	110;"	d
IPOPT_RA	include/clicknet/ip.h	117;"	d
IPOPT_RR	include/clicknet/ip.h	111;"	d
IPOPT_SATID	include/clicknet/ip.h	115;"	d
IPOPT_SECURITY	include/clicknet/ip.h	113;"	d
IPOPT_SSRR	include/clicknet/ip.h	116;"	d
IPOPT_TS	include/clicknet/ip.h	112;"	d
IPOutputCombo	elements/ip/ipoutputcombo.cc	/^IPOutputCombo::IPOutputCombo()$/;"	f	class:IPOutputCombo
IPOutputCombo	elements/ip/ipoutputcombo.hh	/^class IPOutputCombo : public Element {$/;"	c
IPPair	elements/wifi/linktable.hh	/^    IPPair()$/;"	f	class:IPPair
IPPair	elements/wifi/linktable.hh	/^    IPPair(IPAddress from, IPAddress to)$/;"	f	class:IPPair
IPPair	elements/wifi/linktable.hh	/^class IPPair {$/;"	c
IPPortArg	include/click/ipaddress.hh	/^    IPPortArg(int p)$/;"	f	struct:IPPortArg
IPPortArg	include/click/ipaddress.hh	/^struct IPPortArg {$/;"	s
IPPrefixArg	include/click/ipaddress.hh	/^    IPPrefixArg(bool allow_bare_address_ = false)$/;"	f	struct:IPPrefixArg
IPPrefixArg	include/click/ipaddress.hh	/^struct IPPrefixArg {$/;"	s
IPPrint	elements/ip/ipprint.cc	/^IPPrint::IPPrint()$/;"	f	class:IPPrint
IPPrint	elements/ip/ipprint.hh	/^class IPPrint : public Element { public:$/;"	c
IPREASSEMBLER_ANNO_OFFSET	include/click/packet_anno.hh	83;"	d
IPREASSEMBLER_ANNO_SIZE	include/click/packet_anno.hh	84;"	d
IPRateMonitor	elements/ip/ipratemon.cc	/^IPRateMonitor::IPRateMonitor()$/;"	f	class:IPRateMonitor
IPRateMonitor	elements/ip/ipratemon.hh	/^class IPRateMonitor : public Element {$/;"	c
IPReassembler	elements/ip/ipreassembler.cc	/^IPReassembler::IPReassembler()$/;"	f	class:IPReassembler
IPReassembler	elements/ip/ipreassembler.hh	/^class IPReassembler : public Element { public:$/;"	c
IPRewriter	elements/tcpudp/iprewriter.cc	/^IPRewriter::IPRewriter()$/;"	f	class:IPRewriter
IPRewriter	elements/tcpudp/iprewriter.hh	/^class IPRewriter : public TCPRewriter { public:$/;"	c
IPRewriterBase	elements/ip/iprewriterbase.cc	/^IPRewriterBase::IPRewriterBase()$/;"	f	class:IPRewriterBase
IPRewriterBase	elements/ip/iprewriterbase.hh	/^class IPRewriterBase : public Element { public:$/;"	c
IPRewriterEntry	elements/ip/iprwmapping.hh	/^    IPRewriterEntry() {$/;"	f	class:IPRewriterEntry
IPRewriterEntry	elements/ip/iprwmapping.hh	/^class IPRewriterEntry { public:$/;"	c
IPRewriterFlow	elements/ip/iprwmapping.cc	/^IPRewriterFlow::IPRewriterFlow(const IPFlowID &flowid, int output,$/;"	f	class:IPRewriterFlow
IPRewriterFlow	elements/ip/iprwmapping.hh	/^class IPRewriterFlow { public:$/;"	c
IPRewriterHeap	elements/ip/iprewriterbase.hh	/^    IPRewriterHeap()$/;"	f	class:IPRewriterHeap
IPRewriterHeap	elements/ip/iprewriterbase.hh	/^class IPRewriterHeap { public:$/;"	c
IPRewriterInput	elements/ip/iprewriterbase.hh	/^    IPRewriterInput()$/;"	f	struct:IPRewriterInput
IPRewriterInput	elements/ip/iprewriterbase.hh	/^struct IPRewriterInput {$/;"	s
IPRewriterPattern	elements/ip/iprwpattern.cc	/^IPRewriterPattern::IPRewriterPattern(const IPAddress &saddr, int sport,$/;"	f	class:IPRewriterPattern
IPRewriterPattern	elements/ip/iprwpattern.hh	/^class IPRewriterPattern { public:$/;"	c
IPRewriterPatterns	elements/ip/iprwpatterns.cc	/^IPRewriterPatterns::IPRewriterPatterns()$/;"	f	class:IPRewriterPatterns
IPRewriterPatterns	elements/ip/iprwpatterns.hh	/^class IPRewriterPatterns : public Element { public:$/;"	c
IPRoute	elements/ip/iproutetable.hh	/^    IPRoute()			: port(-1) { }$/;"	f	struct:IPRoute
IPRoute	elements/ip/iproutetable.hh	/^    IPRoute(IPAddress a, IPAddress m, IPAddress g, int p)$/;"	f	struct:IPRoute
IPRoute	elements/ip/iproutetable.hh	/^struct IPRoute {$/;"	s
IPRouteTable	elements/ip/iproutetable.hh	/^class IPRouteTable : public Element { public:$/;"	c
IPSEC_SA_DATA_REFERENCE_ANNO	include/click/packet_anno.hh	118;"	d
IPSEC_SA_DATA_REFERENCE_ANNO	include/click/packet_anno.hh	132;"	d
IPSEC_SA_DATA_REFERENCE_ANNO_OFFSET	include/click/packet_anno.hh	116;"	d
IPSEC_SA_DATA_REFERENCE_ANNO_OFFSET	include/click/packet_anno.hh	130;"	d
IPSEC_SA_DATA_REFERENCE_ANNO_SIZE	include/click/packet_anno.hh	117;"	d
IPSEC_SA_DATA_REFERENCE_ANNO_SIZE	include/click/packet_anno.hh	131;"	d
IPSEC_SPI_ANNO	include/click/packet_anno.hh	106;"	d
IPSEC_SPI_ANNO_OFFSET	include/click/packet_anno.hh	104;"	d
IPSEC_SPI_ANNO_SIZE	include/click/packet_anno.hh	105;"	d
IPSummaryDump	elements/analysis/ipsumdump_anno.cc	/^namespace IPSummaryDump {$/;"	n	file:
IPSummaryDump	elements/analysis/ipsumdump_icmp.cc	/^namespace IPSummaryDump {$/;"	n	file:
IPSummaryDump	elements/analysis/ipsumdump_ip.cc	/^namespace IPSummaryDump {$/;"	n	file:
IPSummaryDump	elements/analysis/ipsumdump_link.cc	/^namespace IPSummaryDump {$/;"	n	file:
IPSummaryDump	elements/analysis/ipsumdump_payload.cc	/^namespace IPSummaryDump {$/;"	n	file:
IPSummaryDump	elements/analysis/ipsumdump_tcp.cc	/^namespace IPSummaryDump {$/;"	n	file:
IPSummaryDump	elements/analysis/ipsumdump_udp.cc	/^namespace IPSummaryDump {$/;"	n	file:
IPSummaryDump	elements/analysis/ipsumdumpinfo.cc	/^namespace IPSummaryDump {$/;"	n	file:
IPSummaryDump	elements/analysis/ipsumdumpinfo.hh	/^namespace IPSummaryDump {$/;"	n
IPSummaryDumpInfo	elements/analysis/ipsumdumpinfo.hh	/^class IPSummaryDumpInfo { public:$/;"	c
IPSummaryDump_Anno	elements/analysis/ipsumdump_anno.hh	/^class IPSummaryDump_Anno { public:$/;"	c
IPSummaryDump_ICMP	elements/analysis/ipsumdump_icmp.hh	/^class IPSummaryDump_ICMP { public:$/;"	c
IPSummaryDump_IP	elements/analysis/ipsumdump_ip.hh	/^class IPSummaryDump_IP { public:$/;"	c
IPSummaryDump_Link	elements/analysis/ipsumdump_link.hh	/^class IPSummaryDump_Link { public:$/;"	c
IPSummaryDump_Payload	elements/analysis/ipsumdump_payload.hh	/^class IPSummaryDump_Payload { public:$/;"	c
IPSummaryDump_TCP	elements/analysis/ipsumdump_tcp.hh	/^class IPSummaryDump_TCP { public:$/;"	c
IPSummaryDump_UDP	elements/analysis/ipsumdump_udp.hh	/^class IPSummaryDump_UDP { public:$/;"	c
IPTable	elements/wifi/linktable.hh	/^  typedef HashMap<IPAddress, IPAddress> IPTable;$/;"	t	class:LinkTable
IPTable	include/click/iptable.hh	/^class IPTable { public:$/;"	c
IPTable	lib/iptable.cc	/^IPTable::IPTable()$/;"	f	class:IPTable
IP_ADDR_LEN	elements/local/OpenFlow/lib/packets.hh	206;"	d
IP_ARGS	elements/local/OpenFlow/lib/packets.hh	184;"	d
IP_BYTE_OFF	elements/ip/ipreassembler.cc	36;"	d	file:
IP_DF	include/clicknet/ip.h	44;"	d
IP_DONT_FRAGMENT	elements/local/OpenFlow/lib/packets.hh	200;"	d
IP_DSCPMASK	include/clicknet/ip.h	34;"	d
IP_ECNMASK	include/clicknet/ip.h	35;"	d
IP_ECN_CE	include/clicknet/ip.h	39;"	d
IP_ECN_ECT1	include/clicknet/ip.h	37;"	d
IP_ECN_ECT2	include/clicknet/ip.h	38;"	d
IP_ECN_NOT_ECT	include/clicknet/ip.h	36;"	d
IP_ETHERTYPE	elements/userlevel/fakepcap.cc	116;"	d	file:
IP_FIRSTFRAG	include/clicknet/ip.h	120;"	d
IP_FMT	elements/local/OpenFlow/lib/packets.hh	183;"	d
IP_FRAG_OFF_MASK	elements/local/OpenFlow/lib/packets.hh	202;"	d
IP_HEADER_LEN	elements/local/OpenFlow/lib/packets.hh	208;"	d
IP_IHL	elements/local/OpenFlow/lib/packets.hh	191;"	d
IP_IHL_VER	elements/local/OpenFlow/lib/packets.hh	192;"	d
IP_ISFRAG	include/clicknet/ip.h	119;"	d
IP_IS_FRAGMENT	elements/local/OpenFlow/lib/packets.hh	203;"	d
IP_MF	include/clicknet/ip.h	45;"	d
IP_MORE_FRAGMENTS	elements/local/OpenFlow/lib/packets.hh	201;"	d
IP_OFFMASK	include/clicknet/ip.h	46;"	d
IP_PROTOCOL_TCP	drivers/e1000-4.x/src/e1000_hw.h	292;"	d
IP_PROTOCOL_TCP	drivers/e1000-5.x/src/e1000_hw.h	425;"	d
IP_PROTOCOL_TCP	drivers/e1000-7.x/src/e1000_hw.h	543;"	d
IP_PROTOCOL_UDP	drivers/e1000-4.x/src/e1000_hw.h	293;"	d
IP_PROTOCOL_UDP	drivers/e1000-5.x/src/e1000_hw.h	426;"	d
IP_PROTOCOL_UDP	drivers/e1000-7.x/src/e1000_hw.h	544;"	d
IP_PROTO_ARGUS	include/clicknet/ip.h	67;"	d
IP_PROTO_BBN	include/clicknet/ip.h	64;"	d
IP_PROTO_BRSATMON	include/clicknet/ip.h	98;"	d
IP_PROTO_CFTP	include/clicknet/ip.h	91;"	d
IP_PROTO_CHAOS	include/clicknet/ip.h	70;"	d
IP_PROTO_DCCP	include/clicknet/ip.h	87;"	d
IP_PROTO_DCN	include/clicknet/ip.h	73;"	d
IP_PROTO_DSR	elements/grid/dsr.hh	132;"	d
IP_PROTO_EGP	include/clicknet/ip.h	62;"	d
IP_PROTO_EMCON	include/clicknet/ip.h	68;"	d
IP_PROTO_GGP	include/clicknet/ip.h	57;"	d
IP_PROTO_GRE	include/clicknet/ip.h	89;"	d
IP_PROTO_HMP	include/clicknet/ip.h	74;"	d
IP_PROTO_ICMP	include/clicknet/ip.h	55;"	d
IP_PROTO_ICMP6	include/clicknet/ip.h	90;"	d
IP_PROTO_IGMP	include/clicknet/ip.h	56;"	d
IP_PROTO_IGP	include/clicknet/ip.h	63;"	d
IP_PROTO_IPCV	include/clicknet/ip.h	97;"	d
IP_PROTO_IPIP	include/clicknet/ip.h	58;"	d
IP_PROTO_IPPC	include/clicknet/ip.h	95;"	d
IP_PROTO_IRTP	include/clicknet/ip.h	82;"	d
IP_PROTO_ISOTP4	include/clicknet/ip.h	83;"	d
IP_PROTO_LEAF1	include/clicknet/ip.h	79;"	d
IP_PROTO_LEAF2	include/clicknet/ip.h	80;"	d
IP_PROTO_MERIT	include/clicknet/ip.h	86;"	d
IP_PROTO_MFENSP	include/clicknet/ip.h	85;"	d
IP_PROTO_MITSUBNET	include/clicknet/ip.h	93;"	d
IP_PROTO_MUX	include/clicknet/ip.h	72;"	d
IP_PROTO_NETBLT	include/clicknet/ip.h	84;"	d
IP_PROTO_NONE	include/clicknet/ip.h	104;"	d
IP_PROTO_NVPII	include/clicknet/ip.h	65;"	d
IP_PROTO_PAYLOAD	include/clicknet/ip.h	107;"	d
IP_PROTO_PRM	include/clicknet/ip.h	75;"	d
IP_PROTO_PUP	include/clicknet/ip.h	66;"	d
IP_PROTO_RDP	include/clicknet/ip.h	81;"	d
IP_PROTO_RSVP	include/clicknet/ip.h	88;"	d
IP_PROTO_RVD	include/clicknet/ip.h	94;"	d
IP_PROTO_SATMON	include/clicknet/ip.h	96;"	d
IP_PROTO_SATNET	include/clicknet/ip.h	92;"	d
IP_PROTO_SCTP	include/clicknet/ip.h	101;"	d
IP_PROTO_ST	include/clicknet/ip.h	59;"	d
IP_PROTO_TCP	include/clicknet/ip.h	60;"	d
IP_PROTO_TCP_OR_UDP	include/clicknet/ip.h	106;"	d
IP_PROTO_TRANSP	include/clicknet/ip.h	105;"	d
IP_PROTO_TRUNK1	include/clicknet/ip.h	77;"	d
IP_PROTO_TRUNK2	include/clicknet/ip.h	78;"	d
IP_PROTO_UCL	include/clicknet/ip.h	61;"	d
IP_PROTO_UDP	include/clicknet/ip.h	71;"	d
IP_PROTO_UDPLITE	include/clicknet/ip.h	102;"	d
IP_PROTO_WBEXPAK	include/clicknet/ip.h	100;"	d
IP_PROTO_WBMON	include/clicknet/ip.h	99;"	d
IP_PROTO_XNET	include/clicknet/ip.h	69;"	d
IP_PROTO_XNS	include/clicknet/ip.h	76;"	d
IP_RF	include/clicknet/ip.h	43;"	d
IP_RT_CACHE2	elements/ip/lineariplookup.hh	80;"	d
IP_TYPE_ICMP	elements/local/OpenFlow/lib/packets.hh	194;"	d
IP_TYPE_TCP	elements/local/OpenFlow/lib/packets.hh	195;"	d
IP_TYPE_UDP	elements/local/OpenFlow/lib/packets.hh	196;"	d
IP_VER	elements/local/OpenFlow/lib/packets.hh	190;"	d
IP_VERSION	elements/local/OpenFlow/lib/packets.hh	198;"	d
IPsecAuthHMACSHA1	elements/ipsec/hmacsha1.cc	/^IPsecAuthHMACSHA1::IPsecAuthHMACSHA1()$/;"	f	class:IPsecAuthHMACSHA1
IPsecAuthHMACSHA1	elements/ipsec/hmacsha1.hh	/^class IPsecAuthHMACSHA1 : public Element {$/;"	c
IPsecAuthSHA1	elements/ipsec/sha1.cc	/^IPsecAuthSHA1::IPsecAuthSHA1()$/;"	f	class:IPsecAuthSHA1
IPsecAuthSHA1	elements/ipsec/sha1.hh	/^class IPsecAuthSHA1 : public Element {$/;"	c
IPsecESPEncap	elements/ipsec/esp.cc	/^IPsecESPEncap::IPsecESPEncap()$/;"	f	class:IPsecESPEncap
IPsecESPEncap	elements/ipsec/esp.hh	/^class IPsecESPEncap : public Element {$/;"	c
IPsecESPUnencap	elements/ipsec/desp.cc	/^IPsecESPUnencap::IPsecESPUnencap()$/;"	f	class:IPsecESPUnencap
IPsecESPUnencap	elements/ipsec/desp.hh	/^class IPsecESPUnencap : public Element {$/;"	c
IPsecEncap	elements/ipsec/ipsecencap.cc	/^IPsecEncap::IPsecEncap()$/;"	f	class:IPsecEncap
IPsecEncap	elements/ipsec/ipsecencap.hh	/^class IPsecEncap : public Element { public:$/;"	c
IPsecRoute	elements/ipsec/ipsecroutetable.hh	/^    IPsecRoute()			: port(-1) { }$/;"	f	struct:IPsecRoute
IPsecRoute	elements/ipsec/ipsecroutetable.hh	/^struct IPsecRoute {$/;"	s
IPsecRouteTable	elements/ipsec/ipsecroutetable.hh	/^class IPsecRouteTable : public Element { public:$/;"	c
IRQF_PROBE_SHARED	drivers/e1000-7.x/src/kcompat.h	1053;"	d
IRQF_PROBE_SHARED	drivers/e1000-7.x/src/kcompat.h	1055;"	d
IRQF_SHARED	drivers/e1000-7.x/src/kcompat.h	1060;"	d
IRQ_HANDLED	drivers/e1000-5.x/src/kcompat.h	47;"	d
IRQ_HANDLED	drivers/e1000-7.x/src/kcompat.h	136;"	d
IRQ_NONE	drivers/e1000-5.x/src/kcompat.h	48;"	d
IRQ_NONE	drivers/e1000-7.x/src/kcompat.h	137;"	d
ISLTagMode	drivers/e1000-4.x/src/base_comm.h	/^    u32                 ISLTagMode;         \/* cast from IANS_BD_SUPPORT *\/$/;"	m	struct:_IANS_BD_PARAM_ITAG_CAP
IS_POW2	elements/local/OpenFlow/lib/util.hh	74;"	d
ITERATIONS	elements/ipsec/des.cc	125;"	d	file:
IT_VALUE	elements/test/hashtabletest.cc	47;"	d	file:
IT_VALUE	elements/test/hashtabletest.cc	53;"	d	file:
IW_MAX_SPY	elements/grid/airoinfo.cc	47;"	d	file:
IW_MAX_SPY	elements/grid/airoinfo.cc	48;"	d	file:
Idle	elements/standard/idle.cc	/^Idle::Idle()$/;"	f	class:Idle
Idle	elements/standard/idle.hh	/^class Idle : public Element { public:$/;"	c
IncrementSeqNo	elements/grid/incseqno.cc	/^IncrementSeqNo::IncrementSeqNo()$/;"	f	class:IncrementSeqNo
IncrementSeqNo	elements/grid/incseqno.hh	/^class IncrementSeqNo : public Element  {$/;"	c
InfiniteSource	elements/standard/infinitesource.cc	/^InfiniteSource::InfiniteSource()$/;"	f	class:InfiniteSource
InfiniteSource	elements/standard/infinitesource.hh	/^class InfiniteSource : public Element, public ActiveNotifier { public:$/;"	c
InitReqIter	elements/grid/dsrroutetable.hh	/^  typedef InitiatedReqMap::iterator InitReqIter;$/;"	t	class:DSRRouteTable
Initializer	apps/clicky/src/permstr.cc	/^PermString::Initializer::Initializer()$/;"	f	class:PermString::Initializer
Initializer	apps/clicky/src/permstr.hh	/^    struct Initializer { Initializer(); };$/;"	s	class:PermString
InitiatedReq	elements/grid/dsrroutetable.hh	/^    InitiatedReq() {$/;"	f	class:DSRRouteTable::InitiatedReq
InitiatedReq	elements/grid/dsrroutetable.hh	/^    InitiatedReq(IPAddress targ) {$/;"	f	class:DSRRouteTable::InitiatedReq
InitiatedReq	elements/grid/dsrroutetable.hh	/^  class InitiatedReq$/;"	c	class:DSRRouteTable
InitiatedReqMap	elements/grid/dsrroutetable.hh	/^  typedef HashMap<IPAddress, InitiatedReq> InitiatedReqMap;$/;"	t	class:DSRRouteTable
Insn	elements/standard/classification.hh	/^    Insn(int offset_, uint32_t value_, uint32_t mask_,$/;"	f	struct:Classification::Wordwise::Insn
Insn	elements/standard/classification.hh	/^struct Insn {$/;"	s	namespace:Classification::Wordwise
Insn	elements/standard/script.hh	/^    enum Insn {$/;"	g	class:Script
IntArg	include/click/args.hh	/^    IntArg(int b = 0)$/;"	f	struct:IntArg
IntArg	include/click/args.hh	/^struct IntArg : public NumArg {$/;"	s
IntOrExt	drivers/e1000-4.x/src/base_comm.h	65;"	d
IntOrExt	drivers/e1000-4.x/src/base_comm.h	67;"	d
IntelCopyrightString	drivers/e1000-4.x/src/base_comm.h	/^IntOrExt char IntelCopyrightString[IANS_SIGNATURE_LENGTH]$/;"	v
InterfacesArg	elements/ip/checkipheader.hh	/^  struct InterfacesArg {$/;"	s	class:CheckIPHeader
JD	elements/local/OpenFlow/include/config.h	27;"	d
JD	elements/local/OpenFlow/include/config.h	45;"	d
JD_DEBUG	elements/local/OpenFlow/include/config.h	17;"	d
JD_DEBUG_PARSE_CONTROL_PACKET	elements/local/OpenFlow/include/config.h	18;"	d
Jumps	elements/standard/classification.hh	/^enum Jumps {$/;"	g	namespace:Classification
KBUILD_BASENAME	include/click/config-linuxmodule.h	198;"	d
KBUILD_EXTRA_SYMBOLS	etc/pkg-linuxmodule-26.mk	/^KBUILD_EXTRA_SYMBOLS ?= $(clicklibdir)\/click.symvers$/;"	m
KBUILD_MODNAME	include/click/config-linuxmodule.h	199;"	d
KBUILD_STR	include/click/config-linuxmodule.h	197;"	d
KEEP_GOOD_ASSIGNMENT	elements/threads/balancedthreadsched.cc	33;"	d	file:
KERNELERROR_HH	bsdmodule/kernelerror.hh	2;"	d
KERNELPATH	linuxmodule/Makefile	/^KERNELPATH = NONE$/;"	m
KERNELTAP_NET	elements/userlevel/kerneltun.cc	46;"	d	file:
KERNELTUN_LINUX	elements/userlevel/kerneltun.cc	36;"	d	file:
KERNELTUN_NET	elements/userlevel/kerneltun.cc	38;"	d	file:
KERNELTUN_OSX	elements/userlevel/kerneltun.cc	40;"	d	file:
KERNEL_OPT	apps/clicky/src/clicky.cc	38;"	d	file:
KERNEL_OPT	tools/click-devirtualize/click-devirtualize.cc	48;"	d	file:
KERNEL_OPT	tools/click-fastclassifier/click-fastclassifier.cc	53;"	d	file:
KERNEL_OPT	tools/click-mkmindriver/click-mkmindriver.cc	44;"	d	file:
KERNEL_OPT	tools/click-undead/click-undead.cc	49;"	d	file:
KEY_SIZE	elements/ipsec/hmacsha1.cc	37;"	d	file:
KEY_SIZE	elements/ipsec/sadatatuple.hh	29;"	d
KICKSTART_BITS	elements/ip/rangeiplookup.hh	/^    enum { KICKSTART_BITS = 12 };$/;"	e	enum:RangeIPLookup::__anon332
KKVER	drivers/e1000-5.x/src/Makefile	/^KKVER := $(shell echo $(KVER) | \\$/;"	m
KKVER	drivers/e1000-7.x/src/Makefile	/^KKVER := $(shell echo $(KVER) | \\$/;"	m
KOBJ	drivers/e1000-5.x/src/Makefile	/^  KOBJ :=  $(KSRC)$/;"	m
KOBJ	drivers/e1000-5.x/src/Makefile	/^  KOBJ :=  \/lib\/modules\/$(shell uname -r)\/build$/;"	m
KOBJ	drivers/e1000-7.x/src/Makefile	/^  KOBJ :=  $(KSRC)$/;"	m
KOBJ	drivers/e1000-7.x/src/Makefile	/^  KOBJ :=  \/lib\/modules\/$(shell uname -r)\/build$/;"	m
KSP	drivers/e1000-4.x/src/Makefile	/^KSP :=  \/lib\/modules\/$(shell uname -r)\/build \\$/;"	m
KSP	drivers/e1000-4.x/src/Makefile	/^KSP := $(foreach dir, $(KSP), $(test_dir))$/;"	m
KSP	drivers/e1000-5.x/src/Makefile	/^KSP :=  \/lib\/modules\/$(BUILD_KERNEL)\/source \\$/;"	m
KSP	drivers/e1000-5.x/src/Makefile	/^KSP := $(foreach dir, $(KSP), $(test_dir))$/;"	m
KSP	drivers/e1000-7.x/src/Makefile	/^KSP :=  \/lib\/modules\/$(BUILD_KERNEL)\/build \\$/;"	m
KSP	drivers/e1000-7.x/src/Makefile	/^KSP := $(foreach dir, $(KSP), $(test_dir))$/;"	m
KSRC	drivers/e1000-4.x/src/Makefile	/^  KSRC := $(firstword $(KSP))$/;"	m
KSRC	drivers/e1000-5.x/src/Makefile	/^  KSRC := $(firstword $(KSP))$/;"	m
KSRC	drivers/e1000-7.x/src/Makefile	/^  KSRC := $(firstword $(KSP))$/;"	m
KSYMS	linuxmodule/Makefile	/^KSYMS = ksyms$/;"	m
KSYMS	linuxmodule/Makefile	/^KSYMS = ksyms_$(MINDRIVER)$/;"	m
KSYM_OBJS	linuxmodule/Makefile	/^KSYM_OBJS = $(LIB_C_OBJS) $(LIB_CXX_OBJS) $(STD_ELEMENT_OBJS) \\$/;"	m
KVER	drivers/e1000-4.x/src/Makefile	/^KVER := $(shell $(CC) $(CFLAGS) -E -dM $(VERSION_FILE) | grep UTS_RELEASE | \\$/;"	m
KVER	drivers/e1000-5.x/src/Makefile	/^  KVER := $(shell $(CC) $(CFLAGS) -E -dM $(VERSION_FILE) | \\$/;"	m
KVER	drivers/e1000-5.x/src/Makefile	/^KVER := $(shell $(CC) $(CFLAGS) -E -dM $(VERSION_FILE) | grep UTS_RELEASE | \\$/;"	m
KVER	drivers/e1000-7.x/src/Makefile	/^  KVER := $(shell $(CC) $(CFLAGS) -E -dM $(VERSION_FILE) | \\$/;"	m
KVER	drivers/e1000-7.x/src/Makefile	/^KVER := $(shell $(CC) $(CFLAGS) -E -dM $(VERSION_FILE) | grep UTS_RELEASE | \\$/;"	m
K_00_19	elements/ipsec/sha1_impl.cc	249;"	d	file:
K_20_39	elements/ipsec/sha1_impl.cc	250;"	d	file:
K_40_59	elements/ipsec/sha1_impl.cc	251;"	d	file:
K_60_79	elements/ipsec/sha1_impl.cc	252;"	d	file:
K_VERSION	drivers/e1000-5.x/src/Makefile	/^K_VERSION:=$(shell echo $(BUILD_KERNEL) | cut -c1-3 | sed 's\/2\\.[56]\/2\\.6\/')$/;"	m
K_VERSION	drivers/e1000-7.x/src/Makefile	/^K_VERSION:=$(shell uname -r | cut -c1-3 | sed 's\/2\\.[56]\/2\\.6\/')$/;"	m
KernelErrorHandler	bsdmodule/kernelerror.hh	/^    KernelErrorHandler() { }$/;"	f	class:KernelErrorHandler
KernelErrorHandler	bsdmodule/kernelerror.hh	/^class KernelErrorHandler : public ErrorHandler { public:$/;"	c
KernelErrorHandler	bsdmodule/modulepriv.hh	/^    KernelErrorHandler()		: _pos(0), _generation(0) { }$/;"	f	class:KernelErrorHandler
KernelErrorHandler	bsdmodule/modulepriv.hh	/^class KernelErrorHandler : public ErrorHandler { public:$/;"	c
KernelErrorHandler	linuxmodule/modulepriv.hh	/^    KernelErrorHandler()$/;"	f	class:KernelErrorHandler
KernelErrorHandler	linuxmodule/modulepriv.hh	/^class KernelErrorHandler : public ErrorHandler { public:$/;"	c
KernelFilter	elements/userlevel/kernelfilter.cc	/^KernelFilter::KernelFilter()$/;"	f	class:KernelFilter
KernelFilter	elements/userlevel/kernelfilter.hh	/^class KernelFilter : public Element { public:$/;"	c
KernelHandlerProxy	elements/userlevel/khandlerproxy.cc	/^KernelHandlerProxy::KernelHandlerProxy()$/;"	f	class:KernelHandlerProxy
KernelHandlerProxy	elements/userlevel/khandlerproxy.hh	/^class KernelHandlerProxy : public HandlerProxy { public:$/;"	c
KernelTap	elements/userlevel/kerneltap.cc	/^KernelTap::KernelTap()$/;"	f	class:KernelTap
KernelTap	elements/userlevel/kerneltap.hh	/^class KernelTap : public KernelTun { public:$/;"	c
KernelTun	elements/userlevel/kerneltun.cc	/^KernelTun::KernelTun()$/;"	f	class:KernelTun
KernelTun	elements/userlevel/kerneltun.hh	/^class KernelTun : public Element { public:$/;"	c
KeywordArg	include/click/args.hh	/^struct KeywordArg {$/;"	s
L1LXT971A_PHY_ID	drivers/e1000-7.x/src/e1000_hw.h	3166;"	d
L2_IFETCH	include/click/perfctr-i586.hh	19;"	d
L2_LD	include/click/perfctr-i586.hh	20;"	d
L2_LINES_IN	include/click/perfctr-i586.hh	17;"	d
L2_LINES_OUT	include/click/perfctr-i586.hh	18;"	d
L2_LINES_OUTM	include/click/perfctr-i586.hh	21;"	d
L2_RQSTS	include/click/perfctr-i586.hh	22;"	d
LARGEBITS	lib/confparse.cc	1028;"	d	file:
LARGEMSVBITS	lib/confparse.cc	1029;"	d	file:
LARGEST_HANDLER_WRITE	include/click/handler.hh	294;"	d
LARGETHRESH	lib/confparse.cc	1031;"	d	file:
LARGETHRESHSHIFT	lib/confparse.cc	1030;"	d	file:
LATEX	etc/diagrams/Makefile	/^LATEX	= latex$/;"	m
LCDF_CLP_H	include/click/clp.h	3;"	d
LCDF_TRANSFORM_HH	apps/clicky/src/transform.hh	2;"	d
LD	bsdmodule/Makefile	/^LD = ld$/;"	m
LD	etc/pkg-bsdmodule.mk	/^LD ?= ld$/;"	m
LD	linuxmodule/Makefile	/^LD = ld$/;"	m
LDFLAGS	bsdmodule/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	etc/pkg-bsdmodule.mk	/^LDFLAGS ?= $(CLICKLDFLAGS)$/;"	m
LDFLAGS	etc/pkg-linuxmodule.mk	/^LDFLAGS ?= $(CLICKLDFLAGS)$/;"	m
LDFLAGS	etc/pkg-userlevel.mk	/^LDFLAGS ?= $(CLICKLDMODULEFLAGS)$/;"	m
LDFLAGS	linuxmodule/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	ns/Makefile	/^LDFLAGS = -shared$/;"	m
LDFLAGS	tools/click-align/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	tools/click-check/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	tools/click-combine/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	tools/click-devirtualize/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	tools/click-fastclassifier/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	tools/click-flatten/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	tools/click-install/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	tools/click-mkmindriver/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	tools/click-pretty/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	tools/click-undead/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	tools/click-xform/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	tools/click2xml/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	tools/lib/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	userlevel/Makefile	/^LDFLAGS = $/;"	m
LEAK_CHECKER_H	elements/local/OpenFlow/lib/leak-checker.hh	35;"	d
LEAK_CHECKER_LONG_OPTIONS	elements/local/OpenFlow/lib/leak-checker.hh	47;"	d
LEAK_CHECKER_OPTION_ENUMS	elements/local/OpenFlow/lib/leak-checker.hh	44;"	d
LEAK_CHECKER_OPTION_HANDLERS	elements/local/OpenFlow/lib/leak-checker.hh	50;"	d
LEARN	elements/etherswitch/spantree.hh	/^  enum PortState {BLOCK, LISTEN, LEARN, FORWARD};$/;"	e	enum:EtherSpanTree::PortState
LENGTH_MASK	elements/ip/ipfieldinfo.hh	/^	LENGTH_MASK = MAX_LENGTH << LENGTH_SHIFT,$/;"	e	enum:IPField::__anon343
LENGTH_SHIFT	elements/ip/ipfieldinfo.hh	/^	LENGTH_SHIFT = 0,$/;"	e	enum:IPField::__anon343
LIBCLICKTOOL	tools/click-align/Makefile	/^LIBCLICKTOOL = libclicktool.a$/;"	m
LIBCLICKTOOL	tools/click-align/Makefile	/^LIBCLICKTOOL = libclicktool_build.a$/;"	m
LIBCLICKTOOL	tools/click-check/Makefile	/^LIBCLICKTOOL = libclicktool.a$/;"	m
LIBCLICKTOOL	tools/click-check/Makefile	/^LIBCLICKTOOL = libclicktool_build.a$/;"	m
LIBCLICKTOOL	tools/click-combine/Makefile	/^LIBCLICKTOOL = libclicktool.a$/;"	m
LIBCLICKTOOL	tools/click-combine/Makefile	/^LIBCLICKTOOL = libclicktool_build.a$/;"	m
LIBCLICKTOOL	tools/click-devirtualize/Makefile	/^LIBCLICKTOOL = libclicktool.a$/;"	m
LIBCLICKTOOL	tools/click-devirtualize/Makefile	/^LIBCLICKTOOL = libclicktool_build.a$/;"	m
LIBCLICKTOOL	tools/click-fastclassifier/Makefile	/^LIBCLICKTOOL = libclicktool.a$/;"	m
LIBCLICKTOOL	tools/click-fastclassifier/Makefile	/^LIBCLICKTOOL = libclicktool_build.a$/;"	m
LIBCLICKTOOL	tools/click-flatten/Makefile	/^LIBCLICKTOOL = libclicktool.a$/;"	m
LIBCLICKTOOL	tools/click-flatten/Makefile	/^LIBCLICKTOOL = libclicktool_build.a$/;"	m
LIBCLICKTOOL	tools/click-install/Makefile	/^LIBCLICKTOOL = libclicktool.a$/;"	m
LIBCLICKTOOL	tools/click-install/Makefile	/^LIBCLICKTOOL = libclicktool_build.a$/;"	m
LIBCLICKTOOL	tools/click-mkmindriver/Makefile	/^LIBCLICKTOOL = libclicktool.a$/;"	m
LIBCLICKTOOL	tools/click-mkmindriver/Makefile	/^LIBCLICKTOOL = libclicktool_build.a$/;"	m
LIBCLICKTOOL	tools/click-pretty/Makefile	/^LIBCLICKTOOL = libclicktool.a$/;"	m
LIBCLICKTOOL	tools/click-pretty/Makefile	/^LIBCLICKTOOL = libclicktool_build.a$/;"	m
LIBCLICKTOOL	tools/click-undead/Makefile	/^LIBCLICKTOOL = libclicktool.a$/;"	m
LIBCLICKTOOL	tools/click-undead/Makefile	/^LIBCLICKTOOL = libclicktool_build.a$/;"	m
LIBCLICKTOOL	tools/click-xform/Makefile	/^LIBCLICKTOOL = libclicktool.a$/;"	m
LIBCLICKTOOL	tools/click-xform/Makefile	/^LIBCLICKTOOL = libclicktool_build.a$/;"	m
LIBCLICKTOOL	tools/click2xml/Makefile	/^LIBCLICKTOOL = libclicktool.a$/;"	m
LIBCLICKTOOL	tools/click2xml/Makefile	/^LIBCLICKTOOL = libclicktool_build.a$/;"	m
LIBOBJS	ns/Makefile	/^LIBOBJS = $(GENERIC_OBJS) $(STD_ELEMENT_OBJS) clp.o$/;"	m
LIBOBJS	userlevel/Makefile	/^LIBOBJS = $(GENERIC_OBJS) $(STD_ELEMENT_OBJS) clp.o exportstub.o$/;"	m
LIBS	bsdmodule/Makefile	/^LIBS = $/;"	m
LIBS	linuxmodule/Makefile	/^LIBS = $/;"	m
LIBS	ns/Makefile	/^LIBS =  `$(top_builddir)\/click-buildtool --otherlibs` $(ELEMENT_LIBS)$/;"	m
LIBS	tools/click-align/Makefile	/^LIBS =  -lrt  $(DL_LIBS)$/;"	m
LIBS	tools/click-check/Makefile	/^LIBS =  -lrt  $(DL_LIBS)$/;"	m
LIBS	tools/click-combine/Makefile	/^LIBS =  -lrt  $(DL_LIBS)$/;"	m
LIBS	tools/click-devirtualize/Makefile	/^LIBS =  -lrt  $(DL_LIBS)$/;"	m
LIBS	tools/click-fastclassifier/Makefile	/^LIBS =  -lrt  $(DL_LIBS)$/;"	m
LIBS	tools/click-flatten/Makefile	/^LIBS =  -lrt  $(DL_LIBS)$/;"	m
LIBS	tools/click-install/Makefile	/^LIBS =  -lrt  $(DL_LIBS)$/;"	m
LIBS	tools/click-mkmindriver/Makefile	/^LIBS =  -lrt  $(DL_LIBS)$/;"	m
LIBS	tools/click-pretty/Makefile	/^LIBS =  -lrt  $(DL_LIBS)$/;"	m
LIBS	tools/click-undead/Makefile	/^LIBS =  -lrt  $(DL_LIBS)$/;"	m
LIBS	tools/click-xform/Makefile	/^LIBS =  -lrt  $(DL_LIBS)$/;"	m
LIBS	tools/click2xml/Makefile	/^LIBS =  -lrt   -lexpat $(DL_LIBS)$/;"	m
LIBS	userlevel/Makefile	/^LIBS =  `$(top_builddir)\/click-buildtool --otherlibs` $(ELEMENT_LIBS)$/;"	m
LIB_CXX_OBJS	linuxmodule/Makefile	/^LIB_CXX_OBJS = string.o straccum.o nameinfo.o \\$/;"	m
LIB_C_OBJS	linuxmodule/Makefile	/^LIB_C_OBJS = crc32.o in_cksum.o$/;"	m
LINE_MAX_LENGTH	drivers/e1000-4.x/src/e1000_proc.c	54;"	d	file:
LINK	bsdmodule/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	etc/pkg-bsdmodule.mk	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	etc/pkg-linuxmodule.mk	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	etc/pkg-userlevel.mk	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	linuxmodule/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	ns/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	tools/click-align/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	tools/click-check/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	tools/click-combine/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	tools/click-devirtualize/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	tools/click-fastclassifier/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	tools/click-flatten/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	tools/click-install/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	tools/click-mkmindriver/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	tools/click-pretty/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	tools/click-undead/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	tools/click-xform/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	tools/click2xml/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINK	userlevel/Makefile	/^LINK = $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@$/;"	m
LINKSTATHH	elements/grid/linkstat.hh	2;"	d
LINKTESTER_HH	elements/grid/linktester.hh	2;"	d
LINKTESTRECEIVER_HH	elements/grid/linktestreceiver.hh	2;"	d
LINKTRACKERHH	elements/grid/linktracker.hh	2;"	d
LINK_OPT	tools/click-combine/click-combine.cc	45;"	d	file:
LINK_UP_TIMEOUT	drivers/e1000-4.x/src/e1000_hw.h	1464;"	d
LINK_UP_TIMEOUT	drivers/e1000-5.x/src/e1000_hw.h	1682;"	d
LINK_UP_TIMEOUT	drivers/e1000-7.x/src/e1000_hw.h	2495;"	d
LINUXCFLAGS	etc/pkg-linuxmodule-26.mk	/^LINUXCFLAGS = $(shell echo "$(CPPFLAGS) $(CFLAGS) $(LINUXINCLUDE)" \\$/;"	m
LINUXCFLAGS	linuxmodule/Makefile	/^LINUXCFLAGS = $(shell echo "$(CPPFLAGS) $(CFLAGS) $(LINUXINCLUDE)" \\$/;"	m
LINUXMODULE	tools/lib/etraits.hh	/^	USERLEVEL = 0, LINUXMODULE = 1, BSDMODULE = 2, NSMODULE = 3,$/;"	e	enum:Driver::__anon526
LINUXMODULE_CXX_OBJS	linuxmodule/Makefile	/^LINUXMODULE_CXX_OBJS = config.o sched.o module.o clickfs.o skbmgr.o$/;"	m
LINUXMODULE_C_OBJS	linuxmodule/Makefile	/^LINUXMODULE_C_OBJS = kernelversion.o read-pmc.o$/;"	m
LINUXMODULE_OPT	tools/click-align/click-align.cc	307;"	d	file:
LINUXMODULE_OPT	tools/click-check/click-check.cc	50;"	d	file:
LINUXMODULE_OPT	tools/click-pretty/click-pretty.cc	55;"	d	file:
LINUXMODULE_OPT	tools/click2xml/click2xml.cc	44;"	d	file:
LINUX_ETHERTAP	elements/userlevel/kerneltun.hh	/^    enum Type { LINUX_UNIVERSAL, LINUX_ETHERTAP, BSD_TUN, BSD_TAP, OSX_TUN,$/;"	e	enum:KernelTun::Type
LINUX_MAKEARGS	etc/pkg-linuxmodule.mk	/^LINUX_MAKEARGS ?= $(CLICKLINUX_MAKEARGS)$/;"	m
LINUX_SRCDIR	include/click/pathvars.h	37;"	d
LINUX_UNIVERSAL	elements/userlevel/kerneltun.hh	/^    enum Type { LINUX_UNIVERSAL, LINUX_ETHERTAP, BSD_TUN, BSD_TAP, OSX_TUN,$/;"	e	enum:KernelTun::Type
LIRMETRIC_HH	elements/grid/lirmetric.hh	2;"	d
LIRMetric	elements/grid/lirmetric.cc	/^LIRMetric::LIRMetric()$/;"	f	class:LIRMetric
LIRMetric	elements/grid/lirmetric.hh	/^class LIRMetric : public GridGenericMetric {$/;"	c
LISTEN	elements/etherswitch/spantree.hh	/^  enum PortState {BLOCK, LISTEN, LEARN, FORWARD};$/;"	e	enum:EtherSpanTree::PortState
LISTENING	elements/grid/linktester.hh	/^    LISTENING,$/;"	e	enum:LinkTester::state_t
LIST_ADD_BLANK	drivers/e1000-4.x/src/e1000_proc.c	540;"	d	file:
LIST_ADD_F	drivers/e1000-4.x/src/e1000_proc.c	538;"	d	file:
LIST_ADD_H	drivers/e1000-4.x/src/e1000_proc.c	542;"	d	file:
LIST_ADD_S	drivers/e1000-4.x/src/e1000_proc.c	541;"	d	file:
LIST_ADD_U	drivers/e1000-4.x/src/e1000_proc.c	543;"	d	file:
LIST_FOR_EACH	elements/local/OpenFlow/lib/list.hh	74;"	d
LIST_FOR_EACH_REVERSE	elements/local/OpenFlow/lib/list.hh	78;"	d
LIST_FOR_EACH_SAFE	elements/local/OpenFlow/lib/list.hh	82;"	d
LIST_H	elements/local/OpenFlow/lib/list.hh	34;"	d
LIST_HEAD_MARKER	include/click/list.hh	20;"	d
LIST_HEAD_MARKER	include/click/list.hh	562;"	d
LIST_INITIALIZER	elements/local/OpenFlow/lib/list.hh	50;"	d
LIST_OPT	apps/clicky/src/clicky.cc	43;"	d	file:
LLC_CNTL_SNAP	elements/local/OpenFlow/lib/packets.hh	131;"	d
LLC_DISC	include/clicknet/llc.h	118;"	d
LLC_DISC_P	include/clicknet/llc.h	119;"	d
LLC_DM	include/clicknet/llc.h	126;"	d
LLC_DM_P	include/clicknet/llc.h	127;"	d
LLC_DSAP_SNAP	elements/local/OpenFlow/lib/packets.hh	129;"	d
LLC_FRMR	include/clicknet/llc.h	124;"	d
LLC_FRMRLEN	include/clicknet/llc.h	111;"	d
LLC_FRMR_P	include/clicknet/llc.h	125;"	d
LLC_HEADER_LEN	elements/local/OpenFlow/lib/packets.hh	133;"	d
LLC_INFO	include/clicknet/llc.h	143;"	d
LLC_IP_LSAP	include/clicknet/llc.h	148;"	d
LLC_ISFRAMELEN	include/clicknet/llc.h	109;"	d
LLC_ISO_LSAP	include/clicknet/llc.h	151;"	d
LLC_REJ	include/clicknet/llc.h	138;"	d
LLC_RNR	include/clicknet/llc.h	137;"	d
LLC_RR	include/clicknet/llc.h	136;"	d
LLC_SABME	include/clicknet/llc.h	130;"	d
LLC_SABME_P	include/clicknet/llc.h	131;"	d
LLC_SNAP_HEADER_LEN	elements/local/OpenFlow/lib/packets.hh	150;"	d
LLC_SNAP_LSAP	include/clicknet/llc.h	150;"	d
LLC_SSAP_SNAP	elements/local/OpenFlow/lib/packets.hh	130;"	d
LLC_TEST	include/clicknet/llc.h	122;"	d
LLC_TEST_P	include/clicknet/llc.h	123;"	d
LLC_UA	include/clicknet/llc.h	120;"	d
LLC_UA_P	include/clicknet/llc.h	121;"	d
LLC_UFRAMELEN	include/clicknet/llc.h	110;"	d
LLC_UI	include/clicknet/llc.h	116;"	d
LLC_UI_P	include/clicknet/llc.h	117;"	d
LLC_X25_LSAP	include/clicknet/llc.h	149;"	d
LLC_XID	include/clicknet/llc.h	128;"	d
LLC_XID_P	include/clicknet/llc.h	129;"	d
LOCALROUTE2_HH	elements/grid/lookuplocalgridroute2.hh	2;"	d
LOCALROUTE_HH	elements/grid/lookuplocalgridroute.hh	2;"	d
LOCK_CONFIG_READ	linuxmodule/clickfs.cc	60;"	d	file:
LOCK_CONFIG_WRITE	linuxmodule/clickfs.cc	62;"	d	file:
LOCK_PREFIX	include/click/fixconfig.h	10;"	d
LOCK_PREFIX	include/click/fixconfig.h	11;"	d
LOCQUERYRESPONDER_HH	elements/grid/locqueryresponder.hh	2;"	d
LOCTAB_HH	elements/grid/loctable.hh	2;"	d
LOGBUF_SAVESIZ	bsdmodule/modulepriv.hh	/^  enum { LOGBUF_SIZ = 4096, LOGBUF_SAVESIZ = 2048 };$/;"	e	enum:KernelErrorHandler::__anon32
LOGBUF_SIZ	bsdmodule/modulepriv.hh	/^  enum { LOGBUF_SIZ = 4096, LOGBUF_SAVESIZ = 2048 };$/;"	e	enum:KernelErrorHandler::__anon32
LOG_ALPHA	apps/clicky/src/ddecor.cc	111;"	d	file:
LOOKUPIPROUTEMP_HH	elements/ip/lookupiproutemp.hh	2;"	d
LOOPBACK	include/click/packet.hh	/^	LOOPBACK = 5,$/;"	e	enum:Packet::PacketType
LOOP_MARKER	elements/standard/pokehandlers.cc	/^Element * const PokeHandlers::LOOP_MARKER = (Element *)2;$/;"	m	class:PokeHandlers	file:
LOOP_MARKER	elements/standard/pokehandlers.hh	/^    static Element * const LOOP_MARKER;$/;"	m	class:PokeHandlers
LOSS_RATE_TABLE	elements/grid/delivery_rate_table.hh	7;"	d
LP_RNPR_ACKNOWLDGE	drivers/e1000-4.x/src/e1000_hw.h	1631;"	d
LP_RNPR_ACKNOWLDGE	drivers/e1000-5.x/src/e1000_hw.h	1903;"	d
LP_RNPR_ACKNOWLDGE	drivers/e1000-7.x/src/e1000_hw.h	2805;"	d
LP_RNPR_ACKNOWLDGE2	drivers/e1000-4.x/src/e1000_hw.h	1627;"	d
LP_RNPR_ACKNOWLDGE2	drivers/e1000-5.x/src/e1000_hw.h	1899;"	d
LP_RNPR_ACKNOWLDGE2	drivers/e1000-7.x/src/e1000_hw.h	2801;"	d
LP_RNPR_MSG_CODE_FIELD	drivers/e1000-4.x/src/e1000_hw.h	1623;"	d
LP_RNPR_MSG_CODE_FIELD	drivers/e1000-5.x/src/e1000_hw.h	1895;"	d
LP_RNPR_MSG_CODE_FIELD	drivers/e1000-7.x/src/e1000_hw.h	2797;"	d
LP_RNPR_MSG_PAGE	drivers/e1000-4.x/src/e1000_hw.h	1630;"	d
LP_RNPR_MSG_PAGE	drivers/e1000-5.x/src/e1000_hw.h	1902;"	d
LP_RNPR_MSG_PAGE	drivers/e1000-7.x/src/e1000_hw.h	2804;"	d
LP_RNPR_NEXT_PAGE	drivers/e1000-4.x/src/e1000_hw.h	1632;"	d
LP_RNPR_NEXT_PAGE	drivers/e1000-5.x/src/e1000_hw.h	1904;"	d
LP_RNPR_NEXT_PAGE	drivers/e1000-7.x/src/e1000_hw.h	2806;"	d
LP_RNPR_TOGGLE	drivers/e1000-4.x/src/e1000_hw.h	1624;"	d
LP_RNPR_TOGGLE	drivers/e1000-5.x/src/e1000_hw.h	1896;"	d
LP_RNPR_TOGGLE	drivers/e1000-7.x/src/e1000_hw.h	2798;"	d
LRHELLO_HH	elements/grid/lrhello.hh	2;"	d
LR_Calculate	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^void VcCDCORE::LR_Calculate(struct LinearRegression* lr)$/;"	f	class:VcCDCORE
LR_addXY	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^void VcCDCORE::LR_addXY(struct LinearRegression* lr, const double& x, const double& y)$/;"	f	class:VcCDCORE
LR_clear	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	void LR_clear(struct LinearRegression* l) { l->sumX = l->sumY = l->sumXsquared = l->sumYsquared = l->sumXY = l->n = 0; };$/;"	f	class:VcCDCORE
LR_getA	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	double LR_getA(struct LinearRegression* l) const { return l->a; };$/;"	f	class:VcCDCORE
LR_getB	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	double LR_getB(struct LinearRegression* l) const { return l->b; };$/;"	f	class:VcCDCORE
LR_haveData	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	int LR_haveData(struct LinearRegression* l) const { return (l->n > 2 ? 1 : 0); };$/;"	f	class:VcCDCORE
LR_items	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	long LR_items(struct LinearRegression* l) const { return l->n; };$/;"	f	class:VcCDCORE
LTIter	elements/wifi/linktable.hh	/^  typedef LTable::const_iterator LTIter;$/;"	t	class:LinkTable
LTable	elements/wifi/linktable.hh	/^  typedef HashMap<IPPair, LinkInfo> LTable;$/;"	t	class:LinkTable
LWNG_CAPHDR_VERSION	include/clicknet/wifi.h	383;"	d
LWNG_CAP_DID_BASE	include/clicknet/wifi.h	382;"	d
LandmarkErrorHandler	include/click/error.hh	/^class LandmarkErrorHandler : public ErrorVeneer { public:$/;"	c
LandmarkErrorHandler	lib/error.cc	/^LandmarkErrorHandler::LandmarkErrorHandler(ErrorHandler *errh, const String &landmark)$/;"	f	class:LandmarkErrorHandler
LandmarkInfo	tools/lib/landmarkt.hh	/^	LandmarkInfo(unsigned o, int f, unsigned l)$/;"	f	struct:LandmarkSetT::LandmarkInfo
LandmarkInfo	tools/lib/landmarkt.hh	/^    struct LandmarkInfo {$/;"	s	class:LandmarkSetT
LandmarkSetT	tools/lib/landmarkt.cc	/^LandmarkSetT::LandmarkSetT()$/;"	f	class:LandmarkSetT
LandmarkSetT	tools/lib/landmarkt.cc	/^LandmarkSetT::LandmarkSetT(const String &filename, unsigned lineno)$/;"	f	class:LandmarkSetT
LandmarkSetT	tools/lib/landmarkt.hh	/^class LandmarkSetT { public:$/;"	c
LandmarkT	tools/lib/landmarkt.hh	/^LandmarkT::LandmarkT()$/;"	f	class:LandmarkT
LandmarkT	tools/lib/landmarkt.hh	/^LandmarkT::LandmarkT(LandmarkSetT *lset, unsigned offset1, unsigned offset2)$/;"	f	class:LandmarkT
LandmarkT	tools/lib/landmarkt.hh	/^LandmarkT::LandmarkT(const LandmarkT &lm)$/;"	f	class:LandmarkT
LandmarkT	tools/lib/landmarkt.hh	/^LandmarkT::LandmarkT(const String &filename, unsigned lineno = 0)$/;"	f	class:LandmarkT
LandmarkT	tools/lib/landmarkt.hh	/^class LandmarkT { public:$/;"	c
LastHeader	drivers/e1000-4.x/src/base_comm.h	/^    Per_Frame_Attribute_Header  LastHeader;$/;"	m	struct:_Last_Attribute
Last_Attribute	drivers/e1000-4.x/src/base_comm.h	/^} Last_Attribute, *pLast_Attribute ;$/;"	t	typeref:struct:_Last_Attribute
Level	include/click/error.hh	/^    enum Level {$/;"	g	class:ErrorHandler
Lexeme	include/click/lexer.hh	/^    Lexeme()$/;"	f	class:Lexeme
Lexeme	include/click/lexer.hh	/^    Lexeme(int k, const String &s, bool compact = false)$/;"	f	class:Lexeme
Lexeme	include/click/lexer.hh	/^class Lexeme { public:$/;"	c
Lexeme	tools/lib/lexert.hh	/^    Lexeme()				: _kind(lexEOF), _pos(0) { }$/;"	f	class:Lexeme
Lexeme	tools/lib/lexert.hh	/^    Lexeme(int k, const String &s, const char *p) : _kind(k), _s(s), _pos(p) { }$/;"	f	class:Lexeme
Lexeme	tools/lib/lexert.hh	/^class Lexeme { public:$/;"	c
Lexemes	include/click/lexer.hh	/^enum Lexemes {$/;"	g
Lexer	include/click/lexer.hh	/^class Lexer { public:$/;"	c
Lexer	lib/lexer.cc	/^Lexer::Lexer()$/;"	f	class:Lexer
LexerExtra	include/click/lexer.hh	/^    LexerExtra()			{ }$/;"	f	class:LexerExtra
LexerExtra	include/click/lexer.hh	/^class LexerExtra { public:$/;"	c
LexerT	tools/lib/lexert.cc	/^LexerT::LexerT(ErrorHandler *errh, bool ignore_line_directives)$/;"	f	class:LexerT
LexerT	tools/lib/lexert.hh	/^class LexerT { public:$/;"	c
LexerTInfo	tools/lib/lexertinfo.hh	/^    LexerTInfo()		{ }$/;"	f	class:LexerTInfo
LexerTInfo	tools/lib/lexertinfo.hh	/^class LexerTInfo { public:$/;"	c
LinearIPLookup	elements/ip/lineariplookup.cc	/^LinearIPLookup::LinearIPLookup()$/;"	f	class:LinearIPLookup
LinearIPLookup	elements/ip/lineariplookup.hh	/^class LinearIPLookup : public IPRouteTable { public:$/;"	c
LinearRegression	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^struct LinearRegression$/;"	s
Link	elements/wifi/linktable.hh	/^    Link() : _from(), _to(), _seq(0), _metric(0) { }$/;"	f	class:LinkTable::Link
Link	elements/wifi/linktable.hh	/^    Link(IPAddress from, IPAddress to, uint32_t seq, uint32_t metric) {$/;"	f	class:LinkTable::Link
Link	elements/wifi/linktable.hh	/^  class Link {$/;"	c	class:LinkTable
Link	include/click/bighashmap_arena.hh	/^    struct Link {$/;"	s	class:HashMap_Arena
LinkInfo	elements/wifi/linktable.hh	/^    LinkInfo() {$/;"	f	class:LinkTable::LinkInfo
LinkInfo	elements/wifi/linktable.hh	/^    LinkInfo(IPAddress from, IPAddress to,$/;"	f	class:LinkTable::LinkInfo
LinkInfo	elements/wifi/linktable.hh	/^    LinkInfo(const LinkInfo &p) :$/;"	f	class:LinkTable::LinkInfo
LinkInfo	elements/wifi/linktable.hh	/^  class LinkInfo {$/;"	c	class:LinkTable
LinkSpeed	drivers/e1000-4.x/src/base_comm.h	/^    u32     LinkSpeed;           \/* Cast from IANS_BD_LINK_SPEED *\/$/;"	m	struct:_IANS_BD_PARAM_STATUS
LinkStat	elements/grid/linkstat.cc	/^LinkStat::LinkStat()$/;"	f	class:LinkStat
LinkStat	elements/grid/linkstat.hh	/^class LinkStat : public Element {$/;"	c
LinkStatus	drivers/e1000-4.x/src/base_comm.h	/^    u32     LinkStatus;          \/* Cast from IANS_BD_LINK_STATUS *\/$/;"	m	struct:_IANS_BD_PARAM_STATUS
LinkTable	elements/wifi/linktable.cc	/^LinkTable::LinkTable()$/;"	f	class:LinkTable
LinkTable	elements/wifi/linktable.hh	/^class LinkTable: public Element{$/;"	c
LinkTable_read_param	elements/wifi/linktable.cc	/^LinkTable_read_param(Element *e, void *thunk)$/;"	f	file:
LinkTable_write_param	elements/wifi/linktable.cc	/^LinkTable_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
LinkTestReceiver	elements/grid/linktestreceiver.cc	/^LinkTestReceiver::LinkTestReceiver() : _ai(0)$/;"	f	class:LinkTestReceiver
LinkTestReceiver	elements/grid/linktestreceiver.hh	/^class LinkTestReceiver : public Element {$/;"	c
LinkTester	elements/grid/linktester.cc	/^LinkTester::LinkTester() :$/;"	f	class:LinkTester
LinkTester	elements/grid/linktester.hh	/^class LinkTester : public Element {$/;"	c
LinkTracker	elements/grid/linktracker.cc	/^LinkTracker::LinkTracker()$/;"	f	class:LinkTracker
LinkTracker	elements/grid/linktracker.hh	/^class LinkTracker : public Element {$/;"	c
LinkUnqueue	elements/standard/linkunqueue.cc	/^LinkUnqueue::LinkUnqueue()$/;"	f	class:LinkUnqueue
LinkUnqueue	elements/standard/linkunqueue.hh	/^class LinkUnqueue : public Element, public Storage { public:$/;"	c
LinuxIPLookup	elements/ip/lookupiproutelinux.cc	/^LinuxIPLookup::LinuxIPLookup()$/;"	f	class:LinuxIPLookup
LinuxIPLookup	elements/ip/lookupiproutelinux.hh	/^class LinuxIPLookup : public Element {$/;"	c
LinuxModuleLexerExtra	linuxmodule/config.cc	/^    LinuxModuleLexerExtra() { }$/;"	f	class:LinuxModuleLexerExtra
LinuxModuleLexerExtra	linuxmodule/config.cc	/^class LinuxModuleLexerExtra : public LexerExtra { public:$/;"	c	file:
List	include/click/list.hh	/^    List()$/;"	f	class:List
List	include/click/list.hh	/^class List { public:$/;"	c
ListTest	elements/test/listtest.cc	/^ListTest::ListTest()$/;"	f	class:ListTest
ListTest	elements/test/listtest.hh	/^class ListTest : public Element { public:$/;"	c
List_member	include/click/list.hh	/^    List_member()$/;"	f	class:List_member
List_member	include/click/list.hh	/^class List_member { public:$/;"	c
ListenEtherSwitch	elements/etherswitch/listenetherswitch.cc	/^ListenEtherSwitch::ListenEtherSwitch()$/;"	f	class:ListenEtherSwitch
ListenEtherSwitch	elements/etherswitch/listenetherswitch.hh	/^class ListenEtherSwitch : public EtherSwitch { public:$/;"	c
LocEntry	elements/grid/floodinglocquerier.hh	/^  struct LocEntry {$/;"	s	class:FloodingLocQuerier
LocFromFile	elements/grid/locfromfile.cc	/^LocFromFile::LocFromFile()$/;"	f	class:LocFromFile
LocFromFile	elements/grid/locfromfile.hh	/^class LocFromFile : public GridLocationInfo {$/;"	c
LocFromFile_hh	elements/grid/locfromfile.hh	2;"	d
LocQueryResponder	elements/grid/locqueryresponder.cc	/^LocQueryResponder::LocQueryResponder()$/;"	f	class:LocQueryResponder
LocQueryResponder	elements/grid/locqueryresponder.hh	/^class LocQueryResponder : public Element {$/;"	c
LocalErrorHandler	include/click/error.hh	/^    LocalErrorHandler(ErrorHandler *errh)$/;"	f	class:LocalErrorHandler
LocalErrorHandler	include/click/error.hh	/^class LocalErrorHandler : public ErrorVeneer { public:$/;"	c
LocationTable	elements/grid/loctable.cc	/^LocationTable::LocationTable()$/;"	f	class:LocationTable
LocationTable	elements/grid/loctable.hh	/^class LocationTable : public Element {$/;"	c
LookupGeographicGridRoute	elements/grid/lookupgeogridroute.cc	/^LookupGeographicGridRoute::LookupGeographicGridRoute()$/;"	f	class:LookupGeographicGridRoute
LookupGeographicGridRoute	elements/grid/lookupgeogridroute.hh	/^class LookupGeographicGridRoute : public Element, public GridRouteActor {$/;"	c
LookupIP6Route	elements/ip6/lookupip6route.cc	/^LookupIP6Route::LookupIP6Route()$/;"	f	class:LookupIP6Route
LookupIP6Route	elements/ip6/lookupip6route.hh	/^class LookupIP6Route : public IP6RouteTable {$/;"	c
LookupIPRouteMP	elements/ip/lookupiproutemp.cc	/^LookupIPRouteMP::LookupIPRouteMP()$/;"	f	class:LookupIPRouteMP
LookupIPRouteMP	elements/ip/lookupiproutemp.hh	/^class LookupIPRouteMP : public Element {$/;"	c
LookupLocalGridRoute	elements/grid/lookuplocalgridroute.cc	/^LookupLocalGridRoute::LookupLocalGridRoute()$/;"	f	class:LookupLocalGridRoute
LookupLocalGridRoute	elements/grid/lookuplocalgridroute.hh	/^class LookupLocalGridRoute : public Element, public GridRouteActor  {$/;"	c
LookupLocalGridRoute2	elements/grid/lookuplocalgridroute2.cc	/^LookupLocalGridRoute2::LookupLocalGridRoute2()$/;"	f	class:LookupLocalGridRoute2
LookupLocalGridRoute2	elements/grid/lookuplocalgridroute2.hh	/^class LookupLocalGridRoute2 : public Element, public GridRouteActor  {$/;"	c
M88E1000_12_PHY_ID	drivers/e1000-4.x/src/e1000_hw.h	1756;"	d
M88E1000_12_PHY_ID	drivers/e1000-5.x/src/e1000_hw.h	2131;"	d
M88E1000_12_PHY_ID	drivers/e1000-7.x/src/e1000_hw.h	3162;"	d
M88E1000_14_PHY_ID	drivers/e1000-4.x/src/e1000_hw.h	1757;"	d
M88E1000_14_PHY_ID	drivers/e1000-5.x/src/e1000_hw.h	2132;"	d
M88E1000_14_PHY_ID	drivers/e1000-7.x/src/e1000_hw.h	3163;"	d
M88E1000_EPSCR_DOWN_NO_IDLE	drivers/e1000-4.x/src/e1000_hw.h	1729;"	d
M88E1000_EPSCR_DOWN_NO_IDLE	drivers/e1000-5.x/src/e1000_hw.h	2006;"	d
M88E1000_EPSCR_DOWN_NO_IDLE	drivers/e1000-7.x/src/e1000_hw.h	2908;"	d
M88E1000_EPSCR_FIBER_LOOPBACK	drivers/e1000-4.x/src/e1000_hw.h	1728;"	d
M88E1000_EPSCR_FIBER_LOOPBACK	drivers/e1000-5.x/src/e1000_hw.h	2005;"	d
M88E1000_EPSCR_FIBER_LOOPBACK	drivers/e1000-7.x/src/e1000_hw.h	2907;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_1X	drivers/e1000-4.x/src/e1000_hw.h	1737;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_1X	drivers/e1000-5.x/src/e1000_hw.h	2014;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_1X	drivers/e1000-7.x/src/e1000_hw.h	2916;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_2X	drivers/e1000-4.x/src/e1000_hw.h	1738;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_2X	drivers/e1000-5.x/src/e1000_hw.h	2015;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_2X	drivers/e1000-7.x/src/e1000_hw.h	2917;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_3X	drivers/e1000-4.x/src/e1000_hw.h	1739;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_3X	drivers/e1000-5.x/src/e1000_hw.h	2016;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_3X	drivers/e1000-7.x/src/e1000_hw.h	2918;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_4X	drivers/e1000-4.x/src/e1000_hw.h	1740;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_4X	drivers/e1000-5.x/src/e1000_hw.h	2017;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_4X	drivers/e1000-7.x/src/e1000_hw.h	2919;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_MASK	drivers/e1000-4.x/src/e1000_hw.h	1736;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_MASK	drivers/e1000-5.x/src/e1000_hw.h	2013;"	d
M88E1000_EPSCR_MASTER_DOWNSHIFT_MASK	drivers/e1000-7.x/src/e1000_hw.h	2915;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_1X	drivers/e1000-4.x/src/e1000_hw.h	1745;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_1X	drivers/e1000-5.x/src/e1000_hw.h	2022;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_1X	drivers/e1000-7.x/src/e1000_hw.h	2924;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_2X	drivers/e1000-4.x/src/e1000_hw.h	1746;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_2X	drivers/e1000-5.x/src/e1000_hw.h	2023;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_2X	drivers/e1000-7.x/src/e1000_hw.h	2925;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_3X	drivers/e1000-4.x/src/e1000_hw.h	1747;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_3X	drivers/e1000-5.x/src/e1000_hw.h	2024;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_3X	drivers/e1000-7.x/src/e1000_hw.h	2926;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_DIS	drivers/e1000-4.x/src/e1000_hw.h	1744;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_DIS	drivers/e1000-5.x/src/e1000_hw.h	2021;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_DIS	drivers/e1000-7.x/src/e1000_hw.h	2923;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_MASK	drivers/e1000-4.x/src/e1000_hw.h	1743;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_MASK	drivers/e1000-5.x/src/e1000_hw.h	2020;"	d
M88E1000_EPSCR_SLAVE_DOWNSHIFT_MASK	drivers/e1000-7.x/src/e1000_hw.h	2922;"	d
M88E1000_EPSCR_TX_CLK_0	drivers/e1000-4.x/src/e1000_hw.h	1750;"	d
M88E1000_EPSCR_TX_CLK_0	drivers/e1000-5.x/src/e1000_hw.h	2027;"	d
M88E1000_EPSCR_TX_CLK_0	drivers/e1000-7.x/src/e1000_hw.h	2929;"	d
M88E1000_EPSCR_TX_CLK_25	drivers/e1000-4.x/src/e1000_hw.h	1749;"	d
M88E1000_EPSCR_TX_CLK_25	drivers/e1000-5.x/src/e1000_hw.h	2026;"	d
M88E1000_EPSCR_TX_CLK_25	drivers/e1000-7.x/src/e1000_hw.h	2928;"	d
M88E1000_EPSCR_TX_CLK_2_5	drivers/e1000-4.x/src/e1000_hw.h	1748;"	d
M88E1000_EPSCR_TX_CLK_2_5	drivers/e1000-5.x/src/e1000_hw.h	2025;"	d
M88E1000_EPSCR_TX_CLK_2_5	drivers/e1000-7.x/src/e1000_hw.h	2927;"	d
M88E1000_EXT_PHY_SPEC_CTRL	drivers/e1000-4.x/src/e1000_hw.h	1543;"	d
M88E1000_EXT_PHY_SPEC_CTRL	drivers/e1000-5.x/src/e1000_hw.h	1764;"	d
M88E1000_EXT_PHY_SPEC_CTRL	drivers/e1000-7.x/src/e1000_hw.h	2585;"	d
M88E1000_E_PHY_ID	drivers/e1000-4.x/src/e1000_hw.h	1753;"	d
M88E1000_E_PHY_ID	drivers/e1000-5.x/src/e1000_hw.h	2127;"	d
M88E1000_E_PHY_ID	drivers/e1000-7.x/src/e1000_hw.h	3158;"	d
M88E1000_INT_ENABLE	drivers/e1000-4.x/src/e1000_hw.h	1541;"	d
M88E1000_INT_ENABLE	drivers/e1000-5.x/src/e1000_hw.h	1762;"	d
M88E1000_INT_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2583;"	d
M88E1000_INT_STATUS	drivers/e1000-4.x/src/e1000_hw.h	1542;"	d
M88E1000_INT_STATUS	drivers/e1000-5.x/src/e1000_hw.h	1763;"	d
M88E1000_INT_STATUS	drivers/e1000-7.x/src/e1000_hw.h	2584;"	d
M88E1000_I_PHY_ID	drivers/e1000-4.x/src/e1000_hw.h	1754;"	d
M88E1000_I_PHY_ID	drivers/e1000-5.x/src/e1000_hw.h	2128;"	d
M88E1000_I_PHY_ID	drivers/e1000-7.x/src/e1000_hw.h	3159;"	d
M88E1000_PHY_EXT_CTRL	drivers/e1000-5.x/src/e1000_hw.h	1767;"	d
M88E1000_PHY_EXT_CTRL	drivers/e1000-7.x/src/e1000_hw.h	2588;"	d
M88E1000_PHY_GEN_CONTROL	drivers/e1000-5.x/src/e1000_hw.h	1769;"	d
M88E1000_PHY_GEN_CONTROL	drivers/e1000-7.x/src/e1000_hw.h	2590;"	d
M88E1000_PHY_PAGE_SELECT	drivers/e1000-5.x/src/e1000_hw.h	1768;"	d
M88E1000_PHY_PAGE_SELECT	drivers/e1000-7.x/src/e1000_hw.h	2589;"	d
M88E1000_PHY_SPEC_CTRL	drivers/e1000-4.x/src/e1000_hw.h	1539;"	d
M88E1000_PHY_SPEC_CTRL	drivers/e1000-5.x/src/e1000_hw.h	1760;"	d
M88E1000_PHY_SPEC_CTRL	drivers/e1000-7.x/src/e1000_hw.h	2581;"	d
M88E1000_PHY_SPEC_STATUS	drivers/e1000-4.x/src/e1000_hw.h	1540;"	d
M88E1000_PHY_SPEC_STATUS	drivers/e1000-5.x/src/e1000_hw.h	1761;"	d
M88E1000_PHY_SPEC_STATUS	drivers/e1000-7.x/src/e1000_hw.h	2582;"	d
M88E1000_PHY_VCO_REG_BIT11	drivers/e1000-5.x/src/e1000_hw.h	1771;"	d
M88E1000_PHY_VCO_REG_BIT11	drivers/e1000-7.x/src/e1000_hw.h	2592;"	d
M88E1000_PHY_VCO_REG_BIT8	drivers/e1000-5.x/src/e1000_hw.h	1770;"	d
M88E1000_PHY_VCO_REG_BIT8	drivers/e1000-7.x/src/e1000_hw.h	2591;"	d
M88E1000_PSCR_10BT_EXT_DIST_ENABLE	drivers/e1000-4.x/src/e1000_hw.h	1693;"	d
M88E1000_PSCR_10BT_EXT_DIST_ENABLE	drivers/e1000-5.x/src/e1000_hw.h	1968;"	d
M88E1000_PSCR_10BT_EXT_DIST_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2870;"	d
M88E1000_PSCR_10BT_EXT_DIST_ENABLE_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1706;"	d
M88E1000_PSCR_10BT_EXT_DIST_ENABLE_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1981;"	d
M88E1000_PSCR_10BT_EXT_DIST_ENABLE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2883;"	d
M88E1000_PSCR_ASSERT_CRS_ON_TX	drivers/e1000-4.x/src/e1000_hw.h	1702;"	d
M88E1000_PSCR_ASSERT_CRS_ON_TX	drivers/e1000-5.x/src/e1000_hw.h	1977;"	d
M88E1000_PSCR_ASSERT_CRS_ON_TX	drivers/e1000-7.x/src/e1000_hw.h	2879;"	d
M88E1000_PSCR_AUTO_X_1000T	drivers/e1000-4.x/src/e1000_hw.h	1686;"	d
M88E1000_PSCR_AUTO_X_1000T	drivers/e1000-5.x/src/e1000_hw.h	1961;"	d
M88E1000_PSCR_AUTO_X_1000T	drivers/e1000-7.x/src/e1000_hw.h	2863;"	d
M88E1000_PSCR_AUTO_X_MODE	drivers/e1000-4.x/src/e1000_hw.h	1690;"	d
M88E1000_PSCR_AUTO_X_MODE	drivers/e1000-5.x/src/e1000_hw.h	1965;"	d
M88E1000_PSCR_AUTO_X_MODE	drivers/e1000-7.x/src/e1000_hw.h	2867;"	d
M88E1000_PSCR_AUTO_X_MODE_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1705;"	d
M88E1000_PSCR_AUTO_X_MODE_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1980;"	d
M88E1000_PSCR_AUTO_X_MODE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2882;"	d
M88E1000_PSCR_CLK125_DISABLE	drivers/e1000-4.x/src/e1000_hw.h	1680;"	d
M88E1000_PSCR_CLK125_DISABLE	drivers/e1000-5.x/src/e1000_hw.h	1955;"	d
M88E1000_PSCR_CLK125_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	2857;"	d
M88E1000_PSCR_FORCE_LINK_GOOD	drivers/e1000-4.x/src/e1000_hw.h	1701;"	d
M88E1000_PSCR_FORCE_LINK_GOOD	drivers/e1000-5.x/src/e1000_hw.h	1976;"	d
M88E1000_PSCR_FORCE_LINK_GOOD	drivers/e1000-7.x/src/e1000_hw.h	2878;"	d
M88E1000_PSCR_JABBER_DISABLE	drivers/e1000-4.x/src/e1000_hw.h	1677;"	d
M88E1000_PSCR_JABBER_DISABLE	drivers/e1000-5.x/src/e1000_hw.h	1952;"	d
M88E1000_PSCR_JABBER_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	2854;"	d
M88E1000_PSCR_MDIX_MANUAL_MODE	drivers/e1000-4.x/src/e1000_hw.h	1685;"	d
M88E1000_PSCR_MDIX_MANUAL_MODE	drivers/e1000-5.x/src/e1000_hw.h	1960;"	d
M88E1000_PSCR_MDIX_MANUAL_MODE	drivers/e1000-7.x/src/e1000_hw.h	2862;"	d
M88E1000_PSCR_MDI_MANUAL_MODE	drivers/e1000-4.x/src/e1000_hw.h	1683;"	d
M88E1000_PSCR_MDI_MANUAL_MODE	drivers/e1000-5.x/src/e1000_hw.h	1958;"	d
M88E1000_PSCR_MDI_MANUAL_MODE	drivers/e1000-7.x/src/e1000_hw.h	2860;"	d
M88E1000_PSCR_MII_5BIT_ENABLE	drivers/e1000-4.x/src/e1000_hw.h	1697;"	d
M88E1000_PSCR_MII_5BIT_ENABLE	drivers/e1000-5.x/src/e1000_hw.h	1972;"	d
M88E1000_PSCR_MII_5BIT_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2874;"	d
M88E1000_PSCR_POLARITY_REVERSAL	drivers/e1000-4.x/src/e1000_hw.h	1678;"	d
M88E1000_PSCR_POLARITY_REVERSAL	drivers/e1000-5.x/src/e1000_hw.h	1953;"	d
M88E1000_PSCR_POLARITY_REVERSAL	drivers/e1000-7.x/src/e1000_hw.h	2855;"	d
M88E1000_PSCR_POLARITY_REVERSAL_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1704;"	d
M88E1000_PSCR_POLARITY_REVERSAL_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1979;"	d
M88E1000_PSCR_POLARITY_REVERSAL_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2881;"	d
M88E1000_PSCR_SCRAMBLER_DISABLE	drivers/e1000-4.x/src/e1000_hw.h	1700;"	d
M88E1000_PSCR_SCRAMBLER_DISABLE	drivers/e1000-5.x/src/e1000_hw.h	1975;"	d
M88E1000_PSCR_SCRAMBLER_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	2877;"	d
M88E1000_PSCR_SQE_TEST	drivers/e1000-4.x/src/e1000_hw.h	1679;"	d
M88E1000_PSCR_SQE_TEST	drivers/e1000-5.x/src/e1000_hw.h	1954;"	d
M88E1000_PSCR_SQE_TEST	drivers/e1000-7.x/src/e1000_hw.h	2856;"	d
M88E1000_PSSR_1000MBS	drivers/e1000-4.x/src/e1000_hw.h	1721;"	d
M88E1000_PSSR_1000MBS	drivers/e1000-5.x/src/e1000_hw.h	1997;"	d
M88E1000_PSSR_1000MBS	drivers/e1000-7.x/src/e1000_hw.h	2899;"	d
M88E1000_PSSR_100MBS	drivers/e1000-4.x/src/e1000_hw.h	1720;"	d
M88E1000_PSSR_100MBS	drivers/e1000-5.x/src/e1000_hw.h	1996;"	d
M88E1000_PSSR_100MBS	drivers/e1000-7.x/src/e1000_hw.h	2898;"	d
M88E1000_PSSR_10MBS	drivers/e1000-4.x/src/e1000_hw.h	1719;"	d
M88E1000_PSSR_10MBS	drivers/e1000-5.x/src/e1000_hw.h	1995;"	d
M88E1000_PSSR_10MBS	drivers/e1000-7.x/src/e1000_hw.h	2897;"	d
M88E1000_PSSR_CABLE_LENGTH	drivers/e1000-4.x/src/e1000_hw.h	1712;"	d
M88E1000_PSSR_CABLE_LENGTH	drivers/e1000-5.x/src/e1000_hw.h	1988;"	d
M88E1000_PSSR_CABLE_LENGTH	drivers/e1000-7.x/src/e1000_hw.h	2890;"	d
M88E1000_PSSR_CABLE_LENGTH_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1725;"	d
M88E1000_PSSR_CABLE_LENGTH_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	2002;"	d
M88E1000_PSSR_CABLE_LENGTH_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2904;"	d
M88E1000_PSSR_DOWNSHIFT	drivers/e1000-5.x/src/e1000_hw.h	1986;"	d
M88E1000_PSSR_DOWNSHIFT	drivers/e1000-7.x/src/e1000_hw.h	2888;"	d
M88E1000_PSSR_DOWNSHIFT_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	2000;"	d
M88E1000_PSSR_DOWNSHIFT_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2902;"	d
M88E1000_PSSR_DPLX	drivers/e1000-4.x/src/e1000_hw.h	1717;"	d
M88E1000_PSSR_DPLX	drivers/e1000-5.x/src/e1000_hw.h	1993;"	d
M88E1000_PSSR_DPLX	drivers/e1000-7.x/src/e1000_hw.h	2895;"	d
M88E1000_PSSR_JABBER	drivers/e1000-4.x/src/e1000_hw.h	1709;"	d
M88E1000_PSSR_JABBER	drivers/e1000-5.x/src/e1000_hw.h	1984;"	d
M88E1000_PSSR_JABBER	drivers/e1000-7.x/src/e1000_hw.h	2886;"	d
M88E1000_PSSR_LINK	drivers/e1000-4.x/src/e1000_hw.h	1714;"	d
M88E1000_PSSR_LINK	drivers/e1000-5.x/src/e1000_hw.h	1990;"	d
M88E1000_PSSR_LINK	drivers/e1000-7.x/src/e1000_hw.h	2892;"	d
M88E1000_PSSR_MDIX	drivers/e1000-4.x/src/e1000_hw.h	1711;"	d
M88E1000_PSSR_MDIX	drivers/e1000-5.x/src/e1000_hw.h	1987;"	d
M88E1000_PSSR_MDIX	drivers/e1000-7.x/src/e1000_hw.h	2889;"	d
M88E1000_PSSR_MDIX_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1724;"	d
M88E1000_PSSR_MDIX_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	2001;"	d
M88E1000_PSSR_MDIX_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2903;"	d
M88E1000_PSSR_PAGE_RCVD	drivers/e1000-4.x/src/e1000_hw.h	1716;"	d
M88E1000_PSSR_PAGE_RCVD	drivers/e1000-5.x/src/e1000_hw.h	1992;"	d
M88E1000_PSSR_PAGE_RCVD	drivers/e1000-7.x/src/e1000_hw.h	2894;"	d
M88E1000_PSSR_REV_POLARITY	drivers/e1000-4.x/src/e1000_hw.h	1710;"	d
M88E1000_PSSR_REV_POLARITY	drivers/e1000-5.x/src/e1000_hw.h	1985;"	d
M88E1000_PSSR_REV_POLARITY	drivers/e1000-7.x/src/e1000_hw.h	2887;"	d
M88E1000_PSSR_REV_POLARITY_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1723;"	d
M88E1000_PSSR_REV_POLARITY_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1999;"	d
M88E1000_PSSR_REV_POLARITY_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2901;"	d
M88E1000_PSSR_SPD_DPLX_RESOLVED	drivers/e1000-4.x/src/e1000_hw.h	1715;"	d
M88E1000_PSSR_SPD_DPLX_RESOLVED	drivers/e1000-5.x/src/e1000_hw.h	1991;"	d
M88E1000_PSSR_SPD_DPLX_RESOLVED	drivers/e1000-7.x/src/e1000_hw.h	2893;"	d
M88E1000_PSSR_SPEED	drivers/e1000-4.x/src/e1000_hw.h	1718;"	d
M88E1000_PSSR_SPEED	drivers/e1000-5.x/src/e1000_hw.h	1994;"	d
M88E1000_PSSR_SPEED	drivers/e1000-7.x/src/e1000_hw.h	2896;"	d
M88E1000_RX_ERR_CNTR	drivers/e1000-4.x/src/e1000_hw.h	1544;"	d
M88E1000_RX_ERR_CNTR	drivers/e1000-5.x/src/e1000_hw.h	1765;"	d
M88E1000_RX_ERR_CNTR	drivers/e1000-7.x/src/e1000_hw.h	2586;"	d
M88E1011_I_PHY_ID	drivers/e1000-4.x/src/e1000_hw.h	1755;"	d
M88E1011_I_PHY_ID	drivers/e1000-5.x/src/e1000_hw.h	2129;"	d
M88E1011_I_PHY_ID	drivers/e1000-7.x/src/e1000_hw.h	3160;"	d
M88E1011_I_REV_4	drivers/e1000-5.x/src/e1000_hw.h	2133;"	d
M88E1011_I_REV_4	drivers/e1000-7.x/src/e1000_hw.h	3164;"	d
M88E1111_I_PHY_ID	drivers/e1000-7.x/src/e1000_hw.h	3165;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_1X	drivers/e1000-7.x/src/e1000_hw.h	2933;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_2X	drivers/e1000-7.x/src/e1000_hw.h	2934;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_3X	drivers/e1000-7.x/src/e1000_hw.h	2935;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_4X	drivers/e1000-7.x/src/e1000_hw.h	2936;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_5X	drivers/e1000-7.x/src/e1000_hw.h	2937;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_6X	drivers/e1000-7.x/src/e1000_hw.h	2938;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_7X	drivers/e1000-7.x/src/e1000_hw.h	2939;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_8X	drivers/e1000-7.x/src/e1000_hw.h	2940;"	d
M88EC018_EPSCR_DOWNSHIFT_COUNTER_MASK	drivers/e1000-7.x/src/e1000_hw.h	2932;"	d
M88_VENDOR	drivers/e1000-7.x/src/e1000_hw.h	3157;"	d
MAC_DECODE_SIZE	drivers/e1000-4.x/src/e1000_hw.h	259;"	d
MAC_DECODE_SIZE	drivers/e1000-5.x/src/e1000_hw.h	388;"	d
MAC_DECODE_SIZE	drivers/e1000-7.x/src/e1000_hw.h	506;"	d
MAJOR_VERSION	elements/analysis/ipsumdumpinfo.hh	/^enum { MAJOR_VERSION = 1, MINOR_VERSION = 3 };$/;"	e	enum:IPSummaryDump::__anon258
MAKE_ANNOTATIONINFO	include/click/packet_anno.hh	4;"	d
MALLOC_LIKE	elements/local/OpenFlow/lib/compiler.hh	42;"	d
MANDIR	drivers/e1000-4.x/src/Makefile	/^  MANDIR := $(firstword $(MANDIR))$/;"	m
MANDIR	drivers/e1000-4.x/src/Makefile	/^  MANDIR := $(foreach dir, $(MANDIR), $(test_dir))$/;"	m
MANDIR	drivers/e1000-4.x/src/Makefile	/^  MANDIR := \/usr\/man$/;"	m
MANDIR	drivers/e1000-4.x/src/Makefile	/^  MANDIR := \/usr\/share\/man \/usr\/man$/;"	m
MANDIR	drivers/e1000-5.x/src/Makefile	/^  MANDIR := $(firstword $(MANDIR))$/;"	m
MANDIR	drivers/e1000-5.x/src/Makefile	/^  MANDIR := $(foreach dir, $(MANDIR), $(test_dir))$/;"	m
MANDIR	drivers/e1000-5.x/src/Makefile	/^  MANDIR := \/usr\/man$/;"	m
MANDIR	drivers/e1000-5.x/src/Makefile	/^  MANDIR := \/usr\/share\/man \/usr\/man$/;"	m
MANDIR	drivers/e1000-7.x/src/Makefile	/^  MANDIR := $(firstword $(MANDIR))$/;"	m
MANDIR	drivers/e1000-7.x/src/Makefile	/^  MANDIR := $(foreach dir, $(MANDIR), $(test_dir))$/;"	m
MANDIR	drivers/e1000-7.x/src/Makefile	/^  MANDIR := \/usr\/man$/;"	m
MANDIR	drivers/e1000-7.x/src/Makefile	/^  MANDIR := \/usr\/share\/man \/usr\/man$/;"	m
MANFILE	drivers/e1000-4.x/src/Makefile	/^MANFILE = $(TARGET:.o=.$(MANSECTION))$/;"	m
MANFILE	drivers/e1000-5.x/src/Makefile	/^MANFILE = $(TARGET:.ko=.$(MANSECTION))$/;"	m
MANFILE	drivers/e1000-5.x/src/Makefile	/^MANFILE = $(TARGET:.o=.$(MANSECTION))$/;"	m
MANFILE	drivers/e1000-7.x/src/Makefile	/^MANFILE = $(TARGET:.ko=.$(MANSECTION))$/;"	m
MANFILE	drivers/e1000-7.x/src/Makefile	/^MANFILE = $(TARGET:.o=.$(MANSECTION))$/;"	m
MANPATH	drivers/e1000-4.x/src/Makefile	/^  MANPATH := $(shell (manpath 2>\/dev\/null || echo $MANPATH) | sed 's\/:\/ \/g')$/;"	m
MANPATH	drivers/e1000-5.x/src/Makefile	/^  MANPATH := $(shell (manpath 2>\/dev\/null || echo $MANPATH) | sed 's\/:\/ \/g')$/;"	m
MANPATH	drivers/e1000-7.x/src/Makefile	/^  MANPATH := $(shell (manpath 2>\/dev\/null || echo $MANPATH) | sed 's\/:\/ \/g')$/;"	m
MANSECTION	drivers/e1000-4.x/src/Makefile	/^MANSECTION = 7$/;"	m
MANSECTION	drivers/e1000-5.x/src/Makefile	/^MANSECTION = 7$/;"	m
MANSECTION	drivers/e1000-7.x/src/Makefile	/^MANSECTION = 7$/;"	m
MAP_FIND_VALUE	elements/test/hashtabletest.cc	49;"	d	file:
MAP_FIND_VALUE	elements/test/hashtabletest.cc	55;"	d	file:
MAP_INSERT	elements/test/hashtabletest.cc	48;"	d	file:
MAP_INSERT	elements/test/hashtabletest.cc	54;"	d	file:
MAP_OPT	tools/click-install/click-install.cc	59;"	d	file:
MAP_S2I	elements/test/hashtabletest.cc	45;"	d	file:
MAP_S2I	elements/test/hashtabletest.cc	51;"	d	file:
MAP_SIZE	elements/bsdmodule/anydevice.hh	/^    static const int MAP_SIZE = 64;$/;"	m	class:AnyDeviceMap
MAP_SIZE	elements/linuxmodule/anydevice.hh	/^    enum { MAP_SIZE = 64 };$/;"	e	enum:AnyDeviceMap::__anon316
MAP_VALUE	elements/test/hashtabletest.cc	46;"	d	file:
MAP_VALUE	elements/test/hashtabletest.cc	52;"	d	file:
MARKER	elements/ip/ipfieldinfo.hh	/^	MARKER = 0x40000000$/;"	e	enum:IPField::__anon343
MASTER_DISABLE_TIMEOUT	drivers/e1000-7.x/src/e1000_hw.h	2498;"	d
MAX	elements/local/OpenFlow/lib/util.hh	81;"	d
MAXIMUM_ETHERNET_FRAME_SIZE	drivers/e1000-4.x/src/e1000_hw.h	272;"	d
MAXIMUM_ETHERNET_FRAME_SIZE	drivers/e1000-5.x/src/e1000_hw.h	405;"	d
MAXIMUM_ETHERNET_FRAME_SIZE	drivers/e1000-7.x/src/e1000_hw.h	523;"	d
MAXIMUM_ETHERNET_PACKET_SIZE	drivers/e1000-4.x/src/e1000_hw.h	275;"	d
MAXIMUM_ETHERNET_PACKET_SIZE	drivers/e1000-5.x/src/e1000_hw.h	408;"	d
MAXIMUM_ETHERNET_PACKET_SIZE	drivers/e1000-7.x/src/e1000_hw.h	526;"	d
MAXIMUM_ETHERNET_VLAN_SIZE	drivers/e1000-7.x/src/e1000.h	119;"	d
MAX_82544_RXD	drivers/e1000-4.x/src/e1000_param.c	198;"	d	file:
MAX_82544_TXD	drivers/e1000-4.x/src/e1000_param.c	193;"	d	file:
MAX_AGE_DEFAULT	elements/grid/grid.hh	/^	MAX_AGE_DEFAULT = 300000, \/\/ ~ 300 secs$/;"	e	enum:grid_hello::__anon228
MAX_AMBIGUOUS_VALUES	lib/clp.c	134;"	d	file:
MAX_BACKLOG	elements/userlevel/chattersocket.hh	/^  enum { MAX_BACKLOG = 500000 };$/;"	e	enum:ChatterSocket::__anon194
MAX_BCAST_HISTORY	elements/grid/dsdvroutetable.hh	183;"	d
MAX_CD_ALGORITHMS	elements/local/FlowNet/scheduler/FlowSchedulable.hh	101;"	d
MAX_COMPOSEDTRACES_PER_PACKET	elements/local/FlowNet/papmo/PaPMo.hh	74;"	d
MAX_COUNTERS	elements/ip/ipratemon.hh	/^    enum { MAX_COUNTERS = 256 };$/;"	e	enum:IPRateMonitor::Stats::__anon341
MAX_DOMLIST	elements/standard/classification.hh	/^    enum { MAX_DOMLIST = 4 };$/;"	e	enum:Classification::Wordwise::DominatorOptimizer::__anon183
MAX_ETHERNET_PACKET_SIZE	drivers/e1000-4.x/src/ans_driver.h	59;"	d
MAX_FLOWID_LEN	elements/local/FlowNet/common/Flow.hh	48;"	d
MAX_FLOW_STATS_BYTES	elements/local/OpenFlow/datapath.cc	211;"	d	file:
MAX_FRAME_BUFFER_SIZE	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.hh	10;"	d
MAX_HOOKS	elements/local/OpenFlow/lib/fatal-signal.cc	58;"	d	file:
MAX_INLINE_BIT	include/click/bitvector.hh	/^    enum { MAX_INLINE_BIT = 63, MAX_INLINE_WORD = 1 };$/;"	e	enum:Bitvector::__anon466
MAX_INLINE_WORD	include/click/bitvector.hh	/^    enum { MAX_INLINE_BIT = 63, MAX_INLINE_WORD = 1 };$/;"	e	enum:Bitvector::__anon466
MAX_INTS_PER_SEC	drivers/e1000-4.x/src/e1000_main.c	958;"	d	file:
MAX_ITR	drivers/e1000-5.x/src/e1000_param.c	223;"	d	file:
MAX_ITR	drivers/e1000-7.x/src/e1000_param.c	197;"	d	file:
MAX_JUMBO_FRAME_SIZE	drivers/e1000-4.x/src/e1000_hw.h	280;"	d
MAX_JUMBO_FRAME_SIZE	drivers/e1000-5.x/src/e1000_hw.h	413;"	d
MAX_JUMBO_FRAME_SIZE	drivers/e1000-7.x/src/e1000_hw.h	531;"	d
MAX_KILLED_PKT_SIZE	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	130;"	d
MAX_LENGTH	elements/ip/ipfieldinfo.hh	/^	MAX_LENGTH = 0x3F,$/;"	e	enum:IPField::__anon343
MAX_LINE_SZ	apps/csclient/csclient.cc	124;"	d	file:
MAX_MONITORS	elements/local/OpenFlow/lib/rconn.cc	136;"	d	file:
MAX_NBUCKETS	include/click/hashmap.hh	/^  enum { MAX_NBUCKETS = 32767,$/;"	e	enum:HashMap::__anon436
MAX_NBUCKETS	include/click/hashmap.hh	/^  enum { MAX_NBUCKETS = 4194303,$/;"	e	enum:HashMap::__anon435
MAX_NUMBER_OF_DESCRIPTORS	drivers/e1000-4.x/src/e1000_hw.h	327;"	d
MAX_NUMBER_OF_DESCRIPTORS	drivers/e1000-5.x/src/e1000_hw.h	460;"	d
MAX_NUMBER_OF_DESCRIPTORS	drivers/e1000-7.x/src/e1000_hw.h	592;"	d
MAX_NUM_VLAN	drivers/e1000-4.x/src/ans.h	83;"	d
MAX_OFFSET	elements/ip/ipfieldinfo.hh	/^	MAX_OFFSET = 0x1FFF,$/;"	e	enum:IPField::__anon343
MAX_PFFW	elements/local/FlowNet/common/FlowNetGod.hh	176;"	d
MAX_PHY_MULTI_PAGE_REG	drivers/e1000-5.x/src/e1000_hw.h	1757;"	d
MAX_PHY_MULTI_PAGE_REG	drivers/e1000-7.x/src/e1000_hw.h	2578;"	d
MAX_PHY_REG_ADDRESS	drivers/e1000-4.x/src/e1000_hw.h	1546;"	d
MAX_PHY_REG_ADDRESS	drivers/e1000-5.x/src/e1000_hw.h	1756;"	d
MAX_PHY_REG_ADDRESS	drivers/e1000-7.x/src/e1000_hw.h	2577;"	d
MAX_PROCESSES	elements/local/OpenFlow/lib/netlink.cc	975;"	d	file:
MAX_PROC_SIZE	elements/grid/packetlogger.cc	68;"	d	file:
MAX_PROC_SIZE	elements/grid/packetlogger2.cc	78;"	d	file:
MAX_PROTO	elements/ip/ipfieldinfo.hh	/^	MAX_PROTO = 0x1FF,$/;"	e	enum:IPField::__anon343
MAX_PS_BUFFERS	drivers/e1000-7.x/src/e1000_hw.h	629;"	d
MAX_QL_WINDOW_SIZE	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	38;"	d
MAX_RAND	elements/aqm/pi.hh	/^    static const int MAX_RAND=2147483647;$/;"	m	class:PI
MAX_RATE	include/click/gaprate.hh	/^    enum { MAX_RATE = 1000000U << UGAP_SHIFT };$/;"	e	enum:GapRate::__anon413
MAX_RXABSDELAY	drivers/e1000-4.x/src/e1000_param.c	206;"	d	file:
MAX_RXABSDELAY	drivers/e1000-5.x/src/e1000_param.c	211;"	d	file:
MAX_RXABSDELAY	drivers/e1000-7.x/src/e1000_param.c	188;"	d	file:
MAX_RXD	drivers/e1000-4.x/src/e1000_param.c	196;"	d	file:
MAX_RXDELAY	drivers/e1000-4.x/src/e1000_param.c	202;"	d	file:
MAX_RXDELAY	drivers/e1000-5.x/src/e1000_param.c	207;"	d	file:
MAX_RXDELAY	drivers/e1000-7.x/src/e1000_param.c	179;"	d	file:
MAX_SHIFT	elements/ip/ipratemon.hh	/^  enum { MAX_SHIFT = 24, PERIODIC_FOLD_INIT = 8192, MEMMAX_MIN = 100 };$/;"	e	enum:IPRateMonitor::__anon342
MAX_SOCKETS	elements/local/OpenFlow/lib/netlink.cc	972;"	d	file:
MAX_STD_JUMBO_FRAME_SIZE	drivers/e1000-7.x/src/e1000_main.c	3704;"	d	file:
MAX_STRIDE	include/click/task.hh	/^    enum { STRIDE1 = 1U<<16, MAX_STRIDE = 1U<<31 };$/;"	e	enum:Task::__anon453
MAX_TABLE_ELEMENT	elements/local/FlowNet/common/FlowNetGod.hh	35;"	d
MAX_TICKETS	elements/standard/stridesched.hh	/^    enum { STRIDE1 = 1U<<16, MAX_TICKETS = 1U<<15 };$/;"	e	enum:StrideSched::__anon184
MAX_TICKETS	include/click/task.hh	/^    enum { MAX_TICKETS = 1<<15, DEFAULT_TICKETS = 1<<10 };$/;"	e	enum:Task::__anon454
MAX_TTL_DEFAULT	elements/grid/grid.hh	/^	MAX_TTL_DEFAULT = MAX_AGE_DEFAULT$/;"	e	enum:grid_hello::__anon228
MAX_TXABSDELAY	drivers/e1000-4.x/src/e1000_param.c	214;"	d	file:
MAX_TXABSDELAY	drivers/e1000-5.x/src/e1000_param.c	219;"	d	file:
MAX_TXABSDELAY	drivers/e1000-7.x/src/e1000_param.c	169;"	d	file:
MAX_TXD	drivers/e1000-4.x/src/e1000_param.c	191;"	d	file:
MAX_TXDELAY	drivers/e1000-4.x/src/e1000_param.c	210;"	d	file:
MAX_TXDELAY	drivers/e1000-5.x/src/e1000_param.c	215;"	d	file:
MAX_TXDELAY	drivers/e1000-7.x/src/e1000_param.c	160;"	d	file:
MAX_UTILIZATION	include/click/task.hh	/^    enum { MAX_UTILIZATION = 1000 };$/;"	e	enum:Task::__anon455
MD5_DIGEST_SIZE	include/click/md5.h	123;"	d
MD5_TEXT_DIGEST_MAX_SIZE	include/click/md5.h	135;"	d
MD5_TEXT_DIGEST_SIZE	include/click/md5.h	134;"	d
MDEBUG	linuxmodule/modulepriv.hh	23;"	d
MEMMAX_MIN	elements/ip/ipratemon.hh	/^  enum { MAX_SHIFT = 24, PERIODIC_FOLD_INIT = 8192, MEMMAX_MIN = 100 };$/;"	e	enum:IPRateMonitor::__anon342
MEMO_INITIALIZER_TAIL	lib/string.cc	66;"	d	file:
MEMO_INITIALIZER_TAIL	lib/string.cc	68;"	d	file:
MEMO_SPACE	include/click/straccum.hh	/^	MEMO_SPACE = String::MEMO_SPACE$/;"	e	enum:StringAccum::__anon429
MEMO_SPACE	include/click/string.hh	/^	MEMO_SPACE = sizeof(memo_t) - 8$/;"	e	enum:String::__anon457
MESSAGE_AGE_INCREMENT	elements/local/OpenFlow/lib/stp.cc	166;"	d	file:
METAPOST	etc/diagrams/Makefile	/^METAPOST= mpost$/;"	m
MH_INIT	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	46;"	d
MII_CR_AUTO_NEG_EN	drivers/e1000-4.x/src/e1000_hw.h	1555;"	d
MII_CR_AUTO_NEG_EN	drivers/e1000-5.x/src/e1000_hw.h	1827;"	d
MII_CR_AUTO_NEG_EN	drivers/e1000-7.x/src/e1000_hw.h	2729;"	d
MII_CR_COLL_TEST_ENABLE	drivers/e1000-4.x/src/e1000_hw.h	1550;"	d
MII_CR_COLL_TEST_ENABLE	drivers/e1000-5.x/src/e1000_hw.h	1822;"	d
MII_CR_COLL_TEST_ENABLE	drivers/e1000-7.x/src/e1000_hw.h	2724;"	d
MII_CR_FULL_DUPLEX	drivers/e1000-4.x/src/e1000_hw.h	1551;"	d
MII_CR_FULL_DUPLEX	drivers/e1000-5.x/src/e1000_hw.h	1823;"	d
MII_CR_FULL_DUPLEX	drivers/e1000-7.x/src/e1000_hw.h	2725;"	d
MII_CR_ISOLATE	drivers/e1000-4.x/src/e1000_hw.h	1553;"	d
MII_CR_ISOLATE	drivers/e1000-5.x/src/e1000_hw.h	1825;"	d
MII_CR_ISOLATE	drivers/e1000-7.x/src/e1000_hw.h	2727;"	d
MII_CR_LOOPBACK	drivers/e1000-4.x/src/e1000_hw.h	1557;"	d
MII_CR_LOOPBACK	drivers/e1000-5.x/src/e1000_hw.h	1829;"	d
MII_CR_LOOPBACK	drivers/e1000-7.x/src/e1000_hw.h	2731;"	d
MII_CR_POWER_DOWN	drivers/e1000-4.x/src/e1000_hw.h	1554;"	d
MII_CR_POWER_DOWN	drivers/e1000-5.x/src/e1000_hw.h	1826;"	d
MII_CR_POWER_DOWN	drivers/e1000-7.x/src/e1000_hw.h	2728;"	d
MII_CR_RESET	drivers/e1000-4.x/src/e1000_hw.h	1558;"	d
MII_CR_RESET	drivers/e1000-5.x/src/e1000_hw.h	1830;"	d
MII_CR_RESET	drivers/e1000-7.x/src/e1000_hw.h	2732;"	d
MII_CR_RESTART_AUTO_NEG	drivers/e1000-4.x/src/e1000_hw.h	1552;"	d
MII_CR_RESTART_AUTO_NEG	drivers/e1000-5.x/src/e1000_hw.h	1824;"	d
MII_CR_RESTART_AUTO_NEG	drivers/e1000-7.x/src/e1000_hw.h	2726;"	d
MII_CR_SPEED_10	drivers/e1000-4.x/src/e1000_hw.h	1768;"	d
MII_CR_SPEED_10	drivers/e1000-5.x/src/e1000_hw.h	2144;"	d
MII_CR_SPEED_10	drivers/e1000-7.x/src/e1000_hw.h	3395;"	d
MII_CR_SPEED_100	drivers/e1000-4.x/src/e1000_hw.h	1767;"	d
MII_CR_SPEED_100	drivers/e1000-5.x/src/e1000_hw.h	2143;"	d
MII_CR_SPEED_100	drivers/e1000-7.x/src/e1000_hw.h	3394;"	d
MII_CR_SPEED_1000	drivers/e1000-4.x/src/e1000_hw.h	1766;"	d
MII_CR_SPEED_1000	drivers/e1000-5.x/src/e1000_hw.h	2142;"	d
MII_CR_SPEED_1000	drivers/e1000-7.x/src/e1000_hw.h	3393;"	d
MII_CR_SPEED_SELECT_LSB	drivers/e1000-4.x/src/e1000_hw.h	1556;"	d
MII_CR_SPEED_SELECT_LSB	drivers/e1000-5.x/src/e1000_hw.h	1828;"	d
MII_CR_SPEED_SELECT_LSB	drivers/e1000-7.x/src/e1000_hw.h	2730;"	d
MII_CR_SPEED_SELECT_MSB	drivers/e1000-4.x/src/e1000_hw.h	1549;"	d
MII_CR_SPEED_SELECT_MSB	drivers/e1000-5.x/src/e1000_hw.h	1821;"	d
MII_CR_SPEED_SELECT_MSB	drivers/e1000-7.x/src/e1000_hw.h	2723;"	d
MII_RESV1	drivers/e1000-7.x/src/kcompat.h	210;"	d
MII_SR_100T2_FD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1570;"	d
MII_SR_100T2_FD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1842;"	d
MII_SR_100T2_FD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2744;"	d
MII_SR_100T2_HD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1569;"	d
MII_SR_100T2_HD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1841;"	d
MII_SR_100T2_HD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2743;"	d
MII_SR_100T4_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1575;"	d
MII_SR_100T4_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1847;"	d
MII_SR_100T4_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2749;"	d
MII_SR_100X_FD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1574;"	d
MII_SR_100X_FD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1846;"	d
MII_SR_100X_FD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2748;"	d
MII_SR_100X_HD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1573;"	d
MII_SR_100X_HD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1845;"	d
MII_SR_100X_HD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2747;"	d
MII_SR_10T_FD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1572;"	d
MII_SR_10T_FD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1844;"	d
MII_SR_10T_FD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2746;"	d
MII_SR_10T_HD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1571;"	d
MII_SR_10T_HD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1843;"	d
MII_SR_10T_HD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2745;"	d
MII_SR_AUTONEG_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1564;"	d
MII_SR_AUTONEG_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1836;"	d
MII_SR_AUTONEG_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2738;"	d
MII_SR_AUTONEG_COMPLETE	drivers/e1000-4.x/src/e1000_hw.h	1566;"	d
MII_SR_AUTONEG_COMPLETE	drivers/e1000-5.x/src/e1000_hw.h	1838;"	d
MII_SR_AUTONEG_COMPLETE	drivers/e1000-7.x/src/e1000_hw.h	2740;"	d
MII_SR_EXTENDED_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1561;"	d
MII_SR_EXTENDED_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1833;"	d
MII_SR_EXTENDED_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2735;"	d
MII_SR_EXTENDED_STATUS	drivers/e1000-4.x/src/e1000_hw.h	1568;"	d
MII_SR_EXTENDED_STATUS	drivers/e1000-5.x/src/e1000_hw.h	1840;"	d
MII_SR_EXTENDED_STATUS	drivers/e1000-7.x/src/e1000_hw.h	2742;"	d
MII_SR_JABBER_DETECT	drivers/e1000-4.x/src/e1000_hw.h	1562;"	d
MII_SR_JABBER_DETECT	drivers/e1000-5.x/src/e1000_hw.h	1834;"	d
MII_SR_JABBER_DETECT	drivers/e1000-7.x/src/e1000_hw.h	2736;"	d
MII_SR_LINK_STATUS	drivers/e1000-4.x/src/e1000_hw.h	1563;"	d
MII_SR_LINK_STATUS	drivers/e1000-5.x/src/e1000_hw.h	1835;"	d
MII_SR_LINK_STATUS	drivers/e1000-7.x/src/e1000_hw.h	2737;"	d
MII_SR_PREAMBLE_SUPPRESS	drivers/e1000-4.x/src/e1000_hw.h	1567;"	d
MII_SR_PREAMBLE_SUPPRESS	drivers/e1000-5.x/src/e1000_hw.h	1839;"	d
MII_SR_PREAMBLE_SUPPRESS	drivers/e1000-7.x/src/e1000_hw.h	2741;"	d
MII_SR_REMOTE_FAULT	drivers/e1000-4.x/src/e1000_hw.h	1565;"	d
MII_SR_REMOTE_FAULT	drivers/e1000-5.x/src/e1000_hw.h	1837;"	d
MII_SR_REMOTE_FAULT	drivers/e1000-7.x/src/e1000_hw.h	2739;"	d
MIN	elements/local/OpenFlow/lib/util.hh	77;"	d
MINIMUM_DHCP_PACKET_SIZE	drivers/e1000-7.x/src/e1000_main.c	3353;"	d	file:
MINIMUM_ETHERNET_FRAME_SIZE	drivers/e1000-4.x/src/e1000_hw.h	273;"	d
MINIMUM_ETHERNET_FRAME_SIZE	drivers/e1000-5.x/src/e1000_hw.h	406;"	d
MINIMUM_ETHERNET_FRAME_SIZE	drivers/e1000-7.x/src/e1000_hw.h	524;"	d
MINIMUM_ETHERNET_PACKET_SIZE	drivers/e1000-4.x/src/e1000_hw.h	277;"	d
MINIMUM_ETHERNET_PACKET_SIZE	drivers/e1000-5.x/src/e1000_hw.h	410;"	d
MINIMUM_ETHERNET_PACKET_SIZE	drivers/e1000-7.x/src/e1000_hw.h	528;"	d
MINISCULE_PACKET	elements/ethernet/checkarpheader.hh	/^    MINISCULE_PACKET,$/;"	e	enum:CheckARPHeader::Reason
MINISCULE_PACKET	elements/ip/checkipheader.hh	/^    MINISCULE_PACKET,$/;"	e	enum:CheckIPHeader::Reason
MINOR_VERSION	elements/analysis/ipsumdumpinfo.hh	/^enum { MAJOR_VERSION = 1, MINOR_VERSION = 3 };$/;"	e	enum:IPSummaryDump::__anon258
MIN_AGE_DECREMENT	elements/grid/grid.hh	/^	MIN_AGE_DECREMENT = 10,$/;"	e	enum:grid_hello::__anon228
MIN_BINARY_SEARCH	elements/ip/ipfilter.hh	/^	MIN_BINARY_SEARCH = 7$/;"	e	enum:IPFilter::__anon352
MIN_BUFFER_LENGTH	include/click/packet.hh	/^	MIN_BUFFER_LENGTH = min_buffer_length,$/;"	e	enum:Packet::__anon464
MIN_ITR	drivers/e1000-5.x/src/e1000_param.c	224;"	d	file:
MIN_ITR	drivers/e1000-7.x/src/e1000_param.c	198;"	d	file:
MIN_NUMBER_OF_DESCRIPTORS	drivers/e1000-4.x/src/e1000_hw.h	326;"	d
MIN_NUMBER_OF_DESCRIPTORS	drivers/e1000-5.x/src/e1000_hw.h	459;"	d
MIN_NUMBER_OF_DESCRIPTORS	drivers/e1000-7.x/src/e1000_hw.h	591;"	d
MIN_NUM_XMITS	drivers/e1000-4.x/src/e1000_hw.h	1400;"	d
MIN_NUM_XMITS	drivers/e1000-5.x/src/e1000_hw.h	1621;"	d
MIN_NUM_XMITS	drivers/e1000-7.x/src/e1000_hw.h	2411;"	d
MIN_PRIO	linuxmodule/sched.cc	47;"	d	file:
MIN_RXABSDELAY	drivers/e1000-4.x/src/e1000_param.c	207;"	d	file:
MIN_RXABSDELAY	drivers/e1000-5.x/src/e1000_param.c	212;"	d	file:
MIN_RXABSDELAY	drivers/e1000-7.x/src/e1000_param.c	189;"	d	file:
MIN_RXD	drivers/e1000-4.x/src/e1000_param.c	197;"	d	file:
MIN_RXDELAY	drivers/e1000-4.x/src/e1000_param.c	203;"	d	file:
MIN_RXDELAY	drivers/e1000-5.x/src/e1000_param.c	208;"	d	file:
MIN_RXDELAY	drivers/e1000-7.x/src/e1000_param.c	180;"	d	file:
MIN_TTL_DECREMENT	elements/grid/grid.hh	/^	MIN_TTL_DECREMENT = MIN_AGE_DECREMENT,$/;"	e	enum:grid_hello::__anon228
MIN_TXABSDELAY	drivers/e1000-4.x/src/e1000_param.c	215;"	d	file:
MIN_TXABSDELAY	drivers/e1000-5.x/src/e1000_param.c	220;"	d	file:
MIN_TXABSDELAY	drivers/e1000-7.x/src/e1000_param.c	170;"	d	file:
MIN_TXD	drivers/e1000-4.x/src/e1000_param.c	192;"	d	file:
MIN_TXDELAY	drivers/e1000-4.x/src/e1000_param.c	211;"	d	file:
MIN_TXDELAY	drivers/e1000-5.x/src/e1000_param.c	216;"	d	file:
MIN_TXDELAY	drivers/e1000-7.x/src/e1000_param.c	161;"	d	file:
MISC_IP_ANNO	include/click/packet_anno.hh	56;"	d
MISC_IP_ANNO_OFFSET	include/click/packet_anno.hh	54;"	d
MISC_IP_ANNO_SIZE	include/click/packet_anno.hh	55;"	d
MISSING_ETHERNET	elements/analysis/ipsumdumpinfo.hh	/^       MISSING_ETHERNET = 260 };$/;"	e	enum:IPSummaryDump::__anon263
MISSING_IP	elements/analysis/ipsumdumpinfo.hh	/^enum { MISSING_IP = 0,$/;"	e	enum:IPSummaryDump::__anon263
MKAI	lib/nameinfo.cc	109;"	d	file:
MKELEMMAPFLAGS	Makefile	/^MKELEMMAPFLAGS =$/;"	m
MODULE	include/click/config-linuxmodule.h	174;"	d
MODULEPARM_H	linuxmodule/moduleparm.h	2;"	d
MODULEPRIV_HH	bsdmodule/modulepriv.hh	2;"	d
MODULEPRIV_HH	linuxmodule/modulepriv.hh	2;"	d
MODULE_DEVICE_TABLE	drivers/e1000-4.x/src/kcompat.h	82;"	d
MODULE_INFO	drivers/e1000-7.x/src/kcompat.h	851;"	d
MODULE_LICENSE	drivers/e1000-4.x/src/kcompat.h	395;"	d
MODULE_LICENSE	drivers/e1000-5.x/src/kcompat.h	478;"	d
MODULE_LICENSE	drivers/e1000-7.x/src/kcompat.h	651;"	d
MODULE_VERSION	drivers/e1000-7.x/src/kcompat.h	879;"	d
MODVERSIONS	linuxmodule/proclikefs.c	30;"	d	file:
MOD_DEC_USE_COUNT	drivers/e1000-4.x/src/kcompat.h	314;"	d
MOD_DEC_USE_COUNT	drivers/e1000-4.x/src/kcompat.h	316;"	d
MOD_DEC_USE_COUNT	drivers/e1000-4.x/src/kcompat.h	89;"	d
MOD_DEC_USE_COUNT	drivers/e1000-4.x/src/kcompat.h	91;"	d
MOD_DEC_USE_COUNT	linuxmodule/proclikefs.c	63;"	d	file:
MOD_INC_USE_COUNT	drivers/e1000-4.x/src/kcompat.h	313;"	d
MOD_INC_USE_COUNT	drivers/e1000-4.x/src/kcompat.h	315;"	d
MOD_INC_USE_COUNT	drivers/e1000-4.x/src/kcompat.h	88;"	d
MOD_INC_USE_COUNT	drivers/e1000-4.x/src/kcompat.h	90;"	d
MOVESIM_HH	elements/grid/movesim.hh	2;"	d
MPEG2_B_FRAME	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	25;"	d
MPEG2_ERROR_ADAPTATION_FIELD_TOO_LONG	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	9;"	d
MPEG2_ERROR_ES_TOO_LONG	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	10;"	d
MPEG2_ERROR_OUTOFMEMORY	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	12;"	d
MPEG2_ERROR_SYNC_NOT_CORRECT	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	8;"	d
MPEG2_ERROR_UDP_SIZE_NOT_CORRECT	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	11;"	d
MPEG2_FPS	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	58;"	d
MPEG2_I_FRAME	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	23;"	d
MPEG2_NON_VIDEO	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	22;"	d
MPEG2_PARSEMODE_NORMAL	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	14;"	d
MPEG2_PARSEMODE_NULL	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	13;"	d
MPEG2_PLAYOUT_TIME_BUDGET	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	59;"	d
MPEG2_P_FRAME	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	24;"	d
MPEG2_SHAPE_CORE_BASED	elements/local/FlowNet/common/FlowNetGod.hh	44;"	d
MPEG2_SHAPE_LOSS_BASED	elements/local/FlowNet/common/FlowNetGod.hh	43;"	d
MPEG2_SHAPE_NO_SHAPING	elements/local/FlowNet/common/FlowNetGod.hh	40;"	d
MPEG2_SHAPE_STATIC_I	elements/local/FlowNet/common/FlowNetGod.hh	41;"	d
MPEG2_SHAPE_STATIC_IP	elements/local/FlowNet/common/FlowNetGod.hh	42;"	d
MPEG2_SID_ECM_STREAM	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	697;"	d	file:
MPEG2_SID_EMM_STREAM	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	698;"	d	file:
MPEG2_SID_EXTENSION	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	690;"	d	file:
MPEG2_SID_GOP	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	691;"	d	file:
MPEG2_SID_ITU_T_REC_H_222_0	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	700;"	d	file:
MPEG2_SID_ITU_T_REC_H_222_1_TYPE_E	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	701;"	d	file:
MPEG2_SID_PADDING_STREAM	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	695;"	d	file:
MPEG2_SID_PICTURE	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	687;"	d	file:
MPEG2_SID_PRIVATE_STREAM_1	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	694;"	d	file:
MPEG2_SID_PRIVATE_STREAM_2	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	696;"	d	file:
MPEG2_SID_PROGRAM_STREAM_DIRECTORY	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	699;"	d	file:
MPEG2_SID_PROGRAM_STREAM_MAP	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	693;"	d	file:
MPEG2_SID_SEQUENCE_HEADER	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	689;"	d	file:
MPEG2_SID_SLICES	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	688;"	d	file:
MPEG2_START_CODE_PREFIX	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	680;"	d	file:
MPEG2_SUCCESS_PARSE	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	5;"	d
MPEG2_TS_ADAPTFIELD	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	708;"	d	file:
MPEG2_TS_HEADER_SIZE_WO_ADAPTATION	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	18;"	d
MPEG2_TS_HEADER_SIZE_W_ADAPTATION	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	19;"	d
MPEG2_TS_PAYLOADFIELD	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	709;"	d	file:
MPEG2_TS_PER_UDP	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	15;"	d
MPEG2_TS_SIZE	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	16;"	d
MPEG2_TS_SYNC	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	707;"	d	file:
MPEG2_WARN_NO_ES_HEADER	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	7;"	d
MPEG2_WARN_PID_NOT_CORRECT	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	6;"	d
MSEC_PER_SEC	drivers/e1000-7.x/src/kcompat.h	910;"	d
MSGOUT	drivers/e1000-4.x/src/e1000_osdep.h	64;"	d
MSGOUT	drivers/e1000-5.x/src/e1000_osdep.h	67;"	d
MSQueue	elements/standard/msqueue.cc	/^MSQueue::MSQueue()$/;"	f	class:MSQueue
MSQueue	elements/standard/msqueue.hh	/^class MSQueue : public ThreadSafeQueue { public:$/;"	c
MSR_ENABLE	elements/linuxmodule/perfcountuser.hh	24;"	d
MSR_ENABLE	include/click/perfctr-i586.hh	30;"	d
MSR_EVNTSEL0	elements/linuxmodule/perfcountuser.hh	28;"	d
MSR_EVNTSEL0	include/click/perfctr-i586.hh	34;"	d
MSR_EVNTSEL1	elements/linuxmodule/perfcountuser.hh	29;"	d
MSR_EVNTSEL1	include/click/perfctr-i586.hh	35;"	d
MSR_FLAGS0	elements/linuxmodule/perfcountuser.hh	25;"	d
MSR_FLAGS0	include/click/perfctr-i586.hh	31;"	d
MSR_FLAGS1	elements/linuxmodule/perfcountuser.hh	26;"	d
MSR_FLAGS1	include/click/perfctr-i586.hh	32;"	d
MSR_OCCURRENCE	elements/linuxmodule/perfcountuser.hh	23;"	d
MSR_OCCURRENCE	include/click/perfctr-i586.hh	29;"	d
MSR_OS	elements/linuxmodule/perfcountuser.hh	22;"	d
MSR_OS	include/click/perfctr-i586.hh	28;"	d
MT_CLICK	bsdmodule/sched.cc	80;"	d	file:
MULTICAST	include/click/packet.hh	/^	MULTICAST = 2,		\/**< Packet was sent to a link-level multicast$/;"	e	enum:Packet::PacketType
MULTIOP_CHECKWIFIHEADER_HH	elements/local/FlowNet/scheduler/WBSEtherFilter.hh	2;"	d
MULTIOP_FLOWTABLE_HH	elements/local/FlowNet/scheduler/PFSchedFW.hh	3;"	d
MULTIOP_FlowNetGod_HH	elements/local/FlowNet/common/FlowNetGod.hh	2;"	d
MULTIOP_MPEG2_STREAMINGPROXYTABLE_HH	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	3;"	d
MULTIOP_SOURCEPROXYTABLE_HH	elements/local/FlowNet/shaper/PFShapeFW.hh	3;"	d
MULTIOP_UNFORGE_HH	elements/local/FlowNet/scheduler/IPFragReset.hh	2;"	d
MULTITHREAD	tools/lib/etraits.hh	/^	ALLMASK = 0xF, COUNT = 4, MULTITHREAD = COUNT$/;"	e	enum:Driver::__anon526
M_CLICKFS	bsdmodule/clickfs_tree.hh	/^MALLOC_DECLARE(M_CLICKFS);$/;"	v
M_c2nl	elements/ipsec/sha1_impl.cc	271;"	d	file:
M_c2nl	elements/ipsec/sha1_impl.cc	277;"	d	file:
M_c2nl_p	elements/ipsec/sha1_impl.cc	273;"	d	file:
M_c2nl_p	elements/ipsec/sha1_impl.cc	279;"	d	file:
M_nl2c	elements/ipsec/sha1_impl.cc	275;"	d	file:
M_nl2c	elements/ipsec/sha1_impl.cc	281;"	d	file:
M_p_c2nl	elements/ipsec/sha1_impl.cc	272;"	d	file:
M_p_c2nl	elements/ipsec/sha1_impl.cc	278;"	d	file:
M_p_c2nl_p	elements/ipsec/sha1_impl.cc	274;"	d	file:
M_p_c2nl_p	elements/ipsec/sha1_impl.cc	280;"	d	file:
MadwifiRate	elements/wifi/madwifirate.cc	/^MadwifiRate::MadwifiRate()$/;"	f	class:MadwifiRate
MadwifiRate	elements/wifi/madwifirate.hh	/^class MadwifiRate : public Element { public:$/;"	c
MadwifiRate_read_param	elements/wifi/madwifirate.cc	/^MadwifiRate_read_param(Element *e, void *thunk)$/;"	f	file:
MadwifiRate_write_param	elements/wifi/madwifirate.cc	/^MadwifiRate_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
Map	elements/analysis/aggregateipaddrpair.hh	/^    typedef HashTable<HostPair, FlowInfo> Map;$/;"	t	class:AggregateIPAddrPair
Map	elements/analysis/aggregateipflows.hh	/^    typedef HashTable<HostPair, HostPairInfo> Map;$/;"	t	class:AggregateIPFlows
Map	elements/ip/iprewriterbase.hh	/^    typedef HashContainer<IPRewriterEntry> Map;$/;"	t	class:IPRewriterBase
Map6	elements/ip6/addresstranslator.hh	/^  typedef HashMap<IP6FlowID, Mapping *> Map6;$/;"	t	class:AddressTranslator
MapEntry	elements/icmp/icmprewriter.hh	/^	MapEntry(IPRewriterBase *e, int po) : _elt(e), _port_offset(po) {}$/;"	f	struct:ICMPRewriter::MapEntry
MapEntry	elements/icmp/icmprewriter.hh	/^    struct MapEntry {$/;"	s	class:ICMPRewriter
Mapping	elements/ip6/addresstranslator.cc	/^AddressTranslator::Mapping::Mapping()$/;"	f	class:AddressTranslator::Mapping
Mapping	elements/ip6/addresstranslator.hh	/^class AddressTranslator::Mapping {$/;"	c	class:AddressTranslator
MarkIP6Header	elements/ip6/markip6header.cc	/^MarkIP6Header::MarkIP6Header()$/;"	f	class:MarkIP6Header
MarkIP6Header	elements/ip6/markip6header.hh	/^class MarkIP6Header : public Element {$/;"	c
MarkIPCE	elements/ip/markipce.cc	/^MarkIPCE::MarkIPCE()$/;"	f	class:MarkIPCE
MarkIPCE	elements/ip/markipce.hh	/^class MarkIPCE : public Element { public:$/;"	c
MarkIPHeader	elements/ip/markipheader.cc	/^MarkIPHeader::MarkIPHeader()$/;"	f	class:MarkIPHeader
MarkIPHeader	elements/ip/markipheader.hh	/^class MarkIPHeader : public Element {$/;"	c
MarkMACHeader	elements/standard/markmacheader.cc	/^MarkMACHeader::MarkMACHeader()$/;"	f	class:MarkMACHeader
MarkMACHeader	elements/standard/markmacheader.hh	/^class MarkMACHeader : public Element { public:$/;"	c
Master	include/click/master.hh	/^class Master { public:$/;"	c
Master	lib/master.cc	/^Master::Master(int nthreads)$/;"	f	class:Master
Matcher	tools/click-xform/click-xform.cc	/^Matcher::Matcher(RouterT *pat, AdjacencyMatrix *pat_m,$/;"	f	class:Matcher
Matcher	tools/click-xform/click-xform.cc	/^class Matcher { public:$/;"	c	file:
MaxVlanIDSupported	drivers/e1000-4.x/src/base_comm.h	/^    u16           MaxVlanIDSupported;     \/* Max. VLan ID supported by BD *\/$/;"	m	struct:_IANS_BD_PARAM_IVLAN_CAP
MaxVlanTableSize	drivers/e1000-4.x/src/base_comm.h	/^    u32           MaxVlanTableSize;       \/* Max. number of VLan IDs in a table *\/$/;"	m	struct:_IANS_BD_PARAM_IVLAN_CAP
Message	apps/clicky/src/gathererror.hh	/^	Message(const String &m, int l, int off, int ep1, int ep2)$/;"	f	struct:GatherErrorHandler::Message
Message	apps/clicky/src/gathererror.hh	/^    struct Message {$/;"	s	class:GatherErrorHandler
MessageElement	elements/standard/messageelement.cc	/^MessageElement::MessageElement()$/;"	f	class:MessageElement
MessageElement	elements/standard/messageelement.hh	/^class MessageElement : public Element { public:$/;"	c
Meter	elements/standard/meter.cc	/^Meter::Meter()$/;"	f	class:Meter
Meter	elements/standard/meter.hh	/^class Meter : public BandwidthMeter { public:$/;"	c
MetricCumulativeDeliveryRate	elements/grid/gridroutetable.hh	/^    MetricCumulativeDeliveryRate,  \/\/ unsigned int percentage (0-100)$/;"	e	enum:GridRouteTable::MetricType
MetricCumulativeQualPct	elements/grid/gridroutetable.hh	/^    MetricCumulativeQualPct,       \/\/ unsigned int percentage (0-100) of range$/;"	e	enum:GridRouteTable::MetricType
MetricCumulativeSigPct	elements/grid/gridroutetable.hh	/^    MetricCumulativeSigPct,        \/\/ unsigned int percentage (0-100) of range$/;"	e	enum:GridRouteTable::MetricType
MetricEstTxCount	elements/grid/gridroutetable.hh	/^    MetricEstTxCount               \/\/ unsigned int expected number of transmission * 100$/;"	e	enum:GridRouteTable::MetricType
MetricHopCount	elements/grid/gridroutetable.hh	/^    MetricHopCount = 0,            \/\/ unsigned int hop count$/;"	e	enum:GridRouteTable::MetricType
MetricMinDeliveryRate	elements/grid/gridroutetable.hh	/^    MetricMinDeliveryRate,         \/\/ unsigned int percentage (0-100)$/;"	e	enum:GridRouteTable::MetricType
MetricMinSigQuality	elements/grid/gridroutetable.hh	/^    MetricMinSigQuality,           \/\/ unsigned int ``quality''$/;"	e	enum:GridRouteTable::MetricType
MetricMinSigStrength	elements/grid/gridroutetable.hh	/^    MetricMinSigStrength,          \/\/ unsigned int negative dBm.  e.g. -40 dBm is 40$/;"	e	enum:GridRouteTable::MetricType
MetricType	elements/grid/gridroutetable.hh	/^  enum MetricType {$/;"	g	class:GridRouteTable
MetricUnknown	elements/grid/gridroutetable.hh	/^    MetricUnknown = -1,$/;"	e	enum:GridRouteTable::MetricType
Mindriver	tools/click-mkmindriver/click-mkmindriver.cc	/^Mindriver::Mindriver()$/;"	f	class:Mindriver
Mindriver	tools/click-mkmindriver/click-mkmindriver.cc	/^class Mindriver { public:$/;"	c	file:
MixedQueue	elements/standard/mixedqueue.cc	/^MixedQueue::MixedQueue()$/;"	f	class:MixedQueue
MixedQueue	elements/standard/mixedqueue.hh	/^class MixedQueue : public NotifierQueue { public:$/;"	c
MovementSimulator	elements/grid/movesim.cc	/^MovementSimulator::MovementSimulator()$/;"	f	class:MovementSimulator
MovementSimulator	elements/grid/movesim.hh	/^class MovementSimulator : public Element {$/;"	c
MyEWMA	elements/ip/ipratemon.hh	/^  typedef RateEWMAX<EWMAParameters> MyEWMA;$/;"	t	class:IPRateMonitor
MyHashContainer	elements/test/hashtabletest.cc	/^typedef HashContainer<MyHashContainerEntry> MyHashContainer;$/;"	t	file:
MyHashContainerEntry	elements/test/hashtabletest.cc	/^    MyHashContainerEntry(int key) : _key(key), _hashnext(0) {};$/;"	f	struct:MyHashContainerEntry
MyHashContainerEntry	elements/test/hashtabletest.cc	/^struct MyHashContainerEntry {$/;"	s	file:
NAME_OPT	tools/click-combine/click-combine.cc	44;"	d	file:
NAME_OPT	tools/click-combine/click-uncombine.cc	44;"	d	file:
NAPI	drivers/e1000-7.x/src/kcompat.h	50;"	d
NAPI	drivers/e1000-7.x/src/kcompat.h	53;"	d
NAPI	drivers/e1000-7.x/src/kcompat.h	54;"	d
NAPI	drivers/e1000-7.x/src/kcompat.h	57;"	d
NAPI	drivers/e1000-7.x/src/kcompat.h	63;"	d
NAPI	drivers/e1000-7.x/src/kcompat.h	66;"	d
NAPI	drivers/e1000-7.x/src/kcompat.h	67;"	d
NAPI	drivers/e1000-7.x/src/kcompat.h	70;"	d
NARGTYPE_HASH	lib/confparse.cc	2290;"	d	file:
NBUCKETS	elements/analysis/aggregatefilter.hh	/^	   NBUCKETS = 256 };$/;"	e	enum:AggregateFilter::__anon254
NBUCKETS	linuxmodule/skbmgr.cc	/^  static const int NBUCKETS = 2;$/;"	m	class:RecycledSkbPool	file:
NBYTES	elements/grid/packetlogger.hh	/^  enum { NBYTES = 8 };$/;"	e	enum:PacketLogger::__anon223
NBYTES	elements/grid/packetlogger2.hh	/^  enum { NBYTES = 18 };$/;"	e	enum:PacketLogger2::__anon220
NCLIENTS	include/click/routerthread.hh	/^    enum { C_CLICK, C_KERNEL, NCLIENTS };$/;"	e	enum:RouterThread::__anon423
NCOL	elements/analysis/aggregatefirst.hh	/^	   COL_BITS = 16, COL_SHIFT = ROW_BITS, NCOL = 1<<COL_BITS, COL_MASK = NCOL - 1,$/;"	e	enum:AggregateFirst::__anon292
NCOL	elements/analysis/aggregatelast.hh	/^	   COL_BITS = 16, COL_SHIFT = ROW_BITS, NCOL = 1<<COL_BITS, COL_MASK = NCOL - 1,$/;"	e	enum:AggregateLast::__anon274
NDEntry	elements/ethernet/ip6ndsolicitor.hh	/^   struct NDEntry {$/;"	s	class:IP6NDSolicitor
ND_ADV	include/clicknet/ether.h	86;"	d
ND_SOL	include/clicknet/ether.h	85;"	d
NEEDBYTES	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	42;"	d
NEED_FFS_LSB_UINT64_T	include/click/integers.hh	314;"	d
NEED_FFS_LSB_UNSIGNED	include/click/integers.hh	265;"	d
NEED_FFS_LSB_UNSIGNED_LONG	include/click/integers.hh	281;"	d
NEED_FFS_LSB_UNSIGNED_LONG_LONG	include/click/integers.hh	297;"	d
NEED_FFS_MSB_UINT64_T	include/click/integers.hh	243;"	d
NEED_FFS_MSB_UNSIGNED	include/click/integers.hh	194;"	d
NEED_FFS_MSB_UNSIGNED_LONG	include/click/integers.hh	210;"	d
NEED_FFS_MSB_UNSIGNED_LONG_LONG	include/click/integers.hh	226;"	d
NELEMENTS	include/click/bighashmap_arena.hh	/^    enum { NELEMENTS = 127 };	\/\/ not a power of 2 so we don't fall into a$/;"	e	enum:HashMap_Arena::__anon471
NETBSD_TAP	elements/userlevel/kerneltun.hh	/^		NETBSD_TUN, NETBSD_TAP };$/;"	e	enum:KernelTun::Type
NETBSD_TUN	elements/userlevel/kerneltun.hh	/^		NETBSD_TUN, NETBSD_TAP };$/;"	e	enum:KernelTun::Type
NETDEV_MAX_QUEUES	elements/local/OpenFlow/datapath.hh	116;"	d
NETDEV_TX_BUSY	drivers/e1000-5.x/src/kcompat.h	705;"	d
NETDEV_TX_BUSY	drivers/e1000-7.x/src/kcompat.h	157;"	d
NETDEV_TX_BUSY	elements/linuxmodule/fromhost.cc	66;"	d	file:
NETDEV_TX_LOCKED	drivers/e1000-5.x/src/kcompat.h	709;"	d
NETDEV_TX_LOCKED	drivers/e1000-7.x/src/kcompat.h	161;"	d
NETDEV_TX_OK	drivers/e1000-5.x/src/kcompat.h	701;"	d
NETDEV_TX_OK	drivers/e1000-7.x/src/kcompat.h	153;"	d
NETDEV_TX_OK	elements/linuxmodule/fromhost.cc	65;"	d	file:
NETIF_F_LLTX	drivers/e1000-7.x/src/kcompat.h	1008;"	d
NETIF_MSG_DRV	drivers/e1000-5.x/src/kcompat.h	/^	NETIF_MSG_DRV		= 0x0001,$/;"	e	enum:__anon167
NETIF_MSG_DRV	drivers/e1000-7.x/src/kcompat.h	/^	NETIF_MSG_DRV		= 0x0001,$/;"	e	enum:__anon125
NETIF_MSG_HW	drivers/e1000-5.x/src/kcompat.h	/^	NETIF_MSG_HW		= 0x2000,$/;"	e	enum:__anon167
NETIF_MSG_HW	drivers/e1000-7.x/src/kcompat.h	/^	NETIF_MSG_HW		= 0x2000,$/;"	e	enum:__anon125
NETIF_MSG_HW	drivers/e1000-7.x/src/kcompat.h	205;"	d
NETIF_MSG_IFDOWN	drivers/e1000-5.x/src/kcompat.h	/^	NETIF_MSG_IFDOWN	= 0x0010,$/;"	e	enum:__anon167
NETIF_MSG_IFDOWN	drivers/e1000-7.x/src/kcompat.h	/^	NETIF_MSG_IFDOWN	= 0x0010,$/;"	e	enum:__anon125
NETIF_MSG_IFUP	drivers/e1000-5.x/src/kcompat.h	/^	NETIF_MSG_IFUP		= 0x0020,$/;"	e	enum:__anon167
NETIF_MSG_IFUP	drivers/e1000-7.x/src/kcompat.h	/^	NETIF_MSG_IFUP		= 0x0020,$/;"	e	enum:__anon125
NETIF_MSG_INTR	drivers/e1000-5.x/src/kcompat.h	/^	NETIF_MSG_INTR		= 0x0200,$/;"	e	enum:__anon167
NETIF_MSG_INTR	drivers/e1000-7.x/src/kcompat.h	/^	NETIF_MSG_INTR		= 0x0200,$/;"	e	enum:__anon125
NETIF_MSG_LINK	drivers/e1000-5.x/src/kcompat.h	/^	NETIF_MSG_LINK		= 0x0004,$/;"	e	enum:__anon167
NETIF_MSG_LINK	drivers/e1000-7.x/src/kcompat.h	/^	NETIF_MSG_LINK		= 0x0004,$/;"	e	enum:__anon125
NETIF_MSG_PKTDATA	drivers/e1000-5.x/src/kcompat.h	/^	NETIF_MSG_PKTDATA	= 0x1000,$/;"	e	enum:__anon167
NETIF_MSG_PKTDATA	drivers/e1000-7.x/src/kcompat.h	/^	NETIF_MSG_PKTDATA	= 0x1000,$/;"	e	enum:__anon125
NETIF_MSG_PROBE	drivers/e1000-5.x/src/kcompat.h	/^	NETIF_MSG_PROBE		= 0x0002,$/;"	e	enum:__anon167
NETIF_MSG_PROBE	drivers/e1000-7.x/src/kcompat.h	/^	NETIF_MSG_PROBE		= 0x0002,$/;"	e	enum:__anon125
NETIF_MSG_RX_ERR	drivers/e1000-5.x/src/kcompat.h	/^	NETIF_MSG_RX_ERR	= 0x0040,$/;"	e	enum:__anon167
NETIF_MSG_RX_ERR	drivers/e1000-7.x/src/kcompat.h	/^	NETIF_MSG_RX_ERR	= 0x0040,$/;"	e	enum:__anon125
NETIF_MSG_RX_STATUS	drivers/e1000-5.x/src/kcompat.h	/^	NETIF_MSG_RX_STATUS	= 0x0800,$/;"	e	enum:__anon167
NETIF_MSG_RX_STATUS	drivers/e1000-7.x/src/kcompat.h	/^	NETIF_MSG_RX_STATUS	= 0x0800,$/;"	e	enum:__anon125
NETIF_MSG_TIMER	drivers/e1000-5.x/src/kcompat.h	/^	NETIF_MSG_TIMER		= 0x0008,$/;"	e	enum:__anon167
NETIF_MSG_TIMER	drivers/e1000-7.x/src/kcompat.h	/^	NETIF_MSG_TIMER		= 0x0008,$/;"	e	enum:__anon125
NETIF_MSG_TX_DONE	drivers/e1000-5.x/src/kcompat.h	/^	NETIF_MSG_TX_DONE	= 0x0400,$/;"	e	enum:__anon167
NETIF_MSG_TX_DONE	drivers/e1000-7.x/src/kcompat.h	/^	NETIF_MSG_TX_DONE	= 0x0400,$/;"	e	enum:__anon125
NETIF_MSG_TX_ERR	drivers/e1000-5.x/src/kcompat.h	/^	NETIF_MSG_TX_ERR	= 0x0080,$/;"	e	enum:__anon167
NETIF_MSG_TX_ERR	drivers/e1000-7.x/src/kcompat.h	/^	NETIF_MSG_TX_ERR	= 0x0080,$/;"	e	enum:__anon125
NETIF_MSG_TX_QUEUED	drivers/e1000-5.x/src/kcompat.h	/^	NETIF_MSG_TX_QUEUED	= 0x0100,$/;"	e	enum:__anon167
NETIF_MSG_TX_QUEUED	drivers/e1000-7.x/src/kcompat.h	/^	NETIF_MSG_TX_QUEUED	= 0x0100,$/;"	e	enum:__anon125
NETIF_MSG_WOL	drivers/e1000-5.x/src/kcompat.h	/^	NETIF_MSG_WOL		= 0x4000,$/;"	e	enum:__anon167
NETIF_MSG_WOL	drivers/e1000-7.x/src/kcompat.h	/^	NETIF_MSG_WOL		= 0x4000,$/;"	e	enum:__anon125
NETIF_MSG_WOL	drivers/e1000-7.x/src/kcompat.h	206;"	d
NETISR_CLICK	elements/bsdmodule/anydevice.hh	19;"	d
NETLINK_ADD_MEMBERSHIP	elements/local/OpenFlow/lib/netlink-protocol.hh	96;"	d
NETLINK_ADD_MEMBERSHIP	elements/local/OpenFlow/lib/netlink.cc	173;"	d	file:
NETLINK_DROP_MEMBERSHIP	elements/local/OpenFlow/lib/netlink-protocol.hh	97;"	d
NETLINK_GENERIC	elements/local/OpenFlow/lib/netlink-protocol.hh	47;"	d
NETLINK_H	elements/local/OpenFlow/lib/netlink.hh	38;"	d
NETLINK_PKTINFO	elements/local/OpenFlow/lib/netlink-protocol.hh	98;"	d
NETLINK_PROTOCOL_H	elements/local/OpenFlow/lib/netlink-protocol.hh	35;"	d
NET_IP_ALIGN	drivers/e1000-5.x/src/kcompat.h	697;"	d
NET_IP_ALIGN	drivers/e1000-7.x/src/kcompat.h	1015;"	d
NEWER_SEQ	elements/grid/gridgenericlogger.hh	/^    NEWER_SEQ         = 0xe4,$/;"	e	enum:GridGenericLogger::reason_t
NEWER_SEQ_SENDER	elements/grid/gridgenericlogger.hh	/^    NEWER_SEQ_SENDER  = 0xe5,$/;"	e	enum:GridGenericLogger::reason_t
NEW_AGG	elements/analysis/aggregatenotifier.hh	/^    enum AggregateEvent { NEW_AGG, DELETE_AGG };$/;"	e	enum:AggregateListener::AggregateEvent
NEW_DEST	elements/grid/gridgenericlogger.hh	/^    NEW_DEST          = 0xe0,$/;"	e	enum:GridGenericLogger::reason_t
NEW_DEST_SENDER	elements/grid/gridgenericlogger.hh	/^    NEW_DEST_SENDER   = 0xe1,$/;"	e	enum:GridGenericLogger::reason_t
NEXT_HOP_ETH_FIXUP	elements/grid/gridroutetable.cc	33;"	d	file:
NEXT_HOP_EXPIRED	elements/grid/gridgenericlogger.hh	/^    NEXT_HOP_EXPIRED  = 0xf5,$/;"	e	enum:GridGenericLogger::reason_t
NFLOWMAP	elements/analysis/aggpktcounter.hh	/^    enum { FLOWMAP_BITS = 10, NFLOWMAP = 1 << FLOWMAP_BITS };$/;"	e	enum:AggregatePacketCounter::__anon286
NFLOWMAP	elements/analysis/toipflowdumps.hh	/^    enum { FLOWMAP_BITS = 10, NFLOWMAP = 1 << FLOWMAP_BITS };$/;"	e	enum:ToIPFlowDumps::__anon298
NFLOWMAP	elements/userlevel/ipflowrawsockets.hh	/^    enum { FLOWMAP_BITS = 10, NFLOWMAP = 1 << FLOWMAP_BITS };$/;"	e	enum:IPFlowRawSockets::__anon212
NHASH	apps/clicky/src/permstr.hh	/^    enum { NHASH = 1024 };	\/\/ must be power of 2$/;"	e	enum:PermString::__anon31
NICE2PRIO	linuxmodule/sched.cc	50;"	d	file:
NICIRA_OUI_STR	elements/local/OpenFlow/include/openflow/nicira-ext.hh	12;"	d
NINE_TENTHS	elements/aqm/adaptivered.hh	/^    static const uint32_t NINE_TENTHS = 58982;$/;"	m	class:AdaptiveRED
NINGROUP	elements/analysis/aggregatefilter.hh	/^	   NINGROUP = 1 << GROUPSHIFT, INGROUPMASK = NINGROUP - 1,$/;"	e	enum:AggregateFilter::__anon254
NIter	elements/wifi/autoratefallback.hh	/^  typedef NeighborTable::const_iterator NIter;$/;"	t	class:AutoRateFallback
NIter	elements/wifi/ethercount.hh	/^  typedef NeighborTable::const_iterator NIter;$/;"	t	class:EtherCount
NIter	elements/wifi/madwifirate.hh	/^  typedef NeighborTable::const_iterator NIter;$/;"	t	class:MadwifiRate
NIter	elements/wifi/probetxrate.hh	/^  typedef NeighborTable::const_iterator NIter;$/;"	t	class:ProbeTXRate
NIter	elements/wifi/rxstats.hh	/^  typedef NeighborTable::const_iterator NIter;$/;"	t	class:RXStats
NLA_ALIGN	elements/local/OpenFlow/lib/netlink-protocol.hh	116;"	d
NLA_ALIGNTO	elements/local/OpenFlow/lib/netlink-protocol.hh	115;"	d
NLA_HDRLEN	elements/local/OpenFlow/lib/netlink-protocol.hh	117;"	d
NLMSG_ALIGN	elements/local/OpenFlow/lib/netlink-protocol.hh	86;"	d
NLMSG_ALIGNTO	elements/local/OpenFlow/lib/netlink-protocol.hh	85;"	d
NLMSG_DONE	elements/local/OpenFlow/lib/netlink-protocol.hh	71;"	d
NLMSG_ERROR	elements/local/OpenFlow/lib/netlink-protocol.hh	70;"	d
NLMSG_HDRLEN	elements/local/OpenFlow/lib/netlink-protocol.hh	87;"	d
NLMSG_MIN_TYPE	elements/local/OpenFlow/lib/netlink-protocol.hh	74;"	d
NLMSG_NOOP	elements/local/OpenFlow/lib/netlink-protocol.hh	69;"	d
NLMSG_OVERRUN	elements/local/OpenFlow/lib/netlink-protocol.hh	72;"	d
NLM_F_ACK	elements/local/OpenFlow/lib/netlink-protocol.hh	60;"	d
NLM_F_ATOMIC	elements/local/OpenFlow/lib/netlink-protocol.hh	65;"	d
NLM_F_DUMP	elements/local/OpenFlow/lib/netlink-protocol.hh	66;"	d
NLM_F_ECHO	elements/local/OpenFlow/lib/netlink-protocol.hh	61;"	d
NLM_F_MATCH	elements/local/OpenFlow/lib/netlink-protocol.hh	64;"	d
NLM_F_MULTI	elements/local/OpenFlow/lib/netlink-protocol.hh	59;"	d
NLM_F_REQUEST	elements/local/OpenFlow/lib/netlink-protocol.hh	58;"	d
NLM_F_ROOT	elements/local/OpenFlow/lib/netlink-protocol.hh	63;"	d
NL_ATTR_GET_AS	elements/local/OpenFlow/lib/netlink.cc	704;"	d	file:
NL_A_FLAG	elements/local/OpenFlow/lib/netlink.hh	/^    NL_A_FLAG,$/;"	e	enum:nl_attr_type
NL_A_NESTED	elements/local/OpenFlow/lib/netlink.hh	/^    NL_A_NESTED,$/;"	e	enum:nl_attr_type
NL_A_NO_ATTR	elements/local/OpenFlow/lib/netlink.hh	/^    NL_A_NO_ATTR = 0,$/;"	e	enum:nl_attr_type
NL_A_STRING	elements/local/OpenFlow/lib/netlink.hh	/^    NL_A_STRING,$/;"	e	enum:nl_attr_type
NL_A_U16	elements/local/OpenFlow/lib/netlink.hh	/^    NL_A_U16,$/;"	e	enum:nl_attr_type
NL_A_U32	elements/local/OpenFlow/lib/netlink.hh	/^    NL_A_U32,$/;"	e	enum:nl_attr_type
NL_A_U64	elements/local/OpenFlow/lib/netlink.hh	/^    NL_A_U64,$/;"	e	enum:nl_attr_type
NL_A_U8	elements/local/OpenFlow/lib/netlink.hh	/^    NL_A_U8,$/;"	e	enum:nl_attr_type
NL_A_UNSPEC	elements/local/OpenFlow/lib/netlink.hh	/^    NL_A_UNSPEC,$/;"	e	enum:nl_attr_type
NMAP	elements/ethernet/ip6ndsolicitor.hh	/^  enum { NMAP = 256 };$/;"	e	enum:IP6NDSolicitor::__anon232
NMAP	elements/ip/ipreassembler.hh	/^    enum { NMAP = 256 };$/;"	e	enum:IPReassembler::__anon322
NMAX	elements/grid/amoeba.cc	29;"	d	file:
NNOTE	elements/analysis/toipflowdumps.hh	/^	enum { NPKT = 128, NNOTE = 32 };$/;"	e	enum:ToIPFlowDumps::Flow::__anon297
NNOTE	elements/userlevel/ipflowrawsockets.hh	/^	enum { NPKT = 128, NNOTE = 32 };$/;"	e	enum:IPFlowRawSockets::Flow::__anon211
NODE_ADDRESS_SIZE	drivers/e1000-4.x/src/e1000_hw.h	255;"	d
NODE_ADDRESS_SIZE	drivers/e1000-5.x/src/e1000_hw.h	384;"	d
NODE_ADDRESS_SIZE	drivers/e1000-7.x/src/e1000_hw.h	502;"	d
NOISY	elements/grid/floodinglocquerier.cc	30;"	d	file:
NOISY	elements/grid/locqueryresponder.cc	30;"	d	file:
NOISY	elements/grid/lookuplocalgridroute.cc	38;"	d	file:
NONEXCLUSIVE	include/click/handler.hh	/^	NONEXCLUSIVE = h_nonexclusive,$/;"	e	enum:Handler::DeprecatedFlags
NOT_ICMP	elements/icmp/checkicmpheader.hh	/^    NOT_ICMP,$/;"	e	enum:CheckICMPHeader::Reason
NOT_IMPLEMENTED	elements/local/OpenFlow/lib/util.hh	85;"	d
NOT_REACHED	elements/local/OpenFlow/lib/util.hh	84;"	d
NOT_TCP	elements/tcpudp/checktcpheader.hh	/^    NOT_TCP,$/;"	e	enum:CheckTCPHeader::Reason
NOT_TESTED	elements/local/OpenFlow/lib/util.hh	86;"	d
NOT_UDP	elements/tcpudp/checkudpheader.hh	/^    NOT_UDP,$/;"	e	enum:CheckUDPHeader::Reason
NO_DEVIRTUALIZE_OPT	tools/click-devirtualize/click-devirtualize.cc	52;"	d	file:
NO_LIMIT	elements/bsdmodule/fastudpsrc.hh	/^  static const unsigned NO_LIMIT = 0xFFFFFFFFU;$/;"	m	class:FastUDPSource
NO_LIMIT	elements/ethernet/etherpausesource.hh	/^    static const unsigned NO_LIMIT = 0xFFFFFFFFU;$/;"	m	class:EtherPauseSource
NO_LIMIT	elements/linuxmodule/fasttcpflows.cc	/^const unsigned FastTCPFlows::NO_LIMIT;$/;"	m	class:FastTCPFlows	file:
NO_LIMIT	elements/linuxmodule/fasttcpflows.hh	/^  static const unsigned NO_LIMIT = 0xFFFFFFFFU;$/;"	m	class:FastTCPFlows
NO_LIMIT	elements/linuxmodule/fastudpflows.cc	/^const unsigned FastUDPFlows::NO_LIMIT;$/;"	m	class:FastUDPFlows	file:
NO_LIMIT	elements/linuxmodule/fastudpflows.hh	/^  static const unsigned NO_LIMIT = 0xFFFFFFFFU;$/;"	m	class:FastUDPFlows
NO_LIMIT	elements/linuxmodule/fastudpsrc.cc	/^const unsigned FastUDPSource::NO_LIMIT;$/;"	m	class:FastUDPSource	file:
NO_LIMIT	elements/linuxmodule/fastudpsrc.hh	/^  static const unsigned NO_LIMIT = 0xFFFFFFFFU;$/;"	m	class:FastUDPSource
NO_LIMIT	elements/linuxmodule/fastudpsrcip6.cc	/^const unsigned FastUDPSourceIP6::NO_LIMIT;$/;"	m	class:FastUDPSourceIP6	file:
NO_LIMIT	elements/linuxmodule/fastudpsrcip6.hh	/^  static const unsigned NO_LIMIT = 0xFFFFFFFFU;$/;"	m	class:FastUDPSourceIP6
NO_LIMIT	elements/standard/ratedsource.cc	/^const unsigned RatedSource::NO_LIMIT;$/;"	m	class:RatedSource	file:
NO_LIMIT	elements/standard/ratedsource.hh	/^    static const unsigned NO_LIMIT = 0xFFFFFFFFU;$/;"	m	class:RatedSource
NO_LIST_OPT	apps/clicky/src/clicky.cc	44;"	d	file:
NO_RETURN	elements/local/OpenFlow/lib/compiler.hh	37;"	d
NO_ROUTE_CODE	elements/grid/gridlogger.hh	/^  static const unsigned char NO_ROUTE_CODE              = 0x0C;$/;"	m	class:GridLogger
NO_SEQNO	elements/analysis/fromcapdump.hh	/^    enum { NO_SEQNO = 0xFFFFFFFFU };$/;"	e	enum:FromCapDump::__anon301
NO_TOOLBAR_OPT	apps/clicky/src/clicky.cc	46;"	d	file:
NO_WARNINGS_OPT	ns/nsclick.cc	65;"	d	file:
NO_WARNINGS_OPT	userlevel/click.cc	69;"	d	file:
NPKT	elements/analysis/toipflowdumps.hh	/^	enum { NPKT = 128, NNOTE = 32 };$/;"	e	enum:ToIPFlowDumps::Flow::__anon297
NPKT	elements/userlevel/ipflowrawsockets.hh	/^	enum { NPKT = 128, NNOTE = 32 };$/;"	e	enum:IPFlowRawSockets::Flow::__anon211
NPLANE	elements/analysis/aggregatefirst.hh	/^	   PLANE_BITS = 32 - ROW_BITS - COL_BITS, PLANE_SHIFT = COL_SHIFT + COL_BITS, NPLANE = 1<<PLANE_BITS, PLANE_MASK = NPLANE - 1 };$/;"	e	enum:AggregateFirst::__anon292
NPLANE	elements/analysis/aggregatelast.hh	/^	   PLANE_BITS = 32 - ROW_BITS - COL_BITS, PLANE_SHIFT = COL_SHIFT + COL_BITS, NPLANE = 1<<PLANE_BITS, PLANE_MASK = NPLANE - 1 };$/;"	e	enum:AggregateLast::__anon274
NPTX_ACKNOWLDGE2	drivers/e1000-4.x/src/e1000_hw.h	1614;"	d
NPTX_ACKNOWLDGE2	drivers/e1000-5.x/src/e1000_hw.h	1886;"	d
NPTX_ACKNOWLDGE2	drivers/e1000-7.x/src/e1000_hw.h	2788;"	d
NPTX_MSG_CODE_FIELD	drivers/e1000-4.x/src/e1000_hw.h	1610;"	d
NPTX_MSG_CODE_FIELD	drivers/e1000-5.x/src/e1000_hw.h	1882;"	d
NPTX_MSG_CODE_FIELD	drivers/e1000-7.x/src/e1000_hw.h	2784;"	d
NPTX_MSG_PAGE	drivers/e1000-4.x/src/e1000_hw.h	1617;"	d
NPTX_MSG_PAGE	drivers/e1000-5.x/src/e1000_hw.h	1889;"	d
NPTX_MSG_PAGE	drivers/e1000-7.x/src/e1000_hw.h	2791;"	d
NPTX_NEXT_PAGE	drivers/e1000-4.x/src/e1000_hw.h	1618;"	d
NPTX_NEXT_PAGE	drivers/e1000-5.x/src/e1000_hw.h	1890;"	d
NPTX_NEXT_PAGE	drivers/e1000-7.x/src/e1000_hw.h	2792;"	d
NPTX_TOGGLE	drivers/e1000-4.x/src/e1000_hw.h	1611;"	d
NPTX_TOGGLE	drivers/e1000-5.x/src/e1000_hw.h	1883;"	d
NPTX_TOGGLE	drivers/e1000-7.x/src/e1000_hw.h	2785;"	d
NREASONS	elements/ethernet/checkarpheader.hh	/^    NREASONS$/;"	e	enum:CheckARPHeader::Reason
NREASONS	elements/icmp/checkicmpheader.hh	/^    NREASONS$/;"	e	enum:CheckICMPHeader::Reason
NREASONS	elements/ip/checkipheader.hh	/^    NREASONS$/;"	e	enum:CheckIPHeader::Reason
NREASONS	elements/tcpudp/checktcpheader.hh	/^    NREASONS$/;"	e	enum:CheckTCPHeader::Reason
NREASONS	elements/tcpudp/checkudpheader.hh	/^    NREASONS$/;"	e	enum:CheckUDPHeader::Reason
NROW	elements/analysis/aggregatefirst.hh	/^    enum { ROW_BITS = 10, ROW_SHIFT = 0, NROW = 1<<ROW_BITS, ROW_MASK = NROW - 1,$/;"	e	enum:AggregateFirst::__anon292
NROW	elements/analysis/aggregatelast.hh	/^    enum { ROW_BITS = 10, ROW_SHIFT = 0, NROW = 1<<ROW_BITS, ROW_MASK = NROW - 1,$/;"	e	enum:AggregateLast::__anon274
NSMODULE	tools/lib/etraits.hh	/^	USERLEVEL = 0, LINUXMODULE = 1, BSDMODULE = 2, NSMODULE = 3,$/;"	e	enum:Driver::__anon526
NSTATES	include/click/routerthread.hh	/^	   NSTATES };$/;"	e	enum:RouterThread::__anon422
NSUBSEC	include/click/timestamp.hh	/^	NSUBSEC = subsec_per_sec$/;"	e	enum:Timestamp::__anon418
NUMBUF_SIZE	lib/error.cc	319;"	d	file:
NUM_CLICK_CPUS	include/click/config.h	135;"	d
NUM_DEV_IDS	drivers/e1000-4.x/src/e1000_hw.h	253;"	d
NUM_RADIOTAP_ELEMENTS	elements/wifi/radiotapdecap.cc	30;"	d	file:
NWAY_AR_100T4_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1583;"	d
NWAY_AR_100T4_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1855;"	d
NWAY_AR_100T4_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2757;"	d
NWAY_AR_100TX_FD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1582;"	d
NWAY_AR_100TX_FD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1854;"	d
NWAY_AR_100TX_FD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2756;"	d
NWAY_AR_100TX_HD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1581;"	d
NWAY_AR_100TX_HD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1853;"	d
NWAY_AR_100TX_HD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2755;"	d
NWAY_AR_10T_FD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1580;"	d
NWAY_AR_10T_FD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1852;"	d
NWAY_AR_10T_FD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2754;"	d
NWAY_AR_10T_HD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1579;"	d
NWAY_AR_10T_HD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1851;"	d
NWAY_AR_10T_HD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2753;"	d
NWAY_AR_ASM_DIR	drivers/e1000-4.x/src/e1000_hw.h	1585;"	d
NWAY_AR_ASM_DIR	drivers/e1000-5.x/src/e1000_hw.h	1857;"	d
NWAY_AR_ASM_DIR	drivers/e1000-7.x/src/e1000_hw.h	2759;"	d
NWAY_AR_NEXT_PAGE	drivers/e1000-4.x/src/e1000_hw.h	1587;"	d
NWAY_AR_NEXT_PAGE	drivers/e1000-5.x/src/e1000_hw.h	1859;"	d
NWAY_AR_NEXT_PAGE	drivers/e1000-7.x/src/e1000_hw.h	2761;"	d
NWAY_AR_PAUSE	drivers/e1000-4.x/src/e1000_hw.h	1584;"	d
NWAY_AR_PAUSE	drivers/e1000-5.x/src/e1000_hw.h	1856;"	d
NWAY_AR_PAUSE	drivers/e1000-7.x/src/e1000_hw.h	2758;"	d
NWAY_AR_REMOTE_FAULT	drivers/e1000-4.x/src/e1000_hw.h	1586;"	d
NWAY_AR_REMOTE_FAULT	drivers/e1000-5.x/src/e1000_hw.h	1858;"	d
NWAY_AR_REMOTE_FAULT	drivers/e1000-7.x/src/e1000_hw.h	2760;"	d
NWAY_AR_SELECTOR_FIELD	drivers/e1000-4.x/src/e1000_hw.h	1578;"	d
NWAY_AR_SELECTOR_FIELD	drivers/e1000-5.x/src/e1000_hw.h	1850;"	d
NWAY_AR_SELECTOR_FIELD	drivers/e1000-7.x/src/e1000_hw.h	2752;"	d
NWAY_ER_LP_NEXT_PAGE_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1606;"	d
NWAY_ER_LP_NEXT_PAGE_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1878;"	d
NWAY_ER_LP_NEXT_PAGE_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2780;"	d
NWAY_ER_LP_NWAY_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1603;"	d
NWAY_ER_LP_NWAY_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1875;"	d
NWAY_ER_LP_NWAY_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2777;"	d
NWAY_ER_NEXT_PAGE_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1605;"	d
NWAY_ER_NEXT_PAGE_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1877;"	d
NWAY_ER_NEXT_PAGE_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2779;"	d
NWAY_ER_PAGE_RXD	drivers/e1000-4.x/src/e1000_hw.h	1604;"	d
NWAY_ER_PAGE_RXD	drivers/e1000-5.x/src/e1000_hw.h	1876;"	d
NWAY_ER_PAGE_RXD	drivers/e1000-7.x/src/e1000_hw.h	2778;"	d
NWAY_ER_PAR_DETECT_FAULT	drivers/e1000-4.x/src/e1000_hw.h	1607;"	d
NWAY_ER_PAR_DETECT_FAULT	drivers/e1000-5.x/src/e1000_hw.h	1879;"	d
NWAY_ER_PAR_DETECT_FAULT	drivers/e1000-7.x/src/e1000_hw.h	2781;"	d
NWAY_LPAR_100T4_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1595;"	d
NWAY_LPAR_100T4_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1867;"	d
NWAY_LPAR_100T4_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2769;"	d
NWAY_LPAR_100TX_FD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1594;"	d
NWAY_LPAR_100TX_FD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1866;"	d
NWAY_LPAR_100TX_FD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2768;"	d
NWAY_LPAR_100TX_HD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1593;"	d
NWAY_LPAR_100TX_HD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1865;"	d
NWAY_LPAR_100TX_HD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2767;"	d
NWAY_LPAR_10T_FD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1592;"	d
NWAY_LPAR_10T_FD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1864;"	d
NWAY_LPAR_10T_FD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2766;"	d
NWAY_LPAR_10T_HD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1591;"	d
NWAY_LPAR_10T_HD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1863;"	d
NWAY_LPAR_10T_HD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2765;"	d
NWAY_LPAR_ACKNOWLEDGE	drivers/e1000-4.x/src/e1000_hw.h	1599;"	d
NWAY_LPAR_ACKNOWLEDGE	drivers/e1000-5.x/src/e1000_hw.h	1871;"	d
NWAY_LPAR_ACKNOWLEDGE	drivers/e1000-7.x/src/e1000_hw.h	2773;"	d
NWAY_LPAR_ASM_DIR	drivers/e1000-4.x/src/e1000_hw.h	1597;"	d
NWAY_LPAR_ASM_DIR	drivers/e1000-5.x/src/e1000_hw.h	1869;"	d
NWAY_LPAR_ASM_DIR	drivers/e1000-7.x/src/e1000_hw.h	2771;"	d
NWAY_LPAR_NEXT_PAGE	drivers/e1000-4.x/src/e1000_hw.h	1600;"	d
NWAY_LPAR_NEXT_PAGE	drivers/e1000-5.x/src/e1000_hw.h	1872;"	d
NWAY_LPAR_NEXT_PAGE	drivers/e1000-7.x/src/e1000_hw.h	2774;"	d
NWAY_LPAR_PAUSE	drivers/e1000-4.x/src/e1000_hw.h	1596;"	d
NWAY_LPAR_PAUSE	drivers/e1000-5.x/src/e1000_hw.h	1868;"	d
NWAY_LPAR_PAUSE	drivers/e1000-7.x/src/e1000_hw.h	2770;"	d
NWAY_LPAR_REMOTE_FAULT	drivers/e1000-4.x/src/e1000_hw.h	1598;"	d
NWAY_LPAR_REMOTE_FAULT	drivers/e1000-5.x/src/e1000_hw.h	1870;"	d
NWAY_LPAR_REMOTE_FAULT	drivers/e1000-7.x/src/e1000_hw.h	2772;"	d
NWAY_LPAR_SELECTOR_FIELD	drivers/e1000-4.x/src/e1000_hw.h	1590;"	d
NWAY_LPAR_SELECTOR_FIELD	drivers/e1000-5.x/src/e1000_hw.h	1862;"	d
NWAY_LPAR_SELECTOR_FIELD	drivers/e1000-7.x/src/e1000_hw.h	2764;"	d
NXAST_SNAT	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXAST_SNAT                      \/* Source-NAT *\/$/;"	e	enum:nx_action_subtype
NXFER_DELETE	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXFER_DELETE,               \/* Flow was removed by delete command. *\/$/;"	e	enum:nx_flow_end_reason
NXFER_EJECT	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXFER_EJECT                 \/* Flow was ejected. *\/$/;"	e	enum:nx_flow_end_reason
NXFER_HARD_TIMEOUT	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXFER_HARD_TIMEOUT,         \/* Time exceeded hard_timeout. *\/$/;"	e	enum:nx_flow_end_reason
NXFER_IDLE_TIMEOUT	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXFER_IDLE_TIMEOUT,         \/* Flow idle time exceeded idle_timeout. *\/$/;"	e	enum:nx_flow_end_reason
NXSC_ADD	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXSC_ADD,$/;"	e	enum:nx_snat_command
NXSC_DELETE	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXSC_DELETE$/;"	e	enum:nx_snat_command
NXT_ACT_GET_CONFIG	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_ACT_GET_CONFIG,$/;"	e	enum:nicira_type
NXT_ACT_SET_CONFIG	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_ACT_SET_CONFIG,$/;"	e	enum:nicira_type
NXT_COMMAND_REPLY	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_COMMAND_REPLY,$/;"	e	enum:nicira_type
NXT_COMMAND_REQUEST	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_COMMAND_REQUEST,$/;"	e	enum:nicira_type
NXT_FLOW_END	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_FLOW_END$/;"	e	enum:nicira_type
NXT_FLOW_END_CONFIG	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_FLOW_END_CONFIG,$/;"	e	enum:nicira_type
NXT_STATUS_COREDUMP	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_STATUS_COREDUMP = 1 << 28, \/* Exited with core dump. *\/$/;"	e	enum:__anon250
NXT_STATUS_ERROR	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_STATUS_ERROR = 1 << 27,    \/* Command could not be executed. *\/$/;"	e	enum:__anon250
NXT_STATUS_EXITED	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_STATUS_EXITED = 1 << 31,   \/* Exited normally. *\/$/;"	e	enum:__anon250
NXT_STATUS_EXITSTATUS	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_STATUS_EXITSTATUS = 0xff,  \/* Exit code mask if NXT_STATUS_EXITED. *\/$/;"	e	enum:__anon250
NXT_STATUS_REPLY	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_STATUS_REPLY,$/;"	e	enum:nicira_type
NXT_STATUS_REQUEST	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_STATUS_REQUEST,$/;"	e	enum:nicira_type
NXT_STATUS_SIGNALED	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_STATUS_SIGNALED = 1 << 30, \/* Exited due to signal. *\/$/;"	e	enum:__anon250
NXT_STATUS_STARTED	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_STATUS_STARTED = 1 << 26,  \/* Command was started. *\/$/;"	e	enum:__anon250
NXT_STATUS_TERMSIG	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_STATUS_TERMSIG = 0xff,     \/* Signal number if NXT_STATUS_SIGNALED. *\/$/;"	e	enum:__anon250
NXT_STATUS_UNKNOWN	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    NXT_STATUS_UNKNOWN = 1 << 29,  \/* Exited for unknown reason. *\/$/;"	e	enum:__anon250
NX_VENDOR_ID	elements/local/OpenFlow/include/openflow/nicira-ext.hh	18;"	d
N_	apps/clicky/src/support.h	20;"	d
N_	apps/clicky/src/support.h	22;"	d
N_	apps/clicky/src/support.h	32;"	d
N_ERROR_TYPES	elements/local/OpenFlow/lib/ofp-print.cc	918;"	d	file:
N_NL_ATTR_TYPES	elements/local/OpenFlow/lib/netlink.hh	/^    N_NL_ATTR_TYPES$/;"	e	enum:nl_attr_type
N_PKT_BUFFERS	elements/local/OpenFlow/datapath.hh	85;"	d
NameDB	include/click/nameinfo.hh	/^NameDB::NameDB(uint32_t type, const String &context, size_t vsize)$/;"	f	class:NameDB
NameDB	include/click/nameinfo.hh	/^class NameDB { public:$/;"	c
NameInfo	include/click/nameinfo.hh	/^class NameInfo { public:$/;"	c
NameInfo	lib/nameinfo.cc	/^NameInfo::NameInfo()$/;"	f	class:NameInfo
NamedIntArg	include/click/nameinfo.hh	/^    NamedIntArg(uint32_t type)$/;"	f	struct:NamedIntArg
NamedIntArg	include/click/nameinfo.hh	/^struct NamedIntArg {$/;"	s
NbrEntry	elements/grid/updateroutes.hh	/^    NbrEntry() : _init(false), last_updated_jiffies(0) { }$/;"	f	class:UpdateGridRoutes::NbrEntry
NbrEntry	elements/grid/updateroutes.hh	/^    NbrEntry(EtherAddress eth_in, IPAddress ip_in, unsigned int jiff)$/;"	f	class:UpdateGridRoutes::NbrEntry
NbrEntry	elements/grid/updateroutes.hh	/^  class NbrEntry {$/;"	c	class:UpdateGridRoutes
NeighborTable	elements/wifi/autoratefallback.hh	/^  typedef HashMap<EtherAddress, DstInfo> NeighborTable;$/;"	t	class:AutoRateFallback
NeighborTable	elements/wifi/ethercount.hh	/^  typedef HashMap<EtherAddress, DstInfo> NeighborTable;$/;"	t	class:EtherCount
NeighborTable	elements/wifi/madwifirate.hh	/^  typedef HashMap<EtherAddress, DstInfo> NeighborTable;$/;"	t	class:MadwifiRate
NeighborTable	elements/wifi/probetxrate.hh	/^  typedef HashMap<EtherAddress, DstInfo> NeighborTable;$/;"	t	class:ProbeTXRate
NeighborTable	elements/wifi/rxstats.hh	/^  typedef HashMap<EtherAddress, DstInfo> NeighborTable;$/;"	t	class:RXStats
NeighborhoodTest	elements/test/neighborhoodtest.cc	/^NeighborhoodTest::NeighborhoodTest()$/;"	f	class:NeighborhoodTest
NeighborhoodTest	elements/test/neighborhoodtest.hh	/^class NeighborhoodTest : public Element { public:$/;"	c
NewConnectionDialog	apps/ClickController/NewConnectionDialog.java	/^    public NewConnectionDialog(ClickController cntr) {$/;"	m	class:NewConnectionDialog
NewConnectionDialog	apps/ClickController/NewConnectionDialog.java	/^class NewConnectionDialog extends JDialog {$/;"	c
NexthopInfo	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^struct NexthopInfo {$/;"	s
Nh	elements/ipsec/sha1_impl.hh	/^  unsigned long Nl, Nh;$/;"	m	struct:SHAstate_st
Nl	elements/ipsec/sha1_impl.hh	/^  unsigned long Nl, Nh;$/;"	m	struct:SHAstate_st
NoCloserNode	elements/grid/gridroutecb.hh	/^    NoCloserNode       = 4,$/;"	e	enum:GridRouteActionCallback::DropReason
NoDestLoc	elements/grid/gridroutecb.hh	/^    NoDestLoc          = 3,$/;"	e	enum:GridRouteActionCallback::DropReason
NoLocQueryNeeded	elements/grid/gridroutecb.hh	/^    NoLocQueryNeeded   = 8,$/;"	e	enum:GridRouteActionCallback::Action
NoLocalRoute	elements/grid/gridroutecb.hh	/^    NoLocalRoute       = 2,$/;"	e	enum:GridRouteActionCallback::DropReason
NoSuchElementException	apps/ClickController/ClickException.java	/^	NoSuchElementException() { $/;"	m	class:ClickException.NoSuchElementException
NoSuchElementException	apps/ClickController/ClickException.java	/^	NoSuchElementException(String s) { $/;"	m	class:ClickException.NoSuchElementException
NoSuchElementException	apps/ClickController/ClickException.java	/^    static public class NoSuchElementException extends ClickException {$/;"	c	class:ClickException
NoSuchHandlerException	apps/ClickController/ClickException.java	/^	NoSuchHandlerException() { $/;"	m	class:ClickException.NoSuchHandlerException
NoSuchHandlerException	apps/ClickController/ClickException.java	/^	NoSuchHandlerException(String hid) {$/;"	m	class:ClickException.NoSuchHandlerException
NoSuchHandlerException	apps/ClickController/ClickException.java	/^    static public class NoSuchHandlerException extends HandlerException {$/;"	c	class:ClickException
Node	elements/analysis/aggcounter.hh	/^    struct Node {$/;"	s	class:AggregateCounter
Node	elements/analysis/anonipaddr.hh	/^    struct Node {$/;"	s	class:AnonymizeIPAddr
Node	elements/grid/radiosim.hh	/^    Node() : _lat(0), _lon(0) { }$/;"	f	struct:RadioSim::Node
Node	elements/grid/radiosim.hh	/^    Node(double la, double lo) : _lat(la), _lon(lo) { }$/;"	f	struct:RadioSim::Node
Node	elements/grid/radiosim.hh	/^  struct Node {$/;"	s	class:RadioSim
Node	ns/CUT_BinHeap.h	/^    class Node {$/;"	c	class:CUT_BinHeap
Note	elements/analysis/toipflowdumps.hh	/^    struct Note {$/;"	s	class:ToIPFlowDumps
Notifier	include/click/notifier.hh	/^Notifier::Notifier(SearchOp op)$/;"	f	class:Notifier
Notifier	include/click/notifier.hh	/^Notifier::Notifier(const NotifierSignal &signal, SearchOp op)$/;"	f	class:Notifier
Notifier	include/click/notifier.hh	/^class Notifier { public:$/;"	c
NotifierDebug	elements/test/notifierdebug.cc	/^NotifierDebug::NotifierDebug()$/;"	f	class:NotifierDebug
NotifierDebug	elements/test/notifierdebug.hh	/^class NotifierDebug : public Element { public:$/;"	c
NotifierQueue	elements/standard/notifierqueue.cc	/^NotifierQueue::NotifierQueue()$/;"	f	class:NotifierQueue
NotifierQueue	elements/standard/notifierqueue.hh	/^class NotifierQueue : public SimpleQueue { public:$/;"	c
NotifierRouterVisitor	lib/notifier.cc	/^NotifierRouterVisitor::NotifierRouterVisitor(const char* name)$/;"	f	class:__anon519::NotifierRouterVisitor
NotifierRouterVisitor	lib/notifier.cc	/^class NotifierRouterVisitor : public RouterVisitor { public:$/;"	c	namespace:__anon519	file:
NotifierSignal	include/click/notifier.hh	/^NotifierSignal::NotifierSignal()$/;"	f	class:NotifierSignal
NotifierSignal	include/click/notifier.hh	/^NotifierSignal::NotifierSignal(atomic_uint32_t* value, uint32_t mask)$/;"	f	class:NotifierSignal
NotifierSignal	include/click/notifier.hh	/^NotifierSignal::NotifierSignal(const NotifierSignal &x)$/;"	f	class:NotifierSignal
NotifierSignal	include/click/notifier.hh	/^class NotifierSignal { public:$/;"	c
Null1	elements/standard/nulls.hh	/^  Null1()				{ }$/;"	f	class:Null1
Null1	elements/standard/nulls.hh	/^class Null1 : public Element {$/;"	c
Null2	elements/standard/nulls.hh	/^  Null2()				{ }$/;"	f	class:Null2
Null2	elements/standard/nulls.hh	/^class Null2 : public Element {$/;"	c
Null3	elements/standard/nulls.hh	/^  Null3()				{ }$/;"	f	class:Null3
Null3	elements/standard/nulls.hh	/^class Null3 : public Element {$/;"	c
Null4	elements/standard/nulls.hh	/^  Null4()				{ }$/;"	f	class:Null4
Null4	elements/standard/nulls.hh	/^class Null4 : public Element {$/;"	c
Null5	elements/standard/nulls.hh	/^  Null5()				{ }$/;"	f	class:Null5
Null5	elements/standard/nulls.hh	/^class Null5 : public Element {$/;"	c
Null6	elements/standard/nulls.hh	/^  Null6()				{ }$/;"	f	class:Null6
Null6	elements/standard/nulls.hh	/^class Null6 : public Element {$/;"	c
Null7	elements/standard/nulls.hh	/^  Null7()				{ }$/;"	f	class:Null7
Null7	elements/standard/nulls.hh	/^class Null7 : public Element {$/;"	c
Null8	elements/standard/nulls.hh	/^  Null8()				{ }$/;"	f	class:Null8
Null8	elements/standard/nulls.hh	/^class Null8 : public Element {$/;"	c
NullAligner	tools/click-align/alignclass.hh	/^  NullAligner() { }$/;"	f	class:NullAligner
NullAligner	tools/click-align/alignclass.hh	/^class NullAligner : public Aligner { public:$/;"	c
NullElement	elements/standard/nullelement.cc	/^NullElement::NullElement()$/;"	f	class:NullElement
NullElement	elements/standard/nullelement.hh	/^class NullElement : public Element { public:$/;"	c
NullTask	elements/test/nulltask.cc	/^NullTask::NullTask()$/;"	f	class:NullTask
NullTask	elements/test/nulltask.hh	/^class NullTask : public Element { public:$/;"	c
NumArg	include/click/args.hh	/^struct NumArg {$/;"	s
O	drivers/e1000-5.x/src/Makefile	/^	make -C $(KSRC) O=$(KOBJ) SUBDIRS=$(shell pwd) modules$/;"	m
O	drivers/e1000-7.x/src/Makefile	/^	make -C $(KSRC) O=$(KOBJ) SUBDIRS=$(shell pwd) modules$/;"	m
OBJS	bsdmodule/Makefile	/^OBJS = $(GENERIC_OBJS) $(ELEMENT_OBJS) $(BSDMODULE_OBJS) elements.o$/;"	m
OBJS	etc/pkg-bsdmodule.mk	/^OBJS = $(ELEMENT_OBJS) $(PACKAGE_OBJS)$/;"	m
OBJS	etc/pkg-linuxmodule.mk	/^OBJS = $(ELEMENT_OBJS) $(PACKAGE_OBJS) kversion.ko$/;"	m
OBJS	etc/pkg-userlevel.mk	/^OBJS = $(ELEMENT_OBJS) $(PACKAGE_OBJS)$/;"	m
OBJS	linuxmodule/Makefile	/^OBJS = $(LIB_CXX_OBJS) $(LIB_C_OBJS) $(STD_ELEMENT_OBJS) $(ELEMENT_OBJS) \\$/;"	m
OBJS	ns/Makefile	/^OBJS = $(ELEMENT_OBJS) $(ELEMENTSCONF).o nsclick.o$/;"	m
OBJS	tools/click-align/Makefile	/^OBJS = alignment.o alignclass.o click-align.o$/;"	m
OBJS	tools/click-check/Makefile	/^OBJS = click-check.o$/;"	m
OBJS	tools/click-combine/Makefile	/^OBJS = click-combine.o$/;"	m
OBJS	tools/click-devirtualize/Makefile	/^OBJS = cxxclass.o specializer.o signature.o click-devirtualize.o$/;"	m
OBJS	tools/click-fastclassifier/Makefile	/^OBJS = click-fastclassifier.o fc_classifier.o fc_ipclassifier.o$/;"	m
OBJS	tools/click-flatten/Makefile	/^OBJS = click-flatten.o$/;"	m
OBJS	tools/click-install/Makefile	/^OBJS = common.o click-install.o$/;"	m
OBJS	tools/click-mkmindriver/Makefile	/^OBJS = click-mkmindriver.o$/;"	m
OBJS	tools/click-pretty/Makefile	/^OBJS = click-pretty.o html.o$/;"	m
OBJS	tools/click-undead/Makefile	/^OBJS = click-undead.o$/;"	m
OBJS	tools/click-xform/Makefile	/^OBJS = adjacency.o click-xform.o$/;"	m
OBJS	tools/lib/Makefile	/^OBJS = string.o straccum.o glue.o \\$/;"	m
OBJS	userlevel/Makefile	/^OBJS = $(ELEMENT_OBJS) $(ELEMENTSCONF).o click.o$/;"	m
OBJSUFFIX	tools/click-install/common.hh	24;"	d
OBJSUFFIX	tools/click-install/common.hh	28;"	d
OFFSETOF_IFR_ADDR_IFREQ	include/click/config-userlevel.h	218;"	d
OFFSET_MASK	elements/ip/ipfieldinfo.hh	/^	OFFSET_MASK = MAX_OFFSET << OFFSET_SHIFT,$/;"	e	enum:IPField::__anon343
OFFSET_SHIFT	elements/ip/ipfieldinfo.hh	/^	OFFSET_SHIFT = 6,$/;"	e	enum:IPField::__anon343
OFPAT_ENQUEUE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPAT_ENQUEUE,          \/* Output to queue.  *\/$/;"	e	enum:ofp_action_type
OFPAT_OUTPUT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPAT_OUTPUT,           \/* Output to switch port. *\/$/;"	e	enum:ofp_action_type
OFPAT_SET_DL_DST	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPAT_SET_DL_DST,       \/* Ethernet destination address. *\/$/;"	e	enum:ofp_action_type
OFPAT_SET_DL_SRC	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPAT_SET_DL_SRC,       \/* Ethernet source address. *\/$/;"	e	enum:ofp_action_type
OFPAT_SET_NW_DST	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPAT_SET_NW_DST,       \/* IP destination address. *\/$/;"	e	enum:ofp_action_type
OFPAT_SET_NW_SRC	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPAT_SET_NW_SRC,       \/* IP source address. *\/$/;"	e	enum:ofp_action_type
OFPAT_SET_NW_TOS	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPAT_SET_NW_TOS,       \/* IP ToS (DSCP field, 6 bits). *\/$/;"	e	enum:ofp_action_type
OFPAT_SET_TP_DST	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPAT_SET_TP_DST,       \/* TCP\/UDP destination port. *\/$/;"	e	enum:ofp_action_type
OFPAT_SET_TP_SRC	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPAT_SET_TP_SRC,       \/* TCP\/UDP source port. *\/$/;"	e	enum:ofp_action_type
OFPAT_SET_VLAN_PCP	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPAT_SET_VLAN_PCP,     \/* Set the 802.1q priority. *\/$/;"	e	enum:ofp_action_type
OFPAT_SET_VLAN_VID	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPAT_SET_VLAN_VID,     \/* Set the 802.1q VLAN id. *\/$/;"	e	enum:ofp_action_type
OFPAT_STRIP_VLAN	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPAT_STRIP_VLAN,       \/* Strip the 802.1q header. *\/$/;"	e	enum:ofp_action_type
OFPAT_VENDOR	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPAT_VENDOR = 0xffff$/;"	e	enum:ofp_action_type
OFPBAC_BAD_ARGUMENT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBAC_BAD_ARGUMENT,       \/* Bad action argument. *\/$/;"	e	enum:ofp_bad_action_code
OFPBAC_BAD_LEN	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBAC_BAD_LEN,            \/* Length problem in actions. *\/$/;"	e	enum:ofp_bad_action_code
OFPBAC_BAD_OUT_PORT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBAC_BAD_OUT_PORT,       \/* Problem validating output action. *\/$/;"	e	enum:ofp_bad_action_code
OFPBAC_BAD_QUEUE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBAC_BAD_QUEUE           \/* Problem validating output queue. *\/$/;"	e	enum:ofp_bad_action_code
OFPBAC_BAD_TYPE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBAC_BAD_TYPE,           \/* Unknown action type. *\/$/;"	e	enum:ofp_bad_action_code
OFPBAC_BAD_VENDOR	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBAC_BAD_VENDOR,         \/* Unknown vendor id specified. *\/$/;"	e	enum:ofp_bad_action_code
OFPBAC_BAD_VENDOR_TYPE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBAC_BAD_VENDOR_TYPE,    \/* Unknown action type for vendor id. *\/$/;"	e	enum:ofp_bad_action_code
OFPBAC_EPERM	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBAC_EPERM,              \/* Permissions error. *\/$/;"	e	enum:ofp_bad_action_code
OFPBAC_TOO_MANY	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBAC_TOO_MANY,           \/* Can't handle this many actions. *\/$/;"	e	enum:ofp_bad_action_code
OFPBRC_BAD_LEN	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBRC_BAD_LEN,             \/* Wrong request length for type. *\/$/;"	e	enum:ofp_bad_request_code
OFPBRC_BAD_STAT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBRC_BAD_STAT,            \/* ofp_stats_request.type not supported. *\/$/;"	e	enum:ofp_bad_request_code
OFPBRC_BAD_SUBTYPE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBRC_BAD_SUBTYPE,         \/* Vendor subtype not supported. *\/$/;"	e	enum:ofp_bad_request_code
OFPBRC_BAD_TYPE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBRC_BAD_TYPE,            \/* ofp_header.type not supported. *\/$/;"	e	enum:ofp_bad_request_code
OFPBRC_BAD_VENDOR	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBRC_BAD_VENDOR,          \/* Vendor not supported (in ofp_vendor_header$/;"	e	enum:ofp_bad_request_code
OFPBRC_BAD_VERSION	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBRC_BAD_VERSION,         \/* ofp_header.version not supported. *\/$/;"	e	enum:ofp_bad_request_code
OFPBRC_BUFFER_EMPTY	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBRC_BUFFER_EMPTY,        \/* Specified buffer has already been used. *\/$/;"	e	enum:ofp_bad_request_code
OFPBRC_BUFFER_UNKNOWN	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBRC_BUFFER_UNKNOWN       \/* Specified buffer does not exist. *\/$/;"	e	enum:ofp_bad_request_code
OFPBRC_EPERM	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPBRC_EPERM,               \/* Permissions error. *\/$/;"	e	enum:ofp_bad_request_code
OFPBUF_H	elements/local/OpenFlow/lib/ofpbuf.hh	35;"	d
OFPC_ARP_MATCH_IP	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPC_ARP_MATCH_IP   = 1 << 7   \/* Match IP addresses in ARP pkts. *\/$/;"	e	enum:ofp_capabilities
OFPC_FLOW_STATS	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPC_FLOW_STATS     = 1 << 0,  \/* Flow statistics. *\/$/;"	e	enum:ofp_capabilities
OFPC_FRAG_DROP	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPC_FRAG_DROP     = 1,  \/* Drop fragments. *\/$/;"	e	enum:ofp_config_flags
OFPC_FRAG_MASK	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPC_FRAG_MASK     = 3$/;"	e	enum:ofp_config_flags
OFPC_FRAG_NORMAL	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPC_FRAG_NORMAL   = 0,  \/* No special handling for fragments. *\/$/;"	e	enum:ofp_config_flags
OFPC_FRAG_REASM	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPC_FRAG_REASM    = 2,  \/* Reassemble (only if OFPC_IP_REASM set). *\/$/;"	e	enum:ofp_config_flags
OFPC_IP_REASM	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPC_IP_REASM       = 1 << 5,  \/* Can reassemble IP fragments. *\/$/;"	e	enum:ofp_capabilities
OFPC_PORT_STATS	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPC_PORT_STATS     = 1 << 2,  \/* Port statistics. *\/$/;"	e	enum:ofp_capabilities
OFPC_QUEUE_STATS	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPC_QUEUE_STATS    = 1 << 6,  \/* Queue statistics. *\/$/;"	e	enum:ofp_capabilities
OFPC_RESERVED	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPC_RESERVED       = 1 << 4,  \/* Reserved, must be zero. *\/$/;"	e	enum:ofp_capabilities
OFPC_STP	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPC_STP            = 1 << 3,  \/* 802.1d spanning tree. *\/$/;"	e	enum:ofp_capabilities
OFPC_TABLE_STATS	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPC_TABLE_STATS    = 1 << 1,  \/* Table statistics. *\/$/;"	e	enum:ofp_capabilities
OFPET_BAD_ACTION	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPET_BAD_ACTION,           \/* Error in action description. *\/$/;"	e	enum:ofp_error_type
OFPET_BAD_REQUEST	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPET_BAD_REQUEST,          \/* Request was not understood. *\/$/;"	e	enum:ofp_error_type
OFPET_FLOW_MOD_FAILED	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPET_FLOW_MOD_FAILED,      \/* Problem modifying flow entry. *\/$/;"	e	enum:ofp_error_type
OFPET_HELLO_FAILED	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPET_HELLO_FAILED,         \/* Hello protocol failed. *\/$/;"	e	enum:ofp_error_type
OFPET_PORT_MOD_FAILED	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPET_PORT_MOD_FAILED,      \/* Port mod request failed. *\/$/;"	e	enum:ofp_error_type
OFPET_QUEUE_OP_FAILED	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPET_QUEUE_OP_FAILED       \/* Queue operation failed. *\/$/;"	e	enum:ofp_error_type
OFPE_BWSHAPER	elements/local/OpenFlow/RConn.hh	53;"	d
OFPE_DATAPATH	elements/local/OpenFlow/RConn.hh	52;"	d
OFPE_RCONN	elements/local/OpenFlow/RConn.hh	51;"	d
OFPFC_ADD	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFC_ADD,              \/* New flow. *\/$/;"	e	enum:ofp_flow_mod_command
OFPFC_DELETE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFC_DELETE,           \/* Delete all matching flows. *\/$/;"	e	enum:ofp_flow_mod_command
OFPFC_DELETE_STRICT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFC_DELETE_STRICT    \/* Strictly match wildcards and priority. *\/$/;"	e	enum:ofp_flow_mod_command
OFPFC_MODIFY	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFC_MODIFY,           \/* Modify all matching flows. *\/$/;"	e	enum:ofp_flow_mod_command
OFPFC_MODIFY_STRICT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFC_MODIFY_STRICT,    \/* Modify entry strictly matching wildcards *\/$/;"	e	enum:ofp_flow_mod_command
OFPFF_CHECK_OVERLAP	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFF_CHECK_OVERLAP = 1 << 1,  \/* Check for overlapping entries first. *\/$/;"	e	enum:ofp_flow_mod_flags
OFPFF_EMERG	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFF_EMERG         = 1 << 2   \/* Remark this is for emergency. *\/$/;"	e	enum:ofp_flow_mod_flags
OFPFF_SEND_FLOW_REM	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFF_SEND_FLOW_REM = 1 << 0,  \/* Send flow removed message when flow$/;"	e	enum:ofp_flow_mod_flags
OFPFMFC_ALL_TABLES_FULL	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFMFC_ALL_TABLES_FULL,    \/* Flow not added because of full tables. *\/$/;"	e	enum:ofp_flow_mod_failed_code
OFPFMFC_BAD_COMMAND	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFMFC_BAD_COMMAND,        \/* Unknown command. *\/$/;"	e	enum:ofp_flow_mod_failed_code
OFPFMFC_BAD_EMERG_TIMEOUT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFMFC_BAD_EMERG_TIMEOUT,  \/* Flow not added because of non-zero idle\/hard$/;"	e	enum:ofp_flow_mod_failed_code
OFPFMFC_EPERM	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFMFC_EPERM,              \/* Permissions error. *\/$/;"	e	enum:ofp_flow_mod_failed_code
OFPFMFC_OVERLAP	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFMFC_OVERLAP,            \/* Attempted to add overlapping flow with$/;"	e	enum:ofp_flow_mod_failed_code
OFPFMFC_UNSUPPORTED	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFMFC_UNSUPPORTED         \/* Unsupported action list - cannot process in$/;"	e	enum:ofp_flow_mod_failed_code
OFPFW_ALL	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_ALL = ((1 << 22) - 1)$/;"	e	enum:ofp_flow_wildcards
OFPFW_DL_DST	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_DL_DST   = 1 << 3,  \/* Ethernet destination address. *\/$/;"	e	enum:ofp_flow_wildcards
OFPFW_DL_SRC	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_DL_SRC   = 1 << 2,  \/* Ethernet source address. *\/$/;"	e	enum:ofp_flow_wildcards
OFPFW_DL_TYPE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_DL_TYPE  = 1 << 4,  \/* Ethernet frame type. *\/$/;"	e	enum:ofp_flow_wildcards
OFPFW_DL_VLAN	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_DL_VLAN  = 1 << 1,  \/* VLAN id. *\/$/;"	e	enum:ofp_flow_wildcards
OFPFW_DL_VLAN_PCP	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_DL_VLAN_PCP = 1 << 20,  \/* VLAN priority. *\/$/;"	e	enum:ofp_flow_wildcards
OFPFW_ICMP_CODE	elements/local/OpenFlow/include/openflow/openflow.hh	518;"	d
OFPFW_ICMP_TYPE	elements/local/OpenFlow/include/openflow/openflow.hh	517;"	d
OFPFW_IN_PORT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_IN_PORT  = 1 << 0,  \/* Switch input port. *\/$/;"	e	enum:ofp_flow_wildcards
OFPFW_NW	elements/local/OpenFlow/lib/switch-flow.cc	140;"	d	file:
OFPFW_NW_DST_ALL	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_NW_DST_ALL = 32 << OFPFW_NW_DST_SHIFT,$/;"	e	enum:ofp_flow_wildcards
OFPFW_NW_DST_BITS	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_NW_DST_BITS = 6,$/;"	e	enum:ofp_flow_wildcards
OFPFW_NW_DST_MASK	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_NW_DST_MASK = ((1 << OFPFW_NW_DST_BITS) - 1) << OFPFW_NW_DST_SHIFT,$/;"	e	enum:ofp_flow_wildcards
OFPFW_NW_DST_SHIFT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_NW_DST_SHIFT = 14,$/;"	e	enum:ofp_flow_wildcards
OFPFW_NW_PROTO	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_NW_PROTO = 1 << 5,  \/* IP protocol. *\/$/;"	e	enum:ofp_flow_wildcards
OFPFW_NW_SRC_ALL	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_NW_SRC_ALL = 32 << OFPFW_NW_SRC_SHIFT,$/;"	e	enum:ofp_flow_wildcards
OFPFW_NW_SRC_BITS	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_NW_SRC_BITS = 6,$/;"	e	enum:ofp_flow_wildcards
OFPFW_NW_SRC_MASK	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_NW_SRC_MASK = ((1 << OFPFW_NW_SRC_BITS) - 1) << OFPFW_NW_SRC_SHIFT,$/;"	e	enum:ofp_flow_wildcards
OFPFW_NW_SRC_SHIFT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_NW_SRC_SHIFT = 8,$/;"	e	enum:ofp_flow_wildcards
OFPFW_NW_TOS	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_NW_TOS = 1 << 21,  \/* IP ToS (DSCP field, 6 bits). *\/$/;"	e	enum:ofp_flow_wildcards
OFPFW_TP	elements/local/OpenFlow/lib/switch-flow.cc	139;"	d	file:
OFPFW_TP_DST	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_TP_DST   = 1 << 7,  \/* TCP\/UDP destination port. *\/$/;"	e	enum:ofp_flow_wildcards
OFPFW_TP_SRC	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPFW_TP_SRC   = 1 << 6,  \/* TCP\/UDP source port. *\/$/;"	e	enum:ofp_flow_wildcards
OFPHFC_EPERM	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPHFC_EPERM                \/* Permissions error. *\/$/;"	e	enum:ofp_hello_failed_code
OFPHFC_INCOMPATIBLE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPHFC_INCOMPATIBLE,        \/* No compatible version. *\/$/;"	e	enum:ofp_hello_failed_code
OFPPC_NO_FLOOD	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPC_NO_FLOOD     = 1 << 4,  \/* Do not include this port when flooding. *\/$/;"	e	enum:ofp_port_config
OFPPC_NO_FWD	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPC_NO_FWD       = 1 << 5,  \/* Drop packets forwarded to port. *\/$/;"	e	enum:ofp_port_config
OFPPC_NO_PACKET_IN	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPC_NO_PACKET_IN = 1 << 6   \/* Do not send packet-in msgs for port. *\/$/;"	e	enum:ofp_port_config
OFPPC_NO_RECV	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPC_NO_RECV      = 1 << 2,  \/* Drop all packets except 802.1D spanning$/;"	e	enum:ofp_port_config
OFPPC_NO_RECV_STP	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPC_NO_RECV_STP  = 1 << 3,  \/* Drop received 802.1D STP packets. *\/$/;"	e	enum:ofp_port_config
OFPPC_NO_STP	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPC_NO_STP       = 1 << 1,  \/* Disable 802.1D spanning tree on port. *\/$/;"	e	enum:ofp_port_config
OFPPC_PORT_DOWN	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPC_PORT_DOWN    = 1 << 0,  \/* Port is administratively down. *\/$/;"	e	enum:ofp_port_config
OFPPF_100MB_FD	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPF_100MB_FD   = 1 << 3,  \/* 100 Mb full-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_100MB_HD	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPF_100MB_HD   = 1 << 2,  \/* 100 Mb half-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_10GB_FD	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPF_10GB_FD    = 1 << 6,  \/* 10 Gb full-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_10MB_FD	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPF_10MB_FD    = 1 << 1,  \/* 10 Mb full-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_10MB_HD	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPF_10MB_HD    = 1 << 0,  \/* 10 Mb half-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_1GB_FD	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPF_1GB_FD     = 1 << 5,  \/* 1 Gb full-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_1GB_HD	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPF_1GB_HD     = 1 << 4,  \/* 1 Gb half-duplex rate support. *\/$/;"	e	enum:ofp_port_features
OFPPF_AUTONEG	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPF_AUTONEG    = 1 << 9,  \/* Auto-negotiation. *\/$/;"	e	enum:ofp_port_features
OFPPF_COPPER	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPF_COPPER     = 1 << 7,  \/* Copper medium. *\/$/;"	e	enum:ofp_port_features
OFPPF_FIBER	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPF_FIBER      = 1 << 8,  \/* Fiber medium. *\/$/;"	e	enum:ofp_port_features
OFPPF_PAUSE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPF_PAUSE      = 1 << 10, \/* Pause. *\/$/;"	e	enum:ofp_port_features
OFPPF_PAUSE_ASYM	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPF_PAUSE_ASYM = 1 << 11  \/* Asymmetric pause. *\/$/;"	e	enum:ofp_port_features
OFPPMFC_BAD_HW_ADDR	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPMFC_BAD_HW_ADDR,         \/* Specified hardware address is wrong. *\/$/;"	e	enum:ofp_port_mod_failed_code
OFPPMFC_BAD_PORT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPMFC_BAD_PORT,            \/* Specified port does not exist. *\/$/;"	e	enum:ofp_port_mod_failed_code
OFPPR_ADD	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPR_ADD,              \/* The port was added. *\/$/;"	e	enum:ofp_port_reason
OFPPR_DELETE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPR_DELETE,           \/* The port was removed. *\/$/;"	e	enum:ofp_port_reason
OFPPR_MODIFY	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPR_MODIFY            \/* Some attribute of the port has changed. *\/$/;"	e	enum:ofp_port_reason
OFPPS_LINK_DOWN	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPS_LINK_DOWN   = 1 << 0, \/* No physical link present. *\/$/;"	e	enum:ofp_port_state
OFPPS_STP_BLOCK	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPS_STP_BLOCK   = 3 << 8, \/* Not part of spanning tree. *\/$/;"	e	enum:ofp_port_state
OFPPS_STP_FORWARD	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPS_STP_FORWARD = 2 << 8, \/* Learning and relaying frames. *\/$/;"	e	enum:ofp_port_state
OFPPS_STP_LEARN	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPS_STP_LEARN   = 1 << 8, \/* Learning but not relaying frames. *\/$/;"	e	enum:ofp_port_state
OFPPS_STP_LISTEN	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPS_STP_LISTEN  = 0 << 8, \/* Not learning or relaying frames. *\/$/;"	e	enum:ofp_port_state
OFPPS_STP_MASK	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPPS_STP_MASK    = 3 << 8  \/* Bit mask for OFPPS_STP_* values. *\/$/;"	e	enum:ofp_port_state
OFPP_ALL	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPP_ALL        = 0xfffc,  \/* All physical ports except input port. *\/$/;"	e	enum:ofp_port
OFPP_CONTROLLER	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPP_CONTROLLER = 0xfffd,  \/* Send to controller. *\/$/;"	e	enum:ofp_port
OFPP_FLOOD	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPP_FLOOD      = 0xfffb,  \/* All physical ports except input port and$/;"	e	enum:ofp_port
OFPP_IN_PORT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPP_IN_PORT    = 0xfff8,  \/* Send the packet out the input port.  This$/;"	e	enum:ofp_port
OFPP_LOCAL	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPP_LOCAL      = 0xfffe,  \/* Local openflow "port". *\/$/;"	e	enum:ofp_port
OFPP_MAX	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPP_MAX = 0xff00,$/;"	e	enum:ofp_port
OFPP_NONE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPP_NONE       = 0xffff   \/* Not associated with a physical port. *\/$/;"	e	enum:ofp_port
OFPP_NORMAL	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPP_NORMAL     = 0xfffa,  \/* Process with normal L2\/L3 switching. *\/$/;"	e	enum:ofp_port
OFPP_TABLE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPP_TABLE      = 0xfff9,  \/* Perform actions in flow table.$/;"	e	enum:ofp_port
OFPQOFC_BAD_PORT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPQOFC_BAD_PORT,           \/* Invalid port (or port does not exist). *\/$/;"	e	enum:ofp_queue_op_failed_code
OFPQOFC_BAD_QUEUE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPQOFC_BAD_QUEUE,          \/* Queue does not exist. *\/$/;"	e	enum:ofp_queue_op_failed_code
OFPQOFC_EPERM	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPQOFC_EPERM               \/* Permissions error. *\/$/;"	e	enum:ofp_queue_op_failed_code
OFPQT_MIN_RATE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPQT_MIN_RATE,       \/* Minimum datarate guaranteed. *\/$/;"	e	enum:ofp_queue_properties
OFPQT_NONE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPQT_NONE = 0,       \/* No property defined for queue (default). *\/$/;"	e	enum:ofp_queue_properties
OFPQ_ALL	elements/local/OpenFlow/include/openflow/openflow.hh	903;"	d
OFPQ_MIN_RATE_UNCFG	elements/local/OpenFlow/include/openflow/openflow.hh	906;"	d
OFPRR_DELETE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPRR_DELETE                \/* Evicted by a DELETE flow mod. *\/$/;"	e	enum:ofp_flow_removed_reason
OFPRR_HARD_TIMEOUT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPRR_HARD_TIMEOUT,         \/* Time exceeded hard_timeout. *\/$/;"	e	enum:ofp_flow_removed_reason
OFPRR_IDLE_TIMEOUT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPRR_IDLE_TIMEOUT,         \/* Flow idle time exceeded idle_timeout. *\/$/;"	e	enum:ofp_flow_removed_reason
OFPR_ACTION	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPR_ACTION             \/* Action explicitly output to controller. *\/$/;"	e	enum:ofp_packet_in_reason
OFPR_NO_MATCH	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPR_NO_MATCH,          \/* No matching flow. *\/$/;"	e	enum:ofp_packet_in_reason
OFPSF_REPLY_MORE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPSF_REPLY_MORE  = 1 << 0  \/* More replies to follow. *\/$/;"	e	enum:ofp_stats_reply_flags
OFPSTAT_H_	elements/local/OpenFlow/lib/ofpstat.hh	34;"	d
OFPST_AGGREGATE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPST_AGGREGATE,$/;"	e	enum:ofp_stats_types
OFPST_DESC	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPST_DESC,$/;"	e	enum:ofp_stats_types
OFPST_FLOW	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPST_FLOW,$/;"	e	enum:ofp_stats_types
OFPST_PORT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPST_PORT,$/;"	e	enum:ofp_stats_types
OFPST_QUEUE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPST_QUEUE,$/;"	e	enum:ofp_stats_types
OFPST_TABLE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPST_TABLE,$/;"	e	enum:ofp_stats_types
OFPST_VENDOR	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPST_VENDOR = 0xffff$/;"	e	enum:ofp_stats_types
OFPT_BARRIER_REPLY	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_BARRIER_REPLY,       \/* Controller\/switch message *\/$/;"	e	enum:ofp_type
OFPT_BARRIER_REQUEST	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_BARRIER_REQUEST,     \/* Controller\/switch message *\/$/;"	e	enum:ofp_type
OFPT_ECHO_REPLY	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_ECHO_REPLY,          \/* Symmetric message *\/$/;"	e	enum:ofp_type
OFPT_ECHO_REQUEST	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_ECHO_REQUEST,        \/* Symmetric message *\/$/;"	e	enum:ofp_type
OFPT_ERROR	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_ERROR,               \/* Symmetric message *\/$/;"	e	enum:ofp_type
OFPT_FEATURES_REPLY	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_FEATURES_REPLY,      \/* Controller\/switch message *\/$/;"	e	enum:ofp_type
OFPT_FEATURES_REQUEST	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_FEATURES_REQUEST,    \/* Controller\/switch message *\/$/;"	e	enum:ofp_type
OFPT_FLOW_MOD	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_FLOW_MOD,            \/* Controller\/switch message *\/$/;"	e	enum:ofp_type
OFPT_FLOW_REMOVED	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_FLOW_REMOVED,        \/* Async message *\/$/;"	e	enum:ofp_type
OFPT_GET_CONFIG_REPLY	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_GET_CONFIG_REPLY,    \/* Controller\/switch message *\/$/;"	e	enum:ofp_type
OFPT_GET_CONFIG_REQUEST	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_GET_CONFIG_REQUEST,  \/* Controller\/switch message *\/$/;"	e	enum:ofp_type
OFPT_HELLO	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_HELLO,               \/* Symmetric message *\/$/;"	e	enum:ofp_type
OFPT_PACKET_IN	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_PACKET_IN,           \/* Async message *\/$/;"	e	enum:ofp_type
OFPT_PACKET_OUT	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_PACKET_OUT,          \/* Controller\/switch message *\/$/;"	e	enum:ofp_type
OFPT_PORT_MOD	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_PORT_MOD,            \/* Controller\/switch message *\/$/;"	e	enum:ofp_type
OFPT_PORT_STATUS	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_PORT_STATUS,         \/* Async message *\/$/;"	e	enum:ofp_type
OFPT_QUEUE_GET_CONFIG_REPLY	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_QUEUE_GET_CONFIG_REPLY,    \/* Controller\/switch message *\/$/;"	e	enum:ofp_type
OFPT_QUEUE_GET_CONFIG_REQUEST	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_QUEUE_GET_CONFIG_REQUEST,  \/* Controller\/switch message *\/$/;"	e	enum:ofp_type
OFPT_RATE_SHAPE	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_RATE_SHAPE$/;"	e	enum:ofp_type
OFPT_SET_CONFIG	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_SET_CONFIG,          \/* Controller\/switch message *\/$/;"	e	enum:ofp_type
OFPT_STATS_REPLY	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_STATS_REPLY,         \/* Controller\/switch message *\/$/;"	e	enum:ofp_type
OFPT_STATS_REQUEST	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_STATS_REQUEST,       \/* Controller\/switch message *\/$/;"	e	enum:ofp_type
OFPT_VENDOR	elements/local/OpenFlow/include/openflow/openflow.hh	/^    OFPT_VENDOR,              \/* Symmetric message *\/$/;"	e	enum:ofp_type
OFP_ASSERT	elements/local/OpenFlow/include/openflow/openflow.hh	51;"	d
OFP_ASSERT	elements/local/OpenFlow/include/openflow/openflow.hh	54;"	d
OFP_ASSERT	elements/local/OpenFlow/include/openflow/openflow.hh	58;"	d
OFP_DEFAULT_MISS_SEND_LEN	elements/local/OpenFlow/include/openflow/openflow.hh	165;"	d
OFP_DEFAULT_PRIORITY	elements/local/OpenFlow/include/openflow/openflow.hh	567;"	d
OFP_DL_TYPE_ETH2_CUTOFF	elements/local/OpenFlow/include/openflow/openflow.hh	524;"	d
OFP_DL_TYPE_NOT_ETH_TYPE	elements/local/OpenFlow/include/openflow/openflow.hh	529;"	d
OFP_ETH_ALEN	elements/local/OpenFlow/include/openflow/openflow.hh	82;"	d
OFP_EXT_COUNT	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    OFP_EXT_COUNT$/;"	e	enum:ofp_extension_commands
OFP_EXT_QUEUE_DELETE	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    OFP_EXT_QUEUE_DELETE,  \/* Remove a queue *\/$/;"	e	enum:ofp_extension_commands
OFP_EXT_QUEUE_MODIFY	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    OFP_EXT_QUEUE_MODIFY,  \/* Add and\/or modify *\/$/;"	e	enum:ofp_extension_commands
OFP_EXT_SET_DESC	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    OFP_EXT_SET_DESC,      \/* Set ofp_desc_stat->dp_desc *\/$/;"	e	enum:ofp_extension_commands
OFP_FLOW_PERMANENT	elements/local/OpenFlow/include/openflow/openflow.hh	564;"	d
OFP_MAX_PORT_NAME_LEN	elements/local/OpenFlow/include/openflow/openflow.hh	77;"	d
OFP_MAX_TABLE_NAME_LEN	elements/local/OpenFlow/include/openflow/openflow.hh	76;"	d
OFP_PACKED	elements/local/OpenFlow/include/openflow/openflow.hh	62;"	d
OFP_PACKED	elements/local/OpenFlow/include/openflow/openflow.hh	64;"	d
OFP_PRINT_H	elements/local/OpenFlow/lib/ofp-print.hh	37;"	d
OFP_SSL_PORT	elements/local/OpenFlow/include/openflow/openflow.hh	80;"	d
OFP_SUPPORTED_ACTIONS	elements/local/OpenFlow/datapath.cc	718;"	d	file:
OFP_SUPPORTED_CAPABILITIES	elements/local/OpenFlow/datapath.cc	711;"	d	file:
OFP_TCP_PORT	elements/local/OpenFlow/include/openflow/openflow.hh	79;"	d
OFP_VERSION	elements/local/OpenFlow/include/openflow/openflow.hh	74;"	d
OFP_VLAN_NONE	elements/local/OpenFlow/include/openflow/openflow.hh	384;"	d
OFP_VLAN_NONE	elements/local/OpenFlow/include/openflow/openflow.hh	534;"	d
OFQ_ERR_BW_UNAVAIL	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    OFQ_ERR_BW_UNAVAIL,         \/* Bandwidth unavailable *\/$/;"	e	enum:openflow_queue_error_code
OFQ_ERR_COUNT	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    OFQ_ERR_COUNT               \/* Last please *\/$/;"	e	enum:openflow_queue_error_code
OFQ_ERR_DISCIPLINE	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    OFQ_ERR_DISCIPLINE,         \/* Discipline not supported *\/$/;"	e	enum:openflow_queue_error_code
OFQ_ERR_FAIL	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    OFQ_ERR_FAIL,               \/* Unspecified failure *\/$/;"	e	enum:openflow_queue_error_code
OFQ_ERR_NONE	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    OFQ_ERR_NONE,               \/* Success *\/$/;"	e	enum:openflow_queue_error_code
OFQ_ERR_NOT_FOUND	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    OFQ_ERR_NOT_FOUND,          \/* Queue not found *\/$/;"	e	enum:openflow_queue_error_code
OFQ_ERR_QUEUE_UNAVAIL	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    OFQ_ERR_QUEUE_UNAVAIL,      \/* Queue unavailable *\/$/;"	e	enum:openflow_queue_error_code
OF_EXT_MSG_H	elements/local/OpenFlow/lib/of_ext_msg.hh	35;"	d
OI_ECLASS_REF	tools/click-pretty/click-pretty.cc	/^    enum { OI_NORMAL, OI_ELEMENT_REF, OI_ECLASS_REF };$/;"	e	enum:OutputItem::__anon539	file:
OI_ELEMENT_REF	tools/click-pretty/click-pretty.cc	/^    enum { OI_NORMAL, OI_ELEMENT_REF, OI_ECLASS_REF };$/;"	e	enum:OutputItem::__anon539	file:
OI_NORMAL	tools/click-pretty/click-pretty.cc	/^    enum { OI_NORMAL, OI_ELEMENT_REF, OI_ECLASS_REF };$/;"	e	enum:OutputItem::__anon539	file:
OLD_BCASTS_NEEDED	elements/grid/dsdvroutetable.hh	184;"	d
ONE_HUNDREDTH	elements/aqm/adaptivered.hh	/^    static const uint32_t ONE_HUNDREDTH = 655;$/;"	m	class:AdaptiveRED
OPENFLOW_NICIRA_EXT_H	elements/local/OpenFlow/include/openflow/nicira-ext.hh	7;"	d
OPENFLOW_OPENFLOW_EXT_H	elements/local/OpenFlow/include/openflow/openflow-ext.hh	7;"	d
OPENFLOW_OPENFLOW_H	elements/local/OpenFlow/include/openflow/openflow.hh	37;"	d
OPENFLOW_OPENFLOW_NETLINK_H	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	35;"	d
OPENFLOW_PRIVATE_EXT_H_	elements/local/OpenFlow/include/openflow/private-ext.hh	34;"	d
OPENFLOW_QUEUE_ERROR_STRINGS_DEF	elements/local/OpenFlow/include/openflow/openflow-ext.hh	74;"	d
OPENFLOW_VENDOR_ID	elements/local/OpenFlow/include/openflow/openflow-ext.hh	20;"	d
OPENSSL_assert	elements/ipsec/hmac.hh	67;"	d
OPTION_DISABLED	drivers/e1000-4.x/src/e1000_param.c	38;"	d	file:
OPTION_DISABLED	drivers/e1000-5.x/src/e1000_param.c	38;"	d	file:
OPTION_DISABLED	drivers/e1000-7.x/src/e1000_param.c	38;"	d	file:
OPTION_ENABLED	drivers/e1000-4.x/src/e1000_param.c	39;"	d	file:
OPTION_ENABLED	drivers/e1000-5.x/src/e1000_param.c	39;"	d	file:
OPTION_ENABLED	drivers/e1000-7.x/src/e1000_param.c	39;"	d	file:
OPTION_UNSET	drivers/e1000-4.x/src/e1000_param.c	37;"	d	file:
OPTION_UNSET	drivers/e1000-5.x/src/e1000_param.c	37;"	d	file:
OPTION_UNSET	drivers/e1000-7.x/src/e1000_param.c	37;"	d	file:
OP_EQ	elements/ip/ipfilter.hh	/^	OP_EQ = 0, OP_GT = 1, OP_LT = 2$/;"	e	enum:IPFilter::__anon350
OP_GT	elements/ip/ipfilter.hh	/^	OP_EQ = 0, OP_GT = 1, OP_LT = 2$/;"	e	enum:IPFilter::__anon350
OP_LT	elements/ip/ipfilter.hh	/^	OP_EQ = 0, OP_GT = 1, OP_LT = 2$/;"	e	enum:IPFilter::__anon350
OP_READ	include/click/handler.hh	/^	OP_READ = h_read,$/;"	e	enum:Handler::DeprecatedFlags
OP_READ	include/click/handlercall.hh	/^	   OP_READ = h_read, OP_WRITE = h_write,$/;"	e	enum:HandlerCall::__anon428
OP_WRITE	include/click/handler.hh	/^	OP_WRITE = h_write,$/;"	e	enum:Handler::DeprecatedFlags
OP_WRITE	include/click/handlercall.hh	/^	   OP_READ = h_read, OP_WRITE = h_write,$/;"	e	enum:HandlerCall::__anon428
OSX_TUN	elements/userlevel/kerneltun.hh	/^    enum Type { LINUX_UNIVERSAL, LINUX_ETHERTAP, BSD_TUN, BSD_TAP, OSX_TUN,$/;"	e	enum:KernelTun::Type
OS_DATA	drivers/e1000-4.x/src/ans_os.h	104;"	d
OTHERHOST	include/click/packet.hh	/^	OTHERHOST = 3,		\/**< Packet was sent to a different host, but$/;"	e	enum:Packet::PacketType
OTHER_TARGETS	Makefile	/^OTHER_TARGETS =  tools$/;"	m
OUI_CISCO_90	elements/userlevel/fakepcap.cc	179;"	d	file:
OUI_ENCAP_ETHER	elements/userlevel/fakepcap.cc	178;"	d	file:
OUI_RFC2684	elements/userlevel/fakepcap.cc	180;"	d	file:
OUTGOING	include/click/packet.hh	/^	OUTGOING = 4,		\/**< Packet was generated by this host and is$/;"	e	enum:Packet::PacketType
OUTPUT_OPT	ns/nsclick.cc	59;"	d	file:
OUTPUT_OPT	tools/click-align/click-align.cc	301;"	d	file:
OUTPUT_OPT	tools/click-check/click-check.cc	45;"	d	file:
OUTPUT_OPT	tools/click-combine/click-combine.cc	43;"	d	file:
OUTPUT_OPT	tools/click-combine/click-uncombine.cc	43;"	d	file:
OUTPUT_OPT	tools/click-devirtualize/click-devirtualize.cc	47;"	d	file:
OUTPUT_OPT	tools/click-fastclassifier/click-fastclassifier.cc	52;"	d	file:
OUTPUT_OPT	tools/click-flatten/click-flatten.cc	38;"	d	file:
OUTPUT_OPT	tools/click-pretty/click-pretty.cc	42;"	d	file:
OUTPUT_OPT	tools/click-undead/click-undead.cc	48;"	d	file:
OUTPUT_OPT	tools/click-xform/click-xform.cc	412;"	d	file:
OUTPUT_OPT	tools/click2xml/click2xml.cc	39;"	d	file:
OUTPUT_OPT	tools/click2xml/xml2click.cc	41;"	d	file:
OUTPUT_OPT	userlevel/click.cc	64;"	d	file:
OVERWRITE_SECS	elements/local/OpenFlow/datapath.hh	189;"	d
OfTime	elements/local/OpenFlow/lib/timeval.hh	/^class OfTime {$/;"	c
Of_Crc32	elements/local/OpenFlow/lib/of_crc32.hh	/^class Of_Crc32 {$/;"	c
Of_Csum	elements/local/OpenFlow/lib/csum.hh	/^class Of_Csum {$/;"	c
Of_DpAct	elements/local/OpenFlow/lib/dp_act.hh	/^class Of_DpAct {$/;"	c
Of_Hash	elements/local/OpenFlow/lib/hash.hh	/^class Of_Hash {$/;"	c
Of_LeakChecker	elements/local/OpenFlow/lib/leak-checker.hh	/^class Of_LeakChecker {$/;"	c
Of_OfExtMsg	elements/local/OpenFlow/lib/of_ext_msg.hh	/^class Of_OfExtMsg {$/;"	c
Of_OfpPrint	elements/local/OpenFlow/lib/ofp-print.hh	/^class Of_OfpPrint {$/;"	c
Of_Ofpbuf	elements/local/OpenFlow/lib/ofpbuf.hh	/^class Of_Ofpbuf {$/;"	c
Of_Ofpstat	elements/local/OpenFlow/lib/ofpstat.hh	/^class Of_Ofpstat$/;"	c
Of_Openflow	elements/local/OpenFlow/include/openflow/openflow.hh	/^class Of_Openflow{$/;"	c
Of_Pcap	elements/local/OpenFlow/lib/pcap.hh	/^class Of_Pcap {$/;"	c
Of_PollLoop	elements/local/OpenFlow/lib/poll-loop.hh	/^class Of_PollLoop {$/;"	c
Of_PrivateMsg	elements/local/OpenFlow/lib/private-msg.hh	/^class Of_PrivateMsg {$/;"	c
Of_Queue	elements/local/OpenFlow/lib/queue.hh	/^class Of_Queue {$/;"	c
Of_Random	elements/local/OpenFlow/lib/random.hh	/^class Of_Random{$/;"	c
Of_SwitchFlow	elements/local/OpenFlow/lib/switch-flow.hh	/^class Of_SwitchFlow {$/;"	c
Of_TableHash	elements/local/OpenFlow/lib/table.hh	/^class Of_TableHash {$/;"	c
Of_TableLinear	elements/local/OpenFlow/lib/table.hh	/^class Of_TableLinear {$/;"	c
OldBadSrcArg	elements/ip/checkipheader.hh	/^  struct OldBadSrcArg {$/;"	s	class:CheckIPHeader
Opcode	drivers/e1000-4.x/src/base_comm.h	/^    \/* u32 *\/ int    Opcode; $/;"	m	struct:_IANS_BD_PARAM_HEADER
OpenAction	apps/ClickController/ClickController.java	/^	OpenAction(ClickController cntr) {$/;"	m	class:ClickController.OpenAction
OpenAction	apps/ClickController/ClickController.java	/^    class OpenAction extends AbstractAction {$/;"	c	class:ClickController
OpenAuthRequester	elements/wifi/station/openauthrequester.cc	/^OpenAuthRequester::OpenAuthRequester()$/;"	f	class:OpenAuthRequester
OpenAuthRequester	elements/wifi/station/openauthrequester.hh	/^class OpenAuthRequester : public Element { public:$/;"	c
OpenAuthRequester_read_param	elements/wifi/station/openauthrequester.cc	/^OpenAuthRequester_read_param(Element *e, void *thunk)$/;"	f	file:
OpenAuthRequester_write_param	elements/wifi/station/openauthrequester.cc	/^OpenAuthRequester_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
OpenAuthResponder	elements/wifi/ap/openauthresponder.cc	/^OpenAuthResponder::OpenAuthResponder()$/;"	f	class:OpenAuthResponder
OpenAuthResponder	elements/wifi/ap/openauthresponder.hh	/^class OpenAuthResponder : public Element { public:$/;"	c
OpenAuthResponder_read_param	elements/wifi/ap/openauthresponder.cc	/^OpenAuthResponder_read_param(Element *e, void *thunk)$/;"	f	file:
OpenAuthResponder_write_param	elements/wifi/ap/openauthresponder.cc	/^OpenAuthResponder_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
OpenSSLDie	elements/ipsec/hmac.cc	/^void OpenSSLDie(void)$/;"	f
Options	click-mkelemmap	/^Options:$/;"	l
Options	conf/make-dsdv-config.pl	/^Options:$/;"	l
Options	conf/make-dsr-config.pl	/^Options:$/;"	l
Options	doc/click-elem2man	/^Options:$/;"	l
Options	test/testie	/^Options:$/;"	l
OriginalProtocol	drivers/e1000-4.x/src/base_comm.h	/^    u32                                      OriginalProtocol;$/;"	m	struct:_IANS_ATTR_HEADER
OutputItem	tools/click-pretty/click-pretty.cc	/^    OutputItem() : pos(-1), _other(-1), active(0), _end_item(0), _type(OI_NORMAL) { _u.element = 0; }$/;"	f	struct:OutputItem
OutputItem	tools/click-pretty/click-pretty.cc	/^    OutputItem(int p, ElementClassT *ec, bool ei) : pos(p), _other(-1), active(0), _end_item(ei), _type(OI_ECLASS_REF) { _u.eclass = ec; }$/;"	f	struct:OutputItem
OutputItem	tools/click-pretty/click-pretty.cc	/^    OutputItem(int p, ElementT *e, bool ei) : pos(p), _other(-1), active(0), _end_item(ei), _type(OI_ELEMENT_REF) { _u.element = e; }$/;"	f	struct:OutputItem
OutputItem	tools/click-pretty/click-pretty.cc	/^    OutputItem(int p, const String &t, bool ei) : pos(p), text(t), _other(-1), active(0), _end_item(ei), _type(OI_NORMAL) { _u.element = 0; }$/;"	f	struct:OutputItem
OutputItem	tools/click-pretty/click-pretty.cc	/^struct OutputItem {$/;"	s	file:
OwnLocUnknown	elements/grid/gridroutecb.hh	/^    OwnLocUnknown      = 6,$/;"	e	enum:GridRouteActionCallback::DropReason
P6MSR_CTR0	linuxmodule/read-pmc.c	26;"	d	file:
P6MSR_CTR1	linuxmodule/read-pmc.c	27;"	d	file:
P6MSR_CTRSEL0	linuxmodule/read-pmc.c	24;"	d	file:
P6MSR_CTRSEL1	linuxmodule/read-pmc.c	25;"	d	file:
P80211ENUM_msgitem_status_no_value	include/clicknet/wifi.h	/^        P80211ENUM_msgitem_status_no_value      = 0x00$/;"	e	enum:__anon495
P80211ENUM_truth_false	include/clicknet/wifi.h	/^        P80211ENUM_truth_false                  = 0x00$/;"	e	enum:__anon496
PACKAGE	Makefile	/^PACKAGE = click$/;"	m
PACKAGE	elements/local/OpenFlow/include/config.h	110;"	d
PACKAGE	etc/libclick/Makefile	/^PACKAGE = click$/;"	m
PACKAGE_BUGREPORT	elements/local/OpenFlow/include/config.h	113;"	d
PACKAGE_DEPS	etc/pkg-bsdmodule.mk	/^PACKAGE_DEPS ?=$/;"	m
PACKAGE_DEPS	etc/pkg-linuxmodule-26.mk	/^PACKAGE_DEPS ?=$/;"	m
PACKAGE_DEPS	etc/pkg-linuxmodule.mk	/^PACKAGE_DEPS ?=$/;"	m
PACKAGE_DEPS	etc/pkg-userlevel.mk	/^PACKAGE_DEPS ?=$/;"	m
PACKAGE_LIBS	etc/pkg-userlevel.mk	/^PACKAGE_LIBS ?=$/;"	m
PACKAGE_NAME	elements/local/OpenFlow/include/config.h	116;"	d
PACKAGE_OBJS	etc/pkg-bsdmodule.mk	/^PACKAGE_OBJS ?= bpackage.bo$/;"	m
PACKAGE_OBJS	etc/pkg-linuxmodule-26.mk	/^PACKAGE_OBJS ?= kpackage.ko$/;"	m
PACKAGE_OBJS	etc/pkg-linuxmodule.mk	/^PACKAGE_OBJS ?= kpackage.ko$/;"	m
PACKAGE_OBJS	etc/pkg-userlevel.mk	/^PACKAGE_OBJS ?= upackage.uo$/;"	m
PACKAGE_OPT	tools/click-mkmindriver/click-mkmindriver.cc	42;"	d	file:
PACKAGE_STRING	elements/local/OpenFlow/include/config.h	119;"	d
PACKAGE_TARNAME	elements/local/OpenFlow/include/config.h	122;"	d
PACKAGE_URLS_OPT	tools/click-pretty/click-pretty.cc	47;"	d	file:
PACKAGE_VERSION	elements/local/OpenFlow/include/config.h	125;"	d
PACKED	elements/local/OpenFlow/lib/compiler.hh	39;"	d
PACKED	elements/local/OpenFlow/lib/pcap.cc	/^} PACKED;$/;"	v	typeref:struct:pcap_hdr
PACKED	elements/local/OpenFlow/lib/pcap.cc	/^} PACKED;$/;"	v	typeref:struct:pcaprec_hdr
PACKETS_H	elements/local/OpenFlow/lib/packets.hh	34;"	d
PACKET_CHUNK	elements/ip/ipreassembler.cc	34;"	d	file:
PACKET_DLEN	elements/ip/ipreassembler.cc	35;"	d	file:
PACKET_NUMBER_ANNO	include/click/packet_anno.hh	101;"	d
PACKET_NUMBER_ANNO_OFFSET	include/click/packet_anno.hh	99;"	d
PACKET_NUMBER_ANNO_SIZE	include/click/packet_anno.hh	100;"	d
PAGE_USE_COUNT	drivers/e1000-7.x/src/e1000_main.c	2002;"	d	file:
PAINT_ANNO	include/click/packet_anno.hh	22;"	d
PAINT_ANNO_OFFSET	include/click/packet_anno.hh	20;"	d
PAINT_ANNO_SIZE	include/click/packet_anno.hh	21;"	d
PAPMO_CAPTURE_HEAD_SIZE	elements/local/FlowNet/papmo/PaPMo.hh	76;"	d
PASS_GE	lib/routerthread.cc	296;"	d	file:
PASS_GT	include/click/task.hh	23;"	d
PATTERNS_OPT	tools/click-xform/click-xform.cc	413;"	d	file:
PAUSE_MARKER	elements/standard/pokehandlers.cc	/^Element * const PokeHandlers::PAUSE_MARKER = (Element *)3;$/;"	m	class:PokeHandlers	file:
PAUSE_MARKER	elements/standard/pokehandlers.hh	/^    static Element * const PAUSE_MARKER;$/;"	m	class:PokeHandlers
PAUSE_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1439;"	d
PAUSE_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1661;"	d
PAUSE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2474;"	d
PBA_SIZE	drivers/e1000-4.x/src/e1000_hw.h	1359;"	d
PBA_SIZE	drivers/e1000-5.x/src/e1000_hw.h	1581;"	d
PBA_SIZE	drivers/e1000-7.x/src/e1000_hw.h	2365;"	d
PCAP_DONT_INCLUDE_PCAP_BPF_H	elements/userlevel/fromdevice.cc	32;"	d	file:
PCAP_DONT_INCLUDE_PCAP_BPF_H	elements/userlevel/todevice.cc	25;"	d	file:
PCAP_H	elements/local/OpenFlow/lib/pcap.hh	35;"	d
PCB	elements/tcpudp/snooptcp.cc	/^SnoopTCP::PCB::PCB()$/;"	f	class:SnoopTCP::PCB
PCB	elements/tcpudp/snooptcp.hh	/^struct SnoopTCP::PCB {$/;"	s	class:SnoopTCP
PCIE_CONFIG_SPACE_LEN	drivers/e1000-7.x/src/e1000_main.c	5257;"	d	file:
PCIX_COMMAND_MMRBC_MASK	drivers/e1000-4.x/src/e1000_hw.h	1427;"	d
PCIX_COMMAND_MMRBC_MASK	drivers/e1000-5.x/src/e1000_hw.h	1650;"	d
PCIX_COMMAND_MMRBC_MASK	drivers/e1000-7.x/src/e1000_hw.h	2463;"	d
PCIX_COMMAND_MMRBC_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1428;"	d
PCIX_COMMAND_MMRBC_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1651;"	d
PCIX_COMMAND_MMRBC_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2464;"	d
PCIX_COMMAND_REGISTER	drivers/e1000-4.x/src/e1000_hw.h	1423;"	d
PCIX_COMMAND_REGISTER	drivers/e1000-5.x/src/e1000_hw.h	1646;"	d
PCIX_COMMAND_REGISTER	drivers/e1000-7.x/src/e1000_hw.h	2459;"	d
PCIX_STATUS_HI_MMRBC_2K	drivers/e1000-4.x/src/e1000_hw.h	1432;"	d
PCIX_STATUS_HI_MMRBC_2K	drivers/e1000-5.x/src/e1000_hw.h	1655;"	d
PCIX_STATUS_HI_MMRBC_2K	drivers/e1000-7.x/src/e1000_hw.h	2468;"	d
PCIX_STATUS_HI_MMRBC_4K	drivers/e1000-4.x/src/e1000_hw.h	1431;"	d
PCIX_STATUS_HI_MMRBC_4K	drivers/e1000-5.x/src/e1000_hw.h	1654;"	d
PCIX_STATUS_HI_MMRBC_4K	drivers/e1000-7.x/src/e1000_hw.h	2467;"	d
PCIX_STATUS_HI_MMRBC_MASK	drivers/e1000-4.x/src/e1000_hw.h	1429;"	d
PCIX_STATUS_HI_MMRBC_MASK	drivers/e1000-5.x/src/e1000_hw.h	1652;"	d
PCIX_STATUS_HI_MMRBC_MASK	drivers/e1000-7.x/src/e1000_hw.h	2465;"	d
PCIX_STATUS_HI_MMRBC_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1430;"	d
PCIX_STATUS_HI_MMRBC_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1653;"	d
PCIX_STATUS_HI_MMRBC_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2466;"	d
PCIX_STATUS_REGISTER_HI	drivers/e1000-4.x/src/e1000_hw.h	1425;"	d
PCIX_STATUS_REGISTER_HI	drivers/e1000-5.x/src/e1000_hw.h	1648;"	d
PCIX_STATUS_REGISTER_HI	drivers/e1000-7.x/src/e1000_hw.h	2461;"	d
PCIX_STATUS_REGISTER_LO	drivers/e1000-4.x/src/e1000_hw.h	1424;"	d
PCIX_STATUS_REGISTER_LO	drivers/e1000-5.x/src/e1000_hw.h	1647;"	d
PCIX_STATUS_REGISTER_LO	drivers/e1000-7.x/src/e1000_hw.h	2460;"	d
PCI_ANY_ID	drivers/e1000-4.x/src/kcompat.h	122;"	d
PCI_CAP_ID_EXP	drivers/e1000-7.x/src/kcompat.h	123;"	d
PCI_COMMAND_REGISTER	drivers/e1000-4.x/src/e1000_osdep.h	55;"	d
PCI_COMMAND_REGISTER	drivers/e1000-5.x/src/e1000_osdep.h	57;"	d
PCI_COMMAND_REGISTER	drivers/e1000-7.x/src/e1000_osdep.h	62;"	d
PCI_CONFIG_SPACE_LEN	drivers/e1000-7.x/src/e1000_main.c	5258;"	d	file:
PCI_D0	drivers/e1000-7.x/src/kcompat.h	1000;"	d
PCI_D1	drivers/e1000-7.x/src/kcompat.h	1001;"	d
PCI_D2	drivers/e1000-7.x/src/kcompat.h	1002;"	d
PCI_D3cold	drivers/e1000-7.x/src/kcompat.h	1004;"	d
PCI_D3hot	drivers/e1000-7.x/src/kcompat.h	1003;"	d
PCI_DEVICE	drivers/e1000-5.x/src/kcompat.h	84;"	d
PCI_DEVICE	drivers/e1000-7.x/src/kcompat.h	223;"	d
PCI_DMA_32BIT	drivers/e1000-4.x/src/e1000.h	80;"	d
PCI_DMA_32BIT	drivers/e1000-4.x/src/kcompat.h	441;"	d
PCI_DMA_32BIT	drivers/e1000-4.x/src/kcompat.h	442;"	d
PCI_DMA_32BIT	drivers/e1000-5.x/src/e1000.h	84;"	d
PCI_DMA_32BIT	drivers/e1000-5.x/src/kcompat.h	524;"	d
PCI_DMA_32BIT	drivers/e1000-5.x/src/kcompat.h	525;"	d
PCI_DMA_64BIT	drivers/e1000-4.x/src/e1000.h	79;"	d
PCI_DMA_64BIT	drivers/e1000-4.x/src/kcompat.h	443;"	d
PCI_DMA_64BIT	drivers/e1000-4.x/src/kcompat.h	444;"	d
PCI_DMA_64BIT	drivers/e1000-5.x/src/e1000.h	83;"	d
PCI_DMA_64BIT	drivers/e1000-5.x/src/kcompat.h	526;"	d
PCI_DMA_64BIT	drivers/e1000-5.x/src/kcompat.h	527;"	d
PCI_DMA_FROMDEVICE	drivers/e1000-4.x/src/kcompat.h	183;"	d
PCI_DMA_TODEVICE	drivers/e1000-4.x/src/kcompat.h	179;"	d
PCI_DRAM_OFFSET	drivers/e1000-4.x/src/kcompat.c	53;"	d	file:
PCI_DRAM_OFFSET	drivers/e1000-5.x/src/kcompat.c	41;"	d	file:
PCI_DRAM_OFFSET	drivers/e1000-7.x/src/kcompat.c	40;"	d	file:
PCI_EX_82566_SNOOP_ALL	drivers/e1000-7.x/src/e1000_hw.h	2222;"	d
PCI_EX_LINK_STATUS	drivers/e1000-7.x/src/e1000_hw.h	2250;"	d
PCI_EX_LINK_WIDTH_MASK	drivers/e1000-7.x/src/e1000_hw.h	2251;"	d
PCI_EX_LINK_WIDTH_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2252;"	d
PCI_EX_NO_SNOOP_ALL	drivers/e1000-7.x/src/e1000_hw.h	2215;"	d
PDF_MULTIPAGE_OPT	apps/clicky/src/clicky.cc	42;"	d	file:
PDF_OPT	apps/clicky/src/clicky.cc	40;"	d	file:
PDF_SCALE_OPT	apps/clicky/src/clicky.cc	41;"	d	file:
PData	elements/analysis/storeudptimeseqrecord.hh	/^    struct PData$/;"	s	class:StoreUDPTimeSeqRecord
PEP	elements/grid/pep.cc	/^PEP::PEP()$/;"	f	class:PEP
PEP	elements/grid/pep.hh	/^class PEP : public GridLocationInfo {$/;"	c
PEPAmoeba	elements/grid/pep.cc	/^  PEPAmoeba () : Amoeba(2) { }$/;"	f	class:PEPAmoeba
PEPAmoeba	elements/grid/pep.cc	/^class PEPAmoeba : public Amoeba {$/;"	c	file:
PERFCOUNTACCUM_HH	elements/linuxmodule/perfcountaccum.hh	2;"	d
PERFCOUNTINFO_HH	elements/linuxmodule/perfcountinfo.hh	2;"	d
PERFCOUNTUSER_HH	elements/linuxmodule/perfcountuser.hh	2;"	d
PERFCTR_ANNO	include/click/packet_anno.hh	126;"	d
PERFCTR_ANNO_OFFSET	include/click/packet_anno.hh	124;"	d
PERFCTR_ANNO_SIZE	include/click/packet_anno.hh	125;"	d
PERFORM_BINARY_SEARCH	elements/ip/ipfilter.hh	/^	PERFORM_BINARY_SEARCH = 1,$/;"	e	enum:IPFilter::__anon352
PERIODIC_FOLD_INIT	elements/ip/ipratemon.hh	/^  enum { MAX_SHIFT = 24, PERIODIC_FOLD_INIT = 8192, MEMMAX_MIN = 100 };$/;"	e	enum:IPRateMonitor::__anon342
PERL	Makefile	/^PERL = perl$/;"	m
PERL	bsdmodule/Makefile	/^PERL = perl$/;"	m
PERL	doc/Makefile	/^PERL = perl$/;"	m
PERL	etc/libclick/Makefile	/^PERL = perl$/;"	m
PERM_OP	elements/ipsec/des.cc	428;"	d	file:
PE_DADDR	elements/ip/iprwpattern.cc	/^enum { PE_SYNTAX, PE_NOPATTERN, PE_SADDR, PE_SPORT, PE_DADDR, PE_DPORT };$/;"	e	enum:__anon345::__anon346	file:
PE_DPORT	elements/ip/iprwpattern.cc	/^enum { PE_SYNTAX, PE_NOPATTERN, PE_SADDR, PE_SPORT, PE_DADDR, PE_DPORT };$/;"	e	enum:__anon345::__anon346	file:
PE_NOPATTERN	elements/ip/iprwpattern.cc	/^enum { PE_SYNTAX, PE_NOPATTERN, PE_SADDR, PE_SPORT, PE_DADDR, PE_DPORT };$/;"	e	enum:__anon345::__anon346	file:
PE_SADDR	elements/ip/iprwpattern.cc	/^enum { PE_SYNTAX, PE_NOPATTERN, PE_SADDR, PE_SPORT, PE_DADDR, PE_DPORT };$/;"	e	enum:__anon345::__anon346	file:
PE_SPORT	elements/ip/iprwpattern.cc	/^enum { PE_SYNTAX, PE_NOPATTERN, PE_SADDR, PE_SPORT, PE_DADDR, PE_DPORT };$/;"	e	enum:__anon345::__anon346	file:
PE_SYNTAX	elements/ip/iprwpattern.cc	/^enum { PE_SYNTAX, PE_NOPATTERN, PE_SADDR, PE_SPORT, PE_DADDR, PE_DPORT };$/;"	e	enum:__anon345::__anon346	file:
PFFW	elements/local/FlowNet/common/PF_FW.cc	/^PFFW::PFFW()$/;"	f	class:PFFW
PFFW	elements/local/FlowNet/common/PF_FW.hh	/^class PFFW : public Element { public:$/;"	c
PFMpeg2AdaptFW	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.cc	/^PFMpeg2AdaptFW::PFMpeg2AdaptFW() : expire_timer(this)$/;"	f	class:PFMpeg2AdaptFW
PFMpeg2AdaptFW	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^class PFMpeg2AdaptFW : public PFFW { public:$/;"	c
PFMpeg2AdaptFWStat	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^struct PFMpeg2AdaptFWStat {$/;"	s
PFSchedFW	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^PFSchedFW::PFSchedFW() : flow_expire_timer(this), outer_loop_timer(this), sleep_waker(this)$/;"	f	class:PFSchedFW
PFSchedFW	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^class PFSchedFW : public PFFW { $/;"	c
PFSchedFWStat	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^struct PFSchedFWStat {$/;"	s
PFShapeFW	elements/local/FlowNet/shaper/PFShapeFW.cc	/^PFShapeFW::PFShapeFW() : send_timer(this), expire_timer(this)$/;"	f	class:PFShapeFW
PFShapeFW	elements/local/FlowNet/shaper/PFShapeFW.hh	/^class PFShapeFW : public PFFW { public:$/;"	c
PFShapeFWStat	elements/local/FlowNet/shaper/PFShapeFW.hh	/^struct PFShapeFWStat {$/;"	s
PFSinkFW	elements/local/FlowNet/sink/PFSinkFW.cc	/^PFSinkFW::PFSinkFW() $/;"	f	class:PFSinkFW
PFSinkFW	elements/local/FlowNet/sink/PFSinkFW.hh	/^class PFSinkFW : public PFFW { public:$/;"	c
PFX	drivers/e1000-5.x/src/e1000.h	103;"	d
PFX	drivers/e1000-7.x/src/e1000.h	99;"	d
PHY_1000T_CTRL	drivers/e1000-4.x/src/e1000_hw.h	1534;"	d
PHY_1000T_CTRL	drivers/e1000-5.x/src/e1000_hw.h	1752;"	d
PHY_1000T_CTRL	drivers/e1000-7.x/src/e1000_hw.h	2573;"	d
PHY_1000T_STATUS	drivers/e1000-4.x/src/e1000_hw.h	1535;"	d
PHY_1000T_STATUS	drivers/e1000-5.x/src/e1000_hw.h	1753;"	d
PHY_1000T_STATUS	drivers/e1000-7.x/src/e1000_hw.h	2574;"	d
PHY_AUTONEG_ADV	drivers/e1000-4.x/src/e1000_hw.h	1529;"	d
PHY_AUTONEG_ADV	drivers/e1000-5.x/src/e1000_hw.h	1747;"	d
PHY_AUTONEG_ADV	drivers/e1000-7.x/src/e1000_hw.h	2568;"	d
PHY_AUTONEG_EXP	drivers/e1000-4.x/src/e1000_hw.h	1531;"	d
PHY_AUTONEG_EXP	drivers/e1000-5.x/src/e1000_hw.h	1749;"	d
PHY_AUTONEG_EXP	drivers/e1000-7.x/src/e1000_hw.h	2570;"	d
PHY_AUTO_NEG_TIME	drivers/e1000-4.x/src/e1000_hw.h	1770;"	d
PHY_AUTO_NEG_TIME	drivers/e1000-5.x/src/e1000_hw.h	2146;"	d
PHY_AUTO_NEG_TIME	drivers/e1000-7.x/src/e1000_hw.h	3397;"	d
PHY_CFG_TIMEOUT	drivers/e1000-7.x/src/e1000_hw.h	2502;"	d
PHY_CTRL	drivers/e1000-4.x/src/e1000_hw.h	1525;"	d
PHY_CTRL	drivers/e1000-5.x/src/e1000_hw.h	1743;"	d
PHY_CTRL	drivers/e1000-7.x/src/e1000_hw.h	2564;"	d
PHY_EXT_STATUS	drivers/e1000-4.x/src/e1000_hw.h	1536;"	d
PHY_EXT_STATUS	drivers/e1000-5.x/src/e1000_hw.h	1754;"	d
PHY_EXT_STATUS	drivers/e1000-7.x/src/e1000_hw.h	2575;"	d
PHY_FORCE_TIME	drivers/e1000-4.x/src/e1000_hw.h	1771;"	d
PHY_FORCE_TIME	drivers/e1000-5.x/src/e1000_hw.h	2147;"	d
PHY_FORCE_TIME	drivers/e1000-7.x/src/e1000_hw.h	3398;"	d
PHY_ID1	drivers/e1000-4.x/src/e1000_hw.h	1527;"	d
PHY_ID1	drivers/e1000-5.x/src/e1000_hw.h	1745;"	d
PHY_ID1	drivers/e1000-7.x/src/e1000_hw.h	2566;"	d
PHY_ID2	drivers/e1000-4.x/src/e1000_hw.h	1528;"	d
PHY_ID2	drivers/e1000-5.x/src/e1000_hw.h	1746;"	d
PHY_ID2	drivers/e1000-7.x/src/e1000_hw.h	2567;"	d
PHY_IDLE_ERROR_COUNT_MASK	drivers/e1000-4.x/src/e1000_main.c	1757;"	d	file:
PHY_IDLE_ERROR_COUNT_MASK	drivers/e1000-5.x/src/e1000_main.c	2207;"	d	file:
PHY_IDLE_ERROR_COUNT_MASK	drivers/e1000-7.x/src/e1000_main.c	3765;"	d	file:
PHY_LP_ABILITY	drivers/e1000-4.x/src/e1000_hw.h	1530;"	d
PHY_LP_ABILITY	drivers/e1000-5.x/src/e1000_hw.h	1748;"	d
PHY_LP_ABILITY	drivers/e1000-7.x/src/e1000_hw.h	2569;"	d
PHY_LP_NEXT_PAGE	drivers/e1000-4.x/src/e1000_hw.h	1533;"	d
PHY_LP_NEXT_PAGE	drivers/e1000-5.x/src/e1000_hw.h	1751;"	d
PHY_LP_NEXT_PAGE	drivers/e1000-7.x/src/e1000_hw.h	2572;"	d
PHY_NEXT_PAGE_TX	drivers/e1000-4.x/src/e1000_hw.h	1532;"	d
PHY_NEXT_PAGE_TX	drivers/e1000-5.x/src/e1000_hw.h	1750;"	d
PHY_NEXT_PAGE_TX	drivers/e1000-7.x/src/e1000_hw.h	2571;"	d
PHY_OP_READ	drivers/e1000-4.x/src/e1000_hw.h	1762;"	d
PHY_OP_READ	drivers/e1000-5.x/src/e1000_hw.h	2138;"	d
PHY_OP_READ	drivers/e1000-7.x/src/e1000_hw.h	3389;"	d
PHY_OP_WRITE	drivers/e1000-4.x/src/e1000_hw.h	1763;"	d
PHY_OP_WRITE	drivers/e1000-5.x/src/e1000_hw.h	2139;"	d
PHY_OP_WRITE	drivers/e1000-7.x/src/e1000_hw.h	3390;"	d
PHY_PAGE_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	3174;"	d
PHY_PREAMBLE	drivers/e1000-4.x/src/e1000_hw.h	1760;"	d
PHY_PREAMBLE	drivers/e1000-5.x/src/e1000_hw.h	2136;"	d
PHY_PREAMBLE	drivers/e1000-7.x/src/e1000_hw.h	3387;"	d
PHY_PREAMBLE_SIZE	drivers/e1000-4.x/src/e1000_hw.h	1765;"	d
PHY_PREAMBLE_SIZE	drivers/e1000-5.x/src/e1000_hw.h	2141;"	d
PHY_PREAMBLE_SIZE	drivers/e1000-7.x/src/e1000_hw.h	3392;"	d
PHY_REG	drivers/e1000-7.x/src/e1000_hw.h	3175;"	d
PHY_REVISION_MASK	drivers/e1000-4.x/src/e1000_hw.h	1772;"	d
PHY_REVISION_MASK	drivers/e1000-5.x/src/e1000_hw.h	2148;"	d
PHY_REVISION_MASK	drivers/e1000-7.x/src/e1000_hw.h	3399;"	d
PHY_SOF	drivers/e1000-4.x/src/e1000_hw.h	1761;"	d
PHY_SOF	drivers/e1000-5.x/src/e1000_hw.h	2137;"	d
PHY_SOF	drivers/e1000-7.x/src/e1000_hw.h	3388;"	d
PHY_STATUS	drivers/e1000-4.x/src/e1000_hw.h	1526;"	d
PHY_STATUS	drivers/e1000-5.x/src/e1000_hw.h	1744;"	d
PHY_STATUS	drivers/e1000-7.x/src/e1000_hw.h	2565;"	d
PHY_TURNAROUND	drivers/e1000-4.x/src/e1000_hw.h	1764;"	d
PHY_TURNAROUND	drivers/e1000-5.x/src/e1000_hw.h	2140;"	d
PHY_TURNAROUND	drivers/e1000-7.x/src/e1000_hw.h	3391;"	d
PHY_TX_NORMAL_POLARITY	drivers/e1000-4.x/src/e1000_hw.h	1671;"	d
PHY_TX_NORMAL_POLARITY	drivers/e1000-5.x/src/e1000_hw.h	1946;"	d
PHY_TX_NORMAL_POLARITY	drivers/e1000-7.x/src/e1000_hw.h	2848;"	d
PHY_TX_POLARITY_MASK	drivers/e1000-4.x/src/e1000_hw.h	1670;"	d
PHY_TX_POLARITY_MASK	drivers/e1000-5.x/src/e1000_hw.h	1945;"	d
PHY_TX_POLARITY_MASK	drivers/e1000-7.x/src/e1000_hw.h	2847;"	d
PI	elements/aqm/pi.cc	/^PI::PI()$/;"	f	class:PI
PI	elements/aqm/pi.hh	/^class PI : public Element { public:$/;"	c
PIANS_ATTR_HEADER	drivers/e1000-4.x/src/base_comm.h	/^} IANS_ATTR_HEADER, *PIANS_ATTR_HEADER;$/;"	t	typeref:struct:_IANS_ATTR_HEADER
PIANS_BASE_OPCODE	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BASE_OPCODE, *PIANS_BASE_OPCODE;$/;"	t	typeref:enum:_IANS_BASE_OPCODE
PIANS_BD_ANS_SET_CB	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_ANS_SET_CB, *PIANS_BD_ANS_SET_CB;$/;"	t	typeref:struct:_IANS_BD_ANS_SET_CB
PIANS_BD_DUPLEX_STATUS	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_DUPLEX_STATUS, *PIANS_BD_DUPLEX_STATUS;$/;"	t	typeref:enum:_IANS_BD_DUPLEX_STATUS
PIANS_BD_HOT_PLUG_STATUS	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_HOT_PLUG_STATUS, *PIANS_BD_HOT_PLUG_STATUS;$/;"	t	typeref:enum:_IANS_BD_HOT_PLUG_STATUS
PIANS_BD_HW_STATUS	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_HW_STATUS, *PIANS_BD_HW_STATUS;$/;"	t	typeref:enum:_IANS_BD_HW_STATUS
PIANS_BD_IOC_PARAM_STATUS	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_IOC_PARAM_STATUS, *PIANS_BD_IOC_PARAM_STATUS;$/;"	t	typeref:struct:_IANS_BD_IOC_PARAM_STATUS
PIANS_BD_LINK_SPEED	drivers/e1000-4.x/src/base_comm.h	/^}IANS_BD_LINK_SPEED, *PIANS_BD_LINK_SPEED;$/;"	t	typeref:enum:_IANS_BD_LINK_SPEED
PIANS_BD_LINK_STATUS	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_LINK_STATUS, *PIANS_BD_LINK_STATUS;$/;"	t	typeref:enum:_IANS_BD_LINK_STATUS
PIANS_BD_PARAM_EXT_CAP	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_EXT_CAP, *PIANS_BD_PARAM_EXT_CAP;$/;"	t	typeref:struct:_IANS_BD_PARAM_EXT_CAP
PIANS_BD_PARAM_EXT_SET_MODE	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_EXT_SET_MODE, *PIANS_BD_PARAM_EXT_SET_MODE;$/;"	t	typeref:struct:_IANS_BD_PARAM_EXT_SET_MODE
PIANS_BD_PARAM_HEADER	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_HEADER, *PIANS_BD_PARAM_HEADER;$/;"	t	typeref:struct:_IANS_BD_PARAM_HEADER
PIANS_BD_PARAM_IDENTIFY	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_IDENTIFY, *PIANS_BD_PARAM_IDENTIFY;$/;"	t	typeref:struct:_IANS_BD_PARAM_IDENTIFY
PIANS_BD_PARAM_ITAG_CAP	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_ITAG_CAP, *PIANS_BD_PARAM_ITAG_CAP;$/;"	t	typeref:struct:_IANS_BD_PARAM_ITAG_CAP
PIANS_BD_PARAM_ITAG_SET_MODE	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_ITAG_SET_MODE, *PIANS_BD_PARAM_ITAG_SET_MODE;$/;"	t	typeref:struct:_IANS_BD_PARAM_ITAG_SET_MODE
PIANS_BD_PARAM_IVLAN_CAP	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_IVLAN_CAP, *PIANS_BD_PARAM_IVLAN_CAP;$/;"	t	typeref:struct:_IANS_BD_PARAM_IVLAN_CAP
PIANS_BD_PARAM_IVLAN_SET_MODE	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_IVLAN_SET_MODE, *PIANS_BD_PARAM_IVLAN_SET_MODE;$/;"	t	typeref:struct:_IANS_BD_PARAM_IVLAN_SET_MODE
PIANS_BD_PARAM_IVLAN_TABLE	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_IVLAN_TABLE, *PIANS_BD_PARAM_IVLAN_TABLE;$/;"	t	typeref:struct:_IANS_BD_PARAM_IVLAN_TABLE
PIANS_BD_PARAM_STATUS	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_PARAM_STATUS, *PIANS_BD_PARAM_STATUS;$/;"	t	typeref:struct:_IANS_BD_PARAM_STATUS
PIANS_BD_REQUEST_SUPPORT	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_REQUEST_SUPPORT, *PIANS_BD_REQUEST_SUPPORT;$/;"	t	typeref:enum:_IANS_BD_REQUEST_SUPPORT
PIANS_BD_RESET_STAGE	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_RESET_STAGE, *PIANS_BD_RESET_STAGE;$/;"	t	typeref:enum:_IANS_BD_RESET_STAGE
PIANS_BD_ROUTING	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_ROUTING, *PIANS_BD_ROUTING;$/;"	t	typeref:enum:_IANS_BD_ROUTING
PIANS_BD_SUPPORT	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_SUPPORT, *PIANS_BD_SUPPORT;$/;"	t	typeref:enum:_IANS_BD_SUPPORT
PIANS_BD_SUSPENDED_STAGE	drivers/e1000-4.x/src/base_comm.h	/^} IANS_BD_SUSPENDED_STAGE, *PIANS_BD_SUSPENDED_STAGE;$/;"	t	typeref:enum:_IANS_BD_SUSPENDED_STAGE
PIANS_BD_TAGGING_MODE	drivers/e1000-4.x/src/base_comm.h	/^}IANS_BD_TAGGING_MODE , *PIANS_BD_TAGGING_MODE ;$/;"	t	typeref:enum:_IANS_BD_TAGGING_MODE
PIANS_INDICATION	drivers/e1000-4.x/src/base_comm.h	/^} IANS_INDICATION, *PIANS_INDICATION;$/;"	t	typeref:enum:_IANS_INDICATION
PID_RFC2684_ETH_FCS	elements/userlevel/fakepcap.cc	181;"	d	file:
PID_RFC2684_ETH_NOFCS	elements/userlevel/fakepcap.cc	182;"	d	file:
PID_RFC2684_FDDI_FCS	elements/userlevel/fakepcap.cc	183;"	d	file:
PID_RFC2684_FDDI_NOFCS	elements/userlevel/fakepcap.cc	184;"	d	file:
PIIter	elements/wifi/wifidefrag.hh	/^  typedef PacketInfoTable::const_iterator PIIter;$/;"	t	class:WifiDefrag
PINGPONGHH	elements/grid/pingpong.hh	2;"	d
PI_DEBUG	elements/aqm/pi.cc	30;"	d	file:
PKT_BUFFER_BITS	elements/local/OpenFlow/datapath.hh	84;"	d
PKT_BUFFER_MASK	elements/local/OpenFlow/datapath.hh	86;"	d
PKT_COOKIE_BITS	elements/local/OpenFlow/datapath.hh	88;"	d
PLANE_BITS	elements/analysis/aggregatefirst.hh	/^	   PLANE_BITS = 32 - ROW_BITS - COL_BITS, PLANE_SHIFT = COL_SHIFT + COL_BITS, NPLANE = 1<<PLANE_BITS, PLANE_MASK = NPLANE - 1 };$/;"	e	enum:AggregateFirst::__anon292
PLANE_BITS	elements/analysis/aggregatelast.hh	/^	   PLANE_BITS = 32 - ROW_BITS - COL_BITS, PLANE_SHIFT = COL_SHIFT + COL_BITS, NPLANE = 1<<PLANE_BITS, PLANE_MASK = NPLANE - 1 };$/;"	e	enum:AggregateLast::__anon274
PLANE_MASK	elements/analysis/aggregatefirst.hh	/^	   PLANE_BITS = 32 - ROW_BITS - COL_BITS, PLANE_SHIFT = COL_SHIFT + COL_BITS, NPLANE = 1<<PLANE_BITS, PLANE_MASK = NPLANE - 1 };$/;"	e	enum:AggregateFirst::__anon292
PLANE_MASK	elements/analysis/aggregatelast.hh	/^	   PLANE_BITS = 32 - ROW_BITS - COL_BITS, PLANE_SHIFT = COL_SHIFT + COL_BITS, NPLANE = 1<<PLANE_BITS, PLANE_MASK = NPLANE - 1 };$/;"	e	enum:AggregateLast::__anon274
PLANE_SHIFT	elements/analysis/aggregatefirst.hh	/^	   PLANE_BITS = 32 - ROW_BITS - COL_BITS, PLANE_SHIFT = COL_SHIFT + COL_BITS, NPLANE = 1<<PLANE_BITS, PLANE_MASK = NPLANE - 1 };$/;"	e	enum:AggregateFirst::__anon292
PLANE_SHIFT	elements/analysis/aggregatelast.hh	/^	   PLANE_BITS = 32 - ROW_BITS - COL_BITS, PLANE_SHIFT = COL_SHIFT + COL_BITS, NPLANE = 1<<PLANE_BITS, PLANE_MASK = NPLANE - 1 };$/;"	e	enum:AggregateLast::__anon274
PMSG_SUSPEND	drivers/e1000-7.x/src/kcompat.h	1006;"	d
PMSG_SUSPEND	drivers/e1000-7.x/src/kcompat.h	107;"	d
POD2MAN	doc/Makefile	/^POD2MAN = pod2man$/;"	m
POLLIN	lib/selectset.cc	/^enum { POLLIN = Element::SELECT_READ, POLLOUT = Element::SELECT_WRITE };$/;"	e	enum:__anon507::__anon509	file:
POLLOUT	lib/selectset.cc	/^enum { POLLIN = Element::SELECT_READ, POLLOUT = Element::SELECT_WRITE };$/;"	e	enum:__anon507::__anon509	file:
POLL_IMS_ENABLE_MASK	drivers/e1000-4.x/src/e1000_hw.h	300;"	d
POLL_IMS_ENABLE_MASK	drivers/e1000-5.x/src/e1000_hw.h	433;"	d
POLL_IMS_ENABLE_MASK	drivers/e1000-7.x/src/e1000_hw.h	551;"	d
POLL_LIST_LEN	elements/bsdmodule/fromdevice.cc	48;"	d	file:
POLL_LOOP_H	elements/local/OpenFlow/lib/poll-loop.hh	50;"	d
POLYNOMIAL	lib/crc32.c	41;"	d	file:
PORTS_0_0	include/click/element.hh	/^    static const char PORTS_0_0[];$/;"	m	class:Element
PORTS_0_0	lib/element.cc	/^const char Element::PORTS_0_0[] = "0";$/;"	m	class:Element	file:
PORTS_0_1	include/click/element.hh	/^    static const char PORTS_0_1[];$/;"	m	class:Element
PORTS_0_1	lib/element.cc	/^const char Element::PORTS_0_1[] = "0\/1";$/;"	m	class:Element	file:
PORTS_1_0	include/click/element.hh	/^    static const char PORTS_1_0[];$/;"	m	class:Element
PORTS_1_0	lib/element.cc	/^const char Element::PORTS_1_0[] = "1\/0";$/;"	m	class:Element	file:
PORTS_1_1	include/click/element.hh	/^    static const char PORTS_1_1[];$/;"	m	class:Element
PORTS_1_1	lib/element.cc	/^const char Element::PORTS_1_1[] = "1";$/;"	m	class:Element	file:
PORTS_1_1X2	include/click/element.hh	/^    static const char PORTS_1_1X2[];$/;"	m	class:Element
PORTS_1_1X2	lib/element.cc	/^const char Element::PORTS_1_1X2[] = "1\/1-2";$/;"	m	class:Element	file:
PORT_ASSIGN	include/click/element.hh	512;"	d
PORT_ASSIGN	include/click/element.hh	514;"	d
PORT_ASSIGN	include/click/element.hh	516;"	d
PORT_ASSIGN	include/click/element.hh	691;"	d
PORT_EXPANDING	tools/lib/routert.cc	/^static const int PORT_EXPANDING = -2;$/;"	v	file:
PORT_NOT_EXPANDED	tools/lib/routert.cc	/^static const int PORT_NOT_EXPANDED = -1;$/;"	v	file:
PORT_OPT	apps/clicky/src/clicky.cc	33;"	d	file:
PORT_OPT	ns/nsclick.cc	63;"	d	file:
PORT_OPT	userlevel/click.cc	67;"	d	file:
PPP_ADDRESS	include/clicknet/ppp.h	22;"	d
PPP_APPLE	include/clicknet/ppp.h	30;"	d
PPP_APPLECP	include/clicknet/ppp.h	50;"	d
PPP_BACP	include/clicknet/ppp.h	63;"	d
PPP_BAP	include/clicknet/ppp.h	64;"	d
PPP_BRPDU	include/clicknet/ppp.h	34;"	d
PPP_CCP	include/clicknet/ppp.h	55;"	d
PPP_CHAP	include/clicknet/ppp.h	62;"	d
PPP_COMP	include/clicknet/ppp.h	38;"	d
PPP_CONTROL	include/clicknet/ppp.h	23;"	d
PPP_DECNET	include/clicknet/ppp.h	29;"	d
PPP_DECNETCP	include/clicknet/ppp.h	49;"	d
PPP_EAP	include/clicknet/ppp.h	67;"	d
PPP_HELLO	include/clicknet/ppp.h	40;"	d
PPP_IP	include/clicknet/ppp.h	26;"	d
PPP_IPCP	include/clicknet/ppp.h	46;"	d
PPP_IPV6	include/clicknet/ppp.h	37;"	d
PPP_IPV6CP	include/clicknet/ppp.h	54;"	d
PPP_IPX	include/clicknet/ppp.h	31;"	d
PPP_IPXCP	include/clicknet/ppp.h	51;"	d
PPP_LCP	include/clicknet/ppp.h	58;"	d
PPP_LQM	include/clicknet/ppp.h	60;"	d
PPP_LUXCOM	include/clicknet/ppp.h	41;"	d
PPP_MP	include/clicknet/ppp.h	65;"	d
PPP_MPLSCP	include/clicknet/ppp.h	56;"	d
PPP_MPLS_MCAST	include/clicknet/ppp.h	44;"	d
PPP_MPLS_UCAST	include/clicknet/ppp.h	43;"	d
PPP_NS	include/clicknet/ppp.h	28;"	d
PPP_NSCP	include/clicknet/ppp.h	48;"	d
PPP_OSI	include/clicknet/ppp.h	27;"	d
PPP_OSICP	include/clicknet/ppp.h	47;"	d
PPP_PAP	include/clicknet/ppp.h	59;"	d
PPP_SNS	include/clicknet/ppp.h	42;"	d
PPP_SPAP	include/clicknet/ppp.h	61;"	d
PPP_SPAP_OLD	include/clicknet/ppp.h	66;"	d
PPP_STII	include/clicknet/ppp.h	35;"	d
PPP_STIICP	include/clicknet/ppp.h	52;"	d
PPP_VINES	include/clicknet/ppp.h	36;"	d
PPP_VINESCP	include/clicknet/ppp.h	53;"	d
PPP_VJC	include/clicknet/ppp.h	32;"	d
PPP_VJNC	include/clicknet/ppp.h	33;"	d
PREFETCH	elements/standard/msqueue.cc	6;"	d	file:
PREF_HASHSIZE	elements/ip/directiplookup.hh	/^	PREF_HASHSIZE = 64 * 1024, \/\/ must be a power of 2!$/;"	e	enum:DirectIPLookup::__anon356
PREINITIALIZE	include/click/handlercall.hh	/^	   PREINITIALIZE = h_preinitialize, UNQUOTE_PARAM = h_unquote_param$/;"	e	enum:HandlerCall::__anon428
PREPARE_Q	elements/test/queueyanktest.cc	60;"	d	file:
PRINTF_FORMAT	elements/local/OpenFlow/lib/compiler.hh	40;"	d
PRINTGRID_HH	elements/grid/printgrid.hh	2;"	d
PRINT_OFP	elements/local/OpenFlow/include/config.h	28;"	d
PRINT_OFP	elements/local/OpenFlow/include/config.h	46;"	d
PRINT_OFP_HEADER	elements/local/OpenFlow/include/config.h	36;"	d
PRINT_OFP_HEADER	elements/local/OpenFlow/include/config.h	47;"	d
PRIO2NICE	linuxmodule/sched.cc	49;"	d	file:
PRIORITY_OPT	tools/click-install/click-install.cc	63;"	d	file:
PRITIMESTAMP	include/click/timestamp.hh	106;"	d
PRITIMESTAMP	include/click/timestamp.hh	108;"	d
PRIVATEOPT_EMERG_FLOW_PROTECTION	elements/local/OpenFlow/include/openflow/private-ext.hh	53;"	d
PRIVATEOPT_EMERG_FLOW_RESTORATION	elements/local/OpenFlow/include/openflow/private-ext.hh	54;"	d
PRIVATEOPT_PROTOCOL_STATS_REPLY	elements/local/OpenFlow/include/openflow/private-ext.hh	52;"	d
PRIVATEOPT_PROTOCOL_STATS_REQUEST	elements/local/OpenFlow/include/openflow/private-ext.hh	51;"	d
PRIVATE_MSG_H_	elements/local/OpenFlow/lib/private-msg.hh	34;"	d
PRIVATE_OPT	tools/click-install/click-install.cc	62;"	d	file:
PRIVATE_VENDOR_ID	elements/local/OpenFlow/include/openflow/private-ext.hh	50;"	d
PROBE_MAX_RETRIES	elements/wifi/probetxrate.cc	29;"	d	file:
PROCESSING_A_AH	include/click/element.hh	/^    static const char PROCESSING_A_AH[];$/;"	m	class:Element
PROCESSING_A_AH	lib/element.cc	/^const char Element::PROCESSING_A_AH[] = "a\/ah";$/;"	m	class:Element	file:
PROCESS_BITS	elements/local/OpenFlow/lib/netlink.cc	974;"	d	file:
PROCESS_MASK	elements/local/OpenFlow/lib/netlink.cc	976;"	d	file:
PROCLIKEFS_H	linuxmodule/proclikefs.h	3;"	d
PROFILE_ELEMENT	lib/routerthread.cc	47;"	d	file:
PROTOCOL_MAJOR_VERSION	apps/ClickController/ControlSocket.java	/^    public static final int PROTOCOL_MAJOR_VERSION = 1;$/;"	f	class:ControlSocket
PROTOCOL_MAJOR_VERSION	apps/csclient/csclient.hh	/^    PROTOCOL_MAJOR_VERSION = 1,$/;"	e	enum:ControlSocketClient::__anon1
PROTOCOL_MINOR_VERSION	apps/ClickController/ControlSocket.java	/^    public static final int PROTOCOL_MINOR_VERSION = 0;$/;"	f	class:ControlSocket
PROTOCOL_MINOR_VERSION	apps/csclient/csclient.hh	/^    PROTOCOL_MINOR_VERSION = 0$/;"	e	enum:ControlSocketClient::__anon1
PROTO_MASK	elements/ip/ipfieldinfo.hh	/^	PROTO_MASK = MAX_PROTO << PROTO_SHIFT,$/;"	e	enum:IPField::__anon343
PROTO_SHIFT	elements/ip/ipfieldinfo.hh	/^	PROTO_SHIFT = 20,$/;"	e	enum:IPField::__anon343
PROVISIONS	Makefile	/^PROVISIONS = i686 i386 i586 analysis int64 linux pcap wifi $(EXTRA_PROVIDES)$/;"	m
PRT_DEC	drivers/e1000-7.x/src/e1000_main.c	5953;"	d	file:
PRT_DEC	drivers/e1000-7.x/src/e1000_main.c	6029;"	d	file:
PRT_HEX	drivers/e1000-7.x/src/e1000_main.c	5952;"	d	file:
PRT_HEX	drivers/e1000-7.x/src/e1000_main.c	6028;"	d	file:
PSI_TID_CAT	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	671;"	d	file:
PSI_TID_FBD	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	674;"	d	file:
PSI_TID_PAT	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	670;"	d	file:
PSI_TID_PMT	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	672;"	d	file:
PS_PAGE_BUFFERS	drivers/e1000-7.x/src/e1000.h	165;"	d
PT_COMPRESSED_TCP	elements/ip/rfc2507c.hh	/^	 PT_COMPRESSED_TCP = 2 }; \/* CID, compressed packet *\/$/;"	e	enum:RFC2507c::__anon355
PT_COMPRESSED_TCP	elements/ip/rfc2507d.hh	/^	 PT_COMPRESSED_TCP = 2 }; \/* CID, compressed packet *\/$/;"	e	enum:RFC2507d::__anon337
PT_FULL_HEADER	elements/ip/rfc2507c.hh	/^	 PT_FULL_HEADER = 1, \/* one byte CID, then full ip\/tcp *\/$/;"	e	enum:RFC2507c::__anon355
PT_FULL_HEADER	elements/ip/rfc2507d.hh	/^	 PT_FULL_HEADER = 1, \/* one byte CID, then full ip\/tcp *\/$/;"	e	enum:RFC2507d::__anon337
PT_OTHER	elements/ip/rfc2507c.hh	/^  enum { PT_OTHER = 0, \/* ordinary packet (not compressed, no CID) *\/$/;"	e	enum:RFC2507c::__anon355
PT_OTHER	elements/ip/rfc2507d.hh	/^  enum { PT_OTHER = 0, \/* ordinary packet (not compressed, no CID) *\/$/;"	e	enum:RFC2507d::__anon337
PULL	include/click/element.hh	/^    static const char PULL[];$/;"	m	class:Element
PULL	lib/element.cc	/^const char Element::PULL[] = "l";$/;"	m	class:Element	file:
PULL_TO_PUSH	include/click/element.hh	/^    static const char PULL_TO_PUSH[];$/;"	m	class:Element
PULL_TO_PUSH	lib/element.cc	/^const char Element::PULL_TO_PUSH[] = "l\/h";$/;"	m	class:Element	file:
PUSH	include/click/element.hh	/^    static const char PUSH[];$/;"	m	class:Element
PUSH	lib/element.cc	/^const char Element::PUSH[] = "h";$/;"	m	class:Element	file:
PUSH_TO_PULL	include/click/element.hh	/^    static const char PUSH_TO_PULL[];$/;"	m	class:Element
PUSH_TO_PULL	lib/element.cc	/^const char Element::PUSH_TO_PULL[] = "h\/l";$/;"	m	class:Element	file:
PUT1	elements/analysis/ipsumdumpinfo.cc	225;"	d	file:
PUT1	elements/analysis/toipflowdumps.cc	41;"	d	file:
PUT2	elements/analysis/ipsumdumpinfo.cc	213;"	d	file:
PUT2	elements/analysis/ipsumdumpinfo.cc	220;"	d	file:
PUT4	elements/analysis/ipsumdump_anno.cc	172;"	d	file:
PUT4	elements/analysis/ipsumdump_anno.cc	175;"	d	file:
PUT4	elements/analysis/ipsumdumpinfo.cc	212;"	d	file:
PUT4	elements/analysis/ipsumdumpinfo.cc	219;"	d	file:
PUT4	elements/analysis/toipflowdumps.cc	37;"	d	file:
PUT4NET	elements/analysis/ipsumdumpinfo.cc	211;"	d	file:
PUT4NET	elements/analysis/ipsumdumpinfo.cc	218;"	d	file:
PUTU32	elements/ipsec/aes.hh	24;"	d
Packet	include/click/packet.hh	/^    inline Packet() {$/;"	f	class:Packet
Packet	include/click/packet.hh	/^class Packet { public:$/;"	c
PacketData	lib/packet.cc	/^struct PacketData {$/;"	s	namespace:__anon510	file:
PacketDesc	elements/analysis/ipsumdumpinfo.hh	/^inline PacketDesc::PacketDesc(const Element *e_, Packet* p_, StringAccum* sa_, StringAccum* bad_sa_, bool careful_trunc_, bool force_extra_length_)$/;"	f	class:IPSummaryDump::PacketDesc
PacketDesc	elements/analysis/ipsumdumpinfo.hh	/^struct PacketDesc {$/;"	s	namespace:IPSummaryDump
PacketEvent	ns/nsclick-test.cc	/^  class PacketEvent : public Simulator::SimEvent {$/;"	c	class:TestClickSimulator	file:
PacketEvent	ns/nsclick-test.cc	/^TestClickSimulator::PacketEvent::PacketEvent() {$/;"	f	class:TestClickSimulator::PacketEvent
PacketInfo	elements/wifi/wifidefrag.hh	/^    PacketInfo() {$/;"	f	struct:WifiDefrag::PacketInfo
PacketInfo	elements/wifi/wifidefrag.hh	/^    PacketInfo(EtherAddress s) {$/;"	f	struct:WifiDefrag::PacketInfo
PacketInfo	elements/wifi/wifidefrag.hh	/^  struct PacketInfo {$/;"	s	class:WifiDefrag
PacketInfoTable	elements/wifi/wifidefrag.hh	/^  typedef HashMap<EtherAddress, PacketInfo> PacketInfoTable;$/;"	t	class:WifiDefrag
PacketLogger	elements/grid/packetlogger.cc	/^PacketLogger::PacketLogger()$/;"	f	class:PacketLogger
PacketLogger	elements/grid/packetlogger.hh	/^class PacketLogger : public Element { public:$/;"	c
PacketLogger2	elements/grid/packetlogger2.cc	/^PacketLogger2::PacketLogger2()$/;"	f	class:PacketLogger2
PacketLogger2	elements/grid/packetlogger2.hh	/^class PacketLogger2 : public Element { public:$/;"	c
PacketOdesc	elements/analysis/ipsumdumpinfo.hh	/^inline PacketOdesc::PacketOdesc(const Element *e_, WritablePacket* p_, int default_ip_p_, const IPFlowID *default_ip_flowid_, int minor_version_)$/;"	f	class:IPSummaryDump::PacketOdesc
PacketOdesc	elements/analysis/ipsumdumpinfo.hh	/^struct PacketOdesc {$/;"	s	namespace:IPSummaryDump
PacketPool	lib/packet.cc	/^struct PacketPool {$/;"	s	namespace:__anon510	file:
PacketQueue	elements/local/FlowNet/common/PacketQueue.hh	/^struct PacketQueue {$/;"	s
PacketStore	elements/wifi/packetstore.cc	/^PacketStore::PacketStore() : _dirty(0), _task(this)$/;"	f	class:PacketStore
PacketStore	elements/wifi/packetstore.hh	/^class PacketStore : public Element { public:$/;"	c
PacketTest	elements/test/packettest.cc	/^PacketTest::PacketTest()$/;"	f	class:PacketTest
PacketTest	elements/test/packettest.hh	/^class PacketTest : public Element { public:$/;"	c
PacketType	include/click/packet.hh	/^    enum PacketType {$/;"	g	class:Packet
Padding	drivers/e1000-4.x/src/base_comm.h	/^    u8  Padding[2];$/;"	m	struct:_VLAN_ID_Per_Frame_Info
Paint	elements/standard/paint.cc	/^Paint::Paint()$/;"	f	class:Paint
Paint	elements/standard/paint.hh	/^class Paint : public Element { public:$/;"	c
PaintSwitch	elements/standard/paintswitch.cc	/^PaintSwitch::PaintSwitch()$/;"	f	class:PaintSwitch
PaintSwitch	elements/standard/paintswitch.hh	/^class PaintSwitch : public Element { public:$/;"	c
PaintTee	elements/standard/painttee.cc	/^PaintTee::PaintTee()$/;"	f	class:PaintTee
PaintTee	elements/standard/painttee.hh	/^class PaintTee : public Element { public:$/;"	c
Pair	apps/ClickController/Pair.java	/^    public Pair() {$/;"	m	class:Pair
Pair	apps/ClickController/Pair.java	/^    public Pair(Object a, Object b) {$/;"	m	class:Pair
Pair	apps/ClickController/Pair.java	/^public class Pair {$/;"	c
Pair	include/click/hashmap.hh	/^    typedef typename HashMap<K, T *>::Pair Pair;$/;"	t	class:_HashMap_const_iterator
Pair	include/click/hashmap.hh	/^  struct Pair {$/;"	s	class:HashMap
Pair	include/click/hashmap.hh	/^  typedef typename HashMap<K, T *>::Pair Pair;$/;"	t	class:_HashMap_iterator
Pair	include/click/hashmap.hh	/^  typedef typename HashMap<K, V>::Pair Pair;$/;"	t	class:_HashMap_const_iterator
Pair	include/click/hashmap.hh	/^  typedef typename HashMap<K, V>::Pair Pair;$/;"	t	class:_HashMap_iterator
Pair	include/click/hashmap.hh	/^  typedef typename HashMap<K, void *>::Pair Pair;$/;"	t	class:_HashMap_const_iterator
Pair	include/click/hashmap.hh	/^  typedef typename HashMap<K, void *>::Pair Pair;$/;"	t	class:_HashMap_iterator
Pair	include/click/pair.hh	/^    inline Pair()$/;"	f	struct:Pair
Pair	include/click/pair.hh	/^    inline Pair(const Pair<T, U> &p)$/;"	f	struct:Pair
Pair	include/click/pair.hh	/^    inline Pair(const Pair<V, W> &p)$/;"	f	struct:Pair
Pair	include/click/pair.hh	/^    inline Pair(const T &t, const U &u)$/;"	f	struct:Pair
Pair	include/click/pair.hh	/^struct Pair {$/;"	s
Pair	tools/lib/routert.hh	/^	Pair() { end[0] = end[1] = 0; }$/;"	f	struct:RouterT::Pair
Pair	tools/lib/routert.hh	/^	Pair(ConnectionX *from, ConnectionX *to) { end[end_from] = from; end[end_to] = to; }$/;"	f	struct:RouterT::Pair
Pair	tools/lib/routert.hh	/^    struct Pair {$/;"	s	class:RouterT
Pair	tools/lib/runparse.hh	/^	Pair(ElementClassT *a, ElementClassT *b) : first(a), second(b) { }$/;"	f	struct:RouterUnparserT::Pair
Pair	tools/lib/runparse.hh	/^    struct Pair {$/;"	s	class:RouterUnparserT
Parser	elements/ip/ipfilter.hh	/^	Parser(const Vector<String> &words, Vector<int> &tree,$/;"	f	struct:IPFilter::Parser
Parser	elements/ip/ipfilter.hh	/^    struct Parser {$/;"	s	class:IPFilter
Path	elements/wifi/path.hh	/^typedef Vector<IPAddress> Path;$/;"	t
Per_Frame_Attribute_Header	drivers/e1000-4.x/src/base_comm.h	/^} Per_Frame_Attribute_Header, *pPer_Frame_Attribute_Header;$/;"	t	typeref:struct:_Per_Frame_Attribute_Header
PerfCountAccum	elements/linuxmodule/perfcountaccum.cc	/^PerfCountAccum::PerfCountAccum()$/;"	f	class:PerfCountAccum
PerfCountAccum	elements/linuxmodule/perfcountaccum.hh	/^class PerfCountAccum : public PerfCountUser { public:$/;"	c
PerfCountInfo	elements/linuxmodule/perfcountinfo.cc	/^PerfCountInfo::PerfCountInfo()$/;"	f	class:PerfCountInfo
PerfCountInfo	elements/linuxmodule/perfcountinfo.hh	/^class PerfCountInfo : public PerfCountUser { public:$/;"	c
PerfCountUser	elements/linuxmodule/perfcountuser.cc	/^PerfCountUser::PerfCountUser()$/;"	f	class:PerfCountUser
PerfCountUser	elements/linuxmodule/perfcountuser.hh	/^class PerfCountUser : public Element { public:$/;"	c
PermString	apps/clicky/src/permstr.hh	/^    PermString()$/;"	f	class:PermString
PermString	apps/clicky/src/permstr.hh	/^    PermString(Doodad* d)		: _rep(d->data) { }$/;"	f	class:PermString
PermString	apps/clicky/src/permstr.hh	/^    explicit PermString(char c)$/;"	f	class:PermString
PermString	apps/clicky/src/permstr.hh	/^class PermString { struct Doodad; public:$/;"	c
PermString	apps/clicky/src/permstr.hh	/^inline PermString::PermString(const String &str)$/;"	f	class:PermString
PermString	apps/clicky/src/permstr.hh	/^inline PermString::PermString(const char* begin, const char* end)$/;"	f	class:PermString
PermString	apps/clicky/src/permstr.hh	/^inline PermString::PermString(const char* s)$/;"	f	class:PermString
PermString	apps/clicky/src/permstr.hh	/^inline PermString::PermString(const char* s, int len)$/;"	f	class:PermString
PermissionDeniedException	apps/ClickController/ClickException.java	/^	PermissionDeniedException() {$/;"	m	class:ClickException.PermissionDeniedException
PermissionDeniedException	apps/ClickController/ClickException.java	/^	PermissionDeniedException(String hid) {$/;"	m	class:ClickException.PermissionDeniedException
PermissionDeniedException	apps/ClickController/ClickException.java	/^    static public class PermissionDeniedException extends HandlerException {$/;"	c	class:ClickException
PingPong	elements/grid/pingpong.cc	/^PingPong::PingPong()$/;"	f	class:PingPong
PingPong	elements/grid/pingpong.hh	/^class PingPong : public Element {$/;"	c
Pix	ns/CUT_BinHeap.h	/^  typedef void *Pix;$/;"	t	class:CUT_BinHeap
Pkt	elements/analysis/toipflowdumps.hh	/^    struct Pkt {$/;"	s	class:ToIPFlowDumps
PokeHandlers	elements/standard/pokehandlers.cc	/^PokeHandlers::PokeHandlers()$/;"	f	class:PokeHandlers
PokeHandlers	elements/standard/pokehandlers.hh	/^class PokeHandlers : public Element { public:$/;"	c
PollDevice	elements/linuxmodule/polldevice.cc	/^PollDevice::PollDevice()$/;"	f	class:PollDevice
PollDevice	elements/linuxmodule/polldevice.hh	/^class PollDevice : public AnyTaskDevice { public:$/;"	c
PollDevice_read_calls	elements/linuxmodule/polldevice.cc	/^PollDevice_read_calls(Element *f, void *)$/;"	f	file:
PollDevice_write_stats	elements/linuxmodule/polldevice.cc	/^PollDevice_write_stats(const String &, Element *e, void *, ErrorHandler *)$/;"	f	file:
Port	include/click/element.hh	/^    class Port { public:$/;"	c	class:Element
Port	include/click/element.hh	/^Element::Port::Port()$/;"	f	class:Element::Port
Port	include/click/lexer.hh	/^    typedef Router::Port Port;$/;"	t	class:Lexer
Port	include/click/router.hh	/^	Port() {$/;"	f	struct:Router::Port
Port	include/click/router.hh	/^	Port(int i, int p)$/;"	f	struct:Router::Port
Port	include/click/router.hh	/^    struct Port {$/;"	s	class:Router
PortInfo	elements/etherswitch/spantree.hh	/^    PortInfo() { state = BLOCK; needs_tca = false; }$/;"	f	struct:EtherSpanTree::PortInfo
PortInfo	elements/etherswitch/spantree.hh	/^  struct PortInfo {$/;"	s	class:EtherSpanTree
PortInfo	elements/standard/portinfo.cc	/^PortInfo::PortInfo()$/;"	f	class:PortInfo
PortInfo	include/click/standard/portinfo.hh	/^class PortInfo : public Element { public:$/;"	c
PortState	elements/etherswitch/spantree.hh	/^  enum PortState {BLOCK, LISTEN, LEARN, FORWARD};$/;"	g	class:EtherSpanTree
PortT	tools/lib/elementt.hh	/^    PortT()				: element(0), port(-1) { }$/;"	f	struct:PortT
PortT	tools/lib/elementt.hh	/^    PortT(ElementT *e, int p)		: element(e), port(p) { }$/;"	f	struct:PortT
PortT	tools/lib/elementt.hh	/^struct PortT {$/;"	s
PortT_sorter	tools/lib/elementt.cc	/^PortT_sorter(const void *av, const void *bv)$/;"	f	file:
PoundRadixIPLookup	elements/ip/poundradixiplookup.cc	/^PoundRadixIPLookup::PoundRadixIPLookup()$/;"	f	class:PoundRadixIPLookup
PoundRadixIPLookup	elements/ip/poundradixiplookup.hh	/^class PoundRadixIPLookup : public Element { public:$/;"	c
PrefixErrorHandler	include/click/error.hh	/^class PrefixErrorHandler : public ErrorVeneer { public:$/;"	c
PrefixErrorHandler	lib/error.cc	/^PrefixErrorHandler::PrefixErrorHandler(ErrorHandler *errh,$/;"	f	class:PrefixErrorHandler
PrettyLexerTInfo	tools/click-pretty/click-pretty.cc	/^    PrettyLexerTInfo(const String &config)	: _config(config) { }$/;"	f	class:PrettyLexerTInfo
PrettyLexerTInfo	tools/click-pretty/click-pretty.cc	/^class PrettyLexerTInfo : public LexerTInfo { public:$/;"	c	file:
PrettyRouter	tools/click-pretty/click-pretty.cc	/^    PrettyRouter(const char *infile, bool file_is_expr, const char *outfile,$/;"	f	struct:PrettyRouter
PrettyRouter	tools/click-pretty/click-pretty.cc	/^struct PrettyRouter {$/;"	s	file:
Primitive	elements/ip/ipfilter.hh	/^	Primitive()			{ clear(); }$/;"	f	struct:IPFilter::Primitive
Primitive	elements/ip/ipfilter.hh	/^    struct Primitive {$/;"	s	class:IPFilter
PrimitiveData	elements/ip/ipfilter.hh	/^    union PrimitiveData {$/;"	u	class:IPFilter
Print	elements/standard/print.cc	/^Print::Print()$/;"	f	class:Print
Print	elements/standard/print.hh	/^class Print : public Element { public:$/;"	c
PrintGrid	elements/grid/printgrid.cc	/^PrintGrid::PrintGrid()$/;"	f	class:PrintGrid
PrintGrid	elements/grid/printgrid.hh	/^class PrintGrid : public Element {$/;"	c
PrintOld	elements/userlevel/printold.cc	/^PrintOld::PrintOld()$/;"	f	class:PrintOld
PrintOld	elements/userlevel/printold.hh	/^class PrintOld : public Element { public:$/;"	c
PrintTXFeedback	elements/wifi/printtxfeedback.cc	/^PrintTXFeedback::PrintTXFeedback()$/;"	f	class:PrintTXFeedback
PrintTXFeedback	elements/wifi/printtxfeedback.hh	/^class PrintTXFeedback : public Element {$/;"	c
PrintWifi	elements/wifi/printwifi.cc	/^PrintWifi::PrintWifi()$/;"	f	class:PrintWifi
PrintWifi	elements/wifi/printwifi.hh	/^class PrintWifi : public Element {$/;"	c
PrioSched	elements/standard/priosched.cc	/^PrioSched::PrioSched()$/;"	f	class:PrioSched
PrioSched	elements/standard/priosched.hh	/^class PrioSched : public Element { public:$/;"	c
Prism2Decap	elements/wifi/prism2decap.cc	/^Prism2Decap::Prism2Decap()$/;"	f	class:Prism2Decap
Prism2Decap	elements/wifi/prism2decap.hh	/^class Prism2Decap : public Element { public:$/;"	c
Prism2Decap_read_param	elements/wifi/prism2decap.cc	/^Prism2Decap_read_param(Element *e, void *thunk)$/;"	f	file:
Prism2Decap_write_param	elements/wifi/prism2decap.cc	/^Prism2Decap_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
Prism2Encap	elements/wifi/prism2encap.cc	/^Prism2Encap::Prism2Encap()$/;"	f	class:Prism2Encap
Prism2Encap	elements/wifi/prism2encap.hh	/^class Prism2Encap : public Element { public:$/;"	c
Prism2Encap_read_param	elements/wifi/prism2encap.cc	/^Prism2Encap_read_param(Element *e, void *thunk)$/;"	f	file:
Prism2Encap_write_param	elements/wifi/prism2encap.cc	/^Prism2Encap_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
Private	elements/local/OpenFlow/lib/ofpbuf.hh	/^    void *Private;              \/* Private pointer for use by owner. *\/$/;"	m	struct:ofpbuf
Private	elements/local/OpenFlow/lib/table.hh	/^    unsigned long Private[4];$/;"	m	struct:sw_table_position
ProbeFinished	elements/grid/gridroutecb.hh	/^    ProbeFinished      = 7,$/;"	e	enum:GridRouteActionCallback::Action
ProbeMap	elements/grid/linkstat.hh	/^  typedef HashMap<EtherAddress, probe_list_t> ProbeMap;$/;"	t	class:LinkStat
ProbeRequester	elements/wifi/station/proberequester.cc	/^ProbeRequester::ProbeRequester()$/;"	f	class:ProbeRequester
ProbeRequester	elements/wifi/station/proberequester.hh	/^class ProbeRequester : public Element { public:$/;"	c
ProbeRequester_read_param	elements/wifi/station/proberequester.cc	/^ProbeRequester_read_param(Element *e, void *thunk)$/;"	f	file:
ProbeRequester_write_param	elements/wifi/station/proberequester.cc	/^ProbeRequester_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
ProbeResponder	elements/wifi/ap/proberesponder.cc	/^ProbeResponder::ProbeResponder()$/;"	f	class:ProbeResponder
ProbeResponder	elements/wifi/ap/proberesponder.hh	/^class ProbeResponder : public Element { public:$/;"	c
ProbeResponder_read_param	elements/wifi/ap/proberesponder.cc	/^ProbeResponder_read_param(Element *e, void *thunk)$/;"	f	file:
ProbeResponder_write_param	elements/wifi/ap/proberesponder.cc	/^ProbeResponder_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
ProbeTXRate	elements/wifi/probetxrate.cc	/^ProbeTXRate::ProbeTXRate()$/;"	f	class:ProbeTXRate
ProbeTXRate	elements/wifi/probetxrate.hh	/^class ProbeTXRate : public Element { public:$/;"	c
ProbeTXRate_read_param	elements/wifi/probetxrate.cc	/^ProbeTXRate_read_param(Element *e, void *thunk)$/;"	f	file:
ProbeTXRate_write_param	elements/wifi/probetxrate.cc	/^ProbeTXRate_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
Processing	include/click/element.hh	/^    enum Processing { VAGNOSTIC, VPUSH, VPULL };$/;"	g	class:Element
ProcessingCode	tools/lib/processingt.hh	/^    enum ProcessingCode {$/;"	g	class:ProcessingT
ProcessingT	tools/lib/processingt.cc	/^ProcessingT::ProcessingT(RouterT *router, ElementMap *emap, ErrorHandler *errh)$/;"	f	class:ProcessingT
ProcessingT	tools/lib/processingt.cc	/^ProcessingT::ProcessingT(bool resolve_agnostics, RouterT *router,$/;"	f	class:ProcessingT
ProcessingT	tools/lib/processingt.cc	/^ProcessingT::ProcessingT(const ProcessingT &processing, ElementT *element,$/;"	f	class:ProcessingT
ProcessingT	tools/lib/processingt.hh	/^class ProcessingT { public:$/;"	c
Program	elements/standard/classification.hh	/^    Program(unsigned align_offset = 0)$/;"	f	class:Classification::Wordwise::Program
Program	elements/standard/classification.hh	/^class Program { public:$/;"	c	namespace:Classification::Wordwise
ProgressBar	elements/userlevel/progressbar.cc	/^ProgressBar::ProgressBar()$/;"	f	class:ProgressBar
ProgressBar	elements/userlevel/progressbar.hh	/^class ProgressBar : public Element { public:$/;"	c
ProtocolTranslator46	elements/ip6/protocoltranslator46.cc	/^ProtocolTranslator46::ProtocolTranslator46()$/;"	f	class:ProtocolTranslator46
ProtocolTranslator46	elements/ip6/protocoltranslator46.hh	/^class ProtocolTranslator46 : public Element {$/;"	c
ProtocolTranslator64	elements/ip6/protocoltranslator64.cc	/^ProtocolTranslator64::ProtocolTranslator64()$/;"	f	class:ProtocolTranslator64
ProtocolTranslator64	elements/ip6/protocoltranslator64.hh	/^class ProtocolTranslator64 : public Element {$/;"	c
ProxyMap	elements/grid/gridproxy.hh	/^  typedef HashMap<IPAddress, DstInfo> ProxyMap;$/;"	t	class:GridProxy
PullNullElement	elements/standard/nullelement.cc	/^PullNullElement::PullNullElement()$/;"	f	class:PullNullElement
PullNullElement	elements/standard/nullelement.hh	/^class PullNullElement : public Element { public:$/;"	c
PullSwitch	elements/standard/pullswitch.cc	/^PullSwitch::PullSwitch()$/;"	f	class:PullSwitch
PullSwitch	elements/standard/pullswitch.hh	/^class PullSwitch : public SimplePullSwitch { public:$/;"	c
PullTee	elements/standard/tee.cc	/^PullTee::PullTee()$/;"	f	class:PullTee
PullTee	elements/standard/tee.hh	/^class PullTee : public Element {$/;"	c
PushAnno	elements/wifi/pushanno.cc	/^PushAnno::PushAnno()$/;"	f	class:PushAnno
PushAnno	elements/wifi/pushanno.hh	/^class PushAnno : public Element { public:$/;"	c
PushNullElement	elements/standard/nullelement.cc	/^PushNullElement::PushNullElement()$/;"	f	class:PushNullElement
PushNullElement	elements/standard/nullelement.hh	/^class PushNullElement : public Element { public:$/;"	c
QSIZE	elements/bsdmodule/fromdevice.hh	/^    static const int QSIZE = 511;$/;"	m	class:FromDevice
QSIZE	elements/bsdmodule/fromhost.hh	/^    static const int QSIZE = 511;$/;"	m	class:FromHost
QSIZE	elements/linuxmodule/fromdevice.hh	/^    enum { QSIZE = 511 };$/;"	e	enum:FromDevice::__anon304
QTAG_SIZE	drivers/e1000-4.x/src/ans.h	79;"	d
QTAG_TYPE	drivers/e1000-4.x/src/ans.h	75;"	d
QUEUE_H	elements/local/OpenFlow/lib/queue.hh	35;"	d
QUEUE_SCALE	elements/aqm/pi.hh	/^    enum { QUEUE_SCALE = 10 };$/;"	e	enum:PI::__anon169
QUEUE_SCALE	elements/aqm/red.hh	/^    enum { QUEUE_SCALE = 10 };$/;"	e	enum:RED::__anon168
QUIET_OPT	tools/click-check/click-check.cc	47;"	d	file:
QUIET_OPT	tools/click-fastclassifier/click-fastclassifier.cc	60;"	d	file:
QUIT_OPT	ns/nsclick.cc	58;"	d	file:
QUIT_OPT	userlevel/click.cc	63;"	d	file:
QVec	elements/grid/qvec.hh	/^  QVec() { }$/;"	f	class:QVec
QVec	elements/grid/qvec.hh	/^  explicit QVec(int capacity) : Base(capacity) { }$/;"	f	class:QVec
QVec	elements/grid/qvec.hh	/^class QVec : public Vector<T> {$/;"	c
Q_	apps/clicky/src/support.h	18;"	d
Q_	apps/clicky/src/support.h	31;"	d
Qtag	drivers/e1000-4.x/src/ans.h	/^    x8021Q_tag_t        Qtag;$/;"	m	struct:_eth_vlan_header_t
QueueThreadTest1	elements/test/queuethreadtest.cc	/^QueueThreadTest1::QueueThreadTest1()$/;"	f	class:QueueThreadTest1
QueueThreadTest1	elements/test/queuethreadtest.hh	/^class QueueThreadTest1 : public Element { public:$/;"	c
QueueThreadTest2	elements/test/queuethreadtest.cc	/^QueueThreadTest2::QueueThreadTest2()$/;"	f	class:QueueThreadTest2
QueueThreadTest2	elements/test/queuethreadtest.hh	/^class QueueThreadTest2 : public Element { public:$/;"	c
QueueYankTest	elements/test/queueyanktest.cc	/^QueueYankTest::QueueYankTest()$/;"	f	class:QueueYankTest
QueueYankTest	elements/test/queueyanktest.hh	/^class QueueYankTest : public Element { public:$/;"	c
QueuedForLocQuery	elements/grid/gridroutecb.hh	/^    QueuedForLocQuery  = 4,$/;"	e	enum:GridRouteActionCallback::Action
QuickNoteQueue	elements/standard/quicknotequeue.cc	/^QuickNoteQueue::QuickNoteQueue()$/;"	f	class:QuickNoteQueue
QuickNoteQueue	elements/standard/quicknotequeue.hh	/^class QuickNoteQueue : public FullNoteQueue { public:$/;"	c
QuitWatcher	elements/standard/quitwatcher.cc	/^QuitWatcher::QuitWatcher()$/;"	f	class:QuitWatcher
QuitWatcher	elements/standard/quitwatcher.hh	/^class QuitWatcher : public Element { public:$/;"	c
RADIOSIM_HH	elements/grid/radiosim.hh	2;"	d
RANDOM_H	elements/local/OpenFlow/lib/random.hh	35;"	d
RANGES_MAX	elements/ip/rangeiplookup.hh	/^    enum { RANGES_MAX = 256 * 1024 };$/;"	e	enum:RangeIPLookup::__anon333
RANGE_MASK	elements/ip/rangeiplookup.hh	/^    enum { RANGE_MASK = 0xffffffff >> KICKSTART_BITS };$/;"	e	enum:RangeIPLookup::__anon334
RANGE_SHIFT	elements/ip/rangeiplookup.hh	/^    enum { RANGE_SHIFT = 32 - KICKSTART_BITS };$/;"	e	enum:RangeIPLookup::__anon335
RANLIB	etc/pkg-bsdmodule.mk	/^RANLIB ?= $(CLICKRANLIB)  # ?$/;"	m
RANLIB	etc/pkg-linuxmodule.mk	/^RANLIB ?= $(CLICKRANLIB)$/;"	m
RANLIB	etc/pkg-userlevel.mk	/^RANLIB ?= $(CLICKRANLIB)$/;"	m
RANLIB	ns/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	tools/lib/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	userlevel/Makefile	/^RANLIB = ranlib$/;"	m
RAW	include/click/handler.hh	/^	RAW = h_raw,$/;"	e	enum:Handler::DeprecatedFlags
RCONN_H	elements/local/OpenFlow/lib/rconn.hh	35;"	d
RCONN_HH	elements/local/OpenFlow/RConn.hh	2;"	d
RCONN_REPORT_TIMER_CLOCK	elements/local/OpenFlow/RConn.hh	56;"	d
RCONN_SEND_TIMER_CLOCK	elements/local/OpenFlow/RConn.hh	55;"	d
RCONN_SYNCHRONIZED_QUEUE_HH	elements/local/OpenFlow/SynchronizedPacketQueue.hh	3;"	d
RConn	elements/local/OpenFlow/RConn.cc	/^RConn::RConn() : send_timer(this), report_timer(this)$/;"	f	class:RConn
RConn	elements/local/OpenFlow/RConn.hh	/^class RConn : public Element { public:$/;"	c
RConn_report_stat_counter	elements/local/OpenFlow/RConn.cc	/^static int RConn_report_stat_counter = 0;$/;"	v	file:
RD_HOFF	lib/ino.cc	328;"	d	file:
RD_NOFF	lib/ino.cc	330;"	d	file:
RD_UOFF	lib/ino.cc	329;"	d	file:
RD_XOFF	lib/ino.cc	331;"	d	file:
READ_CLOSED	elements/userlevel/controlsocket.hh	/^    enum { READ_CLOSED = 1, WRITE_CLOSED = 2, ANY_ERR = -1 };$/;"	e	enum:ControlSocket::__anon205
READ_MARKER	elements/standard/pokehandlers.cc	/^static const char READ_MARKER[] = "r";$/;"	v	file:
READ_PARAM	include/click/handler.hh	/^	READ_PARAM = h_read_param,$/;"	e	enum:Handler::DeprecatedFlags
READ_PRIVATE	include/click/handler.hh	/^	READ_PRIVATE = h_read_private,$/;"	e	enum:Handler::DeprecatedFlags
REAP_INTERVAL	elements/ip/ipreassembler.hh	/^	   REAP_INTERVAL = 10, \/\/ seconds$/;"	e	enum:IPReassembler::__anon321
REAP_TIMEOUT	elements/ip/ipreassembler.hh	/^    enum { REAP_TIMEOUT = 30, \/\/ seconds$/;"	e	enum:IPReassembler::__anon321
REBOOT_SEQ	elements/grid/gridgenericlogger.hh	/^    REBOOT_SEQ        = 0xe6,$/;"	e	enum:GridGenericLogger::reason_t
REBOOT_SEQ_SENDER	elements/grid/gridgenericlogger.hh	/^    REBOOT_SEQ_SENDER = 0xe7$/;"	e	enum:GridGenericLogger::reason_t
RECEIVE_BUFFER_ALIGN_SIZE	drivers/e1000-4.x/src/e1000_hw.h	1461;"	d
RECEIVE_BUFFER_ALIGN_SIZE	drivers/e1000-5.x/src/e1000_hw.h	1679;"	d
RECEIVE_BUFFER_ALIGN_SIZE	drivers/e1000-7.x/src/e1000_hw.h	2492;"	d
RECV_AD	elements/grid/gridlogger.hh	/^    RECV_AD,$/;"	e	enum:GridLogger::state_t
RECV_ADD_ROUTE_CODE	elements/grid/gridlogger.hh	/^  static const unsigned char RECV_ADD_ROUTE_CODE        = 0x07;$/;"	m	class:GridLogger
RECV_ADD_ROUTE_CODE_EXTRA	elements/grid/gridlogger.hh	/^  static const unsigned char RECV_ADD_ROUTE_CODE_EXTRA  = 0x0F;$/;"	m	class:GridLogger
RECV_EXPIRE_ROUTE_CODE	elements/grid/gridlogger.hh	/^  static const unsigned char RECV_EXPIRE_ROUTE_CODE     = 0x09;$/;"	m	class:GridLogger
RECV_TRIGGER_ROUTE_CODE	elements/grid/gridlogger.hh	/^  static const unsigned char RECV_TRIGGER_ROUTE_CODE    = 0x08;$/;"	m	class:GridLogger
RED	elements/aqm/red.cc	/^RED::RED()$/;"	f	class:RED
RED	elements/aqm/red.hh	/^class RED : public Element { public:$/;"	c
RED_DEBUG	elements/aqm/red.cc	31;"	d	file:
REG4_SPEED_MASK	drivers/e1000-4.x/src/e1000_hw.h	1774;"	d
REG4_SPEED_MASK	drivers/e1000-5.x/src/e1000_hw.h	2150;"	d
REG4_SPEED_MASK	drivers/e1000-7.x/src/e1000_hw.h	3401;"	d
REG9_SPEED_MASK	drivers/e1000-4.x/src/e1000_hw.h	1775;"	d
REG9_SPEED_MASK	drivers/e1000-5.x/src/e1000_hw.h	2151;"	d
REG9_SPEED_MASK	drivers/e1000-7.x/src/e1000_hw.h	3402;"	d
REGION_HH	elements/grid/region.hh	2;"	d
REGISTER_UINT16_T	elements/local/FlowNet/common/FlowCommon.hh	29;"	d
REG_PATTERN_TEST	drivers/e1000-4.x/src/e1000_idiag.c	41;"	d	file:
REG_PATTERN_TEST	drivers/e1000-5.x/src/e1000_ethtool.c	659;"	d	file:
REG_PATTERN_TEST	drivers/e1000-7.x/src/e1000_ethtool.c	764;"	d	file:
REG_SET_AND_CHECK	drivers/e1000-4.x/src/e1000_idiag.c	60;"	d	file:
REG_SET_AND_CHECK	drivers/e1000-5.x/src/e1000_ethtool.c	675;"	d	file:
REG_SET_AND_CHECK	drivers/e1000-7.x/src/e1000_ethtool.c	783;"	d	file:
REPLY	elements/local/OpenFlow/lib/ofp-print.cc	/^    REPLY$/;"	e	enum:stats_direction	file:
REQUEST	elements/local/OpenFlow/lib/ofp-print.cc	/^    REQUEST,$/;"	e	enum:stats_direction	file:
REQ_NEW_CONTROL	elements/userlevel/umlswitch.hh	/^enum request_type { REQ_NEW_CONTROL };$/;"	e	enum:request_type
REQ_RX_DESCRIPTOR_MULTIPLE	drivers/e1000-4.x/src/e1000_hw.h	1372;"	d
REQ_RX_DESCRIPTOR_MULTIPLE	drivers/e1000-5.x/src/e1000_hw.h	1593;"	d
REQ_RX_DESCRIPTOR_MULTIPLE	drivers/e1000-7.x/src/e1000_hw.h	2380;"	d
REQ_TX_DESCRIPTOR_MULTIPLE	drivers/e1000-4.x/src/e1000_hw.h	1371;"	d
REQ_TX_DESCRIPTOR_MULTIPLE	drivers/e1000-5.x/src/e1000_hw.h	1592;"	d
REQ_TX_DESCRIPTOR_MULTIPLE	drivers/e1000-7.x/src/e1000_hw.h	2379;"	d
RESERVE_GROW	include/click/vector.hh	/^    enum { RESERVE_GROW = (size_type) -1 };$/;"	e	enum:Vector::__anon472
RESERVE_GROW	include/click/vector.hh	/^    enum { RESERVE_GROW = (size_type) -1 };$/;"	e	enum:Vector::__anon473
RESERVE_GROW	include/click/vector.hh	/^    enum { RESERVE_GROW = Base::RESERVE_GROW };$/;"	e	enum:Vector::__anon474
REVERSE_OPT	tools/click-devirtualize/click-devirtualize.cc	55;"	d	file:
REVERSE_OPT	tools/click-fastclassifier/click-fastclassifier.cc	57;"	d	file:
REVERSE_OPT	tools/click-xform/click-xform.cc	414;"	d	file:
REV_RATE_ANNO	include/click/packet_anno.hh	67;"	d
REV_RATE_ANNO_OFFSET	include/click/packet_anno.hh	65;"	d
REV_RATE_ANNO_SIZE	include/click/packet_anno.hh	66;"	d
RFC1483_SNAP_IP_EXPECTED	include/clicknet/rfc1483.h	17;"	d
RFC1483_SNAP_IP_EXPECTED_LEN	include/clicknet/rfc1483.h	18;"	d
RFC2507c	elements/ip/rfc2507c.cc	/^RFC2507c::RFC2507c()$/;"	f	class:RFC2507c
RFC2507c	elements/ip/rfc2507c.hh	/^class RFC2507c : public Element {$/;"	c
RFC2507d	elements/ip/rfc2507d.cc	/^RFC2507d::RFC2507d()$/;"	f	class:RFC2507d
RFC2507d	elements/ip/rfc2507d.hh	/^class RFC2507d : public Element {$/;"	c
RHC	drivers/e1000-4.x/src/Makefile	/^RHC := $(KSRC)\/include\/linux\/rhconfig.h$/;"	m
RHC	drivers/e1000-5.x/src/Makefile	/^RHC := $(KSRC)\/include\/linux\/rhconfig.h$/;"	m
RHC	drivers/e1000-7.x/src/Makefile	/^RHC := $(KSRC)\/include\/linux\/rhconfig.h$/;"	m
RIPSend	elements/ip/ripsend.cc	/^RIPSend::RIPSend()$/;"	f	class:RIPSend
RIPSend	elements/ip/ripsend.hh	/^class RIPSend : public Element {$/;"	c
RIter	elements/wifi/availablerates.hh	/^  typedef RTable::const_iterator RIter;$/;"	t	class:AvailableRates
ROT	include/click/ip6flowid.hh	102;"	d
ROT	include/click/ip6flowid.hh	79;"	d
ROT	include/click/ipflowid.hh	153;"	d
ROT	include/click/ipflowid.hh	167;"	d
ROTATE	elements/ipsec/sha1_impl.cc	159;"	d	file:
ROTATE	elements/ipsec/sha1_impl.cc	161;"	d	file:
ROTATE	elements/ipsec/sha1_impl.cc	163;"	d	file:
ROTATE_LEFT	lib/md5.cc	203;"	d	file:
ROUND_DOWN	elements/local/OpenFlow/lib/util.hh	73;"	d
ROUND_UP	elements/local/OpenFlow/lib/util.hh	72;"	d
ROUTER_DEAD	include/click/router.hh	/^	ROUTER_LIVE, ROUTER_DEAD		\/\/ order is important$/;"	e	enum:Router::__anon440
ROUTER_LIVE	include/click/router.hh	/^	ROUTER_LIVE, ROUTER_DEAD		\/\/ order is important$/;"	e	enum:Router::__anon440
ROUTER_NEW	include/click/router.hh	/^	ROUTER_NEW, ROUTER_PRECONFIGURE, ROUTER_PREINITIALIZE,$/;"	e	enum:Router::__anon440
ROUTER_OPT	ns/nsclick.cc	57;"	d	file:
ROUTER_OPT	tools/click-align/click-align.cc	299;"	d	file:
ROUTER_OPT	tools/click-check/click-check.cc	43;"	d	file:
ROUTER_OPT	tools/click-combine/click-combine.cc	42;"	d	file:
ROUTER_OPT	tools/click-combine/click-uncombine.cc	42;"	d	file:
ROUTER_OPT	tools/click-devirtualize/click-devirtualize.cc	45;"	d	file:
ROUTER_OPT	tools/click-fastclassifier/click-fastclassifier.cc	50;"	d	file:
ROUTER_OPT	tools/click-flatten/click-flatten.cc	36;"	d	file:
ROUTER_OPT	tools/click-install/click-install.cc	55;"	d	file:
ROUTER_OPT	tools/click-mkmindriver/click-mkmindriver.cc	40;"	d	file:
ROUTER_OPT	tools/click-pretty/click-pretty.cc	40;"	d	file:
ROUTER_OPT	tools/click-undead/click-undead.cc	46;"	d	file:
ROUTER_OPT	tools/click-xform/click-xform.cc	410;"	d	file:
ROUTER_OPT	tools/click2xml/click2xml.cc	37;"	d	file:
ROUTER_OPT	tools/click2xml/xml2click.cc	39;"	d	file:
ROUTER_OPT	userlevel/click.cc	61;"	d	file:
ROUTER_PRECONFIGURE	include/click/router.hh	/^	ROUTER_NEW, ROUTER_PRECONFIGURE, ROUTER_PREINITIALIZE,$/;"	e	enum:Router::__anon440
ROUTER_PREINITIALIZE	include/click/router.hh	/^	ROUTER_NEW, ROUTER_PRECONFIGURE, ROUTER_PREINITIALIZE,$/;"	e	enum:Router::__anon440
ROUTE_DUMP_CODE	elements/grid/gridlogger.hh	/^  static const unsigned char ROUTE_DUMP_CODE            = 0x0A;$/;"	m	class:GridLogger
ROW_BITS	elements/analysis/aggregatefirst.hh	/^    enum { ROW_BITS = 10, ROW_SHIFT = 0, NROW = 1<<ROW_BITS, ROW_MASK = NROW - 1,$/;"	e	enum:AggregateFirst::__anon292
ROW_BITS	elements/analysis/aggregatelast.hh	/^    enum { ROW_BITS = 10, ROW_SHIFT = 0, NROW = 1<<ROW_BITS, ROW_MASK = NROW - 1,$/;"	e	enum:AggregateLast::__anon274
ROW_MASK	elements/analysis/aggregatefirst.hh	/^    enum { ROW_BITS = 10, ROW_SHIFT = 0, NROW = 1<<ROW_BITS, ROW_MASK = NROW - 1,$/;"	e	enum:AggregateFirst::__anon292
ROW_MASK	elements/analysis/aggregatelast.hh	/^    enum { ROW_BITS = 10, ROW_SHIFT = 0, NROW = 1<<ROW_BITS, ROW_MASK = NROW - 1,$/;"	e	enum:AggregateLast::__anon274
ROW_SHIFT	elements/analysis/aggregatefirst.hh	/^    enum { ROW_BITS = 10, ROW_SHIFT = 0, NROW = 1<<ROW_BITS, ROW_MASK = NROW - 1,$/;"	e	enum:AggregateFirst::__anon292
ROW_SHIFT	elements/analysis/aggregatelast.hh	/^    enum { ROW_BITS = 10, ROW_SHIFT = 0, NROW = 1<<ROW_BITS, ROW_MASK = NROW - 1,$/;"	e	enum:AggregateLast::__anon274
RRSched	elements/standard/rrsched.cc	/^RRSched::RRSched()$/;"	f	class:RRSched
RRSched	elements/standard/rrsched.hh	/^class RRSched : public Element { public:$/;"	c
RTCYCLES_HH	elements/linuxmodule/rtcycles.hh	2;"	d
RTCycles	elements/linuxmodule/rtcycles.cc	/^RTCycles::RTCycles()$/;"	f	class:RTCycles
RTCycles	elements/linuxmodule/rtcycles.hh	/^class RTCycles : public Element { public:$/;"	c
RTCycles_read_cycles	elements/linuxmodule/rtcycles.cc	/^RTCycles_read_cycles(Element *e, void *thunk)$/;"	f	file:
RTCycles_reset_counts	elements/linuxmodule/rtcycles.cc	/^RTCycles_reset_counts(const String &, Element *e, void *, ErrorHandler *)$/;"	f	file:
RTEntry	elements/grid/dsdvroutetable.hh	/^    RTEntry() :$/;"	f	class:DSDVRouteTable::RTEntry
RTEntry	elements/grid/dsdvroutetable.hh	/^    RTEntry(IPAddress ip, EtherAddress eth, grid_hdr *gh, grid_hello *hlo,$/;"	f	class:DSDVRouteTable::RTEntry
RTEntry	elements/grid/dsdvroutetable.hh	/^    RTEntry(IPAddress ip, EtherAddress eth, grid_nbr_entry *nbr,$/;"	f	class:DSDVRouteTable::RTEntry
RTEntry	elements/grid/dsdvroutetable.hh	/^  class RTEntry : public RouteEntry {$/;"	c	class:DSDVRouteTable
RTEntry	elements/grid/gridroutetable.hh	/^    RTEntry() :$/;"	f	class:GridRouteTable::RTEntry
RTEntry	elements/grid/gridroutetable.hh	/^    RTEntry(IPAddress _dest_ip, IPAddress _next_hop_ip, EtherAddress _next_hop_eth,$/;"	f	class:GridRouteTable::RTEntry
RTEntry	elements/grid/gridroutetable.hh	/^    RTEntry(IPAddress ip, EtherAddress eth, grid_hdr *gh, grid_hello *hlo,$/;"	f	class:GridRouteTable::RTEntry
RTEntry	elements/grid/gridroutetable.hh	/^    RTEntry(IPAddress ip, EtherAddress eth, grid_nbr_entry *nbr,$/;"	f	class:GridRouteTable::RTEntry
RTEntry	elements/grid/gridroutetable.hh	/^  class RTEntry {$/;"	c	class:GridRouteTable
RTIter	elements/grid/dsdvroutetable.hh	/^  typedef RTable::const_iterator RTIter;$/;"	t	class:DSDVRouteTable
RTIter	elements/grid/gridroutetable.hh	/^  typedef RTable::iterator RTIter;$/;"	t	class:GridRouteTable
RTLD_GLOBAL	lib/userutils.cc	833;"	d	file:
RT_SIZE_MAX	elements/ip/directiplookup.hh	/^	RT_SIZE_MAX = 256 * 1024, \/\/ accomodate a full BGP view and more$/;"	e	enum:DirectIPLookup::__anon356
RTable	elements/grid/dsdvroutetable.hh	/^  typedef HashMap<IPAddress, RTEntry> RTable;$/;"	t	class:DSDVRouteTable
RTable	elements/grid/gridroutetable.hh	/^  typedef HashMap<IPAddress, RTEntry> RTable;$/;"	t	class:GridRouteTable
RTable	elements/wifi/availablerates.hh	/^  typedef HashMap<EtherAddress, DstInfo> RTable;$/;"	t	class:AvailableRates
RUNNING_ACTIVE	include/click/router.hh	/^	RUNNING_BACKGROUND = 1, RUNNING_ACTIVE = 2$/;"	e	enum:Router::__anon441
RUNNING_BACKGROUND	include/click/router.hh	/^	RUNNING_BACKGROUND = 1, RUNNING_ACTIVE = 2$/;"	e	enum:Router::__anon441
RUNNING_DEAD	include/click/router.hh	/^	RUNNING_DEAD = -2, RUNNING_INACTIVE = -1, RUNNING_PREPARING = 0,$/;"	e	enum:Router::__anon441
RUNNING_INACTIVE	include/click/router.hh	/^	RUNNING_DEAD = -2, RUNNING_INACTIVE = -1, RUNNING_PREPARING = 0,$/;"	e	enum:Router::__anon441
RUNNING_PREPARING	include/click/router.hh	/^	RUNNING_DEAD = -2, RUNNING_INACTIVE = -1, RUNNING_PREPARING = 0,$/;"	e	enum:Router::__anon441
RUN_OPT	apps/clicky/src/clicky.cc	48;"	d	file:
RXStats	elements/wifi/rxstats.cc	/^RXStats::RXStats()$/;"	f	class:RXStats
RXStats	elements/wifi/rxstats.hh	/^class RXStats : public Element { public:$/;"	c
RXStats_read_param	elements/wifi/rxstats.cc	/^RXStats_read_param(Element *e, void *thunk)$/;"	f	file:
RXStats_write_param	elements/wifi/rxstats.cc	/^RXStats_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
RadioSim	elements/grid/radiosim.cc	/^RadioSim::RadioSim()$/;"	f	class:RadioSim
RadioSim	elements/grid/radiosim.hh	/^class RadioSim : public Element {$/;"	c
RadiotapDecap	elements/wifi/radiotapdecap.cc	/^RadiotapDecap::RadiotapDecap()$/;"	f	class:RadiotapDecap
RadiotapDecap	elements/wifi/radiotapdecap.hh	/^class RadiotapDecap : public Element { public:$/;"	c
RadiotapDecap_read_param	elements/wifi/radiotapdecap.cc	/^RadiotapDecap_read_param(Element *e, void *thunk)$/;"	f	file:
RadiotapDecap_write_param	elements/wifi/radiotapdecap.cc	/^RadiotapDecap_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
RadiotapEncap	elements/wifi/radiotapencap.cc	/^RadiotapEncap::RadiotapEncap()$/;"	f	class:RadiotapEncap
RadiotapEncap	elements/wifi/radiotapencap.hh	/^class RadiotapEncap : public Element { public:$/;"	c
RadiotapEncap_read_param	elements/wifi/radiotapencap.cc	/^RadiotapEncap_read_param(Element *e, void *thunk)$/;"	f	file:
RadiotapEncap_write_param	elements/wifi/radiotapencap.cc	/^RadiotapEncap_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
Radix	elements/ip/radixiplookup.cc	/^    Radix()			{ }$/;"	f	class:RadixIPLookup::Radix	file:
Radix	elements/ip/radixiplookup.cc	/^class RadixIPLookup::Radix { public:$/;"	c	class:RadixIPLookup	file:
Radix	elements/ipsec/radixipseclookup.hh	/^    Radix()			{ }$/;"	f	class:RadixIPsecLookup::Radix
Radix	elements/ipsec/radixipseclookup.hh	/^class RadixIPsecLookup::Radix { public:$/;"	c	class:RadixIPsecLookup
RadixIPLookup	elements/ip/radixiplookup.cc	/^RadixIPLookup::RadixIPLookup()$/;"	f	class:RadixIPLookup
RadixIPLookup	elements/ip/radixiplookup.hh	/^class RadixIPLookup : public IPRouteTable { public:$/;"	c
RadixIPsecLookup	elements/ipsec/radixipseclookup.cc	/^RadixIPsecLookup::RadixIPsecLookup()$/;"	f	class:RadixIPsecLookup
RadixIPsecLookup	elements/ipsec/radixipseclookup.hh	/^class RadixIPsecLookup : public IPsecRouteTable { public:$/;"	c
RandomBitErrors	elements/standard/randomerror.cc	/^RandomBitErrors::RandomBitErrors()$/;"	f	class:RandomBitErrors
RandomBitErrors	elements/standard/randomerror.hh	/^class RandomBitErrors : public Element {$/;"	c
RandomSample	elements/standard/randomsample.cc	/^RandomSample::RandomSample()$/;"	f	class:RandomSample
RandomSample	elements/standard/randomsample.hh	/^class RandomSample : public Element { public:$/;"	c
RandomSeed	elements/test/randomseed.cc	/^RandomSeed::RandomSeed()$/;"	f	class:RandomSeed
RandomSeed	elements/test/randomseed.hh	/^class RandomSeed : public Element { public:$/;"	c
RandomSource	elements/standard/randomsource.cc	/^RandomSource::RandomSource()$/;"	f	class:RandomSource
RandomSource	elements/standard/randomsource.hh	/^class RandomSource : public InfiniteSource { public:$/;"	c
RandomSwitch	elements/standard/randomswitch.cc	/^RandomSwitch::RandomSwitch()$/;"	f	class:RandomSwitch
RandomSwitch	elements/standard/randomswitch.hh	/^class RandomSwitch : public Element { public:$/;"	c
RangeIPLookup	elements/ip/rangeiplookup.cc	/^RangeIPLookup::RangeIPLookup()$/;"	f	class:RangeIPLookup
RangeIPLookup	elements/ip/rangeiplookup.hh	/^class RangeIPLookup : public IPRouteTable { public:$/;"	c
RateEWMA	include/click/ewma.hh	/^typedef RateEWMAX<RateEWMAXParameters<4, 10> > RateEWMA;$/;"	t
RateEWMAX	include/click/ewma.hh	/^    RateEWMAX() {$/;"	f	class:RateEWMAX
RateEWMAX	include/click/ewma.hh	/^class RateEWMAX : public P { public:$/;"	c
RateEWMAXParameters	include/click/ewma.hh	/^class RateEWMAXParameters : public FixedEWMAXParameters<STABILITY, SCALE, T, U> { public:$/;"	c
RateSettableBandwidthShaper	elements/local/standard/ratesettable_bandwidthshaper.cc	/^RateSettableBandwidthShaper::RateSettableBandwidthShaper()$/;"	f	class:RateSettableBandwidthShaper
RateSettableBandwidthShaper	elements/local/standard/ratesettable_bandwidthshaper.hh	/^class RateSettableBandwidthShaper : public Shaper { public:$/;"	c
RatedSource	elements/standard/ratedsource.cc	/^RatedSource::RatedSource()$/;"	f	class:RatedSource
RatedSource	elements/standard/ratedsource.hh	/^class RatedSource : public Element { public:$/;"	c
RatedSplitter	elements/standard/ratedsplitter.cc	/^RatedSplitter::RatedSplitter()$/;"	f	class:RatedSplitter
RatedSplitter	elements/standard/ratedsplitter.hh	/^class RatedSplitter : public Element { public:$/;"	c
RatedUnqueue	elements/standard/ratedunqueue.cc	/^RatedUnqueue::RatedUnqueue()$/;"	f	class:RatedUnqueue
RatedUnqueue	elements/standard/ratedunqueue.hh	/^class RatedUnqueue : public Element { public:$/;"	c
RawSocket	elements/userlevel/rawsocket.cc	/^RawSocket::RawSocket()$/;"	f	class:RawSocket
RawSocket	elements/userlevel/rawsocket.hh	/^class RawSocket : public Element { public:$/;"	c
ReadAnno	elements/wifi/readanno.cc	/^ReadAnno::ReadAnno()$/;"	f	class:ReadAnno
ReadAnno	elements/wifi/readanno.hh	/^class ReadAnno : public Element { public:$/;"	c
ReadHandlerCallback	include/click/handler.hh	/^typedef String (*ReadHandlerCallback)(Element *handler, void *user_data);$/;"	t
ReadWriteLock	include/click/sync.hh	/^ReadWriteLock::ReadWriteLock()$/;"	f	class:ReadWriteLock
ReadWriteLock	include/click/sync.hh	/^class ReadWriteLock { public:$/;"	c
Reason	elements/ethernet/checkarpheader.hh	/^  enum Reason {$/;"	g	class:CheckARPHeader
Reason	elements/icmp/checkicmpheader.hh	/^  enum Reason {$/;"	g	class:CheckICMPHeader
Reason	elements/ip/checkipheader.hh	/^  enum Reason {$/;"	g	class:CheckIPHeader
Reason	elements/tcpudp/checktcpheader.hh	/^  enum Reason {$/;"	g	class:CheckTCPHeader
Reason	elements/tcpudp/checkudpheader.hh	/^  enum Reason {$/;"	g	class:CheckUDPHeader
ReceiverInfo	elements/icmp/icmpsendpings.hh	/^    struct ReceiverInfo {$/;"	s	class:ICMPPingSource
RecordErrorHandler	elements/test/confparsetest.cc	/^    RecordErrorHandler() {$/;"	f	class:__anon404::RecordErrorHandler
RecordErrorHandler	elements/test/confparsetest.cc	/^class RecordErrorHandler : public ErrorHandler { public:$/;"	c	namespace:__anon404	file:
RectRegion	elements/grid/region.hh	/^  RectRegion() : _x(0), _y(0), _w(-1), _h(-1) { }$/;"	f	class:RectRegion
RectRegion	elements/grid/region.hh	/^  RectRegion(double x, double y) : _x(x), _y(y), _w(0), _h(0) { }$/;"	f	class:RectRegion
RectRegion	elements/grid/region.hh	/^  RectRegion(double x, double y, double l) : _x(x-l\/2), _y(y-l\/2), _w(l), _h(l) { }$/;"	f	class:RectRegion
RectRegion	elements/grid/region.hh	/^  RectRegion(double x_bl, double y_bl, double width, double height) :$/;"	f	class:RectRegion
RectRegion	elements/grid/region.hh	/^class RectRegion {$/;"	c
RecycledSkbBucket	linuxmodule/skbmgr.cc	/^class RecycledSkbBucket { public:$/;"	c	file:
RecycledSkbPool	linuxmodule/skbmgr.cc	/^class RecycledSkbPool { public:$/;"	c	file:
RequestsToForward	elements/grid/dsrroutetable.hh	/^  typedef HashMap<IPAddress, Packet *> RequestsToForward;$/;"	t	class:DSRRouteTable
RequireLexerExtra	lib/driver.cc	/^    RequireLexerExtra(const Vector<ArchiveElement> *a) : _archive(a) { }$/;"	f	class:__anon503::RequireLexerExtra
RequireLexerExtra	lib/driver.cc	/^class RequireLexerExtra : public LexerExtra { public:$/;"	c	namespace:__anon503	file:
ReverseProbeMap	elements/grid/linkstat.hh	/^  typedef HashMap<EtherAddress, outgoing_link_entry_t> ReverseProbeMap;$/;"	t	class:LinkStat
RoundRobinIPMapper	elements/ip/rripmapper.cc	/^RoundRobinIPMapper::RoundRobinIPMapper()$/;"	f	class:RoundRobinIPMapper
RoundRobinIPMapper	elements/ip/rripmapper.hh	/^class RoundRobinIPMapper : public Element, public IPMapper { public:$/;"	c
RoundRobinSwitch	elements/standard/rrswitch.cc	/^RoundRobinSwitch::RoundRobinSwitch()$/;"	f	class:RoundRobinSwitch
RoundRobinSwitch	elements/standard/rrswitch.hh	/^class RoundRobinSwitch : public Element {$/;"	c
RouteEntry	elements/grid/gridgenericrt.hh	/^    RouteEntry() : loc_good(false), loc_err(0), next_hop_interface(0), _seq_no(0), _num_hops(0) { }$/;"	f	struct:GridGenericRouteTable::RouteEntry
RouteEntry	elements/grid/gridgenericrt.hh	/^    RouteEntry(const IPAddress &dst,$/;"	f	struct:GridGenericRouteTable::RouteEntry
RouteEntry	elements/grid/gridgenericrt.hh	/^  struct RouteEntry {$/;"	s	class:GridGenericRouteTable
Router	include/click/router.hh	/^class Router { public:$/;"	c
Router	lib/router.cc	/^Router::Router(const String &configuration, Master *master)$/;"	f	class:Router
RouterAlign	tools/click-align/click-align.cc	/^RouterAlign::RouterAlign(RouterT *r, ErrorHandler *errh)$/;"	f	class:RouterAlign
RouterAlign	tools/click-align/click-align.cc	/^struct RouterAlign {$/;"	s	file:
RouterContextErrh	lib/router.cc	/^    RouterContextErrh(ErrorHandler *errh, const char *message, Element *e)$/;"	f	class:Router::RouterContextErrh
RouterContextErrh	lib/router.cc	/^class Router::RouterContextErrh : public ContextErrorHandler { public:$/;"	c	class:Router	file:
RouterPortT	tools/click-combine/click-combine.cc	/^typedef PortT RouterPortT;	\/\/ except that 'port' is the router index$/;"	t	file:
RouterT	tools/lib/routert.cc	/^RouterT::RouterT()$/;"	f	class:RouterT
RouterT	tools/lib/routert.cc	/^RouterT::RouterT(const String &name, const LandmarkT &landmark, RouterT *declaration_scope)$/;"	f	class:RouterT
RouterT	tools/lib/routert.hh	/^class RouterT : public ElementClassT { public:$/;"	c
RouterThread	include/click/routerthread.hh	/^class RouterThread : private TaskLink { public:$/;"	c
RouterThread	lib/routerthread.cc	/^RouterThread::RouterThread(Master *m, int id)$/;"	f	class:RouterThread
RouterTreeModel	apps/ClickController/RouterTreeModel.java	/^    public RouterTreeModel(ControlSocket cs) {$/;"	m	class:RouterTreeModel
RouterTreeModel	apps/ClickController/RouterTreeModel.java	/^public class RouterTreeModel extends DefaultTreeModel {$/;"	c
RouterUnparserT	tools/lib/runparse.hh	/^class RouterUnparserT { public:$/;"	c
RouterVisitor	include/click/routervisitor.hh	/^    RouterVisitor() {$/;"	f	class:RouterVisitor
RouterVisitor	include/click/routervisitor.hh	/^class RouterVisitor { public:$/;"	c
SADataTuple	elements/ipsec/sadatatuple.hh	/^    SADataTuple() {$/;"	f	class:SADataTuple
SADataTuple	elements/ipsec/sadatatuple.hh	/^    SADataTuple(const void * enc_key , const void * Auth_key, uint32_t counter, uint8_t o_oowin)$/;"	f	class:SADataTuple
SADataTuple	elements/ipsec/sadatatuple.hh	/^class SADataTuple {$/;"	c
SAMPLEPACKAGEELEMENT_HH	etc/samplepackage/sampleelt.hh	2;"	d
SAMPLING_MASK	elements/standard/randomsample.hh	/^    enum { SAMPLING_MASK = (1 << SAMPLING_SHIFT) - 1 };$/;"	e	enum:RandomSample::__anon186
SAMPLING_SHIFT	elements/analysis/fromcapdump.hh	/^    enum { SAMPLING_SHIFT = 28 };$/;"	e	enum:FromCapDump::__anon300
SAMPLING_SHIFT	elements/analysis/fromdagdump.hh	/^    static const int SAMPLING_SHIFT = 28;$/;"	m	class:FromDAGDump
SAMPLING_SHIFT	elements/analysis/fromflandump.hh	/^    static const int SAMPLING_SHIFT = 28;$/;"	m	class:FromFlanDump
SAMPLING_SHIFT	elements/analysis/fromipsumdump.hh	/^    enum { SAMPLING_SHIFT = 28 };$/;"	e	enum:FromIPSummaryDump::__anon288
SAMPLING_SHIFT	elements/analysis/fromnlanrdump.hh	/^    static const int SAMPLING_SHIFT = 28;$/;"	m	class:FromNLANRDump
SAMPLING_SHIFT	elements/analysis/fromtcpdump.hh	/^    enum { SAMPLING_SHIFT = 28 };$/;"	e	enum:FromTcpdump::__anon276
SAMPLING_SHIFT	elements/standard/randomsample.hh	/^    enum { SAMPLING_SHIFT = 28 };$/;"	e	enum:RandomSample::__anon185
SAMPLING_SHIFT	elements/userlevel/fromdump.hh	/^    enum { BUFFER_SIZE = 32768, SAMPLING_SHIFT = 28 };$/;"	e	enum:FromDump::__anon210
SANITY_CHECK_MAX_PACKETS	elements/grid/updateroutes.hh	/^  static const int SANITY_CHECK_MAX_PACKETS = 100;$/;"	m	class:UpdateGridRoutes
SANITY_CHECK_PERIOD	elements/grid/updateroutes.hh	/^  static const int SANITY_CHECK_PERIOD = 10000; \/\/ 10 secs$/;"	m	class:UpdateGridRoutes
SAT_MATH_H	elements/local/OpenFlow/lib/sat-math.hh	35;"	d
SATable	elements/ipsec/satable.cc	/^SATable::SATable()$/;"	f	class:SATable
SATable	elements/ipsec/satable.hh	/^class SATable : public Element { public:$/;"	c
SBMap	elements/grid/dsrroutetable.hh	/^  typedef HashMap<IPAddress, SendBuffer> SBMap;$/;"	t	class:DSRRouteTable
SBMapIter	elements/grid/dsrroutetable.hh	/^  typedef SBMap::iterator SBMapIter;$/;"	t	class:DSRRouteTable
SCHEDULELINUX_HH	elements/linuxmodule/schedulelinux.hh	2;"	d
SCHEDULE_OUTER_LOOP_TIMESCALE	elements/local/FlowNet/common/ScheduleOuter.hh	16;"	d
SCHEDULE_STATUS_QLEN_MONITOR_SEQ	elements/local/FlowNet/scheduler/FlowSchedulable.hh	100;"	d
SCRAMBLE_HH	elements/radio/scramble.hh	2;"	d
SCacheEntry	elements/tcpudp/snooptcp.hh	/^  struct SCacheEntry {$/;"	s	class:SnoopTCP
SD_AND	elements/ip/ipfilter.hh	/^	SD_SRC = 1, SD_DST = 2, SD_AND = 3, SD_OR = 4$/;"	e	enum:IPFilter::__anon349
SD_DST	elements/ip/ipfilter.hh	/^	SD_SRC = 1, SD_DST = 2, SD_AND = 3, SD_OR = 4$/;"	e	enum:IPFilter::__anon349
SD_OR	elements/ip/ipfilter.hh	/^	SD_SRC = 1, SD_DST = 2, SD_AND = 3, SD_OR = 4$/;"	e	enum:IPFilter::__anon349
SD_SRC	elements/ip/ipfilter.hh	/^	SD_SRC = 1, SD_DST = 2, SD_AND = 3, SD_OR = 4$/;"	e	enum:IPFilter::__anon349
SEARCH_CONTINUE	include/click/notifier.hh	/^    enum SearchOp { SEARCH_STOP = 0, SEARCH_CONTINUE, SEARCH_CONTINUE_WAKE };$/;"	e	enum:Notifier::SearchOp
SEARCH_CONTINUE_WAKE	include/click/notifier.hh	/^    enum SearchOp { SEARCH_STOP = 0, SEARCH_CONTINUE, SEARCH_CONTINUE_WAKE };$/;"	e	enum:Notifier::SearchOp
SEARCH_STOP	include/click/notifier.hh	/^    enum SearchOp { SEARCH_STOP = 0, SEARCH_CONTINUE, SEARCH_CONTINUE_WAKE };$/;"	e	enum:Notifier::SearchOp
SECOND_LEVEL_LOOKUP_CACHE	elements/local/FlowNet/common/FlowNetGod.hh	15;"	d
SEC_OLDER	elements/analysis/aggregateipaddrpair.cc	32;"	d	file:
SEC_OLDER	elements/analysis/aggregateipflows.cc	33;"	d	file:
SELECT_READ	include/click/element.hh	/^    enum { SELECT_READ = 1, SELECT_WRITE = 2 };$/;"	e	enum:Element::__anon447
SELECT_READ	lib/selectset.cc	/^enum { SELECT_READ = Element::SELECT_READ, SELECT_WRITE = Element::SELECT_WRITE };$/;"	e	enum:__anon507::__anon508	file:
SELECT_WRITE	include/click/element.hh	/^    enum { SELECT_READ = 1, SELECT_WRITE = 2 };$/;"	e	enum:Element::__anon447
SELECT_WRITE	lib/selectset.cc	/^enum { SELECT_READ = Element::SELECT_READ, SELECT_WRITE = Element::SELECT_WRITE };$/;"	e	enum:__anon507::__anon508	file:
SEND_ERR_ANNO	include/click/packet_anno.hh	73;"	d
SEND_ERR_ANNO_OFFSET	include/click/packet_anno.hh	71;"	d
SEND_ERR_ANNO_SIZE	include/click/packet_anno.hh	72;"	d
SEND_TIMER_CLOCK	elements/local/FlowNet/shaper/PFShapeFW.hh	27;"	d
SENT_AD_CODE	elements/grid/gridlogger.hh	/^  static const unsigned char SENT_AD_CODE               = 0x01;$/;"	m	class:GridLogger
SEQUENCE_NUMBER_ANNO	include/click/packet_anno.hh	112;"	d
SEQUENCE_NUMBER_ANNO_OFFSET	include/click/packet_anno.hh	110;"	d
SEQUENCE_NUMBER_ANNO_SIZE	include/click/packet_anno.hh	111;"	d
SEQ_GEQ	include/clicknet/tcp.h	60;"	d
SEQ_GT	include/clicknet/tcp.h	59;"	d
SEQ_LEQ	include/clicknet/tcp.h	58;"	d
SEQ_LT	include/clicknet/tcp.h	57;"	d
SEQ_METRIC	elements/grid/dsdvroutetable.hh	182;"	d
SERIAL_NUM_LEN	elements/local/OpenFlow/include/openflow/openflow.hh	774;"	d
SERVER	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    SERVER$/;"	e	enum:session_type	file:
SERVER_MONITOR_PORT	elements/local/FlowNet/papmo/PaPMo.hh	48;"	d
SET	lib/md5.cc	209;"	d	file:
SET	lib/md5.cc	229;"	d	file:
SET	lib/md5.cc	235;"	d	file:
SET	lib/md5.cc	255;"	d	file:
SET	lib/md5.cc	261;"	d	file:
SET	lib/md5.cc	281;"	d	file:
SET	lib/md5.cc	287;"	d	file:
SET	lib/md5.cc	307;"	d	file:
SETCYCLECOUNT_HH	elements/linuxmodule/setcyclecount.hh	2;"	d
SETGRIDCHECKSUM_HH	elements/grid/setgridchecksum.hh	2;"	d
SETIP6ADDRESS_HH	elements/ip6/setip6address.hh	2;"	d
SETPERFCOUNT_HH	elements/linuxmodule/setperfcount.hh	2;"	d
SET_AGGREGATE_ANNO	include/click/packet_anno.hh	47;"	d
SET_DSR_LAST_HOP_ETH_ANNO1	elements/grid/dsr.hh	140;"	d
SET_DSR_LAST_HOP_ETH_ANNO2	elements/grid/dsr.hh	143;"	d
SET_DSR_LAST_HOP_ETH_ANNO3	elements/grid/dsr.hh	146;"	d
SET_DSR_LAST_HOP_IP_ANNO	elements/grid/dsr.hh	137;"	d
SET_DST_IP6_ANNO	include/click/ip6address.hh	/^SET_DST_IP6_ANNO(Packet *p, const IP6Address &a)$/;"	f
SET_DST_IP6_ANNO	include/click/ip6address.hh	/^SET_DST_IP6_ANNO(Packet *p, const click_in6_addr &a)$/;"	f
SET_ETHTOOL_OPS	drivers/e1000-5.x/src/kcompat_ethtool.c	97;"	d	file:
SET_ETHTOOL_OPS	drivers/e1000-5.x/src/kcompat_ethtool.c	98;"	d	file:
SET_ETHTOOL_OPS	drivers/e1000-7.x/src/kcompat_ethtool.c	107;"	d	file:
SET_ETHTOOL_OPS	drivers/e1000-7.x/src/kcompat_ethtool.c	108;"	d	file:
SET_EXTRA_LENGTH_ANNO	include/click/packet_anno.hh	89;"	d
SET_EXTRA_PACKETS_ANNO	include/click/packet_anno.hh	63;"	d
SET_FIRST_TIMESTAMP_ANNO	include/click/packet_anno.hh	96;"	d
SET_FIX_IP_SRC_ANNO	include/click/packet_anno.hh	35;"	d
SET_FWD_RATE_ANNO	include/click/packet_anno.hh	52;"	d
SET_GRID_ROUTE_CB_ANNO	include/click/packet_anno.hh	80;"	d
SET_ICMP_PARAMPROB_ANNO	include/click/packet_anno.hh	29;"	d
SET_IPSEC_SA_DATA_REFERENCE_ANNO	include/click/packet_anno.hh	119;"	d
SET_IPSEC_SA_DATA_REFERENCE_ANNO	include/click/packet_anno.hh	133;"	d
SET_IPSEC_SPI_ANNO	include/click/packet_anno.hh	107;"	d
SET_MISC_IP_ANNO	include/click/packet_anno.hh	57;"	d
SET_MODULE_OWNER	drivers/e1000-4.x/src/kcompat.h	86;"	d
SET_NETDEV_DEV	drivers/e1000-5.x/src/kcompat.h	52;"	d
SET_NETDEV_DEV	drivers/e1000-7.x/src/kcompat.h	141;"	d
SET_PACKET_NUMBER_ANNO	include/click/packet_anno.hh	102;"	d
SET_PAINT_ANNO	include/click/packet_anno.hh	23;"	d
SET_PERFCTR_ANNO	include/click/packet_anno.hh	127;"	d
SET_REV_RATE_ANNO	include/click/packet_anno.hh	68;"	d
SET_SEND_ERR_ANNO	include/click/packet_anno.hh	74;"	d
SET_SEQUENCE_NUMBER_ANNO	include/click/packet_anno.hh	113;"	d
SET_STATS	elements/bsdmodule/anydevice.hh	28;"	d
SET_STATS	elements/linuxmodule/anydevice.hh	30;"	d
SET_VLAN_TCI_ANNO	include/click/packet_anno.hh	41;"	d
SHA1_IMPL_HH	elements/ipsec/sha1_impl.hh	59;"	d
SHA1_ctx	elements/ipsec/sha1_impl.hh	/^SHA1_ctx;$/;"	t	typeref:struct:SHAstate_st
SHA1_final	elements/ipsec/sha1_impl.cc	/^SHA1_final (unsigned char *md, SHA1_ctx *c)$/;"	f
SHA1_init	elements/ipsec/sha1_impl.cc	/^SHA1_init (SHA1_ctx * c)$/;"	f
SHA1_transform	elements/ipsec/sha1_impl.cc	/^SHA1_transform (SHA1_ctx *c, unsigned char *b)$/;"	f
SHA1_update	elements/ipsec/sha1_impl.cc	/^SHA1_update (SHA1_ctx * c, register unsigned char *data, unsigned long len)$/;"	f
SHA1_version	elements/ipsec/sha1_impl.cc	/^const char SHA1_version[] = "SHA1 part of SSLeay 0.8.2b 08-Jan-1998";$/;"	v
SHAPE_STATUS_QLEN_MONITOR_SEQ	elements/local/FlowNet/shaper/FlowBWShaperable.hh	39;"	d
SHA_0	elements/ipsec/sha1_impl.hh	61;"	d
SHA_1	elements/ipsec/sha1_impl.hh	62;"	d
SHA_BLOCK	elements/ipsec/sha1_impl.hh	66;"	d
SHA_CBLOCK	elements/ipsec/sha1_impl.hh	64;"	d
SHA_DIGEST_LEN	elements/ipsec/hmacsha1.cc	36;"	d	file:
SHA_DIGEST_LEN	elements/ipsec/sha1.cc	32;"	d	file:
SHA_DIGEST_LENGTH	elements/ipsec/sha1_impl.hh	69;"	d
SHA_LAST_BLOCK	elements/ipsec/sha1_impl.hh	67;"	d
SHA_LBLOCK	elements/ipsec/sha1_impl.hh	65;"	d
SHA_LENGTH_BLOCK	elements/ipsec/sha1_impl.hh	68;"	d
SHAstate_st	elements/ipsec/sha1_impl.hh	/^typedef struct SHAstate_st$/;"	s
SHELL	Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	bsdmodule/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	doc/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	etc/libclick/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	linuxmodule/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	ns/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tools/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tools/click-align/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tools/click-check/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tools/click-combine/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tools/click-devirtualize/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tools/click-fastclassifier/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tools/click-flatten/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tools/click-install/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tools/click-mkmindriver/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tools/click-pretty/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tools/click-undead/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tools/click-xform/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tools/click2xml/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	tools/lib/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	userlevel/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHOW_INTERFACE	drivers/e1000-7.x/src/e1000_main.c	946;"	d	file:
SIGNATURE_HH	tools/click-devirtualize/signature.hh	2;"	d
SIG_NOT_SPECIAL	tools/click-devirtualize/signature.hh	/^  enum { SIG_NOT_SPECIAL = 0 };$/;"	e	enum:Signatures::__anon543
SIMCLICK_CHANGE_CHANNEL	include/click/simclick.h	106;"	d
SIMCLICK_GET_NEXT_PKT_ID	include/click/simclick.h	105;"	d
SIMCLICK_GET_NODE_ID	include/click/simclick.h	104;"	d
SIMCLICK_GET_NODE_NAME	include/click/simclick.h	101;"	d
SIMCLICK_H	include/click/simclick.h	2;"	d
SIMCLICK_IFID_FROM_NAME	include/click/simclick.h	97;"	d
SIMCLICK_IF_PROMISC	include/click/simclick.h	107;"	d
SIMCLICK_IF_READY	include/click/simclick.h	102;"	d
SIMCLICK_IPADDR_FROM_NAME	include/click/simclick.h	98;"	d
SIMCLICK_MACADDR_FROM_NAME	include/click/simclick.h	99;"	d
SIMCLICK_MEM_ALLOC	include/click/simclick.h	/^typedef void* (*SIMCLICK_MEM_ALLOC)(size_t,void*);$/;"	t
SIMCLICK_PTYPE_ETHER	include/click/simclick.h	20;"	d
SIMCLICK_PTYPE_IP	include/click/simclick.h	21;"	d
SIMCLICK_PTYPE_UNKNOWN	include/click/simclick.h	19;"	d
SIMCLICK_SCHEDULE	include/click/simclick.h	100;"	d
SIMCLICK_SUPPORTS	include/click/simclick.h	96;"	d
SIMCLICK_TRACE	include/click/simclick.h	103;"	d
SIMCLICK_VERSION	include/click/simclick.h	95;"	d
SIMPLELOCQUERIER_HH	elements/grid/simplelocquerier.hh	2;"	d
SIMTIME_OPT	userlevel/click.cc	74;"	d	file:
SIZE	elements/analysis/fromnlanrdump.hh	/^	enum { SIZE = 24 };$/;"	e	enum:FromNLANRDump::FRCell::__anon281
SIZE	elements/analysis/fromnlanrdump.hh	/^	enum { SIZE = 44 };$/;"	e	enum:FromNLANRDump::FRPlusCell::__anon282
SIZE	elements/analysis/fromnlanrdump.hh	/^	enum { SIZE = 44 };$/;"	e	enum:FromNLANRDump::TSHCell::__anon283
SIZE	linuxmodule/skbmgr.cc	/^  static const int SIZE = 62;$/;"	m	class:RecycledSkbBucket	file:
SIZEOF_CLICK_INT_LARGE_T	include/click/type_traits.hh	67;"	d
SIZEOF_CLICK_INT_LARGE_T	include/click/type_traits.hh	76;"	d
SIZEOF_CLICK_INT_LARGE_T	include/click/type_traits.hh	85;"	d
SIZEOF_CLICK_JIFFIES_T	include/click/config-bsdmodule.h	35;"	d
SIZEOF_CLICK_JIFFIES_T	include/click/config-linuxmodule.h	144;"	d
SIZEOF_CLICK_JIFFIES_T	include/click/config-userlevel.h	221;"	d
SIZEOF_INT	include/click/config.h	113;"	d
SIZEOF_LONG	include/click/config.h	116;"	d
SIZEOF_LONG_LONG	include/click/config.h	119;"	d
SIZEOF_OFF_T	include/click/config-userlevel.h	224;"	d
SIZEOF_SIZE_T	include/click/config.h	122;"	d
SIZEOF_STRUCT_TIMESPEC	include/click/config.h	125;"	d
SIZEOF_STRUCT_TIMEVAL	include/click/config.h	128;"	d
SIZEOF_VOID_P	include/click/config.h	131;"	d
SIZE_MAX	elements/local/OpenFlow/include/config.h	4;"	d
SIter	elements/ipsec/satable.hh	/^  typedef STable::const_iterator SIter;$/;"	t	class:SATable
SKBMGR_DEF_HEADSZ	linuxmodule/skbmgr.cc	243;"	d	file:
SKBMGR_DEF_TAILSZ	linuxmodule/skbmgr.cc	242;"	d	file:
SLEEPINESS_TRIGGER	elements/standard/notifierqueue.hh	/^    enum { SLEEPINESS_TRIGGER = 9 };$/;"	e	enum:NotifierQueue::__anon170
SLEEP_TRIGGER	elements/local/FlowNet/scheduler/PFSchedFW.hh	206;"	d
SMALL_GRID_HEADERS	elements/grid/grid.hh	8;"	d
SMALL_GRID_PROBES	elements/grid/grid.hh	9;"	d
SMP	drivers/e1000-4.x/src/Makefile	/^  SMP := 0$/;"	m
SMP	drivers/e1000-4.x/src/Makefile	/^SMP := $(shell $(CC) $(CFLAGS) -E -dM $(CONFIG_FILE) | \\$/;"	m
SMP	drivers/e1000-5.x/src/Makefile	/^  SMP := 0$/;"	m
SMP	drivers/e1000-5.x/src/Makefile	/^SMP := $(shell $(CC) $(CFLAGS) -E -dM $(CONFIG_FILE) | \\$/;"	m
SMP	drivers/e1000-7.x/src/Makefile	/^  SMP := 0$/;"	m
SMP	drivers/e1000-7.x/src/Makefile	/^SMP := $(shell $(CC) $(CFLAGS) -E -dM $(CONFIG_FILE) | \\$/;"	m
SNAP_HEADER_LEN	elements/local/OpenFlow/lib/packets.hh	143;"	d
SNAP_ORG_ETHERNET	elements/local/OpenFlow/lib/packets.hh	141;"	d
SNOOP_RTX_THRESH	elements/tcpudp/snooptcp.cc	242;"	d	file:
SOCKET_BITS	elements/local/OpenFlow/lib/netlink.cc	971;"	d	file:
SOCKET_OPT	userlevel/click.cc	75;"	d	file:
SOCKET_UTIL_H	elements/local/OpenFlow/lib/socket-util.hh	35;"	d
SOFT_SPIN_LOCK	linuxmodule/sched.cc	62;"	d	file:
SOL_NETLINK	elements/local/OpenFlow/lib/netlink.cc	59;"	d	file:
SOURCE_OPT	tools/click-devirtualize/click-devirtualize.cc	50;"	d	file:
SOURCE_OPT	tools/click-fastclassifier/click-fastclassifier.cc	55;"	d	file:
SPCE_NOT_DONE	tools/click-devirtualize/specializer.hh	/^  enum { SPCE_NOT_DONE = -2, SPCE_NOT_SPECIAL = -1 };$/;"	e	enum:Specializer::__anon542
SPCE_NOT_SPECIAL	tools/click-devirtualize/specializer.hh	/^  enum { SPCE_NOT_DONE = -2, SPCE_NOT_SPECIAL = -1 };$/;"	e	enum:Specializer::__anon542
SPECIAL_PKT_CODE	elements/grid/gridlogger.hh	/^  static const unsigned char SPECIAL_PKT_CODE           = 0x0D;$/;"	m	class:GridLogger
SPEED_10	drivers/e1000-4.x/src/e1000_hw.h	264;"	d
SPEED_10	drivers/e1000-5.x/src/e1000_hw.h	397;"	d
SPEED_10	drivers/e1000-7.x/src/e1000_hw.h	515;"	d
SPEED_100	drivers/e1000-4.x/src/e1000_hw.h	265;"	d
SPEED_100	drivers/e1000-5.x/src/e1000_hw.h	398;"	d
SPEED_100	drivers/e1000-7.x/src/e1000_hw.h	516;"	d
SPEED_1000	drivers/e1000-4.x/src/e1000_hw.h	266;"	d
SPEED_1000	drivers/e1000-5.x/src/e1000_hw.h	399;"	d
SPEED_1000	drivers/e1000-7.x/src/e1000_hw.h	517;"	d
SPEED_10000	drivers/e1000-7.x/src/kcompat_ethtool.c	64;"	d	file:
SPEED_10000	drivers/e1000-7.x/src/kcompat_ethtool.c	65;"	d	file:
SPEED_MODE_BIT	drivers/e1000-7.x/src/e1000_main.c	1828;"	d	file:
SPI	elements/ipsec/sadatatuple.hh	/^	inline SPI()$/;"	f	class:SPI
SPI	elements/ipsec/sadatatuple.hh	/^	inline SPI(unsigned int a)$/;"	f	class:SPI
SPI	elements/ipsec/sadatatuple.hh	/^class SPI {$/;"	c
SPINLOCK_ASSERTLEVEL	include/click/sync.hh	21;"	d
SPINLOCK_ASSERTLEVEL	include/click/sync.hh	596;"	d
SPIN_LOCK	linuxmodule/clickfs.cc	57;"	d	file:
SPIN_LOCK_MSG	linuxmodule/clickfs.cc	56;"	d	file:
SPIN_UNLOCK	linuxmodule/clickfs.cc	58;"	d	file:
SPIN_UNLOCK	linuxmodule/sched.cc	63;"	d	file:
SRCM_MIMD	elements/local/FlowNet/common/FlowNetGod.hh	66;"	d
SRCM_NO_CONTROL	elements/local/FlowNet/common/FlowNetGod.hh	68;"	d
SRCM_THRESHOLD	elements/local/FlowNet/common/FlowNetGod.hh	67;"	d
SR_1000T_ASYM_PAUSE_DIR	drivers/e1000-4.x/src/e1000_hw.h	1654;"	d
SR_1000T_ASYM_PAUSE_DIR	drivers/e1000-5.x/src/e1000_hw.h	1926;"	d
SR_1000T_ASYM_PAUSE_DIR	drivers/e1000-7.x/src/e1000_hw.h	2828;"	d
SR_1000T_IDLE_ERROR_CNT	drivers/e1000-4.x/src/e1000_hw.h	1653;"	d
SR_1000T_IDLE_ERROR_CNT	drivers/e1000-5.x/src/e1000_hw.h	1925;"	d
SR_1000T_IDLE_ERROR_CNT	drivers/e1000-7.x/src/e1000_hw.h	2827;"	d
SR_1000T_LOCAL_RX_STATUS	drivers/e1000-4.x/src/e1000_hw.h	1658;"	d
SR_1000T_LOCAL_RX_STATUS	drivers/e1000-5.x/src/e1000_hw.h	1930;"	d
SR_1000T_LOCAL_RX_STATUS	drivers/e1000-7.x/src/e1000_hw.h	2832;"	d
SR_1000T_LOCAL_RX_STATUS_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1662;"	d
SR_1000T_LOCAL_RX_STATUS_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1934;"	d
SR_1000T_LOCAL_RX_STATUS_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2836;"	d
SR_1000T_LP_FD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1656;"	d
SR_1000T_LP_FD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1928;"	d
SR_1000T_LP_FD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2830;"	d
SR_1000T_LP_HD_CAPS	drivers/e1000-4.x/src/e1000_hw.h	1655;"	d
SR_1000T_LP_HD_CAPS	drivers/e1000-5.x/src/e1000_hw.h	1927;"	d
SR_1000T_LP_HD_CAPS	drivers/e1000-7.x/src/e1000_hw.h	2829;"	d
SR_1000T_MS_CONFIG_FAULT	drivers/e1000-4.x/src/e1000_hw.h	1660;"	d
SR_1000T_MS_CONFIG_FAULT	drivers/e1000-5.x/src/e1000_hw.h	1932;"	d
SR_1000T_MS_CONFIG_FAULT	drivers/e1000-7.x/src/e1000_hw.h	2834;"	d
SR_1000T_MS_CONFIG_RES	drivers/e1000-4.x/src/e1000_hw.h	1659;"	d
SR_1000T_MS_CONFIG_RES	drivers/e1000-5.x/src/e1000_hw.h	1931;"	d
SR_1000T_MS_CONFIG_RES	drivers/e1000-7.x/src/e1000_hw.h	2833;"	d
SR_1000T_PHY_EXCESSIVE_IDLE_ERR_COUNT	drivers/e1000-5.x/src/e1000_hw.h	1935;"	d
SR_1000T_PHY_EXCESSIVE_IDLE_ERR_COUNT	drivers/e1000-7.x/src/e1000_hw.h	2837;"	d
SR_1000T_REMOTE_RX_STATUS	drivers/e1000-4.x/src/e1000_hw.h	1657;"	d
SR_1000T_REMOTE_RX_STATUS	drivers/e1000-5.x/src/e1000_hw.h	1929;"	d
SR_1000T_REMOTE_RX_STATUS	drivers/e1000-7.x/src/e1000_hw.h	2831;"	d
SR_1000T_REMOTE_RX_STATUS_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1661;"	d
SR_1000T_REMOTE_RX_STATUS_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1933;"	d
SR_1000T_REMOTE_RX_STATUS_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2835;"	d
STALLTIME	elements/userlevel/progressbar.cc	152;"	d	file:
STATE	elements/local/OpenFlow/lib/rconn.cc	450;"	d	file:
STATE	elements/local/OpenFlow/lib/rconn.cc	452;"	d	file:
STATE	elements/local/OpenFlow/lib/rconn.cc	64;"	d	file:
STATE	elements/local/OpenFlow/lib/rconn.cc	66;"	d	file:
STATE	elements/local/OpenFlow/lib/rconn.cc	73;"	d	file:
STATE	elements/local/OpenFlow/lib/rconn.cc	75;"	d	file:
STATE	elements/local/OpenFlow/lib/rconn.cc	882;"	d	file:
STATE	elements/local/OpenFlow/lib/rconn.cc	884;"	d	file:
STATES	elements/local/OpenFlow/lib/rconn.cc	/^    STATES$/;"	e	enum:state	file:
STATES	elements/local/OpenFlow/lib/rconn.cc	57;"	d	file:
STATE_SSL_CONNECTING	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    STATE_SSL_CONNECTING$/;"	e	enum:ssl_state	file:
STATE_TCP_CONNECTING	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    STATE_TCP_CONNECTING,$/;"	e	enum:ssl_state	file:
STATICTHREADSCHED_HH	elements/threads/staticthreadsched.hh	3;"	d
STDC_HEADERS	elements/local/OpenFlow/include/config.h	128;"	d
STD_ELEMENT_OBJS	linuxmodule/Makefile	/^STD_ELEMENT_OBJS = addressinfo.o alignmentinfo.o \\$/;"	m
STD_ELEMENT_OBJS	ns/Makefile	/^STD_ELEMENT_OBJS = addressinfo.o alignmentinfo.o \\$/;"	m
STD_ELEMENT_OBJS	userlevel/Makefile	/^STD_ELEMENT_OBJS = addressinfo.o alignmentinfo.o \\$/;"	m
STEPUP_RETRY_THRESHOLD	elements/wifi/madwifirate.cc	31;"	d	file:
STEP_JUMP	elements/standard/script.hh	/^	max_jumps = 1000, STEP_NORMAL = 0, STEP_ROUTER, STEP_TIMER, STEP_JUMP$/;"	e	enum:Script::__anon177
STEP_NORMAL	elements/standard/script.hh	/^	max_jumps = 1000, STEP_NORMAL = 0, STEP_ROUTER, STEP_TIMER, STEP_JUMP$/;"	e	enum:Script::__anon177
STEP_ROUTER	elements/standard/script.hh	/^	max_jumps = 1000, STEP_NORMAL = 0, STEP_ROUTER, STEP_TIMER, STEP_JUMP$/;"	e	enum:Script::__anon177
STEP_TIMER	elements/standard/script.hh	/^	max_jumps = 1000, STEP_NORMAL = 0, STEP_ROUTER, STEP_TIMER, STEP_JUMP$/;"	e	enum:Script::__anon177
STIter	elements/wifi/ap/stationtable.hh	/^  typedef STable::const_iterator STIter;$/;"	t	class:StationTable
STOP_MARKER	elements/standard/pokehandlers.cc	/^Element * const PokeHandlers::STOP_MARKER = (Element *)1;$/;"	m	class:PokeHandlers	file:
STOP_MARKER	elements/standard/pokehandlers.hh	/^    static Element * const STOP_MARKER;$/;"	m	class:PokeHandlers
STOP_OPT	ns/nsclick.cc	62;"	d	file:
STOP_RUNCOUNT	include/click/router.hh	/^    enum { STOP_RUNCOUNT = -2147483647 - 1 };$/;"	e	enum:Router::__anon438
STOP_THUNK	elements/analysis/fromflandump.cc	/^    ACTIVE_THUNK, STOP_THUNK, FILESIZE_THUNK, FILEPOS_THUNK$/;"	e	enum:__anon256	file:
STP_BLOCKING	elements/local/OpenFlow/lib/stp.hh	/^    STP_BLOCKING = 1 << 4        \/* 8.4.1: Initial boot state. *\/$/;"	e	enum:stp_state
STP_CONFIG_TOPOLOGY_CHANGE	elements/local/OpenFlow/lib/stp.cc	/^    STP_CONFIG_TOPOLOGY_CHANGE = 0x01$/;"	e	enum:stp_config_bpdu_flags	file:
STP_CONFIG_TOPOLOGY_CHANGE_ACK	elements/local/OpenFlow/lib/stp.cc	/^    STP_CONFIG_TOPOLOGY_CHANGE_ACK = 0x80,$/;"	e	enum:stp_config_bpdu_flags	file:
STP_DEFAULT_BRIDGE_PRIORITY	elements/local/OpenFlow/lib/stp.hh	56;"	d
STP_DEFAULT_PORT_PRIORITY	elements/local/OpenFlow/lib/stp.hh	57;"	d
STP_DISABLED	elements/local/OpenFlow/lib/stp.hh	/^    STP_DISABLED = 1 << 0,       \/* 8.4.5: Disabled by management. *\/$/;"	e	enum:stp_state
STP_FORWARDING	elements/local/OpenFlow/lib/stp.hh	/^    STP_FORWARDING = 1 << 3,     \/* 8.4.4: Learning and relaying frames. *\/$/;"	e	enum:stp_state
STP_H	elements/local/OpenFlow/lib/stp.hh	35;"	d
STP_LEARNING	elements/local/OpenFlow/lib/stp.hh	/^    STP_LEARNING = 1 << 2,       \/* 8.4.3: Learning but not relaying frames. *\/$/;"	e	enum:stp_state
STP_LISTENING	elements/local/OpenFlow/lib/stp.hh	/^    STP_LISTENING = 1 << 1,      \/* 8.4.2: Not learning or relaying frames. *\/$/;"	e	enum:stp_state
STP_LLC_CNTL	elements/local/OpenFlow/lib/stp.hh	53;"	d
STP_LLC_DSAP	elements/local/OpenFlow/lib/stp.hh	52;"	d
STP_LLC_SSAP	elements/local/OpenFlow/lib/stp.hh	51;"	d
STP_MAX_PORTS	elements/local/OpenFlow/lib/stp.hh	64;"	d
STP_PROTOCOL_ID	elements/local/OpenFlow/lib/stp.cc	54;"	d	file:
STP_PROTOCOL_VERSION	elements/local/OpenFlow/lib/stp.cc	55;"	d	file:
STP_TYPE_CONFIG	elements/local/OpenFlow/lib/stp.cc	56;"	d	file:
STP_TYPE_TCN	elements/local/OpenFlow/lib/stp.cc	57;"	d	file:
STREAMINGPROXY_MAX_FRAMETYPE_BUFFER	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	28;"	d
STREAMINGPROXY_MAX_SEPARATION	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	30;"	d
STREAMINGSTUB_MAX_FRAMEINDEX_BUFFER	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	29;"	d
STRFTIME_FORMAT	elements/local/OpenFlow/lib/compiler.hh	41;"	d
STRIDE1	elements/standard/stridesched.hh	/^    enum { STRIDE1 = 1U<<16, MAX_TICKETS = 1U<<15 };$/;"	e	enum:StrideSched::__anon184
STRIDE1	include/click/task.hh	/^    enum { STRIDE1 = 1U<<16, MAX_STRIDE = 1U<<31 };$/;"	e	enum:Task::__anon453
STRIP	bsdmodule/Makefile	/^STRIP = strip$/;"	m
STRIP	etc/pkg-bsdmodule.mk	/^STRIP ?= $(CLICKSTRIP)$/;"	m
STRIP	etc/pkg-linuxmodule.mk	/^STRIP ?= $(CLICKSTRIP)$/;"	m
STRIP	etc/pkg-userlevel.mk	/^STRIP ?= $(CLICKSTRIP)$/;"	m
STRIP	linuxmodule/Makefile	/^STRIP = strip$/;"	m
STRIP_UPACKAGE	etc/pkg-userlevel.mk	/^STRIP_UPACKAGE ?= true$/;"	m
STYLE_EXPR_OPT	apps/clicky/src/clicky.cc	39;"	d	file:
STYLE_OPT	apps/clicky/src/clicky.cc	32;"	d	file:
ST_DEAD	elements/userlevel/progressbar.hh	/^    enum { ST_FIRST, ST_MIDDLE, ST_DONE, ST_FIRSTDONE, ST_DEAD };$/;"	e	enum:ProgressBar::__anon198
ST_DONE	elements/userlevel/progressbar.hh	/^    enum { ST_FIRST, ST_MIDDLE, ST_DONE, ST_FIRSTDONE, ST_DEAD };$/;"	e	enum:ProgressBar::__anon198
ST_FIRST	elements/userlevel/progressbar.hh	/^    enum { ST_FIRST, ST_MIDDLE, ST_DONE, ST_FIRSTDONE, ST_DEAD };$/;"	e	enum:ProgressBar::__anon198
ST_FIRSTDONE	elements/userlevel/progressbar.hh	/^    enum { ST_FIRST, ST_MIDDLE, ST_DONE, ST_FIRSTDONE, ST_DEAD };$/;"	e	enum:ProgressBar::__anon198
ST_GOTO	elements/standard/script.hh	/^	ST_STEP = 0, ST_RUN, ST_GOTO,$/;"	e	enum:Script::__anon178
ST_MIDDLE	elements/userlevel/progressbar.hh	/^    enum { ST_FIRST, ST_MIDDLE, ST_DONE, ST_FIRSTDONE, ST_DEAD };$/;"	e	enum:ProgressBar::__anon198
ST_RUN	elements/standard/script.hh	/^	ST_STEP = 0, ST_RUN, ST_GOTO,$/;"	e	enum:Script::__anon178
ST_STEP	elements/standard/script.hh	/^	ST_STEP = 0, ST_RUN, ST_GOTO,$/;"	e	enum:Script::__anon178
STable	elements/ipsec/satable.hh	/^  typedef HashMap<SPI,SADataTuple> STable;$/;"	t	class:SATable
STable	elements/wifi/ap/stationtable.hh	/^  typedef HashMap<EtherAddress, Station> STable;$/;"	t	class:StationTable
SUBDIRS	drivers/e1000-5.x/src/Makefile	/^	make -C $(KSRC) SUBDIRS=$(shell pwd) modules$/;"	m
SUBDIRS	drivers/e1000-7.x/src/Makefile	/^	make -C $(KSRC) SUBDIRS=$(shell pwd) modules$/;"	m
SUPPORTED_10000baseT_Full	drivers/e1000-7.x/src/kcompat_ethtool.c	60;"	d	file:
SUPPORTED_10000baseT_Full	drivers/e1000-7.x/src/kcompat_ethtool.c	61;"	d	file:
SVEC_EMPTY_INITIALIZER	elements/local/OpenFlow/lib/svec.hh	47;"	d
SVEC_H	elements/local/OpenFlow/lib/svec.hh	35;"	d
SWAP	elements/grid/amoeba.cc	34;"	d	file:
SWAPLONG	elements/analysis/fromdagdump.cc	40;"	d	file:
SWAPLONG	elements/analysis/fromflandump.cc	39;"	d	file:
SWAPLONG	elements/analysis/fromnlanrdump.cc	40;"	d	file:
SWAPLONG	elements/userlevel/fromdump.cc	44;"	d	file:
SWAPSHORT	elements/analysis/fromdagdump.cc	42;"	d	file:
SWAPSHORT	elements/analysis/fromflandump.cc	41;"	d	file:
SWAPSHORT	elements/analysis/fromnlanrdump.cc	42;"	d	file:
SWAPSHORT	elements/userlevel/fromdump.cc	46;"	d	file:
SWDPIO_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1445;"	d
SWDPIO_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1666;"	d
SWDPIO_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2479;"	d
SWDPIO__EXT_SHIFT	drivers/e1000-4.x/src/e1000_hw.h	1452;"	d
SWDPIO__EXT_SHIFT	drivers/e1000-5.x/src/e1000_hw.h	1671;"	d
SWDPIO__EXT_SHIFT	drivers/e1000-7.x/src/e1000_hw.h	2484;"	d
SWITCH_FLOW_H	elements/local/OpenFlow/lib/switch-flow.hh	35;"	d
SWITCH_MAGIC	elements/userlevel/umlswitch.hh	36;"	d
SWITCH_VERSION	elements/userlevel/umlswitch.hh	32;"	d
SYSCALL	drivers/e1000-4.x/src/idiag_test.c	49;"	d	file:
S_BLOCKED	include/click/routerthread.hh	/^    enum { S_PAUSED, S_BLOCKED, S_TIMERWAIT,$/;"	e	enum:RouterThread::__anon422
S_CACHE_HIGHWATER	elements/tcpudp/snooptcp.hh	/^	 S_CACHE_HIGHWATER = (9*S_CACHE_SIZE \/ 10) };$/;"	e	enum:SnoopTCP::PCB::__anon231
S_CACHE_SIZE	elements/tcpudp/snooptcp.hh	/^  enum { S_CACHE_SIZE = 1024,$/;"	e	enum:SnoopTCP::PCB::__anon231
S_LOCKSELECT	include/click/routerthread.hh	/^	   S_LOCKSELECT, S_LOCKTASKS,$/;"	e	enum:RouterThread::__anon422
S_LOCKTASKS	include/click/routerthread.hh	/^	   S_LOCKSELECT, S_LOCKTASKS,$/;"	e	enum:RouterThread::__anon422
S_PAUSED	include/click/routerthread.hh	/^    enum { S_PAUSED, S_BLOCKED, S_TIMERWAIT,$/;"	e	enum:RouterThread::__anon422
S_RUNPENDING	include/click/routerthread.hh	/^	   S_RUNTASK, S_RUNTIMER, S_RUNSIGNAL, S_RUNPENDING, S_RUNSELECT,$/;"	e	enum:RouterThread::__anon422
S_RUNSELECT	include/click/routerthread.hh	/^	   S_RUNTASK, S_RUNTIMER, S_RUNSIGNAL, S_RUNPENDING, S_RUNSELECT,$/;"	e	enum:RouterThread::__anon422
S_RUNSIGNAL	include/click/routerthread.hh	/^	   S_RUNTASK, S_RUNTIMER, S_RUNSIGNAL, S_RUNPENDING, S_RUNSELECT,$/;"	e	enum:RouterThread::__anon422
S_RUNTASK	include/click/routerthread.hh	/^	   S_RUNTASK, S_RUNTIMER, S_RUNSIGNAL, S_RUNPENDING, S_RUNSELECT,$/;"	e	enum:RouterThread::__anon422
S_RUNTIMER	include/click/routerthread.hh	/^	   S_RUNTASK, S_RUNTIMER, S_RUNSIGNAL, S_RUNPENDING, S_RUNSELECT,$/;"	e	enum:RouterThread::__anon422
S_TIMERWAIT	include/click/routerthread.hh	/^    enum { S_PAUSED, S_BLOCKED, S_TIMERWAIT,$/;"	e	enum:RouterThread::__anon422
SamplePackageElement	etc/samplepackage/sampleelt.cc	/^SamplePackageElement::SamplePackageElement()$/;"	f	class:SamplePackageElement
SamplePackageElement	etc/samplepackage/sampleelt.hh	/^class SamplePackageElement : public Element { public:$/;"	c
SaturatingIntArg	include/click/args.hh	/^    SaturatingIntArg(int b = 0)$/;"	f	struct:SaturatingIntArg
SaturatingIntArg	include/click/args.hh	/^struct SaturatingIntArg : public IntArg {$/;"	s
SchedInfo	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^struct SchedInfo {$/;"	s
SchedOrderTest	elements/test/schedordertest.cc	/^SchedOrderTest::SchedOrderTest()$/;"	f	class:SchedOrderTest
SchedOrderTest	elements/test/schedordertest.hh	/^class SchedOrderTest : public Element { public:$/;"	c
ScheduleInfo	elements/standard/scheduleinfo.cc	/^ScheduleInfo::ScheduleInfo()$/;"	f	class:ScheduleInfo
ScheduleInfo	include/click/standard/scheduleinfo.hh	/^class ScheduleInfo : public Element { public:$/;"	c
ScheduleLinux	elements/linuxmodule/schedulelinux.cc	/^ScheduleLinux::ScheduleLinux()$/;"	f	class:ScheduleLinux
ScheduleLinux	elements/linuxmodule/schedulelinux.hh	/^class ScheduleLinux : public Element { public:$/;"	c
ScheduledEvent	ns/nsclick-test.cc	/^  class ScheduledEvent : public Simulator::SimEvent {$/;"	c	class:TestClickSimulator	file:
ScheduledEvent	ns/nsclick-test.cc	/^TestClickSimulator::ScheduledEvent::ScheduledEvent() {$/;"	f	class:TestClickSimulator::ScheduledEvent
Schinfo	elements/linuxmodule/fromdevice.hh	/^    struct Schinfo {$/;"	s	class:FromDevice
ScopeChain	apps/clicky/src/scopechain.hh	/^    ScopeChain(RouterT *router) {$/;"	f	class:ScopeChain
ScopeChain	apps/clicky/src/scopechain.hh	/^class ScopeChain { public:$/;"	c
Scramble	elements/radio/scramble.cc	/^Scramble::Scramble()$/;"	f	class:Scramble
Scramble	elements/radio/scramble.hh	/^class Scramble : public Element {$/;"	c
Script	elements/standard/script.cc	/^Script::Script()$/;"	f	class:Script
Script	elements/standard/script.hh	/^class Script : public Element { public:$/;"	c
SearchOp	include/click/notifier.hh	/^    enum SearchOp { SEARCH_STOP = 0, SEARCH_CONTINUE, SEARCH_CONTINUE_WAKE };$/;"	g	class:Notifier
SecondsArg	include/click/args.hh	/^    SecondsArg(int d = 0)$/;"	f	struct:SecondsArg
SecondsArg	include/click/args.hh	/^struct SecondsArg : public NumArg {$/;"	s
SelectSet	include/click/selectset.hh	/^class SelectSet { public:$/;"	c
SelectSet	lib/selectset.cc	/^SelectSet::SelectSet()$/;"	f	class:SelectSet
SelectorInfo	include/click/selectset.hh	/^	SelectorInfo()$/;"	f	struct:SelectSet::SelectorInfo
SelectorInfo	include/click/selectset.hh	/^    struct SelectorInfo {$/;"	s	class:SelectSet
SendBuffer	elements/grid/dsrroutetable.hh	/^  typedef Vector<BufferedPacket> SendBuffer;$/;"	t	class:DSRRouteTable
SendGridHello	elements/grid/hello.cc	/^SendGridHello::SendGridHello()$/;"	f	class:SendGridHello
SendGridHello	elements/grid/hello.hh	/^class SendGridHello : public Element {$/;"	c
SendGridLRHello	elements/grid/lrhello.cc	/^SendGridLRHello::SendGridLRHello()$/;"	f	class:SendGridLRHello
SendGridLRHello	elements/grid/lrhello.hh	/^class SendGridLRHello : public Element {$/;"	c
SendPattern	elements/radio/sendpattern.cc	/^SendPattern::SendPattern()$/;"	f	class:SendPattern
SendPattern	elements/radio/sendpattern.hh	/^class SendPattern : public Element {$/;"	c
SendToIP	elements/grid/gridroutecb.hh	/^    SendToIP           = 1,$/;"	e	enum:GridRouteActionCallback::Action
ServicesNameDB	elements/ip/ipnameinfo.cc	/^ServicesNameDB::ServicesNameDB(uint32_t type, ServicesNameDB *other)$/;"	f	class:__anon323::ServicesNameDB
ServicesNameDB	elements/ip/ipnameinfo.cc	/^class ServicesNameDB : public NameDB { public:$/;"	c	namespace:__anon323	file:
SetAnnoByte	elements/standard/setannobyte.cc	/^SetAnnoByte::SetAnnoByte()$/;"	f	class:SetAnnoByte
SetAnnoByte	elements/standard/setannobyte.hh	/^class SetAnnoByte : public Element { public:$/;"	c
SetCRC32	elements/standard/setcrc32.cc	/^SetCRC32::SetCRC32()$/;"	f	class:SetCRC32
SetCRC32	elements/standard/setcrc32.hh	/^class SetCRC32 : public Element { public:$/;"	c
SetCycleCount	elements/linuxmodule/setcyclecount.cc	/^SetCycleCount::SetCycleCount()$/;"	f	class:SetCycleCount
SetCycleCount	elements/linuxmodule/setcyclecount.hh	/^class SetCycleCount : public Element { public:$/;"	c
SetGridChecksum	elements/grid/setgridchecksum.cc	/^SetGridChecksum::SetGridChecksum()$/;"	f	class:SetGridChecksum
SetGridChecksum	elements/grid/setgridchecksum.hh	/^class SetGridChecksum : public Element {$/;"	c
SetIP6Address	elements/ip6/setip6address.cc	/^SetIP6Address::SetIP6Address()$/;"	f	class:SetIP6Address
SetIP6Address	elements/ip6/setip6address.hh	/^class SetIP6Address : public Element {$/;"	c
SetIP6DSCP	elements/ip6/setip6dscp.cc	/^SetIP6DSCP::SetIP6DSCP()$/;"	f	class:SetIP6DSCP
SetIP6DSCP	elements/ip6/setip6dscp.hh	/^class SetIP6DSCP : public Element { public:$/;"	c
SetIPAddress	elements/ip/setipaddress.cc	/^SetIPAddress::SetIPAddress()$/;"	f	class:SetIPAddress
SetIPAddress	elements/ip/setipaddress.hh	/^class SetIPAddress : public Element {$/;"	c
SetIPChecksum	elements/ip/setipchecksum.cc	/^SetIPChecksum::SetIPChecksum()$/;"	f	class:SetIPChecksum
SetIPChecksum	elements/ip/setipchecksum.hh	/^class SetIPChecksum : public Element {$/;"	c
SetIPDSCP	elements/ip/setipdscp.cc	/^SetIPDSCP::SetIPDSCP()$/;"	f	class:SetIPDSCP
SetIPDSCP	elements/ip/setipdscp.hh	/^class SetIPDSCP : public Element { public:$/;"	c
SetIPECN	elements/ip/setipecn.cc	/^SetIPECN::SetIPECN()$/;"	f	class:SetIPECN
SetIPECN	elements/ip/setipecn.hh	/^class SetIPECN : public Element { public:$/;"	c
SetPacketType	elements/standard/setpackettype.cc	/^SetPacketType::SetPacketType()$/;"	f	class:SetPacketType
SetPacketType	elements/standard/setpackettype.hh	/^class SetPacketType : public Element { public:$/;"	c
SetPerfCount	elements/linuxmodule/setperfcount.cc	/^SetPerfCount::SetPerfCount()$/;"	f	class:SetPerfCount
SetPerfCount	elements/linuxmodule/setperfcount.hh	/^class SetPerfCount : public PerfCountUser { public:$/;"	c
SetRTS	elements/wifi/setrts.cc	/^SetRTS::SetRTS()$/;"	f	class:SetRTS
SetRTS	elements/wifi/setrts.hh	/^class SetRTS : public Element { public:$/;"	c
SetRTS_read_param	elements/wifi/setrts.cc	/^SetRTS_read_param(Element *e, void *thunk)$/;"	f	file:
SetRTS_write_param	elements/wifi/setrts.cc	/^SetRTS_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
SetRandIPAddress	elements/ip/setrandipaddress.cc	/^SetRandIPAddress::SetRandIPAddress()$/;"	f	class:SetRandIPAddress
SetRandIPAddress	elements/ip/setrandipaddress.hh	/^class SetRandIPAddress : public Element {$/;"	c
SetRandIPAddress_hh	elements/ip/setrandipaddress.hh	2;"	d
SetTCPChecksum	elements/tcpudp/settcpchecksum.cc	/^SetTCPChecksum::SetTCPChecksum()$/;"	f	class:SetTCPChecksum
SetTCPChecksum	elements/tcpudp/settcpchecksum.hh	/^class SetTCPChecksum : public Element { public:$/;"	c
SetTXPower	elements/wifi/settxpower.cc	/^SetTXPower::SetTXPower()$/;"	f	class:SetTXPower
SetTXPower	elements/wifi/settxpower.hh	/^class SetTXPower : public Element { public:$/;"	c
SetTXPower_read_param	elements/wifi/settxpower.cc	/^SetTXPower_read_param(Element *e, void *thunk)$/;"	f	file:
SetTXPower_write_param	elements/wifi/settxpower.cc	/^SetTXPower_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
SetTXRate	elements/wifi/settxrate.cc	/^SetTXRate::SetTXRate()$/;"	f	class:SetTXRate
SetTXRate	elements/wifi/settxrate.hh	/^class SetTXRate : public Element { public:$/;"	c
SetTagMode	drivers/e1000-4.x/src/base_comm.h	/^    u32                SetTagMode;  \/* cast from IANS_BD_TAGGING_MODE  *\/$/;"	m	struct:_IANS_BD_PARAM_ITAG_SET_MODE
SetTimestamp	elements/standard/settimestamp.cc	/^SetTimestamp::SetTimestamp()$/;"	f	class:SetTimestamp
SetTimestamp	elements/standard/settimestamp.hh	/^class SetTimestamp : public Element { public:$/;"	c
SetTimestampDelta	elements/analysis/settimestampdelta.cc	/^SetTimestampDelta::SetTimestampDelta()$/;"	f	class:SetTimestampDelta
SetTimestampDelta	elements/analysis/settimestampdelta.hh	/^class SetTimestampDelta : public Element { public:$/;"	c
SetUDPChecksum	elements/tcpudp/setudpchecksum.cc	/^SetUDPChecksum::SetUDPChecksum()$/;"	f	class:SetUDPChecksum
SetUDPChecksum	elements/tcpudp/setudpchecksum.hh	/^class SetUDPChecksum : public Element { public:$/;"	c
SetVLANAnno	elements/ethernet/setvlananno.cc	/^SetVLANAnno::SetVLANAnno()$/;"	f	class:SetVLANAnno
SetVLANAnno	elements/ethernet/setvlananno.hh	/^class SetVLANAnno : public Element { public:$/;"	c
Shaper	elements/standard/shaper.cc	/^Shaper::Shaper()$/;"	f	class:Shaper
Shaper	elements/standard/shaper.hh	/^class Shaper : public Element { public:$/;"	c
ShifterAligner	tools/click-align/alignclass.hh	/^  ShifterAligner(int shift) : _shift(shift) { }$/;"	f	class:ShifterAligner
ShifterAligner	tools/click-align/alignclass.hh	/^class ShifterAligner : public Aligner {$/;"	c
SignalInfo	include/click/master.hh	/^	SignalInfo(int signo_, Router *router_, const String &handler_)$/;"	f	struct:Master::SignalInfo
SignalInfo	include/click/master.hh	/^    struct SignalInfo {$/;"	s	class:Master
SignatureNode	tools/click-devirtualize/signature.hh	/^  SignatureNode()			{ }$/;"	f	struct:SignatureNode
SignatureNode	tools/click-devirtualize/signature.hh	/^  SignatureNode(int eid)		: _eid(eid), _phase(0), _next(-1) { }$/;"	f	struct:SignatureNode
SignatureNode	tools/click-devirtualize/signature.hh	/^struct SignatureNode {$/;"	s
Signatures	tools/click-devirtualize/signature.cc	/^Signatures::Signatures(const RouterT *router)$/;"	f	class:Signatures
Signatures	tools/click-devirtualize/signature.hh	/^class Signatures { public:$/;"	c
SilentErrorHandler	include/click/error.hh	/^    SilentErrorHandler() {$/;"	f	class:SilentErrorHandler
SilentErrorHandler	include/click/error.hh	/^class SilentErrorHandler : public ErrorHandler { public:$/;"	c
SimBinHeap	ns/nsclick-test.cc	/^  typedef CUT_BinHeap< SimTime,SimEvent*,less_equal<SimTime> > SimBinHeap;$/;"	t	class:Simulator	file:
SimEvent	ns/nsclick-test.cc	/^    SimEvent() {};$/;"	f	class:Simulator::SimEvent
SimEvent	ns/nsclick-test.cc	/^  class SimEvent {$/;"	c	class:Simulator	file:
SimPacketAnalyzer	elements/ns/simpacketanalyzer.cc	/^SimPacketAnalyzer::SimPacketAnalyzer()$/;"	f	class:SimPacketAnalyzer
SimPacketAnalyzer	elements/ns/simpacketanalyzer.hh	/^class SimPacketAnalyzer : public Element{$/;"	c
SimPacketinfoWrapper	include/click/packet.hh	/^	SimPacketinfoWrapper() {$/;"	f	class:Packet::SimPacketinfoWrapper
SimPacketinfoWrapper	include/click/packet.hh	/^    class SimPacketinfoWrapper { public:$/;"	c	class:Packet
SimTime	ns/nsclick-test.cc	/^    SimTime() {tv_sec = 0, tv_usec = 0;};$/;"	f	class:Simulator::SimTime
SimTime	ns/nsclick-test.cc	/^    SimTime(long sec,long usec) { tv_sec = sec, tv_usec = usec; };$/;"	f	class:Simulator::SimTime
SimTime	ns/nsclick-test.cc	/^    SimTime(struct timeval tv) {tv_sec = tv.tv_sec,tv_usec = tv.tv_usec;};$/;"	f	class:Simulator::SimTime
SimTime	ns/nsclick-test.cc	/^  class SimTime : public timeval {$/;"	c	class:Simulator	file:
SimpleIdle	elements/simple/simpleidle.cc	/^SimpleIdle::SimpleIdle()$/;"	f	class:SimpleIdle
SimpleIdle	elements/simple/simpleidle.hh	/^class SimpleIdle : public Element { public:$/;"	c
SimpleLocQuerier	elements/grid/simplelocquerier.cc	/^SimpleLocQuerier::SimpleLocQuerier()$/;"	f	class:SimpleLocQuerier
SimpleLocQuerier	elements/grid/simplelocquerier.hh	/^class SimpleLocQuerier : public Element {$/;"	c
SimplePrioSched	elements/simple/simplepriosched.cc	/^SimplePrioSched::SimplePrioSched()$/;"	f	class:SimplePrioSched
SimplePrioSched	elements/simple/simplepriosched.hh	/^class SimplePrioSched : public Element { public:$/;"	c
SimplePullSwitch	elements/simple/simplepullswitch.cc	/^SimplePullSwitch::SimplePullSwitch()$/;"	f	class:SimplePullSwitch
SimplePullSwitch	elements/simple/simplepullswitch.hh	/^class SimplePullSwitch : public Element { public:$/;"	c
SimpleQueue	elements/standard/simplequeue.cc	/^SimpleQueue::SimpleQueue()$/;"	f	class:SimpleQueue
SimpleQueue	elements/standard/simplequeue.hh	/^class SimpleQueue : public Element, public Storage { public:$/;"	c
SimpleRRSched	elements/simple/simplerrsched.cc	/^SimpleRRSched::SimpleRRSched()$/;"	f	class:SimpleRRSched
SimpleRRSched	elements/simple/simplerrsched.hh	/^class SimpleRRSched : public Element { public:$/;"	c
SimpleSpinlock	include/click/sync.hh	/^SimpleSpinlock::SimpleSpinlock()$/;"	f	class:SimpleSpinlock
SimpleSpinlock	include/click/sync.hh	/^class SimpleSpinlock { public:$/;"	c
Simulator	ns/nsclick-test.cc	/^Simulator::Simulator() {$/;"	f	class:Simulator
Simulator	ns/nsclick-test.cc	/^class Simulator {$/;"	c	file:
SizedHashAllocator	include/click/hashallocator.hh	/^    SizedHashAllocator()$/;"	f	class:SizedHashAllocator
SizedHashAllocator	include/click/hashallocator.hh	/^class SizedHashAllocator : public HashAllocator { public:$/;"	c
Slot	include/click/args.hh	/^	Slot() {$/;"	f	struct:Args::Slot
Slot	include/click/args.hh	/^    struct Slot {$/;"	s	struct:Args
SlotT	include/click/args.hh	/^	SlotT(T *ptr)$/;"	f	struct:Args::SlotT
SlotT	include/click/args.hh	/^    struct SlotT : public Slot {$/;"	s	struct:Args
SnoopTCP	elements/tcpudp/snooptcp.cc	/^SnoopTCP::SnoopTCP()$/;"	f	class:SnoopTCP
SnoopTCP	elements/tcpudp/snooptcp.hh	/^class SnoopTCP : public Element { public:$/;"	c
Socket	elements/userlevel/socket.cc	/^Socket::Socket()$/;"	f	class:Socket
Socket	elements/userlevel/socket.hh	/^class Socket : public Element { public:$/;"	c
SortTest	elements/test/sorttest.cc	/^SortTest::SortTest()$/;"	f	class:SortTest
SortTest	elements/test/sorttest.hh	/^class SortTest : public Element { public:$/;"	c
SortedIPLookup	elements/ip/sortediplookup.cc	/^SortedIPLookup::SortedIPLookup()$/;"	f	class:SortedIPLookup
SortedIPLookup	elements/ip/sortediplookup.hh	/^class SortedIPLookup : public LinearIPLookup { public:$/;"	c
SourceIPHashMapper	elements/ip/siphmapper.cc	/^SourceIPHashMapper::SourceIPHashMapper()$/;"	f	class:SourceIPHashMapper
SourceIPHashMapper	elements/ip/siphmapper.hh	/^class SourceIPHashMapper : public Element, public IPMapper { public:$/;"	c
SpecializedClass	tools/click-devirtualize/specializer.hh	/^  SpecializedClass() : cxxc(0), eindex(-3)	{ }$/;"	f	struct:SpecializedClass
SpecializedClass	tools/click-devirtualize/specializer.hh	/^struct SpecializedClass {$/;"	s
Specializer	tools/click-devirtualize/specializer.cc	/^Specializer::Specializer(RouterT *router, const ElementMap &em)$/;"	f	class:Specializer
Specializer	tools/click-devirtualize/specializer.hh	/^class Specializer { public:$/;"	c
Spinlock	include/click/sync.hh	/^Spinlock::Spinlock()$/;"	f	class:Spinlock
Spinlock	include/click/sync.hh	/^class Spinlock { public:$/;"	c
SpinlockAcquire	elements/threads/spinlockacquire.hh	/^    SpinlockAcquire()			: _lock(0) {}$/;"	f	class:SpinlockAcquire
SpinlockAcquire	elements/threads/spinlockacquire.hh	/^class SpinlockAcquire : public Element { public:$/;"	c
SpinlockIRQ	include/click/sync.hh	/^SpinlockIRQ::SpinlockIRQ()$/;"	f	class:SpinlockIRQ
SpinlockIRQ	include/click/sync.hh	/^class SpinlockIRQ { public:$/;"	c
SpinlockInfo	elements/threads/spinlockinfo.cc	/^SpinlockInfo::SpinlockInfo()$/;"	f	class:SpinlockInfo
SpinlockInfo	elements/threads/spinlockinfo.hh	/^class SpinlockInfo : public Element { public:$/;"	c
SpinlockRelease	elements/threads/spinlockrelease.hh	/^    SpinlockRelease()			: _lock(0) {}$/;"	f	class:SpinlockRelease
SpinlockRelease	elements/threads/spinlockrelease.hh	/^class SpinlockRelease : public Element { public:$/;"	c
StabilityEWMAXParameters	include/click/ewma.hh	/^    StabilityEWMAXParameters()$/;"	f	class:StabilityEWMAXParameters
StabilityEWMAXParameters	include/click/ewma.hh	/^class StabilityEWMAXParameters { public:$/;"	c
StatFlowInfo	elements/analysis/aggregateipflows.hh	/^	StatFlowInfo(uint32_t ports, FlowInfo *next, uint32_t agg) : FlowInfo(ports, next, agg) { _packets[0] = _packets[1] = 0; }$/;"	f	struct:AggregateIPFlows::StatFlowInfo
StatFlowInfo	elements/analysis/aggregateipflows.hh	/^    struct StatFlowInfo : public FlowInfo {$/;"	s	class:AggregateIPFlows
StatelessTCPResponder	elements/tcpudp/statelesstcpresp.hh	/^    StatelessTCPResponder()		{ }$/;"	f	class:StatelessTCPResponder
StatelessTCPResponder	elements/tcpudp/statelesstcpresp.hh	/^class StatelessTCPResponder : public Element { public:$/;"	c
StaticIPLookup	elements/ip/lookupiproute.cc	/^StaticIPLookup::StaticIPLookup()$/;"	f	class:StaticIPLookup
StaticIPLookup	elements/ip/lookupiproute.hh	/^class StaticIPLookup : public LinearIPLookup { public:$/;"	c
StaticNameDB	include/click/nameinfo.hh	/^StaticNameDB::StaticNameDB(uint32_t type, const String &context, const Entry *entry, size_t nentry)$/;"	f	class:StaticNameDB
StaticNameDB	include/click/nameinfo.hh	/^class StaticNameDB : public NameDB { public:$/;"	c
StaticPullSwitch	elements/standard/staticpullswitch.cc	/^StaticPullSwitch::StaticPullSwitch()$/;"	f	class:StaticPullSwitch
StaticPullSwitch	elements/standard/staticpullswitch.hh	/^class StaticPullSwitch : public Element {$/;"	c
StaticSwitch	elements/standard/staticswitch.cc	/^StaticSwitch::StaticSwitch()$/;"	f	class:StaticSwitch
StaticSwitch	elements/standard/staticswitch.hh	/^class StaticSwitch : public Element {$/;"	c
StaticThreadSched	elements/threads/staticthreadsched.cc	/^StaticThreadSched::StaticThreadSched()$/;"	f	class:StaticThreadSched
StaticThreadSched	elements/threads/staticthreadsched.hh	/^class StaticThreadSched : public Element, public ThreadSched { public:$/;"	c
Station	elements/wifi/ap/stationtable.hh	/^  Station() {$/;"	f	class:Station
Station	elements/wifi/ap/stationtable.hh	/^class Station {$/;"	c
StationTable	elements/wifi/ap/stationtable.cc	/^StationTable::StationTable()$/;"	f	class:StationTable
StationTable	elements/wifi/ap/stationtable.hh	/^class StationTable : public Element { public:$/;"	c
StationTable_read_param	elements/wifi/ap/stationtable.cc	/^StationTable_read_param(Element *e, void *thunk)$/;"	f	file:
StationTable_write_param	elements/wifi/ap/stationtable.cc	/^StationTable_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
Stats	elements/ip/ipratemon.cc	/^IPRateMonitor::Stats::Stats(IPRateMonitor *m)$/;"	f	class:IPRateMonitor::Stats
Stats	elements/ip/ipratemon.hh	/^  struct Stats {$/;"	s	class:IPRateMonitor
Status	drivers/e1000-4.x/src/base_comm.h	/^    IANS_BD_PARAM_STATUS   Status;$/;"	m	struct:_IANS_BD_IOC_PARAM_STATUS
Status	include/click/task.hh	/^    union Status {$/;"	u	class:Task
StatusVersion	drivers/e1000-4.x/src/base_comm.h	/^    u32     StatusVersion;       \/* The version of this struct *\/$/;"	m	struct:_IANS_BD_PARAM_STATUS
Storage	include/click/standard/storage.hh	/^    Storage()				: _head(0), _tail(0) { }$/;"	f	class:Storage
Storage	include/click/standard/storage.hh	/^class Storage { public:$/;"	c
StoreData	elements/standard/storedata.cc	/^StoreData::StoreData()$/;"	f	class:StoreData
StoreData	elements/standard/storedata.hh	/^class StoreData : public Element { public:$/;"	c
StoreEtherAddress	elements/ethernet/storeetheraddress.cc	/^StoreEtherAddress::StoreEtherAddress()$/;"	f	class:StoreEtherAddress
StoreEtherAddress	elements/ethernet/storeetheraddress.hh	/^class StoreEtherAddress : public Element { public:$/;"	c
StoreIPAddress	elements/ip/storeipaddress.cc	/^StoreIPAddress::StoreIPAddress()$/;"	f	class:StoreIPAddress
StoreIPAddress	elements/ip/storeipaddress.hh	/^class StoreIPAddress : public Element { public:$/;"	c
StoreTimestamp	elements/analysis/storetimestamp.cc	/^StoreTimestamp::StoreTimestamp()$/;"	f	class:StoreTimestamp
StoreTimestamp	elements/analysis/storetimestamp.hh	/^class StoreTimestamp : public Element { public:$/;"	c
StoreUDPTimeSeqRecord	elements/analysis/storeudptimeseqrecord.cc	/^StoreUDPTimeSeqRecord::StoreUDPTimeSeqRecord()$/;"	f	class:StoreUDPTimeSeqRecord
StoreUDPTimeSeqRecord	elements/analysis/storeudptimeseqrecord.hh	/^class StoreUDPTimeSeqRecord : public Element$/;"	c
StrideSched	elements/standard/stridesched.cc	/^StrideSched::StrideSched()$/;"	f	class:StrideSched
StrideSched	elements/standard/stridesched.hh	/^class StrideSched : public Element { public:$/;"	c
StrideSwitch	elements/standard/strideswitch.cc	/^StrideSwitch::StrideSwitch()$/;"	f	class:StrideSwitch
StrideSwitch	elements/standard/strideswitch.hh	/^class StrideSwitch : public StrideSched { public:$/;"	c
String	include/click/string.hh	/^    explicit inline String(bool x) {$/;"	f	class:String
String	include/click/string.hh	/^    explicit inline String(char c) {$/;"	f	class:String
String	include/click/string.hh	/^    explicit inline String(unsigned char c) {$/;"	f	class:String
String	include/click/string.hh	/^    inline String() {$/;"	f	class:String
String	include/click/string.hh	/^    inline String(const String &x) {$/;"	f	class:String
String	include/click/string.hh	/^    inline String(const char *begin, const char *end) {$/;"	f	class:String
String	include/click/string.hh	/^    inline String(const char *cstr) {$/;"	f	class:String
String	include/click/string.hh	/^    inline String(const char *data, int length, memo_t *memo) {$/;"	f	class:String
String	include/click/string.hh	/^    inline String(const char *s, int len) {$/;"	f	class:String
String	include/click/string.hh	/^    inline String(const unsigned char *begin, const unsigned char *end) {$/;"	f	class:String
String	include/click/string.hh	/^class String { public:$/;"	c
String	lib/string.cc	/^String::String(double x)$/;"	f	class:String
String	lib/string.cc	/^String::String(int x)$/;"	f	class:String
String	lib/string.cc	/^String::String(int64_t x)$/;"	f	class:String
String	lib/string.cc	/^String::String(long long x)$/;"	f	class:String
String	lib/string.cc	/^String::String(long x)$/;"	f	class:String
String	lib/string.cc	/^String::String(uint64_t x)$/;"	f	class:String
String	lib/string.cc	/^String::String(unsigned long long x)$/;"	f	class:String
String	lib/string.cc	/^String::String(unsigned long x)$/;"	f	class:String
String	lib/string.cc	/^String::String(unsigned x)$/;"	f	class:String
StringAccum	include/click/straccum.hh	/^    StringAccum()$/;"	f	class:StringAccum
StringAccum	include/click/straccum.hh	/^    StringAccum(const String &str)$/;"	f	class:StringAccum
StringAccum	include/click/straccum.hh	/^    StringAccum(const StringAccum &x)$/;"	f	class:StringAccum
StringAccum	include/click/straccum.hh	/^StringAccum::StringAccum(int capacity)$/;"	f	class:StringAccum
StringAccum	include/click/straccum.hh	/^class StringAccum { public:$/;"	c
StringArg	include/click/args.hh	/^struct StringArg {$/;"	s
StringMap	tools/lib/routert.hh	/^typedef HashTable<String, int> StringMap;$/;"	t
StringUtils	apps/ClickController/StringUtils.java	/^public class StringUtils {$/;"	c
Strip	elements/standard/strip.cc	/^Strip::Strip()$/;"	f	class:Strip
Strip	elements/standard/strip.hh	/^class Strip : public Element { public:$/;"	c
StripAlignClass	tools/click-align/alignclass.cc	/^StripAlignClass::StripAlignClass(const String &name, bool is_strip)$/;"	f	class:StripAlignClass
StripAlignClass	tools/click-align/alignclass.hh	/^class StripAlignClass : public AlignClass {$/;"	c
StripDSRHeader	elements/grid/stripdsrheader.cc	/^StripDSRHeader::StripDSRHeader()$/;"	f	class:StripDSRHeader
StripDSRHeader	elements/grid/stripdsrheader.hh	/^class StripDSRHeader : public Element { public:$/;"	c
StripEtherVLANHeader	elements/ethernet/stripethervlanheader.cc	/^StripEtherVLANHeader::StripEtherVLANHeader()$/;"	f	class:StripEtherVLANHeader
StripEtherVLANHeader	elements/ethernet/stripethervlanheader.hh	/^class StripEtherVLANHeader : public Element { public:$/;"	c
StripIPHeader	elements/ip/stripipheader.cc	/^StripIPHeader::StripIPHeader()$/;"	f	class:StripIPHeader
StripIPHeader	elements/ip/stripipheader.hh	/^class StripIPHeader : public Element { public:$/;"	c
StripToNetworkHeader	elements/standard/striptonet.cc	/^StripToNetworkHeader::StripToNetworkHeader()$/;"	f	class:StripToNetworkHeader
StripToNetworkHeader	elements/standard/striptonet.hh	/^class StripToNetworkHeader : public Element { public:$/;"	c
Suppressor	elements/standard/suppressor.cc	/^Suppressor::Suppressor()$/;"	f	class:Suppressor
Suppressor	elements/standard/suppressor.hh	/^class Suppressor : public Element { public:$/;"	c
Suspended	drivers/e1000-4.x/src/base_comm.h	/^    u32     Suspended;           \/* Cast from IANS_BD_SUSPENDED_STAGE  *\/$/;"	m	struct:_IANS_BD_PARAM_STATUS
Switch	elements/standard/switch.cc	/^Switch::Switch()$/;"	f	class:Switch
Switch	elements/standard/switch.hh	/^class Switch : public Element { public:$/;"	c
SynchronizedPacketQueue	elements/local/OpenFlow/SynchronizedPacketQueue.hh	/^struct SynchronizedPacketQueue {$/;"	s
SynonymElementClassT	tools/lib/eclasst.cc	/^SynonymElementClassT::SynonymElementClassT(const String &name, ElementClassT *eclass, RouterT *declaration_scope)$/;"	f	class:SynonymElementClassT
SynonymElementClassT	tools/lib/eclasst.hh	/^class SynonymElementClassT : public ElementClassT { public:$/;"	c
T1	lib/md5.cc	68;"	d	file:
T10	lib/md5.cc	77;"	d	file:
T11	lib/md5.cc	78;"	d	file:
T12	lib/md5.cc	79;"	d	file:
T13	lib/md5.cc	80;"	d	file:
T14	lib/md5.cc	81;"	d	file:
T15	lib/md5.cc	82;"	d	file:
T16	lib/md5.cc	83;"	d	file:
T17	lib/md5.cc	84;"	d	file:
T18	lib/md5.cc	85;"	d	file:
T19	lib/md5.cc	86;"	d	file:
T2	lib/md5.cc	69;"	d	file:
T20	lib/md5.cc	87;"	d	file:
T21	lib/md5.cc	88;"	d	file:
T22	lib/md5.cc	89;"	d	file:
T23	lib/md5.cc	90;"	d	file:
T24	lib/md5.cc	91;"	d	file:
T25	lib/md5.cc	92;"	d	file:
T26	lib/md5.cc	93;"	d	file:
T27	lib/md5.cc	94;"	d	file:
T28	lib/md5.cc	95;"	d	file:
T29	lib/md5.cc	96;"	d	file:
T3	lib/md5.cc	70;"	d	file:
T30	lib/md5.cc	97;"	d	file:
T31	lib/md5.cc	98;"	d	file:
T32	lib/md5.cc	99;"	d	file:
T33	lib/md5.cc	100;"	d	file:
T34	lib/md5.cc	101;"	d	file:
T35	lib/md5.cc	102;"	d	file:
T36	lib/md5.cc	103;"	d	file:
T37	lib/md5.cc	104;"	d	file:
T38	lib/md5.cc	105;"	d	file:
T39	lib/md5.cc	106;"	d	file:
T4	lib/md5.cc	71;"	d	file:
T40	lib/md5.cc	107;"	d	file:
T41	lib/md5.cc	108;"	d	file:
T42	lib/md5.cc	109;"	d	file:
T43	lib/md5.cc	110;"	d	file:
T44	lib/md5.cc	111;"	d	file:
T45	lib/md5.cc	112;"	d	file:
T46	lib/md5.cc	113;"	d	file:
T47	lib/md5.cc	114;"	d	file:
T48	lib/md5.cc	115;"	d	file:
T49	lib/md5.cc	116;"	d	file:
T5	lib/md5.cc	72;"	d	file:
T50	lib/md5.cc	117;"	d	file:
T51	lib/md5.cc	118;"	d	file:
T52	lib/md5.cc	119;"	d	file:
T53	lib/md5.cc	120;"	d	file:
T54	lib/md5.cc	121;"	d	file:
T55	lib/md5.cc	122;"	d	file:
T56	lib/md5.cc	123;"	d	file:
T57	lib/md5.cc	124;"	d	file:
T58	lib/md5.cc	125;"	d	file:
T59	lib/md5.cc	126;"	d	file:
T6	lib/md5.cc	73;"	d	file:
T60	lib/md5.cc	127;"	d	file:
T61	lib/md5.cc	128;"	d	file:
T62	lib/md5.cc	129;"	d	file:
T63	lib/md5.cc	130;"	d	file:
T64	lib/md5.cc	131;"	d	file:
T7	lib/md5.cc	74;"	d	file:
T8	lib/md5.cc	75;"	d	file:
T9	lib/md5.cc	76;"	d	file:
TABLE_H	elements/local/OpenFlow/lib/table.hh	38;"	d
TABLE_HASH_MAX_FLOWS	elements/local/OpenFlow/lib/chain.hh	51;"	d
TABLE_LINEAR_MAX_FLOWS	elements/local/OpenFlow/lib/chain.hh	50;"	d
TABLE_MAC_MAX_FLOWS	elements/local/OpenFlow/lib/chain.hh	52;"	d
TABLE_MAC_NUM_BUCKETS	elements/local/OpenFlow/lib/chain.hh	53;"	d
TAG_MAX_LENGTH	drivers/e1000-4.x/src/e1000_proc.c	53;"	d	file:
TAMER_REF_HH	apps/clicky/src/ref.hh	2;"	d
TARGET	drivers/e1000-4.x/src/Makefile	/^TARGET = e1000.o$/;"	m
TARGET	drivers/e1000-5.x/src/Makefile	/^TARGET = e1000.ko$/;"	m
TARGET	drivers/e1000-5.x/src/Makefile	/^TARGET = e1000.o$/;"	m
TARGET	drivers/e1000-7.x/src/Makefile	/^TARGET = e1000.ko$/;"	m
TARGET	drivers/e1000-7.x/src/Makefile	/^TARGET = e1000.o$/;"	m
TARGETS	tools/Makefile	/^TARGETS =  click-align click-check click-combine click-devirtualize click-fastclassifier click-flatten click-mkmindriver click-pretty click-undead click-xform click2xml$/;"	m
TASKHANDLER_DEFAULT	include/click/element.hh	/^	   TASKHANDLER_DEFAULT = 6 };$/;"	e	enum:Element::__anon448
TASKHANDLER_WRITE_ALL	include/click/element.hh	/^	   TASKHANDLER_WRITE_ALL = 7,$/;"	e	enum:Element::__anon448
TASKHANDLER_WRITE_HOME_THREAD	include/click/element.hh	/^	   TASKHANDLER_WRITE_HOME_THREAD = 4,$/;"	e	enum:Element::__anon448
TASKHANDLER_WRITE_SCHEDULED	include/click/element.hh	/^    enum { TASKHANDLER_WRITE_SCHEDULED = 1,$/;"	e	enum:Element::__anon448
TASKHANDLER_WRITE_TICKETS	include/click/element.hh	/^	   TASKHANDLER_WRITE_TICKETS = 2,$/;"	e	enum:Element::__anon448
TASK_EPOCH_BUFSIZ	include/click/routerthread.hh	/^    enum { TASK_EPOCH_BUFSIZ = 32 };$/;"	e	enum:RouterThread::__anon424
TASK_PRIO	linuxmodule/sched.cc	52;"	d	file:
TBI_ACCEPT	drivers/e1000-4.x/src/e1000_hw.h	1498;"	d
TBI_ACCEPT	drivers/e1000-5.x/src/e1000_hw.h	1716;"	d
TBI_ACCEPT	drivers/e1000-7.x/src/e1000_hw.h	2536;"	d
TCPFlow	elements/tcpudp/tcprewriter.hh	/^	TCPFlow(const IPFlowID &flowid, int output,$/;"	f	class:TCPRewriter::TCPFlow
TCPFlow	elements/tcpudp/tcprewriter.hh	/^    class TCPFlow : public IPRewriterFlow { public:$/;"	c	class:TCPRewriter
TCPFragmenter	elements/tcpudp/tcpfragmenter.cc	/^TCPFragmenter::TCPFragmenter()$/;"	f	class:TCPFragmenter
TCPFragmenter	elements/tcpudp/tcpfragmenter.hh	/^class TCPFragmenter : public Element { public:$/;"	c
TCPIPSend	elements/tcpudp/tcpipsend.cc	/^TCPIPSend::TCPIPSend()$/;"	f	class:TCPIPSend
TCPIPSend	elements/tcpudp/tcpipsend.hh	/^class TCPIPSend : public Element {$/;"	c
TCPOLEN_MAXSEG	include/clicknet/tcp.h	69;"	d
TCPOLEN_SACK_PERMITTED	include/clicknet/tcp.h	73;"	d
TCPOLEN_TIMESTAMP	include/clicknet/tcp.h	76;"	d
TCPOLEN_WSCALE	include/clicknet/tcp.h	71;"	d
TCPOPT_EOL	include/clicknet/tcp.h	66;"	d
TCPOPT_MAXSEG	include/clicknet/tcp.h	68;"	d
TCPOPT_NOP	include/clicknet/tcp.h	67;"	d
TCPOPT_SACK	include/clicknet/tcp.h	74;"	d
TCPOPT_SACK_PERMITTED	include/clicknet/tcp.h	72;"	d
TCPOPT_TIMESTAMP	include/clicknet/tcp.h	75;"	d
TCPOPT_WSCALE	include/clicknet/tcp.h	70;"	d
TCPRewriter	elements/tcpudp/tcprewriter.cc	/^TCPRewriter::TCPRewriter()$/;"	f	class:TCPRewriter
TCPRewriter	elements/tcpudp/tcprewriter.hh	/^class TCPRewriter : public IPRewriterBase { public:$/;"	c
TCP_ACK	elements/local/OpenFlow/lib/packets.hh	244;"	d
TCP_FIN	elements/local/OpenFlow/lib/packets.hh	240;"	d
TCP_FLAGS	elements/local/OpenFlow/lib/packets.hh	247;"	d
TCP_HEADER_LEN	elements/local/OpenFlow/lib/packets.hh	250;"	d
TCP_OFFSET	elements/local/OpenFlow/lib/packets.hh	248;"	d
TCP_PSH	elements/local/OpenFlow/lib/packets.hh	243;"	d
TCP_RST	elements/local/OpenFlow/lib/packets.hh	242;"	d
TCP_SPACE	elements/ip/rfc2507c.hh	/^  enum { TCP_SPACE = 15 }; \/* max CID value for TCP. 3..255 are legal. *\/$/;"	e	enum:RFC2507c::__anon354
TCP_SPACE	elements/ip/rfc2507d.hh	/^  enum { TCP_SPACE = 15 }; \/* max CID value for TCP. 3..255 are legal. *\/$/;"	e	enum:RFC2507d::__anon336
TCP_SYN	elements/local/OpenFlow/lib/packets.hh	241;"	d
TCP_URG	elements/local/OpenFlow/lib/packets.hh	245;"	d
TEMPLATE_OPT	tools/click-pretty/click-pretty.cc	44;"	d	file:
TEMPLATE_TEXT_OPT	tools/click-pretty/click-pretty.cc	51;"	d	file:
TESTSIM_IFID_FIRSTIF	ns/nsclick-test.cc	/^const int TESTSIM_IFID_FIRSTIF=1;$/;"	v
TESTSIM_IFID_KERNELTAP	ns/nsclick-test.cc	/^const int TESTSIM_IFID_KERNELTAP=0;$/;"	v
THIS_MODULE	elements/local/OpenFlow/datapath.cc	84;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/chain.cc	42;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/dpif.cc	56;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/flow.cc	45;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/leak-checker.cc	38;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/netlink.cc	55;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/of_ext_msg.cc	41;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/pcap.cc	43;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/poll-loop.cc	45;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/rconn.cc	50;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/socket-util.cc	54;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/stp.cc	48;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/svec.cc	43;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/switch-flow.cc	46;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/vconn-netlink.cc	57;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/vconn-ssl.cc	62;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/vconn-stream.cc	53;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/vconn-tcp.cc	52;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/vconn-unix.cc	56;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/vconn.cc	52;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/vlog-socket.cc	58;"	d	file:
THIS_MODULE	elements/local/OpenFlow/lib/vlog.cc	51;"	d	file:
THREADS_OPT	tools/click-install/click-install.cc	61;"	d	file:
THREADS_OPT	userlevel/click.cc	73;"	d	file:
THREAD_QUIESCENT	include/click/routerthread.hh	/^    enum { THREAD_QUIESCENT = -1, THREAD_UNKNOWN = -1000 };$/;"	e	enum:RouterThread::__anon421
THREAD_QUIESCENT	include/click/standard/threadsched.hh	/^    enum { THREAD_QUIESCENT = -1, THREAD_UNKNOWN = -1000 };$/;"	e	enum:ThreadSched::__anon415
THREAD_UNKNOWN	include/click/routerthread.hh	/^    enum { THREAD_QUIESCENT = -1, THREAD_UNKNOWN = -1000 };$/;"	e	enum:RouterThread::__anon421
THREAD_UNKNOWN	include/click/standard/threadsched.hh	/^    enum { THREAD_QUIESCENT = -1, THREAD_UNKNOWN = -1000 };$/;"	e	enum:ThreadSched::__anon415
THRESHMETRIC_HH	elements/grid/threshmetric.hh	2;"	d
TH_ACK	include/clicknet/tcp.h	44;"	d
TH_CWR	include/clicknet/tcp.h	47;"	d
TH_ECE	include/clicknet/tcp.h	46;"	d
TH_FIN	include/clicknet/tcp.h	40;"	d
TH_NS	include/clicknet/tcp.h	38;"	d
TH_PUSH	include/clicknet/tcp.h	43;"	d
TH_RST	include/clicknet/tcp.h	42;"	d
TH_SYN	include/clicknet/tcp.h	41;"	d
TH_URG	include/clicknet/tcp.h	45;"	d
TIMEOUT	elements/grid/gridgenericlogger.hh	/^    TIMEOUT           = 0xf4,$/;"	e	enum:GridGenericLogger::reason_t
TIMESTAMP_MATH_FLAT64	include/click/timestamp.hh	69;"	d
TIMESTAMP_NANOSEC	include/click/config-userlevel.h	308;"	d
TIMESTAMP_NANOSEC	include/click/timestamp.hh	55;"	d
TIMESTAMP_PUNS_TIMESPEC	include/click/timestamp.hh	81;"	d
TIMESTAMP_PUNS_TIMEVAL	include/click/timestamp.hh	79;"	d
TIMESTAMP_REP_BIG_ENDIAN	include/click/timestamp.hh	28;"	d
TIMESTAMP_REP_BIG_ENDIAN	include/click/timestamp.hh	32;"	d
TIMESTAMP_REP_BIG_ENDIAN	include/click/timestamp.hh	41;"	d
TIMESTAMP_REP_FLAT64	include/click/timestamp.hh	30;"	d
TIMESTAMP_REP_FLAT64	include/click/timestamp.hh	37;"	d
TIMESTAMP_REP_LITTLE_ENDIAN	include/click/timestamp.hh	34;"	d
TIMESTAMP_REP_LITTLE_ENDIAN	include/click/timestamp.hh	39;"	d
TIMESTAMP_VALUE_INT64	include/click/timestamp.hh	94;"	d
TIMESTAMP_VALUE_INT64	include/click/timestamp.hh	96;"	d
TIMEUTIL_H	elements/grid/timeutils.hh	8;"	d
TIMEVAL_H	elements/local/OpenFlow/lib/timeval.hh	35;"	d
TIME_MAX	elements/local/OpenFlow/lib/timeval.hh	57;"	d
TIME_MIN	elements/local/OpenFlow/lib/timeval.hh	58;"	d
TIME_OPT	ns/nsclick.cc	61;"	d	file:
TIME_OPT	userlevel/click.cc	66;"	d	file:
TIME_UPDATE_INTERVAL	elements/local/OpenFlow/lib/timeval.hh	64;"	d
TINY	elements/grid/amoeba.cc	28;"	d	file:
TL_MAX_FLOW	elements/local/FlowNet/common/FlowCommon.hh	7;"	d
TMIter	elements/grid/dsdvroutetable.hh	/^  typedef TMap::iterator TMIter;$/;"	t	class:DSDVRouteTable
TMap	elements/grid/dsdvroutetable.hh	/^  typedef HashMap<IPAddress, Timer *> TMap;$/;"	t	class:DSDVRouteTable
TODEVICE_ALLOW_DEVBPF	elements/userlevel/todevice.hh	76;"	d
TODEVICE_ALLOW_LINUX	elements/userlevel/todevice.hh	67;"	d
TODEVICE_ALLOW_PCAP	elements/userlevel/todevice.hh	73;"	d
TODEVICE_ALLOW_PCAPFD	elements/userlevel/todevice.hh	78;"	d
TOOLBAR_OPT	apps/clicky/src/clicky.cc	45;"	d	file:
TOOLDIRS	tools/Makefile	/^TOOLDIRS =  click-align click-check click-combine click-devirtualize click-fastclassifier click-flatten click-mkmindriver click-pretty click-undead click-xform click2xml click-install$/;"	m
TRUE	drivers/e1000-4.x/src/e1000_osdep.h	/^    TRUE = 1$/;"	e	enum:__anon35
TRUE	drivers/e1000-5.x/src/e1000_osdep.h	/^    TRUE = 1$/;"	e	enum:__anon126
TRUE	drivers/e1000-5.x/src/e1000_osdep.h	63;"	d
TRUE	drivers/e1000-7.x/src/e1000_osdep.h	/^    TRUE = 1$/;"	e	enum:__anon70
TRUE	drivers/e1000-7.x/src/e1000_osdep.h	68;"	d
TRUNCATED_CODE	elements/grid/gridlogger.hh	/^  static const unsigned char TRUNCATED_CODE             = 0x06;$/;"	m	class:GridLogger
TRY	elements/linuxmodule/perfcountuser.cc	39;"	d	file:
TRY	elements/linuxmodule/perfcountuser.cc	54;"	d	file:
TSHCell	elements/analysis/fromnlanrdump.hh	/^    struct TSHCell {$/;"	s	class:FromNLANRDump
TUNNEL_TYPE	include/click/lexer.hh	/^    enum { TUNNEL_TYPE = 0, ERROR_TYPE = 1 };$/;"	e	enum:Lexer::__anon444
TXD_USE_COUNT	drivers/e1000-4.x/src/e1000_main.c	1573;"	d	file:
TXD_USE_COUNT	drivers/e1000-5.x/src/e1000_main.c	1986;"	d	file:
TXD_USE_COUNT	drivers/e1000-7.x/src/e1000_main.c	3420;"	d	file:
TXQ_LIMIT	elements/local/OpenFlow/RConn.hh	68;"	d
TX_ERR_CODE	elements/grid/gridlogger.hh	/^  static const unsigned char TX_ERR_CODE                = 0x0B;$/;"	m	class:GridLogger
TX_THRESHOLD_DECREMENT	drivers/e1000-4.x/src/e1000_hw.h	1396;"	d
TX_THRESHOLD_DECREMENT	drivers/e1000-5.x/src/e1000_hw.h	1617;"	d
TX_THRESHOLD_DECREMENT	drivers/e1000-7.x/src/e1000_hw.h	2407;"	d
TX_THRESHOLD_DISABLE	drivers/e1000-4.x/src/e1000_hw.h	1398;"	d
TX_THRESHOLD_DISABLE	drivers/e1000-5.x/src/e1000_hw.h	1619;"	d
TX_THRESHOLD_DISABLE	drivers/e1000-7.x/src/e1000_hw.h	2409;"	d
TX_THRESHOLD_INCREMENT	drivers/e1000-4.x/src/e1000_hw.h	1395;"	d
TX_THRESHOLD_INCREMENT	drivers/e1000-5.x/src/e1000_hw.h	1616;"	d
TX_THRESHOLD_INCREMENT	drivers/e1000-7.x/src/e1000_hw.h	2406;"	d
TX_THRESHOLD_START	drivers/e1000-4.x/src/e1000_hw.h	1394;"	d
TX_THRESHOLD_START	drivers/e1000-5.x/src/e1000_hw.h	1615;"	d
TX_THRESHOLD_START	drivers/e1000-7.x/src/e1000_hw.h	2405;"	d
TX_THRESHOLD_STOP	drivers/e1000-4.x/src/e1000_hw.h	1397;"	d
TX_THRESHOLD_STOP	drivers/e1000-5.x/src/e1000_hw.h	1618;"	d
TX_THRESHOLD_STOP	drivers/e1000-7.x/src/e1000_hw.h	2408;"	d
TX_THRESHOLD_TIMER_MS	drivers/e1000-4.x/src/e1000_hw.h	1399;"	d
TX_THRESHOLD_TIMER_MS	drivers/e1000-5.x/src/e1000_hw.h	1620;"	d
TX_THRESHOLD_TIMER_MS	drivers/e1000-7.x/src/e1000_hw.h	2410;"	d
TX_WAKE_THRESHOLD	drivers/e1000-7.x/src/e1000_main.c	4241;"	d	file:
TYPE_AAL5	elements/analysis/fromdagdump.hh	/^	       TYPE_AAL5 = 4, TYPE_MAX = TYPE_AAL5 };$/;"	e	enum:FromDAGDump::DAGCell::__anon272
TYPE_ATM	elements/analysis/fromdagdump.hh	/^	enum { TYPE_LEGACY = 0, TYPE_HDLC_POS = 1, TYPE_ETH = 2, TYPE_ATM = 3,$/;"	e	enum:FromDAGDump::DAGCell::__anon272
TYPE_ETH	elements/analysis/fromdagdump.hh	/^	enum { TYPE_LEGACY = 0, TYPE_HDLC_POS = 1, TYPE_ETH = 2, TYPE_ATM = 3,$/;"	e	enum:FromDAGDump::DAGCell::__anon272
TYPE_ETHER	elements/ip/ipfilter.hh	/^	TYPE_ETHER	= 15,$/;"	e	enum:IPFilter::__anon347
TYPE_FIELD	elements/ip/ipfilter.hh	/^	TYPE_FIELD	= 0x40000000,$/;"	e	enum:IPFilter::__anon347
TYPE_HDLC_POS	elements/analysis/fromdagdump.hh	/^	enum { TYPE_LEGACY = 0, TYPE_HDLC_POS = 1, TYPE_ETH = 2, TYPE_ATM = 3,$/;"	e	enum:FromDAGDump::DAGCell::__anon272
TYPE_HOST	elements/ip/ipfilter.hh	/^	TYPE_HOST	= 10,		\/\/ expression types$/;"	e	enum:IPFilter::__anon347
TYPE_INT	elements/ip/ipfilter.hh	/^	TYPE_INT	= 3,$/;"	e	enum:IPFilter::__anon347
TYPE_IPCE	elements/ip/ipfilter.hh	/^	TYPE_IPCE	= 33,$/;"	e	enum:IPFilter::__anon347
TYPE_IPECT	elements/ip/ipfilter.hh	/^	TYPE_IPECT	= 32,$/;"	e	enum:IPFilter::__anon347
TYPE_IPFRAG	elements/ip/ipfilter.hh	/^	TYPE_IPFRAG	= 12,$/;"	e	enum:IPFilter::__anon347
TYPE_IPUNFRAG	elements/ip/ipfilter.hh	/^	TYPE_IPUNFRAG	= 31,$/;"	e	enum:IPFilter::__anon347
TYPE_IS_INTEGER	elements/local/OpenFlow/lib/type-props.hh	40;"	d
TYPE_IS_SIGNED	elements/local/OpenFlow/lib/type-props.hh	41;"	d
TYPE_LEGACY	elements/analysis/fromdagdump.hh	/^	enum { TYPE_LEGACY = 0, TYPE_HDLC_POS = 1, TYPE_ETH = 2, TYPE_ATM = 3,$/;"	e	enum:FromDAGDump::DAGCell::__anon272
TYPE_MAX	elements/analysis/fromdagdump.hh	/^	       TYPE_AAL5 = 4, TYPE_MAX = TYPE_AAL5 };$/;"	e	enum:FromDAGDump::DAGCell::__anon272
TYPE_MAXIMUM	elements/local/OpenFlow/lib/type-props.hh	46;"	d
TYPE_MINIMUM	elements/local/OpenFlow/lib/type-props.hh	43;"	d
TYPE_NET	elements/ip/ipfilter.hh	/^	TYPE_NET	= 30,		\/\/ shorthands$/;"	e	enum:IPFilter::__anon347
TYPE_NONE	elements/ip/ipfilter.hh	/^	TYPE_NONE	= 0,		\/\/ data types$/;"	e	enum:IPFilter::__anon347
TYPE_PORT	elements/ip/ipfilter.hh	/^	TYPE_PORT	= 13,$/;"	e	enum:IPFilter::__anon347
TYPE_PROPS_H	elements/local/OpenFlow/lib/type-props.hh	35;"	d
TYPE_PROTO	elements/ip/ipfilter.hh	/^	TYPE_PROTO	= 11,$/;"	e	enum:IPFilter::__anon347
TYPE_SYNTAX	elements/ip/ipfilter.hh	/^	TYPE_SYNTAX	= 2,$/;"	e	enum:IPFilter::__anon347
TYPE_TCPOPT	elements/ip/ipfilter.hh	/^	TYPE_TCPOPT	= 14,$/;"	e	enum:IPFilter::__anon347
TYPE_TYPE	elements/ip/ipfilter.hh	/^	TYPE_TYPE	= 1,$/;"	e	enum:IPFilter::__anon347
TYPE_VALUE_BITS	elements/local/OpenFlow/lib/type-props.hh	42;"	d
T_AGGREGATE	elements/analysis/ipsumdump_anno.cc	/^       T_FIRST_TIMESTAMP, T_COUNT, T_LINK, T_DIRECTION, T_AGGREGATE,$/;"	e	enum:__anon268	file:
T_ANNOTATION	include/click/nameinfo.hh	/^	T_ANNOTATION = 0x00000002,	\/\/\/< Packet annotation database$/;"	e	enum:NameInfo::DBType
T_COUNT	elements/analysis/ipsumdump_anno.cc	/^       T_FIRST_TIMESTAMP, T_COUNT, T_LINK, T_DIRECTION, T_AGGREGATE,$/;"	e	enum:__anon268	file:
T_DIRECTION	elements/analysis/ipsumdump_anno.cc	/^       T_FIRST_TIMESTAMP, T_COUNT, T_LINK, T_DIRECTION, T_AGGREGATE,$/;"	e	enum:__anon268	file:
T_DPORT	elements/analysis/ipsumdump_ip.cc	/^       T_SPORT, T_DPORT, T_IP_HL, T_IP_DSCP, T_IP_ECN };$/;"	e	enum:__anon251	file:
T_ETHERNET_ADDR	include/click/nameinfo.hh	/^	T_ETHERNET_ADDR = 0x01000001,	\/\/\/< Ethernet address names database$/;"	e	enum:NameInfo::DBType
T_ETH_DST	elements/analysis/ipsumdump_link.cc	/^enum { T_ETH_SRC, T_ETH_DST, T_ETH_TYPE };$/;"	e	enum:__anon279	file:
T_ETH_SRC	elements/analysis/ipsumdump_link.cc	/^enum { T_ETH_SRC, T_ETH_DST, T_ETH_TYPE };$/;"	e	enum:__anon279	file:
T_ETH_TYPE	elements/analysis/ipsumdump_link.cc	/^enum { T_ETH_SRC, T_ETH_DST, T_ETH_TYPE };$/;"	e	enum:__anon279	file:
T_FIRST_TIMESTAMP	elements/analysis/ipsumdump_anno.cc	/^       T_FIRST_TIMESTAMP, T_COUNT, T_LINK, T_DIRECTION, T_AGGREGATE,$/;"	e	enum:__anon268	file:
T_ICMP_CODE	elements/analysis/ipsumdump_icmp.cc	/^enum { T_ICMP_TYPE, T_ICMP_TYPE_NAME, T_ICMP_CODE, T_ICMP_CODE_NAME,$/;"	e	enum:IPSummaryDump::__anon289	file:
T_ICMP_CODE	include/click/nameinfo.hh	/^	T_ICMP_CODE = 0x04010100,	\/\/\/< ICMP code names database$/;"	e	enum:NameInfo::DBType
T_ICMP_CODE_NAME	elements/analysis/ipsumdump_icmp.cc	/^enum { T_ICMP_TYPE, T_ICMP_TYPE_NAME, T_ICMP_CODE, T_ICMP_CODE_NAME,$/;"	e	enum:IPSummaryDump::__anon289	file:
T_ICMP_FIELDNAME	include/click/nameinfo.hh	/^	T_ICMP_FIELDNAME = 0x04030001,	\/\/\/< ICMP field names database$/;"	e	enum:NameInfo::DBType
T_ICMP_FLOWID	elements/analysis/ipsumdump_icmp.cc	/^       T_ICMP_FLOWID, T_ICMP_SEQ, T_ICMP_NEXTMTU };$/;"	e	enum:IPSummaryDump::__anon289	file:
T_ICMP_NEXTMTU	elements/analysis/ipsumdump_icmp.cc	/^       T_ICMP_FLOWID, T_ICMP_SEQ, T_ICMP_NEXTMTU };$/;"	e	enum:IPSummaryDump::__anon289	file:
T_ICMP_SEQ	elements/analysis/ipsumdump_icmp.cc	/^       T_ICMP_FLOWID, T_ICMP_SEQ, T_ICMP_NEXTMTU };$/;"	e	enum:IPSummaryDump::__anon289	file:
T_ICMP_TYPE	elements/analysis/ipsumdump_icmp.cc	/^enum { T_ICMP_TYPE, T_ICMP_TYPE_NAME, T_ICMP_CODE, T_ICMP_CODE_NAME,$/;"	e	enum:IPSummaryDump::__anon289	file:
T_ICMP_TYPE	include/click/nameinfo.hh	/^	T_ICMP_TYPE = 0x04010000,	\/\/\/< ICMP type names database$/;"	e	enum:NameInfo::DBType
T_ICMP_TYPE_NAME	elements/analysis/ipsumdump_icmp.cc	/^enum { T_ICMP_TYPE, T_ICMP_TYPE_NAME, T_ICMP_CODE, T_ICMP_CODE_NAME,$/;"	e	enum:IPSummaryDump::__anon289	file:
T_IP6_ADDR	include/click/nameinfo.hh	/^	T_IP6_ADDR = 0x06000001,	\/\/\/< IPv6 address names database$/;"	e	enum:NameInfo::DBType
T_IP6_PREFIX	include/click/nameinfo.hh	/^	T_IP6_PREFIX = 0x06000002	\/\/\/< IPv6 prefix names database$/;"	e	enum:NameInfo::DBType
T_IPFILTER_TYPE	include/click/nameinfo.hh	/^	T_IPFILTER_TYPE = 0x04000004,	\/\/\/< IPFilter instruction names database$/;"	e	enum:NameInfo::DBType
T_IPREWRITER_PATTERN	include/click/nameinfo.hh	/^	T_IPREWRITER_PATTERN = 0x04000006, \/\/\/< IPRewriterPattern database$/;"	e	enum:NameInfo::DBType
T_IP_ADDR	include/click/nameinfo.hh	/^	T_IP_ADDR = 0x04000001,		\/\/\/< IP address names database$/;"	e	enum:NameInfo::DBType
T_IP_CAPTURE_LEN	elements/analysis/ipsumdump_ip.cc	/^       T_IP_ID, T_IP_SUM, T_IP_PROTO, T_IP_OPT, T_IP_LEN, T_IP_CAPTURE_LEN,$/;"	e	enum:__anon251	file:
T_IP_DSCP	elements/analysis/ipsumdump_ip.cc	/^       T_SPORT, T_DPORT, T_IP_HL, T_IP_DSCP, T_IP_ECN };$/;"	e	enum:__anon251	file:
T_IP_DST	elements/analysis/ipsumdump_ip.cc	/^enum { T_IP_SRC, T_IP_DST, T_IP_TOS, T_IP_TTL, T_IP_FRAG, T_IP_FRAGOFF,$/;"	e	enum:__anon251	file:
T_IP_ECN	elements/analysis/ipsumdump_ip.cc	/^       T_SPORT, T_DPORT, T_IP_HL, T_IP_DSCP, T_IP_ECN };$/;"	e	enum:__anon251	file:
T_IP_FIELDNAME	include/click/nameinfo.hh	/^	T_IP_FIELDNAME = 0x04030000,	\/\/\/< Starting point for IP per-protocol field names databases$/;"	e	enum:NameInfo::DBType
T_IP_FRAG	elements/analysis/ipsumdump_ip.cc	/^enum { T_IP_SRC, T_IP_DST, T_IP_TOS, T_IP_TTL, T_IP_FRAG, T_IP_FRAGOFF,$/;"	e	enum:__anon251	file:
T_IP_FRAGOFF	elements/analysis/ipsumdump_ip.cc	/^enum { T_IP_SRC, T_IP_DST, T_IP_TOS, T_IP_TTL, T_IP_FRAG, T_IP_FRAGOFF,$/;"	e	enum:__anon251	file:
T_IP_HL	elements/analysis/ipsumdump_ip.cc	/^       T_SPORT, T_DPORT, T_IP_HL, T_IP_DSCP, T_IP_ECN };$/;"	e	enum:__anon251	file:
T_IP_ID	elements/analysis/ipsumdump_ip.cc	/^       T_IP_ID, T_IP_SUM, T_IP_PROTO, T_IP_OPT, T_IP_LEN, T_IP_CAPTURE_LEN,$/;"	e	enum:__anon251	file:
T_IP_LEN	elements/analysis/ipsumdump_ip.cc	/^       T_IP_ID, T_IP_SUM, T_IP_PROTO, T_IP_OPT, T_IP_LEN, T_IP_CAPTURE_LEN,$/;"	e	enum:__anon251	file:
T_IP_OPT	elements/analysis/ipsumdump_ip.cc	/^       T_IP_ID, T_IP_SUM, T_IP_PROTO, T_IP_OPT, T_IP_LEN, T_IP_CAPTURE_LEN,$/;"	e	enum:__anon251	file:
T_IP_PORT	include/click/nameinfo.hh	/^	T_IP_PORT = 0x04020000,		\/\/\/< Starting point for IP per-protocol port names databases$/;"	e	enum:NameInfo::DBType
T_IP_PREFIX	include/click/nameinfo.hh	/^	T_IP_PREFIX = 0x04000002,	\/\/\/< IP prefix names database$/;"	e	enum:NameInfo::DBType
T_IP_PROTO	elements/analysis/ipsumdump_ip.cc	/^       T_IP_ID, T_IP_SUM, T_IP_PROTO, T_IP_OPT, T_IP_LEN, T_IP_CAPTURE_LEN,$/;"	e	enum:__anon251	file:
T_IP_PROTO	include/click/nameinfo.hh	/^	T_IP_PROTO = 0x04000003,	\/\/\/< IP protocol names database$/;"	e	enum:NameInfo::DBType
T_IP_SRC	elements/analysis/ipsumdump_ip.cc	/^enum { T_IP_SRC, T_IP_DST, T_IP_TOS, T_IP_TTL, T_IP_FRAG, T_IP_FRAGOFF,$/;"	e	enum:__anon251	file:
T_IP_SUM	elements/analysis/ipsumdump_ip.cc	/^       T_IP_ID, T_IP_SUM, T_IP_PROTO, T_IP_OPT, T_IP_LEN, T_IP_CAPTURE_LEN,$/;"	e	enum:__anon251	file:
T_IP_TOS	elements/analysis/ipsumdump_ip.cc	/^enum { T_IP_SRC, T_IP_DST, T_IP_TOS, T_IP_TTL, T_IP_FRAG, T_IP_FRAGOFF,$/;"	e	enum:__anon251	file:
T_IP_TTL	elements/analysis/ipsumdump_ip.cc	/^enum { T_IP_SRC, T_IP_DST, T_IP_TOS, T_IP_TTL, T_IP_FRAG, T_IP_FRAGOFF,$/;"	e	enum:__anon251	file:
T_LINK	elements/analysis/ipsumdump_anno.cc	/^       T_FIRST_TIMESTAMP, T_COUNT, T_LINK, T_DIRECTION, T_AGGREGATE,$/;"	e	enum:__anon268	file:
T_MASK	lib/md5.cc	67;"	d	file:
T_NONE	include/click/nameinfo.hh	/^	T_NONE = 0,			\/\/\/< Nonexistent names database$/;"	e	enum:NameInfo::DBType
T_PAYLOAD	elements/analysis/ipsumdump_payload.cc	/^enum { T_PAYLOAD_LEN, T_PAYLOAD, T_PAYLOAD_MD5, T_PAYLOAD_MD5_HEX };$/;"	e	enum:IPSummaryDump::__anon299	file:
T_PAYLOAD_LEN	elements/analysis/ipsumdump_payload.cc	/^enum { T_PAYLOAD_LEN, T_PAYLOAD, T_PAYLOAD_MD5, T_PAYLOAD_MD5_HEX };$/;"	e	enum:IPSummaryDump::__anon299	file:
T_PAYLOAD_MD5	elements/analysis/ipsumdump_payload.cc	/^enum { T_PAYLOAD_LEN, T_PAYLOAD, T_PAYLOAD_MD5, T_PAYLOAD_MD5_HEX };$/;"	e	enum:IPSummaryDump::__anon299	file:
T_PAYLOAD_MD5_HEX	elements/analysis/ipsumdump_payload.cc	/^enum { T_PAYLOAD_LEN, T_PAYLOAD, T_PAYLOAD_MD5, T_PAYLOAD_MD5_HEX };$/;"	e	enum:IPSummaryDump::__anon299	file:
T_SCHEDULEINFO	include/click/nameinfo.hh	/^	T_SCHEDULEINFO = 0x00000001,	\/\/\/< ScheduleInfo database$/;"	e	enum:NameInfo::DBType
T_SCRIPT_INSN	include/click/nameinfo.hh	/^	T_SCRIPT_INSN = 0x00000003,	\/\/\/< Script instruction names database$/;"	e	enum:NameInfo::DBType
T_SIGNO	include/click/nameinfo.hh	/^	T_SIGNO = 0x00000004,		\/\/\/< User-level signal names database$/;"	e	enum:NameInfo::DBType
T_SPINLOCK	include/click/nameinfo.hh	/^	T_SPINLOCK = 0x00000005,	\/\/\/< Spinlock names database$/;"	e	enum:NameInfo::DBType
T_SPORT	elements/analysis/ipsumdump_ip.cc	/^       T_SPORT, T_DPORT, T_IP_HL, T_IP_DSCP, T_IP_ECN };$/;"	e	enum:__anon251	file:
T_TCP_ACK	elements/analysis/ipsumdump_tcp.cc	/^enum { T_TCP_SEQ, T_TCP_ACK, T_TCP_FLAGS, T_TCP_WINDOW, T_TCP_URP, T_TCP_OPT,$/;"	e	enum:IPSummaryDump::__anon269	file:
T_TCP_FIELDNAME	include/click/nameinfo.hh	/^	T_TCP_FIELDNAME = 0x04030006,	\/\/\/< TCP field names database$/;"	e	enum:NameInfo::DBType
T_TCP_FLAGS	elements/analysis/ipsumdump_tcp.cc	/^enum { T_TCP_SEQ, T_TCP_ACK, T_TCP_FLAGS, T_TCP_WINDOW, T_TCP_URP, T_TCP_OPT,$/;"	e	enum:IPSummaryDump::__anon269	file:
T_TCP_NTOPT	elements/analysis/ipsumdump_tcp.cc	/^       T_TCP_NTOPT, T_TCP_SACK, T_TCP_OFF };$/;"	e	enum:IPSummaryDump::__anon269	file:
T_TCP_OFF	elements/analysis/ipsumdump_tcp.cc	/^       T_TCP_NTOPT, T_TCP_SACK, T_TCP_OFF };$/;"	e	enum:IPSummaryDump::__anon269	file:
T_TCP_OPT	elements/analysis/ipsumdump_tcp.cc	/^enum { T_TCP_SEQ, T_TCP_ACK, T_TCP_FLAGS, T_TCP_WINDOW, T_TCP_URP, T_TCP_OPT,$/;"	e	enum:IPSummaryDump::__anon269	file:
T_TCP_OPT	include/click/nameinfo.hh	/^	T_TCP_OPT = 0x04000005,		\/\/\/< TCP option names database$/;"	e	enum:NameInfo::DBType
T_TCP_PORT	include/click/nameinfo.hh	/^	T_TCP_PORT = 0x04020006,	\/\/\/< TCP port names database$/;"	e	enum:NameInfo::DBType
T_TCP_SACK	elements/analysis/ipsumdump_tcp.cc	/^       T_TCP_NTOPT, T_TCP_SACK, T_TCP_OFF };$/;"	e	enum:IPSummaryDump::__anon269	file:
T_TCP_SEQ	elements/analysis/ipsumdump_tcp.cc	/^enum { T_TCP_SEQ, T_TCP_ACK, T_TCP_FLAGS, T_TCP_WINDOW, T_TCP_URP, T_TCP_OPT,$/;"	e	enum:IPSummaryDump::__anon269	file:
T_TCP_URP	elements/analysis/ipsumdump_tcp.cc	/^enum { T_TCP_SEQ, T_TCP_ACK, T_TCP_FLAGS, T_TCP_WINDOW, T_TCP_URP, T_TCP_OPT,$/;"	e	enum:IPSummaryDump::__anon269	file:
T_TCP_WINDOW	elements/analysis/ipsumdump_tcp.cc	/^enum { T_TCP_SEQ, T_TCP_ACK, T_TCP_FLAGS, T_TCP_WINDOW, T_TCP_URP, T_TCP_OPT,$/;"	e	enum:IPSummaryDump::__anon269	file:
T_TIMESTAMP	elements/analysis/ipsumdump_anno.cc	/^enum { T_TIMESTAMP, T_TIMESTAMP_SEC, T_TIMESTAMP_USEC, T_TIMESTAMP_USEC1,$/;"	e	enum:__anon268	file:
T_TIMESTAMP_SEC	elements/analysis/ipsumdump_anno.cc	/^enum { T_TIMESTAMP, T_TIMESTAMP_SEC, T_TIMESTAMP_USEC, T_TIMESTAMP_USEC1,$/;"	e	enum:__anon268	file:
T_TIMESTAMP_USEC	elements/analysis/ipsumdump_anno.cc	/^enum { T_TIMESTAMP, T_TIMESTAMP_SEC, T_TIMESTAMP_USEC, T_TIMESTAMP_USEC1,$/;"	e	enum:__anon268	file:
T_TIMESTAMP_USEC1	elements/analysis/ipsumdump_anno.cc	/^enum { T_TIMESTAMP, T_TIMESTAMP_SEC, T_TIMESTAMP_USEC, T_TIMESTAMP_USEC1,$/;"	e	enum:__anon268	file:
T_UDP_FIELDNAME	include/click/nameinfo.hh	/^	T_UDP_FIELDNAME = 0x04030011,	\/\/\/< UDP field names database$/;"	e	enum:NameInfo::DBType
T_UDP_LEN	elements/analysis/ipsumdump_udp.cc	/^enum { T_UDP_LEN };$/;"	e	enum:IPSummaryDump::__anon278	file:
T_UDP_PORT	include/click/nameinfo.hh	/^	T_UDP_PORT = 0x04020011,	\/\/\/< UDP port names database$/;"	e	enum:NameInfo::DBType
T_WIRE_LEN	elements/analysis/ipsumdump_anno.cc	/^       T_WIRE_LEN };$/;"	e	enum:__anon268	file:
Table	elements/ethernet/arptable.hh	/^    typedef HashContainer<ARPEntry> Table;$/;"	t	class:ARPTable
Table	elements/etherswitch/etherswitch.hh	/^    typedef HashTable<EtherAddress, AddrInfo> Table;$/;"	t	class:EtherSwitch
Table	elements/grid/loctable.hh	/^  typedef HashMap<IPAddress, entry> Table;$/;"	t	class:LocationTable
Table	elements/grid/updateroutes.hh	/^  typedef HashMap<IPAddress, NbrEntry> Table;$/;"	t	class:UpdateGridRoutes
Table	elements/ip/directiplookup.hh	/^	Table()$/;"	f	struct:DirectIPLookup::Table
Table	elements/ip/directiplookup.hh	/^    struct Table {$/;"	s	class:DirectIPLookup
Task	include/click/task.hh	/^Task::Task(Element* e)$/;"	f	class:Task
Task	include/click/task.hh	/^Task::Task(TaskCallback f, void *user_data)$/;"	f	class:Task
Task	include/click/task.hh	/^class Task : private TaskLink { public:$/;"	c
TaskCallback	include/click/task.hh	/^typedef bool (*TaskCallback)(Task *, void *);$/;"	t
TaskLink	include/click/task.hh	/^    TaskLink() {$/;"	f	struct:TaskLink
TaskLink	include/click/task.hh	/^struct TaskLink {$/;"	s
Td0	elements/ipsec/aes.cc	/^static const unsigned long Td0[256] = {$/;"	v	file:
Td1	elements/ipsec/aes.cc	/^static const unsigned long Td1[256] = {$/;"	v	file:
Td2	elements/ipsec/aes.cc	/^static const unsigned long Td2[256] = {$/;"	v	file:
Td3	elements/ipsec/aes.cc	/^static const unsigned long Td3[256] = {$/;"	v	file:
Td4	elements/ipsec/aes.cc	/^static const unsigned long Td4[256] = {$/;"	v	file:
Te0	elements/ipsec/aes.cc	/^static const unsigned long Te0[256] = {$/;"	v	file:
Te1	elements/ipsec/aes.cc	/^static const unsigned long Te1[256] = {$/;"	v	file:
Te2	elements/ipsec/aes.cc	/^static const unsigned long Te2[256] = {$/;"	v	file:
Te3	elements/ipsec/aes.cc	/^static const unsigned long Te3[256] = {$/;"	v	file:
Te4	elements/ipsec/aes.cc	/^static const unsigned long Te4[256] = {$/;"	v	file:
Tee	elements/standard/tee.cc	/^Tee::Tee()$/;"	f	class:Tee
Tee	elements/standard/tee.hh	/^class Tee : public Element {$/;"	c
TestClickSimulator	ns/nsclick-test.cc	/^TestClickSimulator::TestClickSimulator() {$/;"	f	class:TestClickSimulator
TestClickSimulator	ns/nsclick-test.cc	/^class TestClickSimulator : public Simulator {$/;"	c	file:
Testie	test/testie	/^package Testie;$/;"	p
TestieChildErrorHandler	test/testie	/^package TestieChildErrorHandler;$/;"	p
TestieCounter	test/testie	/^package TestieCounter;$/;"	p
TestieErrorHandler	test/testie	/^package TestieErrorHandler;$/;"	p
ThreadMonitor	elements/linuxmodule/threadmonitor.cc	/^ThreadMonitor::ThreadMonitor()$/;"	f	class:ThreadMonitor
ThreadMonitor	elements/linuxmodule/threadmonitor.hh	/^class ThreadMonitor : public Element { public:$/;"	c
ThreadSafeQueue	elements/standard/threadsafequeue.cc	/^ThreadSafeQueue::ThreadSafeQueue()$/;"	f	class:ThreadSafeQueue
ThreadSafeQueue	elements/standard/threadsafequeue.hh	/^class ThreadSafeQueue : public FullNoteQueue { public:$/;"	c
ThreadSched	include/click/standard/threadsched.hh	/^    ThreadSched()			{ }$/;"	f	class:ThreadSched
ThreadSched	include/click/standard/threadsched.hh	/^class ThreadSched { public:$/;"	c
ThresholdMetric	elements/grid/threshmetric.cc	/^ThresholdMetric::ThresholdMetric()$/;"	f	class:ThresholdMetric
ThresholdMetric	elements/grid/threshmetric.hh	/^class ThresholdMetric : public GridGenericMetric {$/;"	c
TimeFilter	elements/analysis/timefilter.cc	/^TimeFilter::TimeFilter()$/;"	f	class:TimeFilter
TimeFilter	elements/analysis/timefilter.hh	/^class TimeFilter : public Element { public:$/;"	c
TimeRange	elements/analysis/timerange.cc	/^TimeRange::TimeRange()$/;"	f	class:TimeRange
TimeRange	elements/analysis/timerange.hh	/^class TimeRange : public Element { public:$/;"	c
TimeSortedSched	elements/analysis/timesortedsched.cc	/^TimeSortedSched::TimeSortedSched()$/;"	f	class:TimeSortedSched
TimeSortedSched	elements/analysis/timesortedsched.hh	/^class TimeSortedSched : public Element { public:$/;"	c
TimedSink	elements/standard/timedsink.cc	/^TimedSink::TimedSink()$/;"	f	class:TimedSink
TimedSink	elements/standard/timedsink.hh	/^class TimedSink : public Element { public:$/;"	c
TimedSource	elements/standard/timedsource.cc	/^TimedSource::TimedSource()$/;"	f	class:TimedSource
TimedSource	elements/standard/timedsource.hh	/^class TimedSource : public Element { public:$/;"	c
TimedUnqueue	elements/standard/timedunqueue.cc	/^TimedUnqueue::TimedUnqueue()$/;"	f	class:TimedUnqueue
TimedUnqueue	elements/standard/timedunqueue.hh	/^class TimedUnqueue : public Element { public:$/;"	c
Timer	include/click/timer.hh	/^class Timer { public:$/;"	c
Timer	lib/timer.cc	/^Timer::Timer()$/;"	f	class:Timer
Timer	lib/timer.cc	/^Timer::Timer(Element* element)$/;"	f	class:Timer
Timer	lib/timer.cc	/^Timer::Timer(Task* task)$/;"	f	class:Timer
Timer	lib/timer.cc	/^Timer::Timer(TimerCallback f, void *user_data)$/;"	f	class:Timer
Timer	lib/timer.cc	/^Timer::Timer(const Timer &x)$/;"	f	class:Timer
Timer	lib/timer.cc	/^Timer::Timer(const do_nothing_t &)$/;"	f	class:Timer
TimerCallback	include/click/timer.hh	/^typedef void (*TimerCallback)(Timer *timer, void *user_data);$/;"	t
TimerSet	include/click/timerset.hh	/^class TimerSet { public:$/;"	c
TimerSet	lib/timerset.cc	/^TimerSet::TimerSet()$/;"	f	class:TimerSet
TimerTest	elements/test/timertest.cc	/^TimerTest::TimerTest()$/;"	f	class:TimerTest
TimerTest	elements/test/timertest.hh	/^class TimerTest : public Element { public:$/;"	c
Timestamp	include/click/timestamp.hh	/^    explicit inline Timestamp(int sec, uint32_t subsec = 0) {$/;"	f	class:Timestamp
Timestamp	include/click/timestamp.hh	/^    explicit inline Timestamp(long sec, uint32_t subsec = 0) {$/;"	f	class:Timestamp
Timestamp	include/click/timestamp.hh	/^    explicit inline Timestamp(unsigned long sec, uint32_t subsec = 0) {$/;"	f	class:Timestamp
Timestamp	include/click/timestamp.hh	/^    explicit inline Timestamp(unsigned sec, uint32_t subsec = 0) {$/;"	f	class:Timestamp
Timestamp	include/click/timestamp.hh	/^    inline Timestamp() {$/;"	f	class:Timestamp
Timestamp	include/click/timestamp.hh	/^    inline Timestamp(const rep_t &rep)$/;"	f	class:Timestamp
Timestamp	include/click/timestamp.hh	/^    inline Timestamp(const uninitialized_t &unused) {$/;"	f	class:Timestamp
Timestamp	include/click/timestamp.hh	/^Timestamp::Timestamp(const struct timespec& ts)$/;"	f	class:Timestamp
Timestamp	include/click/timestamp.hh	/^Timestamp::Timestamp(const struct timeval& tv)$/;"	f	class:Timestamp
Timestamp	include/click/timestamp.hh	/^Timestamp::Timestamp(double d)$/;"	f	class:Timestamp
Timestamp	include/click/timestamp.hh	/^class Timestamp { public:$/;"	c
TimestampAccum	elements/analysis/timestampaccum.cc	/^TimestampAccum::TimestampAccum()$/;"	f	class:TimestampAccum
TimestampAccum	elements/analysis/timestampaccum.hh	/^class TimestampAccum : public Element { public:$/;"	c
TimestampArg	include/click/timestamp.hh	/^    TimestampArg(bool is_signed = false)$/;"	f	struct:TimestampArg
TimestampArg	include/click/timestamp.hh	/^struct TimestampArg {$/;"	s
ToDevice	elements/bsdmodule/todevice.cc	/^ToDevice::ToDevice()$/;"	f	class:ToDevice
ToDevice	elements/bsdmodule/todevice.hh	/^class ToDevice : public AnyDevice {$/;"	c
ToDevice	elements/linuxmodule/todevice.cc	/^ToDevice::ToDevice()$/;"	f	class:ToDevice
ToDevice	elements/linuxmodule/todevice.hh	/^class ToDevice : public AnyTaskDevice { public:$/;"	c
ToDevice	elements/userlevel/todevice.cc	/^ToDevice::ToDevice()$/;"	f	class:ToDevice
ToDevice	elements/userlevel/todevice.hh	/^class ToDevice : public Element { public:$/;"	c
ToDevice_read_calls	elements/bsdmodule/todevice.cc	/^ToDevice_read_calls(Element *f, void *)$/;"	f	file:
ToDevice_read_stats	elements/bsdmodule/todevice.cc	/^ToDevice_read_stats(Element *e, void *thunk)$/;"	f	file:
ToDevice_write_stats	elements/bsdmodule/todevice.cc	/^ToDevice_write_stats(const String &, Element *e, void *, ErrorHandler *)$/;"	f	file:
ToDump	elements/userlevel/todump.cc	/^ToDump::ToDump()$/;"	f	class:ToDump
ToDump	elements/userlevel/todump.hh	/^class ToDump : public Element { public:$/;"	c
ToHost	elements/bsdmodule/tohost.cc	/^ToHost::ToHost()$/;"	f	class:ToHost
ToHost	elements/bsdmodule/tohost.hh	/^class ToHost : public AnyDevice {$/;"	c
ToHost	elements/linuxmodule/tohost.cc	/^ToHost::ToHost()$/;"	f	class:ToHost
ToHost	elements/linuxmodule/tohost.hh	/^class ToHost : public AnyDevice { public:$/;"	c
ToHost	elements/userlevel/tohost.cc	/^ToHost::ToHost()$/;"	f	class:ToHost
ToHost	elements/userlevel/tohost.hh	/^class ToHost : public Element { public:$/;"	c
ToHostSniffers	elements/bsdmodule/tohostsniffers.cc	/^ToHostSniffers::ToHostSniffers()$/;"	f	class:ToHostSniffers
ToHostSniffers	elements/bsdmodule/tohostsniffers.hh	/^class ToHostSniffers : public ToHost { public:$/;"	c
ToHostSniffers	elements/linuxmodule/tohostsniffers.cc	/^ToHostSniffers::ToHostSniffers()$/;"	f	class:ToHostSniffers
ToHostSniffers	elements/linuxmodule/tohostsniffers.hh	/^class ToHostSniffers : public ToHost { public:$/;"	c
ToIPFlowDumps	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::ToIPFlowDumps()$/;"	f	class:ToIPFlowDumps
ToIPFlowDumps	elements/analysis/toipflowdumps.hh	/^class ToIPFlowDumps : public Element, public AggregateListener { public:$/;"	c
ToIPSummaryDump	elements/analysis/toipsumdump.cc	/^ToIPSummaryDump::ToIPSummaryDump()$/;"	f	class:ToIPSummaryDump
ToIPSummaryDump	elements/analysis/toipsumdump.hh	/^class ToIPSummaryDump : public Element, public IPSummaryDumpInfo { public:$/;"	c
ToRawSocket	elements/userlevel/torawsocket.cc	/^ToRawSocket::ToRawSocket()$/;"	f	class:ToRawSocket
ToRawSocket	elements/userlevel/torawsocket.hh	/^class ToRawSocket : public RawSocket { public:$/;"	c
ToSimDevice	elements/ns/tosimdevice.cc	/^ToSimDevice::ToSimDevice()$/;"	f	class:ToSimDevice
ToSimDevice	elements/ns/tosimdevice.hh	/^class ToSimDevice : public Element { public:$/;"	c
ToSimTrace	elements/ns/tosimtrace.cc	/^EXPORT_ELEMENT(ToSimTrace);$/;"	v
ToSimTrace	elements/ns/tosimtrace.cc	/^ToSimTrace::ToSimTrace()$/;"	f	class:ToSimTrace
ToSimTrace	elements/ns/tosimtrace.hh	/^class ToSimTrace:public Element{$/;"	c
ToSocket	elements/userlevel/tosocket.cc	/^ToSocket::ToSocket()$/;"	f	class:ToSocket
ToSocket	elements/userlevel/tosocket.hh	/^class ToSocket : public Socket { public:$/;"	c
ToUserDevice	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::ToUserDevice() : _task(this)$/;"	f	class:ToUserDevice
ToUserDevice	elements/linuxmodule/touserdevice.hh	/^class ToUserDevice : public Element$/;"	c
TokenBucket	include/click/tokenbucket.hh	/^typedef TokenBucketX<TokenBucketJiffyParameters<unsigned> > TokenBucket;$/;"	t
TokenBucketJiffyParameters	include/click/tokenbucket.hh	/^class TokenBucketJiffyParameters { public:$/;"	c
TokenBucketTest	elements/test/tokenbuckettest.cc	/^TokenBucketTest::TokenBucketTest()$/;"	f	class:TokenBucketTest
TokenBucketTest	elements/test/tokenbuckettest.hh	/^class TokenBucketTest : public Element { public:$/;"	c
TokenBucketX	include/click/tokenbucket.hh	/^    TokenBucketX() {$/;"	f	class:TokenBucketX
TokenBucketX	include/click/tokenbucket.hh	/^    TokenBucketX(token_type rate, token_type capacity)$/;"	f	class:TokenBucketX
TokenBucketX	include/click/tokenbucket.hh	/^    explicit TokenBucketX(bool unlimited)$/;"	f	class:TokenBucketX
TokenBucketX	include/click/tokenbucket.hh	/^class TokenBucketX { public:$/;"	c
TokenCounter	include/click/tokenbucket.hh	/^typedef TokenCounterX<TokenRate> TokenCounter;$/;"	t
TokenCounterX	include/click/tokenbucket.hh	/^    TokenCounterX()$/;"	f	class:TokenCounterX
TokenCounterX	include/click/tokenbucket.hh	/^    explicit TokenCounterX(bool full)$/;"	f	class:TokenCounterX
TokenCounterX	include/click/tokenbucket.hh	/^class TokenCounterX { public:$/;"	c
TokenRate	include/click/tokenbucket.hh	/^typedef TokenRateX<TokenBucketJiffyParameters<unsigned> > TokenRate;$/;"	t
TokenRateX	include/click/tokenbucket.hh	/^    TokenRateX() {$/;"	f	class:TokenRateX
TokenRateX	include/click/tokenbucket.hh	/^    TokenRateX(token_type rate, token_type capacity) {$/;"	f	class:TokenRateX
TokenRateX	include/click/tokenbucket.hh	/^    explicit TokenRateX(bool unlimited) {$/;"	f	class:TokenRateX
TokenRateX	include/click/tokenbucket.hh	/^class TokenRateX { public:$/;"	c
Traits	tools/lib/eclasst.cc	/^typedef ElementTraits Traits;$/;"	t	file:
Traits	tools/lib/etraits.hh	/^typedef ElementTraits Traits;$/;"	t
TraitsElementClassT	tools/lib/eclasst.cc	/^TraitsElementClassT::TraitsElementClassT(const String &name, int component, ...)$/;"	f	class:__anon533::TraitsElementClassT
TraitsElementClassT	tools/lib/eclasst.cc	/^class TraitsElementClassT : public ElementClassT { public:$/;"	c	namespace:__anon533	file:
TraitsIterator	tools/lib/elementmap.cc	/^ElementMap::TraitsIterator::TraitsIterator(const ElementMap *emap, bool elements_only)$/;"	f	class:ElementMap::TraitsIterator
TraitsIterator	tools/lib/elementmap.hh	/^class ElementMap::TraitsIterator { public:$/;"	c	class:ElementMap
Truncate	elements/standard/truncate.cc	/^Truncate::Truncate()$/;"	f	class:Truncate
Truncate	elements/standard/truncate.hh	/^class Truncate : public Element { public:$/;"	c
TruncateIPPayload	elements/ip/truncateippayload.cc	/^TruncateIPPayload::TruncateIPPayload()$/;"	f	class:TruncateIPPayload
TruncateIPPayload	elements/ip/truncateippayload.hh	/^class TruncateIPPayload : public Element { public:$/;"	c
TunnelEnd	lib/lexer.cc	/^  TunnelEnd(const Router::Port &port, bool isoutput, TunnelEnd *next)$/;"	f	class:Lexer::TunnelEnd
TunnelEnd	lib/lexer.cc	/^class Lexer::TunnelEnd {$/;"	c	class:Lexer	file:
Type	elements/grid/grid.hh	/^    enum Type {$/;"	g	struct:grid_hdr
Type	elements/standard/script.hh	/^    enum Type {$/;"	g	class:Script
Type	elements/userlevel/kerneltun.hh	/^    enum Type { LINUX_UNIVERSAL, LINUX_ETHERTAP, BSD_TUN, BSD_TAP, OSX_TUN,$/;"	g	class:KernelTun
U	elements/analysis/ipsumdump_ip.cc	411;"	d	file:
U	elements/analysis/ipsumdump_ip.cc	436;"	d	file:
UCHAR	drivers/e1000-4.x/src/ans_os.h	69;"	d
UCHAR	elements/ipsec/sha1_impl.cc	64;"	d	file:
UDPIP6Encap	elements/tcpudp/udpip6encap.cc	/^UDPIP6Encap::UDPIP6Encap()$/;"	f	class:UDPIP6Encap
UDPIP6Encap	elements/tcpudp/udpip6encap.hh	/^class UDPIP6Encap : public Element { public:$/;"	c
UDPIPEncap	elements/tcpudp/udpipencap.cc	/^UDPIPEncap::UDPIPEncap()$/;"	f	class:UDPIPEncap
UDPIPEncap	elements/tcpudp/udpipencap.hh	/^class UDPIPEncap : public Element { public:$/;"	c
UDPRewriter	elements/tcpudp/udprewriter.cc	/^UDPRewriter::UDPRewriter()$/;"	f	class:UDPRewriter
UDPRewriter	elements/tcpudp/udprewriter.hh	/^class UDPRewriter : public IPRewriterBase { public:$/;"	c
UDP_HEADER_LEN	elements/local/OpenFlow/lib/packets.hh	231;"	d
UGAP_SHIFT	include/click/gaprate.hh	/^    enum { UGAP_SHIFT = 12 };$/;"	e	enum:GapRate::__anon412
UID_OPT	tools/click-install/click-install.cc	65;"	d	file:
UINT	elements/ipsec/sha1_impl.cc	65;"	d	file:
UINT16	drivers/e1000-4.x/src/ans_os.h	77;"	d
UINT16_MAX	elements/local/OpenFlow/include/config.h	5;"	d
UINT32	drivers/e1000-4.x/src/ans_os.h	61;"	d
UINT32_MAX	elements/local/OpenFlow/include/config.h	6;"	d
UINT64_C	elements/local/OpenFlow/include/config.h	10;"	d
UINT64_C	elements/local/OpenFlow/include/config.h	12;"	d
UINT8	drivers/e1000-4.x/src/ans_os.h	73;"	d
UIO_MX	bsdmodule/clickfs_vnops.cc	39;"	d	file:
ULONG	elements/ipsec/sha1_impl.cc	63;"	d	file:
UMLSwitch	elements/userlevel/umlswitch.hh	/^  UMLSwitch() : _ctl_path("\/tmp\/uml.ctl") {};$/;"	f	class:UMLSwitch
UMLSwitch	elements/userlevel/umlswitch.hh	/^class UMLSwitch : public Socket { public:$/;"	c
UNALIGNED_NET_SHORT_EQ	elements/userlevel/fakepcap.cc	105;"	d	file:
UNALIGNED_NET_SHORT_EQ	elements/userlevel/fakepcap.cc	113;"	d	file:
UNCOMMON	include/click/handler.hh	/^	UNCOMMON = h_uncommon,$/;"	e	enum:Handler::DeprecatedFlags
UNICAST	elements/grid/linktester.hh	/^    UNICAST,$/;"	e	enum:LinkTester::state_t
UNINSTALL_OPT	tools/click-install/click-install.cc	57;"	d	file:
UNIX_SOCKET_OPT	ns/nsclick.cc	64;"	d	file:
UNIX_SOCKET_OPT	userlevel/click.cc	68;"	d	file:
UNKNOWN	elements/ip/ipfilter.hh	/^	UNKNOWN = -1000$/;"	e	enum:IPFilter::__anon348
UNLEX_SIZE	include/click/lexer.hh	/^    enum { UNLEX_SIZE = 2 };$/;"	e	enum:Lexer::__anon445
UNLEX_SIZE	tools/lib/lexert.hh	/^    enum { UNLEX_SIZE = 2 };$/;"	e	enum:LexerT::__anon525
UNLOCK_CONFIG_READ	linuxmodule/clickfs.cc	61;"	d	file:
UNLOCK_CONFIG_WRITE	linuxmodule/clickfs.cc	63;"	d	file:
UNOBJS	tools/click-combine/Makefile	/^UNOBJS = click-uncombine.o$/;"	m
UNPARSE_ANONYMOUS	tools/lib/eclasst.hh	/^    enum UnparseKind { UNPARSE_NAMED, UNPARSE_ANONYMOUS, UNPARSE_OVERLOAD };$/;"	e	enum:ElementClassT::UnparseKind
UNPARSE_NAMED	tools/lib/eclasst.hh	/^    enum UnparseKind { UNPARSE_NAMED, UNPARSE_ANONYMOUS, UNPARSE_OVERLOAD };$/;"	e	enum:ElementClassT::UnparseKind
UNPARSE_OVERLOAD	tools/lib/eclasst.hh	/^    enum UnparseKind { UNPARSE_NAMED, UNPARSE_ANONYMOUS, UNPARSE_OVERLOAD };$/;"	e	enum:ElementClassT::UnparseKind
UNQUOTE_PARAM	include/click/handlercall.hh	/^	   PREINITIALIZE = h_preinitialize, UNQUOTE_PARAM = h_unquote_param$/;"	e	enum:HandlerCall::__anon428
UNUSED	elements/local/OpenFlow/lib/compiler.hh	38;"	d
UNUSED	elements/local/OpenFlow/lib/packets.hh	/^static const uint8_t eth_addr_broadcast[ETH_ADDR_LEN] UNUSED$/;"	v
UN_OBJS	tools/click-install/Makefile	/^UN_OBJS = common.o click-uninstall.o$/;"	m
UPDATEROUTE_HH	elements/grid/updateroutes.hh	2;"	d
USERLEVEL	tools/lib/etraits.hh	/^	USERLEVEL = 0, LINUXMODULE = 1, BSDMODULE = 2, NSMODULE = 3,$/;"	e	enum:Driver::__anon526
USERLEVEL_OPT	tools/click-align/click-align.cc	306;"	d	file:
USERLEVEL_OPT	tools/click-check/click-check.cc	51;"	d	file:
USERLEVEL_OPT	tools/click-devirtualize/click-devirtualize.cc	49;"	d	file:
USERLEVEL_OPT	tools/click-fastclassifier/click-fastclassifier.cc	54;"	d	file:
USERLEVEL_OPT	tools/click-mkmindriver/click-mkmindriver.cc	45;"	d	file:
USERLEVEL_OPT	tools/click-pretty/click-pretty.cc	54;"	d	file:
USERLEVEL_OPT	tools/click-undead/click-undead.cc	50;"	d	file:
USERLEVEL_OPT	tools/click2xml/click2xml.cc	43;"	d	file:
USER_ANNO_SIZE	include/click/packet.hh	/^	USER_ANNO_SIZE = user_anno_size,$/;"	e	enum:Packet::__anon464
USER_ANNO_U16_SIZE	include/click/packet.hh	/^	USER_ANNO_U16_SIZE = USER_ANNO_SIZE \/ 2,$/;"	e	enum:Packet::__anon464
USER_ANNO_U32_SIZE	include/click/packet.hh	/^	USER_ANNO_U32_SIZE = USER_ANNO_SIZE \/ 4,$/;"	e	enum:Packet::__anon464
USER_ANNO_U64_SIZE	include/click/packet.hh	/^	USER_ANNO_U64_SIZE = USER_ANNO_SIZE \/ 8$/;"	e	enum:Packet::__anon464
USER_FLAG_0	include/click/handler.hh	/^	USER_FLAG_0 = h_user_flag_0$/;"	e	enum:Handler::DeprecatedFlags
USER_FLAG_SHIFT	include/click/handler.hh	/^	USER_FLAG_SHIFT = h_user_flag_shift,$/;"	e	enum:Handler::DeprecatedFlags
USE_DRIVER_SHUTDOWN_HANDLER	drivers/e1000-7.x/src/kcompat.h	1024;"	d
USE_GOOD_NEW_ROUTES	elements/grid/dsdvroutetable.hh	177;"	d
USE_OLD_SEQ	elements/grid/dsdvroutetable.hh	172;"	d
UTIL_H	elements/local/OpenFlow/lib/util.hh	35;"	d
U_REPLACEMENT	lib/clp.c	250;"	d	file:
UnitArg	include/click/args.hh	/^    explicit UnitArg(const char *unit_def, const char *prefix_chars_def)$/;"	f	struct:UnitArg
UnitArg	include/click/args.hh	/^struct UnitArg {$/;"	s
UnknownAction	elements/grid/gridroutecb.hh	/^    UnknownAction      = 0,$/;"	e	enum:GridRouteActionCallback::Action
UnknownReason	elements/grid/gridroutecb.hh	/^    UnknownReason      = 0,$/;"	e	enum:GridRouteActionCallback::DropReason
UnknownType	elements/grid/gridroutecb.hh	/^    UnknownType        = 1,   \/\/ dest_ip is unknown$/;"	e	enum:GridRouteActionCallback::DropReason
UnparseKind	tools/lib/eclasst.hh	/^    enum UnparseKind { UNPARSE_NAMED, UNPARSE_ANONYMOUS, UNPARSE_OVERLOAD };$/;"	g	class:ElementClassT
Unqueue	elements/standard/unqueue.cc	/^Unqueue::Unqueue()$/;"	f	class:Unqueue
Unqueue	elements/standard/unqueue.hh	/^class Unqueue : public Element { public:$/;"	c
Unqueue2	elements/standard/unqueue2.cc	/^Unqueue2::Unqueue2()$/;"	f	class:Unqueue2
Unqueue2	elements/standard/unqueue2.hh	/^class Unqueue2 : public Element { public:$/;"	c
Unstrip	elements/standard/unstrip.cc	/^Unstrip::Unstrip(unsigned nbytes)$/;"	f	class:Unstrip
Unstrip	elements/standard/unstrip.hh	/^class Unstrip : public Element {$/;"	c
UnstripDSRHeader	elements/grid/unstripdsrheader.cc	/^UnstripDSRHeader::UnstripDSRHeader()$/;"	f	class:UnstripDSRHeader
UnstripDSRHeader	elements/grid/unstripdsrheader.hh	/^class UnstripDSRHeader : public Element { public:$/;"	c
UnstripIPHeader	elements/ip/unstripipheader.cc	/^UnstripIPHeader::UnstripIPHeader()$/;"	f	class:UnstripIPHeader
UnstripIPHeader	elements/ip/unstripipheader.hh	/^class UnstripIPHeader : public Element { public:$/;"	c
Untagged_Attribute	drivers/e1000-4.x/src/base_comm.h	/^} Untagged_Attribute  , *pUntagged_Attribute ;$/;"	t	typeref:struct:_Untagged_Attribute
UpdateGridRoutes	elements/grid/updateroutes.cc	/^UpdateGridRoutes::UpdateGridRoutes() : _max_hops(3),$/;"	f	class:UpdateGridRoutes
UpdateGridRoutes	elements/grid/updateroutes.hh	/^class UpdateGridRoutes : public Element {$/;"	c
UpstreamNotifier	elements/test/upstreamnotifier.cc	/^UpstreamNotifier::UpstreamNotifier()$/;"	f	class:UpstreamNotifier
UpstreamNotifier	elements/test/upstreamnotifier.hh	/^class UpstreamNotifier : public Element { public:$/;"	c
Usage	click-mkelemmap	/^Usage: click-mkelemmap [OPTIONS] [-f FILE | SRCFILE]...$/;"	l
Usage	doc/click-elem2man	/^Usage: click-elem2man [-l | -L] [-d DIRECTORY] FILE...$/;"	l
Usage	test/testie	/^Usage: testie [-V] [FILE]...$/;"	l
Usage	test/testie	/^Usage: testie [OPTIONS] [FILE]...$/;"	l
Util	apps/ClickController/Util.java	/^public class Util {$/;"	c
VAGNOSTIC	include/click/element.hh	/^    enum Processing { VAGNOSTIC, VPUSH, VPULL };$/;"	e	enum:Element::Processing
VA_LIST_DEREF	include/click/error.hh	16;"	d
VA_LIST_DEREF	include/click/error.hh	20;"	d
VA_LIST_REF	include/click/error.hh	17;"	d
VA_LIST_REF	include/click/error.hh	21;"	d
VA_LIST_REF_T	include/click/error.hh	15;"	d
VA_LIST_REF_T	include/click/error.hh	19;"	d
VCONN_H	elements/local/OpenFlow/lib/vconn.hh	35;"	d
VCONN_PROVIDER_H	elements/local/OpenFlow/lib/vconn-provider.hh	35;"	d
VCONN_SSL_H	elements/local/OpenFlow/lib/vconn-ssl.hh	34;"	d
VCONN_SSL_LONG_OPTIONS	elements/local/OpenFlow/lib/vconn-ssl.hh	46;"	d
VCONN_SSL_OPTION_HANDLERS	elements/local/OpenFlow/lib/vconn-ssl.hh	51;"	d
VCONN_STREAM_H	elements/local/OpenFlow/lib/vconn-stream.hh	35;"	d
VCS_CONNECTED	elements/local/OpenFlow/lib/vconn.cc	/^    VCS_CONNECTED,              \/* Connection established. *\/$/;"	e	enum:vconn_state	file:
VCS_CONNECTING	elements/local/OpenFlow/lib/vconn.cc	/^    VCS_CONNECTING,             \/* Underlying vconn is not connected. *\/$/;"	e	enum:vconn_state	file:
VCS_DISCONNECTED	elements/local/OpenFlow/lib/vconn.cc	/^    VCS_DISCONNECTED            \/* Connection failed or connection closed. *\/$/;"	e	enum:vconn_state	file:
VCS_RECV_HELLO	elements/local/OpenFlow/lib/vconn.cc	/^    VCS_RECV_HELLO,             \/* Waiting to receive OFPT_HELLO message. *\/$/;"	e	enum:vconn_state	file:
VCS_SEND_ERROR	elements/local/OpenFlow/lib/vconn.cc	/^    VCS_SEND_ERROR,             \/* Sending OFPT_ERROR message. *\/$/;"	e	enum:vconn_state	file:
VCS_SEND_HELLO	elements/local/OpenFlow/lib/vconn.cc	/^    VCS_SEND_HELLO,             \/* Waiting to send OFPT_HELLO message. *\/$/;"	e	enum:vconn_state	file:
VERBOSE_OPT	tools/click-align/click-align.cc	302;"	d	file:
VERBOSE_OPT	tools/click-fastclassifier/click-fastclassifier.cc	61;"	d	file:
VERBOSE_OPT	tools/click-install/click-install.cc	60;"	d	file:
VERBOSE_OPT	tools/click-install/click-uninstall.cc	41;"	d	file:
VERBOSE_OPT	tools/click-mkmindriver/click-mkmindriver.cc	50;"	d	file:
VERBOSE_OPT	tools/click-undead/click-undead.cc	52;"	d	file:
VERIFY_AUTH	elements/ipsec/hmacsha1.hh	/^  enum { COMPUTE_AUTH = 0, VERIFY_AUTH = 1 };$/;"	e	enum:IPsecAuthHMACSHA1::__anon213
VERIFY_AUTH	elements/ipsec/sha1.hh	/^  enum { COMPUTE_AUTH = 0, VERIFY_AUTH = 1 };$/;"	e	enum:IPsecAuthSHA1::__anon216
VERSION	Makefile	/^VERSION = 2.0$/;"	m
VERSION	elements/local/OpenFlow/include/config.h	153;"	d
VERSION	etc/libclick/Makefile	/^VERSION = 2.0$/;"	m
VERSION_FILE	drivers/e1000-4.x/src/Makefile	/^VERSION_FILE := $(KSRC)\/include\/linux\/version.h$/;"	m
VERSION_FILE	drivers/e1000-5.x/src/Makefile	/^    VERSION_FILE := $(KOBJ)\/include\/linux\/version.h$/;"	m
VERSION_FILE	drivers/e1000-5.x/src/Makefile	/^  VERSION_FILE := $(KOBJ)\/include\/linux\/version.h$/;"	m
VERSION_FILE	drivers/e1000-5.x/src/Makefile	/^  VERSION_FILE := \/boot\/vmlinuz.version.h$/;"	m
VERSION_FILE	drivers/e1000-7.x/src/Makefile	/^      VERSION_FILE := $(KOBJ)\/include\/linux\/utsrelease.h$/;"	m
VERSION_FILE	drivers/e1000-7.x/src/Makefile	/^      VERSION_FILE := $(KOBJ)\/include\/linux\/version.h$/;"	m
VERSION_FILE	drivers/e1000-7.x/src/Makefile	/^    VERSION_FILE := $(KOBJ)\/include\/linux\/utsrelease.h$/;"	m
VERSION_FILE	drivers/e1000-7.x/src/Makefile	/^    VERSION_FILE := $(KOBJ)\/include\/linux\/version.h$/;"	m
VERSION_FILE	drivers/e1000-7.x/src/Makefile	/^  VERSION_FILE := \/boot\/vmlinuz.version.h$/;"	m
VERSION_OPT	apps/clicky/src/clicky.cc	31;"	d	file:
VERSION_OPT	ns/nsclick.cc	55;"	d	file:
VERSION_OPT	tools/click-align/click-align.cc	298;"	d	file:
VERSION_OPT	tools/click-check/click-check.cc	41;"	d	file:
VERSION_OPT	tools/click-combine/click-combine.cc	41;"	d	file:
VERSION_OPT	tools/click-combine/click-uncombine.cc	41;"	d	file:
VERSION_OPT	tools/click-devirtualize/click-devirtualize.cc	43;"	d	file:
VERSION_OPT	tools/click-fastclassifier/click-fastclassifier.cc	48;"	d	file:
VERSION_OPT	tools/click-flatten/click-flatten.cc	34;"	d	file:
VERSION_OPT	tools/click-install/click-install.cc	53;"	d	file:
VERSION_OPT	tools/click-install/click-uninstall.cc	40;"	d	file:
VERSION_OPT	tools/click-mkmindriver/click-mkmindriver.cc	38;"	d	file:
VERSION_OPT	tools/click-pretty/click-pretty.cc	38;"	d	file:
VERSION_OPT	tools/click-undead/click-undead.cc	44;"	d	file:
VERSION_OPT	tools/click-xform/click-xform.cc	409;"	d	file:
VERSION_OPT	tools/click2xml/click2xml.cc	35;"	d	file:
VERSION_OPT	tools/click2xml/xml2click.cc	37;"	d	file:
VERSION_OPT	userlevel/click.cc	59;"	d	file:
VLANDecap	elements/ethernet/vlandecap.cc	/^VLANDecap::VLANDecap()$/;"	f	class:VLANDecap
VLANDecap	elements/ethernet/vlandecap.hh	/^class VLANDecap : public Element { public:$/;"	c
VLANEncap	elements/ethernet/vlanencap.cc	/^VLANEncap::VLANEncap()$/;"	f	class:VLANEncap
VLANEncap	elements/ethernet/vlanencap.hh	/^class VLANEncap : public Element { public:$/;"	c
VLAN_ETH_FRAME_LEN	drivers/e1000-7.x/src/kcompat.h	734;"	d
VLAN_ETH_HEADER_LEN	elements/local/OpenFlow/lib/packets.hh	169;"	d
VLAN_ETH_HLEN	drivers/e1000-7.x/src/kcompat.h	730;"	d
VLAN_HEADER_LEN	elements/local/OpenFlow/lib/packets.hh	162;"	d
VLAN_HLEN	drivers/e1000-7.x/src/kcompat.h	726;"	d
VLAN_ID	drivers/e1000-4.x/src/ans.h	/^    u16 VLAN_ID;$/;"	m	struct:_x8021Q_tag_t
VLAN_ID_MASK	drivers/e1000-4.x/src/ans.h	78;"	d
VLAN_ID_Per_Frame_Info	drivers/e1000-4.x/src/base_comm.h	/^} VLAN_ID_Per_Frame_Info  , *pVLAN_ID_Per_Frame_Info ;$/;"	t	typeref:struct:_VLAN_ID_Per_Frame_Info
VLAN_PCP_BITMASK	elements/local/OpenFlow/lib/packets.hh	160;"	d
VLAN_PCP_MASK	elements/local/OpenFlow/lib/packets.hh	158;"	d
VLAN_PCP_SHIFT	elements/local/OpenFlow/lib/packets.hh	159;"	d
VLAN_PRIORITY_MASK	drivers/e1000-4.x/src/ans.h	76;"	d
VLAN_TAG_SIZE	drivers/e1000-4.x/src/e1000_hw.h	284;"	d
VLAN_TAG_SIZE	drivers/e1000-5.x/src/e1000_hw.h	417;"	d
VLAN_TAG_SIZE	drivers/e1000-7.x/src/e1000_hw.h	535;"	d
VLAN_TCI_ANNO	include/click/packet_anno.hh	40;"	d
VLAN_TCI_ANNO_OFFSET	include/click/packet_anno.hh	38;"	d
VLAN_TCI_ANNO_SIZE	include/click/packet_anno.hh	39;"	d
VLAN_TR_FLAG_MASK	drivers/e1000-4.x/src/ans.h	77;"	d
VLAN_VID_MASK	elements/local/OpenFlow/lib/packets.hh	157;"	d
VLF_ANY_FACILITY	elements/local/OpenFlow/lib/vlog.hh	/^    VLF_ANY_FACILITY = -1$/;"	e	enum:vlog_facility
VLF_N_FACILITIES	elements/local/OpenFlow/lib/vlog.hh	/^    VLF_N_FACILITIES,$/;"	e	enum:vlog_facility
VLL_N_LEVELS	elements/local/OpenFlow/lib/vlog.hh	/^    VLL_N_LEVELS$/;"	e	enum:vlog_level
VLM_ANY_MODULE	elements/local/OpenFlow/lib/vlog.hh	/^    VLM_ANY_MODULE = -1$/;"	e	enum:vlog_module
VLM_N_MODULES	elements/local/OpenFlow/lib/vlog.hh	/^    VLM_N_MODULES,$/;"	e	enum:vlog_module
VLOG	elements/local/OpenFlow/lib/vlog.hh	192;"	d
VLOG_DBG	elements/local/OpenFlow/lib/vlog.hh	155;"	d
VLOG_DBG_RL	elements/local/OpenFlow/lib/vlog.hh	175;"	d
VLOG_EMER	elements/local/OpenFlow/lib/vlog.hh	151;"	d
VLOG_ERR	elements/local/OpenFlow/lib/vlog.hh	152;"	d
VLOG_ERR_RL	elements/local/OpenFlow/lib/vlog.hh	172;"	d
VLOG_FACILITIES	elements/local/OpenFlow/lib/vlog.hh	/^    VLOG_FACILITIES$/;"	e	enum:vlog_facility
VLOG_FACILITIES	elements/local/OpenFlow/lib/vlog.hh	63;"	d
VLOG_FACILITY	elements/local/OpenFlow/lib/vlog.cc	83;"	d	file:
VLOG_FACILITY	elements/local/OpenFlow/lib/vlog.cc	85;"	d	file:
VLOG_FACILITY	elements/local/OpenFlow/lib/vlog.hh	68;"	d
VLOG_FACILITY	elements/local/OpenFlow/lib/vlog.hh	70;"	d
VLOG_H	elements/local/OpenFlow/lib/vlog.hh	35;"	d
VLOG_INFO	elements/local/OpenFlow/lib/vlog.hh	154;"	d
VLOG_INFO_RL	elements/local/OpenFlow/lib/vlog.hh	174;"	d
VLOG_IS_DBG_ENABLED	elements/local/OpenFlow/lib/vlog.hh	164;"	d
VLOG_IS_EMER_ENABLED	elements/local/OpenFlow/lib/vlog.hh	160;"	d
VLOG_IS_ERR_ENABLED	elements/local/OpenFlow/lib/vlog.hh	161;"	d
VLOG_IS_INFO_ENABLED	elements/local/OpenFlow/lib/vlog.hh	163;"	d
VLOG_IS_WARN_ENABLED	elements/local/OpenFlow/lib/vlog.hh	162;"	d
VLOG_LEVEL	elements/local/OpenFlow/lib/vlog.cc	57;"	d	file:
VLOG_LEVEL	elements/local/OpenFlow/lib/vlog.cc	59;"	d	file:
VLOG_LEVEL	elements/local/OpenFlow/lib/vlog.cc	64;"	d	file:
VLOG_LEVEL	elements/local/OpenFlow/lib/vlog.cc	66;"	d	file:
VLOG_LEVEL	elements/local/OpenFlow/lib/vlog.hh	53;"	d
VLOG_LEVEL	elements/local/OpenFlow/lib/vlog.hh	55;"	d
VLOG_LEVELS	elements/local/OpenFlow/lib/vlog.hh	/^    VLOG_LEVELS$/;"	e	enum:vlog_level
VLOG_LEVELS	elements/local/OpenFlow/lib/vlog.hh	46;"	d
VLOG_LONG_OPTIONS	elements/local/OpenFlow/lib/vlog.hh	179;"	d
VLOG_MODULE	elements/local/OpenFlow/lib/vlog.cc	71;"	d	file:
VLOG_MODULE	elements/local/OpenFlow/lib/vlog.cc	73;"	d	file:
VLOG_MODULE	elements/local/OpenFlow/lib/vlog.hh	80;"	d
VLOG_MSG_TOKENS	elements/local/OpenFlow/lib/vlog.hh	105;"	d
VLOG_OPTION_ENUMS	elements/local/OpenFlow/lib/vlog.hh	178;"	d
VLOG_OPTION_HANDLERS	elements/local/OpenFlow/lib/vlog.hh	182;"	d
VLOG_RATE_LIMIT_INIT	elements/local/OpenFlow/lib/vlog.hh	109;"	d
VLOG_RL	elements/local/OpenFlow/lib/vlog.hh	198;"	d
VLOG_SOCKET_H	elements/local/OpenFlow/lib/vlog-socket.hh	35;"	d
VLOG_WARN	elements/local/OpenFlow/lib/vlog.hh	153;"	d
VLOG_WARN_RL	elements/local/OpenFlow/lib/vlog.hh	173;"	d
VLanID	drivers/e1000-4.x/src/base_comm.h	/^    u16 VLanID;$/;"	m	struct:_VLAN_ID_Per_Frame_Info
VLanIDNum	drivers/e1000-4.x/src/base_comm.h	/^    u32        VLanIDNum;       \/* Number of VLan IDs defined in $/;"	m	struct:_IANS_BD_PARAM_IVLAN_TABLE
VLanIDTable	drivers/e1000-4.x/src/base_comm.h	/^    u16        *VLanIDTable;  \/* Beginning of ID list. $/;"	m	struct:_IANS_BD_PARAM_IVLAN_TABLE
VOID	drivers/e1000-4.x/src/ans_os.h	65;"	d
VPATH	bsdmodule/Makefile	/^VPATH = .:$(top_srcdir)\/lib:$(top_srcdir)\/$(subdir)$/;"	m
VPATH	linuxmodule/Makefile	/^VPATH = .:$(top_srcdir)\/lib:$(top_srcdir)\/$(subdir):$(top_srcdir)\/elements\/standard$/;"	m
VPATH	ns/Makefile	/^VPATH = .:$(top_srcdir)\/lib:$(top_srcdir)\/$(subdir):$(top_srcdir)\/elements\/standard$/;"	m
VPATH	tools/click-align/Makefile	/^VPATH = .:$(top_srcdir)\/$(subdir):$(top_srcdir)\/tools\/lib:$(top_srcdir)\/include$/;"	m
VPATH	tools/click-check/Makefile	/^VPATH = .:$(top_srcdir)\/$(subdir):$(top_srcdir)\/tools\/lib:$(top_srcdir)\/include$/;"	m
VPATH	tools/click-combine/Makefile	/^VPATH = .:$(top_srcdir)\/$(subdir):$(top_srcdir)\/tools\/lib:$(top_srcdir)\/include$/;"	m
VPATH	tools/click-devirtualize/Makefile	/^VPATH = .:$(top_srcdir)\/$(subdir):$(top_srcdir)\/tools\/lib:$(top_srcdir)\/include$/;"	m
VPATH	tools/click-fastclassifier/Makefile	/^VPATH = .:$(top_srcdir)\/$(subdir):$(top_srcdir)\/tools\/lib:$(top_srcdir)\/include$/;"	m
VPATH	tools/click-flatten/Makefile	/^VPATH = .:$(top_srcdir)\/$(subdir):$(top_srcdir)\/tools\/lib:$(top_srcdir)\/include$/;"	m
VPATH	tools/click-install/Makefile	/^VPATH = .:$(top_srcdir)\/$(subdir):$(top_srcdir)\/tools\/lib:$(top_srcdir)\/include$/;"	m
VPATH	tools/click-mkmindriver/Makefile	/^VPATH = .:$(top_srcdir)\/$(subdir):$(top_srcdir)\/tools\/lib:$(top_srcdir)\/include$/;"	m
VPATH	tools/click-pretty/Makefile	/^VPATH = .:$(top_srcdir)\/$(subdir):$(top_srcdir)\/tools\/lib:$(top_srcdir)\/include$/;"	m
VPATH	tools/click-undead/Makefile	/^VPATH = .:$(top_srcdir)\/$(subdir):$(top_srcdir)\/tools\/lib:$(top_srcdir)\/include$/;"	m
VPATH	tools/click-xform/Makefile	/^VPATH = .:$(top_srcdir)\/$(subdir):$(top_srcdir)\/tools\/lib:$(top_srcdir)\/include$/;"	m
VPATH	tools/click2xml/Makefile	/^VPATH = .:$(top_srcdir)\/$(subdir):$(top_srcdir)\/tools\/lib:$(top_srcdir)\/include$/;"	m
VPATH	tools/lib/Makefile	/^VPATH = .:$(top_srcdir)\/$(subdir):$(top_srcdir)\/tools\/lib:$(top_srcdir)\/lib$/;"	m
VPATH	userlevel/Makefile	/^VPATH = .:$(top_srcdir)\/lib:$(top_srcdir)\/$(subdir):$(top_srcdir)\/elements\/standard$/;"	m
VPULL	include/click/element.hh	/^    enum Processing { VAGNOSTIC, VPUSH, VPULL };$/;"	e	enum:Element::Processing
VPUSH	include/click/element.hh	/^    enum Processing { VAGNOSTIC, VPUSH, VPULL };$/;"	e	enum:Element::Processing
VSS_SLEEP_THRESHOLD	elements/local/FlowNet/scheduler/PFSchedFW.hh	160;"	d
VTOCDE	bsdmodule/clickfs_vnops.cc	110;"	d	file:
VariableEnvironment	include/click/variableenv.hh	/^class VariableEnvironment : public VariableExpander { public:$/;"	c
VariableEnvironment	lib/variableenv.cc	/^VariableEnvironment::VariableEnvironment(VariableEnvironment *parent)$/;"	f	class:VariableEnvironment
VariableExpander	include/click/variableenv.hh	/^    VariableExpander()			{ }$/;"	f	class:VariableExpander
VariableExpander	include/click/variableenv.hh	/^class VariableExpander { public:$/;"	c
Vc5TupleClassify	elements/local/FlowNet/libclassify/Classify5Tuple.cc	/^Vc5TupleClassify::Vc5TupleClassify() $/;"	f	class:Vc5TupleClassify
Vc5TupleClassify	elements/local/FlowNet/libclassify/Classify5Tuple.hh	/^class Vc5TupleClassify : public VcFlowClassify {$/;"	c
VcBWShape	elements/local/FlowNet/common/BWShape.cc	/^VcBWShape::VcBWShape()$/;"	f	class:VcBWShape
VcBWShape	elements/local/FlowNet/common/BWShape.hh	/^class VcBWShape : public Algorithm {$/;"	c
VcBWShapeByCD	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.cc	/^VcBWShapeByCD::VcBWShapeByCD(PFShapeFW* shape)$/;"	f	class:VcBWShapeByCD
VcBWShapeByCD	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.hh	/^class VcBWShapeByCD : public VcBWShape {$/;"	c
VcBWShapeByCD_CFB	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.cc	/^VcBWShapeByCD_CFB::VcBWShapeByCD_CFB(PFShapeFW* shape)$/;"	f	class:VcBWShapeByCD_CFB
VcBWShapeByCD_CFB	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.hh	/^class VcBWShapeByCD_CFB : public VcBWShape {$/;"	c
VcBWShapeNULL	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeNULL.cc	/^VcBWShapeNULL::VcBWShapeNULL()$/;"	f	class:VcBWShapeNULL
VcBWShapeNULL	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeNULL.hh	/^class VcBWShapeNULL : public VcBWShape {$/;"	c
VcBWShapeSimple	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeSimple.cc	/^VcBWShapeSimple::VcBWShapeSimple(PFShapeFW *shape)$/;"	f	class:VcBWShapeSimple
VcBWShapeSimple	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeSimple.hh	/^class VcBWShapeSimple : public VcBWShape {$/;"	c
VcBWShapeStaticMpeg2	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeStaticMpeg2.cc	/^VcBWShapeStaticMpeg2::VcBWShapeStaticMpeg2(int af)$/;"	f	class:VcBWShapeStaticMpeg2
VcBWShapeStaticMpeg2	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeStaticMpeg2.hh	/^class VcBWShapeStaticMpeg2 : public VcBWShape {$/;"	c
VcCDCORE	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^VcCDCORE::VcCDCORE()$/;"	f	class:VcCDCORE
VcCDCORE	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^class VcCDCORE : public VcCongestionDetection {$/;"	c
VcCDQueueLoss	elements/local/FlowNet/scheduler/CD_algorithms/CD_QueueLoss.cc	/^VcCDQueueLoss::VcCDQueueLoss()$/;"	f	class:VcCDQueueLoss
VcCDQueueLoss	elements/local/FlowNet/scheduler/CD_algorithms/CD_QueueLoss.hh	/^class VcCDQueueLoss : public VcCongestionDetection {$/;"	c
VcCDThreshold	elements/local/FlowNet/scheduler/CD_algorithms/CD_Threshold.cc	/^VcCDThreshold::VcCDThreshold(uint32_t threshold)$/;"	f	class:VcCDThreshold
VcCDThreshold	elements/local/FlowNet/scheduler/CD_algorithms/CD_Threshold.hh	/^class VcCDThreshold : public VcCongestionDetection {$/;"	c
VcCongestionDetection	elements/local/FlowNet/common/CongestionDetection.hh	/^        VcCongestionDetection() : congest_detected(NULL), nocongest_detected(NULL), _cd_algorithm_index(-1)$/;"	f	class:VcCongestionDetection
VcCongestionDetection	elements/local/FlowNet/common/CongestionDetection.hh	/^class VcCongestionDetection : public Algorithm {$/;"	c
VcFlowClassify	elements/local/FlowNet/common/FlowClassify.hh	/^	VcFlowClassify() {};$/;"	f	class:VcFlowClassify
VcFlowClassify	elements/local/FlowNet/common/FlowClassify.hh	/^class VcFlowClassify : public Algorithm {$/;"	c
VcNoClassify	elements/local/FlowNet/libclassify/ClassifyNoClassify.cc	/^VcNoClassify::VcNoClassify()$/;"	f	class:VcNoClassify
VcNoClassify	elements/local/FlowNet/libclassify/ClassifyNoClassify.hh	/^class VcNoClassify : public VcFlowClassify {$/;"	c
VcSchedule	elements/local/FlowNet/common/Schedule.hh	/^        VcSchedule() {};$/;"	f	class:VcSchedule
VcSchedule	elements/local/FlowNet/common/Schedule.hh	/^class VcSchedule : public Algorithm {$/;"	c
VcScheduleBackpressure	elements/local/FlowNet/scheduler/sched_algorithms/SchedBackpressure.cc	/^VcScheduleBackpressure::VcScheduleBackpressure()$/;"	f	class:VcScheduleBackpressure
VcScheduleBackpressure	elements/local/FlowNet/scheduler/sched_algorithms/SchedBackpressure.hh	/^class VcScheduleBackpressure : public VcSchedule {$/;"	c
VcScheduleHorizon	elements/local/FlowNet/scheduler/sched_algorithms/SchedHorizon.cc	/^VcScheduleHorizon::VcScheduleHorizon()$/;"	f	class:VcScheduleHorizon
VcScheduleHorizon	elements/local/FlowNet/scheduler/sched_algorithms/SchedHorizon.hh	/^class VcScheduleHorizon : public VcSchedule {$/;"	c
VcScheduleLogWeight	elements/local/FlowNet/scheduler/sched_algorithms/SchedLogWeight.cc	/^VcScheduleLogWeight::VcScheduleLogWeight()$/;"	f	class:VcScheduleLogWeight
VcScheduleLogWeight	elements/local/FlowNet/scheduler/sched_algorithms/SchedLogWeight.hh	/^class VcScheduleLogWeight : public VcSchedule {$/;"	c
VcScheduleNoSchedule	elements/local/FlowNet/scheduler/sched_algorithms/SchedNoSchedule.cc	/^VcScheduleNoSchedule::VcScheduleNoSchedule()$/;"	f	class:VcScheduleNoSchedule
VcScheduleNoSchedule	elements/local/FlowNet/scheduler/sched_algorithms/SchedNoSchedule.hh	/^class VcScheduleNoSchedule : public VcSchedule {$/;"	c
VcScheduleOuter	elements/local/FlowNet/common/ScheduleOuter.hh	/^        VcScheduleOuter() {};$/;"	f	class:VcScheduleOuter
VcScheduleOuter	elements/local/FlowNet/common/ScheduleOuter.hh	/^class VcScheduleOuter : public Algorithm {$/;"	c
VcScheduleOuterNoSchedule	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterNoSchedule.cc	/^VcScheduleOuterNoSchedule::VcScheduleOuterNoSchedule()$/;"	f	class:VcScheduleOuterNoSchedule
VcScheduleOuterNoSchedule	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterNoSchedule.hh	/^class VcScheduleOuterNoSchedule : public VcScheduleOuter {$/;"	c
VcScheduleOuterVirtualpressure	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterVirtualpressure.cc	/^VcScheduleOuterVirtualpressure::VcScheduleOuterVirtualpressure()$/;"	f	class:VcScheduleOuterVirtualpressure
VcScheduleOuterVirtualpressure	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterVirtualpressure.hh	/^class VcScheduleOuterVirtualpressure : public VcScheduleOuter {$/;"	c
VcScheduleWBS	elements/local/FlowNet/scheduler/sched_algorithms/SchedWBS.cc	/^VcScheduleWBS::VcScheduleWBS(double b, double g)$/;"	f	class:VcScheduleWBS
VcScheduleWBS	elements/local/FlowNet/scheduler/sched_algorithms/SchedWBS.hh	/^class VcScheduleWBS : public VcSchedule {$/;"	c
VcTable	elements/local/FlowNet/common/Table.hh	/^	VcTable() { };$/;"	f	class:VcTable
VcTable	elements/local/FlowNet/common/Table.hh	/^	VcTable(const char* n) { };$/;"	f	class:VcTable
VcTable	elements/local/FlowNet/common/Table.hh	/^class VcTable {$/;"	c
VcTableLinear	elements/local/FlowNet/libtable/TableLinear.hh	/^VcTableLinear<T>::VcTableLinear(const char *, int max_queue_size, int tmsize )$/;"	f	class:VcTableLinear
VcTableLinear	elements/local/FlowNet/libtable/TableLinear.hh	/^VcTableLinear<T>::VcTableLinear(int max_queue_size, int tmsize )$/;"	f	class:VcTableLinear
VcTableLinear	elements/local/FlowNet/libtable/TableLinear.hh	/^class VcTableLinear : public VcTable<T> {$/;"	c
Vector	include/click/vector.cc	/^Vector<T>::Vector(const Vector<T> &x)$/;"	f	class:Vector
Vector	include/click/vector.hh	/^    Vector(const Vector<T*>& x)		: Base(x) { }$/;"	f	class:Vector
Vector	include/click/vector.hh	/^    explicit Vector()			: Base() { }$/;"	f	class:Vector
Vector	include/click/vector.hh	/^    explicit Vector()$/;"	f	class:Vector
Vector	include/click/vector.hh	/^    explicit Vector(size_type n, T* x)	: Base(n, (void *)x) { }$/;"	f	class:Vector
Vector	include/click/vector.hh	/^    explicit Vector(size_type n, const T &e)$/;"	f	class:Vector
Vector	include/click/vector.hh	/^    explicit Vector(size_type n, void* e)$/;"	f	class:Vector
Vector	include/click/vector.hh	/^class Vector { public:$/;"	c
Vector	include/click/vector.hh	/^class Vector<T*>: private Vector<void*> {$/;"	c
Vector	include/click/vector.hh	/^class Vector<void*> { public:$/;"	c
Vector	lib/vectorv.cc	/^Vector<void*>::Vector(const Vector<void*> &x)$/;"	f	class:Vector
VectorTest	elements/test/vectortest.cc	/^VectorTest::VectorTest()$/;"	f	class:VectorTest
VectorTest	elements/test/vectortest.hh	/^class VectorTest : public Element { public:$/;"	c
VirtualPort	elements/ip/directiplookup.hh	/^    struct VirtualPort {$/;"	s	class:DirectIPLookup
VlanID	drivers/e1000-4.x/src/ans.h	/^    u16 VlanID[MAX_NUM_VLAN];$/;"	m	struct:_iANSsupport_t
VlanIDCapable	drivers/e1000-4.x/src/base_comm.h	/^    u32           VlanIDCapable;          \/* Cast from IANS_BD_SUPPORT *\/$/;"	m	struct:_IANS_BD_PARAM_IVLAN_CAP
VlanIDFilteringAble	drivers/e1000-4.x/src/base_comm.h	/^    u32           VlanIDFilteringAble;    \/* Cast from IANS_BD_SUPPORT *\/$/;"	m	struct:_IANS_BD_PARAM_IVLAN_CAP
VlanIDFilteringRequest	drivers/e1000-4.x/src/base_comm.h	/^    u32           VlanIDFilteringRequest;  \/* Cast from IANS_BD_REQUEST *\/$/;"	m	struct:_IANS_BD_PARAM_IVLAN_SET_MODE
VlanIDRequest	drivers/e1000-4.x/src/base_comm.h	/^    u32           VlanIDRequest;           \/* Cast from IANS_BD_REQUEST *\/$/;"	m	struct:_IANS_BD_PARAM_IVLAN_SET_MODE
WAITING	elements/grid/gridlogger.hh	/^    WAITING,$/;"	e	enum:GridLogger::state_t
WAITING_TO_START	elements/grid/linktester.hh	/^    WAITING_TO_START,$/;"	e	enum:LinkTester::state_t
WAIT_CONNECT	elements/local/OpenFlow/lib/vconn.hh	/^    WAIT_CONNECT,$/;"	e	enum:vconn_wait_type
WAIT_RECV	elements/local/OpenFlow/lib/vconn.hh	/^    WAIT_RECV,$/;"	e	enum:vconn_wait_type
WAIT_SEND	elements/local/OpenFlow/lib/vconn.hh	/^    WAIT_SEND$/;"	e	enum:vconn_wait_type
WANT_MMAP_UNIT	include/click/fromfile.hh	/^    enum { WANT_MMAP_UNIT = 4194304 }; \/\/ 4 MB$/;"	e	enum:FromFile::__anon452
WANT_MOD_USE_COUNT	bsdmodule/modulepriv.hh	20;"	d
WANT_MOD_USE_COUNT	lib/driver.cc	25;"	d	file:
WANT_MOD_USE_COUNT	lib/router.cc	22;"	d	file:
WANT_MOD_USE_COUNT	linuxmodule/modulepriv.hh	3;"	d
WARNINGS_OPT	ns/nsclick.cc	66;"	d	file:
WARNINGS_OPT	userlevel/click.cc	70;"	d	file:
WARN_ON	drivers/e1000-7.x/src/kcompat.h	219;"	d
WAS_ENTRY	elements/grid/gridgenericlogger.hh	/^    WAS_ENTRY         = 0xf2,$/;"	e	enum:GridGenericLogger::reason_t
WAS_SENDER	elements/grid/gridgenericlogger.hh	/^    WAS_SENDER        = 0xf1,$/;"	e	enum:GridGenericLogger::reason_t
WBSEtherFilter	elements/local/FlowNet/scheduler/WBSEtherFilter.cc	/^WBSEtherFilter::WBSEtherFilter()$/;"	f	class:WBSEtherFilter
WBSEtherFilter	elements/local/FlowNet/scheduler/WBSEtherFilter.hh	/^class WBSEtherFilter : public Element { public:$/;"	c
WIFI_ACK_A	include/clicknet/wifi.h	395;"	d
WIFI_ACK_B	include/clicknet/wifi.h	388;"	d
WIFI_ADDR_LEN	include/clicknet/wifi.h	58;"	d
WIFI_AUTH_ALGORITHM	include/clicknet/wifi.h	224;"	d
WIFI_AUTH_ALG_OPEN	include/clicknet/wifi.h	231;"	d
WIFI_AUTH_ALG_SHARED	include/clicknet/wifi.h	232;"	d
WIFI_AUTH_NONE	include/clicknet/wifi.h	291;"	d
WIFI_AUTH_OPEN	include/clicknet/wifi.h	292;"	d
WIFI_AUTH_OPEN_REQUEST	include/clicknet/wifi.h	234;"	d
WIFI_AUTH_OPEN_RESPONSE	include/clicknet/wifi.h	235;"	d
WIFI_AUTH_SHARED	include/clicknet/wifi.h	293;"	d
WIFI_AUTH_SHARED_CHALLENGE	include/clicknet/wifi.h	238;"	d
WIFI_AUTH_SHARED_PASS	include/clicknet/wifi.h	240;"	d
WIFI_AUTH_SHARED_REQUEST	include/clicknet/wifi.h	237;"	d
WIFI_AUTH_SHARED_RESPONSE	include/clicknet/wifi.h	239;"	d
WIFI_AUTH_STATUS	include/clicknet/wifi.h	228;"	d
WIFI_AUTH_TRANSACTION	include/clicknet/wifi.h	226;"	d
WIFI_BEACON_CAPABILITY	include/clicknet/wifi.h	139;"	d
WIFI_BEACON_INTERVAL	include/clicknet/wifi.h	137;"	d
WIFI_CAPINFO_CF_POLLABLE	include/clicknet/wifi.h	144;"	d
WIFI_CAPINFO_CF_POLLREQ	include/clicknet/wifi.h	145;"	d
WIFI_CAPINFO_ESS	include/clicknet/wifi.h	142;"	d
WIFI_CAPINFO_IBSS	include/clicknet/wifi.h	143;"	d
WIFI_CAPINFO_PRIVACY	include/clicknet/wifi.h	146;"	d
WIFI_CW_MAX	include/clicknet/wifi.h	402;"	d
WIFI_CW_MIN	include/clicknet/wifi.h	401;"	d
WIFI_DIFS_A	include/clicknet/wifi.h	393;"	d
WIFI_DIFS_B	include/clicknet/wifi.h	386;"	d
WIFI_ELEMID_CFPARMS	include/clicknet/wifi.h	/^  WIFI_ELEMID_CFPARMS		= 4,$/;"	e	enum:__anon493
WIFI_ELEMID_CHALLENGE	include/clicknet/wifi.h	/^  WIFI_ELEMID_CHALLENGE		= 16,$/;"	e	enum:__anon493
WIFI_ELEMID_DSPARMS	include/clicknet/wifi.h	/^  WIFI_ELEMID_DSPARMS		= 3,$/;"	e	enum:__anon493
WIFI_ELEMID_ERP	include/clicknet/wifi.h	/^  WIFI_ELEMID_ERP		= 42,$/;"	e	enum:__anon493
WIFI_ELEMID_FHPARMS	include/clicknet/wifi.h	/^  WIFI_ELEMID_FHPARMS		= 2,$/;"	e	enum:__anon493
WIFI_ELEMID_IBSSPARMS	include/clicknet/wifi.h	/^  WIFI_ELEMID_IBSSPARMS		= 6,$/;"	e	enum:__anon493
WIFI_ELEMID_RATES	include/clicknet/wifi.h	/^  WIFI_ELEMID_RATES		= 1,$/;"	e	enum:__anon493
WIFI_ELEMID_SSID	include/clicknet/wifi.h	/^  WIFI_ELEMID_SSID		= 0,$/;"	e	enum:__anon493
WIFI_ELEMID_TIM	include/clicknet/wifi.h	/^  WIFI_ELEMID_TIM		= 5,$/;"	e	enum:__anon493
WIFI_ELEMID_VENDOR	include/clicknet/wifi.h	/^  WIFI_ELEMID_VENDOR		= 221$/;"	e	enum:__anon493
WIFI_ELEMID_XRATES	include/clicknet/wifi.h	/^  WIFI_ELEMID_XRATES		= 50,$/;"	e	enum:__anon493
WIFI_EXTRA_ANNO	include/click/packet_anno.hh	17;"	d
WIFI_EXTRA_ANNO_OFFSET	include/click/packet_anno.hh	15;"	d
WIFI_EXTRA_ANNO_SIZE	include/click/packet_anno.hh	16;"	d
WIFI_EXTRA_DO_CTS	include/clicknet/wifi.h	/^  WIFI_EXTRA_DO_CTS		= (1<<8)$/;"	e	enum:__anon492
WIFI_EXTRA_DO_RTS_CTS	include/clicknet/wifi.h	/^  WIFI_EXTRA_DO_RTS_CTS		= (1<<7),$/;"	e	enum:__anon492
WIFI_EXTRA_MAGIC	include/clicknet/wifi.h	14;"	d
WIFI_EXTRA_NO_SEQ	include/clicknet/wifi.h	/^  WIFI_EXTRA_NO_SEQ		= (1<<5),$/;"	e	enum:__anon492
WIFI_EXTRA_NO_TXF	include/clicknet/wifi.h	/^  WIFI_EXTRA_NO_TXF		= (1<<6),$/;"	e	enum:__anon492
WIFI_EXTRA_RX_ERR	include/clicknet/wifi.h	/^  WIFI_EXTRA_RX_ERR		= (1<<3), \/* failed crc check *\/$/;"	e	enum:__anon492
WIFI_EXTRA_RX_MORE	include/clicknet/wifi.h	/^  WIFI_EXTRA_RX_MORE		= (1<<4), \/* first part of a fragmented skb *\/$/;"	e	enum:__anon492
WIFI_EXTRA_TX	include/clicknet/wifi.h	/^  WIFI_EXTRA_TX			= (1<<0), \/* packet transmission *\/$/;"	e	enum:__anon492
WIFI_EXTRA_TX_FAIL	include/clicknet/wifi.h	/^  WIFI_EXTRA_TX_FAIL		= (1<<1), \/* transmission failed *\/$/;"	e	enum:__anon492
WIFI_EXTRA_TX_USED_ALT_RATE	include/clicknet/wifi.h	/^  WIFI_EXTRA_TX_USED_ALT_RATE	= (1<<2), \/* used alternate bitrate *\/$/;"	e	enum:__anon492
WIFI_FC0_SUBTYPE_ACK	include/clicknet/wifi.h	93;"	d
WIFI_FC0_SUBTYPE_ASSOC_REQ	include/clicknet/wifi.h	78;"	d
WIFI_FC0_SUBTYPE_ASSOC_RESP	include/clicknet/wifi.h	79;"	d
WIFI_FC0_SUBTYPE_ATIM	include/clicknet/wifi.h	85;"	d
WIFI_FC0_SUBTYPE_AUTH	include/clicknet/wifi.h	87;"	d
WIFI_FC0_SUBTYPE_BEACON	include/clicknet/wifi.h	84;"	d
WIFI_FC0_SUBTYPE_CFACK	include/clicknet/wifi.h	102;"	d
WIFI_FC0_SUBTYPE_CFPOLL	include/clicknet/wifi.h	103;"	d
WIFI_FC0_SUBTYPE_CF_ACK	include/clicknet/wifi.h	98;"	d
WIFI_FC0_SUBTYPE_CF_ACK_CF_ACK	include/clicknet/wifi.h	104;"	d
WIFI_FC0_SUBTYPE_CF_ACPL	include/clicknet/wifi.h	100;"	d
WIFI_FC0_SUBTYPE_CF_END	include/clicknet/wifi.h	94;"	d
WIFI_FC0_SUBTYPE_CF_END_ACK	include/clicknet/wifi.h	95;"	d
WIFI_FC0_SUBTYPE_CF_POLL	include/clicknet/wifi.h	99;"	d
WIFI_FC0_SUBTYPE_CTS	include/clicknet/wifi.h	92;"	d
WIFI_FC0_SUBTYPE_DATA	include/clicknet/wifi.h	97;"	d
WIFI_FC0_SUBTYPE_DEAUTH	include/clicknet/wifi.h	88;"	d
WIFI_FC0_SUBTYPE_DISASSOC	include/clicknet/wifi.h	86;"	d
WIFI_FC0_SUBTYPE_MASK	include/clicknet/wifi.h	76;"	d
WIFI_FC0_SUBTYPE_NODATA	include/clicknet/wifi.h	101;"	d
WIFI_FC0_SUBTYPE_PROBE_REQ	include/clicknet/wifi.h	82;"	d
WIFI_FC0_SUBTYPE_PROBE_RESP	include/clicknet/wifi.h	83;"	d
WIFI_FC0_SUBTYPE_PS_POLL	include/clicknet/wifi.h	90;"	d
WIFI_FC0_SUBTYPE_QOS	include/clicknet/wifi.h	105;"	d
WIFI_FC0_SUBTYPE_QOS_NULL	include/clicknet/wifi.h	106;"	d
WIFI_FC0_SUBTYPE_REASSOC_REQ	include/clicknet/wifi.h	80;"	d
WIFI_FC0_SUBTYPE_REASSOC_RESP	include/clicknet/wifi.h	81;"	d
WIFI_FC0_SUBTYPE_RTS	include/clicknet/wifi.h	91;"	d
WIFI_FC0_TYPE_CTL	include/clicknet/wifi.h	73;"	d
WIFI_FC0_TYPE_DATA	include/clicknet/wifi.h	74;"	d
WIFI_FC0_TYPE_MASK	include/clicknet/wifi.h	71;"	d
WIFI_FC0_TYPE_MGT	include/clicknet/wifi.h	72;"	d
WIFI_FC0_VERSION_0	include/clicknet/wifi.h	70;"	d
WIFI_FC0_VERSION_MASK	include/clicknet/wifi.h	69;"	d
WIFI_FC1_DIR_DSTODS	include/clicknet/wifi.h	113;"	d
WIFI_FC1_DIR_FROMDS	include/clicknet/wifi.h	112;"	d
WIFI_FC1_DIR_MASK	include/clicknet/wifi.h	109;"	d
WIFI_FC1_DIR_NODS	include/clicknet/wifi.h	110;"	d
WIFI_FC1_DIR_TODS	include/clicknet/wifi.h	111;"	d
WIFI_FC1_MORE_DATA	include/clicknet/wifi.h	118;"	d
WIFI_FC1_MORE_FRAG	include/clicknet/wifi.h	115;"	d
WIFI_FC1_ORDER	include/clicknet/wifi.h	120;"	d
WIFI_FC1_PWR_MGT	include/clicknet/wifi.h	117;"	d
WIFI_FC1_RETRY	include/clicknet/wifi.h	116;"	d
WIFI_FC1_WEP	include/clicknet/wifi.h	119;"	d
WIFI_KEYBUF_SIZE	include/clicknet/wifi.h	316;"	d
WIFI_LLC_HEADER	include/clicknet/wifi.h	405;"	d
WIFI_LLC_HEADER_LEN	include/clicknet/wifi.h	406;"	d
WIFI_MAX	include/clicknet/wifi.h	321;"	d
WIFI_MAX_RETRIES	include/clicknet/wifi.h	150;"	d
WIFI_MICBUF_SIZE	include/clicknet/wifi.h	317;"	d
WIFI_MIN	include/clicknet/wifi.h	324;"	d
WIFI_NWID_LEN	include/clicknet/wifi.h	122;"	d
WIFI_NWID_MAXSIZE	include/clicknet/wifi.h	197;"	d
WIFI_PLCP_HEADER_A	include/clicknet/wifi.h	396;"	d
WIFI_PLCP_HEADER_LONG_B	include/clicknet/wifi.h	389;"	d
WIFI_PLCP_HEADER_SHORT_B	include/clicknet/wifi.h	390;"	d
WIFI_POWERSAVE_CAM	include/clicknet/wifi.h	297;"	d
WIFI_POWERSAVE_NOSUP	include/clicknet/wifi.h	295;"	d
WIFI_POWERSAVE_OFF	include/clicknet/wifi.h	296;"	d
WIFI_POWERSAVE_ON	include/clicknet/wifi.h	300;"	d
WIFI_POWERSAVE_PSP	include/clicknet/wifi.h	298;"	d
WIFI_POWERSAVE_PSP_CAM	include/clicknet/wifi.h	299;"	d
WIFI_QOS_HAS_SEQ	include/clicknet/wifi.h	152;"	d
WIFI_RATES_MAXSIZE	include/clicknet/wifi.h	196;"	d
WIFI_RATE_BASIC	include/clicknet/wifi.h	302;"	d
WIFI_RATE_SIZE	include/clicknet/wifi.h	305;"	d
WIFI_RATE_VAL	include/clicknet/wifi.h	303;"	d
WIFI_REASON_ASSOC_EXPIRE	include/clicknet/wifi.h	250;"	d
WIFI_REASON_ASSOC_LEAVE	include/clicknet/wifi.h	254;"	d
WIFI_REASON_ASSOC_NOT_AUTHED	include/clicknet/wifi.h	255;"	d
WIFI_REASON_ASSOC_TOOMANY	include/clicknet/wifi.h	251;"	d
WIFI_REASON_AUTH_EXPIRE	include/clicknet/wifi.h	248;"	d
WIFI_REASON_AUTH_LEAVE	include/clicknet/wifi.h	249;"	d
WIFI_REASON_NOT_ASSOCED	include/clicknet/wifi.h	253;"	d
WIFI_REASON_NOT_AUTHED	include/clicknet/wifi.h	252;"	d
WIFI_REASON_UNSPECIFIED	include/clicknet/wifi.h	247;"	d
WIFI_SEQ_FRAG_MASK	include/clicknet/wifi.h	307;"	d
WIFI_SEQ_FRAG_SHIFT	include/clicknet/wifi.h	308;"	d
WIFI_SEQ_SEQ_MASK	include/clicknet/wifi.h	309;"	d
WIFI_SEQ_SEQ_SHIFT	include/clicknet/wifi.h	310;"	d
WIFI_SIFS_A	include/clicknet/wifi.h	394;"	d
WIFI_SIFS_B	include/clicknet/wifi.h	387;"	d
WIFI_SLOT_A	include/clicknet/wifi.h	392;"	d
WIFI_SLOT_B	include/clicknet/wifi.h	385;"	d
WIFI_STATUS_ALG	include/clicknet/wifi.h	267;"	d
WIFI_STATUS_BASIC_RATES	include/clicknet/wifi.h	271;"	d
WIFI_STATUS_CAPINFO	include/clicknet/wifi.h	264;"	d
WIFI_STATUS_CHALLENGE	include/clicknet/wifi.h	269;"	d
WIFI_STATUS_NOT_ASSOCED	include/clicknet/wifi.h	265;"	d
WIFI_STATUS_OTHER	include/clicknet/wifi.h	266;"	d
WIFI_STATUS_RATES	include/clicknet/wifi.h	273;"	d
WIFI_STATUS_SEQUENCE	include/clicknet/wifi.h	268;"	d
WIFI_STATUS_SHORTSLOT_REQUIRED	include/clicknet/wifi.h	274;"	d
WIFI_STATUS_SUCCESS	include/clicknet/wifi.h	262;"	d
WIFI_STATUS_TIMEOUT	include/clicknet/wifi.h	270;"	d
WIFI_STATUS_TOO_MANY_STATIONS	include/clicknet/wifi.h	272;"	d
WIFI_STATUS_UNSPECIFIED	include/clicknet/wifi.h	263;"	d
WIFI_WEP_CRCLEN	include/clicknet/wifi.h	280;"	d
WIFI_WEP_HEADERSIZE	include/clicknet/wifi.h	283;"	d
WIFI_WEP_IVLEN	include/clicknet/wifi.h	278;"	d
WIFI_WEP_KEYLEN	include/clicknet/wifi.h	277;"	d
WIFI_WEP_KIDLEN	include/clicknet/wifi.h	279;"	d
WIFI_WEP_MIXED	include/clicknet/wifi.h	289;"	d
WIFI_WEP_NKID	include/clicknet/wifi.h	281;"	d
WIFI_WEP_NOSUP	include/clicknet/wifi.h	286;"	d
WIFI_WEP_OFF	include/clicknet/wifi.h	287;"	d
WIFI_WEP_ON	include/clicknet/wifi.h	288;"	d
WISEMAN_FIRST_REV	drivers/e1000-4.x/src/ans_driver.h	65;"	d
WLAN_DEVNAMELEN_MAX	include/clicknet/wifi.h	367;"	d
WRITE_CLOSED	elements/userlevel/controlsocket.hh	/^    enum { READ_CLOSED = 1, WRITE_CLOSED = 2, ANY_ERR = -1 };$/;"	e	enum:ControlSocket::__anon205
WRITE_PRIVATE	include/click/handler.hh	/^	WRITE_PRIVATE = h_write_private,$/;"	e	enum:Handler::DeprecatedFlags
WRITE_TEMPLATE_OPT	tools/click-pretty/click-pretty.cc	45;"	d	file:
WR_BINARY	elements/analysis/aggcounter.hh	/^    enum WriteFormat { WR_TEXT = 0, WR_BINARY = 1, WR_TEXT_IP = 2, WR_TEXT_PDF = 3 };$/;"	e	enum:AggregateCounter::WriteFormat
WR_TEXT	elements/analysis/aggcounter.hh	/^    enum WriteFormat { WR_TEXT = 0, WR_BINARY = 1, WR_TEXT_IP = 2, WR_TEXT_PDF = 3 };$/;"	e	enum:AggregateCounter::WriteFormat
WR_TEXT_IP	elements/analysis/aggcounter.hh	/^    enum WriteFormat { WR_TEXT = 0, WR_BINARY = 1, WR_TEXT_IP = 2, WR_TEXT_PDF = 3 };$/;"	e	enum:AggregateCounter::WriteFormat
WR_TEXT_PDF	elements/analysis/aggcounter.hh	/^    enum WriteFormat { WR_TEXT = 0, WR_BINARY = 1, WR_TEXT_IP = 2, WR_TEXT_PDF = 3 };$/;"	e	enum:AggregateCounter::WriteFormat
WantAligner	tools/click-align/alignclass.hh	/^  WantAligner(Alignment a) : _alignment(a) { }$/;"	f	class:WantAligner
WantAligner	tools/click-align/alignclass.hh	/^class WantAligner : public Aligner {$/;"	c
WepDecap	elements/wifi/wepdecap.cc	/^WepDecap::WepDecap()$/;"	f	class:WepDecap
WepDecap	elements/wifi/wepdecap.hh	/^class WepDecap : public Element { public:$/;"	c
WepEncap	elements/wifi/wepencap.cc	/^WepEncap::WepEncap()$/;"	f	class:WepEncap
WepEncap	elements/wifi/wepencap.hh	/^class WepEncap : public Element { public:$/;"	c
WifiDecap	elements/wifi/wifidecap.cc	/^WifiDecap::WifiDecap()$/;"	f	class:WifiDecap
WifiDecap	elements/wifi/wifidecap.hh	/^class WifiDecap : public Element { public:$/;"	c
WifiDecap_read_param	elements/wifi/wifidecap.cc	/^WifiDecap_read_param(Element *e, void *thunk)$/;"	f	file:
WifiDecap_write_param	elements/wifi/wifidecap.cc	/^WifiDecap_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
WifiDefrag	elements/wifi/wifidefrag.cc	/^WifiDefrag::WifiDefrag()$/;"	f	class:WifiDefrag
WifiDefrag	elements/wifi/wifidefrag.hh	/^class WifiDefrag : public Element { public:$/;"	c
WifiDupeFilter	elements/wifi/wifidupefilter.cc	/^WifiDupeFilter::WifiDupeFilter()$/;"	f	class:WifiDupeFilter
WifiDupeFilter	elements/wifi/wifidupefilter.hh	/^class WifiDupeFilter : public Element {$/;"	c
WifiDupeFilter_read_param	elements/wifi/wifidupefilter.cc	/^WifiDupeFilter_read_param(Element *e, void *thunk)$/;"	f	file:
WifiDupeFilter_write_param	elements/wifi/wifidupefilter.cc	/^WifiDupeFilter_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
WifiEncap	elements/wifi/wifiencap.cc	/^WifiEncap::WifiEncap()$/;"	f	class:WifiEncap
WifiEncap	elements/wifi/wifiencap.hh	/^class WifiEncap : public Element { public:$/;"	c
WifiEncap_read_param	elements/wifi/wifiencap.cc	/^WifiEncap_read_param(Element *e, void *thunk)$/;"	f	file:
WifiEncap_write_param	elements/wifi/wifiencap.cc	/^WifiEncap_write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
WifiFragment	elements/wifi/wififragment.cc	/^WifiFragment::WifiFragment()$/;"	f	class:WifiFragment
WifiFragment	elements/wifi/wififragment.hh	/^class WifiFragment : public Element { public:$/;"	c
WifiSeq	elements/wifi/wifiseq.cc	/^WifiSeq::WifiSeq()$/;"	f	class:WifiSeq
WifiSeq	elements/wifi/wifiseq.hh	/^class WifiSeq : public Element { public:$/;"	c
WirelessInfo	elements/wifi/wirelessinfo.cc	/^WirelessInfo::WirelessInfo()$/;"	f	class:WirelessInfo
WirelessInfo	elements/wifi/wirelessinfo.hh	/^class WirelessInfo : public Element { public:$/;"	c
WordArg	include/click/args.hh	/^struct WordArg {$/;"	s
Wordwise	elements/standard/classification.cc	/^namespace Wordwise {$/;"	n	namespace:Classification	file:
Wordwise	elements/standard/classification.hh	/^namespace Wordwise {$/;"	n	namespace:Classification
WritablePacket	include/click/packet.hh	/^    inline WritablePacket() { }$/;"	f	class:WritablePacket
WritablePacket	include/click/packet.hh	/^class WritablePacket : public Packet { public:$/;"	c
WriteFormat	elements/analysis/aggcounter.hh	/^    enum WriteFormat { WR_TEXT = 0, WR_BINARY = 1, WR_TEXT_IP = 2, WR_TEXT_PDF = 3 };$/;"	g	class:AggregateCounter
WriteHandlerCallback	include/click/handler.hh	/^typedef int (*WriteHandlerCallback)(const String &data, Element *element,$/;"	t
XML2CLICK_OBJS	tools/click2xml/Makefile	/^XML2CLICK_OBJS = xml2click.o$/;"	m
XTOXLL_H	elements/local/OpenFlow/lib/xtoxll.hh	34;"	d
X_BAD	tools/lib/runparse.hh	/^    enum { X_BAD = 0, X_UNK = 1, X_LT = 2, X_LEQ = 3, X_EQ = 4, X_GEQ = 5, X_GT = 6, X_NUM = 7 };$/;"	e	enum:RouterUnparserT::__anon532
X_EQ	tools/lib/runparse.hh	/^    enum { X_BAD = 0, X_UNK = 1, X_LT = 2, X_LEQ = 3, X_EQ = 4, X_GEQ = 5, X_GT = 6, X_NUM = 7 };$/;"	e	enum:RouterUnparserT::__anon532
X_FAKE	include/click/ino.hh	/^    enum { X_FAKE = 1 };$/;"	e	enum:ClickIno::__anon430
X_GEQ	tools/lib/runparse.hh	/^    enum { X_BAD = 0, X_UNK = 1, X_LT = 2, X_LEQ = 3, X_EQ = 4, X_GEQ = 5, X_GT = 6, X_NUM = 7 };$/;"	e	enum:RouterUnparserT::__anon532
X_GT	tools/lib/runparse.hh	/^    enum { X_BAD = 0, X_UNK = 1, X_LT = 2, X_LEQ = 3, X_EQ = 4, X_GEQ = 5, X_GT = 6, X_NUM = 7 };$/;"	e	enum:RouterUnparserT::__anon532
X_LEQ	tools/lib/runparse.hh	/^    enum { X_BAD = 0, X_UNK = 1, X_LT = 2, X_LEQ = 3, X_EQ = 4, X_GEQ = 5, X_GT = 6, X_NUM = 7 };$/;"	e	enum:RouterUnparserT::__anon532
X_LT	tools/lib/runparse.hh	/^    enum { X_BAD = 0, X_UNK = 1, X_LT = 2, X_LEQ = 3, X_EQ = 4, X_GEQ = 5, X_GT = 6, X_NUM = 7 };$/;"	e	enum:RouterUnparserT::__anon532
X_NUM	tools/lib/runparse.hh	/^    enum { X_BAD = 0, X_UNK = 1, X_LT = 2, X_LEQ = 3, X_EQ = 4, X_GEQ = 5, X_GT = 6, X_NUM = 7 };$/;"	e	enum:RouterUnparserT::__anon532
X_UNK	tools/lib/runparse.hh	/^    enum { X_BAD = 0, X_UNK = 1, X_LT = 2, X_LEQ = 3, X_EQ = 4, X_GEQ = 5, X_GT = 6, X_NUM = 7 };$/;"	e	enum:RouterUnparserT::__anon532
Xupdate	elements/ipsec/sha1_impl.cc	197;"	d	file:
Xupdate	elements/ipsec/sha1_impl.cc	198;"	d	file:
Xupdate	elements/ipsec/sha1_impl.cc	202;"	d	file:
Xupdate	elements/ipsec/sha1_impl.cc	203;"	d	file:
YARVISMETRIC_HH	elements/grid/yarvismetric.hh	2;"	d
YarvisMetric	elements/grid/yarvismetric.cc	/^YarvisMetric::YarvisMetric()$/;"	f	class:YarvisMetric
YarvisMetric	elements/grid/yarvismetric.hh	/^class YarvisMetric : public GridGenericMetric {$/;"	c
_	apps/clicky/src/support.h	16;"	d
_	apps/clicky/src/support.h	17;"	d
_	apps/clicky/src/support.h	30;"	d
_	elements/ipsec/des.cc	123;"	d	file:
_	elements/ipsec/des.hh	/^    des_cblock _;$/;"	m	union:des_ks_struct::__anon217
_ALL_SOURCE	elements/local/OpenFlow/include/config.h	132;"	d
_ANS_DRIVER_H	drivers/e1000-4.x/src/ans_driver.h	31;"	d
_ANS_H	drivers/e1000-4.x/src/ans.h	46;"	d
_ANS_OS_H	drivers/e1000-4.x/src/ans_os.h	48;"	d
_ATHDESC_H_	elements/wifi/athdesc.h	2;"	d
_BITRATE_H	elements/wifi/bitrate.hh	2;"	d
_BSD_SOURCE	elements/tcpudp/snooptcp.cc	20;"	d	file:
_BWSHAPER_HH	elements/local/FlowNet/common/BWShape.hh	3;"	d
_BW_SHAPE_BYCORE_CFB_HH	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.hh	2;"	d
_BW_SHAPE_BYCORE_HH	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.hh	2;"	d
_BW_SHAPE_NULL_HH	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeNULL.hh	2;"	d
_BW_SHAPE_SIMPLE_HH	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeSimple.hh	2;"	d
_BW_SHAPE_STATICMPEG2_HH	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeStaticMpeg2.hh	2;"	d
_C	include/click/glue.hh	270;"	d
_C1	elements/aqm/red.hh	/^    unsigned _C1;$/;"	m	class:RED
_C2	elements/aqm/red.hh	/^    unsigned _C2;$/;"	m	class:RED
_CLASSIFY_5TUPLE_HH_	elements/local/FlowNet/libclassify/Classify5Tuple.hh	2;"	d
_CLASSIFY_NO_CLASSIFY_HH	elements/local/FlowNet/libclassify/ClassifyNoClassify.hh	2;"	d
_CLICKNET_WIFI_H_	include/clicknet/wifi.h	11;"	d
_CLICK_IO	include/click/llrpc.h	48;"	d
_CLICK_IOC_BASE_MASK	include/click/llrpc.h	35;"	d
_CLICK_IOC_FLAT	include/click/llrpc.h	37;"	d
_CLICK_IOC_IN	include/click/llrpc.h	29;"	d
_CLICK_IOC_OUT	include/click/llrpc.h	28;"	d
_CLICK_IOC_SAFE	include/click/llrpc.h	36;"	d
_CLICK_IOC_SIZE	include/click/llrpc.h	38;"	d
_CLICK_IOC_VOID	include/click/llrpc.h	27;"	d
_CLICK_IOR	include/click/llrpc.h	49;"	d
_CLICK_IORF	include/click/llrpc.h	62;"	d
_CLICK_IORS	include/click/llrpc.h	56;"	d
_CLICK_IORSF	include/click/llrpc.h	65;"	d
_CLICK_IOS	include/click/llrpc.h	55;"	d
_CLICK_IOW	include/click/llrpc.h	50;"	d
_CLICK_IOWF	include/click/llrpc.h	63;"	d
_CLICK_IOWR	include/click/llrpc.h	51;"	d
_CLICK_IOWRF	include/click/llrpc.h	64;"	d
_CLICK_IOWRS	include/click/llrpc.h	58;"	d
_CLICK_IOWRSF	include/click/llrpc.h	67;"	d
_CLICK_IOWS	include/click/llrpc.h	57;"	d
_CLICK_IOWSF	include/click/llrpc.h	66;"	d
_CLICK_IOX	include/click/llrpc.h	47;"	d
_CLICK_NET_IOC_IN	include/click/llrpc.h	25;"	d
_CLICK_NET_IOC_OUT	include/click/llrpc.h	24;"	d
_CLICK_NET_IOC_VOID	include/click/llrpc.h	23;"	d
_CUT_BinHeap_h_	ns/CUT_BinHeap.h	3;"	d
_CongestionDetection_HH	elements/local/FlowNet/common/CongestionDetection.hh	3;"	d
_D	include/click/glue.hh	269;"	d
_DARWIN_UNLIMITED_SELECT	include/click/config-userlevel.h	236;"	d
_DEVICE_T	drivers/e1000-4.x/src/ans_os.h	83;"	d
_E1000_HW_H_	drivers/e1000-4.x/src/e1000_hw.h	34;"	d
_E1000_HW_H_	drivers/e1000-5.x/src/e1000_hw.h	34;"	d
_E1000_HW_H_	drivers/e1000-7.x/src/e1000_hw.h	34;"	d
_E1000_H_	drivers/e1000-4.x/src/e1000.h	33;"	d
_E1000_H_	drivers/e1000-5.x/src/e1000.h	33;"	d
_E1000_H_	drivers/e1000-7.x/src/e1000.h	33;"	d
_E1000_OSDEP_H_	drivers/e1000-4.x/src/e1000_osdep.h	35;"	d
_E1000_OSDEP_H_	drivers/e1000-5.x/src/e1000_osdep.h	35;"	d
_E1000_OSDEP_H_	drivers/e1000-7.x/src/e1000_osdep.h	35;"	d
_FILE_OFFSET_BITS	elements/local/OpenFlow/include/config.h	156;"	d
_FILE_OFFSET_BITS	include/click/config-userlevel.h	233;"	d
_FLOWNET_PFSINKFW_HH_	elements/local/FlowNet/sink/PFSinkFW.hh	3;"	d
_FLOW_CLASSIFY_HH	elements/local/FlowNet/common/FlowClassify.hh	3;"	d
_G1	elements/aqm/red.hh	/^    unsigned _G1;$/;"	m	class:RED
_G2	elements/aqm/red.hh	/^    unsigned _G2;$/;"	m	class:RED
_GNU_SOURCE	elements/local/OpenFlow/include/config.h	136;"	d
_HashMap_const_iterator	include/click/hashmap.cc	/^_HashMap_const_iterator<K, V>::_HashMap_const_iterator(const HashMap<K, V> *hm, bool begin)$/;"	f	class:_HashMap_const_iterator
_HashMap_const_iterator	include/click/hashmap.cc	/^_HashMap_const_iterator<K, void *>::_HashMap_const_iterator(const HashMap<K, void *> *hm, bool begin)$/;"	f	class:_HashMap_const_iterator
_HashMap_const_iterator	include/click/hashmap.hh	/^    _HashMap_const_iterator(const HashMap<K, T *> *t, bool begin) : _i(t, begin) { }$/;"	f	class:_HashMap_const_iterator
_HashMap_const_iterator	include/click/hashmap.hh	/^class _HashMap_const_iterator { public:$/;"	c
_HashMap_const_iterator	include/click/hashmap.hh	/^class _HashMap_const_iterator<K, T *> { public:$/;"	c
_HashMap_const_iterator	include/click/hashmap.hh	/^class _HashMap_const_iterator<K, void *> { public:$/;"	c
_HashMap_iterator	include/click/hashmap.hh	/^  _HashMap_iterator(HashMap<K, T *> *t, bool begin) : inherited(t, begin) { }$/;"	f	class:_HashMap_iterator
_HashMap_iterator	include/click/hashmap.hh	/^  _HashMap_iterator(HashMap<K, V> *m, bool begin) : inherited(m, begin) { }$/;"	f	class:_HashMap_iterator
_HashMap_iterator	include/click/hashmap.hh	/^  _HashMap_iterator(HashMap<K, void *> *m, bool begin) : inherited(m, begin) { }$/;"	f	class:_HashMap_iterator
_HashMap_iterator	include/click/hashmap.hh	/^class _HashMap_iterator : public _HashMap_const_iterator<K, V> { public:$/;"	c
_HashMap_iterator	include/click/hashmap.hh	/^class _HashMap_iterator<K, T *> : public _HashMap_const_iterator<K, T *> { public:$/;"	c
_HashMap_iterator	include/click/hashmap.hh	/^class _HashMap_iterator<K, void *> : public _HashMap_const_iterator<K, void *> { public:$/;"	c
_IANS_ATTR_HEADER	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _IANS_ATTR_HEADER$/;"	s
_IANS_BASE_COMM_H	drivers/e1000-4.x/src/base_comm.h	46;"	d
_IANS_BASE_OPCODE	drivers/e1000-4.x/src/base_comm.h	/^typedef enum _IANS_BASE_OPCODE$/;"	g
_IANS_BD_ANS_SET_CB	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _IANS_BD_ANS_SET_CB {$/;"	s
_IANS_BD_DUPLEX_STATUS	drivers/e1000-4.x/src/base_comm.h	/^typedef enum _IANS_BD_DUPLEX_STATUS $/;"	g
_IANS_BD_HOT_PLUG_STATUS	drivers/e1000-4.x/src/base_comm.h	/^typedef enum _IANS_BD_HOT_PLUG_STATUS {$/;"	g
_IANS_BD_HW_STATUS	drivers/e1000-4.x/src/base_comm.h	/^typedef enum _IANS_BD_HW_STATUS {$/;"	g
_IANS_BD_IOC_PARAM_STATUS	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _IANS_BD_IOC_PARAM_STATUS$/;"	s
_IANS_BD_LINK_SPEED	drivers/e1000-4.x/src/base_comm.h	/^typedef enum _IANS_BD_LINK_SPEED {$/;"	g
_IANS_BD_LINK_STATUS	drivers/e1000-4.x/src/base_comm.h	/^typedef enum _IANS_BD_LINK_STATUS $/;"	g
_IANS_BD_PARAM_EXT_CAP	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _IANS_BD_PARAM_EXT_CAP$/;"	s
_IANS_BD_PARAM_EXT_SET_MODE	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _IANS_BD_PARAM_EXT_SET_MODE$/;"	s
_IANS_BD_PARAM_HEADER	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _IANS_BD_PARAM_HEADER$/;"	s
_IANS_BD_PARAM_IDENTIFY	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _IANS_BD_PARAM_IDENTIFY$/;"	s
_IANS_BD_PARAM_ITAG_CAP	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _IANS_BD_PARAM_ITAG_CAP$/;"	s
_IANS_BD_PARAM_ITAG_SET_MODE	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _IANS_BD_PARAM_ITAG_SET_MODE$/;"	s
_IANS_BD_PARAM_IVLAN_CAP	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _IANS_BD_PARAM_IVLAN_CAP$/;"	s
_IANS_BD_PARAM_IVLAN_SET_MODE	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _IANS_BD_PARAM_IVLAN_SET_MODE$/;"	s
_IANS_BD_PARAM_IVLAN_TABLE	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _IANS_BD_PARAM_IVLAN_TABLE$/;"	s
_IANS_BD_PARAM_STATUS	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _IANS_BD_PARAM_STATUS$/;"	s
_IANS_BD_REQUEST_SUPPORT	drivers/e1000-4.x/src/base_comm.h	/^typedef enum _IANS_BD_REQUEST_SUPPORT {$/;"	g
_IANS_BD_RESET_STAGE	drivers/e1000-4.x/src/base_comm.h	/^typedef enum _IANS_BD_RESET_STAGE {$/;"	g
_IANS_BD_ROUTING	drivers/e1000-4.x/src/base_comm.h	/^typedef enum _IANS_BD_ROUTING {$/;"	g
_IANS_BD_SUPPORT	drivers/e1000-4.x/src/base_comm.h	/^typedef enum _IANS_BD_SUPPORT {$/;"	g
_IANS_BD_SUSPENDED_STAGE	drivers/e1000-4.x/src/base_comm.h	/^typedef enum _IANS_BD_SUSPENDED_STAGE {$/;"	g
_IANS_BD_TAGGING_MODE	drivers/e1000-4.x/src/base_comm.h	/^typedef enum _IANS_BD_TAGGING_MODE $/;"	g
_IANS_INDICATION	drivers/e1000-4.x/src/base_comm.h	/^typedef enum _IANS_INDICATION $/;"	g
_IANS_MAIN_MODULE_C_	drivers/e1000-4.x/src/e1000_main.c	31;"	d	file:
_IDIAG_E1000_H	drivers/e1000-4.x/src/idiag_e1000.h	30;"	d
_IDIAG_PRO_H	drivers/e1000-4.x/src/idiag_pro.h	30;"	d
_KCOMPAT_H_	drivers/e1000-4.x/src/kcompat.h	30;"	d
_KCOMPAT_H_	drivers/e1000-5.x/src/kcompat.h	30;"	d
_KCOMPAT_H_	drivers/e1000-7.x/src/kcompat.h	30;"	d
_KC_MAX_NET_DEV	drivers/e1000-4.x/src/kcompat.c	149;"	d	file:
_KC_MAX_PCI_DEV	drivers/e1000-4.x/src/kcompat.c	202;"	d	file:
_L	include/click/glue.hh	268;"	d
_LARGEFILE_SOURCE	include/click/config-userlevel.h	232;"	d
_LOOSE_KERNEL_NAMES	include/click/glue.hh	11;"	d
_Last_Attribute	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _Last_Attribute$/;"	s
_NET_IF_IEEE80211RADIOTAP_H_	include/clicknet/radiotap.h	33;"	d
_P	include/click/glue.hh	271;"	d
_PAPMO_HH_	elements/local/FlowNet/papmo/PaPMo.hh	2;"	d
_PATH_PROTOCOLS	elements/ip/ipnameinfo.cc	31;"	d	file:
_PATH_SERVICES	elements/ip/ipnameinfo.cc	34;"	d	file:
_PFFW_HH	elements/local/FlowNet/common/PF_FW.hh	2;"	d
_POSIX_PTHREAD_SEMANTICS	elements/local/OpenFlow/include/config.h	140;"	d
_Per_Frame_Attribute_Header	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _Per_Frame_Attribute_Header$/;"	s
_S	include/click/glue.hh	272;"	d
_SCHEDULE_HH	elements/local/FlowNet/common/Schedule.hh	3;"	d
_SCHEDULE_OUTER_HH	elements/local/FlowNet/common/ScheduleOuter.hh	3;"	d
_SP	include/click/glue.hh	274;"	d
_TABLE_HH	elements/local/FlowNet/common/Table.hh	3;"	d
_TABLE_LINEAR_HH	elements/local/FlowNet/libtable/TableLinear.hh	2;"	d
_TANDEM_SOURCE	elements/local/OpenFlow/include/config.h	144;"	d
_U	include/click/glue.hh	267;"	d
_Untagged_Attribute	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _Untagged_Attribute$/;"	s
_VLAN_ID_Per_Frame_Info	drivers/e1000-4.x/src/base_comm.h	/^typedef struct _VLAN_ID_Per_Frame_Info $/;"	s
_X	include/click/glue.hh	273;"	d
__ALGORITHM_H__	elements/local/FlowNet/common/Algorithm.hh	2;"	d
__CD_CORE_H__	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	2;"	d
__CD_QUEUE_LOSS_H__	elements/local/FlowNet/scheduler/CD_algorithms/CD_QueueLoss.hh	2;"	d
__CD_THRESHOLD_H__	elements/local/FlowNet/scheduler/CD_algorithms/CD_Threshold.hh	2;"	d
__CLICK_LLRPC_CAST	include/click/llrpc.h	121;"	d
__CLICK_LLRPC_CAST	include/click/llrpc.h	123;"	d
__CLICK_LLRPC_CONSTANT_GET_DATA	include/click/llrpc.h	128;"	d
__CLICK_LLRPC_CONSTANT_PUT_DATA	include/click/llrpc.h	136;"	d
__CLICK_LLRPC_GENERIC_GET_DATA	include/click/llrpc.h	126;"	d
__CLICK_LLRPC_GENERIC_PUT_DATA	include/click/llrpc.h	134;"	d
__CTRL_ATTR_MAX	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        __CTRL_ATTR_MAX,$/;"	e	enum:__anon243
__CTRL_ATTR_OP_MAX	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        __CTRL_ATTR_OP_MAX,$/;"	e	enum:__anon244
__CTRL_CMD_MAX	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        __CTRL_CMD_MAX,$/;"	e	enum:__anon242
__DP_GENL_A_MAX	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	__DP_GENL_A_MAX,$/;"	e	enum:__anon248
__DP_GENL_C_MAX	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^	__DP_GENL_C_MAX,$/;"	e	enum:dp_genl_command
__E1000_DOWN	drivers/e1000-7.x/src/e1000.h	/^	__E1000_DOWN$/;"	e	enum:e1000_state_t
__E1000_MAIN__	drivers/e1000-4.x/src/e1000_main.c	29;"	d	file:
__E1000_RESETTING	drivers/e1000-7.x/src/e1000.h	/^	__E1000_RESETTING,$/;"	e	enum:e1000_state_t
__E1000_TESTING	drivers/e1000-7.x/src/e1000.h	/^	__E1000_TESTING,$/;"	e	enum:e1000_state_t
__EXTENSIONS__	elements/local/OpenFlow/include/config.h	148;"	d
__FLOW_COMMON_HH__	elements/local/FlowNet/common/FlowCommon.hh	2;"	d
__KERNEL_STRICT_NAMES	include/click/glue.hh	12;"	d
__KERNEL__	include/click/config-linuxmodule.h	173;"	d
__MPEG2FRAMERECEIVINGBUFFER_H__	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.hh	2;"	d
__MULTIOP_FLOWSCHEDULABLE_H__	elements/local/FlowNet/scheduler/FlowSchedulable.hh	2;"	d
__MULTIOP_FLOWSHAPERABLE_H__	elements/local/FlowNet/shaper/FlowBWShaperable.hh	2;"	d
__MULTIOP_FLOW_H__	elements/local/FlowNet/common/Flow.hh	2;"	d
__MULTIOP_MPEG2_STREAMINGPROXY_H__	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	2;"	d
__MULTIOP_MPEG2_STREAMINGSTUB_H__	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	2;"	d
__MULTIOP_MPEG2_STREAMING_COMMON_H__	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	2;"	d
__MULTIOP_UTILS_H__	elements/local/FlowNet/utils/FlowNetUtils.hh	2;"	d
__NO_VERSION__	drivers/e1000-4.x/src/e1000.h	35;"	d
__NO_VERSION__	drivers/e1000-4.x/src/kcompat.h	35;"	d
__NO_VERSION__	include/click/glue.hh	19;"	d
__OPTIMIZE__	include/click/glue.hh	14;"	d
__SCHED_BACKPRESSURE_H__	elements/local/FlowNet/scheduler/sched_algorithms/SchedBackpressure.hh	2;"	d
__SCHED_HORIZON_H__	elements/local/FlowNet/scheduler/sched_algorithms/SchedHorizon.hh	2;"	d
__SCHED_LOG_WEIGHT_H__	elements/local/FlowNet/scheduler/sched_algorithms/SchedLogWeight.hh	2;"	d
__SCHED_NO_SCHEDULE_H__	elements/local/FlowNet/scheduler/sched_algorithms/SchedNoSchedule.hh	2;"	d
__SCHED_OUTER_NO_H__	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterNoSchedule.hh	2;"	d
__SCHED_OUTER_VIRTUALPRESSURE_H__	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterVirtualpressure.hh	2;"	d
__SCHED_WBS_H__	elements/local/FlowNet/scheduler/sched_algorithms/SchedWBS.hh	2;"	d
__assert	lib/glue.cc	/^extern "C" void __assert(const char *file, int line, const char *cond) {$/;"	f
__assert_fail	lib/glue.cc	/^__assert_fail(const char *__assertion,$/;"	f
__call_read	include/click/handler.hh	/^    inline String __call_read(Element *e, void *new_user_data) const {$/;"	f	class:Handler
__clear	include/click/list.hh	/^    void __clear() {$/;"	f	class:List
__cxa_pure_virtual	lib/glue.cc	/^__cxa_pure_virtual()$/;"	f
__devexit	drivers/e1000-4.x/src/kcompat.h	66;"	d
__devexit_p	drivers/e1000-4.x/src/kcompat.h	453;"	d
__devexit_p	drivers/e1000-5.x/src/kcompat.h	536;"	d
__devexit_p	drivers/e1000-7.x/src/kcompat.h	722;"	d
__devinit	drivers/e1000-4.x/src/kcompat.h	62;"	d
__devinitdata	drivers/e1000-4.x/src/e1000_main.c	/^static struct pci_device_id e1000_pci_tbl[] __devinitdata = {$/;"	v	typeref:struct:e1000_pci_tbl	file:
__devinitdata	drivers/e1000-4.x/src/kcompat.h	70;"	d
__e1000_maybe_stop_tx	drivers/e1000-7.x/src/e1000_main.c	/^static int __e1000_maybe_stop_tx(struct net_device *netdev, int size)$/;"	f	file:
__exit	drivers/e1000-4.x/src/kcompat.h	58;"	d
__init	drivers/e1000-4.x/src/kcompat.h	54;"	d
__iomem	drivers/e1000-7.x/src/kcompat.h	908;"	d
__ismask	include/click/glue.hh	278;"	d
__map_element_name	tools/lib/routert.cc	/^RouterT::__map_element_name(const String &name, int new_eindex)$/;"	f	class:RouterT
__pure_virtual	lib/glue.cc	/^__pure_virtual()$/;"	f
__read_mostly	drivers/e1000-7.x/src/e1000_main.c	/^static unsigned int copybreak __read_mostly = COPYBREAK_DEFAULT;$/;"	v	file:
__read_mostly	drivers/e1000-7.x/src/kcompat.h	181;"	d
__rtti_si	lib/glue.cc	/^__rtti_si()$/;"	f
__rtti_user	lib/glue.cc	/^__rtti_user()$/;"	f
_a	elements/aqm/pi.hh	/^	double _a, _b, _w, _p;$/;"	m	class:PI
_a	elements/grid/dsrroutetable.hh	/^    const IPAddress _a;$/;"	m	struct:DSRRouteTable::link_filter
_aa	include/click/packet.hh	/^    AllAnno _aa;$/;"	m	class:Packet
_absolute_seq	elements/analysis/fromtcpdump.hh	/^    int _absolute_seq;$/;"	m	class:FromTcpdump
_accept_frame	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.hh	/^	int _accept_frame;$/;"	m	class:VcBWShapeByCD
_accept_frame	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.hh	/^	int _accept_frame;$/;"	m	class:VcBWShapeByCD_CFB
_accept_frame	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeStaticMpeg2.hh	/^	int _accept_frame;$/;"	m	class:VcBWShapeStaticMpeg2
_accum	elements/linuxmodule/cyclecountaccum.hh	/^    uint64_t _accum;$/;"	m	class:CycleCountAccum
_accum	elements/linuxmodule/perfcountaccum.hh	/^  uint64_t _accum;$/;"	m	class:PerfCountAccum
_accum	elements/linuxmodule/rtcycles.hh	/^    click_cycles_t _accum;$/;"	m	class:RTCycles
_action	elements/standard/settimestamp.hh	/^    int _action;$/;"	m	class:SetTimestamp
_actions	apps/clicky/src/whandler.hh	/^    GtkWidget *_actions[2];$/;"	m	struct:clicky::whandler
_actions_apply	apps/clicky/src/whandler.hh	/^    GtkWidget *_actions_apply[2];$/;"	m	struct:clicky::whandler
_actions_changed	apps/clicky/src/whandler.hh	/^    bool _actions_changed;$/;"	m	struct:clicky::whandler
_actions_hname	apps/clicky/src/whandler.hh	/^    String _actions_hname;$/;"	m	struct:clicky::whandler
_activations	elements/linuxmodule/polldevice.hh	/^  uint32_t _activations;$/;"	m	class:PollDevice
_activations	elements/linuxmodule/todevice.hh	/^    uint32_t _activations;$/;"	m	class:ToDevice
_active	apps/clicky/src/cdriver.hh	/^    bool _active;$/;"	m	class:clicky::clickfs_cdriver
_active	elements/analysis/aggcounter.hh	/^    bool _active;$/;"	m	class:AggregateCounter
_active	elements/analysis/fromcapdump.hh	/^    bool _active;$/;"	m	class:FromCapDump
_active	elements/analysis/fromdagdump.hh	/^    bool _active;$/;"	m	class:FromDAGDump
_active	elements/analysis/fromflandump.hh	/^    bool _active;$/;"	m	class:FromFlanDump
_active	elements/analysis/fromnetflowsumdump.hh	/^    bool _active;$/;"	m	class:FromNetFlowSummaryDump
_active	elements/analysis/fromnlanrdump.hh	/^    bool _active;$/;"	m	class:FromNLANRDump
_active	elements/bsdmodule/fastudpsrc.hh	/^  bool _active;$/;"	m	class:FastUDPSource
_active	elements/ethernet/arpprint.hh	/^    bool _active;$/;"	m	class:ARPPrint
_active	elements/ethernet/etherpausesource.hh	/^    bool _active;$/;"	m	class:EtherPauseSource
_active	elements/icmp/icmpsendpings.hh	/^    bool _active;$/;"	m	class:ICMPPingSource
_active	elements/ip/decipttl.hh	/^    bool _active;$/;"	m	class:DecIPTTL
_active	elements/ip/ipprint.hh	/^  bool _active;$/;"	m	class:IPPrint
_active	elements/ip/rangeiplookup.hh	/^    bool _active;$/;"	m	class:RangeIPLookup
_active	elements/linuxmodule/fasttcpflows.hh	/^  bool _active;$/;"	m	class:FastTCPFlows
_active	elements/linuxmodule/fastudpflows.hh	/^  bool _active;$/;"	m	class:FastUDPFlows
_active	elements/linuxmodule/fastudpsrc.hh	/^  bool _active;$/;"	m	class:FastUDPSource
_active	elements/linuxmodule/fastudpsrcip6.hh	/^  bool _active;$/;"	m	class:FastUDPSourceIP6
_active	elements/linuxmodule/fromdevice.hh	/^    bool _active;$/;"	m	class:FromDevice
_active	elements/standard/discard.hh	/^    bool _active;$/;"	m	class:Discard
_active	elements/standard/infinitesource.hh	/^    bool _active;$/;"	m	class:InfiniteSource
_active	elements/standard/print.hh	/^    bool _active;$/;"	m	class:Print
_active	elements/standard/randomsample.hh	/^    bool _active;$/;"	m	class:RandomSample
_active	elements/standard/ratedsource.hh	/^    bool _active;$/;"	m	class:RatedSource
_active	elements/standard/ratedunqueue.hh	/^    bool _active;$/;"	m	class:RatedUnqueue
_active	elements/standard/timedsource.hh	/^    bool _active;$/;"	m	class:TimedSource
_active	elements/standard/unqueue.hh	/^    bool _active;$/;"	m	class:Unqueue
_active	elements/test/handlertask.hh	/^    bool _active;$/;"	m	class:HandlerTask
_active	elements/test/nulltask.hh	/^    bool _active;$/;"	m	class:NullTask
_active	elements/userlevel/fromdump.hh	/^    bool _active;$/;"	m	class:FromDump
_active	elements/userlevel/progressbar.hh	/^    bool _active;$/;"	m	class:ProgressBar
_active	elements/userlevel/socket.hh	/^  int _active;	\/\/ connection descriptor$/;"	m	class:Socket
_active	elements/userlevel/todump.hh	/^    bool _active;$/;"	m	class:ToDump
_active	elements/wifi/autoratefallback.hh	/^  bool _active;$/;"	m	class:AutoRateFallback
_active	elements/wifi/fromhandler.hh	/^    bool _active;$/;"	m	class:FromHandler
_active	elements/wifi/madwifirate.hh	/^  bool _active;$/;"	m	class:MadwifiRate
_active	elements/wifi/probetxrate.hh	/^  bool _active;$/;"	m	class:ProbeTXRate
_active	elements/wifi/wepencap.hh	/^  bool _active;$/;"	m	class:WepEncap
_active_conns	apps/clicky/src/wdiagram.hh	/^    std::vector<dconn *> _active_conns;$/;"	m	class:clicky::wdiagram
_active_nports	apps/clicky/src/wdiagram.hh	/^    int _active_nports;$/;"	m	class:clicky::wdiagram
_active_offsets	apps/clicky/src/wdiagram.hh	/^    std::vector<int> _active_offsets;$/;"	m	class:clicky::wdiagram
_active_ports	apps/clicky/src/wdiagram.hh	/^    std::vector<int> _active_ports;$/;"	m	class:clicky::wdiagram
_active_sec	elements/analysis/aggregateipaddrpair.hh	/^    unsigned _active_sec;$/;"	m	class:AggregateIPAddrPair
_active_sec	elements/analysis/aggregateipflows.hh	/^    unsigned _active_sec;$/;"	m	class:AggregateIPFlows
_adaptive_restride_iter	include/click/routerthread.hh	/^    int _adaptive_restride_iter;$/;"	m	class:RouterThread
_adaptive_restride_timestamp	include/click/routerthread.hh	/^    Timestamp _adaptive_restride_timestamp;$/;"	m	class:RouterThread
_adaptive_stepup	elements/wifi/autoratefallback.hh	/^  bool _adaptive_stepup;$/;"	m	class:AutoRateFallback
_addr	elements/ethernet/hostetherfilter.hh	/^  EtherAddress _addr;$/;"	m	class:HostEtherFilter
_addr	elements/etherswitch/spantree.hh	/^  uint8_t _addr[6];$/;"	m	class:EtherSpanTree
_addr	include/click/ip6address.hh	/^    click_in6_addr _addr;$/;"	m	class:IP6Address
_addr	include/click/ipaddress.hh	/^    uint32_t _addr;$/;"	m	class:IPAddress
_address	elements/ethernet/storeetheraddress.hh	/^    EtherAddress _address;$/;"	m	class:StoreEtherAddress
_address	elements/ip/storeipaddress.hh	/^    IPAddress _address;$/;"	m	class:StoreIPAddress
_addresses	elements/grid/updateroutes.hh	/^  Table _addresses; \/\/ immediate nbrs$/;"	m	class:UpdateGridRoutes
_addrs	elements/ip/setrandipaddress.hh	/^  IPAddress *_addrs;$/;"	m	class:SetRandIPAddress
_adjust_headroom	elements/userlevel/kerneltun.hh	/^    bool _adjust_headroom;$/;"	m	class:KernelTun
_age	elements/ethernet/arptable.hh	/^    AgeList _age;$/;"	m	class:ARPTable
_age	elements/wifi/linktable.hh	/^    uint32_t _age;$/;"	m	class:LinkTable::LinkInfo
_age_link	elements/ethernet/arptable.hh	/^	List_member<ARPEntry> _age_link;$/;"	m	struct:ARPTable::ARPEntry
_agg_notifier	elements/analysis/aggregatefirst.hh	/^    AggregateNotifier *_agg_notifier;$/;"	m	class:AggregateFirst
_agg_notifier	elements/analysis/aggregatelast.hh	/^    AggregateNotifier *_agg_notifier;$/;"	m	class:AggregateLast
_agg_notifier	elements/analysis/toipflowdumps.hh	/^    AggregateNotifier *_agg_notifier;$/;"	m	class:ToIPFlowDumps
_agg_notifier	elements/userlevel/ipflowrawsockets.hh	/^    AggregateNotifier *_agg_notifier;$/;"	m	class:IPFlowRawSockets
_aggregate	elements/analysis/aggpktcounter.hh	/^	uint32_t _aggregate;$/;"	m	class:AggregatePacketCounter::Flow
_aggregate	elements/analysis/aggregateipflows.hh	/^	uint32_t _aggregate;$/;"	m	struct:AggregateIPFlows::FlowInfo
_aggregate	elements/analysis/fromcapdump.hh	/^    uint32_t _aggregate;$/;"	m	class:FromCapDump
_aggregate	elements/analysis/fromipsumdump.hh	/^    uint32_t _aggregate;$/;"	m	class:FromIPSummaryDump
_aggregate	elements/analysis/toipflowdumps.hh	/^	uint32_t _aggregate;$/;"	m	class:ToIPFlowDumps::Flow
_aggregate	elements/userlevel/ipflowrawsockets.hh	/^	uint32_t _aggregate;$/;"	m	class:IPFlowRawSockets::Flow
_ai	elements/grid/linktestreceiver.hh	/^  AiroInfo *_ai;$/;"	m	class:LinkTestReceiver
_align_offset	elements/standard/classification.hh	/^    unsigned _align_offset;$/;"	m	class:Classification::Wordwise::CompressedProgram
_align_offset	elements/standard/classification.hh	/^    unsigned _align_offset;$/;"	m	class:Classification::Wordwise::Program
_aligned	elements/grid/gridproxy.hh	/^  bool _aligned;$/;"	m	class:GridProxy
_aligned	elements/icmp/icmpipencap.hh	/^    bool _aligned;$/;"	m	class:ICMPIPEncap
_aligned	elements/icmp/icmppingencap.hh	/^    bool _aligned;$/;"	m	class:ICMPPingEncap
_aligned	elements/ip/checkipheader.hh	/^  bool _aligned;$/;"	m	class:CheckIPHeader
_aligned	elements/ip/ipinputcombo.hh	/^  bool _aligned;$/;"	m	class:IPInputCombo
_aligned	elements/ip6/checkip6header.hh	/^  bool _aligned;$/;"	m	class:CheckIP6Header
_aligned	elements/ipsec/ipsecencap.hh	/^  bool _aligned;$/;"	m	class:IPsecEncap
_aligned	elements/tcpudp/udpip6encap.hh	/^    bool _aligned;$/;"	m	class:UDPIP6Encap
_aligned	elements/tcpudp/udpipencap.hh	/^    bool _aligned;$/;"	m	class:UDPIPEncap
_aligner	tools/click-align/alignclass.hh	/^  Aligner *_aligner;$/;"	m	class:AlignClass
_aligners	tools/click-align/click-align.cc	/^    Vector<Aligner *> _aligners;$/;"	m	struct:RouterAlign	file:
_alignment	tools/click-align/alignclass.hh	/^  Alignment _alignment;$/;"	m	class:GeneratorAligner
_alignment	tools/click-align/alignclass.hh	/^  Alignment _alignment;$/;"	m	class:WantAligner
_alignment_chunk	elements/test/checkpacket.hh	/^    int _alignment_chunk;$/;"	m	class:CheckPacket
_alignment_offset	elements/test/checkpacket.hh	/^    int _alignment_offset;$/;"	m	class:CheckPacket
_alive	tools/click-devirtualize/cxxclass.hh	/^  bool _alive;$/;"	m	class:CxxFunction
_all	elements/analysis/adjusttimestamp.hh	/^    bool _all;$/;"	m	class:AdjustTimestamp
_all	elements/standard/stridesched.hh	/^    Client *_all;$/;"	m	class:StrideSched
_all_bridges	elements/etherswitch/bridgemessage.cc	/^uint8_t BridgeMessage::_all_bridges[6] = {$/;"	m	class:BridgeMessage	file:
_all_bridges	elements/etherswitch/bridgemessage.hh	/^  static uint8_t _all_bridges[6];$/;"	m	class:BridgeMessage
_alloc	elements/ethernet/arptable.hh	/^    SizedHashAllocator<sizeof(ARPEntry)> _alloc;$/;"	m	class:ARPTable
_alloc	include/click/hashtable.hh	/^    SizedHashAllocator<sizeof(elt)> _alloc;$/;"	m	class:HashTable
_allocated	linuxmodule/skbmgr.cc	/^  int _allocated;$/;"	m	class:RecycledSkbPool	file:
_allocator	elements/icmp/icmppingrewriter.hh	/^    SizedHashAllocator<sizeof(ICMPPingFlow)> _allocator;$/;"	m	class:ICMPPingRewriter
_allocator	elements/ip/ipaddrpairrewriter.hh	/^    SizedHashAllocator<sizeof(IPAddrPairFlow)> _allocator;$/;"	m	class:IPAddrPairRewriter
_allocator	elements/ip/ipaddrrewriter.hh	/^    SizedHashAllocator<sizeof(IPAddrFlow)> _allocator;$/;"	m	class:IPAddrRewriter
_allocator	elements/ip/ipfragmentmap.hh	/^    SizedHashAllocator<Entry> _allocator;$/;"	m	class:IPFragmentMap
_allocator	elements/tcpudp/tcprewriter.hh	/^    SizedHashAllocator<sizeof(TCPFlow)> _allocator;$/;"	m	class:TCPRewriter
_allocator	elements/tcpudp/udprewriter.hh	/^    SizedHashAllocator<sizeof(IPRewriterFlow)> _allocator;$/;"	m	class:UDPRewriter
_alloced_mem	elements/ip/ipratemon.hh	/^  size_t _alloced_mem;		\/\/ total allocated memory$/;"	m	class:IPRateMonitor
_allow	elements/userlevel/socket.hh	/^  IPRouteTable *_allow;		\/\/ lookup table of good hosts$/;"	m	class:Socket
_allow_nonexistent	elements/bsdmodule/tohost.hh	/^    bool _allow_nonexistent;$/;"	m	class:ToHost
_alpha	elements/grid/dsdvroutetable.hh	/^  unsigned int    _alpha; \/\/ percent, 0-100$/;"	m	class:DSDVRouteTable
_alt_rate	elements/wifi/autoratefallback.hh	/^  bool _alt_rate;$/;"	m	class:AutoRateFallback
_alt_rate	elements/wifi/madwifirate.hh	/^  bool _alt_rate;$/;"	m	class:MadwifiRate
_anno	elements/analysis/aggpktcounter.hh	/^    int _anno;$/;"	m	class:AggregatePacketCounter
_anno	elements/ethernet/vlandecap.hh	/^    bool _anno;$/;"	m	class:VLANDecap
_anno	elements/ip/getipaddress.hh	/^    int _anno;$/;"	m	class:GetIPAddress
_anno	elements/ip/setipaddress.hh	/^    int _anno;$/;"	m	class:SetIPAddress
_anno	elements/standard/checkpaint.hh	/^    uint8_t _anno;$/;"	m	class:CheckPaint
_anno	elements/standard/paint.hh	/^    uint8_t _anno;$/;"	m	class:Paint
_anno	elements/standard/paintswitch.hh	/^    uint8_t _anno;$/;"	m	class:PaintSwitch
_anno	elements/standard/painttee.hh	/^    uint8_t _anno;$/;"	m	class:PaintTee
_anno_packets	elements/ip/ipratemon.hh	/^  bool _anno_packets;		\/\/ annotate packets?$/;"	m	class:IPRateMonitor
_annos	elements/icmp/icmppingrewriter.hh	/^    unsigned _annos;$/;"	m	class:ICMPPingRewriter
_annos	elements/icmp/icmprewriter.hh	/^    unsigned _annos;$/;"	m	class:ICMPRewriter
_annos	elements/ip/ipaddrpairrewriter.hh	/^    unsigned _annos;$/;"	m	class:IPAddrPairRewriter
_annos	elements/ip/ipaddrrewriter.hh	/^    unsigned _annos;$/;"	m	class:IPAddrRewriter
_annos	elements/tcpudp/tcprewriter.hh	/^    unsigned _annos;$/;"	m	class:TCPRewriter
_annos	elements/tcpudp/udprewriter.hh	/^    unsigned _annos;$/;"	m	class:UDPRewriter
_anonymous_class_count	tools/lib/lexert.hh	/^    int _anonymous_class_count;$/;"	m	class:LexerT
_anonymous_offset	include/click/lexer.hh	/^    int _anonymous_offset;$/;"	m	class:Lexer
_anonymous_offset	tools/lib/lexert.hh	/^    int _anonymous_offset;$/;"	m	class:LexerT
_any_gateway_ip	elements/grid/lookuplocalgridroute.hh	/^  IPAddress _any_gateway_ip;$/;"	m	class:LookupLocalGridRoute
_archive	lib/driver.cc	/^    const Vector<ArchiveElement> *_archive;$/;"	m	class:__anon503::RequireLexerExtra	file:
_archive	tools/lib/routert.hh	/^    Vector<ArchiveElement> _archive;$/;"	m	class:RouterT
_archive_map	tools/lib/routert.hh	/^    StringMap _archive_map;$/;"	m	class:RouterT
_arena	include/click/hashmap.hh	/^  HashMap_Arena *_arena;$/;"	m	class:HashMap
_arena_factory	include/click/router.hh	/^    HashMap_ArenaFactory* _arena_factory;$/;"	m	class:Router
_arenas	include/click/bighashmap_arena.hh	/^    HashMap_Arena **_arenas[2];$/;"	m	class:HashMap_ArenaFactory
_arg_keyword	include/click/args.hh	/^    const char *_arg_keyword;$/;"	m	struct:ArgContext
_args	elements/standard/script.hh	/^    Vector<int> _args;$/;"	m	class:Script
_args	tools/click-devirtualize/cxxclass.hh	/^  String _args;$/;"	m	class:CxxFunction
_args2	elements/standard/script.hh	/^    Vector<int> _args2;$/;"	m	class:Script
_args3	elements/standard/script.hh	/^    Vector<String> _args3;$/;"	m	class:Script
_arp_queries	elements/ethernet/arpquerier.hh	/^    atomic_uint32_t _arp_queries;$/;"	m	class:ARPQuerier
_arp_queries	elements/ethernet/ip6ndsolicitor.hh	/^  int _arp_queries;$/;"	m	class:IP6NDSolicitor
_arp_responses	elements/ethernet/arpquerier.hh	/^    atomic_uint32_t _arp_responses;$/;"	m	class:ARPQuerier
_arpt	elements/ethernet/arpquerier.hh	/^    ARPTable *_arpt;$/;"	m	class:ARPQuerier
_associated	elements/wifi/station/associationrequester.hh	/^  bool _associated;$/;"	m	class:AssociationRequester
_associd	elements/wifi/ap/associationresponder.hh	/^  uint16_t _associd;$/;"	m	class:AssociationResponder
_atable	apps/clicky/src/dstyle.hh	/^    HashTable<String, ref_ptr<dactivity_style> > _atable;$/;"	m	class:clicky::dcss_set
_attachment_names	include/click/router.hh	/^    Vector<String> _attachment_names;$/;"	m	class:Router
_attachments	include/click/router.hh	/^    Vector<void*> _attachments;$/;"	m	class:Router
_autorefresh_period	apps/clicky/src/hvalues.hh	/^    int _autorefresh_period;$/;"	m	class:clicky::handler_value
_autorefresh_source	apps/clicky/src/hvalues.hh	/^    guint _autorefresh_source;$/;"	m	class:clicky::handler_value
_available	elements/test/comparepackets.hh	/^    bool _available[2];$/;"	m	class:ComparePackets
_avg	include/click/ewma.hh	/^    DirectEWMAX<P> _avg[P::rate_count];$/;"	m	class:RateEWMAX
_avg	include/click/ewma.hh	/^    value_type _avg;$/;"	m	class:DirectEWMAX
_b	elements/aqm/pi.hh	/^	double _a, _b, _w, _p;$/;"	m	class:PI
_b	elements/grid/dsrroutetable.hh	/^    const IPAddress _b;$/;"	m	struct:DSRRouteTable::link_filter
_back_match	tools/click-xform/click-xform.cc	/^  Vector<ElementT *> _back_match;$/;"	m	class:Matcher	file:
_back_to_back	elements/standard/linkunqueue.hh	/^    bool _back_to_back;$/;"	m	class:LinkUnqueue
_backoff	elements/userlevel/rawsocket.hh	/^  int _backoff;			\/\/ backoff timer for when sendto() blocks$/;"	m	class:RawSocket
_backoff	elements/userlevel/socket.hh	/^  int _backoff;			\/\/ backoff timer for when sendto() blocks$/;"	m	class:Socket
_backoff	elements/userlevel/todevice.hh	/^    int _backoff;$/;"	m	class:ToDevice
_backoff_interval	elements/grid/dsrroutetable.hh	/^    unsigned long _backoff_interval;$/;"	m	class:DSRRouteTable::InitiatedReq
_bad	elements/standard/compblock.hh	/^  int _bad;$/;"	m	class:CompareBlock
_bad_addrs	elements/icmp/icmperror.hh	/^    Vector<IPAddress> _bad_addrs;$/;"	m	class:ICMPError
_bad_metric	elements/grid/dsdvroutetable.hh	/^  const metric_t _bad_metric; \/\/ default value is ``bad''$/;"	m	class:DSDVRouteTable
_bad_metric	elements/grid/gridgenericmetric.hh	/^  static const metric_t _bad_metric; \/\/ defined in hopcountmetric.cc$/;"	m	class:GridGenericMetric
_bad_metric	elements/grid/gridroutetable.hh	/^  static const unsigned int _bad_metric = 7777777;$/;"	m	class:GridRouteTable
_bad_sa	elements/analysis/toipsumdump.hh	/^    StringAccum _bad_sa;$/;"	m	class:ToIPSummaryDump
_bad_src	elements/ip/checkipheader.hh	/^  Vector<IPAddress> _bad_src;	\/\/ array of illegal IP src addresses$/;"	m	class:CheckIPHeader
_bad_src	elements/ip/ipinputcombo.hh	/^  Vector<IPAddress> _bad_src;$/;"	m	class:IPInputCombo
_bad_src	elements/ip6/checkip6header.hh	/^  IP6Address *_bad_src; \/\/ array of illegal IP6 src addresses.$/;"	m	class:CheckIP6Header
_bandwidth	elements/standard/linkunqueue.hh	/^    uint32_t _bandwidth;$/;"	m	class:LinkUnqueue
_banner	elements/analysis/toipsumdump.hh	/^    String _banner;$/;"	m	class:ToIPSummaryDump
_banner	elements/userlevel/progressbar.hh	/^    String _banner;$/;"	m	class:ProgressBar
_base	elements/ip/ipratemon.hh	/^  Stats *_base;			\/\/ first level stats$/;"	m	class:IPRateMonitor
_base_linktype	elements/analysis/fromdagdump.hh	/^    int _base_linktype;$/;"	m	class:FromDAGDump
_base_type_map	tools/lib/lexert.hh	/^    HashTable<String, ElementClassT *> _base_type_map;$/;"	m	class:LexerT
_basic_rates	elements/wifi/station/beaconscanner.hh	/^    Vector<int> _basic_rates;$/;"	m	class:BeaconScanner::wap
_bcast	elements/wifi/ap/beaconsource.hh	/^  EtherAddress _bcast;$/;"	m	class:BeaconSource
_bcast	elements/wifi/autoratefallback.hh	/^  EtherAddress _bcast;$/;"	m	class:AutoRateFallback
_bcast	elements/wifi/availablerates.hh	/^  EtherAddress _bcast;$/;"	m	class:AvailableRates
_bcast	elements/wifi/madwifirate.hh	/^  EtherAddress _bcast;$/;"	m	class:MadwifiRate
_bcast	elements/wifi/probetxrate.hh	/^  EtherAddress _bcast;$/;"	m	class:ProbeTXRate
_bcast	elements/wifi/rxstats.hh	/^  EtherAddress _bcast;$/;"	m	class:RXStats
_bcast_count	elements/grid/dsdvroutetable.hh	/^  unsigned int _bcast_count;  \/\/ incremented on every broadcast$/;"	m	class:DSDVRouteTable
_bcast_count	elements/grid/gridroutetable.hh	/^  unsigned int _bcast_count;$/;"	m	class:GridRouteTable
_bcast_lambda	elements/grid/linktester.hh	/^  double _bcast_lambda;$/;"	m	class:LinkTester
_bcast_packet_size	elements/grid/linktester.hh	/^  unsigned int _bcast_packet_size;$/;"	m	class:LinkTester
_bcast_packets_sent	elements/grid/linktester.hh	/^  unsigned int _bcast_packets_sent;$/;"	m	class:LinkTester
_bcast_send_time	elements/grid/linktester.hh	/^  unsigned int _bcast_send_time;$/;"	m	class:LinkTester
_bcast_stats	elements/grid/linkstat.hh	/^  ProbeMap _bcast_stats;$/;"	m	class:LinkStat
_bcast_stats	elements/grid/linktracker.hh	/^  HashMap<IPAddress, bcast_t> _bcast_stats;$/;"	m	class:LinkTracker
_beacon_int	elements/wifi/station/beaconscanner.hh	/^    uint16_t _beacon_int;$/;"	m	class:BeaconScanner::wap
_beacon_int	elements/wifi/station/beacontracker.hh	/^  int _beacon_int;$/;"	m	class:BeaconTracker
_beacons	elements/wifi/station/beacontracker.hh	/^  DEQueue<beacon_t> _beacons;$/;"	m	class:BeaconTracker
_begin	elements/ip/ipfragmentmap.hh	/^	Entry **_begin;$/;"	m	struct:IPFragmentMap::place
_below	apps/clicky/src/dstyle.hh	/^    dcss_set *_below;$/;"	m	class:clicky::dcss_set
_benchmark	elements/test/timertest.hh	/^    int _benchmark;$/;"	m	class:TimerTest
_best	elements/etherswitch/spantree.hh	/^  BridgeMessage _best;$/;"	m	class:EtherSpanTree
_beta	elements/local/FlowNet/scheduler/sched_algorithms/SchedWBS.hh	/^	double _beta; \/* for the weight of the per-flow queue of the node itself *\/$/;"	m	class:VcScheduleWBS
_big_string	include/click/lexer.hh	/^	String _big_string;$/;"	m	struct:Lexer::FileState
_big_string	tools/lib/lexert.hh	/^	String _big_string;$/;"	m	struct:LexerT::FileState
_big_stuff	apps/clicky/src/rectsearch.hh	/^    std::list<T *> _big_stuff;$/;"	m	class:rect_search
_binary_size	elements/analysis/toipsumdump.hh	/^    int32_t _binary_size;$/;"	m	class:ToIPSummaryDump
_binary_tag	apps/clicky/src/wmain.hh	/^    mutable GtkTextTag *_binary_tag;$/;"	m	class:clicky::wmain
_binary_tag_table	apps/clicky/src/wmain.hh	/^    GtkTextTagTable *_binary_tag_table;$/;"	m	class:clicky::wmain
_binding	elements/ip6/addresstranslator.hh	/^    bool _binding;$/;"	m	struct:AddressTranslator::EntryMap
_bits	elements/analysis/aggregatepaint.hh	/^    int _bits;$/;"	m	class:AggregatePaint
_bitshift	elements/ip/radixiplookup.cc	/^    int _bitshift;$/;"	m	class:RadixIPLookup::Radix	file:
_bitshift	elements/ipsec/radixipseclookup.hh	/^    int _bitshift;$/;"	m	class:RadixIPsecLookup::Radix
_blacklist	elements/grid/dsrroutetable.hh	/^  Blacklist _blacklist;$/;"	m	class:DSRRouteTable
_blacklist	elements/wifi/linktable.hh	/^  IPTable _blacklist;$/;"	m	class:LinkTable
_blacklist_timer	elements/grid/dsrroutetable.hh	/^  Timer _blacklist_timer;$/;"	m	class:DSRRouteTable
_block_count	elements/linuxmodule/fromuserdevice.hh	/^    uint32_t _block_count;$/;"	m	class:FromUserDevice
_block_count	elements/linuxmodule/touserdevice.hh	/^    ulong           _block_count;$/;"	m	class:ToUserDevice
_blocking	elements/linuxmodule/touserdevice.hh	/^    bool	    _blocking;$/;"	m	class:ToUserDevice
_blocks	elements/analysis/aggcounter.hh	/^    Vector<Node *> _blocks;$/;"	m	class:AggregateCounter
_blocks	elements/analysis/anonipaddr.hh	/^    Vector<Node *> _blocks;$/;"	m	class:AnonymizeIPAddr
_body	tools/click-devirtualize/cxxclass.hh	/^  String _body;$/;"	m	class:CxxFunction
_body	tools/click-xform/click-xform.cc	/^  RouterT *_body;$/;"	m	class:Matcher	file:
_body_m	tools/click-xform/click-xform.cc	/^  AdjacencyMatrix *_body_m;$/;"	m	class:Matcher	file:
_bold_attr	apps/clicky/src/wmain.hh	/^    PangoAttrList *_bold_attr;$/;"	m	class:clicky::wmain
_bound	include/click/element.hh	/^	} _bound;$/;"	m	class:Element::Port	typeref:union:Element::Port::__anon449
_bpf_filter	elements/userlevel/fromdevice.hh	/^    String _bpf_filter;$/;"	m	class:FromDevice
_bridge_id	elements/etherswitch/bridgemessage.hh	/^  uint64_t _bridge_id;$/;"	m	class:BridgeMessage
_bridge_id	elements/etherswitch/spantree.hh	/^  uint64_t _bridge_id;		\/\/ Should be 48 bits$/;"	m	class:EtherSpanTree
_bridge_priority	elements/etherswitch/spantree.hh	/^  uint16_t _bridge_priority;	\/\/ High == unlikely to become the root node$/;"	m	class:EtherSpanTree
_broadcast_poll	elements/ethernet/arpquerier.hh	/^    int _broadcast_poll;$/;"	m	class:ARPQuerier
_broadcasts	elements/ethernet/arpquerier.hh	/^    atomic_uint32_t _broadcasts;$/;"	m	class:ARPQuerier
_bssid	elements/wifi/ap/proberesponder.hh	/^  EtherAddress _bssid;$/;"	m	class:ProbeResponder
_bssid	elements/wifi/wifiencap.hh	/^  EtherAddress _bssid;$/;"	m	class:WifiEncap
_bssid	elements/wifi/wirelessinfo.hh	/^  EtherAddress _bssid;$/;"	m	class:WirelessInfo
_bucket	include/click/hashcontainer.hh	/^    size_type _bucket;$/;"	m	class:HashContainer_const_iterator
_bucket	include/click/hashmap.hh	/^  size_t _bucket;$/;"	m	class:_HashMap_const_iterator
_bucket	include/click/tokenbucket.hh	/^    counter_type _bucket;$/;"	m	class:TokenBucketX
_buckets	include/click/hashmap.hh	/^  Elt **_buckets;$/;"	m	class:HashMap
_buckets	linuxmodule/skbmgr.cc	/^  RecycledSkbBucket _buckets[NBUCKETS];$/;"	m	class:RecycledSkbPool	file:
_buf	elements/grid/gridlogger.hh	/^  unsigned char _buf[1024];$/;"	m	class:GridLogger
_buf	elements/radio/bim.hh	/^  char _buf[2048];$/;"	m	class:BIM
_buf_begin	elements/test/schedordertest.hh	/^    int* _buf_begin;$/;"	m	class:SchedOrderTest
_buf_end	elements/test/schedordertest.hh	/^    int* _buf_end;$/;"	m	class:SchedOrderTest
_buff	elements/linuxmodule/fromuserdevice.hh	/^    Packet **_buff;$/;"	m	class:FromUserDevice
_buffer	apps/clicky/src/wmain.cc	/^    GtkTextBuffer *_buffer;$/;"	m	class:clicky::ClickyLexerTInfo	file:
_buffer	elements/analysis/fromflandump.hh	/^	const uint8_t *_buffer;$/;"	m	class:FromFlanDump::FlanFile
_buffer	elements/analysis/timesortedsched.hh	/^    int _buffer;$/;"	m	class:TimeSortedSched
_buffer	elements/local/FlowNet/papmo/PaPMo.hh	/^	struct lfc_buffer _buffer;$/;"	m	class:papmo	typeref:struct:papmo::lfc_buffer
_buffer	include/click/fromfile.hh	/^    const uint8_t *_buffer;$/;"	m	class:FromFile
_buffer	include/click/hashallocator.hh	/^    buffer *_buffer;$/;"	m	class:HashAllocator
_buffer_idx	elements/local/OpenFlow/datapath.hh	/^	uint32_t _buffer_idx;$/;"	m	class:DatapathPacketBuffer
_buffer_pos	include/click/bighashmap_arena.hh	/^    int _buffer_pos;$/;"	m	class:HashMap_Arena
_buffer_size	elements/local/FlowNet/papmo/PaPMo.hh	/^	int _buffer_size;$/;"	m	struct:lfc_buffer
_buffers	elements/local/OpenFlow/datapath.hh	/^	struct dp_packet_buffer _buffers[N_PKT_BUFFERS];$/;"	m	class:DatapathPacketBuffer	typeref:struct:DatapathPacketBuffer::dp_packet_buffer
_buffers	include/click/bighashmap_arena.hh	/^    char **_buffers;$/;"	m	class:HashMap_Arena
_buffers_cap	include/click/bighashmap_arena.hh	/^    int _buffers_cap;$/;"	m	class:HashMap_Arena
_buffers_reused	elements/linuxmodule/polldevice.hh	/^  uint32_t _buffers_reused;$/;"	m	class:PollDevice
_bufpos	elements/test/schedordertest.hh	/^    int* _bufpos;$/;"	m	class:SchedOrderTest
_bufpos_ptr	elements/test/schedordertest.hh	/^    int** _bufpos_ptr;$/;"	m	class:SchedOrderTest
_bufptr	elements/grid/gridlogger.hh	/^  size_t _bufptr; \/\/ index of next byte available in buf$/;"	m	class:GridLogger
_bufsiz	elements/test/schedordertest.hh	/^    int _bufsiz;$/;"	m	class:SchedOrderTest
_burst	elements/bsdmodule/fromdevice.hh	/^    unsigned _burst;$/;"	m	class:FromDevice
_burst	elements/bsdmodule/fromhost.hh	/^    unsigned _burst;$/;"	m	class:FromHost
_burst	elements/bsdmodule/todevice.hh	/^  unsigned _burst;$/;"	m	class:ToDevice
_burst	elements/linuxmodule/fromdevice.hh	/^    unsigned _burst;$/;"	m	class:FromDevice
_burst	elements/linuxmodule/polldevice.hh	/^    unsigned _burst;$/;"	m	class:PollDevice
_burst	elements/linuxmodule/todevice.hh	/^    unsigned _burst;$/;"	m	class:ToDevice
_burst	elements/standard/discard.hh	/^    unsigned _burst;$/;"	m	class:Discard
_burst	elements/standard/timedunqueue.hh	/^    int _burst;$/;"	m	class:TimedUnqueue
_burst	elements/standard/unqueue.hh	/^    int32_t _burst;$/;"	m	class:Unqueue
_burst	elements/standard/unqueue2.hh	/^    int _burst;$/;"	m	class:Unqueue2
_burst	elements/userlevel/fromdevice.hh	/^    int _burst;$/;"	m	class:FromDevice
_burst	elements/userlevel/kerneltun.hh	/^    unsigned _burst;$/;"	m	class:KernelTun
_burst	elements/userlevel/todevice.hh	/^    int _burst;$/;"	m	class:ToDevice
_burstsize	elements/standard/infinitesource.hh	/^    int _burstsize;$/;"	m	class:InfiniteSource
_busy_returns	elements/bsdmodule/todevice.hh	/^  unsigned long _busy_returns;$/;"	m	class:ToDevice
_busy_returns	elements/linuxmodule/todevice.hh	/^    uint32_t _busy_returns;$/;"	m	class:ToDevice
_by	tools/lib/routert.hh	/^    int _by;$/;"	m	class:RouterT::conn_iterator
_byte_count	elements/standard/averagecounter.hh	/^    atomic_uint32_t _byte_count;$/;"	m	class:AverageCounter
_byte_count	elements/standard/counter.hh	/^    counter_t _byte_count;$/;"	m	class:Counter
_byte_rate	elements/standard/counter.hh	/^    byte_rate_t _byte_rate;$/;"	m	class:Counter
_byte_trigger	elements/standard/counter.hh	/^    counter_t _byte_trigger;$/;"	m	class:Counter
_byte_trigger_h	elements/standard/counter.hh	/^    HandlerCall *_byte_trigger_h;$/;"	m	class:Counter
_bytes	elements/ip/ipprint.hh	/^  int _bytes;			\/\/ Number of bytes to dump$/;"	m	class:IPPrint
_bytes	elements/ip6/ip6print.hh	/^  unsigned _bytes;$/;"	m	class:IP6Print
_bytes	elements/standard/print.hh	/^    int _bytes;		\/\/ How many bytes of a packet to print$/;"	m	class:Print
_bytes	elements/userlevel/printold.hh	/^  int _bytes;			\/\/ How many bytes of a packet to print$/;"	m	class:PrintOld
_bytes	elements/wifi/wifiseq.hh	/^  u_int32_t _bytes;$/;"	m	class:WifiSeq
_c	include/click/lexer.hh	/^    Compound *_c;$/;"	m	class:Lexer
_cache	elements/ip/lookupiproutemp.hh	/^  struct cache_entry _cache[_cache_buckets];$/;"	m	class:LookupIPRouteMP	typeref:struct:LookupIPRouteMP::cache_entry
_cache_buckets	elements/ip/lookupiproutemp.hh	/^  static const int _cache_buckets = NR_CPUS;$/;"	m	class:LookupIPRouteMP
_cached_reply_pkt	elements/grid/gridprobehandler.hh	/^  Packet *_cached_reply_pkt;$/;"	m	class:GridProbeHandler
_call_count	elements/analysis/aggcounter.hh	/^    uint64_t _call_count;$/;"	m	class:AggregateCounter
_call_count_h	elements/analysis/aggcounter.hh	/^    HandlerCall *_call_count_h;$/;"	m	class:AggregateCounter
_call_nnz	elements/analysis/aggcounter.hh	/^    uint32_t _call_nnz;$/;"	m	class:AggregateCounter
_call_nnz_h	elements/analysis/aggcounter.hh	/^    HandlerCall *_call_nnz_h;$/;"	m	class:AggregateCounter
_calls	include/click/element.hh	/^    unsigned _calls;		\/\/ Push and pull calls into this element.$/;"	m	class:Element
_cap	include/click/dequeue.hh	/^  int _cap;$/;"	m	class:DEQueue
_cap	include/click/ino.hh	/^    int _cap;$/;"	m	class:ClickIno
_cap	include/click/straccum.hh	/^    int _cap;$/;"	m	class:StringAccum
_cap	tools/click-xform/adjacency.hh	/^  int _cap;$/;"	m	class:AdjacencyMatrix
_capability	elements/wifi/station/beaconscanner.hh	/^    uint16_t _capability;$/;"	m	class:BeaconScanner::wap
_capacity	apps/clicky/src/ddecor.hh	/^    double _capacity;$/;"	m	class:clicky::dfullness_decor
_capacity	elements/ip/ipfragmentmap.hh	/^    unsigned _capacity;$/;"	m	class:IPFragmentMap
_capacity	elements/ip/iprewriterbase.hh	/^    int32_t _capacity;$/;"	m	class:IPRewriterHeap
_capacity	elements/linuxmodule/cpuqueue.hh	/^  unsigned _capacity;$/;"	m	class:CPUQueue
_capacity	elements/linuxmodule/fromuserdevice.hh	/^    uint32_t _capacity;$/;"	m	class:FromUserDevice
_capacity	elements/linuxmodule/touserdevice.hh	/^    uint32_t        _capacity;$/;"	m	class:ToUserDevice
_capacity	include/click/hashmap.hh	/^  size_t _capacity;$/;"	m	class:HashMap
_capacity	include/click/standard/storage.hh	/^    index_type _capacity;$/;"	m	class:Storage
_capacity	include/click/vector.hh	/^    size_type _capacity;$/;"	m	class:Vector
_capture	elements/userlevel/fromdevice.hh	/^    int _capture;$/;"	m	class:FromDevice
_cbs	elements/grid/gridroutecb.hh	/^  GridRouteActionCallback *_cbs[_max_route_cbs];$/;"	m	class:GridRouteActor
_ccbs	elements/ip/rfc2507c.hh	/^  struct ccb _ccbs[TCP_SPACE];$/;"	m	class:RFC2507c	typeref:struct:RFC2507c::ccb
_ccbs	elements/ip/rfc2507d.hh	/^  struct ccb _ccbs[TCP_SPACE];$/;"	m	class:RFC2507d	typeref:struct:RFC2507d::ccb
_ccss	apps/clicky/src/crouter.hh	/^    dcss_set *_ccss;$/;"	m	class:clicky::crouter
_cd	elements/local/FlowNet/common/BWShape.hh	/^	VcCongestionDetection* _cd;$/;"	m	class:VcBWShape
_cd	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.hh	/^	VcCongestionDetection* _cd;$/;"	m	class:VcBWShapeByCD
_cd	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.hh	/^	VcCongestionDetection *_cd;$/;"	m	class:VcBWShapeByCD_CFB
_cd_algorithm_index	elements/local/FlowNet/common/CongestionDetection.hh	/^	int32_t _cd_algorithm_index;$/;"	m	class:VcCongestionDetection
_cd_algorithms	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	Vector<VcCongestionDetection *>		_cd_algorithms;$/;"	m	class:PFSchedFW
_cdiagram	apps/clicky/src/wdiagram.hh	/^    cdiagram *_cdiagram;$/;"	m	class:clicky::wdiagram
_cell_size	elements/analysis/fromnlanrdump.hh	/^    int _cell_size;$/;"	m	class:FromNLANRDump
_center	elements/grid/grid.hh	/^  struct grid_location _center;$/;"	m	struct:grid_region	typeref:struct:grid_region::grid_location
_chain	elements/local/OpenFlow/datapath.hh	/^	struct sw_chain *_chain;  \/* Forwarding rules. *\/$/;"	m	class:Datapath	typeref:struct:Datapath::sw_chain
_changeButton	apps/ClickController/ClickController.java	/^    private JButton _changeButton;$/;"	f	class:ClickController	file:
_channel	elements/userlevel/chattersocket.hh	/^  String _channel;$/;"	m	class:ChatterSocket
_channel	elements/wifi/ap/proberesponder.hh	/^  int _channel;$/;"	m	class:ProbeResponder
_channel	elements/wifi/station/beaconscanner.hh	/^    int _channel;$/;"	m	class:BeaconScanner::wap
_channel	elements/wifi/wirelessinfo.hh	/^  int _channel;$/;"	m	class:WirelessInfo
_chatter_sockets	elements/userlevel/chattersocket.cc	/^    Vector<ChatterSocket *> _chatter_sockets;$/;"	m	struct:ChatterSocketErrorHandler	file:
_checkPaint	elements/ns/tosimtrace.hh	/^  bool		_checkPaint;$/;"	m	class:ToSimTrace
_check_generation	include/click/nameinfo.hh	/^    uintptr_t _check_generation;$/;"	m	class:NameDB
_check_generation	include/click/nameinfo.hh	/^    uintptr_t _check_generation;$/;"	m	class:NameInfo
_check_one_expect	test/testie	/^sub _check_one_expect ($$$$) {$/;"	s
_check_one_typed_expect	test/testie	/^sub _check_one_typed_expect ($$$$$) {$/;"	s
_checked_aligned	elements/tcpudp/udpip6encap.hh	/^    bool _checked_aligned;$/;"	m	class:UDPIP6Encap
_checked_aligned	elements/tcpudp/udpipencap.hh	/^    bool _checked_aligned;$/;"	m	class:UDPIPEncap
_checksum	elements/ip/checkipheader.hh	/^  bool _checksum;$/;"	m	class:CheckIPHeader
_child_cycles	include/click/element.hh	/^    click_cycles_t _child_cycles;	\/\/ Cycles spent in children.$/;"	m	class:Element
_children	elements/ip/radixiplookup.cc	/^    } _children[0];$/;"	m	class:RadixIPLookup::Radix	typeref:struct:RadixIPLookup::Radix::Child	file:
_children	elements/ipsec/radixipseclookup.hh	/^    } _children[0];$/;"	m	class:RadixIPsecLookup::Radix	typeref:struct:RadixIPsecLookup::Radix::Child
_chunks	include/click/standard/alignmentinfo.hh	/^    Vector<int> _chunks;$/;"	m	class:AlignmentInfo
_circularity_flag	tools/lib/routert.hh	/^    bool _circularity_flag;$/;"	m	class:RouterT
_cksum	elements/bsdmodule/fastudpsrc.hh	/^  bool _cksum;$/;"	m	class:FastUDPSource
_cksum	elements/linuxmodule/fasttcpflows.hh	/^  bool _cksum;$/;"	m	class:FastTCPFlows
_cksum	elements/linuxmodule/fastudpflows.hh	/^  bool _cksum;$/;"	m	class:FastUDPFlows
_cksum	elements/linuxmodule/fastudpsrc.hh	/^  bool _cksum;$/;"	m	class:FastUDPSource
_cksum	elements/linuxmodule/fastudpsrcip6.hh	/^  bool _cksum;$/;"	m	class:FastUDPSourceIP6
_cksum	elements/tcpudp/udpipencap.hh	/^    bool _cksum;$/;"	m	class:UDPIPEncap
_class	include/clicknet/llc.h	/^	        uint8_t _class;$/;"	m	struct:click_llc::__anon481::__anon482
_class_map	tools/click-devirtualize/cxxclass.hh	/^  HashTable<String, int> _class_map;$/;"	m	class:CxxInfo
_class_warnings	tools/lib/processingt.hh	/^    HashTable<ElementClassT *, int> _class_warnings;$/;"	m	class:ProcessingT
_classes	tools/click-devirtualize/cxxclass.hh	/^  Vector<CxxClass *> _classes;$/;"	m	class:CxxInfo
_classification_algorithms	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	Vector<VcFlowClassify *>		_classification_algorithms;$/;"	m	class:PFSchedFW
_classification_algorithms	elements/local/FlowNet/shaper/PFShapeFW.hh	/^        Vector<VcFlowClassify *>                _classification_algorithms;$/;"	m	class:PFShapeFW
_classify_algorithm	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	String _classify_algorithm;$/;"	m	class:PFShapeFW
_clean_body	tools/click-devirtualize/cxxclass.hh	/^  String _clean_body;$/;"	m	class:CxxFunction
_clear_anno	elements/linuxmodule/anydevice.hh	/^    bool _clear_anno;$/;"	m	class:AnyDevice
_clear_task	elements/analysis/aggregatelast.hh	/^    Task _clear_task;$/;"	m	class:AggregateLast
_click_lexer	lib/driver.cc	/^static Lexer *_click_lexer;$/;"	v	file:
_client	elements/userlevel/socket.hh	/^  bool _client;			\/\/ client or server$/;"	m	class:Socket
_clients	include/click/routerthread.hh	/^    Client _clients[NCLIENTS];$/;"	m	class:RouterThread
_closeItem	apps/ClickController/ClickController.java	/^    private JMenuItem _closeItem;$/;"	f	class:ClickController	file:
_cntr	apps/ClickController/ClickController.java	/^	ClickController _cntr;$/;"	f	class:ClickController.OpenAction
_cntr	apps/ClickController/ClickController.java	/^	private ClickController _cntr;$/;"	f	class:ClickController.CloseWindowAdapter	file:
_cntr	apps/ClickController/NewConnectionDialog.java	/^    private ClickController _cntr;$/;"	f	class:NewConnectionDialog	file:
_code	elements/icmp/icmperror.hh	/^    int _code;$/;"	m	class:ICMPError
_code	elements/ip6/icmp6error.hh	/^  int _code;$/;"	m	class:ICMP6Error
_color	elements/ip/ipinputcombo.hh	/^  int _color;$/;"	m	class:IPInputCombo
_color	elements/ip/ipoutputcombo.hh	/^  int _color;			\/\/ PaintTee$/;"	m	class:IPOutputCombo
_color	elements/standard/checkpaint.hh	/^    uint8_t _color;$/;"	m	class:CheckPaint
_color	elements/standard/paint.hh	/^    uint8_t _color;$/;"	m	class:Paint
_color	elements/standard/painttee.hh	/^    uint8_t _color;$/;"	m	class:PaintTee
_comment_tag	apps/clicky/src/wmain.cc	/^    GtkTextTag *_comment_tag;$/;"	m	class:clicky::ClickyLexerTInfo	file:
_compact_config	include/click/lexer.hh	/^    bool _compact_config;$/;"	m	class:Lexer
_completing	tools/click2xml/xml2click.hh	/^    bool _completing;$/;"	m	struct:CxConfig
_components	apps/clicky/src/scopechain.hh	/^    Vector<String> _components;$/;"	m	class:ScopeChain
_compress_child	elements/analysis/toipflowdumps.hh	/^    int _compress_child;$/;"	m	class:ToIPFlowDumps
_compressables	elements/analysis/toipflowdumps.hh	/^    Vector<String> _compressables;$/;"	m	class:ToIPFlowDumps
_conf	apps/clicky/src/crouter.hh	/^    String _conf;$/;"	m	class:clicky::crouter
_conf	include/click/args.hh	/^    Vector<String> *_conf;$/;"	m	struct:Args
_config	apps/clicky/src/wmain.cc	/^    String _config;$/;"	m	class:clicky::ClickyLexerTInfo	file:
_config	tools/click-pretty/click-pretty.cc	/^    String _config;$/;"	m	class:PrettyLexerTInfo	file:
_config_buffer	apps/clicky/src/wmain.hh	/^    GtkTextBuffer *_config_buffer;$/;"	m	class:clicky::wmain
_config_changed_signal	apps/clicky/src/wmain.hh	/^    gulong _config_changed_signal;$/;"	m	class:clicky::wmain
_config_clean_elements	apps/clicky/src/wmain.hh	/^    bool _config_clean_elements;$/;"	m	class:clicky::wmain
_config_clean_errors	apps/clicky/src/wmain.hh	/^    bool _config_clean_errors;$/;"	m	class:clicky::wmain
_config_element_highlight_tag	apps/clicky/src/wmain.hh	/^    GtkTextTag *_config_element_highlight_tag;$/;"	m	class:clicky::wmain
_config_error_highlight_tag	apps/clicky/src/wmain.hh	/^    GtkTextTag *_config_error_highlight_tag;$/;"	m	class:clicky::wmain
_config_view	apps/clicky/src/wmain.hh	/^    GtkWidget *_config_view;$/;"	m	class:clicky::wmain
_configuration	include/click/router.hh	/^    String _configuration;$/;"	m	class:Router
_configuration	tools/lib/elementt.hh	/^    String _configuration;$/;"	m	struct:ElementT
_congestion_detected	elements/local/FlowNet/common/BWShape.cc	/^void VcBWShape::_congestion_detected(struct CongestionNotification *cn)$/;"	f	class:VcBWShape
_conn	apps/clicky/src/dwidget.hh	/^    std::vector<dconn *> _conn;$/;"	m	class:clicky::delt
_conn	include/click/router.hh	/^    mutable Vector<Connection> _conn;$/;"	m	class:Router
_conn	lib/lexer.cc	/^  Vector<Router::Connection> _conn;$/;"	m	class:Lexer::Compound	file:
_conn	tools/lib/routert.hh	/^    const ConnectionX *_conn;$/;"	m	class:RouterT::conn_iterator
_conn_head	tools/lib/routert.hh	/^    ConnectionX *_conn_head;$/;"	m	class:RouterT
_conn_output_sorter	include/click/router.hh	/^    mutable Vector<int> _conn_output_sorter;$/;"	m	class:Router
_conn_tail	tools/lib/routert.hh	/^    ConnectionX **_conn_tail;$/;"	m	class:RouterT
_connections	tools/click-devirtualize/signature.hh	/^  Vector<int> _connections;$/;"	m	struct:SignatureNode
_connections	tools/click2xml/xml2click.hh	/^    Vector<CxConnection> _connections;$/;"	m	struct:CxConfig
_conns	elements/userlevel/controlsocket.hh	/^    Vector<connection *> _conns;$/;"	m	class:ControlSocket
_connsets	tools/lib/routert.hh	/^    ConnectionSet *_connsets;$/;"	m	class:RouterT
_consumers	linuxmodule/skbmgr.cc	/^  atomic_uint32_t _consumers;$/;"	m	class:RecycledSkbPool	file:
_contents	elements/analysis/fromnetflowsumdump.hh	/^    Vector<int> _contents;$/;"	m	class:FromNetFlowSummaryDump
_contents	elements/ip6/ip6print.hh	/^  bool _contents;$/;"	m	class:IP6Print
_contents	elements/standard/print.hh	/^    uint8_t _contents;$/;"	m	class:Print
_contents_height	apps/clicky/src/dwidget.hh	/^    double _contents_height;$/;"	m	class:clicky::delt
_contents_width	apps/clicky/src/dwidget.hh	/^    double _contents_width;$/;"	m	class:clicky::delt
_context	apps/clicky/src/dstyle.hh	/^    Vector<dcss_selector> _context;$/;"	m	class:clicky::dcss
_context	elements/ip/ipfilter.hh	/^	const Element *_context;$/;"	m	struct:IPFilter::Parser
_context	elements/ip/rfc2507c.hh	/^    struct tcpip _context;$/;"	m	struct:RFC2507c::ccb	typeref:struct:RFC2507c::ccb::tcpip
_context	elements/ip/rfc2507d.hh	/^    struct tcpip _context;$/;"	m	struct:RFC2507d::ccb	typeref:struct:RFC2507d::ccb::tcpip
_context	include/click/args.hh	/^    const Element *_context;$/;"	m	struct:ArgContext
_context	include/click/error.hh	/^    String _context;$/;"	m	class:ContextErrorHandler
_context	include/click/error.hh	/^    String _context;$/;"	m	class:FileErrorHandler
_context	include/click/nameinfo.hh	/^    String _context;$/;"	m	class:NameDB
_context_child	include/click/nameinfo.hh	/^    NameDB *_context_child;$/;"	m	class:NameDB
_context_landmark	include/click/error.hh	/^    String _context_landmark;$/;"	m	class:ContextErrorHandler
_context_parent	include/click/nameinfo.hh	/^    NameDB *_context_parent;$/;"	m	class:NameDB
_context_printed	include/click/error.hh	/^    bool _context_printed;$/;"	m	class:ContextErrorHandler
_context_sibling	include/click/nameinfo.hh	/^    NameDB *_context_sibling;$/;"	m	class:NameDB
_control	elements/userlevel/umlswitch.hh	/^  int _control;			\/\/ uml_switch control socket$/;"	m	class:UMLSwitch
_control_rewriter	elements/app/ftpportmapper.hh	/^    TCPRewriter *_control_rewriter;$/;"	m	class:FTPPortMapper
_core	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	double _core;$/;"	m	struct:CORE
_correspond	lib/lexer.cc	/^  Vector<Router::Port> _correspond;$/;"	m	class:Lexer::TunnelEnd	file:
_cost	elements/etherswitch/bridgemessage.hh	/^public:  uint32_t _cost; private: \/\/ Put in an incrementer JJJ$/;"	m	class:BridgeMessage
_count	elements/analysis/aggcounter.hh	/^    uint64_t _count;$/;"	m	class:AggregateCounter
_count	elements/analysis/storeudptimeseqrecord.hh	/^    unsigned long _count;$/;"	m	class:StoreUDPTimeSeqRecord
_count	elements/analysis/timestampaccum.hh	/^    uint64_t _count;$/;"	m	class:TimestampAccum
_count	elements/aqm/red.hh	/^    int _count;$/;"	m	class:RED
_count	elements/bsdmodule/fastudpsrc.hh	/^  unsigned _count;$/;"	m	class:FastUDPSource
_count	elements/ethernet/etherpausesource.hh	/^    int _count;$/;"	m	class:EtherPauseSource
_count	elements/icmp/icmpsendpings.hh	/^    int _count;$/;"	m	class:ICMPPingSource
_count	elements/linuxmodule/cyclecountaccum.hh	/^    uint64_t _count;$/;"	m	class:CycleCountAccum
_count	elements/linuxmodule/fasttcpflows.hh	/^  unsigned _count;$/;"	m	class:FastTCPFlows
_count	elements/linuxmodule/fastudpflows.hh	/^  unsigned _count;$/;"	m	class:FastUDPFlows
_count	elements/linuxmodule/fastudpsrc.hh	/^  unsigned _count;$/;"	m	class:FastUDPSource
_count	elements/linuxmodule/fastudpsrcip6.hh	/^  unsigned _count;$/;"	m	class:FastUDPSourceIP6
_count	elements/linuxmodule/fromdevice.hh	/^    unsigned _count;$/;"	m	class:FromDevice
_count	elements/linuxmodule/perfcountaccum.hh	/^  uint64_t _count;$/;"	m	class:PerfCountAccum
_count	elements/standard/averagecounter.hh	/^    atomic_uint32_t _count;$/;"	m	class:AverageCounter
_count	elements/standard/counter.hh	/^    counter_t _count;$/;"	m	class:Counter
_count	elements/standard/discard.hh	/^    counter_t _count;$/;"	m	class:Discard
_count	elements/standard/infinitesource.hh	/^    ucounter_t _count;$/;"	m	class:InfiniteSource
_count	elements/standard/ratedsource.hh	/^    unsigned _count;$/;"	m	class:RatedSource
_count	elements/standard/timedsource.hh	/^    int _count;$/;"	m	class:TimedSource
_count	elements/standard/unqueue.hh	/^    uint32_t _count;$/;"	m	class:Unqueue
_count	elements/standard/unqueue2.hh	/^    unsigned _count;$/;"	m	class:Unqueue2
_count	elements/tcpudp/dynudpipencap.hh	/^  atomic_uint32_t _count;$/;"	m	class:DynamicUDPIPEncap
_count	elements/test/handlertask.hh	/^    uint32_t _count;$/;"	m	class:HandlerTask
_count	elements/test/nulltask.hh	/^    uint32_t _count;$/;"	m	class:NullTask
_count	elements/test/schedordertest.hh	/^    uint32_t _count;$/;"	m	class:SchedOrderTest
_count	elements/userlevel/fromdevice.hh	/^    counter_t _count;$/;"	m	class:FromDevice
_count	elements/userlevel/fromdump.hh	/^    counter_t _count;$/;"	m	class:FromDump
_count	elements/userlevel/todump.hh	/^    counter_t _count;$/;"	m	class:ToDump
_count	elements/wifi/probetxrate.hh	/^    unsigned _count;$/;"	m	struct:ProbeTXRate::DstInfo
_count_change	apps/clicky/src/dwidget.hh	/^    unsigned _count_change;$/;"	m	class:clicky::dconn
_count_last	apps/clicky/src/dwidget.hh	/^    unsigned _count_last;$/;"	m	class:clicky::dconn
_count_packets	elements/ip/ipratemon.hh	/^  bool _count_packets;		\/\/ packets or bytes$/;"	m	class:IPRateMonitor
_count_trigger	elements/standard/counter.hh	/^    counter_t _count_trigger;$/;"	m	class:Counter
_count_trigger_h	elements/standard/counter.hh	/^    HandlerCall *_count_trigger_h;$/;"	m	class:Counter
_counts	elements/analysis/aggpktcounter.hh	/^	Vector<uint32_t> *_counts;$/;"	m	class:AggregatePacketCounter::Flow
_counts	elements/analysis/aggregatefirst.hh	/^    uint32_t *_counts[NPLANE];$/;"	m	class:AggregateFirst
_counts	elements/analysis/aggregatelast.hh	/^    uint32_t *_counts[NPLANE];$/;"	m	class:AggregateLast
_cr	apps/clicky/src/cdriver.hh	/^    crouter *_cr;$/;"	m	class:clicky::clickfs_cdriver
_cr	apps/clicky/src/cdriver.hh	/^    crouter *_cr;$/;"	m	class:clicky::csocket_cdriver
_cr	apps/clicky/src/crouter.hh	/^	crouter *_cr;$/;"	m	class:clicky::crouter::throb_after
_cr	apps/clicky/src/ddecor.hh	/^    crouter *_cr;$/;"	m	class:clicky::dactivity_decor
_cr	apps/clicky/src/hvalues.hh	/^    crouter *_cr;$/;"	m	struct:clicky::handler_values
_create_ignores	test/testie	/^sub _create_ignores ($$) {$/;"	s
_credits	elements/wifi/madwifirate.hh	/^    int _credits;$/;"	m	struct:MadwifiRate::DstInfo
_cs	apps/ClickController/ClickController.java	/^    private ControlSocket _cs;$/;"	f	class:ClickController	file:
_cs	apps/ClickController/RouterTreeModel.java	/^    ControlSocket _cs;$/;"	f	class:RouterTreeModel
_csocket	apps/clicky/src/cdriver.hh	/^    GIOChannel *_csocket;$/;"	m	class:clicky::csocket_cdriver
_csocket_minor_version	apps/clicky/src/cdriver.hh	/^    int _csocket_minor_version;$/;"	m	class:clicky::csocket_cdriver
_csocket_msgq	apps/clicky/src/cdriver.hh	/^    std::deque<msg *> _csocket_msgq;$/;"	m	class:clicky::csocket_cdriver
_csocket_state	apps/clicky/src/cdriver.hh	/^    int _csocket_state;$/;"	m	class:clicky::csocket_cdriver
_csocket_watch	apps/clicky/src/cdriver.hh	/^    guint _csocket_watch;$/;"	m	class:clicky::csocket_cdriver
_ctl_addr	elements/userlevel/umlswitch.hh	/^  struct sockaddr_un _ctl_addr;$/;"	m	class:UMLSwitch	typeref:struct:UMLSwitch::sockaddr_un
_ctl_path	elements/userlevel/umlswitch.hh	/^  String _ctl_path;		\/\/ path to uml_switch control socket$/;"	m	class:UMLSwitch
_ctype	lib/glue.cc	/^unsigned char _ctype[] = {$/;"	v
_cur_buffer	include/click/bighashmap_arena.hh	/^    char *_cur_buffer;$/;"	m	class:HashMap_Arena
_cur_click_share	include/click/routerthread.hh	/^    unsigned _cur_click_share;		\/\/ current Click share$/;"	m	class:RouterThread
_cur_steps	elements/standard/script.hh	/^    int *_cur_steps;$/;"	m	class:Script
_curr_state	elements/grid/linktester.hh	/^  state_t _curr_state;$/;"	m	class:LinkTester
_current	include/click/ewma.hh	/^    value_type _current[P::rate_count];$/;"	m	class:RateEWMAX
_current_epoch	include/click/ewma.hh	/^    unsigned _current_epoch;$/;"	m	class:RateEWMAX
_current_index	elements/wifi/autoratefallback.hh	/^    int _current_index;$/;"	m	struct:AutoRateFallback::DstInfo
_current_index	elements/wifi/madwifirate.hh	/^    int _current_index;$/;"	m	struct:MadwifiRate::DstInfo
_current_qlen	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	int _current_qlen;$/;"	m	struct:CORE
_cursor	apps/clicky/src/wdiagram.hh	/^    GdkCursor *_cursor[ncursors];$/;"	m	class:clicky::wdiagram
_cxxinfo	tools/click-devirtualize/specializer.hh	/^  CxxInfo _cxxinfo;$/;"	m	class:Specializer
_cycle_runs	include/click/task.hh	/^    unsigned _cycle_runs;$/;"	m	class:Task
_cycles	include/click/task.hh	/^    DirectEWMA _cycles;$/;"	m	class:Task
_d	elements/grid/pep.cc	/^  double _d[20];$/;"	m	class:PEPAmoeba	file:
_daddr	elements/ip/iprwpattern.hh	/^    IPAddress _daddr;$/;"	m	class:IPRewriterPattern
_daddr	elements/tcpudp/dynudpipencap.hh	/^  struct in_addr _daddr;$/;"	m	class:DynamicUDPIPEncap	typeref:struct:DynamicUDPIPEncap::in_addr
_daddr	elements/tcpudp/udpip6encap.hh	/^    struct click_in6_addr _daddr;$/;"	m	class:UDPIP6Encap	typeref:struct:UDPIP6Encap::click_in6_addr
_daddr	elements/tcpudp/udpipencap.hh	/^    struct in_addr _daddr;$/;"	m	class:UDPIPEncap	typeref:struct:UDPIPEncap::in_addr
_daddr	include/click/ip6flowid.hh	/^  IP6Address _daddr;$/;"	m	class:IP6FlowID
_daddr	include/click/ipflowid.hh	/^    IPAddress _daddr;$/;"	m	class:IPFlowID
_das	apps/clicky/src/ddecor.hh	/^    ref_ptr<dactivity_style> _das;$/;"	m	class:clicky::dactivity_decor
_data	elements/icmp/icmpsendpings.hh	/^    String _data;$/;"	m	class:ICMPPingSource
_data	elements/ip/ipfilter.hh	/^	int _data;$/;"	m	struct:IPFilter::Primitive
_data	elements/standard/infinitesource.hh	/^    String _data;$/;"	m	class:InfiniteSource
_data	elements/standard/ratedsource.hh	/^    String _data;$/;"	m	class:RatedSource
_data	elements/standard/storedata.hh	/^    String _data;$/;"	m	class:StoreData
_data	elements/standard/timedsource.hh	/^    String _data;$/;"	m	class:TimedSource
_data	elements/tcpudp/statelesstcpresp.hh	/^    String _data;$/;"	m	class:StatelessTCPResponder
_data	elements/test/checkpacket.hh	/^    String _data;$/;"	m	class:CheckPacket
_data	include/click/bitvector.hh	/^    uint32_t *_data;$/;"	m	class:Bitvector
_data	include/click/etheraddress.hh	/^    uint16_t _data[3];$/;"	m	class:EtherAddress
_data	include/click/packet.hh	/^    unsigned char *_data; \/* where the packet starts *\/$/;"	m	class:Packet
_data_addr	elements/userlevel/umlswitch.hh	/^  struct sockaddr_un _data_addr;$/;"	m	class:UMLSwitch	typeref:struct:UMLSwitch::sockaddr_un
_data_buf	elements/grid/linktester.hh	/^  unsigned char *_data_buf;$/;"	m	class:LinkTester
_data_offset	elements/test/checkpacket.hh	/^    uint32_t _data_offset;$/;"	m	class:CheckPacket
_data_op	elements/test/checkpacket.hh	/^    uint8_t _data_op;$/;"	m	class:CheckPacket
_data_packet	include/click/fromfile.hh	/^    WritablePacket *_data_packet;$/;"	m	class:FromFile
_data_packet	include/click/packet.hh	/^    Packet *_data_packet;$/;"	m	class:Packet
_data_rewriter	elements/app/ftpportmapper.hh	/^    IPRewriterBase *_data_rewriter;$/;"	m	class:FTPPortMapper
_data_rewriter_input	elements/app/ftpportmapper.hh	/^    int _data_rewriter_input;$/;"	m	class:FTPPortMapper
_datalink	elements/userlevel/fromdevice.hh	/^    int _datalink;$/;"	m	class:FromDevice
_datalink	elements/userlevel/ipflowrawsockets.hh	/^	int _datalink;$/;"	m	class:IPFlowRawSockets::Flow
_datasize	elements/standard/infinitesource.hh	/^    int _datasize;$/;"	m	class:InfiniteSource
_datasize	elements/standard/ratedsource.hh	/^    int _datasize;$/;"	m	class:RatedSource
_db	elements/ip/ipnameinfo.cc	/^    DynamicNameDB *_db;$/;"	m	class:__anon323::ServicesNameDB	file:
_dbg_level	apps/ClickController/Util.java	/^    public static int _dbg_level = 1;$/;"	f	class:Util
_de	apps/clicky/src/dstyle.hh	/^    mutable Vector<dcss_property> _de;$/;"	m	class:clicky::dcss
_debug	elements/ethernet/arpquerier.hh	/^    bool _debug;$/;"	m	class:ARPQuerier
_debug	elements/ethernet/arpresponder.hh	/^    bool _debug;$/;"	m	class:ARPResponder
_debug	elements/grid/dsrarptable.hh	/^  bool _debug;$/;"	m	class:DSRArpTable
_debug	elements/grid/dsrroutetable.hh	/^  bool _debug;$/;"	m	class:DSRRouteTable
_debug	elements/grid/pep.hh	/^  bool _debug;$/;"	m	class:PEP
_debug	elements/grid/regionpep.hh	/^  bool _debug;$/;"	m	class:EstimateRouterRegion
_debug	elements/linuxmodule/touserdevice.hh	/^    bool	    _debug;$/;"	m	class:ToUserDevice
_debug	elements/userlevel/todevice.hh	/^    bool _debug;$/;"	m	class:ToDevice
_debug	elements/wifi/ap/associationresponder.hh	/^  bool _debug;$/;"	m	class:AssociationResponder
_debug	elements/wifi/ap/beaconsource.hh	/^  bool _debug;$/;"	m	class:BeaconSource
_debug	elements/wifi/ap/openauthresponder.hh	/^  bool _debug;$/;"	m	class:OpenAuthResponder
_debug	elements/wifi/ap/proberesponder.hh	/^  bool _debug;$/;"	m	class:ProbeResponder
_debug	elements/wifi/ap/stationtable.hh	/^  bool _debug;$/;"	m	class:StationTable
_debug	elements/wifi/athdescdecap.hh	/^  bool _debug;$/;"	m	class:AthdescDecap
_debug	elements/wifi/athdescencap.hh	/^  bool _debug;$/;"	m	class:AthdescEncap
_debug	elements/wifi/autoratefallback.hh	/^  bool _debug;$/;"	m	class:AutoRateFallback
_debug	elements/wifi/availablerates.hh	/^  bool _debug;$/;"	m	class:AvailableRates
_debug	elements/wifi/extradecap.hh	/^  bool _debug;$/;"	m	class:ExtraDecap
_debug	elements/wifi/extraencap.hh	/^  bool _debug;$/;"	m	class:ExtraEncap
_debug	elements/wifi/madwifirate.hh	/^  bool _debug;$/;"	m	class:MadwifiRate
_debug	elements/wifi/prism2decap.hh	/^  bool _debug;$/;"	m	class:Prism2Decap
_debug	elements/wifi/prism2encap.hh	/^  bool _debug;$/;"	m	class:Prism2Encap
_debug	elements/wifi/probetxrate.hh	/^  bool _debug;$/;"	m	class:ProbeTXRate
_debug	elements/wifi/radiotapdecap.hh	/^  bool _debug;$/;"	m	class:RadiotapDecap
_debug	elements/wifi/radiotapencap.hh	/^  bool _debug;$/;"	m	class:RadiotapEncap
_debug	elements/wifi/station/associationrequester.hh	/^  bool _debug;$/;"	m	class:AssociationRequester
_debug	elements/wifi/station/beaconscanner.hh	/^  bool _debug;$/;"	m	class:BeaconScanner
_debug	elements/wifi/station/beacontracker.hh	/^  bool _debug;$/;"	m	class:BeaconTracker
_debug	elements/wifi/station/openauthrequester.hh	/^  bool _debug;$/;"	m	class:OpenAuthRequester
_debug	elements/wifi/station/proberequester.hh	/^  bool _debug;$/;"	m	class:ProbeRequester
_debug	elements/wifi/wepdecap.hh	/^  bool _debug;$/;"	m	class:WepDecap
_debug	elements/wifi/wepencap.hh	/^  bool _debug;$/;"	m	class:WepEncap
_debug	elements/wifi/wifidecap.hh	/^  bool _debug;$/;"	m	class:WifiDecap
_debug	elements/wifi/wifidefrag.hh	/^  bool _debug;$/;"	m	class:WifiDefrag
_debug	elements/wifi/wifidupefilter.hh	/^  bool _debug;$/;"	m	class:WifiDupeFilter
_debug	elements/wifi/wifiencap.hh	/^  bool _debug;$/;"	m	class:WifiEncap
_debug	elements/wifi/wififragment.hh	/^  bool _debug;$/;"	m	class:WifiFragment
_debug	elements/wifi/wifiseq.hh	/^  bool _debug;$/;"	m	class:WifiSeq
_decay_source	apps/clicky/src/ddecor.hh	/^    guint _decay_source;$/;"	m	class:clicky::dactivity_decor
_decl_nformals	tools/click2xml/xml2click.hh	/^    int _decl_nformals;$/;"	m	struct:CxConfig
_decl_ninputs	tools/click2xml/xml2click.hh	/^    int _decl_ninputs;$/;"	m	struct:CxConfig
_decl_noutputs	tools/click2xml/xml2click.hh	/^    int _decl_noutputs;$/;"	m	struct:CxConfig
_declaration_scope	tools/lib/eclasst.hh	/^    RouterT *_declaration_scope;$/;"	m	class:SynonymElementClassT
_declaration_scope	tools/lib/routert.hh	/^    RouterT *_declaration_scope;$/;"	m	class:RouterT
_declaration_scope_cookie	tools/lib/routert.hh	/^    int _declaration_scope_cookie;$/;"	m	class:RouterT
_declared_type_map	tools/lib/routert.hh	/^    StringMap _declared_type_map;$/;"	m	class:RouterT
_declared_types	tools/lib/routert.hh	/^    Vector<ElementType> _declared_types;$/;"	m	class:RouterT
_decor	apps/clicky/src/dwidget.hh	/^    ddecor *_decor;$/;"	m	class:clicky::delt
_def	tools/lib/elementmap.hh	/^    Vector<Globals> _def;$/;"	m	class:ElementMap
_default_flags	include/click/error.hh	/^    int _default_flags;$/;"	m	class:FileErrorHandler
_default_key	elements/ip/radixiplookup.hh	/^    int _default_key;$/;"	m	class:RadixIPLookup
_default_key	elements/ipsec/radixipseclookup.hh	/^    int32_t _default_key;$/;"	m	class:RadixIPsecLookup
_default_match	tools/click-xform/adjacency.hh	/^  Vector<int> _default_match;$/;"	m	class:AdjacencyMatrix
_default_output	elements/analysis/aggregatefilter.hh	/^    int _default_output;$/;"	m	class:AggregateFilter
_default_proto	elements/analysis/fromipsumdump.hh	/^    uint16_t _default_proto;$/;"	m	class:FromIPSummaryDump
_default_rates	elements/wifi/availablerates.hh	/^  Vector<int> _default_rates;$/;"	m	class:AvailableRates
_default_value	include/click/hashmap.hh	/^  V _default_value;$/;"	m	class:HashMap
_default_value	include/click/hashmap.hh	/^  void *_default_value;$/;"	m	class:HashMap
_default_value	include/click/hashtable.hh	/^    V _default_value;$/;"	m	class:HashTable
_defs	tools/click-xform/click-xform.cc	/^  HashTable<String, String> _defs;$/;"	m	class:Matcher	file:
_delay	elements/standard/delayshaper.hh	/^    Timestamp _delay;$/;"	m	class:DelayShaper
_delay	elements/standard/delayunqueue.hh	/^    Timestamp _delay;$/;"	m	class:DelayUnqueue
_delay_ms	elements/userlevel/progressbar.hh	/^    uint32_t _delay_ms;$/;"	m	class:ProgressBar
_delay_time	elements/userlevel/progressbar.hh	/^    Timestamp _delay_time;$/;"	m	class:ProgressBar
_delta	elements/analysis/storeudptimeseqrecord.hh	/^    bool          _delta;  \/\/ if true put in_timestamp else out_timestamp$/;"	m	class:StoreUDPTimeSeqRecord
_delta	elements/tcpudp/tcprewriter.hh	/^	int32_t _delta[2];$/;"	m	class:TCPRewriter::TCPFlow
_deltas	elements/grid/locfromfile.hh	/^  Vector<delta> _deltas;$/;"	m	class:LocFromFile
_deny	elements/userlevel/socket.hh	/^  IPRouteTable *_deny;		\/\/ lookup table of bad hosts$/;"	m	class:Socket
_depth	apps/clicky/src/dwidget.hh	/^    uint16_t _depth;$/;"	m	class:clicky::delt
_depth	include/click/sync.hh	/^    int32_t _depth;$/;"	m	class:Spinlock
_depth	include/click/variableenv.hh	/^    int _depth;$/;"	m	class:VariableEnvironment
_depth	tools/click2xml/xml2click.hh	/^    int _depth;$/;"	m	struct:CxConfig
_des	apps/clicky/src/dwidget.hh	/^    ref_ptr<delt_style> _des;$/;"	m	class:clicky::delt
_dess	apps/clicky/src/dwidget.hh	/^    ref_ptr<delt_size_style> _dess;$/;"	m	class:clicky::delt
_destaddr	elements/linuxmodule/fromhost.hh	/^    IPAddress _destaddr;$/;"	m	class:FromHost
_destmask	elements/linuxmodule/fromhost.hh	/^    IPAddress _destmask;$/;"	m	class:FromHost
_destructor	include/click/packet.hh	/^    void (*_destructor)(unsigned char *, size_t);$/;"	m	class:Packet
_detached	include/click/bighashmap_arena.hh	/^    bool _detached;$/;"	m	class:HashMap_Arena
_detailed_error_message	elements/userlevel/khandlerproxy.hh	/^    bool _detailed_error_message;$/;"	m	class:KernelHandlerProxy
_dev	elements/bsdmodule/anydevice.hh	/^    struct ifnet *_dev;$/;"	m	class:AnyDevice	typeref:struct:AnyDevice::ifnet
_dev	elements/linuxmodule/anydevice.hh	/^    net_device *_dev;$/;"	m	class:AnyDevice
_dev	elements/radio/bim.hh	/^  String _dev;$/;"	m	class:BIM
_dev_click	elements/bsdmodule/anydevice.cc	/^struct ifnet _dev_click = {};$/;"	v	typeref:struct:ifnet
_dev_idle	elements/linuxmodule/todevice.hh	/^    int _dev_idle;$/;"	m	class:ToDevice
_dev_major	elements/linuxmodule/touserdevice.hh	/^    ulong                  _dev_major;$/;"	m	class:ToUserDevice
_dev_minor	elements/linuxmodule/touserdevice.hh	/^    ulong                  _dev_minor;$/;"	m	class:ToUserDevice
_dev_name	elements/userlevel/fromhost.hh	/^    String _dev_name;$/;"	m	class:FromHost
_dev_name	elements/userlevel/kerneltun.hh	/^    String _dev_name;$/;"	m	class:KernelTun
_dev_name	elements/userlevel/tohost.hh	/^    String _dev_name;$/;"	m	class:ToHost
_devname	elements/bsdmodule/anydevice.hh	/^    String _devname;$/;"	m	class:AnyDevice
_devname	elements/linuxmodule/anydevice.hh	/^    String _devname;$/;"	m	class:AnyDevice
_dfs	apps/clicky/src/ddecor.hh	/^    ref_ptr<dfullness_style> _dfs;$/;"	m	class:clicky::dfullness_decor
_dhl	apps/ClickController/RouterTreeModel.java	/^    Vector _dhl;$/;"	f	class:RouterTreeModel
_diagram	apps/clicky/src/wmain.hh	/^    wdiagram *_diagram;$/;"	m	class:clicky::wmain
_diameter	include/click/routervisitor.hh	/^    int _diameter;$/;"	m	class:ElementNeighborhoodTracker
_diff_details	elements/test/comparepackets.hh	/^    uint32_t _diff_details[D_LAST];$/;"	m	class:ComparePackets
_dimensions	elements/grid/amoeba.hh	/^  int _dimensions;$/;"	m	class:Amoeba
_dip6addr	elements/linuxmodule/fastudpsrcip6.hh	/^  IP6Address _dip6addr;$/;"	m	class:FastUDPSourceIP6
_dipaddr	elements/bsdmodule/fastudpsrc.hh	/^  struct in_addr _dipaddr;$/;"	m	class:FastUDPSource	typeref:struct:FastUDPSource::in_addr
_dipaddr	elements/linuxmodule/fasttcpflows.hh	/^  struct in_addr _dipaddr;$/;"	m	class:FastTCPFlows	typeref:struct:FastTCPFlows::in_addr
_dipaddr	elements/linuxmodule/fastudpflows.hh	/^  struct in_addr _dipaddr;$/;"	m	class:FastUDPFlows	typeref:struct:FastUDPFlows::in_addr
_dipaddr	elements/linuxmodule/fastudpsrc.hh	/^  struct in_addr _dipaddr;$/;"	m	class:FastUDPSource	typeref:struct:FastUDPSource::in_addr
_direction	elements/ip/iprwmapping.hh	/^    uint8_t _direction;$/;"	m	class:IPRewriterEntry
_dirname	elements/analysis/fromflandump.hh	/^    String _dirname;$/;"	m	class:FromFlanDump
_dirty	elements/wifi/packetstore.hh	/^  int _dirty;$/;"	m	class:PacketStore
_display	apps/clicky/src/dwidget.hh	/^    int8_t _display;$/;"	m	class:clicky::delt
_display_ename	apps/clicky/src/whandler.hh	/^    String _display_ename;$/;"	m	struct:clicky::whandler
_dom	elements/standard/classification.hh	/^    Vector<int> _dom;$/;"	m	class:Classification::Wordwise::DominatorOptimizer
_dom_start	elements/standard/classification.hh	/^    Vector<int> _dom_start;$/;"	m	class:Classification::Wordwise::DominatorOptimizer
_domlist_start	elements/standard/classification.hh	/^    Vector<int> _domlist_start;$/;"	m	class:Classification::Wordwise::DominatorOptimizer
_dot_h	apps/clicky/src/cdriver.hh	/^    bool _dot_h;$/;"	m	class:clicky::clickfs_cdriver
_dot_h	elements/userlevel/khandlerproxy.hh	/^    bool _dot_h;$/;"	m	class:KernelHandlerProxy
_dot_h_checked	elements/userlevel/khandlerproxy.hh	/^    bool _dot_h_checked;$/;"	m	class:KernelHandlerProxy
_down_call	elements/linuxmodule/anydevice.hh	/^    HandlerCall *_down_call;$/;"	m	class:AnyDevice
_downstreams	apps/clicky/src/crouter.hh	/^    HashTable<String, reachable_t> _downstreams;$/;"	m	class:clicky::crouter
_dp	elements/local/OpenFlow/datapath.hh	/^	struct datapath *_dp;$/;"	m	class:Datapath	typeref:struct:Datapath::datapath
_dp_desc	elements/local/OpenFlow/datapath.hh	/^	char _dp_desc[DESC_STR_LEN];$/;"	m	class:Datapath
_dpid	elements/local/OpenFlow/datapath.hh	/^	uint64_t _dpid;$/;"	m	class:Datapath
_dport	elements/bsdmodule/fastudpsrc.hh	/^  unsigned short _dport;$/;"	m	class:FastUDPSource
_dport	elements/ip/iprwpattern.hh	/^    int _dport;			\/\/ net byte order$/;"	m	class:IPRewriterPattern
_dport	elements/linuxmodule/fastudpsrc.hh	/^  uint16_t _dport;$/;"	m	class:FastUDPSource
_dport	elements/linuxmodule/fastudpsrcip6.hh	/^  uint16_t _dport;$/;"	m	class:FastUDPSourceIP6
_dport	elements/tcpudp/dynudpipencap.hh	/^  uint16_t _dport;$/;"	m	class:DynamicUDPIPEncap
_dport	elements/tcpudp/udpip6encap.hh	/^    uint16_t _dport;$/;"	m	class:UDPIP6Encap
_dport	elements/tcpudp/udpipencap.hh	/^    uint16_t _dport;$/;"	m	class:UDPIPEncap
_dport	include/click/ip6flowid.hh	/^  uint16_t _dport;			\/\/ network byte order$/;"	m	class:IP6FlowID
_dport	include/click/ipflowid.hh	/^    uint16_t _dport;			\/\/ network byte order$/;"	m	class:IPFlowID
_drag_state	apps/clicky/src/wdiagram.hh	/^    int _drag_state;$/;"	m	class:clicky::wdiagram
_dragr	apps/clicky/src/wdiagram.hh	/^    rectangle _dragr;$/;"	m	class:clicky::wdiagram
_drawn	apps/clicky/src/ddecor.hh	/^    double _drawn;$/;"	m	class:clicky::dfullness_decor
_drawn_activity	apps/clicky/src/ddecor.hh	/^    double _drawn_activity;$/;"	m	class:clicky::dactivity_decor
_drawn_highlight	apps/clicky/src/dwidget.hh	/^    uint8_t _drawn_highlight;$/;"	m	class:clicky::delt
_driver	apps/clicky/src/crouter.hh	/^    cdriver *_driver;$/;"	m	class:clicky::crouter
_driver_active	apps/clicky/src/crouter.hh	/^    bool _driver_active;$/;"	m	class:clicky::crouter
_driver_epoch	include/click/routerthread.hh	/^    uint32_t _driver_epoch;$/;"	m	class:RouterThread
_driver_flags	apps/clicky/src/hvalues.hh	/^    int _driver_flags;$/;"	m	class:clicky::handler_value
_driver_mask	apps/clicky/src/hvalues.hh	/^    int _driver_mask;$/;"	m	class:clicky::handler_value
_driver_mask	tools/lib/elementmap.hh	/^    int _driver_mask;$/;"	m	class:ElementMap
_driver_process	apps/clicky/src/crouter.hh	/^    pid_t _driver_process;$/;"	m	class:clicky::crouter
_driver_task_epoch	include/click/routerthread.hh	/^    uint32_t _driver_task_epoch;$/;"	m	class:RouterThread
_drop_count	elements/linuxmodule/fromuserdevice.hh	/^    uint32_t _drop_count;$/;"	m	class:FromUserDevice
_drop_count	elements/linuxmodule/touserdevice.hh	/^    ulong           _drop_count;$/;"	m	class:ToUserDevice
_drop_devices	elements/userlevel/kernelfilter.hh	/^    Vector<String> _drop_devices;$/;"	m	class:KernelFilter
_drop_tail	elements/linuxmodule/touserdevice.hh	/^    bool	    _drop_tail;$/;"	m	class:ToUserDevice
_drops	elements/aqm/pi.hh	/^    int _drops;$/;"	m	class:PI
_drops	elements/aqm/red.hh	/^    int _drops;$/;"	m	class:RED
_drops	elements/bsdmodule/tohost.hh	/^    int _drops;$/;"	m	class:ToHost
_drops	elements/ethernet/arpquerier.hh	/^    atomic_uint32_t _drops;$/;"	m	class:ARPQuerier
_drops	elements/ethernet/arptable.hh	/^    atomic_uint32_t _drops;$/;"	m	class:ARPTable
_drops	elements/ethernet/checkarpheader.hh	/^  atomic_uint32_t _drops;$/;"	m	class:CheckARPHeader
_drops	elements/grid/checkgridheader.hh	/^  int _drops;$/;"	m	class:CheckGridHeader
_drops	elements/icmp/checkicmpheader.hh	/^  atomic_uint32_t _drops;$/;"	m	class:CheckICMPHeader
_drops	elements/ip/checkipheader.hh	/^  atomic_uint32_t _drops;$/;"	m	class:CheckIPHeader
_drops	elements/ip/decipttl.hh	/^    atomic_uint32_t _drops;$/;"	m	class:DecIPTTL
_drops	elements/ip/ipfragmenter.hh	/^  atomic_uint32_t _drops;$/;"	m	class:IPFragmenter
_drops	elements/ip/ipgwoptions.hh	/^  atomic_uint32_t _drops;$/;"	m	class:IPGWOptions
_drops	elements/ip/ipinputcombo.hh	/^  atomic_uint32_t _drops;$/;"	m	class:IPInputCombo
_drops	elements/ip/markipce.hh	/^    atomic_uint32_t _drops;$/;"	m	class:MarkIPCE
_drops	elements/ip6/checkip6header.hh	/^  int _drops;$/;"	m	class:CheckIP6Header
_drops	elements/ip6/decip6hlim.hh	/^  int _drops;$/;"	m	class:DecIP6HLIM
_drops	elements/ip6/ip6fragmenter.hh	/^  int _drops;$/;"	m	class:IP6Fragmenter
_drops	elements/ipsec/hmacsha1.hh	/^  atomic_uint32_t _drops;$/;"	m	class:IPsecAuthHMACSHA1
_drops	elements/ipsec/sha1.hh	/^  atomic_uint32_t _drops;$/;"	m	class:IPsecAuthSHA1
_drops	elements/linuxmodule/cpuqueue.hh	/^  unsigned _drops;$/;"	m	class:CPUQueue
_drops	elements/linuxmodule/fromdevice.hh	/^    unsigned _drops;$/;"	m	class:FromDevice
_drops	elements/linuxmodule/fromhost.hh	/^    unsigned _drops;$/;"	m	class:FromHost
_drops	elements/linuxmodule/todevice.hh	/^    uint32_t _drops;$/;"	m	class:ToDevice
_drops	elements/linuxmodule/tohost.hh	/^    int _drops;$/;"	m	class:ToHost
_drops	elements/standard/checkcrc32.hh	/^    atomic_uint32_t _drops;$/;"	m	class:CheckCRC32
_drops	elements/standard/dropbroadcasts.hh	/^  atomic_uint32_t _drops;$/;"	m	class:DropBroadcasts
_drops	elements/standard/randomsample.hh	/^    atomic_uint32_t _drops;$/;"	m	class:RandomSample
_drops	elements/standard/simplequeue.hh	/^    volatile int _drops;$/;"	m	class:SimpleQueue
_drops	elements/tcpudp/checktcpheader.hh	/^  atomic_uint32_t _drops;$/;"	m	class:CheckTCPHeader
_drops	elements/tcpudp/checkudpheader.hh	/^  atomic_uint32_t _drops;$/;"	m	class:CheckUDPHeader
_drops	elements/userlevel/tohost.hh	/^    int _drops;$/;"	m	class:ToHost
_drops	elements/wifi/filterfailures.hh	/^  int _drops;$/;"	m	class:FilterFailures
_drops	elements/wifi/filterphyerr.hh	/^  int _drops;$/;"	m	class:FilterPhyErr
_drops	elements/wifi/filtertx.hh	/^  int _drops;$/;"	m	class:FilterTX
_drp_count	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	int _drp_count;$/;"	m	class:PFSchedFW
_dscp	elements/ip/setipdscp.hh	/^    unsigned char _dscp;$/;"	m	class:SetIPDSCP
_dscp	elements/ip6/setip6dscp.hh	/^    uint32_t _dscp;$/;"	m	class:SetIP6DSCP
_dst	elements/icmp/icmpipencap.hh	/^    struct in_addr _dst;$/;"	m	class:ICMPIPEncap	typeref:struct:ICMPIPEncap::in_addr
_dst	elements/icmp/icmppingencap.hh	/^    struct in_addr _dst;$/;"	m	class:ICMPPingEncap	typeref:struct:ICMPPingEncap::in_addr
_dst	elements/icmp/icmpsendpings.hh	/^    struct in_addr _dst;$/;"	m	class:ICMPPingSource	typeref:struct:ICMPPingSource::in_addr
_dst	elements/ip/ripsend.hh	/^  IPAddress _dst; \/\/ IP header dst field$/;"	m	class:RIPSend
_dst	include/click/ip6table.hh	/^    IP6Address _dst;$/;"	m	struct:IP6Table::Entry
_dst_anno	elements/ip/ipmirror.hh	/^    bool _dst_anno;$/;"	m	class:IPMirror
_dst_eth	elements/grid/linktester.hh	/^  class EtherAddress _dst_eth;$/;"	m	class:LinkTester	typeref:class:LinkTester::EtherAddress
_dump_tick	elements/grid/gridroutetable.hh	/^  unsigned int _dump_tick;$/;"	m	class:GridRouteTable
_dup_acks	elements/tcpudp/snooptcp.hh	/^  int _dup_acks;$/;"	m	struct:SnoopTCP::PCB
_dupes	elements/wifi/wifidupefilter.hh	/^    int _dupes;$/;"	m	class:WifiDupeFilter::DstInfo
_dupes	elements/wifi/wifidupefilter.hh	/^  int _dupes;$/;"	m	class:WifiDupeFilter
_dynamic_mapping	elements/ip6/addresstranslator.hh	/^  bool _dynamic_mapping;$/;"	m	class:AddressTranslator
_dynamic_mapping_allocation_direction	elements/ip6/addresstranslator.hh	/^  bool _dynamic_mapping_allocation_direction;$/;"	m	class:AddressTranslator
_dynamic_portmapping	elements/ip6/addresstranslator.hh	/^  bool _dynamic_portmapping;$/;"	m	class:AddressTranslator
_e	apps/clicky/src/ddecor.hh	/^    delt *_e;$/;"	m	class:clicky::dactivity_decor
_e	apps/clicky/src/dwidget.hh	/^	delt *_e;$/;"	m	class:clicky::delt::iterator
_e	apps/clicky/src/dwidget.hh	/^    ElementT *_e;$/;"	m	class:clicky::delt
_e	elements/ip/iprwmapping.hh	/^    IPRewriterEntry _e[2];$/;"	m	class:IPRewriterFlow
_e	elements/standard/quitwatcher.hh	/^  Vector<Element*> _e;$/;"	m	class:QuitWatcher
_e	include/click/element.hh	/^	Element* _e;$/;"	m	class:Element::Port
_e	include/click/handlercall.hh	/^    Element *_e;$/;"	m	class:HandlerCall
_e	tools/lib/elementmap.hh	/^    Vector<Traits> _e;$/;"	m	class:ElementMap
_e	tools/lib/routert.hh	/^    const ElementT *_e;$/;"	m	class:RouterT::const_iterator
_e	tools/lib/routert.hh	/^    const ElementT *_e;$/;"	m	class:RouterT::const_type_iterator
_ea	elements/ip6/addresstranslator.hh	/^    IP6Address _ea;$/;"	m	struct:AddressTranslator::EntryMap
_eclass	tools/lib/eclasst.hh	/^    ElementClassT *_eclass;$/;"	m	class:SynonymElementClassT
_ecn	elements/ip/setipecn.hh	/^    unsigned char _ecn;$/;"	m	class:SetIPECN
_eh	elements/grid/gridencap.hh	/^  click_ether _eh;$/;"	m	class:GridEncap
_ehandler_first_by_element	include/click/router.hh	/^    Vector<int> _ehandler_first_by_element;$/;"	m	class:Router
_ehandler_next	include/click/router.hh	/^    Vector<int> _ehandler_next;$/;"	m	class:Router
_ehandler_to_handler	include/click/router.hh	/^    Vector<int> _ehandler_to_handler;$/;"	m	class:Router
_eid	tools/click-devirtualize/signature.hh	/^  int _eid;$/;"	m	struct:SignatureNode
_eindex	include/click/element.hh	/^    int _eindex;$/;"	m	class:Element
_eindex	tools/lib/elementt.hh	/^    int _eindex;$/;"	m	struct:ElementT
_elem_icount	include/click/standard/alignmentinfo.hh	/^    Vector<int> _elem_icount;$/;"	m	class:AlignmentInfo
_elem_offset	include/click/standard/alignmentinfo.hh	/^    Vector<int> _elem_offset;$/;"	m	class:AlignmentInfo
_element	include/click/hashcontainer.hh	/^    T *_element;$/;"	m	class:HashContainer_const_iterator
_element	lib/router.cc	/^    Element *_element;$/;"	m	class:Router::RouterContextErrh	file:
_element_configurations	include/click/router.hh	/^    Vector<String> _element_configurations;$/;"	m	class:Router
_element_configurations	lib/lexer.cc	/^  Vector<String> _element_configurations;$/;"	m	class:Lexer::Compound	file:
_element_configure_order	include/click/router.hh	/^    Vector<int> _element_configure_order;$/;"	m	class:Router
_element_filenames	lib/lexer.cc	/^  Vector<String> _element_filenames;$/;"	m	class:Lexer::Compound	file:
_element_gport_offset	include/click/router.hh	/^    Vector<int> _element_gport_offset[2];$/;"	m	class:Router
_element_highlight	apps/clicky/src/wmain.hh	/^    ElementT *_element_highlight;$/;"	m	class:clicky::wmain
_element_home_thread_ids	include/click/router.hh	/^    mutable Vector<int> _element_home_thread_ids;$/;"	m	class:Router
_element_landmarkids	include/click/router.hh	/^    Vector<uint32_t> _element_landmarkids;$/;"	m	class:Router
_element_landmarks	include/click/router.hh	/^    Vector<element_landmark_t> _element_landmarks;$/;"	m	class:Router
_element_linenos	lib/lexer.cc	/^  Vector<unsigned> _element_linenos;$/;"	m	class:Lexer::Compound	file:
_element_map	include/click/lexer.hh	/^    HashTable<String, int> _element_map;$/;"	m	class:Lexer
_element_map	tools/lib/processingt.hh	/^    ElementMap *_element_map;$/;"	m	class:ProcessingT
_element_name_map	tools/lib/routert.hh	/^    StringMap _element_name_map;$/;"	m	class:RouterT
_element_name_sorter	include/click/router.hh	/^    mutable Vector<int> _element_name_sorter;$/;"	m	class:Router
_element_names	include/click/router.hh	/^    Vector<String> _element_names;$/;"	m	class:Router
_element_names	lib/lexer.cc	/^  Vector<String> _element_names;$/;"	m	class:Lexer::Compound	file:
_element_nports	lib/lexer.cc	/^  Vector<int> _element_nports[2];$/;"	m	class:Lexer::Compound	file:
_element_size	include/click/bighashmap_arena.hh	/^    uint32_t _element_size;$/;"	m	class:HashMap_Arena
_element_type_map	include/click/lexer.hh	/^    HashTable<String, int> _element_type_map;$/;"	m	class:Lexer
_element_types	include/click/lexer.hh	/^    Vector<ElementType> _element_types;$/;"	m	class:Lexer
_elements	include/click/router.hh	/^    Vector<Element *> _elements;$/;"	m	class:Router
_elements	include/click/routervisitor.hh	/^    Vector<Element *> _elements;$/;"	m	class:ElementTracker
_elements	lib/lexer.cc	/^  Vector<int> _elements;$/;"	m	class:Lexer::Compound	file:
_elements	tools/click-pretty/click-pretty.cc	/^    Vector<ElementT *> _elements;$/;"	m	class:ElementsOutput	file:
_elements	tools/click2xml/xml2click.hh	/^    Vector<CxElement> _elements;$/;"	m	struct:CxConfig
_elements	tools/lib/routert.hh	/^    Vector<ElementT *> _elements;$/;"	m	class:RouterT
_elements_only	tools/lib/elementmap.hh	/^    bool _elements_only;$/;"	m	class:ElementMap::TraitsIterator
_elist_sort	apps/clicky/src/wmain.hh	/^    int _elist_sort;$/;"	m	class:clicky::wmain
_elist_store	apps/clicky/src/wmain.hh	/^    GtkTreeStore *_elist_store;$/;"	m	class:clicky::wmain
_elist_view	apps/clicky/src/wmain.hh	/^    GtkTreeView *_elist_view;$/;"	m	class:clicky::wmain
_elt	apps/clicky/src/dwidget.hh	/^    delt *_elt[2];$/;"	m	class:clicky::dconn
_elt	apps/clicky/src/dwidget.hh	/^    std::vector<delt *> _elt;$/;"	m	class:clicky::delt
_elt	elements/icmp/icmprewriter.hh	/^	IPRewriterBase *_elt;$/;"	m	struct:ICMPRewriter::MapEntry
_elt	include/click/hashmap.hh	/^  typename HashMap<K, V>::Elt *_elt;$/;"	m	class:_HashMap_const_iterator
_elt	include/click/hashmap.hh	/^  typename HashMap<K, void *>::Elt *_elt;$/;"	m	class:_HashMap_const_iterator
_elt	tools/lib/processingt.hh	/^    Vector<const ElementT *> _elt[2];$/;"	m	class:ProcessingT
_elt_map	apps/clicky/src/wdiagram.hh	/^    HashTable<String, delt *> _elt_map;$/;"	m	class:clicky::cdiagram
_emap	apps/clicky/src/crouter.hh	/^    ElementMap *_emap;$/;"	m	class:clicky::crouter
_emap	tools/lib/elementmap.hh	/^    const ElementMap* _emap;$/;"	m	class:ElementMap::TraitsIterator
_empty_note	elements/linuxmodule/fromuserdevice.hh	/^    ActiveNotifier _empty_note;$/;"	m	class:FromUserDevice
_empty_note	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	ActiveNotifier _empty_note;$/;"	m	class:PFSchedFW
_empty_note	elements/standard/notifierqueue.hh	/^    ActiveNotifier _empty_note;$/;"	m	class:NotifierQueue
_empty_polls	elements/linuxmodule/polldevice.hh	/^  uint32_t _empty_polls;$/;"	m	class:PollDevice
_empty_runs	elements/linuxmodule/fromdevice.hh	/^    unsigned _empty_runs;$/;"	m	class:FromDevice
_empty_runs	elements/standard/ratedunqueue.hh	/^    uint32_t _empty_runs;$/;"	m	class:RatedUnqueue
_encap	elements/ns/tosimtrace.hh	/^  String	_encap;$/;"	m	class:ToSimTrace
_encap_type	elements/linuxmodule/touserdevice.hh	/^    uint8_t         _encap_type;$/;"	m	class:ToUserDevice
_encap_type	elements/ns/tosimdevice.hh	/^    int _encap_type;$/;"	m	class:ToSimDevice
_enclosing	tools/click2xml/xml2click.hh	/^    CxConfig *_enclosing;$/;"	m	struct:CxConfig
_end	elements/wifi/fromhandler.hh	/^    Timestamp _end;$/;"	m	class:FromHandler
_end	include/click/lexer.hh	/^	const char *_end;$/;"	m	struct:Lexer::FileState
_end	include/click/packet.hh	/^    unsigned char *_end;  \/* one beyond end of allocated buffer *\/$/;"	m	class:Packet
_end	tools/lib/elementt.hh	/^    PortT _end[2];$/;"	m	class:ConnectionT
_end	tools/lib/lexert.hh	/^	const char *_end;$/;"	m	struct:LexerT::FileState
_end_h	elements/analysis/fromdagdump.hh	/^    HandlerCall *_end_h;$/;"	m	class:FromDAGDump
_end_h	elements/analysis/fromnlanrdump.hh	/^    HandlerCall *_end_h;$/;"	m	class:FromNLANRDump
_end_h	elements/userlevel/fromdump.hh	/^    HandlerCall *_end_h;$/;"	m	class:FromDump
_end_item	tools/click-pretty/click-pretty.cc	/^    bool _end_item : 1;$/;"	m	struct:OutputItem	file:
_end_offset	apps/clicky/src/gathererror.hh	/^    int _end_offset;$/;"	m	class:GatherErrorHandler
_entries	elements/grid/pep.hh	/^  Vector<Entry> _entries;$/;"	m	class:PEP
_entries	elements/grid/regionpep.hh	/^  Vector<Entry> _entries; \/\/ hops stored and transmitted are hops to us$/;"	m	class:EstimateRouterRegion
_entries	elements/ip/ipfragmentmap.hh	/^    HashContainer<Entry> _entries;$/;"	m	class:IPFragmentMap
_entries	include/click/nameinfo.hh	/^    const Entry *_entries;$/;"	m	class:StaticNameDB
_entries	tools/click-pretty/click-pretty.cc	/^    Vector<ElementT *> _entries;$/;"	m	class:ElementsOutput	file:
_entry_capacity	elements/ethernet/arptable.hh	/^    uint32_t _entry_capacity;$/;"	m	class:ARPTable
_entry_count	elements/ethernet/arptable.hh	/^    atomic_uint32_t _entry_count;$/;"	m	class:ARPTable
_ep	apps/clicky/src/dwidget.hh	/^	std::vector<delt *>::const_iterator _ep;$/;"	m	class:clicky::delt::iterator
_ep	elements/ip6/addresstranslator.hh	/^    unsigned short _ep;$/;"	m	struct:AddressTranslator::EntryMap
_epoch	include/click/tokenbucket.hh	/^    epoch_type _epoch;$/;"	m	class:TokenCounterX
_epochs_until_full	include/click/tokenbucket.hh	/^    epoch_type _epochs_until_full;	\/\/ 0 iff unlimited()$/;"	m	class:TokenRateX
_err_rcvs	elements/userlevel/handlerproxy.hh	/^    ErrorReceiver* _err_rcvs;$/;"	m	class:HandlerProxy
_errh	elements/ethernet/arpprint.hh	/^    ErrorHandler *_errh;$/;"	m	class:ARPPrint
_errh	elements/ip/ipfilter.hh	/^	ErrorHandler *_errh;$/;"	m	struct:IPFilter::Parser
_errh	elements/ip/ipprint.hh	/^  ErrorHandler *_errh;$/;"	m	class:IPPrint
_errh	include/click/args.hh	/^    ErrorHandler *_errh;$/;"	m	struct:ArgContext
_errh	include/click/error.hh	/^    ErrorHandler *_errh;$/;"	m	class:ErrorVeneer
_errh	include/click/lexer.hh	/^    ErrorHandler *_errh;$/;"	m	class:Lexer
_errh	tools/lib/lexert.hh	/^    ErrorHandler *_errh;$/;"	m	class:LexerT
_errh	tools/lib/runparse.hh	/^    ErrorHandler *_errh;$/;"	m	class:RouterUnparserT
_error_buffer	apps/clicky/src/wmain.hh	/^    GtkTextBuffer *_error_buffer;$/;"	m	class:clicky::wmain
_error_code	elements/userlevel/controlsocket.cc	/^    int _error_code;$/;"	m	struct:ControlSocketErrorHandler	file:
_error_endpos	apps/clicky/src/wmain.hh	/^    int _error_endpos;$/;"	m	class:clicky::wmain
_error_highlight_index	apps/clicky/src/wmain.hh	/^    int _error_highlight_index;$/;"	m	class:clicky::wmain
_error_highlight_tag	apps/clicky/src/wmain.hh	/^    GtkTextTag *_error_highlight_tag;$/;"	m	class:clicky::wmain
_error_highlight_x	apps/clicky/src/wmain.hh	/^    gdouble _error_highlight_x;$/;"	m	class:clicky::wmain
_error_highlight_y	apps/clicky/src/wmain.hh	/^    gdouble _error_highlight_y;$/;"	m	class:clicky::wmain
_error_hover_index	apps/clicky/src/wmain.hh	/^    int _error_hover_index;$/;"	m	class:clicky::wmain
_error_hover_tag	apps/clicky/src/wmain.hh	/^    GtkTextTag *_error_hover_tag;$/;"	m	class:clicky::wmain
_error_scroller	apps/clicky/src/wmain.hh	/^    guint _error_scroller;$/;"	m	class:clicky::wmain
_error_tag	apps/clicky/src/wmain.cc	/^    GtkTextTag *_error_tag;$/;"	m	class:clicky::ClickyLexerTInfo	file:
_error_view	apps/clicky/src/wmain.hh	/^    GtkWidget *_error_view;$/;"	m	class:clicky::wmain
_es	elements/userlevel/progressbar.hh	/^    Vector<Element*> _es;$/;"	m	class:ProgressBar
_escaped	elements/radio/bim.hh	/^  int _escaped;$/;"	m	class:BIM
_est_type	elements/grid/gridroutetable.hh	/^  unsigned int _est_type;$/;"	m	class:GridRouteTable
_estable	apps/clicky/src/dstyle.hh	/^    HashTable<String, ref_ptr<delt_size_style> > _estable;$/;"	m	class:clicky::dcss_set
_et	elements/grid/packetlogger.hh	/^  uint16_t _et;$/;"	m	class:PacketLogger
_et	elements/wifi/settxrate.hh	/^  uint16_t _et;     \/\/ This protocol's ethertype$/;"	m	class:SetTXRate
_etable	apps/clicky/src/dstyle.hh	/^    HashTable<String, ref_ptr<delt_style> > _etable;$/;"	m	class:clicky::dcss_set
_eth	elements/ethernet/arptable.hh	/^	EtherAddress _eth;$/;"	m	struct:ARPTable::ARPEntry
_eth	elements/grid/ackresponder.hh	/^  EtherAddress _eth;$/;"	m	class:ACKResponder
_eth	elements/grid/dsdvroutetable.hh	/^  EtherAddress _eth;$/;"	m	class:DSDVRouteTable
_eth	elements/grid/gridencap.hh	/^  EtherAddress _eth;$/;"	m	class:GridEncap
_eth	elements/grid/gridprobehandler.hh	/^  EtherAddress _eth;$/;"	m	class:GridProbeHandler
_eth	elements/grid/gridprobesender.hh	/^  EtherAddress _eth;$/;"	m	class:GridProbeSender
_eth	elements/grid/gridroutetable.hh	/^  EtherAddress _eth;$/;"	m	class:GridRouteTable
_eth	elements/grid/linkstat.hh	/^  EtherAddress _eth;$/;"	m	class:LinkStat
_eth	elements/grid/locqueryresponder.hh	/^  EtherAddress _eth;$/;"	m	class:LocQueryResponder
_eth	elements/grid/lookuplocalgridroute2.hh	/^  EtherAddress _eth;$/;"	m	class:LookupLocalGridRoute2
_eth	elements/wifi/ap/stationtable.hh	/^  EtherAddress _eth;$/;"	m	class:Station
_eth	elements/wifi/autoratefallback.hh	/^    EtherAddress _eth;$/;"	m	struct:AutoRateFallback::DstInfo
_eth	elements/wifi/availablerates.hh	/^    EtherAddress _eth;$/;"	m	class:AvailableRates::DstInfo
_eth	elements/wifi/ethercount.hh	/^    EtherAddress _eth;$/;"	m	class:EtherCount::DstInfo
_eth	elements/wifi/madwifirate.hh	/^    EtherAddress _eth;$/;"	m	struct:MadwifiRate::DstInfo
_eth	elements/wifi/probetxrate.hh	/^    EtherAddress _eth;$/;"	m	struct:ProbeTXRate::DstInfo
_eth	elements/wifi/rxstats.hh	/^    EtherAddress _eth;$/;"	m	class:RXStats::DstInfo
_eth	elements/wifi/station/associationrequester.hh	/^  EtherAddress _eth;$/;"	m	class:AssociationRequester
_eth	elements/wifi/station/beaconscanner.hh	/^    EtherAddress _eth;$/;"	m	class:BeaconScanner::wap
_eth	elements/wifi/station/openauthrequester.hh	/^  EtherAddress _eth;$/;"	m	class:OpenAuthRequester
_eth	elements/wifi/station/proberequester.hh	/^  EtherAddress _eth;$/;"	m	class:ProbeRequester
_eth	elements/wifi/wifidupefilter.hh	/^    EtherAddress _eth;$/;"	m	class:WifiDupeFilter::DstInfo
_eth1	elements/ethernet/arpfaker.hh	/^  EtherAddress _eth1;$/;"	m	class:ARPFaker
_eth2	elements/ethernet/arpfaker.hh	/^  EtherAddress _eth2;$/;"	m	class:ARPFaker
_eth_vlan_header_t	drivers/e1000-4.x/src/ans.h	/^typedef struct _eth_vlan_header_t $/;"	s
_ethaddr	elements/grid/lookupgeogridroute.hh	/^  EtherAddress _ethaddr;$/;"	m	class:LookupGeographicGridRoute
_ethaddr	elements/grid/lookuplocalgridroute.hh	/^  EtherAddress _ethaddr;$/;"	m	class:LookupLocalGridRoute
_ethaddr	elements/grid/updateroutes.hh	/^  EtherAddress _ethaddr;$/;"	m	class:UpdateGridRoutes
_ethh	elements/bsdmodule/fastudpsrc.hh	/^  click_ether _ethh;$/;"	m	class:FastUDPSource
_ethh	elements/ethernet/ensureether.hh	/^  click_ether _ethh;$/;"	m	class:EnsureEther
_ethh	elements/ethernet/etherencap.hh	/^    click_ether _ethh;$/;"	m	class:EtherEncap
_ethh	elements/ethernet/ethervlanannoencap.hh	/^    click_ether_vlan _ethh;$/;"	m	class:EtherVLANAnnoEncap
_ethh	elements/ethernet/ethervlanencap.hh	/^    click_ether_vlan _ethh;$/;"	m	class:EtherVLANEncap
_ethh	elements/ethernet/stripetherheader.hh	/^  click_ether _ethh;$/;"	m	class:EtherEncap
_ethh	elements/linuxmodule/fasttcpflows.hh	/^  click_ether _ethh;$/;"	m	class:FastTCPFlows
_ethh	elements/linuxmodule/fastudpflows.hh	/^  click_ether _ethh;$/;"	m	class:FastUDPFlows
_ethh	elements/linuxmodule/fastudpsrc.hh	/^  click_ether _ethh;$/;"	m	class:FastUDPSource
_ethh	elements/linuxmodule/fastudpsrcip6.hh	/^  click_ether _ethh;$/;"	m	class:FastUDPSourceIP6
_etht	elements/grid/dsrarptable.hh	/^  unsigned int _etht;$/;"	m	class:DSRArpTable
_etinfo	tools/click-devirtualize/specializer.hh	/^  Vector<ElementTypeInfo> _etinfo;$/;"	m	class:Specializer
_etinfo_map	tools/click-devirtualize/specializer.hh	/^  HashTable<String, int> _etinfo_map;$/;"	m	class:Specializer
_event_timer	elements/grid/movesim.hh	/^  Timer _event_timer;$/;"	m	class:MovementSimulator
_events	elements/grid/movesim.hh	/^  event_entry *_events; \/\/ sentinel for events list$/;"	m	class:MovementSimulator
_events	elements/userlevel/rawsocket.hh	/^  int _events;			\/\/ keeps track of the events for which select() is waiting$/;"	m	class:RawSocket
_events	elements/userlevel/socket.hh	/^  int _events;			\/\/ keeps track of the events for which select() is waiting$/;"	m	class:Socket
_eview_config	apps/clicky/src/whandler.hh	/^    GtkWidget *_eview_config;$/;"	m	struct:clicky::whandler
_eview_name	apps/clicky/src/wmain.hh	/^    String _eview_name;$/;"	m	class:clicky::wmain
_eviewbox	apps/clicky/src/whandler.hh	/^    GtkWidget *_eviewbox;$/;"	m	struct:clicky::whandler
_exit	elements/linuxmodule/fromuserdevice.hh	/^    bool _exit;$/;"	m	class:FromUserDevice
_exit	elements/linuxmodule/touserdevice.hh	/^    volatile bool   _exit;$/;"	m	class:ToUserDevice
_expand_groups	tools/lib/lexert.hh	/^    bool _expand_groups;$/;"	m	class:LexerT
_expanded	lib/lexer.cc	/^  int8_t _expanded;$/;"	m	class:Lexer::TunnelEnd	file:
_expect_trim_whitespace	test/testie	/^sub _expect_trim_whitespace ($) {$/;"	s
_expire_hooks	elements/grid/dsdvroutetable.hh	/^  HMap _expire_hooks;$/;"	m	class:DSDVRouteTable
_expire_timer	elements/ethernet/arptable.hh	/^    Timer _expire_timer;$/;"	m	class:ARPTable
_expire_timer	elements/ethernet/ip6ndsolicitor.hh	/^  Timer _expire_timer;$/;"	m	class:IP6NDSolicitor
_expire_timer	elements/grid/floodinglocquerier.hh	/^  Timer _expire_timer;$/;"	m	class:FloodingLocQuerier
_expire_timer	elements/grid/gridroutetable.hh	/^  Timer _expire_timer;$/;"	m	class:GridRouteTable
_expire_timer	elements/grid/locqueryresponder.hh	/^  Timer _expire_timer;$/;"	m	class:LocQueryResponder
_expire_timer	elements/grid/updateroutes.hh	/^  Timer _expire_timer;$/;"	m	class:UpdateGridRoutes
_expire_timers	elements/grid/dsdvroutetable.hh	/^  TMap _expire_timers;$/;"	m	class:DSDVRouteTable
_expiry	include/click/timer.hh	/^    Timestamp _expiry;$/;"	m	class:Timer
_expiry_j	elements/ip/iprwmapping.hh	/^    click_jiffies_t _expiry_j;$/;"	m	class:IPRewriterFlow
_explicit_queues	elements/standard/unqueue2.hh	/^    bool _explicit_queues;$/;"	m	class:Unqueue2
_extended_logging_errh	elements/grid/gridlocationinfo.hh	/^  ErrorHandler *_extended_logging_errh;$/;"	m	class:GridLocationInfo
_extended_logging_errh	elements/grid/gridroutetable.hh	/^  ErrorHandler *_extended_logging_errh;$/;"	m	class:GridRouteTable
_extra_anno	elements/standard/truncate.hh	/^    bool _extra_anno;$/;"	m	class:Truncate
_extra_length	elements/userlevel/todump.hh	/^    bool _extra_length;$/;"	m	class:ToDump
_extra_pkthdr_crap	elements/userlevel/fromdump.hh	/^    unsigned _extra_pkthdr_crap;$/;"	m	class:FromDump
_f	elements/analysis/aggregateip.hh	/^    IPField _f;$/;"	m	class:AggregateIP
_f	elements/analysis/toipsumdump.hh	/^    FILE *_f;$/;"	m	class:ToIPSummaryDump
_f	include/click/error.hh	/^    FILE *_f;$/;"	m	class:FileErrorHandler
_f0	include/click/bitvector.hh	/^    uint32_t _f0;$/;"	m	class:Bitvector
_f1	include/click/bitvector.hh	/^    uint32_t _f1;$/;"	m	class:Bitvector
_failed_count	elements/linuxmodule/fromuserdevice.hh	/^    uint32_t _failed_count;$/;"	m	class:FromUserDevice
_failed_count	elements/linuxmodule/touserdevice.hh	/^    atomic_uint32_t _failed_count;$/;"	m	class:ToUserDevice
_failed_pulls	elements/standard/ratedunqueue.hh	/^    uint32_t _failed_pulls;$/;"	m	class:RatedUnqueue
_failures	elements/wifi/madwifirate.hh	/^    int _failures;$/;"	m	struct:MadwifiRate::DstInfo
_fake_seq_no	elements/grid/gridroutetable.hh	/^  unsigned int _fake_seq_no;$/;"	m	class:GridRouteTable
_family	elements/userlevel/socket.hh	/^  int _family;			\/\/ AF_INET or AF_UNIX$/;"	m	class:Socket
_fd	apps/csclient/csclient.hh	/^  int _fd;$/;"	m	class:ControlSocketClient
_fd	elements/analysis/fromflandump.hh	/^	int _fd;$/;"	m	class:FromFlanDump::FlanFile
_fd	elements/grid/airoinfo.hh	/^  int _fd;$/;"	m	class:AiroInfo
_fd	elements/grid/gridlogger.hh	/^  int _fd;$/;"	m	class:GridLogger
_fd	elements/ns/fromsimdevice.hh	/^  int _fd;$/;"	m	class:FromSimDevice
_fd	elements/ns/tosimdevice.hh	/^    int _fd;$/;"	m	class:ToSimDevice
_fd	elements/radio/bim.hh	/^  int _fd;$/;"	m	class:BIM
_fd	elements/userlevel/fromdevice.hh	/^    int _fd;$/;"	m	class:FromDevice
_fd	elements/userlevel/fromhost.hh	/^    int _fd;$/;"	m	class:FromHost
_fd	elements/userlevel/kerneltun.hh	/^    int _fd;$/;"	m	class:KernelTun
_fd	elements/userlevel/rawsocket.hh	/^  int _fd;			\/\/ socket descriptor$/;"	m	class:RawSocket
_fd	elements/userlevel/socket.hh	/^  int _fd;	\/\/ socket descriptor$/;"	m	class:Socket
_fd	elements/userlevel/todevice.hh	/^    int _fd;$/;"	m	class:ToDevice
_fd	elements/userlevel/tohost.hh	/^    int _fd;$/;"	m	class:ToHost
_fd	include/click/fromfile.hh	/^    int _fd;$/;"	m	class:FromFile
_fd_alive	elements/userlevel/chattersocket.hh	/^  Vector<int> _fd_alive;$/;"	m	class:ChatterSocket
_fd_pos	elements/userlevel/chattersocket.hh	/^  Vector<uint32_t> _fd_pos;$/;"	m	class:ChatterSocket
_ff	elements/analysis/fromcapdump.hh	/^    FromFile _ff;$/;"	m	class:FromCapDump
_ff	elements/analysis/fromdagdump.hh	/^    FromFile _ff;$/;"	m	class:FromDAGDump
_ff	elements/analysis/fromflandump.hh	/^    FlanFile *_ff[FF_LAST];$/;"	m	class:FromFlanDump
_ff	elements/analysis/fromipsumdump.hh	/^    FromFile _ff;$/;"	m	class:FromIPSummaryDump
_ff	elements/analysis/fromnetflowsumdump.hh	/^    FromFile _ff;$/;"	m	class:FromNetFlowSummaryDump
_ff	elements/analysis/fromnlanrdump.hh	/^    FromFile _ff;$/;"	m	class:FromNLANRDump
_ff	elements/analysis/fromtcpdump.hh	/^    FromFile _ff;$/;"	m	class:FromTcpdump
_ff	elements/userlevel/fromdump.hh	/^    FromFile _ff;$/;"	m	class:FromDump
_field_order	elements/analysis/fromipsumdump.hh	/^    Vector<int> _field_order;$/;"	m	class:FromIPSummaryDump
_fields	elements/analysis/fromipsumdump.hh	/^    Vector<const IPSummaryDump::FieldReader *> _fields;$/;"	m	class:FromIPSummaryDump
_fields	elements/analysis/toipsumdump.hh	/^    Vector<const IPSummaryDump::FieldWriter *> _fields;$/;"	m	class:ToIPSummaryDump
_file	include/click/lexer.hh	/^    FileState _file;$/;"	m	class:Lexer
_file	tools/lib/lexert.hh	/^    FileState _file;$/;"	m	class:LexerT
_file_offset	include/click/fromfile.hh	/^    off_t _file_offset;$/;"	m	class:FromFile
_filename	elements/analysis/toipflowdumps.hh	/^	String _filename;$/;"	m	class:ToIPFlowDumps::Flow
_filename	elements/analysis/toipsumdump.hh	/^    String _filename;$/;"	m	class:ToIPSummaryDump
_filename	elements/userlevel/todump.hh	/^    String _filename;$/;"	m	class:ToDump
_filename	include/click/fromfile.hh	/^    String _filename;$/;"	m	class:FromFile
_filename	include/click/lexer.hh	/^	String _filename;$/;"	m	struct:Lexer::FileState
_filename	tools/lib/lexert.hh	/^	String _filename;$/;"	m	struct:LexerT::FileState
_filename_pattern	elements/analysis/toipflowdumps.hh	/^    String _filename_pattern;$/;"	m	class:ToIPFlowDumps
_filepos	elements/analysis/aggregateipflows.hh	/^	uint32_t _filepos;$/;"	m	struct:AggregateIPFlows::StatFlowInfo
_filepos_h	elements/analysis/aggregateipflows.hh	/^    HandlerCall *_filepos_h;$/;"	m	class:AggregateIPFlows
_filled	tools/click2xml/xml2click.hh	/^    bool _filled;$/;"	m	struct:CxConfig
_filter	lib/router.cc	/^    ElementFilter *_filter;$/;"	m	class:__anon512::ElementFilterRouterVisitor	file:
_first	elements/analysis/adjusttimestamp.hh	/^    bool _first;$/;"	m	class:AdjustTimestamp
_first	elements/analysis/settimestampdelta.hh	/^    Timestamp _first;$/;"	m	class:SetTimestampDelta
_first	elements/analysis/timefilter.hh	/^    Timestamp _first;$/;"	m	class:TimeFilter
_first	elements/analysis/timerange.hh	/^    Timestamp _first;$/;"	m	class:TimeRange
_first	elements/bsdmodule/fastudpsrc.hh	/^  click_jiffies_t _first;$/;"	m	class:FastUDPSource
_first	elements/ip/ipratemon.hh	/^  Stats *_first, *_last;	\/\/ first and last element in age list$/;"	m	class:IPRateMonitor
_first	elements/linuxmodule/fasttcpflows.hh	/^  click_jiffies_t _first;$/;"	m	class:FastTCPFlows
_first	elements/linuxmodule/fastudpflows.hh	/^  click_jiffies_t _first;$/;"	m	class:FastUDPFlows
_first	elements/linuxmodule/fastudpsrc.hh	/^  click_jiffies_t _first;$/;"	m	class:FastUDPSource
_first	elements/linuxmodule/fastudpsrcip6.hh	/^  click_jiffies_t _first;$/;"	m	class:FastUDPSourceIP6
_first	elements/standard/averagecounter.hh	/^    atomic_uint32_t _first;$/;"	m	class:AverageCounter
_first_conn	tools/lib/routert.hh	/^    Vector<Pair> _first_conn;$/;"	m	class:RouterT
_first_count	elements/standard/averagecounter.hh	/^    atomic_uint32_t _first_count;$/;"	m	class:AverageCounter
_first_pos_h	elements/userlevel/progressbar.hh	/^    int _first_pos_h;$/;"	m	class:ProgressBar
_first_seq	elements/analysis/toipflowdumps.hh	/^	tcp_seq_t _first_seq[2];$/;"	m	class:ToIPFlowDumps::Flow
_first_time	elements/analysis/fromdagdump.hh	/^    Timestamp _first_time;$/;"	m	class:FromDAGDump
_first_time	elements/analysis/fromnlanrdump.hh	/^    Timestamp _first_time;$/;"	m	class:FromNLANRDump
_first_time	elements/userlevel/fromdump.hh	/^    Timestamp _first_time;$/;"	m	class:FromDump
_first_timestamp	elements/analysis/aggregateipflows.hh	/^	Timestamp _first_timestamp;$/;"	m	struct:AggregateIPFlows::StatFlowInfo
_first_timestamp	elements/analysis/toipflowdumps.hh	/^	Timestamp _first_timestamp;$/;"	m	class:ToIPFlowDumps::Flow
_fix	elements/grid/pep.hh	/^    pep_fix _fix;$/;"	m	struct:PEP::Entry
_fix	elements/grid/regionpep.hh	/^    pep_rgn_fix _fix;$/;"	m	struct:EstimateRouterRegion::Entry
_fixed	elements/grid/pep.hh	/^  bool _fixed;  \/\/ We have a static, known location in _lat \/ _lon.$/;"	m	class:PEP
_fixed	elements/grid/regionpep.hh	/^  bool _fixed;  \/\/ We have a static, known location in _lat \/ _lon.$/;"	m	class:EstimateRouterRegion
_fixoff	elements/tcpudp/settcpchecksum.hh	/^  bool _fixoff;$/;"	m	class:SetTCPChecksum
_flag	elements/radio/b8b10.hh	/^  int _flag;$/;"	m	class:B8B10
_flags	apps/clicky/src/hvalues.hh	/^    int _flags;$/;"	m	class:clicky::handler_value
_flags	elements/local/OpenFlow/datapath.hh	/^	uint16_t _flags;$/;"	m	class:Datapath
_flags	include/click/handler.hh	/^    uint32_t _flags;$/;"	m	class:Handler
_flat_config	apps/clicky/src/dwidget.hh	/^    String _flat_config;$/;"	m	class:clicky::delt
_flat_name	apps/clicky/src/dwidget.hh	/^    String _flat_name;$/;"	m	class:clicky::delt
_flow_code	apps/clicky/src/dwidget.hh	/^    String _flow_code;$/;"	m	class:clicky::delt
_flow_code_override	include/click/router.hh	/^    Vector<String> _flow_code_override;$/;"	m	class:Router
_flow_code_override_eindex	include/click/router.hh	/^    Vector<int> _flow_code_override_eindex;$/;"	m	class:Router
_flow_over	elements/analysis/aggregateipflows.hh	/^	unsigned _flow_over : 2;$/;"	m	struct:AggregateIPFlows::FlowInfo
_flow_overrides	tools/lib/processingt.hh	/^    HashTable<String, String> _flow_overrides;$/;"	m	class:ProcessingT
_flowid	elements/analysis/fromcapdump.hh	/^    IPFlowID _flowid;$/;"	m	class:FromCapDump
_flowid	elements/analysis/fromipsumdump.hh	/^    IPFlowID _flowid;$/;"	m	class:FromIPSummaryDump
_flowid	elements/analysis/toipflowdumps.hh	/^	IPFlowID _flowid;$/;"	m	class:ToIPFlowDumps::Flow
_flowid	elements/ip/iprwmapping.hh	/^    IPFlowID _flowid;$/;"	m	class:IPRewriterEntry
_flowid	elements/userlevel/ipflowrawsockets.hh	/^	IPFlowID _flowid;$/;"	m	class:IPFlowRawSockets::Flow
_flowid_is_rcv	elements/analysis/fromcapdump.hh	/^    bool _flowid_is_rcv;$/;"	m	class:FromCapDump
_flowmap	elements/analysis/aggpktcounter.hh	/^    Flow *_flowmap[NFLOWMAP];$/;"	m	class:AggregatePacketCounter
_flowmap	elements/analysis/toipflowdumps.hh	/^    Flow *_flowmap[NFLOWMAP];$/;"	m	class:ToIPFlowDumps
_flowmap	elements/userlevel/ipflowrawsockets.hh	/^    Flow *_flowmap[NFLOWMAP];$/;"	m	class:IPFlowRawSockets
_flows	elements/analysis/aggregateipflows.hh	/^	FlowInfo *_flows;$/;"	m	struct:AggregateIPFlows::HostPairInfo
_flows	elements/linuxmodule/fasttcpflows.hh	/^  flow_t *_flows;$/;"	m	class:FastTCPFlows
_flows	elements/linuxmodule/fastudpflows.hh	/^  flow_t *_flows;$/;"	m	class:FastUDPFlows
_flows	elements/userlevel/ipflowrawsockets.hh	/^    Vector<Flow *> _flows;$/;"	m	class:IPFlowRawSockets
_flowsize	elements/linuxmodule/fasttcpflows.hh	/^  unsigned int _flowsize;$/;"	m	class:FastTCPFlows
_flowsize	elements/linuxmodule/fastudpflows.hh	/^  unsigned int _flowsize;$/;"	m	class:FastUDPFlows
_fn	elements/grid/gridlogger.hh	/^  String _fn;$/;"	m	class:GridLogger
_fn_map	tools/click-devirtualize/cxxclass.hh	/^  HashTable<String, int> _fn_map;$/;"	m	class:CxxClass
_fnames	tools/lib/landmarkt.hh	/^    Vector<String> _fnames;$/;"	m	class:LandmarkSetT
_force	elements/ip/markipce.hh	/^    bool _force;$/;"	m	class:MarkIPCE
_force_ip	elements/userlevel/fromdevice.hh	/^    bool _force_ip;$/;"	m	class:FromDevice
_formal_types	tools/click2xml/xml2click.hh	/^    Vector<String> _formal_types;$/;"	m	struct:CxConfig
_formal_types	tools/lib/routert.hh	/^    Vector<String> _formal_types;$/;"	m	class:RouterT
_formals	tools/click2xml/xml2click.hh	/^    Vector<String> _formals;$/;"	m	struct:CxConfig
_formals	tools/lib/routert.hh	/^    Vector<String> _formals;$/;"	m	class:RouterT
_format	elements/analysis/fromnlanrdump.hh	/^    int _format;$/;"	m	class:FromNLANRDump
_forward	apps/clicky/src/crouter.hh	/^	bool _forward;$/;"	m	struct:clicky::crouter::reachable_match_t
_forward_delay	elements/etherswitch/bridgemessage.hh	/^  uint32_t _forward_delay;	\/\/ in seconds$/;"	m	class:BridgeMessage
_forwarded_rreq_map	elements/grid/dsrroutetable.hh	/^  ForwardedReqMap _forwarded_rreq_map;$/;"	m	class:DSRRouteTable
_fp	elements/userlevel/todump.hh	/^    FILE *_fp;$/;"	m	class:ToDump
_fq_cb_id	elements/grid/gridprobehandler.hh	/^  int _fq_cb_id;$/;"	m	class:GridProbeHandler
_fq_el	elements/grid/gridprobehandler.hh	/^  FloodingLocQuerier *_fq_el;$/;"	m	class:GridProbeHandler
_fragment_head	elements/analysis/aggregateipflows.hh	/^	Packet *_fragment_head;$/;"	m	struct:AggregateIPFlows::HostPairInfo
_fragment_tail	elements/analysis/aggregateipflows.hh	/^	Packet *_fragment_tail;$/;"	m	struct:AggregateIPFlows::HostPairInfo
_fragment_timeout	elements/analysis/aggregateipflows.hh	/^    unsigned _fragment_timeout;$/;"	m	class:AggregateIPFlows
_fragments	elements/ip/ipfragmenter.hh	/^  atomic_uint32_t _fragments;$/;"	m	class:IPFragmenter
_fragments	elements/ip6/ip6fragmenter.hh	/^  int _fragments;$/;"	m	class:IP6Fragmenter
_frame	apps/ClickController/ClickController.java	/^    private JFrame _frame;$/;"	f	class:ClickController	file:
_free	elements/analysis/aggcounter.hh	/^    Node *_free;$/;"	m	class:AggregateCounter
_free	elements/analysis/anonipaddr.hh	/^    Node *_free;$/;"	m	class:AnonymizeIPAddr
_free	include/click/bighashmap_arena.hh	/^    Link *_free;$/;"	m	class:HashMap_Arena
_free	include/click/hashallocator.hh	/^    link *_free;$/;"	m	class:HashAllocator
_free_conn	tools/lib/routert.hh	/^    ConnectionX *_free_conn;$/;"	m	class:RouterT
_free_element	tools/lib/routert.hh	/^    ElementT *_free_element;$/;"	m	class:RouterT
_free_element_type	include/click/lexer.hh	/^    int _free_element_type;$/;"	m	class:Lexer
_free_handler	include/click/router.hh	/^    int _free_handler;$/;"	m	class:Router
_free_next	elements/ip6/addresstranslator.hh	/^  Mapping *_free_next;$/;"	m	class:AddressTranslator::Mapping
_freed	linuxmodule/skbmgr.cc	/^  int _freed;$/;"	m	class:RecycledSkbPool	file:
_from	elements/wifi/linktable.hh	/^    IPAddress _from;$/;"	m	class:IPPair
_from	elements/wifi/linktable.hh	/^    IPAddress _from;$/;"	m	class:LinkTable::Link
_from	elements/wifi/linktable.hh	/^    IPAddress _from;$/;"	m	class:LinkTable::LinkInfo
_from_eth	elements/grid/hello.hh	/^  EtherAddress _from_eth;$/;"	m	class:SendGridHello
_from_eth	elements/grid/lrhello.hh	/^  EtherAddress _from_eth;$/;"	m	class:SendGridLRHello
_from_header_file	tools/click-devirtualize/cxxclass.hh	/^  bool _from_header_file;$/;"	m	class:CxxFunction
_from_ip	elements/grid/hello.hh	/^  IPAddress _from_ip;$/;"	m	class:SendGridHello
_from_ip	elements/grid/lrhello.hh	/^  IPAddress _from_ip;$/;"	m	class:SendGridLRHello
_from_pp_from	tools/click-xform/click-xform.cc	/^  Vector<PortT> _from_pp_from;$/;"	m	class:Matcher	file:
_from_pp_to	tools/click-xform/click-xform.cc	/^  Vector<PortT> _from_pp_to;$/;"	m	class:Matcher	file:
_from_user_device	elements/linuxmodule/touserdevice.hh	/^    class FromUserDevice *_from_user_device;$/;"	m	class:ToUserDevice	typeref:class:ToUserDevice::FromUserDevice
_frozen	apps/clicky/src/dstyle.hh	/^    bool _frozen;$/;"	m	class:clicky::dcss_set
_frozen	elements/analysis/aggcounter.hh	/^    bool _frozen;$/;"	m	class:AggregateCounter
_frozen	elements/grid/gridroutetable.hh	/^  bool _frozen;$/;"	m	class:GridRouteTable
_ftable	apps/clicky/src/dstyle.hh	/^    HashTable<String, ref_ptr<dfullness_style> > _ftable;$/;"	m	class:clicky::dcss_set
_full_note	elements/standard/fullnotequeue.hh	/^    ActiveNotifier _full_note;$/;"	m	class:FullNoteQueue
_full_proxy	elements/userlevel/controlsocket.hh	/^    HandlerProxy *_full_proxy;$/;"	m	class:ControlSocket
_functions	tools/click-devirtualize/cxxclass.hh	/^  Vector<CxxFunction> _functions;$/;"	m	class:CxxClass
_fwd_weight	elements/standard/compblock.hh	/^  int _fwd_weight;$/;"	m	class:CompareBlock
_gamma	elements/local/FlowNet/scheduler/sched_algorithms/SchedWBS.hh	/^	double _gamma; \/* for the weight of the per-flow queue of the next node *\/$/;"	m	class:VcScheduleWBS
_gc_aggs	elements/analysis/toipflowdumps.hh	/^    Vector<uint32_t> _gc_aggs;$/;"	m	class:ToIPFlowDumps
_gc_aggs	elements/userlevel/ipflowrawsockets.hh	/^    Vector<uint32_t> _gc_aggs;$/;"	m	class:IPFlowRawSockets
_gc_interval	elements/analysis/aggregateipaddrpair.hh	/^    uint32_t _gc_interval;$/;"	m	class:AggregateIPAddrPair
_gc_interval	elements/analysis/aggregateipflows.hh	/^    unsigned _gc_interval;$/;"	m	class:AggregateIPFlows
_gc_interval_sec	elements/ip/iprewriterbase.hh	/^    uint32_t _gc_interval_sec;$/;"	m	class:IPRewriterBase
_gc_sec	elements/analysis/aggregateipaddrpair.hh	/^    unsigned _gc_sec;$/;"	m	class:AggregateIPAddrPair
_gc_sec	elements/analysis/aggregateipflows.hh	/^    unsigned _gc_sec;$/;"	m	class:AggregateIPFlows
_gc_timer	elements/analysis/toipflowdumps.hh	/^    Timer _gc_timer;$/;"	m	class:ToIPFlowDumps
_gc_timer	elements/ip/iprewriterbase.hh	/^    Timer _gc_timer;$/;"	m	class:IPRewriterBase
_gc_timer	elements/userlevel/ipflowrawsockets.hh	/^    Timer _gc_timer;$/;"	m	class:IPFlowRawSockets
_generation	apps/clicky/src/dwidget.hh	/^    unsigned _generation;$/;"	m	class:clicky::delt
_generation	apps/clicky/src/wdiagram.hh	/^    unsigned _generation;$/;"	m	class:clicky::wdiagram
_generation	bsdmodule/modulepriv.hh	/^  unsigned _generation;$/;"	m	class:KernelErrorHandler
_generation	include/click/ino.hh	/^    uint32_t _generation;$/;"	m	class:ClickIno
_generator	tools/click-align/alignclass.hh	/^    bool _generator;$/;"	m	class:DeviceAlignClass
_gentle	elements/aqm/red.hh	/^    bool _gentle;$/;"	m	class:RED
_gerrh	apps/clicky/src/crouter.hh	/^    mutable GatherErrorHandler _gerrh;$/;"	m	class:clicky::crouter
_gerrh	apps/clicky/src/wmain.cc	/^    GatherErrorHandler *_gerrh;$/;"	m	class:clicky::ClickyLexerTInfo	file:
_get	test/testie	/^sub _get ($;$) {$/;"	s
_gf_cb_id	elements/grid/gridprobehandler.hh	/^  int _gf_cb_id;$/;"	m	class:GridProbeHandler
_gf_el	elements/grid/gridprobehandler.hh	/^  LookupGeographicGridRoute *_gf_el;$/;"	m	class:GridProbeHandler
_gh	elements/grid/gridencap.hh	/^  grid_hdr _gh;$/;"	m	class:GridEncap
_given_flowid	elements/analysis/fromipsumdump.hh	/^    IPFlowID _given_flowid;$/;"	m	class:FromIPSummaryDump
_global_pass	include/click/routerthread.hh	/^    unsigned _global_pass;		\/\/ global pass$/;"	m	class:RouterThread
_global_scope	include/click/lexer.hh	/^    VariableEnvironment _global_scope;$/;"	m	class:Lexer
_god	elements/local/FlowNet/common/PF_FW.hh	/^        FlowNetGod* _god;$/;"	m	class:PFFW
_good	elements/grid/gridgenericmetric.hh	/^    bool _good;$/;"	m	class:GridGenericMetric::metric_t
_good_dst	elements/ip/checkipheader.hh	/^  Vector<IPAddress> _good_dst;	\/\/ array of IP dst addrs for which _bad_src$/;"	m	class:CheckIPHeader
_good_dst	elements/ip/ipinputcombo.hh	/^  Vector<IPAddress> _good_dst;$/;"	m	class:IPInputCombo
_greedy	include/click/routerthread.hh	/^    bool _greedy;$/;"	m	class:RouterThread
_group_depth	include/click/lexer.hh	/^    int _group_depth;$/;"	m	class:Lexer
_group_depth	tools/lib/lexert.hh	/^    int _group_depth;$/;"	m	class:LexerT
_groups	elements/analysis/aggregatefilter.hh	/^    Group *_groups[NBUCKETS];$/;"	m	class:AggregateFilter
_gw	elements/grid/gridproxy.hh	/^    IPAddress _gw;$/;"	m	class:GridProxy::DstInfo
_gw	elements/userlevel/fromhost.hh	/^    IPAddress _gw;$/;"	m	class:FromHost
_gw	elements/userlevel/kerneltun.hh	/^    IPAddress _gw;$/;"	m	class:KernelTun
_gw	include/click/ip6table.hh	/^    IP6Address _gw;$/;"	m	struct:IP6Table::Entry
_gw_info	elements/grid/dsdvroutetable.hh	/^  GridGatewayInfo *_gw_info;$/;"	m	class:DSDVRouteTable
_gw_info	elements/grid/gridroutetable.hh	/^  GridGatewayInfo *_gw_info;$/;"	m	class:GridRouteTable
_gw_info	elements/grid/lookuplocalgridroute.hh	/^  GridGatewayInfo *_gw_info;$/;"	m	class:LookupLocalGridRoute
_h	elements/grid/grid.hh	/^    int32_t _h;$/;"	m	struct:grid_location
_h	elements/grid/region.hh	/^  double _h;$/;"	m	class:RectRegion
_h	elements/local/FlowNet/common/PacketQueue.hh	/^	int	_h;$/;"	m	struct:PacketQueue
_h	elements/local/OpenFlow/SynchronizedPacketQueue.hh	/^	int	_h;$/;"	m	struct:SynchronizedPacketQueue
_h	elements/test/handlertask.hh	/^    HandlerCall _h;$/;"	m	class:HandlerTask
_h	include/click/handlercall.hh	/^    const Handler *_h;$/;"	m	class:HandlerCall
_h0	elements/grid/gridlocationinfo.hh	/^  double _h0;$/;"	m	class:GridLocationInfo
_h_element	elements/standard/pokehandlers.hh	/^    Vector<Element *> _h_element;$/;"	m	class:PokeHandlers
_h_handler	elements/standard/pokehandlers.hh	/^    Vector<String> _h_handler;$/;"	m	class:PokeHandlers
_h_timeout	elements/standard/pokehandlers.hh	/^    Vector<int> _h_timeout;$/;"	m	class:PokeHandlers
_h_value	elements/standard/pokehandlers.hh	/^    Vector<String> _h_value;$/;"	m	class:PokeHandlers
_handler	elements/wifi/fromhandler.hh	/^    String _handler;$/;"	m	class:FromHandler
_handlerId	apps/ClickController/ClickException.java	/^	private String _handlerId;$/;"	f	class:ClickException.HandlerException	file:
_handlerLabel	apps/ClickController/ClickController.java	/^    private JLabel _handlerLabel;$/;"	f	class:ClickController	file:
_handlerText	apps/ClickController/ClickController.java	/^    private JTextArea _handlerText;$/;"	f	class:ClickController	file:
_handler_bufs	include/click/router.hh	/^    Handler** _handler_bufs;$/;"	m	class:Router
_handler_first_by_name	include/click/router.hh	/^    Vector<int> _handler_first_by_name;$/;"	m	class:Router
_handlerbox	apps/clicky/src/whandler.hh	/^    GtkBox *_handlerbox;$/;"	m	struct:clicky::whandler
_handlers	apps/clicky/src/wmain.hh	/^    whandler *_handlers;$/;"	m	class:clicky::wmain
_handlers	elements/standard/quitwatcher.hh	/^  Vector<const Handler*> _handlers;$/;"	m	class:QuitWatcher
_hard_start	elements/linuxmodule/todevice.hh	/^    uint32_t _hard_start;$/;"	m	class:ToDevice
_has_pull	tools/click-devirtualize/cxxclass.hh	/^  Vector<int> _has_pull;$/;"	m	class:CxxClass
_has_push	tools/click-devirtualize/cxxclass.hh	/^  Vector<int> _has_push;$/;"	m	class:CxxClass
_hasher	elements/ip/siphmapper.hh	/^    chash_t<int> *_hasher;$/;"	m	class:SourceIPHashMapper
_hashnext	elements/ethernet/arptable.hh	/^	ARPEntry *_hashnext;$/;"	m	struct:ARPTable::ARPEntry
_hashnext	elements/ip/ipfragmentmap.hh	/^	Entry *_hashnext;$/;"	m	struct:IPFragmentMap::Entry
_hashnext	elements/ip/iprwmapping.hh	/^    IPRewriterEntry *_hashnext;$/;"	m	class:IPRewriterEntry
_hashnext	elements/test/hashtabletest.cc	/^    struct MyHashContainerEntry *_hashnext;$/;"	m	struct:MyHashContainerEntry	typeref:struct:MyHashContainerEntry::MyHashContainerEntry	file:
_hashnext	include/click/hashtable.hh	/^	elt *_hashnext;$/;"	m	struct:HashTable::elt
_have	tools/click-align/alignclass.hh	/^  Aligner *_have;$/;"	m	class:CombinedAligner
_have_elements	tools/click-pretty/click-pretty.cc	/^    bool _have_elements;$/;"	m	class:ElementsOutput	file:
_have_entries	tools/click-pretty/click-pretty.cc	/^    bool _have_entries;$/;"	m	class:ElementsOutput	file:
_have_first_seq	elements/analysis/toipflowdumps.hh	/^	bool _have_first_seq[2];$/;"	m	class:ToIPFlowDumps::Flow
_have_mpegShape	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	bool _have_mpegShape;$/;"	m	class:PFShapeFW
_have_port_devname	elements/local/OpenFlow/datapath.hh	/^	bool _have_port_devname[DP_MAX_PORTS];$/;"	m	class:Datapath
_have_port_macaddr	elements/local/OpenFlow/datapath.hh	/^	bool _have_port_macaddr[DP_MAX_PORTS];$/;"	m	class:Datapath
_have_size	elements/userlevel/progressbar.hh	/^    bool _have_size;$/;"	m	class:ProgressBar
_hc	include/click/hashcontainer.hh	/^    const HashContainer<T, A> *_hc;$/;"	m	class:HashContainer_const_iterator
_head	elements/ethernet/arptable.hh	/^	Packet *_head;$/;"	m	struct:ARPTable::ARPEntry
_head	elements/linuxmodule/cpuqueue.hh	/^    unsigned _head;$/;"	m	struct:CPUQueue::__anon303
_head	elements/local/FlowNet/papmo/PaPMo.hh	/^	int _head;$/;"	m	struct:lfc_buffer
_head	elements/tcpudp/snooptcp.hh	/^  int _head;$/;"	m	struct:SnoopTCP::PCB
_head	include/click/dequeue.hh	/^  int _head;$/;"	m	class:DEQueue
_head	include/click/list.hh	/^    T *_head;$/;"	m	class:List
_head	include/click/packet.hh	/^    unsigned char *_head; \/* start of allocated buffer *\/$/;"	m	class:Packet
_head	include/click/standard/storage.hh	/^    volatile index_type _head;$/;"	m	class:Storage
_head	linuxmodule/modulepriv.hh	/^    volatile uint32_t _head;$/;"	m	class:KernelErrorHandler
_head	linuxmodule/skbmgr.cc	/^  int _head;$/;"	m	class:RecycledSkbBucket	file:
_header_file_map	tools/click-devirtualize/specializer.hh	/^  HashTable<String, int> _header_file_map;$/;"	m	class:Specializer
_headroom	elements/ip/ipfragmenter.hh	/^  unsigned _headroom;$/;"	m	class:IPFragmenter
_headroom	elements/linuxmodule/fromuserdevice.hh	/^    uint32_t _headroom;$/;"	m	class:FromUserDevice
_headroom	elements/linuxmodule/polldevice.hh	/^    unsigned _headroom;$/;"	m	class:PollDevice
_headroom	elements/standard/timedsource.hh	/^    uint32_t _headroom;$/;"	m	class:TimedSource
_headroom	elements/userlevel/fromdevice.hh	/^    unsigned _headroom;$/;"	m	class:FromDevice
_headroom	elements/userlevel/fromhost.hh	/^    unsigned _headroom;$/;"	m	class:FromHost
_headroom	elements/userlevel/ipflowrawsockets.hh	/^    unsigned _headroom;$/;"	m	class:IPFlowRawSockets
_headroom	elements/userlevel/kerneltun.hh	/^    unsigned _headroom;$/;"	m	class:KernelTun
_headroom	elements/userlevel/rawsocket.hh	/^  unsigned _headroom;           \/\/ header length to set aside in the packet$/;"	m	class:RawSocket
_headroom	elements/userlevel/socket.hh	/^  unsigned _headroom;$/;"	m	class:Socket
_heap	elements/ip/ipfragmentmap.hh	/^    Vector<Entry *> _heap;$/;"	m	class:IPFragmentMap
_heap	elements/ip/iprewriterbase.hh	/^    IPRewriterHeap *_heap;$/;"	m	class:IPRewriterBase
_heaps	elements/ip/iprewriterbase.hh	/^    Vector<IPRewriterFlow *> _heaps[2];$/;"	m	class:IPRewriterHeap
_height	apps/clicky/src/rectangle.hh	/^    double _height;$/;"	m	struct:rectangle
_hello_time	elements/etherswitch/bridgemessage.hh	/^  uint32_t _hello_time;	\/\/ in seconds$/;"	m	class:BridgeMessage
_hello_timer	elements/etherswitch/spantree.hh	/^  Timer _hello_timer;$/;"	m	class:EtherSpanTree
_hello_timer	elements/grid/dsdvroutetable.hh	/^  Timer _hello_timer;$/;"	m	class:DSDVRouteTable
_hello_timer	elements/grid/gridroutetable.hh	/^  Timer _hello_timer;$/;"	m	class:GridRouteTable
_hello_timer	elements/grid/updateroutes.hh	/^  Timer _hello_timer;$/;"	m	class:UpdateGridRoutes
_helper	elements/ip/rangeiplookup.hh	/^    DirectIPLookup::Table _helper;$/;"	m	class:RangeIPLookup
_highlight	apps/clicky/src/dstyle.hh	/^    char _highlight;$/;"	m	class:clicky::dcss_selector
_highlight	apps/clicky/src/dwidget.hh	/^    uint8_t _highlight;$/;"	m	class:clicky::delt
_highlight	apps/clicky/src/wdiagram.hh	/^    std::list<delt *> _highlight[3];$/;"	m	class:clicky::wdiagram
_highlight_match	apps/clicky/src/dstyle.hh	/^    char _highlight_match;$/;"	m	class:clicky::dcss_selector
_highwater_length	elements/standard/simplequeue.hh	/^    int _highwater_length;$/;"	m	class:SimpleQueue
_hinfo	apps/ClickController/RouterTreeModel.java	/^	ControlSocket.HandlerInfo _hinfo;$/;"	f	class:RouterTreeModel.HandlerUserObject
_hinfo	apps/clicky/src/whandler.hh	/^    std::deque<hinfo> _hinfo;$/;"	m	struct:clicky::whandler
_history	elements/grid/ackretrysender.hh	/^  HistQ _history;$/;"	m	class:ACKRetrySender
_history	elements/grid/ackretrysender2.hh	/^  HistQ _history;$/;"	m	class:ACKRetrySender2
_history_length	elements/grid/ackretrysender.hh	/^  unsigned int _history_length;$/;"	m	class:ACKRetrySender
_history_length	elements/grid/ackretrysender2.hh	/^  unsigned int _history_length;$/;"	m	class:ACKRetrySender2
_hm	include/click/hashmap.hh	/^  const HashMap<K, V> *_hm;$/;"	m	class:_HashMap_const_iterator
_hm	include/click/hashmap.hh	/^  const HashMap<K, void *> *_hm;$/;"	m	class:_HashMap_const_iterator
_hname	apps/clicky/src/hvalues.hh	/^    String _hname;$/;"	m	class:clicky::handler_value
_holds	elements/linuxmodule/todevice.hh	/^    uint32_t _holds;$/;"	m	class:ToDevice
_honor_df	elements/ip/ipfragmenter.hh	/^  bool _honor_df;$/;"	m	class:IPFragmenter
_hook	include/click/task.hh	/^    TaskCallback _hook;$/;"	m	class:Task
_hook	include/click/timer.hh	/^    } _hook;$/;"	m	class:Timer	typeref:union:Timer::__anon459
_hops	elements/grid/lrhello.hh	/^  int _hops;$/;"	m	class:SendGridLRHello
_horiz_adjust	apps/clicky/src/wdiagram.hh	/^    GtkAdjustment *_horiz_adjust;$/;"	m	class:clicky::wdiagram
_host	apps/ClickController/ControlSocket.java	/^    private InetAddress _host;$/;"	f	class:ControlSocket	file:
_host	apps/csclient/csclient.hh	/^  unsigned int _host;$/;"	m	class:ControlSocketClient
_hostname	apps/ClickController/NewConnectionDialog.java	/^    private JTextField _hostname;$/;"	f	class:NewConnectionDialog	file:
_hosts	elements/wifi/linktable.hh	/^  HTable _hosts;$/;"	m	class:LinkTable
_hotswap_router	include/click/router.hh	/^    Router* _hotswap_router;$/;"	m	class:Router
_hparam	apps/clicky/src/hvalues.hh	/^    String _hparam;$/;"	m	class:clicky::handler_value
_hpref_actions	apps/clicky/src/whandler.hh	/^    GtkButtonBox *_hpref_actions;$/;"	m	struct:clicky::whandler
_hs	elements/userlevel/progressbar.hh	/^    Vector<const Handler*> _hs;$/;"	m	class:ProgressBar
_htable	apps/clicky/src/dstyle.hh	/^    HashTable<String, ref_ptr<dhandler_style> > _htable;$/;"	m	class:clicky::dcss_set
_hv	apps/clicky/src/hvalues.hh	/^    HashTable<handler_value> _hv;$/;"	m	struct:clicky::handler_values
_hvalue	apps/clicky/src/ddecor.hh	/^    double _hvalue;$/;"	m	class:clicky::dfullness_decor
_hvalue	apps/clicky/src/hvalues.hh	/^    String _hvalue;$/;"	m	class:clicky::handler_value
_hvalues	apps/clicky/src/crouter.hh	/^    handler_values _hvalues;$/;"	m	class:clicky::crouter
_hw_desc	elements/local/OpenFlow/datapath.hh	/^	char _hw_desc[DESC_STR_LEN];$/;"	m	class:Datapath
_i	include/click/hashmap.hh	/^    inherited _i;$/;"	m	class:_HashMap_const_iterator
_iANS_Attribute_ID	drivers/e1000-4.x/src/base_comm.h	/^typedef enum _iANS_Attribute_ID$/;"	g
_iANSsupport_t	drivers/e1000-4.x/src/ans.h	/^typedef struct _iANSsupport_t{$/;"	s
_iai	elements/ip6/addresstranslator.hh	/^    IP6Address _iai;$/;"	m	struct:AddressTranslator::EntryMap
_ialign	tools/click-align/click-align.cc	/^    Vector<Alignment> _ialign;$/;"	m	struct:RouterAlign	file:
_icmp_code	elements/icmp/icmpipencap.hh	/^    uint8_t _icmp_code;$/;"	m	class:ICMPIPEncap
_icmp_id	elements/icmp/icmpipencap.hh	/^    uint16_t _icmp_id;$/;"	m	class:ICMPIPEncap
_icmp_id	elements/icmp/icmppingencap.hh	/^    uint16_t _icmp_id;$/;"	m	class:ICMPPingEncap
_icmp_id	elements/icmp/icmpsendpings.hh	/^    uint16_t _icmp_id;$/;"	m	class:ICMPPingSource
_icmp_type	elements/icmp/icmpipencap.hh	/^    uint8_t _icmp_type;$/;"	m	class:ICMPIPEncap
_icount	tools/click-align/click-align.cc	/^    Vector<int> _icount;$/;"	m	struct:RouterAlign	file:
_id	elements/grid/dsrroutetable.hh	/^    unsigned int _id;$/;"	m	class:DSRRouteTable::ForwardedReqKey
_id	elements/grid/gridproxy.hh	/^  uatomic32_t _id;$/;"	m	class:GridProxy
_id	elements/ip/ipencap.hh	/^  atomic_uint32_t _id;$/;"	m	class:IPEncap
_id	elements/ipsec/ipsecencap.hh	/^  atomic_uint32_t _id;$/;"	m	class:IPsecEncap
_id	elements/local/OpenFlow/datapath.hh	/^	uint64_t  _id;$/;"	m	class:Datapath
_id	elements/tcpudp/dynudpipencap.hh	/^  atomic_uint32_t _id;$/;"	m	class:DynamicUDPIPEncap
_id	elements/tcpudp/udpipencap.hh	/^    atomic_uint32_t _id;$/;"	m	class:UDPIPEncap
_id	elements/test/schedordertest.hh	/^    int _id;$/;"	m	class:SchedOrderTest
_id	include/click/routerthread.hh	/^    int _id;$/;"	m	class:RouterThread
_id	tools/click2xml/xml2click.hh	/^    String _id;$/;"	m	struct:CxConfig
_idles	elements/bsdmodule/anydevice.hh	/^    int _idles;$/;"	m	class:AnyDevice
_idles	elements/bsdmodule/anydevice.hh	/^    int _idles;$/;"	m	class:AnyTaskDevice
_idles	elements/linuxmodule/anydevice.hh	/^    int _idles;$/;"	m	class:AnyTaskDevice
_ifid	elements/wifi/wirelessinfo.hh	/^    int _ifid;$/;"	m	class:WirelessInfo
_ifname	elements/grid/airoinfo.hh	/^  String _ifname;$/;"	m	class:AiroInfo
_ifname	elements/ns/fromsimdevice.hh	/^  String _ifname;$/;"	m	class:FromSimDevice
_ifname	elements/ns/tosimdevice.hh	/^    String _ifname;$/;"	m	class:ToSimDevice
_ifname	elements/userlevel/fromdevice.hh	/^    String _ifname;$/;"	m	class:FromDevice
_ifname	elements/userlevel/todevice.hh	/^    String _ifname;$/;"	m	class:ToDevice
_ifr	elements/grid/airoinfo.hh	/^  struct ifreq _ifr;$/;"	m	class:AiroInfo	typeref:struct:AiroInfo::ifreq
_ifr	elements/grid/airoinfo.hh	/^  struct iwreq _ifr;$/;"	m	class:AiroInfo	typeref:struct:AiroInfo::iwreq
_ifr2	elements/grid/airoinfo.hh	/^  struct ifreq _ifr2;$/;"	m	class:AiroInfo	typeref:struct:AiroInfo::ifreq
_ignore	elements/ipsec/aes.hh	/^   int _ignore;$/;"	m	class:Aes
_ignore	elements/ipsec/des.hh	/^  int _ignore;$/;"	m	class:Des
_ignore	elements/standard/averagecounter.hh	/^    uint32_t _ignore;$/;"	m	class:AverageCounter
_ignore_invalid_routes	elements/grid/dsdvroutetable.hh	/^  bool _ignore_invalid_routes;$/;"	m	class:DSDVRouteTable
_ignore_line_directives	tools/lib/lexert.hh	/^    bool _ignore_line_directives;$/;"	m	class:LexerT
_ignore_q_errs	elements/userlevel/kerneltun.hh	/^    bool _ignore_q_errs;$/;"	m	class:KernelTun
_important_messages	tools/click-check/click-check.cc	/^    bool _important_messages;$/;"	m	struct:__anon540::CheckErrorHandler	file:
_in	apps/ClickController/ControlSocket.java	/^    private BufferedReader _in;$/;"	f	class:ControlSocket	file:
_in_header	tools/click-devirtualize/cxxclass.hh	/^  bool _in_header;$/;"	m	class:CxxFunction
_in_map	elements/ip6/addresstranslator.hh	/^  Map6 _in_map;$/;"	m	class:AddressTranslator
_incr	elements/bsdmodule/fastudpsrc.hh	/^  unsigned short _incr;$/;"	m	class:FastUDPSource
_incr	elements/linuxmodule/fastudpsrc.hh	/^  unsigned short _incr;$/;"	m	class:FastUDPSource
_incr	elements/linuxmodule/fastudpsrcip6.hh	/^  unsigned short _incr;$/;"	m	class:FastUDPSourceIP6
_increasing	elements/threads/balancedthreadsched.hh	/^    bool _increasing;$/;"	m	class:BalancedThreadSched
_incremental	elements/analysis/aggregateip.hh	/^    bool _incremental;$/;"	m	class:AggregateIP
_incremental	elements/analysis/aggregatepaint.hh	/^    bool _incremental;$/;"	m	class:AggregatePaint
_indent	include/click/error.hh	/^    String _indent;$/;"	m	class:ContextErrorHandler
_index	include/click/ip6table.hh	/^    int _index;$/;"	m	struct:IP6Table::Entry
_index	tools/lib/elementmap.hh	/^    int _index;$/;"	m	class:ElementMap::TraitsIterator
_infoPanel	apps/ClickController/ClickController.java	/^    private JPanel _infoPanel;$/;"	f	class:ClickController	file:
_init	apps/csclient/csclient.hh	/^  bool _init;$/;"	m	class:ControlSocketClient
_init	elements/grid/dsdvroutetable.hh	/^    bool                _init;$/;"	m	class:DSDVRouteTable::RTEntry
_init	elements/grid/gridroutetable.hh	/^    bool _init;$/;"	m	class:GridRouteTable::RTEntry
_init	elements/grid/updateroutes.hh	/^    bool _init;$/;"	m	class:UpdateGridRoutes::NbrEntry
_initiated_rreq_map	elements/grid/dsrroutetable.hh	/^  InitiatedReqMap _initiated_rreq_map;$/;"	m	class:DSRRouteTable
_inline_ports	include/click/element.hh	/^    Port _inline_ports[INLINE_PORTS];$/;"	m	class:Element
_input	elements/analysis/timesortedsched.hh	/^    input_s *_input;$/;"	m	class:TimeSortedSched
_input	elements/simple/simplepullswitch.hh	/^    int _input;$/;"	m	class:SimplePullSwitch
_input	elements/standard/staticpullswitch.hh	/^  int _input;$/;"	m	class:StaticPullSwitch
_input_specs	elements/ip/iprewriterbase.hh	/^    Vector<IPRewriterInput> _input_specs;$/;"	m	class:IPRewriterBase
_input_sup	elements/etherswitch/spantree.hh	/^  Suppressor* _input_sup;$/;"	m	class:EtherSpanTree
_inq	elements/bsdmodule/fromdevice.hh	/^    struct ifqueue *_inq;$/;"	m	class:FromDevice	typeref:struct:FromDevice::ifqueue
_inq	elements/bsdmodule/fromhost.hh	/^    struct ifqueue *_inq;$/;"	m	class:FromHost	typeref:struct:FromHost::ifqueue
_insn	elements/standard/classification.hh	/^    Vector<Insn> _insn;$/;"	m	class:Classification::Wordwise::Program
_insn_id	elements/standard/classification.hh	/^    Vector<int> _insn_id;$/;"	m	class:Classification::Wordwise::DominatorOptimizer
_insn_pos	elements/standard/script.hh	/^    int _insn_pos;$/;"	m	class:Script
_insns	elements/standard/script.hh	/^    Vector<int> _insns;$/;"	m	class:Script
_installed	include/click/nameinfo.hh	/^    NameInfo *_installed;$/;"	m	class:NameDB
_interval	elements/bsdmodule/fastudpsrc.hh	/^  unsigned int _interval;$/;"	m	class:FastUDPSource
_interval	elements/ethernet/etherpausesource.hh	/^    uint32_t _interval;$/;"	m	class:EtherPauseSource
_interval	elements/icmp/icmpsendpings.hh	/^    uint32_t _interval;$/;"	m	class:ICMPPingSource
_interval	elements/linuxmodule/fastudpsrc.hh	/^  unsigned int _interval;$/;"	m	class:FastUDPSource
_interval	elements/linuxmodule/fastudpsrcip6.hh	/^  unsigned int _interval;$/;"	m	class:FastUDPSourceIP6
_interval	elements/linuxmodule/threadmonitor.hh	/^    unsigned _interval;$/;"	m	class:ThreadMonitor
_interval	elements/standard/timedsink.hh	/^    Timestamp _interval;$/;"	m	class:TimedSink
_interval	elements/standard/timedsource.hh	/^    Timestamp _interval;$/;"	m	class:TimedSource
_interval	elements/standard/timedunqueue.hh	/^    unsigned _interval;$/;"	m	class:TimedUnqueue
_interval	elements/tcpudp/dynudpipencap.hh	/^  unsigned _interval;$/;"	m	class:DynamicUDPIPEncap
_interval	elements/threads/balancedthreadsched.hh	/^    int _interval;$/;"	m	class:BalancedThreadSched
_interval	elements/userlevel/progressbar.hh	/^    uint32_t _interval;$/;"	m	class:ProgressBar
_interval	elements/wifi/wirelessinfo.hh	/^  int _interval;$/;"	m	class:WirelessInfo
_interval_ms	elements/wifi/ap/proberesponder.hh	/^  int _interval_ms;$/;"	m	class:ProbeResponder
_ioffset	tools/click-align/click-align.cc	/^    Vector<int> _ioffset;$/;"	m	struct:RouterAlign	file:
_ip	elements/analysis/aggregatelen.hh	/^    bool _ip;$/;"	m	class:AggregateLength
_ip	elements/ethernet/arptable.hh	/^	IPAddress _ip;		\/\/ (40B) but probably still fine.$/;"	m	struct:ARPTable::ARPEntry
_ip	elements/grid/ackresponder2.hh	/^  IPAddress _ip;$/;"	m	class:ACKResponder2
_ip	elements/grid/ackretrysender2.hh	/^  IPAddress _ip;$/;"	m	class:ACKRetrySender2
_ip	elements/grid/dsdvroutetable.hh	/^  IPAddress _ip;$/;"	m	class:DSDVRouteTable
_ip	elements/grid/dsr.hh	/^  in_addr _ip;$/;"	m	struct:DSRHop
_ip	elements/grid/gridencap.hh	/^  IPAddress _ip;$/;"	m	class:GridEncap
_ip	elements/grid/gridprobehandler.hh	/^  IPAddress _ip;$/;"	m	class:GridProbeHandler
_ip	elements/grid/gridprobesender.hh	/^  IPAddress _ip;$/;"	m	class:GridProbeSender
_ip	elements/grid/gridproxy.hh	/^    IPAddress _ip;$/;"	m	class:GridProxy::DstInfo
_ip	elements/grid/gridroutetable.hh	/^  IPAddress _ip;$/;"	m	class:GridRouteTable
_ip	elements/grid/gridsrforwarder.hh	/^  IPAddress _ip;$/;"	m	class:GridSRForwarder
_ip	elements/grid/locqueryresponder.hh	/^  IPAddress _ip;$/;"	m	class:LocQueryResponder
_ip	elements/grid/lookuplocalgridroute2.hh	/^  IPAddress _ip;$/;"	m	class:LookupLocalGridRoute2
_ip	elements/ip/rfc2507c.hh	/^    click_ip _ip;$/;"	m	struct:RFC2507c::tcpip
_ip	elements/ip/rfc2507d.hh	/^    click_ip _ip;$/;"	m	struct:RFC2507d::tcpip
_ip	elements/ip/setipaddress.hh	/^    IPAddress _ip;$/;"	m	class:SetIPAddress
_ip	elements/ip/setrandipaddress.hh	/^  IPAddress _ip;$/;"	m	class:SetRandIPAddress
_ip	elements/wifi/linktable.hh	/^    IPAddress _ip;$/;"	m	class:LinkTable::HostInfo
_ip	elements/wifi/linktable.hh	/^  IPAddress _ip;$/;"	m	class:LinkTable
_ip1	elements/ethernet/arpfaker.hh	/^  IPAddress _ip1;$/;"	m	class:ARPFaker
_ip2	elements/ethernet/arpfaker.hh	/^  IPAddress _ip2;$/;"	m	class:ARPFaker
_ip6	elements/ip6/setip6address.hh	/^  IP6Address _ip6;$/;"	m	class:SetIP6Address
_ip_csum_delta	elements/ip/iprwmapping.hh	/^    uint16_t _ip_csum_delta;$/;"	m	class:IPRewriterFlow
_ip_id	elements/icmp/icmpipencap.hh	/^    uint16_t _ip_id;$/;"	m	class:ICMPIPEncap
_ip_id	elements/icmp/icmppingencap.hh	/^    uint16_t _ip_id;$/;"	m	class:ICMPPingEncap
_ip_ids	elements/analysis/toipflowdumps.hh	/^	uint16_t *_ip_ids;$/;"	m	class:ToIPFlowDumps::Flow
_ip_map	elements/grid/dsrarptable.hh	/^  IPMap _ip_map;$/;"	m	class:DSRArpTable
_ip_p	elements/analysis/toipflowdumps.hh	/^	int _ip_p;$/;"	m	class:ToIPFlowDumps::Flow
_ip_p	elements/ip/iprwmapping.hh	/^    uint8_t _ip_p;$/;"	m	class:IPRewriterFlow
_ip_p	elements/userlevel/ipflowrawsockets.hh	/^	int _ip_p;$/;"	m	class:IPFlowRawSockets::Flow
_ipaddr	elements/grid/lookupgeogridroute.hh	/^  IPAddress _ipaddr;$/;"	m	class:LookupGeographicGridRoute
_ipaddr	elements/grid/lookuplocalgridroute.hh	/^  IPAddress _ipaddr;$/;"	m	class:LookupLocalGridRoute
_ipaddr	elements/grid/updateroutes.hh	/^  IPAddress _ipaddr;$/;"	m	class:UpdateGridRoutes
_iph	elements/grid/gridproxy.hh	/^  click_ip _iph;$/;"	m	class:GridProxy
_iph	elements/ip/ipencap.hh	/^  click_ip _iph;$/;"	m	class:IPEncap
_iph	elements/ipsec/ipsecencap.hh	/^  click_ip _iph;$/;"	m	class:IPsecEncap
_iph6	elements/ip6/ip6encap.hh	/^  click_ip6 _iph6;$/;"	m	class:IP6Encap
_ipi	elements/ip6/addresstranslator.hh	/^    unsigned short _ipi;$/;"	m	struct:AddressTranslator::EntryMap
_iptables_command	elements/userlevel/kernelfilter.hh	/^    String _iptables_command;$/;"	m	class:KernelFilter
_is	elements/ip/rripmapper.hh	/^    Vector<IPRewriterInput> _is;$/;"	m	class:RoundRobinIPMapper
_is	elements/ip/siphmapper.hh	/^    Vector<IPRewriterInput> _is;$/;"	m	class:SourceIPHashMapper
_is_binding_to_cd	elements/local/FlowNet/shaper/PFShapeFW.hh	/^        bool _is_binding_to_cd;$/;"	m	class:PFShapeFW
_is_gateway	elements/grid/gridgatewayinfo.hh	/^  bool _is_gateway;$/;"	m	class:GridGatewayInfo
_is_napt	elements/ip/iprwpattern.hh	/^    bool _is_napt;$/;"	m	class:IPRewriterPattern
_is_strip	tools/click-align/alignclass.hh	/^    bool _is_strip;$/;"	m	class:StripAlignClass
_is_synonym	tools/click2xml/xml2click.hh	/^    bool _is_synonym;$/;"	m	struct:CxConfig
_isoutput	lib/lexer.cc	/^  bool _isoutput;$/;"	m	class:Lexer::TunnelEnd	file:
_item	elements/local/FlowNet/papmo/PaPMo.hh	/^	void **_item;$/;"	m	struct:lfc_buffer
_item_size	elements/local/FlowNet/papmo/PaPMo.hh	/^	int _item_size;$/;"	m	struct:lfc_buffer
_iterations_done	elements/grid/linktester.hh	/^  unsigned int _iterations_done;$/;"	m	class:LinkTester
_iters_per_os	include/click/routerthread.hh	/^    unsigned _iters_per_os;$/;"	m	class:RouterThread
_jitter	elements/grid/dsdvroutetable.hh	/^  unsigned int _jitter; \/\/ msecs$/;"	m	class:DSDVRouteTable
_jitter	elements/grid/gridroutetable.hh	/^  int _jitter;$/;"	m	class:GridRouteTable
_jitter	elements/grid/hello.hh	/^  int _jitter;$/;"	m	class:SendGridHello
_jitter	elements/grid/lrhello.hh	/^  int _jitter;$/;"	m	class:SendGridLRHello
_jitter	elements/grid/updateroutes.hh	/^  int _jitter;$/;"	m	class:UpdateGridRoutes
_kc_alloc_etherdev	drivers/e1000-4.x/src/kcompat.c	/^struct net_device * _kc_alloc_etherdev(int sizeof_priv)$/;"	f
_kc_alloc_etherdev	drivers/e1000-5.x/src/kcompat.c	/^struct net_device * _kc_alloc_etherdev(int sizeof_priv)$/;"	f
_kc_alloc_etherdev	drivers/e1000-7.x/src/kcompat.c	/^_kc_alloc_etherdev(int sizeof_priv)$/;"	f
_kc_dma_addr_t	drivers/e1000-4.x/src/kcompat.h	/^typedef u64 _kc_dma_addr_t;$/;"	t
_kc_ethtool_coalesce	drivers/e1000-5.x/src/kcompat.h	/^struct _kc_ethtool_coalesce {$/;"	s
_kc_ethtool_coalesce	drivers/e1000-7.x/src/kcompat.h	/^struct _kc_ethtool_coalesce {$/;"	s
_kc_ethtool_op_get_link	drivers/e1000-5.x/src/kcompat_ethtool.c	/^uint32_t _kc_ethtool_op_get_link(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_link	drivers/e1000-7.x/src/kcompat_ethtool.c	/^uint32_t _kc_ethtool_op_get_link(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_sg	drivers/e1000-5.x/src/kcompat_ethtool.c	/^uint32_t _kc_ethtool_op_get_sg(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_sg	drivers/e1000-7.x/src/kcompat_ethtool.c	/^uint32_t _kc_ethtool_op_get_sg(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_tso	drivers/e1000-5.x/src/kcompat_ethtool.c	/^uint32_t _kc_ethtool_op_get_tso(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_tso	drivers/e1000-7.x/src/kcompat_ethtool.c	/^uint32_t _kc_ethtool_op_get_tso(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_tx_csum	drivers/e1000-5.x/src/kcompat_ethtool.c	/^uint32_t _kc_ethtool_op_get_tx_csum(struct net_device *dev)$/;"	f
_kc_ethtool_op_get_tx_csum	drivers/e1000-7.x/src/kcompat_ethtool.c	/^uint32_t _kc_ethtool_op_get_tx_csum(struct net_device *dev)$/;"	f
_kc_ethtool_op_set_sg	drivers/e1000-5.x/src/kcompat_ethtool.c	/^int _kc_ethtool_op_set_sg(struct net_device *dev, uint32_t data)$/;"	f
_kc_ethtool_op_set_sg	drivers/e1000-7.x/src/kcompat_ethtool.c	/^int _kc_ethtool_op_set_sg(struct net_device *dev, uint32_t data)$/;"	f
_kc_ethtool_op_set_tso	drivers/e1000-5.x/src/kcompat_ethtool.c	/^int _kc_ethtool_op_set_tso(struct net_device *dev, uint32_t data)$/;"	f
_kc_ethtool_op_set_tso	drivers/e1000-7.x/src/kcompat_ethtool.c	/^int _kc_ethtool_op_set_tso(struct net_device *dev, uint32_t data)$/;"	f
_kc_ethtool_op_set_tx_csum	drivers/e1000-5.x/src/kcompat_ethtool.c	/^int _kc_ethtool_op_set_tx_csum(struct net_device *dev, uint32_t data)$/;"	f
_kc_ethtool_op_set_tx_csum	drivers/e1000-7.x/src/kcompat_ethtool.c	/^int _kc_ethtool_op_set_tx_csum(struct net_device *dev, uint32_t data)$/;"	f
_kc_ethtool_ops	drivers/e1000-5.x/src/kcompat_ethtool.c	/^struct _kc_ethtool_ops {$/;"	s	file:
_kc_ethtool_ops	drivers/e1000-7.x/src/kcompat_ethtool.c	/^struct _kc_ethtool_ops {$/;"	s	file:
_kc_ethtool_pauseparam	drivers/e1000-5.x/src/kcompat.h	/^struct _kc_ethtool_pauseparam {$/;"	s
_kc_ethtool_pauseparam	drivers/e1000-7.x/src/kcompat.h	/^struct _kc_ethtool_pauseparam {$/;"	s
_kc_ethtool_regs	drivers/e1000-5.x/src/kcompat.h	/^struct _kc_ethtool_regs {$/;"	s
_kc_ethtool_regs	drivers/e1000-7.x/src/kcompat.h	/^struct _kc_ethtool_regs {$/;"	s
_kc_ethtool_ringparam	drivers/e1000-5.x/src/kcompat.h	/^struct _kc_ethtool_ringparam {$/;"	s
_kc_ethtool_ringparam	drivers/e1000-7.x/src/kcompat.h	/^struct _kc_ethtool_ringparam {$/;"	s
_kc_generic_mii_ioctl	drivers/e1000-7.x/src/kcompat_ethtool.c	/^int _kc_generic_mii_ioctl(struct mii_if_info *mii_if,$/;"	f
_kc_if_mii	drivers/e1000-5.x/src/kcompat.h	/^static inline struct mii_ioctl_data *_kc_if_mii(struct ifreq *rq)$/;"	f
_kc_if_mii	drivers/e1000-7.x/src/kcompat.h	/^static inline struct mii_ioctl_data *_kc_if_mii(struct ifreq *rq)$/;"	f
_kc_is_valid_ether_addr	drivers/e1000-4.x/src/kcompat.c	/^int _kc_is_valid_ether_addr(u8 *addr)$/;"	f
_kc_is_valid_ether_addr	drivers/e1000-5.x/src/kcompat.c	/^int _kc_is_valid_ether_addr(u8 *addr)$/;"	f
_kc_is_valid_ether_addr	drivers/e1000-7.x/src/kcompat.c	/^_kc_is_valid_ether_addr(u8 *addr)$/;"	f
_kc_jiffies_to_msecs	drivers/e1000-7.x/src/kcompat.h	/^static inline unsigned int _kc_jiffies_to_msecs(const unsigned long j)$/;"	f
_kc_kzalloc	drivers/e1000-7.x/src/kcompat.c	/^void *_kc_kzalloc(size_t size, int flags)$/;"	f
_kc_mii_check_link	drivers/e1000-7.x/src/kcompat_ethtool.c	/^void _kc_mii_check_link (struct mii_if_info *mii)$/;"	f
_kc_mii_ethtool_gset	drivers/e1000-7.x/src/kcompat_ethtool.c	/^int _kc_mii_ethtool_gset(struct mii_if_info *mii, struct ethtool_cmd *ecmd)$/;"	f
_kc_mii_ethtool_sset	drivers/e1000-7.x/src/kcompat_ethtool.c	/^int _kc_mii_ethtool_sset(struct mii_if_info *mii, struct ethtool_cmd *ecmd)$/;"	f
_kc_mii_if_info	drivers/e1000-7.x/src/kcompat_ethtool.c	/^struct _kc_mii_if_info {$/;"	s	file:
_kc_mii_link_ok	drivers/e1000-7.x/src/kcompat_ethtool.c	/^int _kc_mii_link_ok (struct mii_if_info *mii)$/;"	f
_kc_mii_nway_restart	drivers/e1000-7.x/src/kcompat_ethtool.c	/^int _kc_mii_nway_restart (struct mii_if_info *mii)$/;"	f
_kc_msecs_to_jiffies	drivers/e1000-7.x/src/kcompat.h	/^static inline unsigned long _kc_msecs_to_jiffies(const unsigned int m)$/;"	f
_kc_msleep_interruptible	drivers/e1000-7.x/src/kcompat.h	/^static unsigned inline long _kc_msleep_interruptible(unsigned int msecs)$/;"	f
_kc_net_dev_ext	drivers/e1000-4.x/src/kcompat.c	/^struct _kc_net_dev_ext {$/;"	s	file:
_kc_net_dev_ext	drivers/e1000-7.x/src/kcompat_ethtool.c	/^struct _kc_net_dev_ext {$/;"	s	file:
_kc_netdev_alloc_skb	drivers/e1000-7.x/src/kcompat.c	/^struct sk_buff *_kc_netdev_alloc_skb(struct net_device *dev,$/;"	f
_kc_netif_carrier_off	drivers/e1000-4.x/src/kcompat.c	/^void _kc_netif_carrier_off(struct net_device *dev)$/;"	f
_kc_netif_carrier_ok	drivers/e1000-4.x/src/kcompat.c	/^int _kc_netif_carrier_ok(struct net_device *dev)$/;"	f
_kc_netif_carrier_on	drivers/e1000-4.x/src/kcompat.c	/^void _kc_netif_carrier_on(struct net_device *dev)$/;"	f
_kc_netif_device_attach	drivers/e1000-4.x/src/kcompat.c	/^void _kc_netif_device_attach(struct net_device *dev)$/;"	f
_kc_netif_device_detach	drivers/e1000-4.x/src/kcompat.c	/^void _kc_netif_device_detach(struct net_device *dev)$/;"	f
_kc_netif_msg_init	drivers/e1000-7.x/src/kcompat.h	/^static inline u32 _kc_netif_msg_init(int debug_value, int default_msg_enable_bits)$/;"	f
_kc_netif_poll_disable	drivers/e1000-5.x/src/kcompat.h	/^static inline void _kc_netif_poll_disable(struct net_device *dev)$/;"	f
_kc_netif_poll_disable	drivers/e1000-7.x/src/kcompat.h	/^static inline void _kc_netif_poll_disable(struct net_device *netdev)$/;"	f
_kc_netif_poll_enable	drivers/e1000-5.x/src/kcompat.h	/^static inline void _kc_netif_poll_enable(struct net_device *dev)$/;"	f
_kc_netif_poll_enable	drivers/e1000-7.x/src/kcompat.h	/^static inline void _kc_netif_poll_enable(struct net_device *netdev)$/;"	f
_kc_pci_alloc_consistent	drivers/e1000-4.x/src/kcompat.c	/^void * _kc_pci_alloc_consistent(struct pci_dev *dev, size_t size, u64 *dma_handle)$/;"	f
_kc_pci_dev_driver	drivers/e1000-4.x/src/kcompat.c	/^struct pci_driver *_kc_pci_dev_driver(struct pci_dev *dev)$/;"	f
_kc_pci_dev_ext	drivers/e1000-4.x/src/kcompat.c	/^struct _kc_pci_dev_ext {$/;"	s	file:
_kc_pci_dev_ext	drivers/e1000-7.x/src/kcompat_ethtool.c	/^struct _kc_pci_dev_ext {$/;"	s	file:
_kc_pci_device_id	drivers/e1000-4.x/src/kcompat.h	/^struct _kc_pci_device_id {$/;"	s
_kc_pci_dma_mapping_error	drivers/e1000-7.x/src/kcompat.h	/^static inline int _kc_pci_dma_mapping_error(dma_addr_t dma_addr)$/;"	f
_kc_pci_dma_sync_single	drivers/e1000-4.x/src/kcompat.c	/^void _kc_pci_dma_sync_single(struct pci_dev *dev, u64 dma_addr, size_t size, int direction) { return; }$/;"	f
_kc_pci_driver	drivers/e1000-4.x/src/kcompat.h	/^struct _kc_pci_driver {$/;"	s
_kc_pci_enable_device	drivers/e1000-4.x/src/kcompat.c	/^int _kc_pci_enable_device(struct pci_dev *dev) { return 0; }$/;"	f
_kc_pci_enable_wake	drivers/e1000-4.x/src/kcompat.c	/^int _kc_pci_enable_wake(struct pci_dev *pdev, u32 state, int enable)$/;"	f
_kc_pci_enable_wake	drivers/e1000-5.x/src/kcompat.c	/^int _kc_pci_enable_wake(struct pci_dev *pdev, u32 state, int enable)$/;"	f
_kc_pci_enable_wake	drivers/e1000-7.x/src/kcompat.c	/^_kc_pci_enable_wake(struct pci_dev *pdev, u32 state, int enable)$/;"	f
_kc_pci_free_consistent	drivers/e1000-4.x/src/kcompat.c	/^void _kc_pci_free_consistent(struct pci_dev *dev, size_t size, void *addr, u64 dma_handle)$/;"	f
_kc_pci_get_drvdata	drivers/e1000-4.x/src/kcompat.c	/^void * _kc_pci_get_drvdata(struct pci_dev *dev)$/;"	f
_kc_pci_map_page	drivers/e1000-4.x/src/kcompat.c	/^u64 _kc_pci_map_page(struct pci_dev *dev, struct page *page, unsigned long offset, size_t size, int direction)$/;"	f
_kc_pci_map_page	drivers/e1000-5.x/src/kcompat.c	/^u64 _kc_pci_map_page(struct pci_dev *dev, struct page *page, unsigned long offset, size_t size, int direction)$/;"	f
_kc_pci_map_page	drivers/e1000-7.x/src/kcompat.c	/^_kc_pci_map_page(struct pci_dev *dev, struct page *page, unsigned long offset,$/;"	f
_kc_pci_map_single	drivers/e1000-4.x/src/kcompat.c	/^u64 _kc_pci_map_single(struct pci_dev *dev, void *addr, size_t size, int direction)$/;"	f
_kc_pci_module_init	drivers/e1000-4.x/src/kcompat.c	/^int _kc_pci_module_init(struct pci_driver *drv)$/;"	f
_kc_pci_release_regions	drivers/e1000-4.x/src/kcompat.c	/^void _kc_pci_release_regions(struct pci_dev *dev)$/;"	f
_kc_pci_release_regions	drivers/e1000-5.x/src/kcompat.c	/^void _kc_pci_release_regions(struct pci_dev *dev)$/;"	f
_kc_pci_release_regions	drivers/e1000-7.x/src/kcompat.c	/^_kc_pci_release_regions(struct pci_dev *dev)$/;"	f
_kc_pci_request_regions	drivers/e1000-4.x/src/kcompat.c	/^int _kc_pci_request_regions(struct pci_dev *dev, char *res_name)$/;"	f
_kc_pci_request_regions	drivers/e1000-5.x/src/kcompat.c	/^int _kc_pci_request_regions(struct pci_dev *dev, char *res_name)$/;"	f
_kc_pci_request_regions	drivers/e1000-7.x/src/kcompat.c	/^_kc_pci_request_regions(struct pci_dev *dev, char *res_name)$/;"	f
_kc_pci_resource_len	drivers/e1000-4.x/src/kcompat.c	/^unsigned long _kc_pci_resource_len(struct pci_dev *dev, int bar)$/;"	f
_kc_pci_resource_start	drivers/e1000-4.x/src/kcompat.c	/^int _kc_pci_resource_start(struct pci_dev *dev, int bar)$/;"	f
_kc_pci_restore_state	drivers/e1000-4.x/src/kcompat.c	/^int _kc_pci_restore_state(struct pci_dev *pdev, u32 *buffer)$/;"	f
_kc_pci_restore_state	drivers/e1000-5.x/src/kcompat.c	/^int _kc_pci_restore_state(struct pci_dev *pdev, u32 *buffer)$/;"	f
_kc_pci_restore_state	drivers/e1000-7.x/src/kcompat.c	/^_kc_pci_restore_state(struct pci_dev *pdev, u32 *buffer)$/;"	f
_kc_pci_save_state	drivers/e1000-4.x/src/kcompat.c	/^int _kc_pci_save_state(struct pci_dev *dev, u32 *buffer)$/;"	f
_kc_pci_save_state	drivers/e1000-5.x/src/kcompat.c	/^int _kc_pci_save_state(struct pci_dev *dev, u32 *buffer)$/;"	f
_kc_pci_save_state	drivers/e1000-7.x/src/kcompat.c	/^_kc_pci_save_state(struct pci_dev *dev, u32 *buffer)$/;"	f
_kc_pci_set_dma_mask	drivers/e1000-4.x/src/kcompat.c	/^int _kc_pci_set_dma_mask(struct pci_dev *dev, dma_addr_t mask) { return 0; }$/;"	f
_kc_pci_set_dma_mask	drivers/e1000-4.x/src/kcompat.c	/^int _kc_pci_set_dma_mask(struct pci_dev *dev, dma_addr_t mask)$/;"	f
_kc_pci_set_dma_mask	drivers/e1000-5.x/src/kcompat.c	/^int _kc_pci_set_dma_mask(struct pci_dev *dev, dma_addr_t mask)$/;"	f
_kc_pci_set_dma_mask	drivers/e1000-7.x/src/kcompat.c	/^_kc_pci_set_dma_mask(struct pci_dev *dev, dma_addr_t mask)$/;"	f
_kc_pci_set_drvdata	drivers/e1000-4.x/src/kcompat.c	/^void _kc_pci_set_drvdata(struct pci_dev *dev, void *data)$/;"	f
_kc_pci_set_power_state	drivers/e1000-4.x/src/kcompat.c	/^int _kc_pci_set_power_state(struct pci_dev *dev, int state)$/;"	f
_kc_pci_set_power_state	drivers/e1000-5.x/src/kcompat.c	/^int _kc_pci_set_power_state(struct pci_dev *dev, int state)$/;"	f
_kc_pci_set_power_state	drivers/e1000-7.x/src/kcompat.c	/^_kc_pci_set_power_state(struct pci_dev *dev, int state)$/;"	f
_kc_pci_unmap_page	drivers/e1000-4.x/src/kcompat.c	/^void _kc_pci_unmap_page(struct pci_dev *dev, u64 dma_addr, size_t size, int direction)$/;"	f
_kc_pci_unmap_page	drivers/e1000-5.x/src/kcompat.c	/^void _kc_pci_unmap_page(struct pci_dev *dev, u64 dma_addr, size_t size, int direction)$/;"	f
_kc_pci_unmap_page	drivers/e1000-7.x/src/kcompat.c	/^_kc_pci_unmap_page(struct pci_dev *dev, u64 dma_addr, size_t size,$/;"	f
_kc_pci_unmap_single	drivers/e1000-4.x/src/kcompat.c	/^void _kc_pci_unmap_single(struct pci_dev *dev, u64 dma_addr, size_t size, int direction) { return; }$/;"	f
_kc_pci_unregister_driver	drivers/e1000-4.x/src/kcompat.c	/^void _kc_pci_unregister_driver(struct pci_driver *drv)$/;"	f
_kc_request_irq	drivers/e1000-7.x/src/kcompat.h	/^static inline irqreturn_t _kc_request_irq(unsigned int irq, new_handler_t handler, unsigned long flags, const char *devname, void *dev_id)$/;"	f
_kc_skb_fill_page_desc	drivers/e1000-7.x/src/kcompat.c	/^void _kc_skb_fill_page_desc(struct sk_buff *skb, int i, struct page *page, int off, int size)$/;"	f
_kc_skb_is_gso	drivers/e1000-7.x/src/kcompat.h	/^static inline int _kc_skb_is_gso(const struct sk_buff *skb)$/;"	f
_kc_synchronize_irq	drivers/e1000-5.x/src/kcompat.h	/^static inline void _kc_synchronize_irq() { synchronize_irq(); }$/;"	f
_kc_synchronize_irq	drivers/e1000-7.x/src/kcompat.h	/^static inline void _kc_synchronize_irq() { synchronize_irq(); }$/;"	f
_key	elements/ipsec/aes.hh	/^   AES_KEY _key;$/;"	m	class:Aes
_key	elements/test/hashtabletest.cc	/^    int _key;$/;"	m	struct:MyHashContainerEntry	file:
_key	elements/wifi/wepdecap.hh	/^  String _key;$/;"	m	class:WepDecap
_key	elements/wifi/wepencap.hh	/^  String _key;$/;"	m	class:WepEncap
_keyid	elements/wifi/wepdecap.hh	/^  int _keyid;$/;"	m	class:WepDecap
_keyid	elements/wifi/wepencap.hh	/^  int _keyid;$/;"	m	class:WepEncap
_keyword_tag	apps/clicky/src/wmain.cc	/^    GtkTextTag *_keyword_tag;$/;"	m	class:clicky::ClickyLexerTInfo	file:
_kill_thresh	elements/aqm/red.hh	/^    unsigned _kill_thresh;$/;"	m	class:RED
_kills	elements/analysis/aggregatefirst.hh	/^    uint32_t **_kills[NPLANE];$/;"	m	class:AggregateFirst
_kind	elements/standard/randomerror.hh	/^  int _kind;			\/\/ 0 clear, 1 set, 2 flip$/;"	m	class:RandomBitErrors
_kind	include/click/lexer.hh	/^    int _kind;$/;"	m	class:Lexeme
_kind	tools/lib/lexert.hh	/^    int _kind;$/;"	m	class:Lexeme
_klasses	apps/clicky/src/dstyle.hh	/^    Vector<String> _klasses;$/;"	m	class:clicky::dcss_selector
_known	elements/ethernet/arptable.hh	/^	bool _known;$/;"	m	struct:ARPTable::ARPEntry
_known_length	elements/standard/classification.hh	/^    Vector<int> _known_length;$/;"	m	class:Classification::Wordwise::DominatorOptimizer
_kqueue	include/click/selectset.hh	/^    int _kqueue;$/;"	m	class:SelectSet
_ks	elements/ipsec/des.hh	/^  des_key_schedule _ks;$/;"	m	class:Des
_kwpos	include/click/args.hh	/^    Vector<int> _kwpos;$/;"	m	struct:Args
_l	elements/ip/poundradixiplookup.hh	/^    RadixIPLookup *_l;$/;"	m	class:PoundRadixIPLookup
_l	include/click/dequeue.hh	/^  T *_l;$/;"	m	class:DEQueue
_l	include/click/sync.hh	/^    } *_l;$/;"	m	class:ReadWriteLock	typeref:struct:ReadWriteLock::lock_t
_l	include/click/vector.hh	/^    T *_l;$/;"	m	class:Vector
_l	include/click/vector.hh	/^    void **_l;$/;"	m	class:Vector
_label	elements/ethernet/arpprint.hh	/^    String _label;$/;"	m	class:ARPPrint
_label	elements/etherswitch/debugbridge.hh	/^  String _label;$/;"	m	class:DebugBridge
_label	elements/grid/printgrid.hh	/^  String _label;$/;"	m	class:PrintGrid
_label	elements/ip/ipprint.hh	/^  String _label;$/;"	m	class:IPPrint
_label	elements/ip6/ip6print.hh	/^  String _label;$/;"	m	class:IP6Print
_label	elements/standard/print.hh	/^    String _label;$/;"	m	class:Print
_label	elements/userlevel/printold.hh	/^  String _label;$/;"	m	class:PrintOld
_label	elements/wifi/printtxfeedback.hh	/^  String _label;$/;"	m	class:PrintTXFeedback
_label	elements/wifi/printwifi.hh	/^  String _label;$/;"	m	class:PrintWifi
_lambda	elements/grid/linktester.hh	/^  double _lambda;              \/\/ exponential distribution parameter$/;"	m	class:LinkTester
_landmark	apps/clicky/src/crouter.hh	/^    String _landmark;$/;"	m	class:clicky::crouter
_landmark	include/click/error.hh	/^    String _landmark;$/;"	m	class:LandmarkErrorHandler
_landmark	lib/lexer.cc	/^  String _landmark;$/;"	m	class:Lexer::Compound	file:
_landmark	tools/click2xml/xml2click.hh	/^    String _landmark;$/;"	m	struct:CxConfig
_landmark	tools/lib/elementt.hh	/^    LandmarkT _landmark;$/;"	m	class:ConnectionT
_landmark	tools/lib/elementt.hh	/^    LandmarkT _landmark;$/;"	m	struct:ElementT
_landmark_pattern	include/click/fromfile.hh	/^    String _landmark_pattern;$/;"	m	class:FromFile
_last	elements/analysis/timefilter.hh	/^    Timestamp _last;$/;"	m	class:TimeFilter
_last	elements/analysis/timerange.hh	/^    Timestamp _last;$/;"	m	class:TimeRange
_last	elements/bsdmodule/fastudpsrc.hh	/^  click_jiffies_t _last;$/;"	m	class:FastUDPSource
_last	elements/ip/ipratemon.hh	/^  Stats *_first, *_last;	\/\/ first and last element in age list$/;"	m	class:IPRateMonitor
_last	elements/linuxmodule/cpuqueue.hh	/^  unsigned _last;$/;"	m	class:CPUQueue
_last	elements/linuxmodule/fasttcpflows.hh	/^  click_jiffies_t _last;$/;"	m	class:FastTCPFlows
_last	elements/linuxmodule/fastudpflows.hh	/^  click_jiffies_t _last;$/;"	m	class:FastUDPFlows
_last	elements/linuxmodule/fastudpsrc.hh	/^  click_jiffies_t _last;$/;"	m	class:FastUDPSource
_last	elements/linuxmodule/fastudpsrcip6.hh	/^  click_jiffies_t _last;$/;"	m	class:FastUDPSourceIP6
_last	elements/standard/averagecounter.hh	/^    atomic_uint32_t _last;$/;"	m	class:AverageCounter
_last	include/click/gaprate.hh	/^    Timestamp _last;$/;"	m	class:GapRate
_last_addr	elements/ip/lineariplookup.hh	/^    IPAddress _last_addr;$/;"	m	class:LinearIPLookup
_last_addr	elements/ip6/lookupip6route.hh	/^  IP6Address _last_addr;$/;"	m	class:LookupIP6Route
_last_addr2	elements/ip/lineariplookup.hh	/^    IPAddress _last_addr2;$/;"	m	class:LinearIPLookup
_last_addr2	elements/ip6/lookupip6route.hh	/^  IPAddress _last_addr2;$/;"	m	class:LookupIP6Route
_last_addr_1	elements/ip/lookupiproutemp.hh	/^    IPAddress _last_addr_1;$/;"	m	struct:LookupIPRouteMP::cache_entry
_last_addr_2	elements/ip/lookupiproutemp.hh	/^    IPAddress _last_addr_2;$/;"	m	struct:LookupIPRouteMP::cache_entry
_last_cursorno	apps/clicky/src/wdiagram.hh	/^    int _last_cursorno;$/;"	m	class:clicky::wdiagram
_last_element_type	include/click/lexer.hh	/^    int _last_element_type;$/;"	m	class:Lexer
_last_emission	elements/analysis/timesortedsched.hh	/^    Timestamp _last_emission;$/;"	m	class:TimeSortedSched
_last_entry	elements/ip/lineariplookup.hh	/^    int _last_entry;$/;"	m	class:LinearIPLookup
_last_entry2	elements/ip/lineariplookup.hh	/^    int _last_entry2;$/;"	m	class:LinearIPLookup
_last_flow	elements/linuxmodule/fasttcpflows.hh	/^  unsigned int _last_flow;$/;"	m	class:FastTCPFlows
_last_flow	elements/linuxmodule/fastudpflows.hh	/^  unsigned int _last_flow;$/;"	m	class:FastUDPFlows
_last_gw	elements/ip6/lookupip6route.hh	/^  IP6Address _last_gw;$/;"	m	class:LookupIP6Route
_last_gw2	elements/ip6/lookupip6route.hh	/^  IPAddress _last_gw2;$/;"	m	class:LookupIP6Route
_last_gw_1	elements/ip/lookupiproutemp.hh	/^    IPAddress _last_gw_1;$/;"	m	struct:LookupIPRouteMP::cache_entry
_last_gw_2	elements/ip/lookupiproutemp.hh	/^    IPAddress _last_gw_2;$/;"	m	struct:LookupIPRouteMP::cache_entry
_last_h	elements/analysis/timefilter.hh	/^    HandlerCall *_last_h;$/;"	m	class:TimeFilter
_last_jiffies	elements/aqm/pi.hh	/^    int _last_jiffies;$/;"	m	class:PI
_last_jiffies	elements/aqm/red.hh	/^    click_jiffies_t _last_jiffies;$/;"	m	class:RED
_last_landmarkid	include/click/router.hh	/^    uint32_t _last_landmarkid;$/;"	m	class:Router
_last_msg	elements/test/queuethreadtest.hh	/^    uint32_t _last_msg;$/;"	m	class:QueueThreadTest2
_last_output	elements/ip6/lookupip6route.hh	/^  int _last_output;$/;"	m	class:LookupIP6Route
_last_output2	elements/ip6/lookupip6route.hh	/^  int _last_output2;$/;"	m	class:LookupIP6Route
_last_output_1	elements/ip/lookupiproutemp.hh	/^    int _last_output_1;$/;"	m	struct:LookupIPRouteMP::cache_entry
_last_output_2	elements/ip/lookupiproutemp.hh	/^    int _last_output_2;$/;"	m	struct:LookupIPRouteMP::cache_entry
_last_pattern	elements/ip/rripmapper.hh	/^    int _last_pattern;$/;"	m	class:RoundRobinIPMapper
_last_periodic_update	elements/grid/dsdvroutetable.hh	/^  unsigned int _last_periodic_update;  \/\/ jiffies$/;"	m	class:DSDVRouteTable
_last_pos	elements/userlevel/progressbar.hh	/^    double _last_pos;$/;"	m	class:ProgressBar
_last_producer	linuxmodule/skbmgr.cc	/^  int _last_producer;$/;"	m	class:RecycledSkbPool	file:
_last_received	elements/wifi/rxstats.hh	/^    Timestamp _last_received;$/;"	m	class:RXStats::DstInfo
_last_record	elements/analysis/fromflandump.hh	/^    off_t _last_record;$/;"	m	class:FromFlanDump
_last_rx	elements/wifi/station/beaconscanner.hh	/^    Timestamp _last_rx;$/;"	m	class:BeaconScanner::wap
_last_text	elements/test/errortest.cc	/^    String _last_text;$/;"	m	class:__anon401::ErrorTestHandler	file:
_last_time	elements/analysis/fromdagdump.hh	/^    Timestamp _last_time;$/;"	m	class:FromDAGDump
_last_time	elements/analysis/fromnlanrdump.hh	/^    Timestamp _last_time;$/;"	m	class:FromNLANRDump
_last_time	elements/grid/linktester.hh	/^  Timestamp _last_time;		\/\/ when timer was actually last fired$/;"	m	class:LinkTester
_last_time	elements/userlevel/fromdump.hh	/^    Timestamp _last_time;$/;"	m	class:FromDump
_last_time	elements/userlevel/progressbar.hh	/^    Timestamp _last_time;$/;"	m	class:ProgressBar
_last_timestamp	elements/analysis/aggregateipflows.hh	/^	Timestamp _last_timestamp;$/;"	m	struct:AggregateIPFlows::FlowInfo
_last_triggered_update	elements/grid/dsdvroutetable.hh	/^  unsigned int _last_triggered_update; \/\/ jiffies$/;"	m	class:DSDVRouteTable
_last_updated	elements/grid/gridproxy.hh	/^    Timestamp _last_updated;$/;"	m	class:GridProxy::DstInfo
_last_updated	elements/wifi/linktable.hh	/^    Timestamp _last_updated;$/;"	m	class:LinkTable::LinkInfo
_lat	elements/grid/pep.hh	/^  float _lat;$/;"	m	class:PEP
_lat	elements/grid/radiosim.hh	/^    double _lat;$/;"	m	struct:RadioSim::Node
_lat	elements/grid/regionpep.hh	/^  float _lat;$/;"	m	class:EstimateRouterRegion
_lat0	elements/grid/gridlocationinfo.hh	/^  double _lat0; \/\/ Where we started.$/;"	m	class:GridLocationInfo
_latency	elements/standard/linkunqueue.hh	/^    Timestamp _latency;$/;"	m	class:LinkUnqueue
_len	elements/analysis/fromflandump.hh	/^	uint32_t _len;$/;"	m	class:FromFlanDump::FlanFile
_len	elements/bsdmodule/fastudpsrc.hh	/^  unsigned _len;$/;"	m	class:FastUDPSource
_len	elements/linuxmodule/fasttcpflows.hh	/^  unsigned _len;$/;"	m	class:FastTCPFlows
_len	elements/linuxmodule/fastudpflows.hh	/^  unsigned _len;$/;"	m	class:FastUDPFlows
_len	elements/linuxmodule/fastudpsrc.hh	/^  unsigned _len;$/;"	m	class:FastUDPSource
_len	elements/linuxmodule/fastudpsrcip6.hh	/^  unsigned _len;$/;"	m	class:FastUDPSourceIP6
_len	elements/radio/bim.hh	/^  int _len;$/;"	m	class:BIM
_len	elements/radio/checkpattern.hh	/^  unsigned _len;$/;"	m	class:CheckPattern
_len	elements/radio/sendpattern.hh	/^  int _len;$/;"	m	class:SendPattern
_len	include/click/fromfile.hh	/^    uint32_t _len;$/;"	m	class:FromFile
_len	include/click/straccum.hh	/^    int _len;$/;"	m	class:StringAccum
_length	elements/linuxmodule/polldevice.hh	/^    uint32_t _length;$/;"	m	class:PollDevice
_length	elements/standard/hashswitch.hh	/^  int _length;$/;"	m	class:HashSwitch
_length	elements/standard/markmacheader.hh	/^    int _length;$/;"	m	class:MarkMACHeader
_length	elements/test/checkpacket.hh	/^    uint32_t _length;$/;"	m	class:CheckPacket
_length_op	elements/test/checkpacket.hh	/^    uint8_t _length_op;$/;"	m	class:CheckPacket
_level	include/click/error.hh	/^    int _level;$/;"	m	class:BailErrorHandler
_lexinfo	tools/lib/lexert.hh	/^    LexerTInfo *_lexinfo;$/;"	m	class:LexerT
_lextra	include/click/lexer.hh	/^    LexerExtra *_lextra;$/;"	m	class:Lexer
_li	elements/grid/lookupgeogridroute.hh	/^  GridLocationInfo *_li;$/;"	m	class:LookupGeographicGridRoute
_libraries	include/click/lexer.hh	/^    Vector<String> _libraries;$/;"	m	class:Lexer
_libraries	tools/lib/lexert.hh	/^    Vector<String> _libraries;$/;"	m	class:LexerT
_limit	elements/bsdmodule/fastudpsrc.hh	/^  unsigned _limit;$/;"	m	class:FastUDPSource
_limit	elements/ethernet/etherpausesource.hh	/^    int _limit;$/;"	m	class:EtherPauseSource
_limit	elements/icmp/icmpsendpings.hh	/^    int _limit;$/;"	m	class:ICMPPingSource
_limit	elements/linuxmodule/fasttcpflows.hh	/^  unsigned _limit;$/;"	m	class:FastTCPFlows
_limit	elements/linuxmodule/fastudpflows.hh	/^  unsigned _limit;$/;"	m	class:FastUDPFlows
_limit	elements/linuxmodule/fastudpsrc.hh	/^  unsigned _limit;$/;"	m	class:FastUDPSource
_limit	elements/linuxmodule/fastudpsrcip6.hh	/^  unsigned _limit;$/;"	m	class:FastUDPSourceIP6
_limit	elements/standard/infinitesource.hh	/^    counter_t _limit;$/;"	m	class:InfiniteSource
_limit	elements/standard/ratedsource.hh	/^    unsigned _limit;$/;"	m	class:RatedSource
_limit	elements/standard/timedsource.hh	/^    int _limit;$/;"	m	class:TimedSource
_limit	elements/standard/unqueue.hh	/^    int32_t _limit;$/;"	m	class:Unqueue
_limit	elements/test/nulltask.hh	/^    uint32_t _limit;$/;"	m	class:NullTask
_limit	elements/test/schedordertest.hh	/^    uint32_t _limit;$/;"	m	class:SchedOrderTest
_lineno	include/click/fromfile.hh	/^    int _lineno;$/;"	m	class:FromFile
_lineno	include/click/lexer.hh	/^	unsigned _lineno;$/;"	m	struct:Lexer::FileState
_lineno	tools/lib/lexert.hh	/^	unsigned _lineno;$/;"	m	struct:LexerT::FileState
_linfo	tools/lib/landmarkt.hh	/^    Vector<LandmarkInfo> _linfo;$/;"	m	class:LandmarkSetT
_link	elements/analysis/fromnetflowsumdump.hh	/^    uint8_t _link;$/;"	m	class:FromNetFlowSummaryDump
_link_cursor	apps/clicky/src/wmain.hh	/^    GdkCursor *_link_cursor;$/;"	m	class:clicky::wmain
_link_stat	elements/grid/gridroutetable.hh	/^  LinkStat *_link_stat;$/;"	m	class:GridRouteTable
_link_table	elements/grid/dsrroutetable.hh	/^  LinkTable *_link_table;$/;"	m	class:DSRRouteTable
_link_tracker	elements/grid/gridroutetable.hh	/^  LinkTracker *_link_tracker;$/;"	m	class:GridRouteTable
_link_tracker	elements/grid/lookuplocalgridroute.hh	/^  LinkTracker *_link_tracker;$/;"	m	class:LookupLocalGridRoute
_links	elements/wifi/linktable.hh	/^  LTable _links;$/;"	m	class:LinkTable
_linktype	elements/analysis/fromdagdump.hh	/^    int _linktype;$/;"	m	class:FromDAGDump
_linktype	elements/userlevel/fromdump.hh	/^    int _linktype;$/;"	m	class:FromDump
_linktype	elements/userlevel/todump.hh	/^    int _linktype;$/;"	m	class:ToDump
_linux_packetbuf	elements/userlevel/fromdevice.hh	/^    unsigned char *_linux_packetbuf;$/;"	m	class:FromDevice
_linux_task	include/click/routerthread.hh	/^    struct task_struct *_linux_task;$/;"	m	class:RouterThread	typeref:struct:RouterThread::task_struct
_list	elements/standard/stridesched.hh	/^    Client *_list;$/;"	m	class:StrideSched
_list	include/click/list.hh	/^	const List<T, member> *_list;$/;"	m	class:List::const_iterator
_listener1	include/click/notifier.hh	/^    Task* _listener1;$/;"	m	class:ActiveNotifier
_listeners	elements/analysis/aggregatenotifier.hh	/^    Vector<AggregateListener *> _listeners;$/;"	m	class:AggregateNotifier
_listeners	include/click/notifier.hh	/^    task_or_signal_t* _listeners;$/;"	m	class:ActiveNotifier
_listenvecs	include/click/router.hh	/^    Vector<Vector<int> *> _listenvecs;$/;"	m	class:Router
_live_at_j	elements/ethernet/arptable.hh	/^	click_jiffies_t _live_at_j;$/;"	m	struct:ARPTable::ARPEntry
_live_fds	elements/userlevel/chattersocket.hh	/^  int _live_fds;$/;"	m	class:ChatterSocket
_loc	elements/grid/gridlocationinfo2.hh	/^  grid_location _loc;$/;"	m	class:GridLocationInfo2
_loc_err	elements/grid/gridlocationinfo.hh	/^  unsigned short _loc_err; \/\/ error radius in metres$/;"	m	class:GridLocationInfo
_loc_err	elements/grid/gridlocationinfo2.hh	/^  unsigned short _loc_err; \/\/ error radius in metres$/;"	m	class:GridLocationInfo2
_loc_good	elements/grid/gridlocationinfo.hh	/^  bool _loc_good; \/\/ if false, don't believe loc$/;"	m	class:GridLocationInfo
_loc_good	elements/grid/gridlocationinfo2.hh	/^  bool _loc_good; \/\/ if false, don't believe loc$/;"	m	class:GridLocationInfo2
_loc_queries	elements/grid/floodinglocquerier.hh	/^  unsigned int _loc_queries;$/;"	m	class:FloodingLocQuerier
_local	elements/userlevel/socket.hh	/^  union { struct sockaddr_in in; struct sockaddr_un un; } _local;$/;"	m	class:Socket	typeref:union:Socket::__anon192
_local_addr	elements/userlevel/umlswitch.hh	/^  struct sockaddr_un _local_addr;$/;"	m	class:UMLSwitch	typeref:struct:UMLSwitch::sockaddr_un
_local_ip	elements/userlevel/socket.hh	/^  IPAddress _local_ip;		\/\/ for AF_INET, address to bind()$/;"	m	class:Socket
_local_len	elements/userlevel/socket.hh	/^  socklen_t _local_len;$/;"	m	class:Socket
_local_pathname	elements/userlevel/socket.hh	/^  String _local_pathname;	\/\/ for AF_UNIX, file to bind()$/;"	m	class:Socket
_local_port	elements/local/OpenFlow/datapath.hh	/^	struct click_port *_local_port;$/;"	m	class:Datapath	typeref:struct:Datapath::click_port
_local_port	elements/userlevel/socket.hh	/^  uint16_t _local_port;		\/\/ for AF_INET, port to bind()$/;"	m	class:Socket
_locinfo	elements/grid/filterbyrange.hh	/^  GridLocationInfo *_locinfo;$/;"	m	class:FilterByRange
_locinfo	elements/grid/fixsrcloc.hh	/^  GridGenericLocInfo *_locinfo;$/;"	m	class:FixSrcLoc
_lock	elements/ethernet/arptable.hh	/^    ReadWriteLock _lock;$/;"	m	class:ARPTable
_lock	elements/ip/ipratemon.hh	/^  Spinlock* _lock;		\/\/ synchronize handlers and update$/;"	m	class:IPRateMonitor
_lock	elements/linuxmodule/anydevice.hh	/^    rwlock_t _lock;$/;"	m	class:AnyDeviceMap
_lock	elements/linuxmodule/fromuserdevice.hh	/^    spinlock_t _lock;$/;"	m	class:FromUserDevice
_lock	elements/linuxmodule/touserdevice.hh	/^    spinlock_t      _lock;$/;"	m	class:ToUserDevice
_lock	elements/threads/spinlockacquire.hh	/^    Spinlock *_lock;$/;"	m	class:SpinlockAcquire
_lock	elements/threads/spinlockrelease.hh	/^    Spinlock *_lock;$/;"	m	class:SpinlockRelease
_lock	include/click/sync.hh	/^	Spinlock _lock;$/;"	m	struct:ReadWriteLock::lock_t
_lock	include/click/sync.hh	/^    Spinlock _lock;$/;"	m	class:SpinlockIRQ
_lock	include/click/sync.hh	/^    atomic_uint32_t _lock;$/;"	m	class:SimpleSpinlock
_lock	include/click/sync.hh	/^    atomic_uint32_t _lock;$/;"	m	class:Spinlock
_lock	include/click/sync.hh	/^    spinlock_t _lock;$/;"	m	class:SimpleSpinlock
_lock	include/click/sync.hh	/^    spinlock_t _lock;$/;"	m	class:SpinlockIRQ
_lock	linuxmodule/skbmgr.cc	/^  volatile unsigned long _lock;$/;"	m	class:RecycledSkbPool	file:
_locs	elements/grid/loctable.hh	/^  Table _locs;$/;"	m	class:LocationTable
_locs	elements/grid/simplelocquerier.hh	/^  locmap _locs;$/;"	m	class:SimpleLocQuerier
_loctab	elements/grid/fixdstloc.hh	/^  LocationTable *_loctab;$/;"	m	class:FixDstLoc
_log	elements/grid/dsdvroutetable.hh	/^  GridGenericLogger  *_log;$/;"	m	class:DSDVRouteTable
_log	elements/grid/gridroutetable.hh	/^  GridLogger *_log;$/;"	m	class:GridRouteTable
_log	elements/grid/gridtxerror.hh	/^  GridGenericLogger *_log;$/;"	m	class:GridTxError
_log	elements/grid/lookuplocalgridroute.hh	/^  GridGenericLogger *_log;$/;"	m	class:LookupLocalGridRoute
_log	elements/grid/lookuplocalgridroute2.hh	/^  GridGenericLogger *_log;$/;"	m	class:LookupLocalGridRoute2
_log_dump_period	elements/grid/dsdvroutetable.hh	/^  static const unsigned int _log_dump_period = 5 * 1000; \/\/ msecs$/;"	m	class:DSDVRouteTable
_log_dump_timer	elements/grid/dsdvroutetable.hh	/^  Timer _log_dump_timer;$/;"	m	class:DSDVRouteTable
_log_full_ip	elements/grid/gridlogger.hh	/^  bool _log_full_ip;$/;"	m	class:GridLogger
_logbuf	bsdmodule/modulepriv.hh	/^  char _logbuf[LOGBUF_SIZ];$/;"	m	class:KernelErrorHandler
_logbuf	linuxmodule/modulepriv.hh	/^    char _logbuf[logbuf_siz];$/;"	m	class:KernelErrorHandler
_logging_timer	elements/grid/gridlocationinfo.hh	/^  Timer _logging_timer;$/;"	m	class:GridLocationInfo
_lon	elements/grid/pep.hh	/^  float _lon;$/;"	m	class:PEP
_lon	elements/grid/radiosim.hh	/^    double _lon;$/;"	m	struct:RadioSim::Node
_lon	elements/grid/regionpep.hh	/^  float _lon;$/;"	m	class:EstimateRouterRegion
_lon0	elements/grid/gridlocationinfo.hh	/^  double _lon0;$/;"	m	class:GridLocationInfo
_long_cache_timeout	elements/etherswitch/spantree.hh	/^  uint16_t _long_cache_timeout; \/\/ in seconds$/;"	m	class:EtherSpanTree
_lr_cb_id	elements/grid/gridprobehandler.hh	/^  int _lr_cb_id;$/;"	m	class:GridProbeHandler
_lr_el	elements/grid/gridprobehandler.hh	/^  LookupLocalGridRoute *_lr_el;$/;"	m	class:GridProbeHandler
_ls	elements/grid/bottleneckmetric.hh	/^  LinkStat *_ls;$/;"	m	class:BottleneckMetric
_ls	elements/grid/e2elossmetric.hh	/^  LinkStat *_ls;$/;"	m	class:E2ELossMetric
_ls	elements/grid/etxmetric.hh	/^  LinkStat *_ls;$/;"	m	class:ETXMetric
_ls	elements/grid/pingpong.hh	/^  LinkStat *_ls;$/;"	m	class:PingPong
_ls	elements/grid/threshmetric.hh	/^  LinkStat *_ls;$/;"	m	class:ThresholdMetric
_ls	elements/grid/yarvismetric.hh	/^  LinkStat *_ls;$/;"	m	class:YarvisMetric
_ls_ack	elements/grid/etx2metric.hh	/^  LinkStat *_ls_ack;$/;"	m	class:ETX2Metric
_ls_data	elements/grid/etx2metric.hh	/^  LinkStat *_ls_data;$/;"	m	class:ETX2Metric
_lset	tools/lib/landmarkt.hh	/^    LandmarkSetT *_lset;$/;"	m	class:LandmarkT
_lset	tools/lib/lexert.hh	/^	LandmarkSetT *_lset;$/;"	m	struct:LexerT::FileState
_m	apps/clicky/src/transform.hh	/^    double _m[6];$/;"	m	class:affine
_m	elements/bsdmodule/fastudpsrc.hh	/^  struct mbuf *_m;$/;"	m	class:FastUDPSource	typeref:struct:FastUDPSource::mbuf
_m	include/click/packet.hh	/^    struct mbuf *_m;$/;"	m	class:Packet	typeref:struct:Packet::mbuf
_macaddr	elements/linuxmodule/fromhost.hh	/^    EtherAddress _macaddr;$/;"	m	class:FromHost
_macaddr	elements/userlevel/fromhost.hh	/^    EtherAddress _macaddr;$/;"	m	class:FromHost
_macaddr	elements/userlevel/kerneltun.hh	/^    EtherAddress _macaddr;$/;"	m	class:KernelTun
_maddr	elements/ip6/addresstranslator.hh	/^  IP6Address _maddr;$/;"	m	class:AddressTranslator
_mai	elements/ip6/addresstranslator.hh	/^    IP6Address _mai;$/;"	m	struct:AddressTranslator::EntryMap
_main_attrs	tools/click-pretty/click-pretty.cc	/^    const HashTable<String, String> &_main_attrs;$/;"	m	class:ElementsOutput	file:
_map	elements/analysis/aggregateipaddrpair.hh	/^    Map _map;$/;"	m	class:AggregateIPAddrPair
_map	elements/bsdmodule/anydevice.hh	/^    AnyDevice *_map[MAP_SIZE];$/;"	m	class:AnyDeviceMap
_map	elements/ethernet/ip6ndsolicitor.hh	/^  NDEntry *_map[NMAP];$/;"	m	class:IP6NDSolicitor
_map	elements/grid/gridproxy.hh	/^  ProxyMap _map;$/;"	m	class:GridProxy
_map	elements/ip/ipreassembler.hh	/^    WritablePacket *_map[NMAP];$/;"	m	class:IPReassembler
_map	elements/ip/iprewriterbase.hh	/^    Map _map;$/;"	m	class:IPRewriterBase
_map	elements/ip/rfc2507c.hh	/^  HashTable<IPFlowID, int> _map;$/;"	m	class:RFC2507c
_map	elements/linuxmodule/anydevice.hh	/^    AnyDevice *_map[MAP_SIZE];$/;"	m	class:AnyDeviceMap
_map	elements/tcpudp/snooptcp.hh	/^  HashMap<IPFlowID, PCB *> _map;$/;"	m	class:SnoopTCP
_maps	elements/icmp/icmprewriter.hh	/^    Vector<MapEntry> _maps;$/;"	m	class:ICMPRewriter
_mapto	elements/ip6/addresstranslator.hh	/^  IP6FlowID _mapto;$/;"	m	class:AddressTranslator::Mapping
_marked_from_me	elements/wifi/linktable.hh	/^    bool _marked_from_me;$/;"	m	class:LinkTable::HostInfo
_marked_to_me	elements/wifi/linktable.hh	/^    bool _marked_to_me;$/;"	m	class:LinkTable::HostInfo
_markup	apps/clicky/src/dwidget.hh	/^    String _markup;$/;"	m	class:clicky::delt
_markup_height	apps/clicky/src/dwidget.hh	/^    double _markup_height;$/;"	m	class:clicky::delt
_markup_width	apps/clicky/src/dwidget.hh	/^    double _markup_width;$/;"	m	class:clicky::delt
_mask	elements/analysis/aggregateip.hh	/^    uint32_t _mask;$/;"	m	class:AggregateIP
_mask	elements/ip/ipfilter.hh	/^	PrimitiveData _mask;$/;"	m	struct:IPFilter::Primitive
_mask	elements/ip/ripsend.hh	/^  IPAddress _mask;$/;"	m	class:RIPSend
_mask	elements/ip/setrandipaddress.hh	/^  IPAddress _mask;$/;"	m	class:SetRandIPAddress
_mask	elements/standard/align.hh	/^  int _mask;$/;"	m	class:Align
_mask	elements/userlevel/fromhost.hh	/^    IPAddress _mask;$/;"	m	class:FromHost
_mask	elements/userlevel/kerneltun.hh	/^    IPAddress _mask;$/;"	m	class:KernelTun
_mask	include/click/bitvector.hh	/^    uint32_t _mask;$/;"	m	class:Bitvector::Bit
_mask	include/click/ip6table.hh	/^    IP6Address _mask;$/;"	m	struct:IP6Table::Entry
_mask	include/click/notifier.hh	/^    uint32_t _mask;$/;"	m	class:NotifierSignal
_master	include/click/router.hh	/^    Master* _master;$/;"	m	class:Router
_master	include/click/routerthread.hh	/^    Master *_master;$/;"	m	class:RouterThread
_master_lock	include/click/master.hh	/^    Spinlock _master_lock;$/;"	m	class:Master
_master_lock	include/click/master.hh	/^    spinlock_t _master_lock;$/;"	m	class:Master
_master_lock_count	include/click/master.hh	/^    int _master_lock_count;$/;"	m	class:Master
_master_lock_task	include/click/master.hh	/^    struct task_struct *_master_lock_task;$/;"	m	class:Master	typeref:struct:Master::task_struct
_master_paused	include/click/master.hh	/^    atomic_uint32_t _master_paused;$/;"	m	class:Master
_match	tools/click-xform/click-xform.cc	/^  Vector<ElementT *> _match;$/;"	m	class:Matcher	file:
_max	elements/ip/setrandipaddress.hh	/^  int _max;$/;"	m	class:SetRandIPAddress
_max	elements/linuxmodule/fromuserdevice.hh	/^    uint32_t _max;$/;"	m	class:FromUserDevice
_max	elements/standard/checklength.hh	/^  unsigned _max;$/;"	m	class:CheckLength
_max	include/click/bitvector.hh	/^    int _max;$/;"	m	class:Bitvector
_max_age	elements/etherswitch/bridgemessage.hh	/^  uint32_t _max_age;		\/\/ in seconds$/;"	m	class:BridgeMessage
_max_burst	elements/linuxmodule/touserdevice.hh	/^    uint32_t        _max_burst;$/;"	m	class:ToUserDevice
_max_click_share	include/click/routerthread.hh	/^    unsigned _max_click_share;		\/\/ maximum allowed Click share of CPU$/;"	m	class:RouterThread
_max_hops	elements/grid/dsdvroutetable.hh	/^  unsigned int _max_hops;$/;"	m	class:DSDVRouteTable
_max_hops	elements/grid/filterbyhops.hh	/^  unsigned int _max_hops;$/;"	m	class:FilterByGridHops
_max_hops	elements/grid/gridroutetable.hh	/^  int _max_hops;$/;"	m	class:GridRouteTable
_max_hops	elements/grid/updateroutes.hh	/^  int _max_hops;$/;"	m	class:UpdateGridRoutes
_max_length	elements/wifi/wififragment.hh	/^  uint32_t _max_length;$/;"	m	class:WifiFragment
_max_metric	elements/grid/gridroutetable.hh	/^  int _max_metric;$/;"	m	class:GridRouteTable
_max_p	elements/aqm/red.hh	/^    unsigned _max_p;		\/\/ out of 0xFFFF$/;"	m	class:RED
_max_pkt_size	elements/linuxmodule/fromuserdevice.hh	/^    uint32_t _max_pkt_size;$/;"	m	class:FromUserDevice
_max_pos	elements/userlevel/chattersocket.hh	/^  uint32_t _max_pos;$/;"	m	class:ChatterSocket
_max_qlen	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	int _max_qlen;$/;"	m	struct:CORE
_max_qual	elements/grid/gridroutetable.hh	/^  static const int _max_qual = 130;$/;"	m	class:GridRouteTable
_max_route_cbs	elements/grid/gridroutecb.hh	/^  static const int _max_route_cbs = 8;$/;"	m	class:GridRouteActor
_max_select_fd	include/click/selectset.hh	/^    int _max_select_fd;$/;"	m	class:SelectSet
_max_sig	elements/grid/gridroutetable.hh	/^  static const int _max_sig = -13;$/;"	m	class:GridRouteTable
_max_thresh	elements/aqm/red.hh	/^    unsigned _max_thresh;$/;"	m	class:RED
_max_tickets	elements/bsdmodule/anydevice.hh	/^    int _max_tickets;$/;"	m	class:AnyDevice
_max_tickets	elements/bsdmodule/anydevice.hh	/^    int _max_tickets;$/;"	m	class:AnyTaskDevice
_max_tickets	elements/linuxmodule/anydevice.hh	/^    int _max_tickets;$/;"	m	class:AnyTaskDevice
_max_timer_stride	include/click/timerset.hh	/^    unsigned _max_timer_stride;$/;"	m	class:TimerSet
_max_tries	elements/grid/ackretrysender.hh	/^  unsigned int _max_tries; \/\/ max number of times to tx before quitting$/;"	m	class:ACKRetrySender
_max_tries	elements/grid/ackretrysender2.hh	/^  unsigned int _max_tries; \/\/ max number of times to tx before quitting$/;"	m	class:ACKRetrySender2
_me	elements/grid/dsrarptable.hh	/^  IPAddress _me;$/;"	m	class:DSRArpTable
_me_ether	elements/grid/dsrarptable.hh	/^  EtherAddress _me_ether;$/;"	m	class:DSRArpTable
_media	apps/clicky/src/dstyle.hh	/^    String _media;$/;"	m	class:clicky::dcss_set
_media_next	apps/clicky/src/dstyle.hh	/^    dcss_set *_media_next;$/;"	m	class:clicky::dcss_set
_mem_high_thresh	elements/ip/ipreassembler.hh	/^    uint32_t _mem_high_thresh;	\/\/ defaults to 256K$/;"	m	class:IPReassembler
_mem_low_thresh	elements/ip/ipreassembler.hh	/^    uint32_t _mem_low_thresh;	\/\/ defaults to 3\/4 * _mem_high_thresh$/;"	m	class:IPReassembler
_mem_used	elements/ip/ipreassembler.hh	/^    uint32_t _mem_used;$/;"	m	class:IPReassembler
_memmax	elements/ip/ipratemon.hh	/^  size_t _memmax;		\/\/ max. memory usage$/;"	m	class:IPRateMonitor
_message	lib/router.cc	/^    const char *_message;$/;"	m	class:Router::RouterContextErrh	file:
_message_pos	elements/userlevel/chattersocket.hh	/^  Vector<uint32_t> _message_pos;$/;"	m	class:ChatterSocket
_messages	elements/userlevel/chattersocket.hh	/^  Vector<String> _messages;$/;"	m	class:ChatterSocket
_messages	elements/userlevel/controlsocket.cc	/^    Vector<String> _messages;$/;"	m	struct:ControlSocketErrorHandler	file:
_meter1	elements/standard/bandwidthmeter.hh	/^  unsigned _meter1;$/;"	m	class:BandwidthMeter
_meters	elements/standard/bandwidthmeter.hh	/^  unsigned *_meters;$/;"	m	class:BandwidthMeter
_method	elements/userlevel/todevice.hh	/^    int _method;$/;"	m	class:ToDevice
_metric	elements/grid/dsdvroutetable.hh	/^  GridGenericMetric *_metric;$/;"	m	class:DSDVRouteTable
_metric	elements/grid/dsr.hh	/^  unsigned char _metric;$/;"	m	struct:DSRHop
_metric	elements/grid/dsrroutetable.hh	/^  GridGenericMetric *_metric;$/;"	m	class:DSRRouteTable
_metric	elements/ip/ripsend.hh	/^  int _metric;$/;"	m	class:RIPSend
_metric	elements/wifi/linktable.hh	/^    uint32_t _metric;$/;"	m	class:LinkTable::Link
_metric	elements/wifi/linktable.hh	/^    unsigned _metric;$/;"	m	class:LinkTable::LinkInfo
_metric0	elements/linuxmodule/perfcountuser.hh	/^  int _metric0;$/;"	m	class:PerfCountUser
_metric1	elements/linuxmodule/perfcountuser.hh	/^  int _metric1;$/;"	m	class:PerfCountUser
_metric_from_me	elements/wifi/linktable.hh	/^    uint32_t _metric_from_me;$/;"	m	class:LinkTable::HostInfo
_metric_seen	elements/grid/dsdvroutetable.hh	/^  static const unsigned _metric_seen = 999999;$/;"	m	class:DSDVRouteTable
_metric_to_me	elements/wifi/linktable.hh	/^    uint32_t _metric_to_me;$/;"	m	class:LinkTable::HostInfo
_metric_type	elements/grid/gridroutetable.hh	/^  MetricType _metric_type;$/;"	m	class:GridRouteTable
_mfr_desc	elements/local/OpenFlow/datapath.hh	/^	char _mfr_desc[DESC_STR_LEN];$/;"	m	class:Datapath
_mh_alive	elements/tcpudp/snooptcp.hh	/^  bool _mh_alive : 1;$/;"	m	struct:SnoopTCP::PCB
_mh_dup_acks	elements/tcpudp/snooptcp.hh	/^  int _mh_dup_acks;$/;"	m	struct:SnoopTCP::PCB
_mh_exists	elements/tcpudp/snooptcp.hh	/^  bool _mh_exists : 1;$/;"	m	struct:SnoopTCP::PCB
_mh_expected_dup_acks	elements/tcpudp/snooptcp.hh	/^  int _mh_expected_dup_acks;$/;"	m	struct:SnoopTCP::PCB
_mh_last_ack	elements/tcpudp/snooptcp.hh	/^  unsigned _mh_last_ack;	\/\/ last ACK received from MH$/;"	m	struct:SnoopTCP::PCB
_mh_last_win	elements/tcpudp/snooptcp.hh	/^  unsigned short _mh_last_win;	\/\/ advertised window size$/;"	m	struct:SnoopTCP::PCB
_min_click_share	include/click/routerthread.hh	/^    unsigned _min_click_share;		\/\/ minimum allowed Click share of CPU$/;"	m	class:RouterThread
_min_metric	elements/grid/gridroutetable.hh	/^  int _min_metric;$/;"	m	class:GridRouteTable
_min_qual	elements/grid/gridroutetable.hh	/^  static const int _min_qual = 0;$/;"	m	class:GridRouteTable
_min_sample	elements/wifi/probetxrate.hh	/^  unsigned _min_sample;$/;"	m	class:ProbeTXRate
_min_sig	elements/grid/gridroutetable.hh	/^  static const int _min_sig = -100;$/;"	m	class:GridRouteTable
_min_thresh	elements/aqm/red.hh	/^    unsigned _min_thresh;$/;"	m	class:RED
_min_triggered_update_period	elements/grid/dsdvroutetable.hh	/^  unsigned int _min_triggered_update_period; \/\/ msecs$/;"	m	class:DSDVRouteTable
_mincount	elements/analysis/toipflowdumps.hh	/^    uint32_t _mincount;$/;"	m	class:ToIPFlowDumps
_minor_version	elements/analysis/fromipsumdump.hh	/^    int _minor_version;$/;"	m	class:FromIPSummaryDump
_minor_version	elements/userlevel/fromdump.hh	/^    int _minor_version;$/;"	m	class:FromDump
_miss_send_len	elements/local/OpenFlow/datapath.hh	/^	uint16_t _miss_send_len;$/;"	m	class:Datapath
_mmap	include/click/fromfile.hh	/^    bool _mmap;$/;"	m	class:FromFile
_mmap_off	include/click/fromfile.hh	/^    off_t _mmap_off;$/;"	m	class:FromFile
_mmap_unit	include/click/fromfile.hh	/^    size_t _mmap_unit;$/;"	m	class:FromFile
_mode	elements/wifi/wifiencap.hh	/^  unsigned _mode;$/;"	m	class:WifiEncap
_modules	include/click/router.hh	/^    Vector<struct module*> _modules;$/;"	m	class:Router
_modulus	tools/click-align/alignment.hh	/^    int _modulus;$/;"	m	class:Alignment
_monServerIP	elements/local/FlowNet/papmo/PaPMo.hh	/^	IPAddress _monServerIP;$/;"	m	class:papmo
_move	elements/grid/gridlocationinfo.hh	/^  int _move;    \/\/ Should we move?$/;"	m	class:GridLocationInfo
_mpegShape	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	int _mpegShape;$/;"	m	class:PFShapeFW
_mpi	elements/ip6/addresstranslator.hh	/^    unsigned short _mpi;$/;"	m	struct:AddressTranslator::EntryMap
_mporth	elements/ip6/addresstranslator.hh	/^  unsigned short _mportl, _mporth;$/;"	m	class:AddressTranslator
_mportl	elements/ip6/addresstranslator.hh	/^  unsigned short _mportl, _mporth;$/;"	m	class:AddressTranslator
_mslat	elements/grid/grid.hh	/^    int32_t _mslat;$/;"	m	struct:grid_location
_mslon	elements/grid/grid.hh	/^    int32_t _mslon;$/;"	m	struct:grid_location
_mtu	elements/grid/dsdvroutetable.hh	/^  unsigned int _mtu;          \/\/ maximum total bytes per packet, including ethernet headers$/;"	m	class:DSDVRouteTable
_mtu	elements/icmp/icmperror.hh	/^    unsigned _mtu;$/;"	m	class:ICMPError
_mtu	elements/ip/ipfragmenter.hh	/^  unsigned _mtu;$/;"	m	class:IPFragmenter
_mtu	elements/ip/ipoutputcombo.hh	/^  unsigned _mtu;		\/\/ Fragmenter$/;"	m	class:IPOutputCombo
_mtu	elements/ip6/ip6fragmenter.hh	/^  unsigned _mtu;$/;"	m	class:IP6Fragmenter
_mtu	elements/linuxmodule/fromhost.hh	/^    int _mtu;$/;"	m	class:FromHost
_mtu	elements/tcpudp/tcpfragmenter.hh	/^    uint16_t _mtu;$/;"	m	class:TCPFragmenter
_mtu_anno	elements/ip/ipreassembler.hh	/^    int8_t _mtu_anno;$/;"	m	class:IPReassembler
_mtu_in	elements/userlevel/fromhost.hh	/^    int _mtu_in;$/;"	m	class:FromHost
_mtu_in	elements/userlevel/kerneltun.hh	/^    int _mtu_in;$/;"	m	class:KernelTun
_mtu_out	elements/userlevel/fromhost.hh	/^    int _mtu_out;$/;"	m	class:FromHost
_mtu_out	elements/userlevel/kerneltun.hh	/^    int _mtu_out;$/;"	m	class:KernelTun
_multicast	elements/ip/decipttl.hh	/^    bool _multicast;$/;"	m	class:DecIPTTL
_multipacket	elements/analysis/fromnetflowsumdump.hh	/^    bool _multipacket;$/;"	m	class:FromNetFlowSummaryDump
_multipacket_end_timestamp	elements/analysis/fromipsumdump.hh	/^    Timestamp _multipacket_end_timestamp;$/;"	m	class:FromIPSummaryDump
_multipacket_end_timestamp	elements/analysis/fromnetflowsumdump.hh	/^    Timestamp _multipacket_end_timestamp;$/;"	m	class:FromNetFlowSummaryDump
_multipacket_length	elements/analysis/fromipsumdump.hh	/^    uint32_t _multipacket_length;$/;"	m	class:FromIPSummaryDump
_multipacket_length	elements/analysis/fromnetflowsumdump.hh	/^    uint32_t _multipacket_length;$/;"	m	class:FromNetFlowSummaryDump
_multipacket_timestamp_delta	elements/analysis/fromipsumdump.hh	/^    Timestamp _multipacket_timestamp_delta;$/;"	m	class:FromIPSummaryDump
_multipacket_timestamp_delta	elements/analysis/fromnetflowsumdump.hh	/^    Timestamp _multipacket_timestamp_delta;$/;"	m	class:FromNetFlowSummaryDump
_my_addrs	elements/ip/ipgwoptions.hh	/^  Vector<IPAddress> _my_addrs;$/;"	m	class:IPGWOptions
_my_arpt	elements/ethernet/arpquerier.hh	/^    bool _my_arpt;$/;"	m	class:ARPQuerier
_my_bcast_ip	elements/ethernet/arpquerier.hh	/^    IPAddress _my_bcast_ip;$/;"	m	class:ARPQuerier
_my_buffer	elements/analysis/fromflandump.hh	/^	bool _my_buffer;$/;"	m	class:FromFlanDump::FlanFile
_my_conf	include/click/args.hh	/^    bool _my_conf;$/;"	m	struct:Args
_my_en	elements/ethernet/arpquerier.hh	/^    EtherAddress _my_en;$/;"	m	class:ARPQuerier
_my_en	elements/ethernet/ip6ndsolicitor.hh	/^  EtherAddress _my_en;$/;"	m	class:IP6NDSolicitor
_my_en	elements/grid/floodinglocquerier.hh	/^  EtherAddress _my_en;$/;"	m	class:FloodingLocQuerier
_my_fd	elements/ns/tosimdevice.hh	/^    bool _my_fd;$/;"	m	class:ToSimDevice
_my_fd	elements/userlevel/todevice.hh	/^    bool _my_fd;$/;"	m	class:ToDevice
_my_ip	elements/ethernet/arpquerier.hh	/^    IPAddress _my_ip;$/;"	m	class:ARPQuerier
_my_ip	elements/grid/floodinglocquerier.hh	/^  IPAddress _my_ip;$/;"	m	class:FloodingLocQuerier
_my_ip	elements/grid/pep.hh	/^  IPAddress _my_ip;$/;"	m	class:PEP
_my_ip	elements/grid/regionpep.hh	/^  IPAddress _my_ip;$/;"	m	class:EstimateRouterRegion
_my_ip	elements/ip/fixipsrc.hh	/^  struct in_addr _my_ip;$/;"	m	class:FixIPSrc	typeref:struct:FixIPSrc::in_addr
_my_ip	elements/ip/ipoutputcombo.hh	/^  struct in_addr _my_ip;	\/\/ IPGWOptions, FixIPSrc$/;"	m	class:IPOutputCombo	typeref:struct:IPOutputCombo::in_addr
_my_ip6	elements/ethernet/ip6ndsolicitor.hh	/^  IP6Address _my_ip6;$/;"	m	class:IP6NDSolicitor
_my_pcap	elements/userlevel/todevice.hh	/^    bool _my_pcap;$/;"	m	class:ToDevice
_n	elements/grid/pep.cc	/^  int _n;$/;"	m	class:PEPAmoeba	file:
_n	elements/ip/radixiplookup.cc	/^    int _n;$/;"	m	class:RadixIPLookup::Radix	file:
_n	elements/ipsec/radixipseclookup.hh	/^    int _n;$/;"	m	class:RadixIPsecLookup::Radix
_n	include/click/dequeue.hh	/^  int _n;$/;"	m	class:DEQueue
_n	include/click/hashmap.hh	/^  size_t _n;$/;"	m	class:HashMap
_n	include/click/vector.hh	/^    size_type _n;$/;"	m	class:Vector
_n	tools/click-xform/adjacency.hh	/^  int _n;$/;"	m	class:AdjacencyMatrix
_n_bad_src	elements/ip6/checkip6header.hh	/^  int _n_bad_src;$/;"	m	class:CheckIP6Header
_n_live_elements	tools/lib/routert.hh	/^    int _n_live_elements;$/;"	m	class:RouterT
_nagg	elements/analysis/toipflowdumps.hh	/^    uint32_t _nagg;$/;"	m	class:ToIPFlowDumps
_nagg	elements/userlevel/ipflowrawsockets.hh	/^    uint32_t _nagg;$/;"	m	class:IPFlowRawSockets
_name	apps/ClickController/RouterTreeModel.java	/^	String _name;$/;"	f	class:RouterTreeModel.HandlerUserObject
_name	apps/clicky/src/crouter.hh	/^	String _name;$/;"	m	struct:clicky::crouter::reachable_match_t
_name	apps/clicky/src/ddecor.hh	/^    PermString _name;$/;"	m	class:clicky::dactivity_decor
_name	apps/clicky/src/ddecor.hh	/^    PermString _name;$/;"	m	class:clicky::dfullness_decor
_name	apps/clicky/src/dstyle.hh	/^    PermString _name;$/;"	m	struct:clicky::dcss_property
_name	apps/clicky/src/dstyle.hh	/^    String _name;$/;"	m	class:clicky::dcss_selector
_name	apps/csclient/csclient.hh	/^  string _name;$/;"	m	class:ControlSocketClient
_name	elements/local/FlowNet/common/Algorithm.hh	/^	char _name[FLOWNET_ALGORITHM_NAME_SIZE];$/;"	m	class:Algorithm
_name	include/click/elemfilter.hh	/^    String _name;$/;"	m	class:CastElementFilter
_name	include/click/handler.hh	/^    String _name;$/;"	m	class:Handler
_name	include/click/routervisitor.hh	/^    String _name;$/;"	m	class:ElementCastTracker
_name	lib/lexer.cc	/^  mutable String _name;$/;"	m	class:Lexer::Compound	file:
_name	lib/notifier.cc	/^    const char* _name;$/;"	m	class:__anon519::NotifierRouterVisitor	file:
_name	tools/click-devirtualize/cxxclass.hh	/^  String _name;$/;"	m	class:CxxClass
_name	tools/click-devirtualize/cxxclass.hh	/^  String _name;$/;"	m	class:CxxFunction
_name	tools/click2xml/xml2click.hh	/^    String _name;$/;"	m	struct:CxConfig
_name	tools/lib/eclasst.hh	/^    String _name;$/;"	m	class:ElementClassT
_name	tools/lib/elementt.hh	/^    String _name;$/;"	m	struct:ElementT
_name_glob	apps/clicky/src/dstyle.hh	/^    char _name_glob;$/;"	m	class:clicky::dcss_selector
_name_info	include/click/router.hh	/^    mutable NameInfo* _name_info;$/;"	m	class:Router
_name_map	tools/lib/elementmap.hh	/^    HashTable<String, int> _name_map;$/;"	m	class:ElementMap
_name_offset	apps/clicky/src/hvalues.hh	/^    int _name_offset;$/;"	m	class:clicky::handler_value
_namedb_roots	include/click/nameinfo.hh	/^    Vector<NameDB *> _namedb_roots;$/;"	m	class:NameInfo
_namedbs	include/click/nameinfo.hh	/^    Vector<NameDB *> _namedbs;$/;"	m	class:NameInfo
_names	include/click/nameinfo.hh	/^    Vector<String> _names;$/;"	m	class:DynamicNameDB
_names	include/click/variableenv.hh	/^    Vector<String> _names;$/;"	m	class:VariableEnvironment
_narenas	include/click/bighashmap_arena.hh	/^    int _narenas[2];$/;"	m	class:HashMap_ArenaFactory
_native_vlan	elements/ethernet/ethervlanannoencap.hh	/^    uint16_t _native_vlan;$/;"	m	class:EtherVLANAnnoEncap
_native_vlan	elements/ethernet/ethervlanencap.hh	/^    int _native_vlan;$/;"	m	class:EtherVLANEncap
_native_vlan	elements/ethernet/stripethervlanheader.hh	/^    int _native_vlan;$/;"	m	class:StripEtherVLANHeader
_native_vlan	elements/ethernet/vlanencap.hh	/^    int _native_vlan;$/;"	m	class:VLANEncap
_nb	elements/grid/gridencap.hh	/^  grid_nbr_encap _nb;$/;"	m	class:GridEncap
_nb	elements/grid/packetlogger.hh	/^  unsigned int _nb;$/;"	m	class:PacketLogger
_nb	elements/grid/packetlogger2.hh	/^  unsigned int _nb;$/;"	m	class:PacketLogger2
_nbr	elements/grid/lrhello.hh	/^  UpdateGridRoutes *_nbr;$/;"	m	class:SendGridLRHello
_nbuckets	include/click/hashmap.hh	/^  size_t _nbuckets;$/;"	m	class:HashMap
_nbuffers	include/click/bighashmap_arena.hh	/^    int _nbuffers;$/;"	m	class:HashMap_Arena
_nbytes	elements/ip/truncateippayload.hh	/^    unsigned _nbytes;$/;"	m	class:TruncateIPPayload
_nbytes	elements/standard/strip.hh	/^    unsigned _nbytes;$/;"	m	class:Strip
_nbytes	elements/standard/truncate.hh	/^    unsigned _nbytes;$/;"	m	class:Truncate
_nbytes	elements/standard/unstrip.hh	/^  unsigned _nbytes;$/;"	m	class:Unstrip
_nchildren	elements/ip/radixiplookup.cc	/^    int _nchildren;$/;"	m	class:RadixIPLookup::Radix	file:
_nchildren	elements/ipsec/radixipseclookup.hh	/^    int _nchildren;$/;"	m	class:RadixIPsecLookup::Radix
_nconnx	tools/lib/routert.hh	/^    int _nconnx;$/;"	m	class:RouterT
_ndiff	elements/test/comparepackets.hh	/^    uint32_t _ndiff;$/;"	m	class:ComparePackets
_near	elements/userlevel/fromhost.hh	/^    IPAddress _near;$/;"	m	class:FromHost
_near	elements/userlevel/kerneltun.hh	/^    IPAddress _near;$/;"	m	class:KernelTun
_near6	elements/userlevel/fromhost.hh	/^    IP6Address _near6;$/;"	m	class:FromHost
_need_pass2	lib/notifier.cc	/^    bool _need_pass2;$/;"	m	class:__anon519::NotifierRouterVisitor	file:
_needs_clear	elements/analysis/aggregatelast.hh	/^    uint32_t _needs_clear;	\/\/ XXX atomic$/;"	m	class:AggregateLast
_neighbors	elements/wifi/autoratefallback.hh	/^  NeighborTable _neighbors;$/;"	m	class:AutoRateFallback
_neighbors	elements/wifi/ethercount.hh	/^  NeighborTable _neighbors;$/;"	m	class:EtherCount
_neighbors	elements/wifi/madwifirate.hh	/^  NeighborTable _neighbors;$/;"	m	class:MadwifiRate
_neighbors	elements/wifi/probetxrate.hh	/^  NeighborTable _neighbors;$/;"	m	class:ProbeTXRate
_neighbors	elements/wifi/rxstats.hh	/^  NeighborTable _neighbors;$/;"	m	class:RXStats
_nelements	tools/click-devirtualize/specializer.hh	/^  int _nelements;$/;"	m	class:Specializer
_nentries	include/click/ino.hh	/^    int _nentries;$/;"	m	class:ClickIno
_nentries	include/click/nameinfo.hh	/^    size_t _nentries;$/;"	m	class:StaticNameDB
_nerr_rcvs	elements/userlevel/handlerproxy.hh	/^    int _nerr_rcvs;$/;"	m	class:HandlerProxy
_nerrors	include/click/error.hh	/^    int _nerrors;$/;"	m	class:ErrorHandler
_new_eindex_collector	tools/lib/routert.hh	/^    Vector<int> *_new_eindex_collector;$/;"	m	class:RouterT
_next	apps/clicky/src/ddecor.hh	/^    ddecor *_next;$/;"	m	class:clicky::ddecor
_next	apps/clicky/src/dstyle.hh	/^    dcss *_next;$/;"	m	class:clicky::dcss
_next	apps/clicky/src/hvalues.hh	/^    handler_value *_next;$/;"	m	class:clicky::handler_value
_next	elements/analysis/aggpktcounter.hh	/^	Flow *_next;$/;"	m	class:AggregatePacketCounter::Flow
_next	elements/analysis/aggregateipaddrpair.hh	/^    uint32_t _next;$/;"	m	class:AggregateIPAddrPair
_next	elements/analysis/aggregateipflows.hh	/^	FlowInfo *_next;$/;"	m	struct:AggregateIPFlows::FlowInfo
_next	elements/analysis/aggregateipflows.hh	/^    uint32_t _next;$/;"	m	class:AggregateIPFlows
_next	elements/analysis/toipflowdumps.hh	/^	Flow *_next;$/;"	m	class:ToIPFlowDumps::Flow
_next	elements/bsdmodule/anydevice.hh	/^    AnyDevice *_next;$/;"	m	class:AnyDevice
_next	elements/grid/locfromfile.hh	/^  int _next;$/;"	m	class:LocFromFile
_next	elements/ip/ipnameinfo.cc	/^    ServicesNameDB *_next;$/;"	m	class:__anon323::ServicesNameDB	file:
_next	elements/ip/ipratemon.hh	/^    Stats *_prev, *_next;           \/\/ to maintain age-list$/;"	m	struct:IPRateMonitor::Stats
_next	elements/ip6/addresstranslator.hh	/^  Mapping *_next;$/;"	m	class:AddressTranslator::Mapping
_next	elements/linuxmodule/anydevice.hh	/^    AnyDevice *_next;$/;"	m	class:AnyDevice
_next	elements/simple/simplerrsched.hh	/^    int _next;$/;"	m	class:SimpleRRSched
_next	elements/standard/drr.hh	/^    int _next;      \/\/ Next input to consider.$/;"	m	class:DRRSched
_next	elements/standard/rrsched.hh	/^    int _next;$/;"	m	class:RRSched
_next	elements/standard/rrswitch.hh	/^  atomic_uint32_t _next;$/;"	m	class:RoundRobinSwitch
_next	elements/standard/stridesched.hh	/^	Client *_next;$/;"	m	struct:StrideSched::Client
_next	elements/test/queuethreadtest.hh	/^    uint32_t _next;$/;"	m	class:QueueThreadTest2
_next	elements/userlevel/ipflowrawsockets.hh	/^	Flow *_next;$/;"	m	class:IPFlowRawSockets::Flow
_next	include/click/args.hh	/^	Slot *_next;$/;"	m	struct:Args::Slot
_next	include/click/list.hh	/^    T *_next;$/;"	m	class:List_member
_next	include/click/task.hh	/^    TaskLink *_next;$/;"	m	struct:TaskLink
_next	lib/lexer.cc	/^  TunnelEnd *_next;$/;"	m	class:Lexer::TunnelEnd	file:
_next	tools/click-devirtualize/signature.hh	/^  int _next;$/;"	m	struct:SignatureNode
_next	tools/lib/routert.hh	/^	ConnectionX *_next[3];$/;"	m	struct:RouterT::ConnectionX
_next_bcast	elements/grid/linkstat.hh	/^  Timestamp _next_bcast;$/;"	m	class:LinkStat
_next_by_name	include/click/handler.hh	/^    int _next_by_name;$/;"	m	class:Handler
_next_deleted	elements/ip/ipratemon.hh	/^  Stats *_prev_deleted, *_next_deleted;$/;"	m	class:IPRateMonitor
_next_errpos1	apps/clicky/src/gathererror.hh	/^    int _next_errpos1;$/;"	m	class:GatherErrorHandler
_next_errpos2	apps/clicky/src/gathererror.hh	/^    int _next_errpos2;$/;"	m	class:GatherErrorHandler
_next_free_cb	elements/grid/gridroutecb.hh	/^  static int _next_free_cb;$/;"	m	class:GridRouteActor
_next_free_cb	elements/grid/lookuplocalgridroute.cc	/^int GridRouteActor::_next_free_cb = 0;$/;"	m	class:GridRouteActor	file:
_next_router	include/click/router.hh	/^    Router* _next_router;$/;"	m	class:Router
_next_thread_sched	elements/threads/staticthreadsched.hh	/^    ThreadSched *_next_thread_sched;$/;"	m	class:StaticThreadSched
_next_time	elements/grid/linktester.hh	/^  Timestamp _next_time;		\/\/ when we *want* the next packet to be sent$/;"	m	class:LinkTester
_next_variation	elements/ip/iprwpattern.hh	/^    uint32_t _next_variation;$/;"	m	class:IPRewriterPattern
_nflows	elements/analysis/toipflowdumps.hh	/^    int _nflows;$/;"	m	class:ToIPFlowDumps
_nflows	elements/linuxmodule/fasttcpflows.hh	/^  unsigned int _nflows;$/;"	m	class:FastTCPFlows
_nflows	elements/linuxmodule/fastudpflows.hh	/^  unsigned int _nflows;$/;"	m	class:FastUDPFlows
_nflows	elements/userlevel/ipflowrawsockets.hh	/^    int _nflows;$/;"	m	class:IPFlowRawSockets
_nformals	lib/lexer.cc	/^  int _nformals;$/;"	m	class:Lexer::Compound	file:
_ngroups	tools/lib/lexert.hh	/^    int _ngroups;$/;"	m	class:LexerT
_nhandlers_bufs	include/click/router.hh	/^    int _nhandlers_bufs;$/;"	m	class:Router
_ninputs	lib/lexer.cc	/^  int _ninputs;$/;"	m	class:Lexer::Compound	file:
_ninputs	tools/click-devirtualize/specializer.hh	/^  Vector<int> _ninputs;$/;"	m	class:Specializer
_ninputs	tools/lib/elementt.hh	/^    int _ninputs;$/;"	m	struct:ElementT
_ninputs	tools/lib/routert.hh	/^    int _ninputs;$/;"	m	class:RouterT
_ninvalid	elements/linuxmodule/fromhost.hh	/^    unsigned _ninvalid;$/;"	m	class:FromHost
_nmappings	elements/ip6/addresstranslator.hh	/^  int _nmappings;$/;"	m	class:AddressTranslator
_nmappings2	elements/ip6/addresstranslator.hh	/^  int _nmappings2;$/;"	m	class:AddressTranslator
_nmeters	elements/standard/bandwidthmeter.hh	/^  int _nmeters;$/;"	m	class:BandwidthMeter
_nnoagg	elements/analysis/toipflowdumps.hh	/^    uint32_t _nnoagg;$/;"	m	class:ToIPFlowDumps
_nnoagg	elements/userlevel/ipflowrawsockets.hh	/^    uint32_t _nnoagg;$/;"	m	class:IPFlowRawSockets
_nnote	elements/analysis/toipflowdumps.hh	/^	int _nnote;$/;"	m	class:ToIPFlowDumps::Flow
_no_pad	elements/linuxmodule/todevice.hh	/^    bool _no_pad;$/;"	m	class:ToDevice
_nocongestion_detected	elements/local/FlowNet/common/BWShape.cc	/^void VcBWShape::_nocongestion_detected(struct CongestionNotification *cn)$/;"	f	class:VcBWShape
_nodelay	elements/userlevel/socket.hh	/^  int _nodelay;			\/\/ disable Nagle algorithm$/;"	m	class:Socket
_nodes	elements/grid/radiosim.hh	/^  Vector<Node> _nodes;$/;"	m	class:RadioSim
_noise	elements/wifi/rxstats.hh	/^    int _noise;$/;"	m	class:RXStats::DstInfo
_nonfull_signal	elements/linuxmodule/fromhost.hh	/^    NotifierSignal _nonfull_signal;$/;"	m	class:FromHost
_nonfull_signal	elements/standard/infinitesource.hh	/^    NotifierSignal _nonfull_signal;$/;"	m	class:InfiniteSource
_nonfull_signal	elements/userlevel/fromhost.hh	/^    NotifierSignal _nonfull_signal;$/;"	m	class:FromHost
_normal_cursor	apps/clicky/src/wmain.hh	/^    GdkCursor *_normal_cursor;$/;"	m	class:clicky::wmain
_note	elements/analysis/toipflowdumps.hh	/^	Note _note[NNOTE];$/;"	m	class:ToIPFlowDumps::Flow
_note_count	elements/analysis/toipflowdumps.hh	/^	uint32_t _note_count;$/;"	m	class:ToIPFlowDumps::Flow
_note_text	elements/analysis/toipflowdumps.hh	/^	StringAccum _note_text;$/;"	m	class:ToIPFlowDumps::Flow
_notifier	elements/analysis/fromcapdump.hh	/^    ActiveNotifier _notifier;$/;"	m	class:FromCapDump
_notifier	elements/analysis/fromipsumdump.hh	/^    ActiveNotifier _notifier;$/;"	m	class:FromIPSummaryDump
_notifier	elements/analysis/fromnetflowsumdump.hh	/^    ActiveNotifier _notifier;$/;"	m	class:FromNetFlowSummaryDump
_notifier	elements/analysis/fromtcpdump.hh	/^    ActiveNotifier _notifier;$/;"	m	class:FromTcpdump
_notifier	elements/analysis/timesortedsched.hh	/^    Notifier _notifier;$/;"	m	class:TimeSortedSched
_notifier	elements/standard/delayshaper.hh	/^    ActiveNotifier _notifier;$/;"	m	class:DelayShaper
_notifier	elements/standard/drr.hh	/^    Notifier _notifier;$/;"	m	class:DRRSched
_notifier	elements/standard/idle.hh	/^    Notifier _notifier;$/;"	m	class:Idle
_notifier	elements/standard/pullswitch.hh	/^    ActiveNotifier _notifier;$/;"	m	class:PullSwitch
_notifier	elements/test/upstreamnotifier.hh	/^  ActiveNotifier _notifier;$/;"	m	class:UpstreamNotifier
_notifier	elements/userlevel/fromdump.hh	/^    ActiveNotifier _notifier;$/;"	m	class:FromDump
_notifier_signals	include/click/router.hh	/^    notifier_signals_t *_notifier_signals;$/;"	m	class:Router
_notifiers	lib/notifier.cc	/^    Vector<Notifier*> _notifiers;$/;"	m	class:__anon519::NotifierRouterVisitor	file:
_nout	elements/ip/lookupiproutelinux.hh	/^  int _nout; \/\/ number of named outputs. really one more.$/;"	m	class:LinuxIPLookup
_noutputs	lib/lexer.cc	/^  int _noutputs;$/;"	m	class:Lexer::Compound	file:
_noutputs	tools/click-devirtualize/specializer.hh	/^  Vector<int> _noutputs;$/;"	m	class:Specializer
_noutputs	tools/lib/elementt.hh	/^    int _noutputs;$/;"	m	struct:ElementT
_noutputs	tools/lib/routert.hh	/^    int _noutputs;$/;"	m	class:RouterT
_npackets	elements/bsdmodule/fromdevice.hh	/^    int _npackets;$/;"	m	class:FromDevice
_npackets	elements/bsdmodule/todevice.hh	/^  unsigned _npackets;$/;"	m	class:ToDevice
_npackets	elements/linuxmodule/polldevice.hh	/^  uint32_t _npackets;$/;"	m	class:PollDevice
_npackets	elements/linuxmodule/rtcycles.hh	/^    click_cycles_t _npackets;$/;"	m	class:RTCycles
_npackets	elements/linuxmodule/todevice.hh	/^    uint32_t _npackets;$/;"	m	class:ToDevice
_npkt	elements/analysis/timesortedsched.hh	/^    int _npkt;$/;"	m	class:TimeSortedSched
_npkt	elements/analysis/toipflowdumps.hh	/^	int _npkt;$/;"	m	class:ToIPFlowDumps::Flow
_nports	include/click/element.hh	/^    int _nports[2];$/;"	m	class:Element
_nready	elements/analysis/timesortedsched.hh	/^    int _nready;$/;"	m	class:TimeSortedSched
_nrequirements	tools/click-mkmindriver/click-mkmindriver.cc	/^    int _nrequirements;$/;"	m	class:Mindriver	file:
_nthreads	include/click/master.hh	/^    int _nthreads;$/;"	m	class:Master
_null	apps/clicky/src/transform.hh	/^    bool _null;$/;"	m	class:affine
_num_hops	elements/grid/gridgenericrt.hh	/^    unsigned char        _num_hops;$/;"	m	struct:GridGenericRouteTable::RouteEntry
_num_hops	elements/grid/gridroutetable.hh	/^    unsigned char _num_hops; \/\/ number of hops to dest$/;"	m	class:GridRouteTable::RTEntry
_num_iters	elements/grid/linktester.hh	/^  unsigned int _num_iters;$/;"	m	class:LinkTester
_num_nonzero	elements/analysis/aggcounter.hh	/^    uint32_t _num_nonzero;$/;"	m	class:AggregateCounter
_num_queues	elements/local/OpenFlow/datapath.hh	/^	uint16_t _num_queues;$/;"	m	class:Datapath
_num_tries	elements/grid/ackretrysender.hh	/^  unsigned int _num_tries; \/\/ number of times current packet has been sent$/;"	m	class:ACKRetrySender
_num_tries	elements/grid/ackretrysender2.hh	/^  unsigned int _num_tries; \/\/ number of times current packet has been sent$/;"	m	class:ACKRetrySender2
_num_updates_sent	elements/grid/updateroutes.hh	/^  int _num_updates_sent;$/;"	m	class:UpdateGridRoutes
_number_of_smap	elements/ip6/addresstranslator.hh	/^  int _number_of_smap; \/\/ number of static-mapping entry$/;"	m	class:AddressTranslator
_nwarnings	apps/clicky/src/gathererror.hh	/^    int _nwarnings;$/;"	m	class:GatherErrorHandler
_nwarnings	elements/userlevel/controlsocket.cc	/^    int _nwarnings;$/;"	m	struct:ControlSocketErrorHandler	file:
_oalign	tools/click-align/click-align.cc	/^    Vector<Alignment> _oalign;$/;"	m	struct:RouterAlign	file:
_ocount	tools/click-align/click-align.cc	/^    Vector<int> _ocount;$/;"	m	struct:RouterAlign	file:
_offset	elements/analysis/aggregateip.hh	/^    uint32_t _offset;$/;"	m	class:AggregateIP
_offset	elements/analysis/fromflandump.hh	/^	off_t _offset;$/;"	m	class:FromFlanDump::FlanFile
_offset	elements/analysis/storetimestamp.hh	/^    int _offset;$/;"	m	class:StoreTimestamp
_offset	elements/analysis/storeudptimeseqrecord.hh	/^    uint32_t      _offset; \/\/how much to shift to get to the IPv4\/v6 header$/;"	m	class:StoreUDPTimeSeqRecord
_offset	elements/ethernet/checkarpheader.hh	/^  unsigned _offset;$/;"	m	class:CheckARPHeader
_offset	elements/ethernet/hostetherfilter.hh	/^  int _offset;$/;"	m	class:HostEtherFilter
_offset	elements/ethernet/storeetheraddress.hh	/^    unsigned _offset;$/;"	m	class:StoreEtherAddress
_offset	elements/grid/incseqno.hh	/^  unsigned int _offset;$/;"	m	class:IncrementSeqNo
_offset	elements/ip/checkipheader.hh	/^  unsigned _offset;$/;"	m	class:CheckIPHeader
_offset	elements/ip/getipaddress.hh	/^    int _offset;$/;"	m	class:GetIPAddress
_offset	elements/ip/markipheader.hh	/^  int _offset;$/;"	m	class:MarkIPHeader
_offset	elements/ip/storeipaddress.hh	/^    int _offset;$/;"	m	class:StoreIPAddress
_offset	elements/ip6/checkip6header.hh	/^  int _offset;$/;"	m	class:CheckIP6Header
_offset	elements/ip6/getip6address.hh	/^  int _offset;$/;"	m	class:GetIP6Address
_offset	elements/ip6/markip6header.hh	/^  int _offset;$/;"	m	class:MarkIP6Header
_offset	elements/ns/tosimtrace.hh	/^  int		_offset;$/;"	m	class:ToSimTrace
_offset	elements/standard/align.hh	/^  int _offset;$/;"	m	class:Align
_offset	elements/standard/hashswitch.hh	/^  int _offset;$/;"	m	class:HashSwitch
_offset	elements/standard/markmacheader.hh	/^    int _offset;$/;"	m	class:MarkMACHeader
_offset	elements/standard/setannobyte.hh	/^    int _offset;$/;"	m	class:SetAnnoByte
_offset	elements/standard/storedata.hh	/^    unsigned _offset;$/;"	m	class:StoreData
_offset	elements/wifi/autoratefallback.hh	/^  unsigned _offset;$/;"	m	class:AutoRateFallback
_offset	elements/wifi/madwifirate.hh	/^  unsigned _offset;$/;"	m	class:MadwifiRate
_offset	elements/wifi/printtxfeedback.hh	/^  unsigned _offset;$/;"	m	class:PrintTXFeedback
_offset	elements/wifi/probetxrate.hh	/^  unsigned _offset;$/;"	m	class:ProbeTXRate
_offset	elements/wifi/settxrate.hh	/^  unsigned _offset;$/;"	m	class:SetTXRate
_offset	elements/wifi/wifiseq.hh	/^  u_int32_t _offset;$/;"	m	class:WifiSeq
_offset	tools/click-align/alignment.hh	/^    int _offset;$/;"	m	class:Alignment
_offset1	tools/lib/landmarkt.hh	/^    unsigned _offset1;$/;"	m	class:LandmarkT
_offset2	tools/lib/landmarkt.hh	/^    unsigned _offset2;$/;"	m	class:LandmarkT
_offsets	include/click/standard/alignmentinfo.hh	/^    Vector<int> _offsets;$/;"	m	class:AlignmentInfo
_old_autorefresh_period	apps/clicky/src/whandler.hh	/^	int _old_autorefresh_period;$/;"	m	struct:clicky::whandler::hinfo
_old_delta	elements/tcpudp/tcprewriter.hh	/^	int32_t _old_delta[2];$/;"	m	class:TCPRewriter::TCPFlow
_old_flags	apps/clicky/src/whandler.hh	/^	int _old_flags;$/;"	m	struct:clicky::whandler::hinfo
_old_q	elements/aqm/pi.hh	/^	unsigned _target_q, _old_q;$/;"	m	class:PI
_old_rtes	elements/grid/dsdvroutetable.hh	/^  RTable _old_rtes;$/;"	m	class:DSDVRouteTable
_old_tsc	include/click/routerthread.hh	/^    u_int64_t _old_tsc; \/* MARKO - temp. *\/$/;"	m	class:RouterThread
_on	elements/standard/randomerror.hh	/^  bool _on;$/;"	m	class:RandomBitErrors
_ooffset	tools/click-align/click-align.cc	/^    Vector<int> _ooffset;$/;"	m	struct:RouterAlign	file:
_op	elements/ip/ipfilter.hh	/^	int _op;$/;"	m	struct:IPFilter::Primitive
_op	elements/ipsec/aes.hh	/^   unsigned _op;$/;"	m	class:Aes
_op	elements/ipsec/des.hh	/^  unsigned _op;$/;"	m	class:Des
_op	elements/ipsec/hmacsha1.hh	/^  int _op;$/;"	m	class:IPsecAuthHMACSHA1
_op	elements/ipsec/sha1.hh	/^  int _op;$/;"	m	class:IPsecAuthSHA1
_op_negated	elements/ip/ipfilter.hh	/^	bool _op_negated;$/;"	m	struct:IPFilter::Primitive
_opt_info	elements/analysis/toipflowdumps.hh	/^	StringAccum _opt_info;$/;"	m	class:ToIPFlowDumps::Flow
_origin_x	apps/clicky/src/wdiagram.hh	/^    int _origin_x;$/;"	m	class:clicky::wdiagram
_origin_y	apps/clicky/src/wdiagram.hh	/^    int _origin_y;$/;"	m	class:clicky::wdiagram
_original_filename	include/click/lexer.hh	/^	String _original_filename;$/;"	m	struct:Lexer::FileState
_original_filename	tools/lib/lexert.hh	/^	String _original_filename;$/;"	m	struct:LexerT::FileState
_original_retries	elements/wifi/probetxrate.hh	/^  unsigned _original_retries;$/;"	m	class:ProbeTXRate
_other	lib/lexer.cc	/^  TunnelEnd *_other;$/;"	m	class:Lexer::TunnelEnd	file:
_other	tools/click-pretty/click-pretty.cc	/^    int _other;$/;"	m	struct:OutputItem	file:
_oticks	include/click/routerthread.hh	/^    int _oticks;$/;"	m	class:RouterThread
_out	apps/ClickController/ControlSocket.java	/^    private BufferedWriter _out;$/;"	f	class:ControlSocket	file:
_out2dev	elements/ip/lookupiproutelinux.hh	/^  net_device **_out2dev; \/\/ dev ptr of each output.$/;"	m	class:LinuxIPLookup
_out2devname	elements/ip/lookupiproutelinux.hh	/^  Vector<String> _out2devname; \/\/ dev name of each output.$/;"	m	class:LinuxIPLookup
_out_map	elements/ip6/addresstranslator.hh	/^  Map6 _out_map;$/;"	m	class:AddressTranslator
_outfile	elements/ethernet/arpprint.hh	/^    FILE *_outfile;$/;"	m	class:ARPPrint
_outfile	elements/ip/ipprint.hh	/^  FILE *_outfile;$/;"	m	class:IPPrint
_outfilename	elements/ethernet/arpprint.hh	/^    String _outfilename;$/;"	m	class:ARPPrint
_outfilename	elements/ip/ipprint.hh	/^  String _outfilename;$/;"	m	class:IPPrint
_output	elements/standard/staticswitch.hh	/^  int _output;$/;"	m	class:StaticSwitch
_output	elements/standard/switch.hh	/^  int _output;$/;"	m	class:Switch
_output	elements/test/sorttest.hh	/^    bool _output;$/;"	m	class:SortTest
_output_0_of	tools/click-xform/adjacency.hh	/^  mutable Vector<int> _output_0_of;$/;"	m	class:AdjacencyMatrix
_output_banner	elements/analysis/aggcounter.hh	/^    String _output_banner;$/;"	m	class:AggregateCounter
_output_banner	elements/analysis/toipflowdumps.hh	/^    String _output_banner;$/;"	m	class:ToIPFlowDumps
_output_count	elements/analysis/toipsumdump.hh	/^    uint32_t _output_count;$/;"	m	class:ToIPSummaryDump
_output_everything	elements/standard/classification.hh	/^    int _output_everything;$/;"	m	class:Classification::Wordwise::CompressedProgram
_output_everything	elements/standard/classification.hh	/^    int _output_everything;$/;"	m	class:Classification::Wordwise::Program
_output_expectation_error	test/testie	/^sub _output_expectation_error ($$$$$) {$/;"	s
_output_sup	elements/etherswitch/spantree.hh	/^  Suppressor* _output_sup;$/;"	m	class:EtherSpanTree
_outq	elements/grid/dsrroutetable.hh	/^  SimpleQueue *_outq;$/;"	m	class:DSRRouteTable
_overload_type	lib/lexer.cc	/^  int _overload_type;$/;"	m	class:Lexer::Compound	file:
_overload_type	tools/lib/routert.hh	/^    ElementClassT *_overload_type;$/;"	m	class:RouterT
_owner	elements/ip/iprwmapping.hh	/^    IPRewriterBase *_owner;$/;"	m	class:IPRewriterFlow
_owner	include/click/element.hh	/^	Element* _owner;		\/\/ Whose input or output are we?$/;"	m	class:Element::Port
_owner	include/click/sync.hh	/^    click_processor_t _owner;$/;"	m	class:Spinlock
_owner	include/click/task.hh	/^    Element *_owner;$/;"	m	class:Task
_owner	include/click/timer.hh	/^    Element *_owner;$/;"	m	class:Timer
_owner	tools/lib/elementt.hh	/^    RouterT *_owner;$/;"	m	struct:ElementT
_owner_input	elements/ip/iprwmapping.hh	/^    int _owner_input;$/;"	m	class:IPRewriterFlow
_p	elements/aqm/pi.hh	/^	double _a, _b, _w, _p;$/;"	m	class:PI
_p	elements/grid/dsrroutetable.hh	/^    Packet *_p;$/;"	m	class:DSRRouteTable::BufferedPacket
_p	elements/grid/packetlogger.hh	/^  DEQueue<log_entry> _p;$/;"	m	class:PacketLogger
_p	elements/grid/packetlogger2.hh	/^  DEQueue<log_entry> _p;$/;"	m	class:PacketLogger2
_p	elements/standard/classification.hh	/^    Program *_p;$/;"	m	class:Classification::Wordwise::DominatorOptimizer
_p	elements/standard/delayshaper.hh	/^    Packet *_p;$/;"	m	class:DelayShaper
_p	elements/standard/delayunqueue.hh	/^    Packet *_p;$/;"	m	class:DelayUnqueue
_p	elements/test/comparepackets.hh	/^    Packet *_p[2];$/;"	m	class:ComparePackets
_p	include/click/bitvector.hh	/^    uint32_t &_p;$/;"	m	class:Bitvector::Bit
_p2s_map	elements/analysis/fromcapdump.hh	/^    Vector<uint32_t> _p2s_map;$/;"	m	class:FromCapDump
_p_bit_error	elements/standard/randomerror.hh	/^  unsigned _p_bit_error;	\/\/ out of 0xFFFF$/;"	m	class:RandomBitErrors
_p_error	elements/standard/randomerror.hh	/^  int _p_error[9];		\/\/ out of 0xFFFF$/;"	m	class:RandomBitErrors
_packet	elements/analysis/fromdagdump.hh	/^    Packet *_packet;$/;"	m	class:FromDAGDump
_packet	elements/analysis/fromnetflowsumdump.hh	/^    Packet *_packet;$/;"	m	class:FromNetFlowSummaryDump
_packet	elements/analysis/fromnlanrdump.hh	/^    Packet *_packet;$/;"	m	class:FromNLANRDump
_packet	elements/ethernet/etherpausesource.hh	/^    Packet *_packet;$/;"	m	class:EtherPauseSource
_packet	elements/linuxmodule/fastudpsrc.hh	/^  Packet *_packet;$/;"	m	class:FastUDPSource
_packet	elements/linuxmodule/fastudpsrcip6.hh	/^  Packet *_packet;$/;"	m	class:FastUDPSourceIP6
_packet	elements/standard/infinitesource.hh	/^    Packet *_packet;$/;"	m	class:InfiniteSource
_packet	elements/standard/ratedsource.hh	/^    Packet *_packet;$/;"	m	class:RatedSource
_packet	elements/standard/timedsource.hh	/^    Packet *_packet;$/;"	m	class:TimedSource
_packet	elements/userlevel/fromdump.hh	/^    Packet *_packet;$/;"	m	class:FromDump
_packetAnalyzer	elements/ns/tosimtrace.hh	/^  SimPacketAnalyzer *_packetAnalyzer;$/;"	m	class:ToSimTrace
_packet_capacity	elements/ethernet/arptable.hh	/^    uint32_t _packet_capacity;$/;"	m	class:ARPTable
_packet_count	elements/analysis/toipflowdumps.hh	/^	uint32_t _packet_count;$/;"	m	class:ToIPFlowDumps::Flow
_packet_count	elements/ethernet/arptable.hh	/^    atomic_uint32_t _packet_count;$/;"	m	class:ARPTable
_packet_filepos	elements/analysis/fromnlanrdump.hh	/^    off_t _packet_filepos;$/;"	m	class:FromNLANRDump
_packet_filepos	elements/userlevel/fromdump.hh	/^    off_t _packet_filepos;$/;"	m	class:FromDump
_packet_size	elements/grid/linktester.hh	/^  unsigned int _packet_size;   \/\/ bytes, including ether header$/;"	m	class:LinkTester
_packet_size_threshold	elements/wifi/autoratefallback.hh	/^  unsigned _packet_size_threshold;$/;"	m	class:AutoRateFallback
_packet_size_threshold	elements/wifi/madwifirate.hh	/^  unsigned _packet_size_threshold;$/;"	m	class:MadwifiRate
_packet_size_threshold	elements/wifi/probetxrate.hh	/^  unsigned _packet_size_threshold;$/;"	m	class:ProbeTXRate
_packet_source	elements/analysis/aggregateipflows.hh	/^    Element *_packet_source;$/;"	m	class:AggregateIPFlows
_packetbuf	elements/ns/fromsimdevice.hh	/^  unsigned char *_packetbuf;$/;"	m	class:FromSimDevice
_packetbuf_size	elements/ns/fromsimdevice.hh	/^  int _packetbuf_size;$/;"	m	class:FromSimDevice
_packets	elements/analysis/aggregateipflows.hh	/^	uint32_t _packets[2];$/;"	m	struct:AggregateIPFlows::StatFlowInfo
_packets	elements/analysis/aggregatelast.hh	/^    Packet ***_packets[NPLANE];$/;"	m	class:AggregateLast
_packets	elements/userlevel/kerneltun.hh	/^    click_uint_large_t _packets;$/;"	m	class:KernelTun
_packets	elements/wifi/packetstore.hh	/^  DEQueue <store> _packets;$/;"	m	class:PacketStore
_packets	elements/wifi/probetxrate.hh	/^    Vector<int> _packets;$/;"	m	struct:ProbeTXRate::DstInfo
_packets	elements/wifi/rxstats.hh	/^    int _packets;$/;"	m	class:RXStats::DstInfo
_packets	elements/wifi/wifidefrag.hh	/^  PacketInfoTable _packets;$/;"	m	class:WifiDefrag
_packets	elements/wifi/wifidupefilter.hh	/^    int _packets;$/;"	m	class:WifiDupeFilter::DstInfo
_packets	include/click/element.hh	/^	mutable unsigned _packets;	\/\/ How many packets have we moved?$/;"	m	class:Element::Port
_packets_sent	elements/grid/linktester.hh	/^  unsigned int _packets_sent;$/;"	m	class:LinkTester
_pad	elements/grid/linktester.hh	/^  unsigned int _pad;           \/\/ milliseconds between phases$/;"	m	class:LinkTester
_pad	elements/ip/lookupiproutemp.hh	/^  int _pad[2];$/;"	m	class:LookupIPRouteMP
_pad	elements/linuxmodule/cpuqueue.hh	/^    unsigned _pad[5];$/;"	m	struct:CPUQueue::__anon303
_pad	linuxmodule/skbmgr.cc	/^  int _pad[1];$/;"	m	class:RecycledSkbPool	file:
_pad	linuxmodule/skbmgr.cc	/^  int _pad[5];$/;"	m	class:RecycledSkbPool	file:
_pad2	linuxmodule/skbmgr.cc	/^  int _pad2[2];$/;"	m	class:RecycledSkbPool	file:
_parent	apps/clicky/src/dwidget.hh	/^	const delt *_parent;$/;"	m	class:clicky::delt::iterator
_parent	apps/clicky/src/dwidget.hh	/^    delt *_parent;$/;"	m	class:clicky::delt
_parent	elements/ip/ipratemon.hh	/^    Counter *_parent;               \/\/ equals NULL for _base->_parent$/;"	m	struct:IPRateMonitor::Stats
_parent	include/click/variableenv.hh	/^    VariableEnvironment *_parent;$/;"	m	class:VariableEnvironment
_parents	tools/click-devirtualize/cxxclass.hh	/^  Vector<CxxClass *> _parents;$/;"	m	class:CxxClass
_parsed_sources	tools/click-devirtualize/specializer.hh	/^  HashTable<String, int> _parsed_sources;$/;"	m	class:Specializer
_pass	elements/standard/stridesched.hh	/^	unsigned _pass;$/;"	m	struct:StrideSched::Client
_pass	include/click/task.hh	/^    unsigned _pass;$/;"	m	struct:TaskLink
_pass2	lib/notifier.cc	/^    bool _pass2;$/;"	m	class:__anon519::NotifierRouterVisitor	file:
_pat	tools/click-xform/click-xform.cc	/^  RouterT *_pat;$/;"	m	class:Matcher	file:
_pat_input	tools/click-xform/click-xform.cc	/^  ElementT *_pat_input;$/;"	m	class:Matcher	file:
_pat_m	tools/click-xform/click-xform.cc	/^  AdjacencyMatrix *_pat_m;$/;"	m	class:Matcher	file:
_pat_output	tools/click-xform/click-xform.cc	/^  ElementT *_pat_output;$/;"	m	class:Matcher	file:
_patid	tools/click-xform/click-xform.cc	/^  int _patid;$/;"	m	class:Matcher	file:
_paused	elements/grid/dsdvroutetable.hh	/^  bool _paused;$/;"	m	class:DSDVRouteTable
_paused	elements/standard/pokehandlers.hh	/^    bool _paused;$/;"	m	class:PokeHandlers
_pcap	elements/userlevel/fromdevice.hh	/^    pcap_t *_pcap;$/;"	m	class:FromDevice
_pcap	elements/userlevel/ipflowrawsockets.hh	/^	pcap_t *_pcap;$/;"	m	class:IPFlowRawSockets::Flow
_pcap	elements/userlevel/todevice.hh	/^    pcap_t *_pcap;$/;"	m	class:ToDevice
_pcap_complaints	elements/userlevel/fromdevice.hh	/^    int _pcap_complaints;$/;"	m	class:FromDevice
_pcap_network	elements/linuxmodule/touserdevice.hh	/^    uint32_t        _pcap_network;$/;"	m	class:ToUserDevice
_pcap_snaplen	elements/linuxmodule/touserdevice.hh	/^    uint32_t        _pcap_snaplen;$/;"	m	class:ToUserDevice
_pcap_task	elements/userlevel/fromdevice.hh	/^    Task _pcap_task;$/;"	m	class:FromDevice
_pending_head	include/click/routerthread.hh	/^    uintptr_t _pending_head;$/;"	m	class:RouterThread
_pending_lock	include/click/routerthread.hh	/^    SpinlockIRQ _pending_lock;$/;"	m	class:RouterThread
_pending_nextptr	include/click/task.hh	/^    volatile uintptr_t _pending_nextptr;$/;"	m	class:Task
_pending_tail	include/click/routerthread.hh	/^    volatile uintptr_t *_pending_tail;$/;"	m	class:RouterThread
_penumbra	apps/clicky/src/wdiagram.hh	/^    double _penumbra;$/;"	m	class:clicky::wdiagram
_perfcnt1_allocskb	elements/linuxmodule/polldevice.hh	/^  uint64_t _perfcnt1_allocskb;$/;"	m	class:PollDevice
_perfcnt1_clean	elements/linuxmodule/todevice.hh	/^    uint64_t _perfcnt1_clean;$/;"	m	class:ToDevice
_perfcnt1_freeskb	elements/linuxmodule/todevice.hh	/^    uint64_t _perfcnt1_freeskb;$/;"	m	class:ToDevice
_perfcnt1_poll	elements/linuxmodule/polldevice.hh	/^  uint64_t _perfcnt1_poll;$/;"	m	class:PollDevice
_perfcnt1_pull	elements/linuxmodule/todevice.hh	/^    uint64_t _perfcnt1_pull;$/;"	m	class:ToDevice
_perfcnt1_push	elements/bsdmodule/fromdevice.hh	/^    int _perfcnt1_push, _perfcnt2_push;$/;"	m	class:FromDevice
_perfcnt1_pushing	elements/linuxmodule/polldevice.hh	/^  uint64_t _perfcnt1_pushing;$/;"	m	class:PollDevice
_perfcnt1_queue	elements/linuxmodule/todevice.hh	/^    uint64_t _perfcnt1_queue;$/;"	m	class:ToDevice
_perfcnt1_read	elements/bsdmodule/fromdevice.hh	/^    int _perfcnt1_read, _perfcnt2_read;$/;"	m	class:FromDevice
_perfcnt1_refill	elements/linuxmodule/polldevice.hh	/^  uint64_t _perfcnt1_refill;$/;"	m	class:PollDevice
_perfcnt2_allocskb	elements/linuxmodule/polldevice.hh	/^  uint64_t _perfcnt2_allocskb;$/;"	m	class:PollDevice
_perfcnt2_clean	elements/linuxmodule/todevice.hh	/^    uint64_t _perfcnt2_clean;$/;"	m	class:ToDevice
_perfcnt2_freeskb	elements/linuxmodule/todevice.hh	/^    uint64_t _perfcnt2_freeskb;$/;"	m	class:ToDevice
_perfcnt2_poll	elements/linuxmodule/polldevice.hh	/^  uint64_t _perfcnt2_poll;$/;"	m	class:PollDevice
_perfcnt2_pull	elements/linuxmodule/todevice.hh	/^    uint64_t _perfcnt2_pull;$/;"	m	class:ToDevice
_perfcnt2_push	elements/bsdmodule/fromdevice.hh	/^    int _perfcnt1_push, _perfcnt2_push;$/;"	m	class:FromDevice
_perfcnt2_pushing	elements/linuxmodule/polldevice.hh	/^  uint64_t _perfcnt2_pushing;$/;"	m	class:PollDevice
_perfcnt2_queue	elements/linuxmodule/todevice.hh	/^    uint64_t _perfcnt2_queue;$/;"	m	class:ToDevice
_perfcnt2_read	elements/bsdmodule/fromdevice.hh	/^    int _perfcnt1_read, _perfcnt2_read;$/;"	m	class:FromDevice
_perfcnt2_refill	elements/linuxmodule/polldevice.hh	/^  uint64_t _perfcnt2_refill;$/;"	m	class:PollDevice
_perfect_time	elements/wifi/probetxrate.hh	/^    Vector<int> _perfect_time;$/;"	m	struct:ProbeTXRate::DstInfo
_period	elements/grid/dsdvroutetable.hh	/^  unsigned int _period; \/\/ msecs$/;"	m	class:DSDVRouteTable
_period	elements/grid/gridroutetable.hh	/^  int _period;$/;"	m	class:GridRouteTable
_period	elements/grid/hello.hh	/^  int _period;$/;"	m	class:SendGridHello
_period	elements/grid/linkstat.hh	/^  unsigned int _period; \/\/ msecs$/;"	m	class:LinkStat
_period	elements/grid/lrhello.hh	/^  int _period;$/;"	m	class:SendGridLRHello
_period	elements/grid/updateroutes.hh	/^  int _period;$/;"	m	class:UpdateGridRoutes
_period	elements/wifi/madwifirate.hh	/^  int _period;$/;"	m	class:MadwifiRate
_permute	elements/test/sorttest.hh	/^    Vector<int> _permute;$/;"	m	class:SortTest
_pflags	apps/clicky/src/dstyle.hh	/^    unsigned _pflags;$/;"	m	class:clicky::dcss
_pfshape	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.hh	/^	PFShapeFW* _pfshape;$/;"	m	class:VcBWShapeByCD
_pfshape	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.hh	/^	PFShapeFW *_pfshape;$/;"	m	class:VcBWShapeByCD_CFB
_pfshape	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeSimple.hh	/^	PFShapeFW *_pfshape;	\/* container framework of this algorithm *\/$/;"	m	class:VcBWShapeSimple
_phase	tools/click-devirtualize/signature.hh	/^  int _phase;$/;"	m	struct:SignatureNode
_pi	elements/standard/drr.hh	/^    portinfo *_pi;$/;"	m	class:DRRSched
_pidx	tools/lib/processingt.hh	/^    Vector<int> _pidx[2];$/;"	m	class:ProcessingT
_pidx_created	tools/lib/processingt.hh	/^    bool _pidx_created;$/;"	m	class:ProcessingT
_pinfo	include/click/packet.hh	/^	simclick_simpacketinfo _pinfo;$/;"	m	class:Packet::SimPacketinfoWrapper
_pipe	elements/analysis/fromflandump.hh	/^	FILE *_pipe;$/;"	m	class:FromFlanDump::FlanFile
_pipe	include/click/fromfile.hh	/^    FILE *_pipe;$/;"	m	class:FromFile
_pkt	elements/analysis/timesortedsched.hh	/^    packet_s *_pkt;$/;"	m	class:TimeSortedSched
_pkt	elements/analysis/toipflowdumps.hh	/^	Pkt _pkt[NPKT];$/;"	m	class:ToIPFlowDumps::Flow
_pkt_count	elements/linuxmodule/fromuserdevice.hh	/^    uint32_t _pkt_count;$/;"	m	class:FromUserDevice
_pkt_count	elements/linuxmodule/touserdevice.hh	/^    ulong           _pkt_count;$/;"	m	class:ToUserDevice
_pkt_read_count	elements/linuxmodule/touserdevice.hh	/^    ulong           _pkt_read_count;$/;"	m	class:ToUserDevice
_pkts_killed	elements/ethernet/ip6ndsolicitor.hh	/^  int _pkts_killed;$/;"	m	class:IP6NDSolicitor
_pkts_killed	elements/grid/floodinglocquerier.hh	/^  unsigned int _pkts_killed;$/;"	m	class:FloodingLocQuerier
_pmtu	elements/icmp/icmperror.hh	/^    unsigned _pmtu;$/;"	m	class:ICMPError
_poll_status_tick	elements/bsdmodule/fromdevice.hh	/^    int _poll_status_tick;$/;"	m	class:FromDevice
_poll_timeout_j	elements/ethernet/arpquerier.hh	/^    uint32_t _poll_timeout_j;$/;"	m	class:ARPQuerier
_polled_at_j	elements/ethernet/arptable.hh	/^	click_jiffies_t _polled_at_j;$/;"	m	struct:ARPTable::ARPEntry
_pollfds	include/click/selectset.hh	/^    Vector<struct pollfd> _pollfds;$/;"	m	class:SelectSet
_polling	elements/bsdmodule/fromdevice.hh	/^    int _polling;$/;"	m	class:FromDevice
_port	apps/ClickController/ControlSocket.java	/^    private int _port;$/;"	f	class:ControlSocket	file:
_port	apps/ClickController/NewConnectionDialog.java	/^    private JTextField _port;$/;"	f	class:NewConnectionDialog	file:
_port	apps/clicky/src/crouter.hh	/^	int _port;$/;"	m	struct:clicky::crouter::reachable_match_t
_port	apps/clicky/src/dwidget.hh	/^    int _port[2];$/;"	m	class:clicky::dconn
_port	apps/csclient/csclient.hh	/^  unsigned short _port;$/;"	m	class:ControlSocketClient
_port	elements/etherswitch/spantree.hh	/^  Vector<PortInfo> _port;$/;"	m	class:EtherSpanTree
_port	elements/userlevel/rawsocket.hh	/^  uint16_t _port;		\/\/ (PlanetLab only) port to bind$/;"	m	class:RawSocket
_port	include/click/element.hh	/^	int _port;$/;"	m	class:Element::Port
_port	lib/lexer.cc	/^  Router::Port _port;$/;"	m	class:Lexer::TunnelEnd	file:
_port_devname	elements/local/OpenFlow/datapath.hh	/^	String _port_devname[DP_MAX_PORTS];$/;"	m	class:Datapath
_port_id	elements/etherswitch/bridgemessage.hh	/^  uint16_t _port_id;$/;"	m	class:BridgeMessage
_port_list	elements/local/OpenFlow/datapath.hh	/^	struct list _port_list; \/* All ports, including local_port. *\/$/;"	m	class:Datapath	typeref:struct:Datapath::list
_port_macaddr	elements/local/OpenFlow/datapath.hh	/^	EtherAddress _port_macaddr[DP_MAX_PORTS];$/;"	m	class:Datapath
_port_offset	elements/icmp/icmprewriter.hh	/^	int _port_offset;$/;"	m	struct:ICMPRewriter::MapEntry
_portoff	apps/clicky/src/dwidget.hh	/^    double *_portoff[2];$/;"	m	class:clicky::delt
_ports	elements/analysis/aggregateipflows.hh	/^	uint32_t _ports;$/;"	m	struct:AggregateIPFlows::FlowInfo
_ports	elements/local/OpenFlow/datapath.hh	/^	struct click_port _ports[DP_MAX_PORTS];$/;"	m	class:Datapath	typeref:struct:Datapath::click_port
_ports	include/click/element.hh	/^    Port* _ports[2];$/;"	m	class:Element
_ports_length	apps/clicky/src/dwidget.hh	/^    double _ports_length[2];$/;"	m	class:clicky::delt
_ports_width	apps/clicky/src/dwidget.hh	/^    double _ports_width[2];$/;"	m	class:clicky::delt
_pos	bsdmodule/modulepriv.hh	/^  int _pos;$/;"	m	class:KernelErrorHandler
_pos	elements/standard/pokehandlers.hh	/^    int _pos;$/;"	m	class:PokeHandlers
_pos	include/click/dequeue.hh	/^	int _pos;$/;"	m	struct:DEQueue::const_iterator
_pos	include/click/fromfile.hh	/^    uint32_t _pos;$/;"	m	class:FromFile
_pos	include/click/lexer.hh	/^	const char *_pos;$/;"	m	struct:Lexer::FileState
_pos	tools/lib/lexert.hh	/^	const char *_pos;$/;"	m	struct:LexerT::FileState
_pos	tools/lib/lexert.hh	/^    const char *_pos;$/;"	m	class:Lexeme
_potential_duplicate_connections	tools/lib/routert.hh	/^    bool _potential_duplicate_connections;$/;"	m	class:RouterT
_power	elements/wifi/settxpower.hh	/^  unsigned _power;$/;"	m	class:SetTXPower
_pprev	elements/standard/stridesched.hh	/^	Client **_pprev;$/;"	m	struct:StrideSched::Client
_pprev	include/click/hashcontainer.hh	/^    T **_pprev;$/;"	m	class:HashContainer_const_iterator
_pprev	tools/lib/routert.hh	/^	ConnectionX **_pprev;$/;"	m	struct:RouterT::ConnectionX
_pred_first	elements/standard/classification.hh	/^    mutable Vector<int> _pred_first;	\/\/ indexed by state (insn id)$/;"	m	class:Classification::Wordwise::DominatorOptimizer
_pred_next	elements/standard/classification.hh	/^    mutable Vector<int> _pred_next;	\/\/ indexed by branch$/;"	m	class:Classification::Wordwise::DominatorOptimizer
_pred_prev	elements/standard/classification.hh	/^    mutable Vector<int> _pred_prev;	\/\/ indexed by branch$/;"	m	class:Classification::Wordwise::DominatorOptimizer
_preferred_addr	elements/ip/ipgwoptions.hh	/^  struct in_addr _preferred_addr;$/;"	m	class:IPGWOptions	typeref:struct:IPGWOptions::in_addr
_prefix	apps/clicky/src/cdriver.hh	/^    String _prefix;$/;"	m	class:clicky::clickfs_cdriver
_prefix	include/click/error.hh	/^    String _prefix;$/;"	m	class:PrefixErrorHandler
_prefix6	elements/userlevel/fromhost.hh	/^    int _prefix6;$/;"	m	class:FromHost
_prepare_fields	elements/analysis/toipsumdump.hh	/^    Vector<const IPSummaryDump::FieldWriter *> _prepare_fields;$/;"	m	class:ToIPSummaryDump
_preserve_8	elements/analysis/anonipaddr.hh	/^    Vector<uint32_t> _preserve_8;$/;"	m	class:AnonymizeIPAddr
_preserve_class	elements/analysis/anonipaddr.hh	/^    int _preserve_class;$/;"	m	class:AnonymizeIPAddr
_prev	elements/ip/ipnameinfo.cc	/^    ServicesNameDB *_prev;$/;"	m	class:__anon323::ServicesNameDB	file:
_prev	elements/ip/ipratemon.hh	/^    Stats *_prev, *_next;           \/\/ to maintain age-list$/;"	m	struct:IPRateMonitor::Stats
_prev	elements/ip6/addresstranslator.hh	/^  Mapping *_prev;$/;"	m	class:AddressTranslator::Mapping
_prev	include/click/list.hh	/^    T *_prev;$/;"	m	class:List_member
_prev	include/click/task.hh	/^    TaskLink *_prev;$/;"	m	struct:TaskLink
_prev_class_id	tools/click2xml/xml2click.hh	/^    String _prev_class_id;$/;"	m	struct:CxConfig
_prev_class_name	tools/click2xml/xml2click.hh	/^    String _prev_class_name;$/;"	m	struct:CxConfig
_prev_deleted	elements/ip/ipratemon.hh	/^  Stats *_prev_deleted, *_next_deleted;$/;"	m	class:IPRateMonitor
_prev_from_me	elements/wifi/linktable.hh	/^    IPAddress _prev_from_me;$/;"	m	class:LinkTable::HostInfo
_prev_prim	elements/ip/ipfilter.hh	/^	Primitive _prev_prim;$/;"	m	struct:IPFilter::Parser
_prev_to_me	elements/wifi/linktable.hh	/^    IPAddress _prev_to_me;$/;"	m	class:LinkTable::HostInfo
_print_anno	elements/standard/print.hh	/^    bool _print_anno;$/;"	m	class:Print
_print_anno	elements/wifi/printtxfeedback.hh	/^  bool _print_anno;$/;"	m	class:PrintTXFeedback
_print_anno	elements/wifi/printwifi.hh	/^  bool _print_anno;$/;"	m	class:PrintWifi
_print_checksum	elements/wifi/printtxfeedback.hh	/^  bool _print_checksum;$/;"	m	class:PrintTXFeedback
_print_checksum	elements/wifi/printwifi.hh	/^  bool _print_checksum;$/;"	m	class:PrintWifi
_print_eth	elements/grid/printgrid.hh	/^  bool _print_eth;$/;"	m	class:PrintGrid
_print_ether	elements/ethernet/arpprint.hh	/^    bool _print_ether;$/;"	m	class:ARPPrint
_print_probe_entries	elements/grid/printgrid.hh	/^  bool _print_probe_entries;$/;"	m	class:PrintGrid
_print_routes	elements/grid/printgrid.hh	/^  bool _print_routes;$/;"	m	class:PrintGrid
_print_timestamp	elements/ethernet/arpprint.hh	/^    bool _print_timestamp;$/;"	m	class:ARPPrint
_printable_name	tools/lib/eclasst.hh	/^    String _printable_name;$/;"	m	class:ElementClassT
_printed_read_err	elements/userlevel/kerneltun.hh	/^    bool _printed_read_err;$/;"	m	class:KernelTun
_printed_write_err	elements/userlevel/kerneltun.hh	/^    bool _printed_write_err;$/;"	m	class:KernelTun
_probe_size	elements/grid/linkstat.hh	/^  unsigned int _probe_size; \/\/ bytes$/;"	m	class:LinkStat
_proc_queue	elements/linuxmodule/fromuserdevice.hh	/^    wait_queue_head_t _proc_queue;$/;"	m	class:FromUserDevice
_proc_queue	elements/linuxmodule/touserdevice.hh	/^    wait_queue_head_t      _proc_queue;$/;"	m	class:ToUserDevice
_processing	apps/clicky/src/crouter.hh	/^	ProcessingT *_processing;$/;"	m	struct:clicky::crouter::reachable_match_t
_processing	apps/clicky/src/crouter.hh	/^    ProcessingT *_processing;$/;"	m	class:clicky::crouter
_processing	tools/click-pretty/click-pretty.cc	/^    const ProcessingT &_processing;$/;"	m	class:ElementsOutput	file:
_processing	tools/lib/processingt.hh	/^    Vector<int> _processing[2];$/;"	m	class:ProcessingT
_processing_code	apps/clicky/src/dwidget.hh	/^    String _processing_code;$/;"	m	class:clicky::delt
_prog	elements/ip/ipfilter.hh	/^	Classification::Wordwise::Program &_prog;$/;"	m	struct:IPFilter::Parser
_prog	elements/standard/classifier.hh	/^    Classification::Wordwise::Program _prog;$/;"	m	class:Classifier
_promisc	elements/bsdmodule/fromdevice.hh	/^    bool _promisc;$/;"	m	class:FromDevice
_promisc	elements/linuxmodule/anydevice.hh	/^    bool _promisc;$/;"	m	class:AnyDevice
_promisc	elements/ns/fromsimdevice.hh	/^  bool _promisc;$/;"	m	class:FromSimDevice
_proper	elements/userlevel/rawsocket.hh	/^  bool _proper;			\/\/ (PlanetLab only) use Proper to bind port$/;"	m	class:RawSocket
_proper	elements/userlevel/socket.hh	/^  bool _proper;			\/\/ (PlanetLab only) use Proper to bind port$/;"	m	class:Socket
_protocol	elements/userlevel/rawsocket.hh	/^  int _protocol;		\/\/ IP protocol to bind$/;"	m	class:RawSocket
_protocol	elements/userlevel/socket.hh	/^  int _protocol;		\/\/ for AF_INET, IPPROTO_TCP, IPPROTO_UDP, etc.$/;"	m	class:Socket
_protocolMinorVersion	apps/ClickController/ControlSocket.java	/^    private int _protocolMinorVersion;$/;"	f	class:ControlSocket	file:
_protocol_minor_version	apps/csclient/csclient.hh	/^  int _protocol_minor_version;$/;"	m	class:ControlSocketClient
_provided_driver_mask	tools/lib/elementmap.hh	/^    int _provided_driver_mask;$/;"	m	class:ElementMap
_provisions	tools/click-mkmindriver/click-mkmindriver.cc	/^    HashTable<String, int> _provisions;$/;"	m	class:Mindriver	file:
_proxied_errh	elements/userlevel/controlsocket.hh	/^    ErrorHandler *_proxied_errh;$/;"	m	class:ControlSocket
_proxied_handler	elements/userlevel/controlsocket.hh	/^    String _proxied_handler;$/;"	m	class:ControlSocket
_proxy	elements/userlevel/controlsocket.hh	/^    Element *_proxy;$/;"	m	class:ControlSocket
_ptable	apps/clicky/src/dstyle.hh	/^    HashTable<String, ref_ptr<dport_style> > _ptable;$/;"	m	class:clicky::dcss_set
_ptr	include/click/args.hh	/^	T *_ptr;$/;"	m	struct:Args::SlotT
_ptr	include/click/args.hh	/^	void *_ptr;$/;"	m	struct:Args::BytesSlot
_ptype	elements/standard/setpackettype.hh	/^    Packet::PacketType _ptype;$/;"	m	class:SetPacketType
_pull_cycles	elements/linuxmodule/todevice.hh	/^    click_cycles_t _pull_cycles;$/;"	m	class:ToDevice
_pulls	elements/linuxmodule/todevice.hh	/^    uint32_t _pulls;$/;"	m	class:ToDevice
_pulls	elements/userlevel/todevice.hh	/^    int _pulls;$/;"	m	class:ToDevice
_push_cycles	elements/linuxmodule/polldevice.hh	/^  click_cycles_t _push_cycles;$/;"	m	class:PollDevice
_push_eth	elements/wifi/wifidecap.hh	/^  bool _push_eth;$/;"	m	class:WifiDecap
_push_thread	elements/test/queuethreadtest.hh	/^    pthread_t _push_thread;$/;"	m	class:QueueThreadTest1
_pushes	elements/standard/ratedunqueue.hh	/^    uint32_t _pushes;$/;"	m	class:RatedUnqueue
_pvconn	elements/local/OpenFlow/RConn.hh	/^	struct pvconn *_pvconn;$/;"	m	class:RConn	typeref:struct:RConn::pvconn
_pvconn_name	elements/local/OpenFlow/RConn.hh	/^	char _pvconn_name[100];$/;"	m	class:RConn
_q	elements/linuxmodule/cpuqueue.hh	/^    Packet **_q;$/;"	m	struct:CPUQueue::__anon303
_q	elements/linuxmodule/cpuqueue.hh	/^  } _q[NUM_CLICK_CPUS];$/;"	m	class:CPUQueue	typeref:struct:CPUQueue::__anon303
_q	elements/linuxmodule/fromhost.hh	/^    } _q;$/;"	m	class:FromHost	typeref:union:FromHost::__anon311
_q	elements/linuxmodule/todevice.hh	/^    Packet *_q;$/;"	m	class:ToDevice
_q	elements/linuxmodule/touserdevice.hh	/^    Packet **	    _q;$/;"	m	class:ToUserDevice
_q	elements/standard/simplequeue.hh	/^    Packet* volatile * _q;$/;"	m	class:SimpleQueue
_q	elements/test/queueyanktest.hh	/^    SimpleQueue *_q;$/;"	m	class:QueueYankTest
_q	elements/userlevel/todevice.hh	/^    Packet *_q;$/;"	m	class:ToDevice
_q	include/click/dequeue.hh	/^	const DEQueue &_q;$/;"	m	struct:DEQueue::const_iterator
_q_expiry_j	elements/linuxmodule/todevice.hh	/^    click_jiffies_t _q_expiry_j;$/;"	m	class:ToDevice
_qhead	elements/standard/linkunqueue.hh	/^    Packet *_qhead;$/;"	m	class:LinkUnqueue
_qln_count	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	int _qln_count;$/;"	m	class:PFSchedFW
_qtail	elements/standard/linkunqueue.hh	/^    Packet *_qtail;$/;"	m	class:LinkUnqueue
_quantum	elements/standard/drr.hh	/^    int _quantum;   \/\/ Number of bytes to send per round.$/;"	m	class:DRRSched
_queries	elements/grid/floodinglocquerier.hh	/^  qmap _queries; \/\/ outstanding and cached query results.$/;"	m	class:FloodingLocQuerier
_query_seqs	elements/grid/floodinglocquerier.hh	/^  seq_map _query_seqs;$/;"	m	class:FloodingLocQuerier
_query_seqs	elements/grid/locqueryresponder.hh	/^  seq_map _query_seqs;$/;"	m	class:LocQueryResponder
_queue	elements/linuxmodule/fromdevice.hh	/^    Packet * volatile _queue[QSIZE+1];$/;"	m	class:FromDevice
_queue1	elements/aqm/pi.hh	/^    Storage *_queue1;$/;"	m	class:PI
_queue1	elements/aqm/red.hh	/^    Storage *_queue1;$/;"	m	class:RED
_queue_elements	elements/aqm/pi.hh	/^    Vector<Element *> _queue_elements;$/;"	m	class:PI
_queue_elements	elements/aqm/red.hh	/^    Vector<Element *> _queue_elements;$/;"	m	class:RED
_queuelen_threshold	elements/local/FlowNet/scheduler/CD_algorithms/CD_Threshold.hh	/^	uint32_t _queuelen_threshold;	$/;"	m	class:VcCDThreshold
_queues	elements/aqm/pi.hh	/^    Vector<Storage *> _queues;$/;"	m	class:PI
_queues	elements/aqm/red.hh	/^    Vector<Storage *> _queues;$/;"	m	class:RED
_queues	elements/standard/unqueue2.hh	/^    Vector<Storage *> _queues;$/;"	m	class:Unqueue2
_r	apps/clicky/src/crouter.hh	/^    RouterT *_r;$/;"	m	class:clicky::crouter
_r	include/click/string.hh	/^    mutable rep_t _r;		\/\/ mutable for c_str()$/;"	m	class:String
_r_slot	elements/linuxmodule/fromuserdevice.hh	/^    uint32_t _r_slot; \/\/ where we read from$/;"	m	class:FromUserDevice
_r_slot	elements/linuxmodule/touserdevice.hh	/^    uint32_t	    _r_slot;	\/\/ where we read from$/;"	m	class:ToUserDevice
_radius	elements/grid/grid.hh	/^  uint32_t _radius; \/\/ stored in network byte order$/;"	m	struct:grid_region
_radix	elements/ip/radixiplookup.hh	/^    Radix *_radix;$/;"	m	class:RadixIPLookup
_radix	elements/ipsec/radixipseclookup.hh	/^    Radix* _radix;$/;"	m	class:RadixIPsecLookup
_random_value	elements/aqm/pi.hh	/^    int _random_value;$/;"	m	class:PI
_random_value	elements/aqm/red.hh	/^    int _random_value;$/;"	m	class:RED
_range	elements/grid/filterbyrange.hh	/^  int _range; \/\/ in metres, negative meand don't filter$/;"	m	class:FilterByRange
_range_base	elements/ip/rangeiplookup.hh	/^    uint32_t *_range_base;$/;"	m	class:RangeIPLookup
_range_len	elements/ip/rangeiplookup.hh	/^    uint32_t *_range_len;$/;"	m	class:RangeIPLookup
_range_t	elements/ip/rangeiplookup.hh	/^    uint32_t *_range_t;$/;"	m	class:RangeIPLookup
_rate	elements/bsdmodule/fastudpsrc.hh	/^  GapRate _rate;$/;"	m	class:FastUDPSource
_rate	elements/linuxmodule/fasttcpflows.hh	/^  GapRate _rate;$/;"	m	class:FastTCPFlows
_rate	elements/linuxmodule/fastudpflows.hh	/^  GapRate _rate;$/;"	m	class:FastUDPFlows
_rate	elements/linuxmodule/fastudpsrc.hh	/^  GapRate _rate;$/;"	m	class:FastUDPSource
_rate	elements/linuxmodule/fastudpsrcip6.hh	/^  GapRate _rate;$/;"	m	class:FastUDPSourceIP6
_rate	elements/standard/bandwidthmeter.hh	/^  RateEWMA _rate;$/;"	m	class:BandwidthMeter
_rate	elements/standard/counter.hh	/^    rate_t _rate;$/;"	m	class:Counter
_rate	elements/standard/shaper.hh	/^    GapRate _rate;$/;"	m	class:Shaper
_rate	elements/wifi/probetxrate.hh	/^    int _rate;$/;"	m	struct:ProbeTXRate::tx_result
_rate	elements/wifi/rxstats.hh	/^    int _rate;$/;"	m	class:RXStats::DstInfo
_rate	elements/wifi/settxrate.hh	/^  int _rate;$/;"	m	class:SetTXRate
_rate	include/click/gaprate.hh	/^    unsigned _rate;		\/\/ desired rate$/;"	m	class:GapRate
_rate	include/click/tokenbucket.hh	/^    rate_type _rate;$/;"	m	class:TokenBucketX
_rate_limited	elements/bsdmodule/fastudpsrc.hh	/^  bool _rate_limited; \/\/ obey _rate? rather than as fast as possible.$/;"	m	class:FastUDPSource
_rate_limited	elements/linuxmodule/fasttcpflows.hh	/^  bool _rate_limited;$/;"	m	class:FastTCPFlows
_rate_limited	elements/linuxmodule/fastudpflows.hh	/^  bool _rate_limited;$/;"	m	class:FastUDPFlows
_rate_limited	elements/linuxmodule/fastudpsrc.hh	/^  bool _rate_limited; \/\/ obey _rate? rather than as fast as possible.$/;"	m	class:FastUDPSource
_rate_limited	elements/linuxmodule/fastudpsrcip6.hh	/^  bool _rate_limited; \/\/ obey _rate? rather than as fast as possible.$/;"	m	class:FastUDPSourceIP6
_rate_window	elements/wifi/probetxrate.hh	/^  Timestamp _rate_window;$/;"	m	class:ProbeTXRate
_rate_window_ms	elements/wifi/probetxrate.hh	/^  int _rate_window_ms;$/;"	m	class:ProbeTXRate
_rates	elements/wifi/autoratefallback.hh	/^    Vector<int> _rates;$/;"	m	struct:AutoRateFallback::DstInfo
_rates	elements/wifi/availablerates.hh	/^    Vector<int> _rates;$/;"	m	class:AvailableRates::DstInfo
_rates	elements/wifi/madwifirate.hh	/^    Vector<int> _rates;$/;"	m	struct:MadwifiRate::DstInfo
_rates	elements/wifi/probetxrate.hh	/^    Vector<int> _rates;$/;"	m	struct:ProbeTXRate::DstInfo
_rates	elements/wifi/station/beaconscanner.hh	/^    Vector<int> _rates;$/;"	m	class:BeaconScanner::wap
_ratio	elements/ip/ipratemon.hh	/^  unsigned int _ratio;		\/\/ inspect 1 in how many packets?$/;"	m	class:IPRateMonitor
_rc4	elements/wifi/wepdecap.hh	/^  struct rc4_state _rc4;$/;"	m	class:WepDecap	typeref:struct:WepDecap::rc4_state
_rc4	elements/wifi/wepencap.hh	/^  struct rc4_state _rc4;$/;"	m	class:WepEncap	typeref:struct:WepEncap::rc4_state
_rcvbuf	elements/userlevel/socket.hh	/^  int _rcvbuf;			\/\/ maximum socket receive buffer in bytes$/;"	m	class:Socket
_rd	elements/userlevel/ipflowrawsockets.hh	/^	int _wd, _rd;$/;"	m	class:IPFlowRawSockets::Flow
_reached	include/click/routervisitor.hh	/^    Bitvector _reached;$/;"	m	class:ElementTracker
_read_count	elements/linuxmodule/touserdevice.hh	/^    ulong           _read_count;$/;"	m	class:ToUserDevice
_read_db	elements/ip/ipnameinfo.cc	/^    bool _read_db;$/;"	m	class:__anon323::ServicesNameDB	file:
_read_file_section	test/testie	/^sub _read_file_section ($$$$) {$/;"	s
_read_hook	include/click/handler.hh	/^    } _read_hook;$/;"	m	class:Handler	typeref:union:Handler::__anon469
_read_script_section	test/testie	/^sub _read_script_section ($$$) {$/;"	s
_read_select_fd_set	include/click/selectset.hh	/^    fd_set _read_select_fd_set;$/;"	m	class:SelectSet
_read_status	include/click/args.hh	/^    mutable bool _read_status;$/;"	m	struct:ArgContext
_read_text	test/testie	/^sub _read_text ($) {$/;"	s
_read_text_into	test/testie	/^sub _read_text_into ($$) {$/;"	s
_read_user_data	include/click/handler.hh	/^    void *_read_user_data;$/;"	m	class:Handler
_readers	elements/bsdmodule/fromdevice.hh	/^    unsigned _readers;		\/\/ how many readers registered for this?$/;"	m	class:FromDevice
_reap_time	elements/ip/ipreassembler.hh	/^    int _reap_time;$/;"	m	class:IPReassembler
_reason_drops	elements/ethernet/checkarpheader.hh	/^  atomic_uint32_t *_reason_drops;$/;"	m	class:CheckARPHeader
_reason_drops	elements/icmp/checkicmpheader.hh	/^  atomic_uint32_t *_reason_drops;$/;"	m	class:CheckICMPHeader
_reason_drops	elements/ip/checkipheader.hh	/^  atomic_uint32_t *_reason_drops;$/;"	m	class:CheckIPHeader
_reason_drops	elements/tcpudp/checktcpheader.hh	/^  atomic_uint32_t *_reason_drops;$/;"	m	class:CheckTCPHeader
_reason_drops	elements/tcpudp/checkudpheader.hh	/^  atomic_uint32_t *_reason_drops;$/;"	m	class:CheckUDPHeader
_receiver	elements/icmp/icmpsendpings.hh	/^    ReceiverInfo *_receiver;$/;"	m	class:ICMPPingSource
_record	elements/analysis/fromflandump.hh	/^    off_t _record;$/;"	m	class:FromFlanDump
_record_size	elements/analysis/fromflandump.hh	/^	int _record_size;$/;"	m	class:FromFlanDump::FlanFile
_rects	apps/clicky/src/wdiagram.hh	/^    rect_search<dwidget> _rects;$/;"	m	class:clicky::cdiagram
_recycle_allocated	linuxmodule/skbmgr.cc	/^  int _recycle_allocated;$/;"	m	class:RecycledSkbPool	file:
_recycle_freed	linuxmodule/skbmgr.cc	/^  int _recycle_freed;$/;"	m	class:RecycledSkbPool	file:
_refcount	elements/ip/iprwpattern.hh	/^    int _refcount;$/;"	m	class:IPRewriterPattern
_refcount	include/click/bighashmap_arena.hh	/^    uint32_t _refcount;$/;"	m	class:HashMap_Arena
_refcount	include/click/master.hh	/^    int _refcount;$/;"	m	class:Master
_refcount	include/click/router.hh	/^    atomic_uint32_t _refcount;$/;"	m	class:Router
_refcount	tools/lib/landmarkt.hh	/^    int _refcount;$/;"	m	class:LandmarkSetT
_relation	tools/lib/runparse.hh	/^    HashTable<Pair<ElementClassT *, ElementClassT *>, int> _relation;$/;"	m	class:RouterUnparserT
_relt	apps/clicky/src/wdiagram.hh	/^    delt *_relt;$/;"	m	class:clicky::cdiagram
_remote	elements/userlevel/socket.hh	/^  union { struct sockaddr_in in; struct sockaddr_un un; } _remote;$/;"	m	class:Socket	typeref:union:Socket::__anon193
_remote_ip	elements/userlevel/socket.hh	/^  IPAddress _remote_ip;		\/\/ for AF_INET, address to connect() to or sendto()$/;"	m	class:Socket
_remote_len	elements/userlevel/socket.hh	/^  socklen_t _remote_len;$/;"	m	class:Socket
_remote_pathname	elements/userlevel/socket.hh	/^  String _remote_pathname;	\/\/ for AF_UNIX, file to sendto()$/;"	m	class:Socket
_remote_port	elements/userlevel/socket.hh	/^  uint16_t _remote_port;	\/\/ for AF_INET, port to connect() to or sendto()$/;"	m	class:Socket
_rep	apps/clicky/src/permstr.hh	/^    const char *_rep;$/;"	m	class:PermString
_rep	include/click/hashcontainer.hh	/^    HashContainer_rep<T, A> _rep;$/;"	m	class:HashContainer
_rep	include/click/hashtable.hh	/^    rep_type _rep;$/;"	m	class:HashTable
_rep	include/click/hashtable.hh	/^    typename HashTable<Pair<K, V> >::rep_type::const_iterator _rep;$/;"	m	class:HashTable_const_iterator
_rep	include/click/hashtable.hh	/^    typename HashTable<T>::rep_type::const_iterator _rep;$/;"	m	class:HashTable_const_iterator
_repl_errh	elements/grid/gridprobereplyreceiver.hh	/^  ErrorHandler *_repl_errh;$/;"	m	class:GridProbeReplyReceiver
_reply_anno	elements/ip/iprwmapping.hh	/^    uint8_t _reply_anno;$/;"	m	class:IPRewriterFlow
_requirements	include/click/lexer.hh	/^    Vector<String> _requirements;$/;"	m	class:Lexer
_requirements	include/click/router.hh	/^    Vector<String> _requirements;$/;"	m	class:Router
_requirements	tools/click-mkmindriver/click-mkmindriver.cc	/^    HashTable<String, int> _requirements;$/;"	m	class:Mindriver	file:
_requirements	tools/lib/routert.hh	/^    Vector<String> _requirements;$/;"	m	class:RouterT
_reschedule	elements/test/handlertask.hh	/^    bool _reschedule;$/;"	m	class:HandlerTask
_resettime	elements/ip/ipratemon.hh	/^  long unsigned int _resettime;     \/\/ time of last reset$/;"	m	class:IPRateMonitor
_resolved_router	apps/clicky/src/dwidget.hh	/^    RouterT *_resolved_router;$/;"	m	class:clicky::delt
_resolved_type	tools/lib/elementt.hh	/^    mutable ElementClassT *_resolved_type;$/;"	m	struct:ElementT
_resolved_type_status	tools/lib/elementt.hh	/^    mutable short _resolved_type_status;$/;"	m	struct:ElementT
_results	elements/wifi/probetxrate.hh	/^    DEQueue<tx_result> _results;$/;"	m	struct:ProbeTXRate::DstInfo
_results	lib/router.cc	/^    Vector<Element *> &_results;$/;"	m	class:__anon512::ElementFilterRouterVisitor	file:
_ret_type	tools/click-devirtualize/cxxclass.hh	/^  String _ret_type;$/;"	m	class:CxxFunction
_retries	elements/userlevel/chattersocket.hh	/^  int _retries;$/;"	m	class:ChatterSocket
_retries	elements/userlevel/controlsocket.hh	/^    int _retries;$/;"	m	class:ControlSocket
_retries	elements/wifi/madwifirate.hh	/^    int _retries;$/;"	m	struct:MadwifiRate::DstInfo
_retry_timer	elements/userlevel/chattersocket.hh	/^  Timer *_retry_timer;$/;"	m	class:ChatterSocket
_retry_timer	elements/userlevel/controlsocket.hh	/^    Timer *_retry_timer;$/;"	m	class:ControlSocket
_rev_bcast_stats	elements/grid/linkstat.hh	/^  ReverseProbeMap _rev_bcast_stats;$/;"	m	class:LinkStat
_rev_weight	elements/standard/compblock.hh	/^  int _rev_weight;$/;"	m	class:CompareBlock
_reverse	elements/analysis/aggregateipflows.hh	/^	bool _reverse : 1;$/;"	m	struct:AggregateIPFlows::FlowInfo
_reverse	elements/test/sorttest.hh	/^    bool _reverse;$/;"	m	class:SortTest
_rm	elements/ip/ipratemon.hh	/^    IPRateMonitor *_rm;             \/\/ XXX: this sucks$/;"	m	struct:IPRateMonitor::Stats
_root	elements/analysis/aggcounter.hh	/^    Node *_root;$/;"	m	class:AggregateCounter
_root	elements/analysis/anonipaddr.hh	/^    Node *_root;$/;"	m	class:AnonymizeIPAddr
_root	elements/etherswitch/bridgemessage.hh	/^  uint64_t _root;$/;"	m	class:BridgeMessage
_root_element	include/click/router.hh	/^    Element* _root_element;$/;"	m	class:Router
_route	apps/clicky/src/dwidget.hh	/^    Vector<point> _route;$/;"	m	class:clicky::dconn
_route_index	elements/ipsec/radixipseclookup.hh	/^    int32_t _route_index;$/;"	m	class:RadixIPsecLookup::Radix
_router	apps/clicky/src/crouter.hh	/^	RouterT *_router;$/;"	m	struct:clicky::crouter::reachable_match_t
_router	include/click/element.hh	/^    Router* _router;$/;"	m	class:Element
_router	include/click/ino.hh	/^    Router* _router;$/;"	m	class:ClickIno
_router	tools/click-align/click-align.cc	/^    RouterT *_router;$/;"	m	struct:RouterAlign	file:
_router	tools/click-devirtualize/signature.hh	/^  const RouterT *_router;$/;"	m	class:Signatures
_router	tools/click-devirtualize/specializer.hh	/^  RouterT *_router;$/;"	m	class:Specializer
_router	tools/click-pretty/click-pretty.cc	/^    RouterT *_router;$/;"	m	class:ElementsOutput	file:
_router	tools/click-xform/adjacency.hh	/^  RouterT *_router;$/;"	m	class:AdjacencyMatrix
_router	tools/click2xml/xml2click.hh	/^    RouterT *_router;$/;"	m	struct:CxConfig
_router	tools/lib/lexert.hh	/^    RouterT *_router;$/;"	m	class:LexerT
_router	tools/lib/processingt.hh	/^    RouterT *_router;$/;"	m	class:ProcessingT
_router_ccss	apps/clicky/src/crouter.hh	/^    bool _router_ccss;$/;"	m	class:clicky::crouter
_router_name	apps/clicky/src/crouter.hh	/^	String _router_name;$/;"	m	struct:clicky::crouter::reachable_match_t
_router_name	tools/lib/processingt.hh	/^    String _router_name;$/;"	m	class:ProcessingT
_routers	apps/clicky/src/scopechain.hh	/^    Vector<RouterT *> _routers;$/;"	m	class:ScopeChain
_routers	include/click/master.hh	/^    Router *_routers;$/;"	m	class:Master
_rover	elements/ip6/addresstranslator.hh	/^  Mapping *_rover;$/;"	m	class:AddressTranslator
_rover2	elements/ip6/addresstranslator.hh	/^  Mapping *_rover2;$/;"	m	class:AddressTranslator
_rq	elements/userlevel/rawsocket.hh	/^  WritablePacket *_rq;		\/\/ queue to receive pulled packets$/;"	m	class:RawSocket
_rq	elements/userlevel/socket.hh	/^  WritablePacket *_rq;		\/\/ queue to receive pulled packets$/;"	m	class:Socket
_rreq_expire_timer	elements/grid/dsrroutetable.hh	/^  Timer _rreq_expire_timer;$/;"	m	class:DSRRouteTable
_rreq_id	elements/grid/dsrroutetable.hh	/^  u_int16_t _rreq_id;$/;"	m	class:DSRRouteTable
_rreq_issue_timer	elements/grid/dsrroutetable.hh	/^  Timer _rreq_issue_timer;$/;"	m	class:DSRRouteTable
_rreqs_to_foward	elements/grid/dsrroutetable.hh	/^  RequestsToForward _rreqs_to_foward;$/;"	m	class:DSRRouteTable
_rssi	elements/wifi/station/beaconscanner.hh	/^    int _rssi;$/;"	m	class:BeaconScanner::wap
_rt	elements/grid/gridgatewayinfo.hh	/^  class GridGenericRouteTable *_rt;$/;"	m	class:GridGatewayInfo	typeref:class:GridGatewayInfo::GridGenericRouteTable
_rt	elements/grid/lirmetric.hh	/^  GridGenericRouteTable *_rt;$/;"	m	class:LIRMetric
_rt	elements/grid/lookupgeogridroute.hh	/^  GridGenericRouteTable *_rt;$/;"	m	class:LookupGeographicGridRoute
_rt_empty_head	elements/ip/directiplookup.hh	/^	int _rt_empty_head;$/;"	m	struct:DirectIPLookup::Table
_rt_hashtbl	elements/ip/directiplookup.hh	/^	int *_rt_hashtbl; \/\/ [PREF_HASHSIZE];$/;"	m	struct:DirectIPLookup::Table
_rtable	elements/ip/directiplookup.hh	/^	CleartextEntry *_rtable;$/;"	m	struct:DirectIPLookup::Table
_rtable	elements/wifi/ap/associationresponder.hh	/^  class AvailableRates *_rtable;$/;"	m	class:AssociationResponder	typeref:class:AssociationResponder::AvailableRates
_rtable	elements/wifi/ap/beaconsource.hh	/^  class AvailableRates *_rtable;$/;"	m	class:BeaconSource	typeref:class:BeaconSource::AvailableRates
_rtable	elements/wifi/ap/proberesponder.hh	/^  class AvailableRates *_rtable;$/;"	m	class:ProbeResponder	typeref:class:ProbeResponder::AvailableRates
_rtable	elements/wifi/autoratefallback.hh	/^  AvailableRates *_rtable;$/;"	m	class:AutoRateFallback
_rtable	elements/wifi/availablerates.hh	/^  RTable _rtable;$/;"	m	class:AvailableRates
_rtable	elements/wifi/madwifirate.hh	/^  AvailableRates *_rtable;$/;"	m	class:MadwifiRate
_rtable	elements/wifi/probetxrate.hh	/^  AvailableRates *_rtable;$/;"	m	class:ProbeTXRate
_rtable	elements/wifi/station/associationrequester.hh	/^  class AvailableRates *_rtable;$/;"	m	class:AssociationRequester	typeref:class:AssociationRequester::AvailableRates
_rtable	elements/wifi/station/beaconscanner.hh	/^  AvailableRates *_rtable;$/;"	m	class:BeaconScanner
_rtable	elements/wifi/station/proberequester.hh	/^  class AvailableRates *_rtable;$/;"	m	class:ProbeRequester	typeref:class:ProbeRequester::AvailableRates
_rtable_capacity	elements/ip/directiplookup.hh	/^	uint32_t _rtable_capacity;$/;"	m	struct:DirectIPLookup::Table
_rtable_size	elements/ip/directiplookup.hh	/^	uint32_t _rtable_size;$/;"	m	struct:DirectIPLookup::Table
_rtes	elements/grid/dsdvroutetable.hh	/^  RTable _rtes;$/;"	m	class:DSDVRouteTable
_rtes	elements/grid/gridroutetable.hh	/^  RTable _rtes;$/;"	m	class:GridRouteTable
_rtes	elements/grid/lookuplocalgridroute.hh	/^  GridGenericRouteTable *_rtes;$/;"	m	class:LookupLocalGridRoute
_rtes	elements/grid/lookuplocalgridroute2.hh	/^  GridGenericRouteTable *_rtes;$/;"	m	class:LookupLocalGridRoute2
_rtes	elements/grid/updateroutes.hh	/^  FarTable _rtes; \/\/ immediate and multihop nbrs$/;"	m	class:UpdateGridRoutes
_rts	elements/wifi/setrts.hh	/^  bool _rts;$/;"	m	class:SetRTS
_run_args	elements/standard/script.hh	/^    String _run_args;$/;"	m	class:Script
_run_handler_name	elements/standard/script.hh	/^    String _run_handler_name;$/;"	m	class:Script
_run_op	elements/standard/script.hh	/^    int _run_op;$/;"	m	class:Script
_runcount	include/click/router.hh	/^    atomic_uint32_t _runcount;$/;"	m	class:Router
_running	include/click/router.hh	/^    volatile int _running;$/;"	m	class:Router
_running_processor	include/click/routerthread.hh	/^    click_processor_t _running_processor;$/;"	m	class:RouterThread
_runs	elements/linuxmodule/fromdevice.hh	/^    unsigned _runs;$/;"	m	class:FromDevice
_runs	elements/linuxmodule/todevice.hh	/^    uint32_t _runs;$/;"	m	class:ToDevice
_runs	elements/standard/ratedunqueue.hh	/^    uint32_t _runs;$/;"	m	class:RatedUnqueue
_runs	include/click/task.hh	/^    unsigned _runs;$/;"	m	class:Task
_rw	apps/clicky/src/wdiagram.hh	/^    wmain *_rw;$/;"	m	class:clicky::wdiagram
_rw	apps/clicky/src/whandler.hh	/^    wmain *_rw;$/;"	m	struct:clicky::whandler
_s	apps/clicky/src/dstyle.hh	/^    Vector<dcss *> _s;$/;"	m	class:clicky::dcss_set
_s	include/click/lexer.hh	/^    String _s;$/;"	m	class:Lexeme
_s	include/click/straccum.hh	/^    unsigned char *_s;$/;"	m	class:StringAccum
_s	tools/lib/lexert.hh	/^    String _s;$/;"	m	class:Lexeme
_s_alive	elements/tcpudp/snooptcp.hh	/^  bool _s_alive : 1;$/;"	m	struct:SnoopTCP::PCB
_s_cache	elements/tcpudp/snooptcp.hh	/^  SCacheEntry _s_cache[S_CACHE_SIZE];$/;"	m	struct:SnoopTCP::PCB
_s_exists	elements/tcpudp/snooptcp.hh	/^  bool _s_exists : 1;$/;"	m	struct:SnoopTCP::PCB
_s_max	elements/tcpudp/snooptcp.hh	/^  unsigned _s_max;		\/\/ first as-yet-unsent data SEQ #$/;"	m	struct:SnoopTCP::PCB
_s_una	elements/tcpudp/snooptcp.hh	/^  unsigned _s_una;		\/\/ first unacked SEQ #$/;"	m	struct:SnoopTCP::PCB
_sa	elements/analysis/toipsumdump.hh	/^    StringAccum _sa;$/;"	m	class:ToIPSummaryDump
_sa	elements/test/confparsetest.cc	/^    StringAccum _sa;$/;"	m	class:__anon404::RecordErrorHandler	file:
_sa	linuxmodule/clickfs.cc	/^    StringAccum _sa;$/;"	m	class:__anon523::ClickfsHandlerErrorHandler	file:
_sa	tools/click-pretty/click-pretty.cc	/^    StringAccum _sa;$/;"	m	class:ElementsOutput	file:
_sa_table	elements/ipsec/ipsecroutetable.hh	/^    SATable _sa_table;$/;"	m	class:IPsecRouteTable
_saddr	elements/ip/iprwpattern.hh	/^    IPAddress _saddr;$/;"	m	class:IPRewriterPattern
_saddr	elements/tcpudp/dynudpipencap.hh	/^  struct in_addr _saddr;$/;"	m	class:DynamicUDPIPEncap	typeref:struct:DynamicUDPIPEncap::in_addr
_saddr	elements/tcpudp/udpip6encap.hh	/^    struct click_in6_addr _saddr;$/;"	m	class:UDPIP6Encap	typeref:struct:UDPIP6Encap::click_in6_addr
_saddr	elements/tcpudp/udpipencap.hh	/^    struct in_addr _saddr;$/;"	m	class:UDPIPEncap	typeref:struct:UDPIPEncap::in_addr
_saddr	include/click/ip6flowid.hh	/^  IP6Address _saddr;$/;"	m	class:IP6FlowID
_saddr	include/click/ipflowid.hh	/^    IPAddress _saddr;$/;"	m	class:IPFlowID
_safe_length	elements/standard/classification.hh	/^    unsigned _safe_length;$/;"	m	class:Classification::Wordwise::CompressedProgram
_safe_length	elements/standard/classification.hh	/^    unsigned _safe_length;$/;"	m	class:Classification::Wordwise::Program
_same_first	elements/ip/iprwpattern.hh	/^    bool _same_first;$/;"	m	class:IPRewriterPattern
_samples	apps/clicky/src/ddecor.hh	/^    std::deque<sample> _samples;$/;"	m	class:clicky::dactivity_decor
_sampling_prob	elements/analysis/fromcapdump.hh	/^    uint32_t _sampling_prob;$/;"	m	class:FromCapDump
_sampling_prob	elements/analysis/fromdagdump.hh	/^    unsigned _sampling_prob;$/;"	m	class:FromDAGDump
_sampling_prob	elements/analysis/fromipsumdump.hh	/^    uint32_t _sampling_prob;$/;"	m	class:FromIPSummaryDump
_sampling_prob	elements/analysis/fromnlanrdump.hh	/^    unsigned _sampling_prob;$/;"	m	class:FromNLANRDump
_sampling_prob	elements/analysis/fromtcpdump.hh	/^    uint32_t _sampling_prob;$/;"	m	class:FromTcpdump
_sampling_prob	elements/standard/randomsample.hh	/^    uint32_t _sampling_prob;		\/\/ out of (1<<SAMPLING_SHIFT)$/;"	m	class:RandomSample
_sampling_prob	elements/userlevel/fromdump.hh	/^    unsigned _sampling_prob;$/;"	m	class:FromDump
_sanity_timer	elements/grid/updateroutes.hh	/^  Timer _sanity_timer;$/;"	m	class:UpdateGridRoutes
_savefile	apps/clicky/src/wmain.hh	/^    String _savefile;$/;"	m	class:clicky::wmain
_scale	apps/clicky/src/wdiagram.hh	/^    double _scale;$/;"	m	class:clicky::wdiagram
_scale_step	apps/clicky/src/wdiagram.hh	/^    int _scale_step;$/;"	m	class:clicky::wdiagram
_schedpos	include/click/task.hh	/^    int _schedpos;$/;"	m	class:Task
_schedpos1	include/click/timer.hh	/^    int _schedpos1;$/;"	m	class:Timer
_scheduling_algorithms	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	Vector<VcSchedule *>			_scheduling_algorithms;$/;"	m	class:PFSchedFW
_scheduling_outer_algorithms	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	Vector<VcScheduleOuter *>		_scheduling_outer_algorithms;$/;"	m	class:PFSchedFW
_schinfo	elements/linuxmodule/fromdevice.hh	/^    Schinfo _schinfo[QSIZE+1];$/;"	m	class:FromDevice
_scope	lib/lexer.cc	/^  VariableEnvironment _scope;$/;"	m	class:Lexer::Compound	file:
_scope	tools/lib/processingt.hh	/^    VariableEnvironment _scope;$/;"	m	class:ProcessingT
_scope	tools/lib/routert.hh	/^    VariableEnvironment _scope;$/;"	m	class:RouterT
_scope_cookie	tools/lib/routert.hh	/^    int _scope_cookie;$/;"	m	class:RouterT
_scope_order_error	tools/lib/routert.hh	/^    bool _scope_order_error;$/;"	m	class:RouterT
_scopes	apps/clicky/src/scopechain.hh	/^    Vector<VariableEnvironment *> _scopes;$/;"	m	class:ScopeChain
_search_op	include/click/notifier.hh	/^    SearchOp _search_op;$/;"	m	class:Notifier
_sec_count	include/click/gaprate.hh	/^    int _sec_count;		\/\/ number of updates this second so far$/;"	m	class:GapRate
_seed	apps/clicky/src/crouter.hh	/^	Bitvector _seed;$/;"	m	struct:clicky::crouter::reachable_match_t
_select_lock	include/click/selectset.hh	/^    SimpleSpinlock _select_lock;$/;"	m	class:SelectSet
_select_processor	include/click/selectset.hh	/^    click_processor_t _select_processor;$/;"	m	class:SelectSet
_selectedHandler	apps/ClickController/ClickController.java	/^    private ControlSocket.HandlerInfo _selectedHandler;$/;"	f	class:ClickController	file:
_selected_calls	elements/userlevel/kerneltun.hh	/^    click_uint_large_t _selected_calls;$/;"	m	class:KernelTun
_selected_driver	apps/clicky/src/crouter.hh	/^    int _selected_driver;$/;"	m	class:clicky::crouter
_selector	apps/clicky/src/dstyle.hh	/^    dcss_selector _selector;$/;"	m	class:clicky::dcss
_selector_index	apps/clicky/src/dstyle.hh	/^    unsigned _selector_index;$/;"	m	class:clicky::dcss
_selector_index	apps/clicky/src/dstyle.hh	/^    unsigned _selector_index;$/;"	m	class:clicky::dcss_set
_selects	include/click/routerthread.hh	/^    SelectSet _selects;$/;"	m	class:RouterThread
_self_cycles	include/click/element.hh	/^    click_cycles_t _self_cycles;	\/\/ Cycles spent in self and children.$/;"	m	class:Element
_selinfo	include/click/selectset.hh	/^    Vector<SelectorInfo> _selinfo;$/;"	m	class:SelectSet
_send_first	elements/grid/linktester.hh	/^  bool _send_first;$/;"	m	class:LinkTester
_send_tc_msg	elements/etherswitch/spantree.hh	/^  bool _send_tc_msg;		\/\/ If true, tcm should be sent to root port.$/;"	m	class:EtherSpanTree
_send_time	elements/grid/linktester.hh	/^  unsigned int _send_time;     \/\/ length of unicast sending period, milliseconds$/;"	m	class:LinkTester
_send_timer	elements/grid/linkstat.hh	/^  Timer *_send_timer;$/;"	m	class:LinkStat
_sendbuffer_check_routes	elements/grid/dsrroutetable.hh	/^  bool _sendbuffer_check_routes;$/;"	m	class:DSRRouteTable
_sendbuffer_map	elements/grid/dsrroutetable.hh	/^  SBMap _sendbuffer_map;$/;"	m	class:DSRRouteTable
_sendbuffer_timer	elements/grid/dsrroutetable.hh	/^  Timer _sendbuffer_timer;$/;"	m	class:DSRRouteTable
_sent_all_fins	elements/linuxmodule/fasttcpflows.hh	/^  bool _sent_all_fins;$/;"	m	class:FastTCPFlows
_sep	tools/click-pretty/click-pretty.cc	/^    String _sep;$/;"	m	class:ElementsOutput	file:
_seq	elements/grid/linkstat.hh	/^  unsigned int _seq;$/;"	m	class:LinkStat
_seq	elements/grid/pep.hh	/^  int _seq;$/;"	m	class:PEP
_seq	elements/grid/regionpep.hh	/^  int _seq;$/;"	m	class:EstimateRouterRegion
_seq	elements/wifi/linktable.hh	/^    uint32_t _seq;$/;"	m	class:LinkTable::Link
_seq	elements/wifi/linktable.hh	/^    uint32_t _seq;$/;"	m	class:LinkTable::LinkInfo
_seq	elements/wifi/wifiseq.hh	/^  u_int32_t _seq;$/;"	m	class:WifiSeq
_seq_delay	elements/grid/gridroutetable.hh	/^  unsigned int _seq_delay;$/;"	m	class:GridRouteTable
_seq_history	elements/grid/dsdvroutetable.hh	/^  HashMap<IPAddress, DEQueue<unsigned> > _seq_history;$/;"	m	class:DSDVRouteTable
_seq_no	elements/grid/dsdvroutetable.hh	/^  unsigned int _seq_no;       \/\/ latest sequence number for this node's route entry$/;"	m	class:DSDVRouteTable
_seq_no	elements/grid/gridgenericrt.hh	/^    unsigned int         _seq_no;$/;"	m	struct:GridGenericRouteTable::RouteEntry
_seq_no	elements/grid/gridlocationinfo.hh	/^  unsigned int _seq_no;$/;"	m	class:GridLocationInfo
_seq_no	elements/grid/gridlocationinfo2.hh	/^  unsigned int _seq_no;$/;"	m	class:GridLocationInfo2
_seq_no	elements/grid/gridroutetable.hh	/^    unsigned int _seq_no;$/;"	m	class:GridRouteTable::RTEntry
_seq_no	elements/grid/gridroutetable.hh	/^  unsigned int _seq_no;$/;"	m	class:GridRouteTable
_seq_no	elements/grid/updateroutes.hh	/^  unsigned int _seq_no;$/;"	m	class:UpdateGridRoutes
_seqno	elements/grid/incseqno.hh	/^  uint32_t _seqno;$/;"	m	class:IncrementSeqNo
_sequential	elements/ip/iprwpattern.hh	/^    bool _sequential;$/;"	m	class:IPRewriterPattern
_serial_num	elements/local/OpenFlow/datapath.hh	/^	char _serial_num[SERIAL_NUM_LEN];$/;"	m	class:Datapath
_shape_algorithm	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	String _shape_algorithm;$/;"	m	class:PFShapeFW
_shaper_algorithms	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	Vector<VcBWShape *>			_shaper_algorithms;$/;"	m	class:PFShapeFW
_shell	test/testie	/^sub _shell ($$$$$) {$/;"	s
_shell_split	test/testie	/^sub _shell_split (\\@$\\@$$) {$/;"	s
_shift	elements/analysis/aggregateip.hh	/^    uint32_t _shift;$/;"	m	class:AggregateIP
_shift	elements/wifi/wifiseq.hh	/^  u_int32_t _shift;$/;"	m	class:WifiSeq
_shift	tools/click-align/alignclass.hh	/^  int _shift;$/;"	m	class:ShifterAligner
_should_rewrite	tools/click-devirtualize/cxxclass.hh	/^  Vector<int> _should_rewrite;$/;"	m	class:CxxClass
_show_list	apps/clicky/src/wmain.hh	/^    bool _show_list;$/;"	m	class:clicky::wmain
_show_toolbar	apps/clicky/src/wmain.hh	/^    bool _show_toolbar;$/;"	m	class:clicky::wmain
_sig_dispatching	include/click/master.hh	/^    sigset_t _sig_dispatching;$/;"	m	class:Master
_sigid	tools/click-devirtualize/signature.hh	/^  Vector<int> _sigid;$/;"	m	class:Signatures
_siginfo	include/click/master.hh	/^    SignalInfo *_siginfo;$/;"	m	class:Master
_signal	elements/analysis/toipflowdumps.hh	/^    NotifierSignal _signal;$/;"	m	class:ToIPFlowDumps
_signal	elements/analysis/toipsumdump.hh	/^    NotifierSignal _signal;$/;"	m	class:ToIPSummaryDump
_signal	elements/bsdmodule/todevice.hh	/^  NotifierSignal _signal;$/;"	m	class:ToDevice
_signal	elements/linuxmodule/todevice.hh	/^    NotifierSignal _signal;$/;"	m	class:ToDevice
_signal	elements/linuxmodule/touserdevice.hh	/^    NotifierSignal  _signal;$/;"	m	class:ToUserDevice
_signal	elements/ns/tosimdevice.hh	/^    NotifierSignal _signal;$/;"	m	class:ToSimDevice
_signal	elements/standard/delayunqueue.hh	/^    NotifierSignal _signal;$/;"	m	class:DelayUnqueue
_signal	elements/standard/discard.hh	/^    NotifierSignal _signal;$/;"	m	class:Discard
_signal	elements/standard/linkunqueue.hh	/^    NotifierSignal _signal;$/;"	m	class:LinkUnqueue
_signal	elements/standard/ratedunqueue.hh	/^    NotifierSignal _signal;$/;"	m	class:RatedUnqueue
_signal	elements/standard/stridesched.hh	/^	NotifierSignal _signal;$/;"	m	struct:StrideSched::Client
_signal	elements/standard/timedunqueue.hh	/^    NotifierSignal _signal;$/;"	m	class:TimedUnqueue
_signal	elements/standard/unqueue.hh	/^    NotifierSignal _signal;$/;"	m	class:Unqueue
_signal	elements/standard/unqueue2.hh	/^    NotifierSignal _signal;$/;"	m	class:Unqueue2
_signal	elements/test/comparepackets.hh	/^    NotifierSignal _signal[2];$/;"	m	class:ComparePackets
_signal	elements/test/notifierdebug.hh	/^    NotifierSignal _signal;$/;"	m	class:NotifierDebug
_signal	elements/test/queuethreadtest.hh	/^    NotifierSignal _signal;$/;"	m	class:QueueThreadTest2
_signal	elements/userlevel/ipflowrawsockets.hh	/^    NotifierSignal _signal;$/;"	m	class:IPFlowRawSockets
_signal	elements/userlevel/kerneltun.hh	/^    NotifierSignal _signal;$/;"	m	class:KernelTun
_signal	elements/userlevel/rawsocket.hh	/^  NotifierSignal _signal;	\/\/ packet is available to pull()$/;"	m	class:RawSocket
_signal	elements/userlevel/socket.hh	/^  NotifierSignal _signal;	\/\/ packet is available to pull()$/;"	m	class:Socket
_signal	elements/userlevel/todevice.hh	/^    NotifierSignal _signal;$/;"	m	class:ToDevice
_signal	elements/userlevel/todump.hh	/^    NotifierSignal _signal;$/;"	m	class:ToDump
_signal	elements/wifi/rxstats.hh	/^    int _signal;$/;"	m	class:RXStats::DstInfo
_signal	include/click/notifier.hh	/^    NotifierSignal _signal;$/;"	m	class:Notifier
_signal	lib/notifier.cc	/^    NotifierSignal _signal;$/;"	m	class:__anon519::NotifierRouterVisitor	file:
_signal_lock	include/click/master.hh	/^    Spinlock _signal_lock;$/;"	m	class:Master
_signals	elements/standard/priosched.hh	/^    NotifierSignal *_signals;$/;"	m	class:PrioSched
_signals	elements/standard/pullswitch.hh	/^    NotifierSignal *_signals;$/;"	m	class:PullSwitch
_signals	elements/standard/rrsched.hh	/^    NotifierSignal *_signals;$/;"	m	class:RRSched
_signos	elements/standard/script.hh	/^    Vector<int> _signos;$/;"	m	class:Script
_sigs	tools/click-devirtualize/signature.hh	/^  Vector<SignatureNode> _sigs;$/;"	m	class:Signatures
_sim_packetinfo	include/click/packet.hh	/^    SimPacketinfoWrapper _sim_packetinfo;$/;"	m	class:Packet
_simnode	include/click/master.hh	/^    simclick_node_t *_simnode;$/;"	m	class:Master
_simple	elements/analysis/timerange.hh	/^    bool _simple;$/;"	m	class:TimeRange
_simple_slotbuf	include/click/args.hh	/^    uint8_t _simple_slotbuf[simple_slotbuf_size];$/;"	m	struct:Args
_simple_slotpos	include/click/args.hh	/^    uint8_t _simple_slotpos;$/;"	m	struct:Args
_sip6addr	elements/linuxmodule/fastudpsrcip6.hh	/^  IP6Address _sip6addr;$/;"	m	class:FastUDPSourceIP6
_sipaddr	elements/bsdmodule/fastudpsrc.hh	/^  struct in_addr _sipaddr;$/;"	m	class:FastUDPSource	typeref:struct:FastUDPSource::in_addr
_sipaddr	elements/linuxmodule/fasttcpflows.hh	/^  struct in_addr _sipaddr;$/;"	m	class:FastTCPFlows	typeref:struct:FastTCPFlows::in_addr
_sipaddr	elements/linuxmodule/fastudpflows.hh	/^  struct in_addr _sipaddr;$/;"	m	class:FastUDPFlows	typeref:struct:FastUDPFlows::in_addr
_sipaddr	elements/linuxmodule/fastudpsrc.hh	/^  struct in_addr _sipaddr;$/;"	m	class:FastUDPSource	typeref:struct:FastUDPSource::in_addr
_size	elements/aqm/pi.hh	/^    ewma_type _size;$/;"	m	class:PI
_size	elements/aqm/red.hh	/^    ewma_type _size;$/;"	m	class:RED
_size	elements/linuxmodule/fromuserdevice.hh	/^    uint32_t _size;$/;"	m	class:FromUserDevice
_size	elements/linuxmodule/touserdevice.hh	/^    uint32_t	    _size;$/;"	m	class:ToUserDevice
_size	elements/local/FlowNet/common/PacketQueue.hh	/^	int	_size;$/;"	m	struct:PacketQueue
_size	elements/local/OpenFlow/SynchronizedPacketQueue.hh	/^	int	_size;$/;"	m	struct:SynchronizedPacketQueue
_size	elements/userlevel/progressbar.hh	/^    double _size;$/;"	m	class:ProgressBar
_size	include/click/args.hh	/^	size_t _size;$/;"	m	struct:Args::BytesSlot
_size	include/click/hashallocator.hh	/^    size_t _size;$/;"	m	class:HashAllocator
_sizevec	elements/test/sorttest.hh	/^    Vector<size_t> _sizevec;$/;"	m	class:SortTest
_skbs	linuxmodule/skbmgr.cc	/^  struct sk_buff *_skbs[SIZE];$/;"	m	class:RecycledSkbBucket	typeref:struct:RecycledSkbBucket::sk_buff	file:
_skip_section	test/testie	/^sub _skip_section ($) {$/;"	s
_sleep_ident	include/click/routerthread.hh	/^    void *_sleep_ident;$/;"	m	class:RouterThread
_sleep_proc	elements/linuxmodule/fromuserdevice.hh	/^    uint32_t _sleep_proc;$/;"	m	class:FromUserDevice
_sleep_proc	elements/linuxmodule/touserdevice.hh	/^    ulong                  _sleep_proc;$/;"	m	class:ToUserDevice
_sleep_waker	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	Timer _sleep_waker;$/;"	m	class:PFSchedFW
_sleepiness	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	int	_sleepiness;$/;"	m	class:PFSchedFW
_sleepiness	elements/standard/notifierqueue.hh	/^    int _sleepiness;$/;"	m	class:NotifierQueue
_slope	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	double _slope;$/;"	m	struct:CORE
_slot	include/click/args.hh	/^	T _slot;$/;"	m	struct:Args::SlotT
_slot	include/click/args.hh	/^	char *_slot;$/;"	m	struct:Args::BytesSlot
_slot_unit	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	uint32_t _slot_unit;	\/* micro-second *\/$/;"	m	class:PFSchedFW
_slots	include/click/args.hh	/^    Slot *_slots;$/;"	m	struct:Args
_small_attr	apps/clicky/src/wmain.hh	/^    PangoAttrList *_small_attr;$/;"	m	class:clicky::wmain
_small_bold_attr	apps/clicky/src/wmain.hh	/^    PangoAttrList *_small_bold_attr;$/;"	m	class:clicky::wmain
_smallest_timeout	elements/analysis/aggregateipflows.hh	/^    uint32_t _smallest_timeout;$/;"	m	class:AggregateIPFlows
_snaplen	elements/userlevel/fromdevice.hh	/^    int _snaplen;$/;"	m	class:FromDevice
_snaplen	elements/userlevel/ipflowrawsockets.hh	/^    int _snaplen;$/;"	m	class:IPFlowRawSockets
_snaplen	elements/userlevel/rawsocket.hh	/^  int _snaplen;			\/\/ maximum received packet length$/;"	m	class:RawSocket
_snaplen	elements/userlevel/socket.hh	/^  int _snaplen;			\/\/ maximum received packet length$/;"	m	class:Socket
_snaplen	elements/userlevel/todump.hh	/^    unsigned _snaplen;$/;"	m	class:ToDump
_snaplen	elements/userlevel/umlswitch.hh	/^  int _snaplen;			\/\/ maximum received packet length$/;"	m	class:UMLSwitch
_snapshot_jiffies	elements/grid/dsdvroutetable.hh	/^  unsigned _snapshot_jiffies;$/;"	m	class:DSDVRouteTable
_snapshot_old_rtes	elements/grid/dsdvroutetable.hh	/^  RTable _snapshot_old_rtes;$/;"	m	class:DSDVRouteTable
_snapshot_rtes	elements/grid/dsdvroutetable.hh	/^  RTable _snapshot_rtes;$/;"	m	class:DSDVRouteTable
_sndbuf	elements/userlevel/socket.hh	/^  int _sndbuf;			\/\/ maximum socket send buffer in bytes$/;"	m	class:Socket
_sniffers	elements/bsdmodule/tohost.hh	/^    bool _sniffers;$/;"	m	class:ToHost
_sniffers	elements/linuxmodule/tohost.hh	/^    bool _sniffers;$/;"	m	class:ToHost
_sock	apps/ClickController/ControlSocket.java	/^    private Socket _sock;$/;"	f	class:ControlSocket	file:
_sockMonServer	elements/local/FlowNet/papmo/PaPMo.hh	/^	int _sockMonServer;$/;"	m	class:papmo
_sock_timeout	apps/ClickController/ControlSocket.java	/^    public static final int _sock_timeout = 0; \/\/ 1500; \/\/ msecs$/;"	f	class:ControlSocket
_socket_fd	elements/userlevel/chattersocket.hh	/^  int _socket_fd;$/;"	m	class:ChatterSocket
_socket_fd	elements/userlevel/controlsocket.hh	/^    int _socket_fd;$/;"	m	class:ControlSocket
_socktype	elements/userlevel/socket.hh	/^  int _socktype;		\/\/ SOCK_STREAM or SOCK_DGRAM$/;"	m	class:Socket
_sorted	apps/clicky/src/dstyle.hh	/^    mutable bool _sorted;$/;"	m	class:clicky::dcss
_sorted	include/click/nameinfo.hh	/^    int _sorted;$/;"	m	class:DynamicNameDB
_source_files	tools/click-mkmindriver/click-mkmindriver.cc	/^    HashTable<String, int> _source_files;$/;"	m	class:Mindriver	file:
_sout	elements/local/FlowNet/papmo/PaPMo.hh	/^	struct sockaddr_in _sout;$/;"	m	class:papmo	typeref:struct:papmo::sockaddr_in
_special_nodes	elements/analysis/anonipaddr.hh	/^    Node _special_nodes[2];$/;"	m	class:AnonymizeIPAddr
_specialize	tools/click-devirtualize/specializer.hh	/^  Vector<int> _specialize;$/;"	m	class:Specializer
_specials	tools/click-devirtualize/specializer.hh	/^  Vector<SpecializedClass> _specials;$/;"	m	class:Specializer
_speed	elements/radio/bim.hh	/^  int _speed;$/;"	m	class:BIM
_spi	elements/ipsec/sadatatuple.hh	/^	uint32_t _spi;$/;"	m	class:SPI
_spinlocks	elements/threads/spinlockinfo.hh	/^    Vector<Spinlock> _spinlocks;$/;"	m	class:SpinlockInfo
_split	apps/clicky/src/dwidget.hh	/^    delt *_split;$/;"	m	class:clicky::delt
_split_type	apps/clicky/src/dwidget.hh	/^    uint8_t _split_type;$/;"	m	class:clicky::delt
_sport	elements/bsdmodule/fastudpsrc.hh	/^  unsigned short _sport;$/;"	m	class:FastUDPSource
_sport	elements/ip/iprwpattern.hh	/^    int _sport;			\/\/ net byte order$/;"	m	class:IPRewriterPattern
_sport	elements/linuxmodule/fastudpsrc.hh	/^  uint16_t _sport;$/;"	m	class:FastUDPSource
_sport	elements/linuxmodule/fastudpsrcip6.hh	/^  uint16_t _sport;$/;"	m	class:FastUDPSourceIP6
_sport	elements/tcpudp/dynudpipencap.hh	/^  uint16_t _sport;$/;"	m	class:DynamicUDPIPEncap
_sport	elements/tcpudp/udpip6encap.hh	/^    uint16_t _sport;$/;"	m	class:UDPIP6Encap
_sport	elements/tcpudp/udpipencap.hh	/^    uint16_t _sport;$/;"	m	class:UDPIPEncap
_sport	include/click/ip6flowid.hh	/^  uint16_t _sport;			\/\/ network byte order$/;"	m	class:IP6FlowID
_sport	include/click/ipflowid.hh	/^    uint16_t _sport;			\/\/ network byte order$/;"	m	class:IPFlowID
_src	elements/grid/dsrroutetable.hh	/^    IPAddress _src;$/;"	m	class:DSRRouteTable::ForwardedReqKey
_src	elements/icmp/icmpipencap.hh	/^    struct in_addr _src;$/;"	m	class:ICMPIPEncap	typeref:struct:ICMPIPEncap::in_addr
_src	elements/icmp/icmppingencap.hh	/^    struct in_addr _src;$/;"	m	class:ICMPPingEncap	typeref:struct:ICMPPingEncap::in_addr
_src	elements/icmp/icmpsendpings.hh	/^    struct in_addr _src;$/;"	m	class:ICMPPingSource	typeref:struct:ICMPPingSource::in_addr
_src	elements/ip/ripsend.hh	/^  IPAddress _src; \/\/ IP header src field$/;"	m	class:RIPSend
_src_eth	elements/grid/linktester.hh	/^  class EtherAddress _src_eth;$/;"	m	class:LinkTester	typeref:class:LinkTester::EtherAddress
_src_ip	elements/icmp/icmperror.hh	/^    IPAddress _src_ip;$/;"	m	class:ICMPError
_src_ip	elements/ip6/icmp6error.hh	/^  IP6Address _src_ip;$/;"	m	class:ICMP6Error
_srcdst	elements/ip/ipfilter.hh	/^	int _srcdst;$/;"	m	struct:IPFilter::Primitive
_ssid	elements/wifi/ap/proberesponder.hh	/^  String _ssid;$/;"	m	class:ProbeResponder
_ssid	elements/wifi/station/beaconscanner.hh	/^    String _ssid;$/;"	m	class:BeaconScanner::wap
_ssid	elements/wifi/wirelessinfo.hh	/^  String _ssid;$/;"	m	class:WirelessInfo
_stability	include/click/ewma.hh	/^    unsigned _stability;$/;"	m	class:StabilityEWMAXParameters
_stale_timeout	elements/wifi/linktable.hh	/^  Timestamp _stale_timeout;$/;"	m	class:LinkTable
_stall_time	elements/userlevel/progressbar.hh	/^    Timestamp _stall_time;$/;"	m	class:ProgressBar
_start	elements/wifi/fromhandler.hh	/^    Timestamp _start;$/;"	m	class:FromHandler
_start	elements/wifi/station/beacontracker.hh	/^  Timestamp _start;$/;"	m	class:BeaconTracker
_start_time	elements/grid/linktester.hh	/^  int _start_time; \/\/ unix epoch seconds$/;"	m	class:LinkTester
_start_time	elements/userlevel/progressbar.hh	/^    Timestamp _start_time;$/;"	m	class:ProgressBar
_start_time_tv	elements/grid/linktester.hh	/^  Timestamp _start_time_tv;$/;"	m	class:LinkTester
_started	elements/radio/bim.hh	/^  int _started;$/;"	m	class:BIM
_stat	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	struct PFSchedFWStat _stat;$/;"	m	class:PFSchedFW	typeref:struct:PFSchedFW::PFSchedFWStat
_stat_bad_pkts	elements/ip/ipreassembler.hh	/^    uint32_t _stat_bad_pkts;$/;"	m	class:IPReassembler
_stat_failed_assem	elements/ip/ipreassembler.hh	/^    uint32_t _stat_failed_assem;$/;"	m	class:IPReassembler
_stat_frags_seen	elements/ip/ipreassembler.hh	/^    uint32_t _stat_frags_seen;$/;"	m	class:IPReassembler
_stat_good_assem	elements/ip/ipreassembler.hh	/^    uint32_t _stat_good_assem;$/;"	m	class:IPReassembler
_state	elements/grid/gridlogger.hh	/^  state_t _state;$/;"	m	class:GridLogger
_state	include/click/router.hh	/^    volatile int _state;$/;"	m	class:Router
_static	elements/ip6/addresstranslator.hh	/^    bool _static;$/;"	m	struct:AddressTranslator::EntryMap
_static_mapping	elements/ip6/addresstranslator.hh	/^  bool _static_mapping[6];$/;"	m	class:AddressTranslator
_static_portmapping	elements/ip6/addresstranslator.hh	/^  bool _static_portmapping;$/;"	m	class:AddressTranslator
_stats	elements/grid/linktracker.hh	/^  HashMap<IPAddress, stat_t> _stats;$/;"	m	class:LinkTracker
_stats	elements/linuxmodule/fromhost.hh	/^    net_device_stats _stats;$/;"	m	class:FromHost
_status	elements/grid/dsrroutetable.hh	/^    int _status;$/;"	m	class:DSRRouteTable::BlacklistEntry
_status	elements/userlevel/progressbar.hh	/^    int _status;$/;"	m	class:ProgressBar
_status	include/click/args.hh	/^    bool _status;$/;"	m	struct:Args
_status	include/click/task.hh	/^    } _status;$/;"	m	class:Task	typeref:union:Task::Status
_statusLine	apps/ClickController/ClickController.java	/^    private JLabel _statusLine;$/;"	f	class:ClickController	file:
_stdc	elements/test/sorttest.hh	/^    bool _stdc;$/;"	m	class:SortTest
_step_count	elements/standard/script.hh	/^    int _step_count;$/;"	m	class:Script
_stepdown	elements/wifi/autoratefallback.hh	/^  int _stepdown;$/;"	m	class:AutoRateFallback
_stepdown	elements/wifi/madwifirate.hh	/^  int _stepdown;$/;"	m	class:MadwifiRate
_stepup	elements/wifi/autoratefallback.hh	/^    int _stepup;$/;"	m	struct:AutoRateFallback::DstInfo
_stepup	elements/wifi/autoratefallback.hh	/^  int _stepup;$/;"	m	class:AutoRateFallback
_stepup	elements/wifi/madwifirate.hh	/^  int _stepup;$/;"	m	class:MadwifiRate
_stop	elements/analysis/timesortedsched.hh	/^    bool _stop;$/;"	m	class:TimeSortedSched
_stop	elements/standard/infinitesource.hh	/^    bool _stop;$/;"	m	class:InfiniteSource
_stop	elements/standard/ratedsource.hh	/^    bool _stop;$/;"	m	class:RatedSource
_stop	elements/standard/timedsource.hh	/^    bool _stop;$/;"	m	class:TimedSource
_stop	elements/test/nulltask.hh	/^    bool _stop;$/;"	m	class:NullTask
_stop	elements/test/schedordertest.hh	/^    bool _stop;$/;"	m	class:SchedOrderTest
_stop_after_clear	elements/analysis/aggregatelast.hh	/^    bool _stop_after_clear;$/;"	m	class:AggregateLast
_stop_flag	include/click/routerthread.hh	/^    volatile int _stop_flag;$/;"	m	class:RouterThread
_storage	elements/local/FlowNet/common/PacketQueue.hh	/^	Packet* volatile *_storage;$/;"	m	struct:PacketQueue
_storage	elements/local/OpenFlow/SynchronizedPacketQueue.hh	/^	Packet* volatile *_storage;$/;"	m	struct:SynchronizedPacketQueue
_str_bind_to_CD	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	String _str_bind_to_CD;$/;"	m	class:PFShapeFW
_str_local_port	elements/local/OpenFlow/datapath.hh	/^	char _str_local_port[100];$/;"	m	class:Datapath
_str_port_list	elements/local/OpenFlow/datapath.hh	/^	char _str_port_list[100];$/;"	m	class:Datapath
_strict	elements/wifi/wepdecap.hh	/^  bool _strict;$/;"	m	class:WepDecap
_strict	elements/wifi/wepencap.hh	/^  bool _strict;$/;"	m	class:WepEncap
_strict	elements/wifi/wifidecap.hh	/^  bool _strict;$/;"	m	class:WifiDecap
_stride	elements/standard/stridesched.hh	/^	unsigned _stride;$/;"	m	struct:StrideSched::Client
_stride	include/click/task.hh	/^    unsigned _stride;$/;"	m	class:Task
_strvec	elements/test/sorttest.hh	/^    Vector<String> _strvec;$/;"	m	class:SortTest
_stuff	apps/clicky/src/rectsearch.hh	/^    rectmap _stuff;$/;"	m	class:rect_search
_success	elements/wifi/probetxrate.hh	/^    bool _success;$/;"	m	struct:ProbeTXRate::tx_result
_successes	elements/wifi/autoratefallback.hh	/^    int _successes;$/;"	m	struct:AutoRateFallback::DstInfo
_successes	elements/wifi/madwifirate.hh	/^    int _successes;$/;"	m	struct:MadwifiRate::DstInfo
_sum_noise	elements/wifi/rxstats.hh	/^    unsigned _sum_noise;$/;"	m	class:RXStats::DstInfo
_sum_signal	elements/wifi/rxstats.hh	/^    unsigned _sum_signal;$/;"	m	class:RXStats::DstInfo
_suppressed	elements/standard/suppressor.hh	/^    Bitvector _suppressed;$/;"	m	class:Suppressor
_sw_desc	elements/local/OpenFlow/datapath.hh	/^	char _sw_desc[DESC_STR_LEN];$/;"	m	class:Datapath
_swap	elements/ip/ipprint.hh	/^  bool _swap;$/;"	m	class:IPPrint
_switch	elements/etherswitch/spantree.hh	/^  EtherSwitch* _switch;$/;"	m	class:EtherSpanTree
_t	apps/clicky/src/dstyle.hh	/^    mutable int _t;$/;"	m	struct:clicky::dcss_property
_t	apps/clicky/src/ref.hh	/^    T *_t;$/;"	m	class:ref_ptr
_t	elements/ip/directiplookup.hh	/^    Table _t;$/;"	m	class:DirectIPLookup
_t	elements/ip/lineariplookup.hh	/^    Vector<IPRoute> _t;$/;"	m	class:LinearIPLookup
_t	elements/ip/lookupiproutelinux.hh	/^  IPTable _t;$/;"	m	class:LinuxIPLookup
_t	elements/ip/lookupiproutemp.hh	/^  IPTable _t;$/;"	m	class:LookupIPRouteMP
_t	elements/ip6/lookupip6route.hh	/^  IP6Table _t;$/;"	m	class:LookupIP6Route
_t	elements/local/FlowNet/common/PacketQueue.hh	/^	int	_t;$/;"	m	struct:PacketQueue
_t	elements/local/OpenFlow/SynchronizedPacketQueue.hh	/^	int	_t;$/;"	m	struct:SynchronizedPacketQueue
_t	elements/test/queueyanktest.hh	/^    Timer _t;$/;"	m	class:QueueYankTest
_t	include/click/timestamp.hh	/^    rep_t _t;$/;"	m	class:Timestamp
_t	tools/lib/routert.hh	/^    ElementClassT *_t;$/;"	m	class:RouterT::const_type_iterator
_t0	elements/grid/gridlocationinfo.hh	/^  double _t0;   \/\/ When we started.$/;"	m	class:GridLocationInfo
_t1	elements/grid/gridlocationinfo.hh	/^  double _t1;   \/\/ When we're to pick new velocities.$/;"	m	class:GridLocationInfo
_table	elements/ethernet/arptable.hh	/^    Table _table;$/;"	m	class:ARPTable
_table	elements/etherswitch/etherswitch.hh	/^    Table _table;$/;"	m	class:EtherSwitch
_table	elements/ipsec/satable.hh	/^  STable _table;$/;"	m	class:SATable
_table	elements/wifi/ap/stationtable.hh	/^  STable _table;$/;"	m	class:StationTable
_table	elements/wifi/wifidupefilter.hh	/^  DstTable _table;$/;"	m	class:WifiDupeFilter
_tag	elements/grid/gridlocationinfo.hh	/^  String _tag;$/;"	m	class:GridLocationInfo
_tag	elements/grid/gridlocationinfo2.hh	/^  String _tag;$/;"	m	class:GridLocationInfo2
_tail	elements/ethernet/arptable.hh	/^	Packet *_tail;$/;"	m	struct:ARPTable::ARPEntry
_tail	elements/linuxmodule/cpuqueue.hh	/^    unsigned _tail;$/;"	m	struct:CPUQueue::__anon303
_tail	elements/local/FlowNet/papmo/PaPMo.hh	/^	int _tail;$/;"	m	struct:lfc_buffer
_tail	elements/tcpudp/snooptcp.hh	/^  int _tail;$/;"	m	struct:SnoopTCP::PCB
_tail	include/click/dequeue.hh	/^  int _tail;$/;"	m	class:DEQueue
_tail	include/click/list.hh	/^    T *_tail;$/;"	m	class:List
_tail	include/click/packet.hh	/^    unsigned char *_tail; \/* one beyond end of packet *\/$/;"	m	class:Packet
_tail	include/click/standard/storage.hh	/^    volatile index_type _tail;$/;"	m	class:Storage
_tail	linuxmodule/modulepriv.hh	/^    volatile uint32_t _tail;$/;"	m	class:KernelErrorHandler
_tail	linuxmodule/skbmgr.cc	/^  int _tail;$/;"	m	class:RecycledSkbBucket	file:
_tailroom	elements/linuxmodule/fromuserdevice.hh	/^    uint32_t _tailroom;$/;"	m	class:FromUserDevice
_tap	elements/userlevel/kerneltun.hh	/^    bool _tap;$/;"	m	class:KernelTun
_target	elements/grid/dsrroutetable.hh	/^    IPAddress _target;$/;"	m	class:DSRRouteTable::ForwardedReqKey
_target	elements/grid/dsrroutetable.hh	/^    IPAddress _target;$/;"	m	class:DSRRouteTable::InitiatedReq
_target_q	elements/aqm/pi.hh	/^	unsigned _target_q, _old_q;$/;"	m	class:PI
_task	elements/analysis/fromcapdump.hh	/^    Task _task;$/;"	m	class:FromCapDump
_task	elements/analysis/fromdagdump.hh	/^    Task _task;$/;"	m	class:FromDAGDump
_task	elements/analysis/fromflandump.hh	/^    Task _task;$/;"	m	class:FromFlanDump
_task	elements/analysis/fromipsumdump.hh	/^    Task _task;$/;"	m	class:FromIPSummaryDump
_task	elements/analysis/fromnetflowsumdump.hh	/^    Task _task;$/;"	m	class:FromNetFlowSummaryDump
_task	elements/analysis/fromnlanrdump.hh	/^    Task _task;$/;"	m	class:FromNLANRDump
_task	elements/analysis/fromtcpdump.hh	/^    Task _task;$/;"	m	class:FromTcpdump
_task	elements/analysis/toipflowdumps.hh	/^    Task _task;$/;"	m	class:ToIPFlowDumps
_task	elements/analysis/toipsumdump.hh	/^    Task _task;$/;"	m	class:ToIPSummaryDump
_task	elements/bsdmodule/anydevice.hh	/^    Task _task;$/;"	m	class:AnyDevice
_task	elements/bsdmodule/anydevice.hh	/^    Task _task;$/;"	m	class:AnyTaskDevice
_task	elements/grid/ackretrysender.hh	/^  Task _task;$/;"	m	class:ACKRetrySender
_task	elements/grid/ackretrysender2.hh	/^  Task _task;$/;"	m	class:ACKRetrySender2
_task	elements/grid/lookupgeogridroute.hh	/^  Task _task;$/;"	m	class:LookupGeographicGridRoute
_task	elements/grid/lookuplocalgridroute.hh	/^  Task _task;$/;"	m	class:LookupLocalGridRoute
_task	elements/grid/radiosim.hh	/^  Task _task;$/;"	m	class:RadioSim
_task	elements/ip/poundradixiplookup.hh	/^    Task _task;$/;"	m	class:PoundRadixIPLookup
_task	elements/linuxmodule/anydevice.hh	/^    Task _task;$/;"	m	class:AnyTaskDevice
_task	elements/linuxmodule/fromhost.hh	/^    Task _task;$/;"	m	class:FromHost
_task	elements/linuxmodule/schedulelinux.hh	/^  Task _task;$/;"	m	class:ScheduleLinux
_task	elements/linuxmodule/touserdevice.hh	/^    Task            _task;$/;"	m	class:ToUserDevice
_task	elements/ns/tosimdevice.hh	/^    Task _task;$/;"	m	class:ToSimDevice
_task	elements/radio/bim.hh	/^  Task _task;$/;"	m	class:BIM
_task	elements/standard/delayunqueue.hh	/^    Task _task;$/;"	m	class:DelayUnqueue
_task	elements/standard/discard.hh	/^    Task _task;$/;"	m	class:Discard
_task	elements/standard/discardnofree.hh	/^  Task _task;$/;"	m	class:DiscardNoFree
_task	elements/standard/infinitesource.hh	/^    Task _task;$/;"	m	class:InfiniteSource
_task	elements/standard/linkunqueue.hh	/^    Task _task;$/;"	m	class:LinkUnqueue
_task	elements/standard/ratedsource.hh	/^    Task _task;$/;"	m	class:RatedSource
_task	elements/standard/ratedunqueue.hh	/^    Task _task;$/;"	m	class:RatedUnqueue
_task	elements/standard/timedunqueue.hh	/^    Task _task;$/;"	m	class:TimedUnqueue
_task	elements/standard/unqueue.hh	/^    Task _task;$/;"	m	class:Unqueue
_task	elements/standard/unqueue2.hh	/^    Task _task;$/;"	m	class:Unqueue2
_task	elements/test/handlertask.hh	/^    Task _task;$/;"	m	class:HandlerTask
_task	elements/test/nulltask.hh	/^    Task _task;$/;"	m	class:NullTask
_task	elements/test/queuethreadtest.hh	/^    Task _task;$/;"	m	class:QueueThreadTest2
_task	elements/test/schedordertest.hh	/^    Task _task;$/;"	m	class:SchedOrderTest
_task	elements/userlevel/fromdump.hh	/^    Task _task;$/;"	m	class:FromDump
_task	elements/userlevel/fromhost.hh	/^    Task _task;$/;"	m	class:FromHost
_task	elements/userlevel/ipflowrawsockets.hh	/^    Task _task;$/;"	m	class:IPFlowRawSockets
_task	elements/userlevel/kerneltun.hh	/^    Task _task;$/;"	m	class:KernelTun
_task	elements/userlevel/rawsocket.hh	/^  Task _task;$/;"	m	class:RawSocket
_task	elements/userlevel/socket.hh	/^  Task _task;$/;"	m	class:Socket
_task	elements/userlevel/todevice.hh	/^    Task _task;$/;"	m	class:ToDevice
_task	elements/userlevel/todump.hh	/^    Task _task;$/;"	m	class:ToDump
_task	elements/wifi/fromhandler.hh	/^    Task _task;$/;"	m	class:FromHandler
_task	elements/wifi/packetstore.hh	/^  Task _task;$/;"	m	class:PacketStore
_task_blocker	include/click/routerthread.hh	/^    atomic_uint32_t _task_blocker;$/;"	m	class:RouterThread
_task_blocker_waiting	include/click/routerthread.hh	/^    atomic_uint32_t _task_blocker_waiting;$/;"	m	class:RouterThread
_task_calls	include/click/element.hh	/^    unsigned _task_calls;	\/\/ Calls to tasks owned by this element.$/;"	m	class:Element
_task_cycles	include/click/element.hh	/^    click_cycles_t _task_cycles;	\/\/ Cycles spent in self from tasks.$/;"	m	class:Element
_task_epoch_first	include/click/routerthread.hh	/^    uint32_t _task_epoch_first;$/;"	m	class:RouterThread
_task_epoch_time	include/click/routerthread.hh	/^    Timestamp _task_epoch_time[TASK_EPOCH_BUFSIZ];$/;"	m	class:RouterThread
_task_heap	include/click/routerthread.hh	/^    Vector<task_heap_element> _task_heap;$/;"	m	class:RouterThread
_task_lock	include/click/routerthread.hh	/^    Spinlock _task_lock;$/;"	m	class:RouterThread
_tasks_per_iter	include/click/routerthread.hh	/^    unsigned _tasks_per_iter;$/;"	m	class:RouterThread
_tau	elements/grid/linkstat.hh	/^  unsigned int _tau;    \/\/ msecs$/;"	m	class:LinkStat
_tau	elements/grid/linktracker.hh	/^  double _tau;$/;"	m	class:LinkTracker
_tau	elements/wifi/rxstats.hh	/^  int _tau;$/;"	m	class:RXStats
_tb	elements/standard/ratedsource.hh	/^    TokenBucket _tb;$/;"	m	class:RatedSource
_tb	elements/standard/ratedsplitter.hh	/^    TokenBucket _tb;$/;"	m	class:RatedSplitter
_tb	elements/standard/ratedunqueue.hh	/^    TokenBucket _tb;$/;"	m	class:RatedUnqueue
_tbl_0_23	elements/ip/directiplookup.hh	/^	uint16_t *_tbl_0_23;$/;"	m	struct:DirectIPLookup::Table
_tbl_0_23_plen	elements/ip/directiplookup.hh	/^	uint8_t *_tbl_0_23_plen;$/;"	m	struct:DirectIPLookup::Table
_tbl_24_31	elements/ip/directiplookup.hh	/^	uint16_t *_tbl_24_31;$/;"	m	struct:DirectIPLookup::Table
_tbl_24_31_capacity	elements/ip/directiplookup.hh	/^	uint32_t _tbl_24_31_capacity;$/;"	m	struct:DirectIPLookup::Table
_tbl_24_31_empty_head	elements/ip/directiplookup.hh	/^	uint16_t _tbl_24_31_empty_head;$/;"	m	struct:DirectIPLookup::Table
_tbl_24_31_plen	elements/ip/directiplookup.hh	/^	uint8_t *_tbl_24_31_plen;$/;"	m	struct:DirectIPLookup::Table
_tbl_24_31_size	elements/ip/directiplookup.hh	/^	uint32_t _tbl_24_31_size;$/;"	m	struct:DirectIPLookup::Table
_tc	elements/etherswitch/bridgemessage.hh	/^  bool _tc;$/;"	m	class:BridgeMessage
_tcp	elements/ip/rfc2507c.hh	/^    click_tcp _tcp;$/;"	m	struct:RFC2507c::tcpip
_tcp	elements/ip/rfc2507d.hh	/^    click_tcp _tcp;$/;"	m	struct:RFC2507d::tcpip
_tcp_data_timeout	elements/tcpudp/tcprewriter.hh	/^    uint32_t _tcp_data_timeout;$/;"	m	class:TCPRewriter
_tcp_done_timeout	elements/analysis/aggregateipflows.hh	/^    uint32_t _tcp_done_timeout;$/;"	m	class:AggregateIPFlows
_tcp_done_timeout	elements/tcpudp/tcprewriter.hh	/^    uint32_t _tcp_done_timeout;$/;"	m	class:TCPRewriter
_tcp_map	elements/analysis/aggregateipflows.hh	/^    Map _tcp_map;$/;"	m	class:AggregateIPFlows
_tcp_map	elements/analysis/fromtcpdump.hh	/^    HashTable<IPFlowID, FlowRecord> _tcp_map;$/;"	m	class:FromTcpdump
_tcp_opt	elements/analysis/toipflowdumps.hh	/^	int _tcp_opt;$/;"	m	class:ToIPFlowDumps::Flow
_tcp_opt	elements/analysis/toipflowdumps.hh	/^    int _tcp_opt;$/;"	m	class:ToIPFlowDumps
_tcp_timeout	elements/analysis/aggregateipflows.hh	/^    uint32_t _tcp_timeout;$/;"	m	class:AggregateIPFlows
_tcp_windows	elements/analysis/toipflowdumps.hh	/^	uint16_t *_tcp_windows;$/;"	m	class:ToIPFlowDumps::Flow
_text	apps/clicky/src/dstyle.hh	/^    String _text;$/;"	m	class:clicky::dcss_set
_text	elements/test/errortest.cc	/^    StringAccum _text;$/;"	m	class:__anon401::ErrorTestHandler	file:
_tflags	elements/ip/iprwmapping.hh	/^    uint8_t _tflags;$/;"	m	class:IPRewriterFlow
_the_traits	tools/lib/eclasst.cc	/^    ElementTraits _the_traits;$/;"	m	class:__anon533::TraitsElementClassT	file:
_thread	include/click/task.hh	/^    RouterThread *_thread;$/;"	m	class:Task
_thread	include/click/timer.hh	/^    RouterThread *_thread;$/;"	m	class:Timer
_thread_liveness	elements/local/FlowNet/papmo/PaPMo.hh	/^	int _thread_liveness;$/;"	m	class:papmo
_thread_preferences	elements/threads/staticthreadsched.hh	/^    Vector<int> _thread_preferences;$/;"	m	class:StaticThreadSched
_thread_sched	include/click/router.hh	/^    ThreadSched* _thread_sched;$/;"	m	class:Router
_thread_send	elements/local/FlowNet/papmo/PaPMo.hh	/^	pthread_t _thread_send;$/;"	m	class:papmo
_thread_state	include/click/routerthread.hh	/^    int _thread_state;$/;"	m	class:RouterThread
_thread_state_count	include/click/routerthread.hh	/^    uint64_t _thread_state_count[NSTATES];$/;"	m	class:RouterThread
_thread_state_time	include/click/routerthread.hh	/^    Timestamp _thread_state_time[NSTATES];$/;"	m	class:RouterThread
_thread_state_timestamp	include/click/routerthread.hh	/^    Timestamp _thread_state_timestamp;$/;"	m	class:RouterThread
_threads	include/click/master.hh	/^    RouterThread **_threads;$/;"	m	class:Master
_thresh	elements/grid/threshmetric.hh	/^  unsigned _thresh;$/;"	m	class:ThresholdMetric
_thresh	elements/ip/ipratemon.hh	/^  int _thresh;			\/\/ threshold, when to split$/;"	m	class:IPRateMonitor
_thresh	elements/linuxmodule/threadmonitor.hh	/^    unsigned _thresh;$/;"	m	class:ThreadMonitor
_thresh	elements/standard/block.hh	/^  int _thresh;$/;"	m	class:Block
_thresh	elements/standard/compblock.hh	/^  int _thresh;$/;"	m	class:CompareBlock
_thresh	elements/userlevel/printold.hh	/^  int _thresh;$/;"	m	class:PrintOld
_throbber_count	apps/clicky/src/crouter.hh	/^    int _throbber_count;$/;"	m	class:clicky::crouter
_thunk	include/click/task.hh	/^    void *_thunk;$/;"	m	class:Task
_thunk	include/click/timer.hh	/^    void *_thunk;$/;"	m	class:Timer
_tickets	elements/standard/stridesched.hh	/^	int _tickets;$/;"	m	struct:StrideSched::Client
_tickets	include/click/task.hh	/^    int _tickets;$/;"	m	class:Task
_time	elements/wifi/probetxrate.hh	/^    int _time;$/;"	m	struct:ProbeTXRate::tx_result
_time_added	elements/grid/dsrroutetable.hh	/^    Timestamp _time_added;$/;"	m	class:DSRRouteTable::BufferedPacket
_time_allocskb	elements/linuxmodule/polldevice.hh	/^  uint64_t _time_allocskb;$/;"	m	class:PollDevice
_time_clean	elements/linuxmodule/todevice.hh	/^    uint64_t _time_clean;$/;"	m	class:ToDevice
_time_forwarded	elements/grid/dsrroutetable.hh	/^    Timestamp _time_forwarded;$/;"	m	class:DSRRouteTable::ForwardedReqVal
_time_freeskb	elements/linuxmodule/todevice.hh	/^    uint64_t _time_freeskb;$/;"	m	class:ToDevice
_time_last_issued	elements/grid/dsrroutetable.hh	/^    Timestamp _time_last_issued;$/;"	m	class:DSRRouteTable::InitiatedReq
_time_offset	elements/analysis/fromdagdump.hh	/^    Timestamp _time_offset;$/;"	m	class:FromDAGDump
_time_offset	elements/analysis/fromnetflowsumdump.hh	/^    Timestamp _time_offset;$/;"	m	class:FromNetFlowSummaryDump
_time_offset	elements/analysis/fromnlanrdump.hh	/^    Timestamp _time_offset;$/;"	m	class:FromNLANRDump
_time_offset	elements/userlevel/fromdump.hh	/^    Timestamp _time_offset;$/;"	m	class:FromDump
_time_poll	elements/linuxmodule/polldevice.hh	/^  uint64_t _time_poll;$/;"	m	class:PollDevice
_time_push	elements/bsdmodule/fromdevice.hh	/^    long long _time_read, _time_push;$/;"	m	class:FromDevice
_time_queue	elements/linuxmodule/todevice.hh	/^    uint64_t _time_queue;$/;"	m	class:ToDevice
_time_read	elements/bsdmodule/fromdevice.hh	/^    long long _time_read, _time_push;$/;"	m	class:FromDevice
_time_refill	elements/linuxmodule/polldevice.hh	/^  uint64_t _time_refill;$/;"	m	class:PollDevice
_time_unidtest_issued	elements/grid/dsrroutetable.hh	/^    Timestamp _time_unidtest_issued;$/;"	m	class:DSRRouteTable::ForwardedReqVal
_time_updated	elements/grid/dsrroutetable.hh	/^    Timestamp _time_updated;$/;"	m	class:DSRRouteTable::BlacklistEntry
_timeout	apps/clicky/src/crouter.hh	/^	guint _timeout;$/;"	m	class:clicky::crouter::throb_after
_timeout	elements/analysis/aggregateipaddrpair.hh	/^    uint32_t _timeout;$/;"	m	class:AggregateIPAddrPair
_timeout	elements/etherswitch/etherswitch.hh	/^    uint32_t _timeout;$/;"	m	class:EtherSwitch
_timeout	elements/grid/ackretrysender.hh	/^  unsigned int _timeout; \/\/ msecs$/;"	m	class:ACKRetrySender
_timeout	elements/grid/ackretrysender2.hh	/^  unsigned int _timeout; \/\/ msecs$/;"	m	class:ACKRetrySender2
_timeout	elements/grid/dsdvroutetable.hh	/^  unsigned int _timeout; \/\/ msecs$/;"	m	class:DSDVRouteTable
_timeout	elements/grid/gridroutetable.hh	/^  int _timeout; \/\/ msecs, -1 if we are not timing out entries$/;"	m	class:GridRouteTable
_timeout	elements/grid/updateroutes.hh	/^  int _timeout; \/\/ -1 if we are not timing out entries$/;"	m	class:UpdateGridRoutes
_timeout_j	elements/ethernet/arptable.hh	/^    uint32_t _timeout_j;$/;"	m	class:ARPTable
_timeout_jiffies	elements/grid/floodinglocquerier.hh	/^  unsigned int _timeout_jiffies;$/;"	m	class:FloodingLocQuerier
_timeout_jiffies	elements/grid/gridroutetable.hh	/^  unsigned int _timeout_jiffies;$/;"	m	class:GridRouteTable
_timeout_jiffies	elements/grid/locqueryresponder.hh	/^  unsigned int _timeout_jiffies;$/;"	m	class:LocQueryResponder
_timeout_jiffies	elements/grid/updateroutes.hh	/^  unsigned int _timeout_jiffies;$/;"	m	class:UpdateGridRoutes
_timeouts	elements/ip/iprewriterbase.hh	/^    uint32_t _timeouts[2];$/;"	m	class:IPRewriterBase
_timer	elements/analysis/fromipsumdump.hh	/^    Timer _timer;$/;"	m	class:FromIPSummaryDump
_timer	elements/analysis/fromnetflowsumdump.hh	/^    Timer _timer;$/;"	m	class:FromNetFlowSummaryDump
_timer	elements/aqm/adaptivered.hh	/^    Timer _timer;$/;"	m	class:AdaptiveRED
_timer	elements/aqm/pi.hh	/^	Timer _timer;$/;"	m	class:PI
_timer	elements/ethernet/arpfaker.hh	/^  Timer _timer;$/;"	m	class:ARPFaker
_timer	elements/ethernet/etherpausesource.hh	/^    Timer _timer;$/;"	m	class:EtherPauseSource
_timer	elements/grid/ackretrysender.hh	/^  Timer _timer;$/;"	m	class:ACKRetrySender
_timer	elements/grid/ackretrysender2.hh	/^  Timer _timer;$/;"	m	class:ACKRetrySender2
_timer	elements/grid/hello.hh	/^  Timer _timer;$/;"	m	class:SendGridHello
_timer	elements/grid/linktester.hh	/^  class Timer _timer;$/;"	m	class:LinkTester	typeref:class:LinkTester::Timer
_timer	elements/grid/lrhello.hh	/^  Timer _timer;$/;"	m	class:SendGridLRHello
_timer	elements/grid/pep.hh	/^  Timer _timer;$/;"	m	class:PEP
_timer	elements/grid/regionpep.hh	/^  Timer _timer;$/;"	m	class:EstimateRouterRegion
_timer	elements/icmp/icmpsendpings.hh	/^    Timer _timer;$/;"	m	class:ICMPPingSource
_timer	elements/ip/ripsend.hh	/^  Timer _timer;$/;"	m	class:RIPSend
_timer	elements/linuxmodule/threadmonitor.hh	/^    Timer _timer;$/;"	m	class:ThreadMonitor
_timer	elements/standard/delayshaper.hh	/^    Timer _timer;$/;"	m	class:DelayShaper
_timer	elements/standard/delayunqueue.hh	/^    Timer _timer;$/;"	m	class:DelayUnqueue
_timer	elements/standard/linkunqueue.hh	/^    Timer _timer;$/;"	m	class:LinkUnqueue
_timer	elements/standard/pokehandlers.hh	/^    Timer _timer;$/;"	m	class:PokeHandlers
_timer	elements/standard/quitwatcher.hh	/^  Timer _timer;$/;"	m	class:QuitWatcher
_timer	elements/standard/ratedunqueue.hh	/^    Timer _timer;$/;"	m	class:RatedUnqueue
_timer	elements/standard/script.hh	/^    Timer _timer;$/;"	m	class:Script
_timer	elements/standard/timedsink.hh	/^    Timer _timer;$/;"	m	class:TimedSink
_timer	elements/standard/timedsource.hh	/^    Timer _timer;$/;"	m	class:TimedSource
_timer	elements/standard/timedunqueue.hh	/^    Timer _timer;$/;"	m	class:TimedUnqueue
_timer	elements/test/timertest.hh	/^    Timer _timer;$/;"	m	class:TimerTest
_timer	elements/threads/balancedthreadsched.hh	/^    Timer _timer;$/;"	m	class:BalancedThreadSched
_timer	elements/userlevel/fromdump.hh	/^    Timer _timer;$/;"	m	class:FromDump
_timer	elements/userlevel/progressbar.hh	/^    Timer _timer;$/;"	m	class:ProgressBar
_timer	elements/userlevel/rawsocket.hh	/^  Timer _timer;$/;"	m	class:RawSocket
_timer	elements/userlevel/socket.hh	/^  Timer _timer;$/;"	m	class:Socket
_timer	elements/userlevel/todevice.hh	/^    Timer _timer;$/;"	m	class:ToDevice
_timer	elements/wifi/ap/beaconsource.hh	/^  Timer _timer;$/;"	m	class:BeaconSource
_timer	elements/wifi/linktable.hh	/^  Timer _timer;$/;"	m	class:LinkTable
_timer	elements/wifi/madwifirate.hh	/^  Timer _timer;$/;"	m	class:MadwifiRate
_timer_calls	include/click/element.hh	/^    unsigned _timer_calls;	\/\/ Calls to timers owned by this element.$/;"	m	class:Element
_timer_check	include/click/timerset.hh	/^    Timestamp _timer_check;$/;"	m	class:TimerSet
_timer_check_reports	include/click/timerset.hh	/^    uint32_t _timer_check_reports;$/;"	m	class:TimerSet
_timer_count	include/click/timerset.hh	/^    unsigned _timer_count;$/;"	m	class:TimerSet
_timer_cycles	include/click/element.hh	/^    click_cycles_t _timer_cycles;	\/\/ Cycles spent in self from timers.$/;"	m	class:Element
_timer_heap	include/click/timerset.hh	/^    Vector<heap_element> _timer_heap;$/;"	m	class:TimerSet
_timer_lock	include/click/timerset.hh	/^    SimpleSpinlock _timer_lock;$/;"	m	class:TimerSet
_timer_processor	include/click/timerset.hh	/^    click_processor_t _timer_processor;$/;"	m	class:TimerSet
_timer_runchunk	include/click/timerset.hh	/^    Vector<Timer *> _timer_runchunk;$/;"	m	class:TimerSet
_timer_stride	include/click/timerset.hh	/^    unsigned _timer_stride;$/;"	m	class:TimerSet
_timer_task	include/click/timerset.hh	/^    struct task_struct *_timer_task;$/;"	m	class:TimerSet	typeref:struct:TimerSet::task_struct
_timers	include/click/routerthread.hh	/^    TimerSet _timers;$/;"	m	class:RouterThread
_times_issued	elements/grid/dsrroutetable.hh	/^    unsigned int _times_issued;$/;"	m	class:DSRRouteTable::InitiatedReq
_timestamp	elements/etherswitch/bridgemessage.hh	/^  Timestamp _timestamp; \/\/ When the message should be considered to have$/;"	m	class:BridgeMessage
_timestamp	elements/grid/printgrid.hh	/^  bool _timestamp;$/;"	m	class:PrintGrid
_timestamp	elements/linuxmodule/anydevice.hh	/^    bool _timestamp;$/;"	m	class:AnyDevice
_timestamp	elements/standard/infinitesource.hh	/^    bool _timestamp;$/;"	m	class:InfiniteSource
_timestamp	elements/userlevel/socket.hh	/^  bool _timestamp;		\/\/ set the timestamp on received packets$/;"	m	class:Socket
_timestamp	elements/wifi/printwifi.hh	/^  bool _timestamp;$/;"	m	class:PrintWifi
_timestamp_warning	elements/analysis/aggregateipaddrpair.hh	/^    bool _timestamp_warning;$/;"	m	class:AggregateIPAddrPair
_timing	elements/analysis/fromnetflowsumdump.hh	/^    bool _timing;$/;"	m	class:FromNetFlowSummaryDump
_timing_offset	elements/analysis/fromipsumdump.hh	/^    Timestamp _timing_offset;$/;"	m	class:FromIPSummaryDump
_to	elements/wifi/linktable.hh	/^    IPAddress _to;$/;"	m	class:IPPair
_to	elements/wifi/linktable.hh	/^    IPAddress _to;$/;"	m	class:LinkTable::Link
_to	elements/wifi/linktable.hh	/^    IPAddress _to;$/;"	m	class:LinkTable::LinkInfo
_to_pp_from	tools/click-xform/click-xform.cc	/^  Vector<PortT> _to_pp_from;$/;"	m	class:Matcher	file:
_to_pp_to	tools/click-xform/click-xform.cc	/^  Vector<PortT> _to_pp_to;$/;"	m	class:Matcher	file:
_token_scale	include/click/tokenbucket.hh	/^    token_type _token_scale;$/;"	m	class:TokenRateX
_tokens	include/click/tokenbucket.hh	/^    token_type _tokens;$/;"	m	class:TokenCounterX
_tokens_per_epoch	include/click/tokenbucket.hh	/^    token_type _tokens_per_epoch;	\/\/ 0 iff idle()$/;"	m	class:TokenRateX
_too_short	elements/linuxmodule/todevice.hh	/^    uint32_t _too_short;$/;"	m	class:ToDevice
_topology_change	elements/etherswitch/spantree.hh	/^  Timestamp* _topology_change;	\/\/ If set, tc should be sent with messages.$/;"	m	class:EtherSpanTree
_total_fail	elements/wifi/probetxrate.hh	/^    Vector<int> _total_fail;$/;"	m	struct:ProbeTXRate::DstInfo
_total_flows	elements/analysis/aggpktcounter.hh	/^    uint32_t _total_flows;$/;"	m	class:AggregatePacketCounter
_total_packets	elements/analysis/aggpktcounter.hh	/^    packetctr_t _total_packets;$/;"	m	class:AggregatePacketCounter
_total_success	elements/wifi/probetxrate.hh	/^    Vector<int> _total_success;$/;"	m	struct:ProbeTXRate::DstInfo
_total_time	elements/wifi/probetxrate.hh	/^    Vector<int> _total_time;$/;"	m	struct:ProbeTXRate::DstInfo
_total_tries	elements/wifi/probetxrate.hh	/^    Vector<int> _total_tries;$/;"	m	struct:ProbeTXRate::DstInfo
_traceinfo_file	elements/analysis/aggregateipflows.hh	/^    FILE *_traceinfo_file;$/;"	m	class:AggregateIPFlows
_traceinfo_filename	elements/analysis/aggregateipflows.hh	/^    String _traceinfo_filename;$/;"	m	class:AggregateIPFlows
_track	elements/wifi/station/beacontracker.hh	/^  int _track;$/;"	m	class:BeaconTracker
_traits	tools/lib/eclasst.hh	/^    mutable const ElementTraits *_traits;$/;"	m	class:ElementClassT
_traits	tools/lib/routert.hh	/^    mutable ElementTraits _traits;$/;"	m	class:RouterT
_traits_version	tools/lib/eclasst.hh	/^    mutable int _traits_version;$/;"	m	class:ElementClassT
_transp_proto	elements/ip/ipfilter.hh	/^	int _transp_proto;$/;"	m	struct:IPFilter::Primitive
_tree	elements/ip/ipfilter.hh	/^	Vector<int> &_tree;$/;"	m	struct:IPFilter::Parser
_tries	elements/wifi/probetxrate.hh	/^    int _tries;$/;"	m	struct:ProbeTXRate::tx_result
_tries	elements/wifi/settxrate.hh	/^  int _tries;$/;"	m	class:SetTXRate
_trigger	elements/tcpudp/tcprewriter.hh	/^	tcp_seq_t _trigger[2];$/;"	m	class:TCPRewriter::TCPFlow
_trigger_hooks	elements/grid/dsdvroutetable.hh	/^  HMap _trigger_hooks;$/;"	m	class:DSDVRouteTable
_trigger_timers	elements/grid/dsdvroutetable.hh	/^  TMap _trigger_timers;$/;"	m	class:DSDVRouteTable
_ts	elements/analysis/adjusttimestamp.hh	/^    Timestamp _ts;$/;"	m	class:AdjustTimestamp
_tstamp	elements/bsdmodule/fromdevice.hh	/^    uint64_t _tstamp;$/;"	m	class:FromDevice
_tt	apps/clicky/src/wmain.cc	/^    GtkTextTagTable *_tt;$/;"	m	class:clicky::ClickyLexerTInfo	file:
_ttl	elements/grid/dsrroutetable.hh	/^    int _ttl; \/\/ ttl used on the last request$/;"	m	class:DSRRouteTable::InitiatedReq
_tuid_map	tools/lib/runparse.hh	/^    HashTable<int, int> _tuid_map;$/;"	m	class:RouterUnparserT
_tunnel_input	tools/lib/elementt.hh	/^    ElementT *_tunnel_input;$/;"	m	struct:ElementT
_tunnel_output	tools/lib/elementt.hh	/^    ElementT *_tunnel_output;$/;"	m	struct:ElementT
_tunnels	include/click/lexer.hh	/^    Vector<TunnelEnd *> _tunnels;$/;"	m	class:Lexer
_turnoff_timer	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	bool _turnoff_timer;$/;"	m	class:PFShapeFW
_tv	elements/standard/settimestamp.hh	/^    Timestamp _tv;$/;"	m	class:SetTimestamp
_tv_last_schedule	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	struct timeval _tv_last_schedule;$/;"	m	class:PFSchedFW	typeref:struct:PFSchedFW::timeval
_tv_last_signal	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.hh	/^	struct timeval _tv_last_signal;$/;"	m	class:VcBWShapeByCD	typeref:struct:VcBWShapeByCD::timeval
_tv_last_signal	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.hh	/^	struct timeval _tv_last_signal;$/;"	m	class:VcBWShapeByCD_CFB	typeref:struct:VcBWShapeByCD_CFB::timeval
_tv_sec	include/click/gaprate.hh	/^    Timestamp::seconds_type _tv_sec;	\/\/ current second$/;"	m	class:GapRate
_twoway	elements/grid/e2elossmetric.hh	/^  bool _twoway;$/;"	m	class:E2ELossMetric
_twoway	elements/grid/threshmetric.hh	/^  bool _twoway;$/;"	m	class:ThresholdMetric
_tx_queue	elements/linuxmodule/todevice.hh	/^    enum { _tx_queue = 0 };$/;"	e	enum:ToDevice::__anon318
_tx_queue	elements/linuxmodule/todevice.hh	/^    int _tx_queue;$/;"	m	class:ToDevice
_type	apps/clicky/src/dstyle.hh	/^    String _type;$/;"	m	class:clicky::dcss_selector
_type	apps/clicky/src/dwidget.hh	/^    int _type;$/;"	m	class:clicky::dwidget
_type	elements/analysis/settimestampdelta.hh	/^    int _type;$/;"	m	class:SetTimestampDelta
_type	elements/icmp/icmperror.hh	/^    int _type;$/;"	m	class:ICMPError
_type	elements/ip/ipfilter.hh	/^	int _type;$/;"	m	struct:IPFilter::Primitive
_type	elements/ip6/icmp6error.hh	/^  int _type;$/;"	m	class:ICMP6Error
_type	elements/linuxmodule/tohost.hh	/^    int _type;$/;"	m	class:ToHost
_type	elements/linuxmodule/touserdevice.hh	/^    uint8_t         _type;$/;"	m	class:ToUserDevice
_type	elements/standard/script.hh	/^    int _type;$/;"	m	class:Script
_type	elements/userlevel/controlsocket.hh	/^    uint8_t _type;$/;"	m	class:ControlSocket
_type	elements/userlevel/kerneltun.hh	/^    Type _type;$/;"	m	class:KernelTun
_type	include/click/nameinfo.hh	/^    int _type;$/;"	m	struct:NamedIntArg
_type	include/click/nameinfo.hh	/^    uint32_t _type;$/;"	m	class:NameDB
_type	tools/click-pretty/click-pretty.cc	/^    int _type;$/;"	m	struct:OutputItem	file:
_type	tools/click2xml/xml2click.hh	/^    ElementClassT *_type;$/;"	m	struct:CxConfig
_type	tools/lib/elementt.hh	/^    ElementClassT *_type;$/;"	m	struct:ElementT
_type_glob	apps/clicky/src/dstyle.hh	/^    char _type_glob;$/;"	m	class:clicky::dcss_selector
_type_landmark	tools/lib/routert.hh	/^    LandmarkT _type_landmark;$/;"	m	class:RouterT
_types	tools/lib/runparse.hh	/^    Vector<ElementClassT *> _types;$/;"	m	class:RouterUnparserT
_u	elements/ip/ipfilter.hh	/^	PrimitiveData _u;$/;"	m	struct:IPFilter::Primitive
_u	tools/click-pretty/click-pretty.cc	/^    } _u;$/;"	m	struct:OutputItem	typeref:union:OutputItem::__anon538	file:
_udp_allocator	elements/tcpudp/iprewriter.hh	/^    SizedHashAllocator<sizeof(IPRewriterFlow)> _udp_allocator;$/;"	m	class:IPRewriter
_udp_csum_delta	elements/ip/iprwmapping.hh	/^    uint16_t _udp_csum_delta;$/;"	m	class:IPRewriterFlow
_udp_map	elements/analysis/aggregateipflows.hh	/^    Map _udp_map;$/;"	m	class:AggregateIPFlows
_udp_map	elements/tcpudp/iprewriter.hh	/^    Map _udp_map;$/;"	m	class:IPRewriter
_udp_timeout	elements/analysis/aggregateipflows.hh	/^    uint32_t _udp_timeout;$/;"	m	class:AggregateIPFlows
_udp_timeouts	elements/tcpudp/iprewriter.hh	/^    uint32_t _udp_timeouts[2];$/;"	m	class:IPRewriter
_ugap	include/click/gaprate.hh	/^    unsigned _ugap;		\/\/ (1000000 << UGAP_SHIFT) \/ _rate$/;"	m	class:GapRate
_unbuffered	elements/userlevel/todump.hh	/^    bool _unbuffered;$/;"	m	class:ToDump
_unget	test/testie	/^sub _unget ($$) {$/;"	s
_unix_pathname	elements/userlevel/chattersocket.hh	/^  String _unix_pathname;$/;"	m	class:ChatterSocket
_unix_pathname	elements/userlevel/controlsocket.hh	/^    String _unix_pathname;$/;"	m	class:ControlSocket
_unknown_map	elements/bsdmodule/anydevice.hh	/^    AnyDevice *_unknown_map;$/;"	m	class:AnyDeviceMap
_unknown_map	elements/linuxmodule/anydevice.hh	/^    AnyDevice *_unknown_map;$/;"	m	class:AnyDeviceMap
_unlex	include/click/lexer.hh	/^    Lexeme _unlex[2];$/;"	m	class:Lexer
_unlex	tools/lib/lexert.hh	/^    Lexeme _unlex[UNLEX_SIZE];$/;"	m	class:LexerT
_unlex_pos	include/click/lexer.hh	/^    int _unlex_pos;$/;"	m	class:Lexer
_unlex_pos	tools/lib/lexert.hh	/^    int _unlex_pos;$/;"	m	class:LexerT
_unshift_ip_addr	elements/analysis/aggregateip.hh	/^    bool _unshift_ip_addr;$/;"	m	class:AggregateIP
_up_call	elements/linuxmodule/anydevice.hh	/^    HandlerCall *_up_call;$/;"	m	class:AnyDevice
_updating	apps/clicky/src/whandler.hh	/^    int _updating;$/;"	m	struct:clicky::whandler
_upstream_signal	elements/standard/delayshaper.hh	/^    NotifierSignal _upstream_signal;$/;"	m	class:DelayShaper
_upstreams	apps/clicky/src/crouter.hh	/^    HashTable<String, reachable_t> _upstreams;$/;"	m	class:clicky::crouter
_use_address	elements/ip/storeipaddress.hh	/^    bool _use_address;$/;"	m	class:StoreIPAddress
_use_anno	elements/ethernet/ethervlanannoencap.hh	/^    bool _use_anno;$/;"	m	class:EtherVLANAnnoEncap
_use_anno	elements/ethernet/ethervlanencap.hh	/^    bool _use_anno;$/;"	m	class:EtherVLANEncap
_use_anno	elements/ethernet/vlanencap.hh	/^    bool _use_anno;$/;"	m	class:VLANEncap
_use_blacklist	elements/grid/dsrroutetable.hh	/^  bool _use_blacklist;$/;"	m	class:DSRRouteTable
_use_count	apps/clicky/src/ref.hh	/^    uint32_t _use_count;$/;"	m	class:enable_ref_ptr
_use_count	elements/ip/iprewriterbase.hh	/^    uint32_t _use_count;$/;"	m	class:IPRewriterHeap
_use_count	include/click/handler.hh	/^    int _use_count;$/;"	m	class:Handler
_use_count	include/click/packet.hh	/^    atomic_uint32_t _use_count;$/;"	m	class:Packet
_use_count	tools/lib/eclasst.hh	/^    int _use_count;$/;"	m	class:ElementClassT
_use_count	tools/lib/elementmap.hh	/^    int _use_count;$/;"	m	class:ElementMap
_use_dst_anno	elements/ip6/ip6encap.hh	/^  bool      _use_dst_anno;$/;"	m	class:IP6Encap
_use_dst_anno	elements/tcpudp/udpip6encap.hh	/^    bool _use_dst_anno;$/;"	m	class:UDPIP6Encap
_use_dst_anno	elements/tcpudp/udpipencap.hh	/^    bool _use_dst_anno;$/;"	m	class:UDPIPEncap
_use_encap_from	elements/userlevel/todump.hh	/^    Element **_use_encap_from;$/;"	m	class:ToDump
_use_fix_anno	elements/icmp/icmperror.hh	/^    bool _use_fix_anno;$/;"	m	class:ICMPError
_use_good_new_route	elements/grid/dsdvroutetable.hh	/^  bool _use_good_new_route;$/;"	m	class:DSDVRouteTable
_use_native_vlan	elements/ethernet/ethervlanannoencap.hh	/^    bool _use_native_vlan;$/;"	m	class:EtherVLANAnnoEncap
_use_net_byteorder	elements/grid/incseqno.hh	/^  bool _use_net_byteorder;$/;"	m	class:IncrementSeqNo
_use_old_route	elements/grid/dsdvroutetable.hh	/^  bool _use_old_route;$/;"	m	class:DSDVRouteTable
_use_proto2	elements/grid/linkstat.hh	/^  bool _use_proto2;$/;"	m	class:LinkStat
_use_seen	elements/grid/dsdvroutetable.hh	/^  bool _use_seen;$/;"	m	class:DSDVRouteTable
_use_seq_metric	elements/grid/dsdvroutetable.hh	/^  bool _use_seq_metric; \/\/ use the `dsdv_seqs' metric$/;"	m	class:DSDVRouteTable
_use_xy	elements/grid/radiosim.hh	/^  bool _use_xy;$/;"	m	class:RadioSim
_usec_accum	elements/analysis/timestampaccum.hh	/^    double _usec_accum;$/;"	m	class:TimestampAccum
_usepcap	elements/userlevel/ipflowrawsockets.hh	/^    bool _usepcap;$/;"	m	class:IPFlowRawSockets
_user_data	tools/lib/elementt.hh	/^    void *_user_data;$/;"	m	struct:ElementT
_user_length	elements/linuxmodule/polldevice.hh	/^    bool _user_length;$/;"	m	class:PollDevice
_utf8	apps/clicky/src/gathererror.hh	/^    bool _utf8;$/;"	m	class:GatherErrorHandler
_v	apps/clicky/src/dstyle.hh	/^    } _v;$/;"	m	struct:clicky::dcss_property	typeref:union:clicky::dcss_property::__anon20
_v	apps/clicky/src/gathererror.hh	/^    Vector<Message> _v;$/;"	m	class:GatherErrorHandler
_v	apps/clicky/src/hvalues.hh	/^    handler_value *_v;$/;"	m	struct:clicky::handler_value_iterator
_v	elements/ethernet/arpresponder.hh	/^    Vector<Entry> _v;$/;"	m	class:ARPResponder
_v	elements/ethernet/ip6ndadvertiser.hh	/^  Vector<Entry> _v;$/;"	m	class:IP6NDAdvertiser
_v	elements/ip/radixiplookup.hh	/^    Vector<IPRoute> _v;$/;"	m	class:RadixIPLookup
_v	elements/ip6/addresstranslator.hh	/^  Vector<EntryMap> _v;$/;"	m	class:AddressTranslator
_v	elements/ipsec/radixipseclookup.hh	/^    Vector<IPsecRoute> _v;$/;"	m	class:RadixIPsecLookup
_v	include/click/ip6table.hh	/^  Vector<Entry> _v;$/;"	m	class:IP6Table
_v	include/click/iptable.hh	/^  Vector<Entry> _v;$/;"	m	class:IPTable
_v	include/click/notifier.hh	/^    } _v;$/;"	m	class:NotifierSignal	typeref:union:NotifierSignal::__anon431
_val	elements/grid/gridgenericmetric.hh	/^    unsigned _val;$/;"	m	class:GridGenericMetric::metric_t
_val	elements/ip/ipfieldinfo.hh	/^    int32_t _val;$/;"	m	class:IPField
_val	include/click/atomic.hh	/^    atomic_t _val;$/;"	m	class:atomic_uint32_t
_val	include/click/atomic.hh	/^    uint32_t _val;$/;"	m	class:atomic_uint32_t
_val	include/click/atomic.hh	/^    volatile uint32_t _val;$/;"	m	class:atomic_uint32_t
_valid	include/click/ip6table.hh	/^    int _valid;$/;"	m	struct:IP6Table::Entry
_value	elements/standard/setannobyte.hh	/^    unsigned char _value;$/;"	m	class:SetAnnoByte
_value	include/click/handlercall.hh	/^    String _value;$/;"	m	class:HandlerCall
_value_size	include/click/nameinfo.hh	/^    size_t _value_size;$/;"	m	class:NameDB
_values	include/click/nameinfo.hh	/^    StringAccum _values;$/;"	m	class:DynamicNameDB
_values	include/click/variableenv.hh	/^    Vector<String> _values;$/;"	m	class:VariableEnvironment
_variation_top	elements/ip/iprwpattern.hh	/^    uint32_t _variation_top;$/;"	m	class:IPRewriterPattern
_vars	elements/standard/script.hh	/^    Vector<String> _vars;$/;"	m	class:Script
_vcClassify	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	VcFlowClassify				*_vcClassify;$/;"	m	class:PFSchedFW
_vcClassify	elements/local/FlowNet/shaper/PFShapeFW.hh	/^        VcFlowClassify                          *_vcClassify;$/;"	m	class:PFShapeFW
_vcSched	elements/local/FlowNet/common/ScheduleOuter.hh	/^	VcSchedule* _vcSched;$/;"	m	class:VcScheduleOuter
_vcSched	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	VcSchedule				*_vcSched;$/;"	m	class:PFSchedFW
_vcSchedOuter	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	VcScheduleOuter				*_vcSchedOuter;$/;"	m	class:PFSchedFW
_vcShape	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^	VcBWShape	*_vcShape;$/;"	m	class:FlowBWShaperable
_vcShape	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	VcBWShape				*_vcShape;$/;"	m	class:PFShapeFW
_vcTable	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	VcTableLinear<FlowSchedulable>		*_vcTable;$/;"	m	class:PFSchedFW
_vcTable	elements/local/FlowNet/shaper/PFShapeFW.hh	/^        VcTableLinear<FlowBWShaperable>         *_vcTable;$/;"	m	class:PFShapeFW
_verbose	elements/grid/ackretrysender.hh	/^  bool _verbose;$/;"	m	class:ACKRetrySender
_verbose	elements/grid/ackretrysender2.hh	/^  bool _verbose;$/;"	m	class:ACKRetrySender2
_verbose	elements/grid/dsdvroutetable.hh	/^  bool _verbose;$/;"	m	class:DSDVRouteTable
_verbose	elements/grid/lookuplocalgridroute2.hh	/^  bool _verbose;$/;"	m	class:LookupLocalGridRoute2
_verbose	elements/grid/printgrid.hh	/^  bool _verbose;$/;"	m	class:PrintGrid
_verbose	elements/icmp/icmpsendpings.hh	/^    bool _verbose;$/;"	m	class:ICMPPingSource
_verbose	elements/ip/checkipheader.hh	/^  bool _verbose;$/;"	m	class:CheckIPHeader
_verbose	elements/ip/ipfragmenter.hh	/^  bool _verbose;$/;"	m	class:IPFragmenter
_verbose	elements/userlevel/khandlerproxy.hh	/^    bool _verbose;$/;"	m	class:KernelHandlerProxy
_verbose	elements/userlevel/socket.hh	/^  bool _verbose;		\/\/ be verbose$/;"	m	class:Socket
_version	tools/lib/elementmap.hh	/^    mutable int32_t _version;$/;"	m	class:ElementMap
_vert_adjust	apps/clicky/src/wdiagram.hh	/^    GtkAdjustment *_vert_adjust;$/;"	m	class:clicky::wdiagram
_vfree	elements/ip/radixiplookup.hh	/^    int _vfree;$/;"	m	class:RadixIPLookup
_vfree	elements/ipsec/radixipseclookup.hh	/^    int _vfree;$/;"	m	class:RadixIPsecLookup
_visible	apps/clicky/src/dwidget.hh	/^    bool _visible;$/;"	m	class:clicky::delt
_vlan_tci	elements/ethernet/setvlananno.hh	/^    uint16_t _vlan_tci;$/;"	m	class:SetVLANAnno
_vlan_tci	elements/ethernet/vlanencap.hh	/^    uint16_t _vlan_tci;$/;"	m	class:VLANEncap
_vlat	elements/grid/gridlocationinfo.hh	/^  double _vlat; \/\/ Latitude velocity (in degrees).$/;"	m	class:GridLocationInfo
_vlon	elements/grid/gridlocationinfo.hh	/^  double _vlon; \/\/ Longitude velocity.$/;"	m	class:GridLocationInfo
_vport	elements/ip/directiplookup.hh	/^	VirtualPort *_vport;$/;"	m	struct:DirectIPLookup::Table
_vport_capacity	elements/ip/directiplookup.hh	/^	uint32_t _vport_capacity;$/;"	m	struct:DirectIPLookup::Table
_vport_empty_head	elements/ip/directiplookup.hh	/^	int _vport_empty_head;$/;"	m	struct:DirectIPLookup::Table
_vport_head	elements/ip/directiplookup.hh	/^	int _vport_head;$/;"	m	struct:DirectIPLookup::Table
_vport_size	elements/ip/directiplookup.hh	/^	uint32_t _vport_size;$/;"	m	struct:DirectIPLookup::Table
_vstr	apps/clicky/src/dstyle.hh	/^    String _vstr;$/;"	m	struct:clicky::dcss_property
_w	elements/aqm/pi.hh	/^	double _a, _b, _w, _p;$/;"	m	class:PI
_w	elements/grid/region.hh	/^  double _w;$/;"	m	class:RectRegion
_w_slot	elements/linuxmodule/fromuserdevice.hh	/^    uint32_t _w_slot; \/\/ where we write to$/;"	m	class:FromUserDevice
_w_slot	elements/linuxmodule/touserdevice.hh	/^    uint32_t	    _w_slot;	\/\/ where we write to$/;"	m	class:ToUserDevice
_waiting_packet	elements/grid/ackretrysender.hh	/^  Packet *_waiting_packet;$/;"	m	class:ACKRetrySender
_waiting_packet	elements/grid/ackretrysender2.hh	/^  Packet *_waiting_packet;$/;"	m	class:ACKRetrySender2
_wake_pipe	include/click/selectset.hh	/^    int _wake_pipe[2];$/;"	m	class:SelectSet
_wake_pipe_pending	include/click/selectset.hh	/^    volatile bool _wake_pipe_pending;$/;"	m	class:SelectSet
_wakeup_timer	elements/linuxmodule/fromhost.hh	/^    Timer _wakeup_timer;$/;"	m	class:FromHost
_want	tools/click-align/alignclass.hh	/^  Aligner *_want;$/;"	m	class:CombinedAligner
_waps	elements/wifi/station/beaconscanner.hh	/^  APTable _waps;$/;"	m	class:BeaconScanner
_warp_class	include/click/timestamp.hh	/^    static warp_class_type _warp_class;$/;"	m	class:Timestamp
_warp_class	lib/timestamp.cc	/^Timestamp::warp_class_type Timestamp::_warp_class = Timestamp::warp_none;$/;"	m	class:Timestamp	file:
_warp_flat_offset	include/click/timestamp.hh	/^    static Timestamp _warp_flat_offset;$/;"	m	class:Timestamp
_warp_flat_offset	lib/timestamp.cc	/^Timestamp Timestamp::_warp_flat_offset = Timestamp(0, 0);$/;"	m	class:Timestamp	file:
_warp_offset	include/click/timestamp.hh	/^    static double _warp_offset;$/;"	m	class:Timestamp
_warp_offset	lib/timestamp.cc	/^double Timestamp::_warp_offset = 0.0;$/;"	m	class:Timestamp	file:
_warp_speed	include/click/timestamp.hh	/^    static double _warp_speed;$/;"	m	class:Timestamp
_warp_speed	lib/timestamp.cc	/^double Timestamp::_warp_speed = 1.0;$/;"	m	class:Timestamp	file:
_was_anonymous	tools/lib/elementt.hh	/^    bool _was_anonymous;$/;"	m	struct:ElementT
_wbs_beta	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	double _wbs_beta;$/;"	m	class:PFSchedFW
_wbs_gamma	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	double _wbs_gamma;$/;"	m	class:PFSchedFW
_wd	elements/userlevel/ipflowrawsockets.hh	/^	int _wd, _rd;$/;"	m	class:IPFlowRawSockets::Flow
_well_ordered	elements/analysis/timesortedsched.hh	/^    bool _well_ordered;$/;"	m	class:TimeSortedSched
_wentup	elements/wifi/autoratefallback.hh	/^    bool _wentup;$/;"	m	struct:AutoRateFallback::DstInfo
_wep	elements/wifi/wirelessinfo.hh	/^  bool _wep;$/;"	m	class:WirelessInfo
_what	elements/ip/ripsend.hh	/^  IPAddress _what; \/\/ Route to advertise$/;"	m	class:RIPSend
_when	elements/grid/pep.hh	/^    Timestamp _when; \/\/ When we last updated this entry.$/;"	m	struct:PEP::Entry
_when	elements/grid/regionpep.hh	/^    Timestamp _when; \/\/ When we last updated this entry.$/;"	m	struct:EstimateRouterRegion::Entry
_when	elements/wifi/ap/stationtable.hh	/^  Timestamp _when; \/\/ When we last heard from this node.$/;"	m	class:Station
_when	elements/wifi/probetxrate.hh	/^    Timestamp _when;$/;"	m	struct:ProbeTXRate::tx_result
_which	elements/linuxmodule/perfcountaccum.hh	/^  int _which;$/;"	m	class:PerfCountAccum
_which	elements/linuxmodule/setperfcount.hh	/^  int _which;$/;"	m	class:SetPerfCount
_widget	apps/clicky/src/wdiagram.hh	/^    GtkWidget *_widget;$/;"	m	class:clicky::wdiagram
_width	apps/clicky/src/rectangle.hh	/^    double _width;$/;"	m	struct:rectangle
_window	apps/clicky/src/wmain.hh	/^    GtkWidget *_window;$/;"	m	class:clicky::wmain
_window	elements/grid/linkstat.hh	/^  unsigned int _window; \/\/ sequence numbers$/;"	m	class:LinkStat
_winfo	elements/wifi/ap/associationresponder.hh	/^  class WirelessInfo *_winfo;$/;"	m	class:AssociationResponder	typeref:class:AssociationResponder::WirelessInfo
_winfo	elements/wifi/ap/beaconsource.hh	/^  class WirelessInfo *_winfo;$/;"	m	class:BeaconSource	typeref:class:BeaconSource::WirelessInfo
_winfo	elements/wifi/ap/openauthresponder.hh	/^  class WirelessInfo *_winfo;$/;"	m	class:OpenAuthResponder	typeref:class:OpenAuthResponder::WirelessInfo
_winfo	elements/wifi/station/associationrequester.hh	/^  class WirelessInfo *_winfo;$/;"	m	class:AssociationRequester	typeref:class:AssociationRequester::WirelessInfo
_winfo	elements/wifi/station/beaconscanner.hh	/^  WirelessInfo *_winfo;$/;"	m	class:BeaconScanner
_winfo	elements/wifi/station/beacontracker.hh	/^  class WirelessInfo *_winfo;$/;"	m	class:BeaconTracker	typeref:class:BeaconTracker::WirelessInfo
_winfo	elements/wifi/station/openauthrequester.hh	/^  class WirelessInfo *_winfo;$/;"	m	class:OpenAuthRequester	typeref:class:OpenAuthRequester::WirelessInfo
_winfo	elements/wifi/station/proberequester.hh	/^  class WirelessInfo *_winfo;$/;"	m	class:ProbeRequester	typeref:class:ProbeRequester::WirelessInfo
_winfo	elements/wifi/wifiencap.hh	/^  class WirelessInfo *_winfo;$/;"	m	class:WifiEncap	typeref:class:WifiEncap::WirelessInfo
_words	elements/ip/ipfilter.hh	/^	const Vector<String> &_words;$/;"	m	struct:IPFilter::Parser
_work_done	include/click/task.hh	/^    unsigned _work_done;$/;"	m	class:Task
_work_packet	elements/analysis/fromipsumdump.hh	/^    Packet *_work_packet;$/;"	m	class:FromIPSummaryDump
_work_packet	elements/analysis/fromnetflowsumdump.hh	/^    Packet *_work_packet;$/;"	m	class:FromNetFlowSummaryDump
_wq	elements/userlevel/rawsocket.hh	/^  Packet *_wq;			\/\/ queue to store pulled packet for when sendto() blocks$/;"	m	class:RawSocket
_wq	elements/userlevel/socket.hh	/^  Packet *_wq;			\/\/ queue to store pulled packet for when sendto() blocks$/;"	m	class:Socket
_wrapped	linuxmodule/modulepriv.hh	/^    bool _wrapped;$/;"	m	class:KernelErrorHandler
_write_count	elements/linuxmodule/fromuserdevice.hh	/^    uint32_t _write_count;$/;"	m	class:FromUserDevice
_write_hook	include/click/handler.hh	/^    } _write_hook;$/;"	m	class:Handler	typeref:union:Handler::__anon470
_write_select_fd_set	include/click/selectset.hh	/^    fd_set _write_select_fd_set;$/;"	m	class:SelectSet
_write_status	elements/standard/script.hh	/^    int _write_status;$/;"	m	class:Script
_write_user_data	include/click/handler.hh	/^    void *_write_user_data;$/;"	m	class:Handler
_wst0	elements/grid/dsdvroutetable.hh	/^  unsigned int    _wst0;  \/\/ msecs$/;"	m	class:DSDVRouteTable
_x	apps/clicky/src/rectangle.hh	/^    double _x;			\/\/ order required$/;"	m	struct:rectangle
_x	apps/clicky/src/rectangle.hh	/^    double _x;$/;"	m	struct:point
_x	elements/grid/pep.cc	/^  double _x[20];$/;"	m	class:PEPAmoeba	file:
_x	elements/grid/region.hh	/^  double _x;$/;"	m	class:RectRegion
_x	include/click/ino.hh	/^    Entry* _x;$/;"	m	class:ClickIno
_x	include/click/list.hh	/^	T *_x;$/;"	m	class:List::const_iterator
_x	tools/click-xform/adjacency.hh	/^  unsigned *_x;$/;"	m	class:AdjacencyMatrix
_x8021Q_tag_t	drivers/e1000-4.x/src/ans.h	/^typedef struct _x8021Q_tag_t {$/;"	s
_xhead	elements/standard/threadsafequeue.hh	/^    atomic_uint32_t _xhead;$/;"	m	class:ThreadSafeQueue
_xml_landmark	tools/click2xml/xml2click.hh	/^    String _xml_landmark;$/;"	m	struct:CxConfig
_xrect	apps/clicky/src/dwidget.hh	/^    rectangle _xrect;$/;"	m	class:clicky::delt
_xtail	elements/standard/threadsafequeue.hh	/^    atomic_uint32_t _xtail;$/;"	m	class:ThreadSafeQueue
_y	apps/clicky/src/rectangle.hh	/^    double _y;$/;"	m	struct:point
_y	apps/clicky/src/rectangle.hh	/^    double _y;$/;"	m	struct:rectangle
_y	elements/grid/pep.cc	/^  double _y[20];$/;"	m	class:PEPAmoeba	file:
_y	elements/grid/region.hh	/^  double _y;$/;"	m	class:RectRegion
_z_index	apps/clicky/src/dwidget.hh	/^    int _z_index;$/;"	m	class:clicky::dwidget
_zero	elements/analysis/fromnetflowsumdump.hh	/^    bool _zero;$/;"	m	class:FromNetFlowSummaryDump
_zero_count	elements/linuxmodule/cyclecountaccum.hh	/^    uint64_t _zero_count;$/;"	m	class:CycleCountAccum
_zero_route	elements/ip/lineariplookup.hh	/^    int _zero_route;$/;"	m	class:LinearIPLookup
_zero_warned	elements/ethernet/arpquerier.hh	/^    bool _zero_warned;$/;"	m	class:ARPQuerier
_zprog	elements/ip/ipfilter.hh	/^    IPFilterProgram _zprog;$/;"	m	class:IPFilter
_zprog	elements/standard/classification.hh	/^    Vector<uint32_t> _zprog;$/;"	m	class:Classification::Wordwise::CompressedProgram
a	elements/analysis/aggregateipaddrpair.hh	/^	uint32_t a;$/;"	m	struct:AggregateIPAddrPair::HostPair
a	elements/analysis/aggregateipflows.hh	/^	uint32_t a;$/;"	m	struct:AggregateIPFlows::HostPair
a	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	double a, b;        \/\/ coefficients of f(x) = a + b*x$/;"	m	struct:LinearRegression
a_field_length	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t a_field_length;$/;"	m	struct:mpeg2ts_adapt	file:
a_flag_OPCR	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			a_flag_OPCR : 1,$/;"	m	struct:mpeg2ts_adapt	file:
a_flag_PCR	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			a_flag_PCR : 1,$/;"	m	struct:mpeg2ts_adapt	file:
a_flag_extension	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		a_flag_extension : 1,$/;"	m	struct:mpeg2ts_adapt	file:
a_flag_private_data	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			a_flag_private_data : 1,$/;"	m	struct:mpeg2ts_adapt	file:
a_flag_splicing_point	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			a_flag_splicing_point : 1,$/;"	m	struct:mpeg2ts_adapt	file:
a_ind_discontinuity	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^		 	a_ind_discontinuity : 1;$/;"	m	struct:mpeg2ts_adapt	file:
a_ind_es_priority	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			a_ind_es_priority : 1,$/;"	m	struct:mpeg2ts_adapt	file:
a_ind_random_access	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			a_ind_random_access : 1,$/;"	m	struct:mpeg2ts_adapt	file:
aal5	elements/analysis/fromdagdump.hh	/^	    DAGAAL5Cell aal5;$/;"	m	union:FromDAGDump::DAGCell::__anon270
abcd	include/click/md5.h	/^    md5_word_t abcd[4];		\/* digest buffer *\/$/;"	m	struct:md5_state_s
absolute_seq	elements/analysis/toipflowdumps.hh	/^    bool absolute_seq() const		{ return _absolute_seq; }$/;"	f	class:ToIPFlowDumps
absolute_time	elements/analysis/toipflowdumps.hh	/^    bool absolute_time() const		{ return _absolute_time; }$/;"	f	class:ToIPFlowDumps
ac_fn_c_check_decl	configure	/^ac_fn_c_check_decl ()$/;"	f
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_compute_int	configure	/^ac_fn_c_compute_int ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_cxx_check_decl	configure	/^ac_fn_cxx_check_decl ()$/;"	f
ac_fn_cxx_check_func	configure	/^ac_fn_cxx_check_func ()$/;"	f
ac_fn_cxx_check_header_mongrel	configure	/^ac_fn_cxx_check_header_mongrel ()$/;"	f
ac_fn_cxx_check_type	configure	/^ac_fn_cxx_check_type ()$/;"	f
ac_fn_cxx_compute_int	configure	/^ac_fn_cxx_compute_int ()$/;"	f
ac_fn_cxx_try_compile	configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	configure	/^ac_fn_cxx_try_link ()$/;"	f
ac_fn_cxx_try_run	configure	/^ac_fn_cxx_try_run ()$/;"	f
accept	elements/local/OpenFlow/lib/vconn-provider.hh	/^    int (*accept)(struct pvconn *pvconn, struct vconn **new_vconnp);$/;"	m	struct:pvconn_class
accept_cb	elements/local/OpenFlow/lib/vconn-stream.cc	/^    int (*accept_cb)(int fd, const struct sockaddr *, size_t sa_len,$/;"	m	struct:pstream_pvconn	file:
accept_frame	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.hh	/^	int accept_frame;$/;"	m	struct:CBShapeByCD
accept_frame	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.hh	/^	int accept_frame;$/;"	m	struct:CBhapeByCD_CFB
accept_this_packet	elements/local/FlowNet/common/FlowNetGod.cc	/^int FlowNetGod::accept_this_packet( click_ip* ip )$/;"	f	class:FlowNetGod
accepting	conf/click-mkclgw.pl	/^sub accepting { return 0; }$/;"	s
accepting	conf/click-mkclgw.pl	/^sub accepting { return 1; }$/;"	s
accessible	linuxmodule/kernelversion.c	/^CLICK_INT_MODULE_PARAM(accessible);$/;"	v
accessible	linuxmodule/kernelversion.c	/^static int accessible = 1;$/;"	v	file:
account	apps/clicky/src/gathererror.cc	/^void GatherErrorHandler::account(int level)$/;"	f	class:GatherErrorHandler
account	bsdmodule/kernelerror.cc	/^KernelErrorHandler::account(int level)$/;"	f	class:KernelErrorHandler
account	bsdmodule/module.cc	/^KernelErrorHandler::account(int level)$/;"	f	class:KernelErrorHandler
account	elements/userlevel/controlsocket.cc	/^ControlSocketErrorHandler::account(int level)$/;"	f	class:ControlSocketErrorHandler
account	include/click/error.hh	/^    virtual void account(int level) {$/;"	f	class:ErrorHandler
account	lib/error.cc	/^BailErrorHandler::account(int level)$/;"	f	class:BailErrorHandler
account	lib/error.cc	/^ErrorVeneer::account(int level)$/;"	f	class:ErrorVeneer
account	lib/error.cc	/^FileErrorHandler::account(int level)$/;"	f	class:FileErrorHandler
account	linuxmodule/module.cc	/^KernelErrorHandler::account(int level)$/;"	f	class:KernelErrorHandler
account	tools/click-check/click-check.cc	/^    void account(int level) {$/;"	f	struct:__anon540::CheckErrorHandler
account_payload_len	elements/analysis/ipsumdump_payload.cc	/^static void account_payload_len(PacketOdesc &d, int32_t &off, uint32_t plen)$/;"	f	namespace:IPSummaryDump
accum	lib/args.cc	/^    uint64_t accum;$/;"	m	struct:__anon505::fraction_accum	file:
ack_sig_strength	elements/wifi/athdesc.h	/^	u_int32_t	ack_sig_strength:8;$/;"	m	struct:ar5212_desc
acquire	include/click/sync.hh	/^SimpleSpinlock::acquire()$/;"	f	class:SimpleSpinlock
acquire	include/click/sync.hh	/^Spinlock::acquire()$/;"	f	class:Spinlock
acquire	include/click/sync.hh	/^SpinlockIRQ::acquire()$/;"	f	class:SpinlockIRQ
acquire_read	include/click/sync.hh	/^ReadWriteLock::acquire_read()$/;"	f	class:ReadWriteLock
acquire_write	include/click/sync.hh	/^ReadWriteLock::acquire_write()$/;"	f	class:ReadWriteLock
act	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterNoSchedule.cc	/^void VcScheduleOuterNoSchedule::act()$/;"	f	class:VcScheduleOuterNoSchedule
act	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterVirtualpressure.cc	/^void VcScheduleOuterVirtualpressure::act()$/;"	f	class:VcScheduleOuterVirtualpressure
actionPerformed	apps/ClickController/ClickController.java	/^	public void actionPerformed(ActionEvent event) {$/;"	m	class:ClickController.ChangeButtonAction
actionPerformed	apps/ClickController/ClickController.java	/^        public void actionPerformed(ActionEvent e) {$/;"	m	class:ClickController.OpenAction
actionPerformed	apps/ClickController/NewConnectionDialog.java	/^        public void actionPerformed(ActionEvent e) {$/;"	m	class:NewConnectionDialog.DoneAction
actions	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_action_header actions[0]; \/* Actions. *\/$/;"	m	struct:ofp_flow_stats	typeref:struct:ofp_flow_stats::ofp_action_header
actions	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_action_header actions[0]; \/* Actions. *\/$/;"	m	struct:ofp_packet_out	typeref:struct:ofp_packet_out::ofp_action_header
actions	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_action_header actions[0]; \/* The action length is inferred$/;"	m	struct:ofp_flow_mod	typeref:struct:ofp_flow_mod::ofp_action_header
actions	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t actions;       \/* Bitmap of supported "ofp_action_type"s. *\/$/;"	m	struct:ofp_switch_features
actions	elements/local/OpenFlow/lib/switch-flow.hh	/^    struct ofp_action_header actions[0];$/;"	m	struct:sw_flow_actions	typeref:struct:sw_flow_actions::ofp_action_header
actions_len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t actions_len;         \/* Size of action array in bytes. *\/$/;"	m	struct:ofp_packet_out
actions_len	elements/local/OpenFlow/lib/switch-flow.hh	/^    size_t actions_len;$/;"	m	struct:sw_flow_actions
activate	include/click/router.hh	/^Router::activate(ErrorHandler* errh)$/;"	f	class:Router
activate	lib/router.cc	/^Router::activate(bool foreground, ErrorHandler *errh)$/;"	f	class:Router
activate	tools/click-pretty/click-pretty.cc	/^OutputItem::activate(bool a)$/;"	f	class:OutputItem
activate	tools/click-pretty/click-pretty.cc	/^activate(OutputItem &item, int &first_active)$/;"	f	file:
active	apps/clicky/src/cdriver.cc	/^bool clickfs_cdriver::active() const$/;"	f	class:clicky::clickfs_cdriver
active	apps/clicky/src/cdriver.cc	/^bool csocket_cdriver::active() const$/;"	f	class:clicky::csocket_cdriver
active	apps/clicky/src/whandler.hh	/^    bool active() const {$/;"	f	struct:clicky::whandler
active	elements/local/OpenFlow/lib/stp.cc	/^    bool active;                 \/* Timer in use? *\/$/;"	m	struct:stp_timer	file:
active	include/click/element.hh	/^Element::Port::active() const$/;"	f	class:Element::Port
active	include/click/notifier.hh	/^Notifier::active() const$/;"	f	class:Notifier
active	include/click/notifier.hh	/^NotifierSignal::active() const$/;"	f	class:NotifierSignal
active	include/click/routerthread.hh	/^RouterThread::active() const$/;"	f	class:RouterThread
active	tools/click-pretty/click-pretty.cc	/^    bool active : 1;$/;"	m	struct:OutputItem	file:
active_action	apps/clicky/src/whandler.hh	/^inline const String &whandler::active_action() const$/;"	f	class:clicky::whandler
active_count	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t active_count;   \/* Number of active entries. *\/$/;"	m	struct:ofp_table_stats
active_nodes	conf/click-mkclgw.pl	/^sub active_nodes { return (); }$/;"	s
active_nodes	conf/click-mkclgw.pl	/^sub active_nodes {$/;"	s
activity_pm	apps/clicky/src/dstyle.cc	/^static dcss_propmatch activity_pm[] = {$/;"	m	namespace:clicky	file:
activity_pmp	apps/clicky/src/dstyle.cc	/^static dcss_propmatch *activity_pmp[num_activity_pm];$/;"	m	namespace:clicky	file:
activity_style	apps/clicky/src/dstyle.cc	/^ref_ptr<dactivity_style> dcss_set::activity_style(PermString decor, crouter *cr, const delt *e)$/;"	f	class:clicky::dcss_set
actual_checksum	drivers/e1000-4.x/src/idiag_e1000.h	/^	uint32_t actual_checksum;$/;"	m	struct:idiag_e1000_diag_eeprom_test_param
adaptivePlayoutFactor	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int adaptivePlayoutFactor;$/;"	m	class:FlowMpeg2AdaptDecap
adaptive_ifs	drivers/e1000-4.x/src/e1000_hw.h	/^    boolean_t adaptive_ifs;$/;"	m	struct:e1000_hw
adaptive_ifs	drivers/e1000-5.x/src/e1000_hw.h	/^    boolean_t adaptive_ifs;$/;"	m	struct:e1000_hw
adaptive_ifs	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t adaptive_ifs;$/;"	m	struct:e1000_hw
add	apps/clicky/src/dstyle.cc	/^void dcss::add(PermString name, const String &value)$/;"	f	class:clicky::dcss
add	apps/clicky/src/dstyle.cc	/^void dcss_set::add(dcss *s)$/;"	f	class:clicky::dcss_set
add	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::Flow::add(uint32_t packetno, int column)$/;"	f	class:AggregatePacketCounter::Flow
add	elements/analysis/ipsumdumpinfo.cc	/^void FieldReader::add(const FieldReader *r)$/;"	f	class:IPSummaryDump::FieldReader
add	elements/analysis/ipsumdumpinfo.cc	/^void FieldSynonym::add(const FieldSynonym *s)$/;"	f	class:IPSummaryDump::FieldSynonym
add	elements/analysis/ipsumdumpinfo.cc	/^void FieldWriter::add(const FieldWriter *w)$/;"	f	class:IPSummaryDump::FieldWriter
add	elements/ethernet/arpresponder.cc	/^ARPResponder::add(Vector<Entry> &v, const String &arg, ErrorHandler *errh) const$/;"	f	class:ARPResponder
add	elements/local/FlowNet/libtable/TableLinear.hh	/^int VcTableLinear<T>::add(const FlowID* fid, T** f)$/;"	f	class:VcTableLinear
add	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t add;$/;"	m	struct:ofpstat::__anon247
add	elements/standard/pokehandlers.cc	/^PokeHandlers::add(Element *e, const String &hname, const String &value, int timeout)$/;"	f	class:PokeHandlers
add	include/click/bigint.hh	/^    static void add(limb_type &x1, limb_type &x0,$/;"	f	class:Bigint
add	lib/ip6table.cc	/^IP6Table::add(const IP6Address &dst, const IP6Address &mask,$/;"	f	class:IP6Table
add	lib/iptable.cc	/^IPTable::add(IPAddress dst, IPAddress mask, IPAddress gw, int index)$/;"	f	class:IPTable
add	test/testie	/^sub add ($$) {$/;"	s
add	tools/lib/elementmap.cc	/^ElementMap::add(const Traits &e)$/;"	f	class:ElementMap
addController	apps/ClickController/ClickController.java	/^    private static void addController(ClickController cntr) {$/;"	m	class:ClickController	file:
add_anon_element	tools/lib/routert.cc	/^RouterT::add_anon_element(ElementClassT *type, const String &config,$/;"	f	class:RouterT
add_archive	tools/lib/routert.cc	/^RouterT::add_archive(const ArchiveElement &ae)$/;"	f	class:RouterT
add_bcast_stat	elements/grid/linkstat.cc	/^LinkStat::add_bcast_stat(const EtherAddress &eth, const link_probe &lp)$/;"	f	class:LinkStat
add_bcast_stat	elements/grid/linktracker.cc	/^LinkTracker::add_bcast_stat(IPAddress dst, unsigned int num_rx, unsigned int num_expected, Timestamp last_bcast)$/;"	f	class:LinkTracker
add_bytes	elements/grid/gridlogger.hh	/^  void add_bytes(void *bytes, size_t n) {$/;"	f	class:GridLogger
add_callback	elements/grid/gridroutecb.hh	/^  int add_callback(GridRouteActionCallback *cb) {$/;"	f	class:GridRouteActor
add_chatter_socket	elements/userlevel/chattersocket.cc	/^ChatterSocketErrorHandler::add_chatter_socket(ChatterSocket *cs)$/;"	f	class:ChatterSocketErrorHandler
add_class_href	tools/click-pretty/click-pretty.cc	/^add_class_href(ElementClassT *type, const String &href)$/;"	f	file:
add_classifier_type	tools/click-fastclassifier/click-fastclassifier.cc	/^add_classifier_type(const String &name,$/;"	f
add_comparison_exprs	elements/ip/ipfilter.cc	/^IPFilter::Primitive::add_comparison_exprs(Classification::Wordwise::Program &p, Vector<int> &tree, int offset, int shift, bool swapped, bool op_negate) const$/;"	f	class:IPFilter::Primitive
add_compressable	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::add_compressable(const String &filename, ErrorHandler *errh)$/;"	f	class:ToIPFlowDumps
add_connection	lib/router.cc	/^Router::add_connection(int from_idx, int from_port, int to_idx, int to_port)$/;"	f	class:Router
add_connection	tools/lib/routert.cc	/^RouterT::add_connection(const PortT &hfrom, const PortT &hto,$/;"	f	class:RouterT
add_connection	tools/lib/routert.hh	/^RouterT::add_connection(ElementT *from_elt, int from_port, ElementT *to_elt,$/;"	f	class:RouterT
add_conversion	lib/error.cc	/^ErrorHandler::add_conversion(const String &name, ConversionFunction function)$/;"	f	class:ErrorHandler
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, EtherAddress *data)$/;"	f	class:Element
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, HandlerCallback callback, void *data)$/;"	f	class:Element
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, IPAddress *data)$/;"	f	class:Element
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, String *data)$/;"	f	class:Element
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, Timestamp *data,$/;"	f	class:Element
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, atomic_uint32_t *data)$/;"	f	class:Element
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, bool *data)$/;"	f	class:Element
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, double *data)$/;"	f	class:Element
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, int *data)$/;"	f	class:Element
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, long *data)$/;"	f	class:Element
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, long long *data)$/;"	f	class:Element
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, uint16_t *data)$/;"	f	class:Element
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, uint8_t *data)$/;"	f	class:Element
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, unsigned *data)$/;"	f	class:Element
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, unsigned long *data)$/;"	f	class:Element
add_data_handlers	lib/element.cc	/^Element::add_data_handlers(const String &name, int flags, unsigned long long *data)$/;"	f	class:Element
add_decimal_digit	lib/args.cc	/^    void add_decimal_digit(int d) {$/;"	f	struct:__anon505::fraction_accum
add_declared_type	tools/lib/routert.cc	/^RouterT::add_declared_type(ElementClassT *ec, bool anonymous)$/;"	f	class:RouterT
add_default_handlers	lib/element.cc	/^Element::add_default_handlers(bool allow_write_config)$/;"	f	class:Element
add_dependent_signal	lib/notifier.cc	/^ActiveNotifier::add_dependent_signal(NotifierSignal* signal)$/;"	f	class:ActiveNotifier
add_dependent_signal	lib/notifier.cc	/^Notifier::add_dependent_signal(NotifierSignal* signal)$/;"	f	class:Notifier
add_dsr_header	elements/grid/dsrroutetable.cc	/^DSRRouteTable::add_dsr_header(Packet *p_in, const Vector<IPAddress> &source_route)$/;"	f	class:DSRRouteTable
add_element	lib/router.cc	/^Router::add_element(Element *e, const String &ename, const String &conf,$/;"	f	class:Router
add_element	tools/lib/routert.cc	/^RouterT::add_element(const ElementT &elt_in)$/;"	f	class:RouterT
add_element_type	lib/lexer.cc	/^Lexer::add_element_type(const String &name, ElementFactory factory, uintptr_t thunk,$/;"	f	class:Lexer
add_entry	elements/grid/dsrarptable.cc	/^DSRArpTable::add_entry(IPAddress ip, EtherAddress eth)$/;"	f	class:DSRArpTable
add_entry	elements/grid/simplelocquerier.cc	/^SimpleLocQuerier::add_entry(const String &arg, Element *element,$/;"	f	class:SimpleLocQuerier
add_error_receiver	elements/userlevel/handlerproxy.cc	/^HandlerProxy::add_error_receiver(ErrorReceiverHook hook, void *thunk)$/;"	f	class:HandlerProxy
add_exprs_for_proto	elements/ip/ipfilter.cc	/^add_exprs_for_proto(int32_t proto, int32_t mask, Classification::Wordwise::Program &p, Vector<int> &tree)$/;"	f	file:
add_fast_classifiers_1	tools/click-fastclassifier/fc_classifier.cc	/^add_fast_classifiers_1()$/;"	f
add_fast_classifiers_2	tools/click-fastclassifier/fc_ipclassifier.cc	/^add_fast_classifiers_2()$/;"	f
add_fix	include/click/timestamp.hh	/^    inline void add_fix() {$/;"	f	class:Timestamp
add_flow	elements/icmp/icmppingrewriter.cc	/^ICMPPingRewriter::add_flow(int, const IPFlowID &flowid,$/;"	f	class:ICMPPingRewriter
add_flow	elements/ip/ipaddrpairrewriter.cc	/^IPAddrPairRewriter::add_flow(int, const IPFlowID &flowid,$/;"	f	class:IPAddrPairRewriter
add_flow	elements/ip/ipaddrrewriter.cc	/^IPAddrRewriter::add_flow(int, const IPFlowID &flowid,$/;"	f	class:IPAddrRewriter
add_flow	elements/local/OpenFlow/datapath.cc	/^int Datapath::add_flow(struct rconn_remote *rconn_sender, uint32_t xid UNUSED, const struct ofp_flow_mod *ofm)$/;"	f	class:Datapath
add_flow	elements/tcpudp/iprewriter.cc	/^IPRewriter::add_flow(int ip_p, const IPFlowID &flowid,$/;"	f	class:IPRewriter
add_flow	elements/tcpudp/tcprewriter.cc	/^TCPRewriter::add_flow(int \/*ip_p*\/, const IPFlowID &flowid,$/;"	f	class:TCPRewriter
add_flow	elements/tcpudp/udprewriter.cc	/^UDPRewriter::add_flow(int ip_p, const IPFlowID &flowid,$/;"	f	class:UDPRewriter
add_formal	tools/lib/routert.hh	/^RouterT::add_formal(const String &name, const String &type)$/;"	f	class:RouterT
add_frame_index	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^void FlowMpeg2AdaptEncapStat::add_frame_index( int fi )$/;"	f	class:FlowMpeg2AdaptEncapStat
add_frame_type	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^void FlowMpeg2AdaptEncapStat::add_frame_type( int ft )$/;"	f	class:FlowMpeg2AdaptEncapStat
add_handler	elements/ethernet/arpresponder.cc	/^ARPResponder::add_handler(const String &s, Element *e, void *, ErrorHandler *errh)$/;"	f	class:ARPResponder
add_handlers	elements/analysis/adjusttimestamp.cc	/^AdjustTimestamp::add_handlers()$/;"	f	class:AdjustTimestamp
add_handlers	elements/analysis/aggcounter.cc	/^AggregateCounter::add_handlers()$/;"	f	class:AggregateCounter
add_handlers	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::add_handlers()$/;"	f	class:AggregatePacketCounter
add_handlers	elements/analysis/aggregateip.cc	/^AggregateIP::add_handlers()$/;"	f	class:AggregateIP
add_handlers	elements/analysis/aggregateipaddrpair.cc	/^AggregateIPAddrPair::add_handlers()$/;"	f	class:AggregateIPAddrPair
add_handlers	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::add_handlers()$/;"	f	class:AggregateIPFlows
add_handlers	elements/analysis/aggregatelast.cc	/^AggregateLast::add_handlers()$/;"	f	class:AggregateLast
add_handlers	elements/analysis/fromcapdump.cc	/^FromCapDump::add_handlers()$/;"	f	class:FromCapDump
add_handlers	elements/analysis/fromdagdump.cc	/^FromDAGDump::add_handlers()$/;"	f	class:FromDAGDump
add_handlers	elements/analysis/fromflandump.cc	/^FromFlanDump::add_handlers()$/;"	f	class:FromFlanDump
add_handlers	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::add_handlers()$/;"	f	class:FromIPSummaryDump
add_handlers	elements/analysis/fromnetflowsumdump.cc	/^FromNetFlowSummaryDump::add_handlers()$/;"	f	class:FromNetFlowSummaryDump
add_handlers	elements/analysis/fromnlanrdump.cc	/^FromNLANRDump::add_handlers()$/;"	f	class:FromNLANRDump
add_handlers	elements/analysis/fromtcpdump.cc	/^FromTcpdump::add_handlers()$/;"	f	class:FromTcpdump
add_handlers	elements/analysis/settimestampdelta.cc	/^SetTimestampDelta::add_handlers()$/;"	f	class:SetTimestampDelta
add_handlers	elements/analysis/storeudptimeseqrecord.cc	/^void StoreUDPTimeSeqRecord::add_handlers()$/;"	f	class:StoreUDPTimeSeqRecord
add_handlers	elements/analysis/timefilter.cc	/^TimeFilter::add_handlers()$/;"	f	class:TimeFilter
add_handlers	elements/analysis/timerange.cc	/^TimeRange::add_handlers()$/;"	f	class:TimeRange
add_handlers	elements/analysis/timesortedsched.cc	/^TimeSortedSched::add_handlers()$/;"	f	class:TimeSortedSched
add_handlers	elements/analysis/timestampaccum.cc	/^TimestampAccum::add_handlers()$/;"	f	class:TimestampAccum
add_handlers	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::add_handlers()$/;"	f	class:ToIPFlowDumps
add_handlers	elements/analysis/toipsumdump.cc	/^ToIPSummaryDump::add_handlers()$/;"	f	class:ToIPSummaryDump
add_handlers	elements/aqm/pi.cc	/^PI::add_handlers()$/;"	f	class:PI
add_handlers	elements/aqm/red.cc	/^RED::add_handlers()$/;"	f	class:RED
add_handlers	elements/bsdmodule/fastudpsrc.cc	/^FastUDPSource::add_handlers()$/;"	f	class:FastUDPSource
add_handlers	elements/bsdmodule/fromdevice.cc	/^FromDevice::add_handlers()$/;"	f	class:FromDevice
add_handlers	elements/bsdmodule/todevice.cc	/^ToDevice::add_handlers()$/;"	f	class:ToDevice
add_handlers	elements/bsdmodule/tohost.cc	/^ToHost::add_handlers()$/;"	f	class:ToHost
add_handlers	elements/ethernet/arpprint.cc	/^ARPPrint::add_handlers()$/;"	f	class:ARPPrint
add_handlers	elements/ethernet/arpquerier.cc	/^ARPQuerier::add_handlers()$/;"	f	class:ARPQuerier
add_handlers	elements/ethernet/arpresponder.cc	/^ARPResponder::add_handlers()$/;"	f	class:ARPResponder
add_handlers	elements/ethernet/arptable.cc	/^ARPTable::add_handlers()$/;"	f	class:ARPTable
add_handlers	elements/ethernet/checkarpheader.cc	/^CheckARPHeader::add_handlers()$/;"	f	class:CheckARPHeader
add_handlers	elements/ethernet/etherencap.cc	/^EtherEncap::add_handlers()$/;"	f	class:EtherEncap
add_handlers	elements/ethernet/etherpausesource.cc	/^EtherPauseSource::add_handlers()$/;"	f	class:EtherPauseSource
add_handlers	elements/ethernet/ethervlanencap.cc	/^EtherVLANEncap::add_handlers()$/;"	f	class:EtherVLANEncap
add_handlers	elements/ethernet/hostetherfilter.cc	/^HostEtherFilter::add_handlers()$/;"	f	class:HostEtherFilter
add_handlers	elements/ethernet/ip6ndsolicitor.cc	/^IP6NDSolicitor::add_handlers()$/;"	f	class:IP6NDSolicitor
add_handlers	elements/ethernet/setvlananno.cc	/^SetVLANAnno::add_handlers()$/;"	f	class:SetVLANAnno
add_handlers	elements/ethernet/storeetheraddress.cc	/^StoreEtherAddress::add_handlers()$/;"	f	class:StoreEtherAddress
add_handlers	elements/ethernet/vlanencap.cc	/^VLANEncap::add_handlers()$/;"	f	class:VLANEncap
add_handlers	elements/etherswitch/etherswitch.cc	/^EtherSwitch::add_handlers()$/;"	f	class:EtherSwitch
add_handlers	elements/etherswitch/spantree.cc	/^EtherSpanTree::add_handlers()$/;"	f	class:EtherSpanTree
add_handlers	elements/grid/ackretrysender.cc	/^ACKRetrySender::add_handlers()$/;"	f	class:ACKRetrySender
add_handlers	elements/grid/ackretrysender2.cc	/^ACKRetrySender2::add_handlers()$/;"	f	class:ACKRetrySender2
add_handlers	elements/grid/checkgridheader.cc	/^CheckGridHeader::add_handlers()$/;"	f	class:CheckGridHeader
add_handlers	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::add_handlers()$/;"	f	class:DSDVRouteTable
add_handlers	elements/grid/floodinglocquerier.cc	/^FloodingLocQuerier::add_handlers()$/;"	f	class:FloodingLocQuerier
add_handlers	elements/grid/gridgatewayinfo.cc	/^GridGatewayInfo::add_handlers()$/;"	f	class:GridGatewayInfo
add_handlers	elements/grid/gridheaderinfo.cc	/^GridHeaderInfo::add_handlers()$/;"	f	class:GridHeaderInfo
add_handlers	elements/grid/gridlocationinfo.cc	/^GridLocationInfo::add_handlers()$/;"	f	class:GridLocationInfo
add_handlers	elements/grid/gridlocationinfo2.cc	/^GridLocationInfo2::add_handlers()$/;"	f	class:GridLocationInfo2
add_handlers	elements/grid/gridlogger.cc	/^GridLogger::add_handlers()$/;"	f	class:GridLogger
add_handlers	elements/grid/gridprobesender.cc	/^GridProbeSender::add_handlers()$/;"	f	class:GridProbeSender
add_handlers	elements/grid/gridproxy.cc	/^GridProxy::add_handlers()$/;"	f	class:GridProxy
add_handlers	elements/grid/gridroutetable.cc	/^GridRouteTable::add_handlers()$/;"	f	class:GridRouteTable
add_handlers	elements/grid/incseqno.cc	/^IncrementSeqNo::add_handlers() {$/;"	f	class:IncrementSeqNo
add_handlers	elements/grid/linkstat.cc	/^LinkStat::add_handlers()$/;"	f	class:LinkStat
add_handlers	elements/grid/linktracker.cc	/^LinkTracker::add_handlers()$/;"	f	class:LinkTracker
add_handlers	elements/grid/loctable.cc	/^LocationTable::add_handlers()$/;"	f	class:LocationTable
add_handlers	elements/grid/packetlogger.cc	/^PacketLogger::add_handlers()$/;"	f	class:PacketLogger
add_handlers	elements/grid/packetlogger2.cc	/^PacketLogger2::add_handlers()$/;"	f	class:PacketLogger2
add_handlers	elements/grid/pep.cc	/^PEP::add_handlers()$/;"	f	class:PEP
add_handlers	elements/grid/radiosim.cc	/^RadioSim::add_handlers()$/;"	f	class:RadioSim
add_handlers	elements/grid/regionpep.cc	/^EstimateRouterRegion::add_handlers()$/;"	f	class:EstimateRouterRegion
add_handlers	elements/grid/simplelocquerier.cc	/^SimpleLocQuerier::add_handlers()$/;"	f	class:SimpleLocQuerier
add_handlers	elements/grid/updateroutes.cc	/^UpdateGridRoutes::add_handlers()$/;"	f	class:UpdateGridRoutes
add_handlers	elements/icmp/checkicmpheader.cc	/^CheckICMPHeader::add_handlers()$/;"	f	class:CheckICMPHeader
add_handlers	elements/icmp/icmperror.cc	/^ICMPError::add_handlers()$/;"	f	class:ICMPError
add_handlers	elements/icmp/icmpipencap.cc	/^void ICMPIPEncap::add_handlers()$/;"	f	class:ICMPIPEncap
add_handlers	elements/icmp/icmppingencap.cc	/^void ICMPPingEncap::add_handlers()$/;"	f	class:ICMPPingEncap
add_handlers	elements/icmp/icmppingrewriter.cc	/^ICMPPingRewriter::add_handlers()$/;"	f	class:ICMPPingRewriter
add_handlers	elements/icmp/icmpsendpings.cc	/^ICMPPingSource::add_handlers()$/;"	f	class:ICMPPingSource
add_handlers	elements/ip/checkipheader.cc	/^CheckIPHeader::add_handlers()$/;"	f	class:CheckIPHeader
add_handlers	elements/ip/decipttl.cc	/^DecIPTTL::add_handlers()$/;"	f	class:DecIPTTL
add_handlers	elements/ip/directiplookup.cc	/^DirectIPLookup::add_handlers()$/;"	f	class:DirectIPLookup
add_handlers	elements/ip/ipaddrpairrewriter.cc	/^IPAddrPairRewriter::add_handlers()$/;"	f	class:IPAddrPairRewriter
add_handlers	elements/ip/ipaddrrewriter.cc	/^IPAddrRewriter::add_handlers()$/;"	f	class:IPAddrRewriter
add_handlers	elements/ip/ipencap.cc	/^IPEncap::add_handlers()$/;"	f	class:IPEncap
add_handlers	elements/ip/ipfilter.cc	/^IPFilter::add_handlers()$/;"	f	class:IPFilter
add_handlers	elements/ip/ipfragmenter.cc	/^IPFragmenter::add_handlers()$/;"	f	class:IPFragmenter
add_handlers	elements/ip/ipgwoptions.cc	/^IPGWOptions::add_handlers()$/;"	f	class:IPGWOptions
add_handlers	elements/ip/ipinputcombo.cc	/^IPInputCombo::add_handlers()$/;"	f	class:IPInputCombo
add_handlers	elements/ip/ipprint.cc	/^IPPrint::add_handlers()$/;"	f	class:IPPrint
add_handlers	elements/ip/ipratemon.cc	/^IPRateMonitor::add_handlers()$/;"	f	class:IPRateMonitor
add_handlers	elements/ip/ipreassembler.cc	/^IPReassembler::add_handlers()$/;"	f	class:IPReassembler
add_handlers	elements/ip/iproutetable.cc	/^IPRouteTable::add_handlers()$/;"	f	class:IPRouteTable
add_handlers	elements/ip/lookupiproute.cc	/^StaticIPLookup::add_handlers()$/;"	f	class:StaticIPLookup
add_handlers	elements/ip/markipce.cc	/^MarkIPCE::add_handlers()$/;"	f	class:MarkIPCE
add_handlers	elements/ip/rangeiplookup.cc	/^RangeIPLookup::add_handlers()$/;"	f	class:RangeIPLookup
add_handlers	elements/ip/setipdscp.cc	/^SetIPDSCP::add_handlers()$/;"	f	class:SetIPDSCP
add_handlers	elements/ip/setipecn.cc	/^SetIPECN::add_handlers()$/;"	f	class:SetIPECN
add_handlers	elements/ip6/checkip6header.cc	/^CheckIP6Header::add_handlers()$/;"	f	class:CheckIP6Header
add_handlers	elements/ip6/decip6hlim.cc	/^DecIP6HLIM::add_handlers()$/;"	f	class:DecIP6HLIM
add_handlers	elements/ip6/ip6encap.cc	/^IP6Encap::add_handlers()$/;"	f	class:IP6Encap
add_handlers	elements/ip6/ip6fragmenter.cc	/^IP6Fragmenter::add_handlers()$/;"	f	class:IP6Fragmenter
add_handlers	elements/ip6/lookupip6route.cc	/^LookupIP6Route::add_handlers()$/;"	f	class:LookupIP6Route
add_handlers	elements/ip6/setip6dscp.cc	/^SetIP6DSCP::add_handlers()$/;"	f	class:SetIP6DSCP
add_handlers	elements/ipsec/hmacsha1.cc	/^IPsecAuthHMACSHA1::add_handlers()$/;"	f	class:IPsecAuthHMACSHA1
add_handlers	elements/ipsec/ipsecencap.cc	/^IPsecEncap::add_handlers()$/;"	f	class:IPsecEncap
add_handlers	elements/ipsec/ipsecroutetable.cc	/^IPsecRouteTable::add_handlers()$/;"	f	class:IPsecRouteTable
add_handlers	elements/ipsec/sha1.cc	/^IPsecAuthSHA1::add_handlers()$/;"	f	class:IPsecAuthSHA1
add_handlers	elements/linuxmodule/cpuqueue.cc	/^CPUQueue::add_handlers()$/;"	f	class:CPUQueue
add_handlers	elements/linuxmodule/cyclecountaccum.cc	/^CycleCountAccum::add_handlers()$/;"	f	class:CycleCountAccum
add_handlers	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows::add_handlers()$/;"	f	class:FastTCPFlows
add_handlers	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows::add_handlers()$/;"	f	class:FastUDPFlows
add_handlers	elements/linuxmodule/fastudpsrc.cc	/^FastUDPSource::add_handlers()$/;"	f	class:FastUDPSource
add_handlers	elements/linuxmodule/fastudpsrcip6.cc	/^FastUDPSourceIP6::add_handlers()$/;"	f	class:FastUDPSourceIP6
add_handlers	elements/linuxmodule/fromdevice.cc	/^FromDevice::add_handlers()$/;"	f	class:FromDevice
add_handlers	elements/linuxmodule/fromhost.cc	/^FromHost::add_handlers()$/;"	f	class:FromHost
add_handlers	elements/linuxmodule/fromuserdevice.cc	/^FromUserDevice::add_handlers()$/;"	f	class:FromUserDevice
add_handlers	elements/linuxmodule/perfcountaccum.cc	/^PerfCountAccum::add_handlers()$/;"	f	class:PerfCountAccum
add_handlers	elements/linuxmodule/polldevice.cc	/^PollDevice::add_handlers()$/;"	f	class:PollDevice
add_handlers	elements/linuxmodule/rtcycles.cc	/^RTCycles::add_handlers()$/;"	f	class:RTCycles
add_handlers	elements/linuxmodule/schedulelinux.cc	/^ScheduleLinux::add_handlers()$/;"	f	class:ScheduleLinux
add_handlers	elements/linuxmodule/todevice.cc	/^ToDevice::add_handlers()$/;"	f	class:ToDevice
add_handlers	elements/linuxmodule/tohost.cc	/^ToHost::add_handlers()$/;"	f	class:ToHost
add_handlers	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::add_handlers()$/;"	f	class:ToUserDevice
add_handlers	elements/local/FlowNet/common/FlowNetGod.cc	/^void FlowNetGod::add_handlers()$/;"	f	class:FlowNetGod
add_handlers	elements/local/FlowNet/common/PF_FW.cc	/^void PFFW::add_handlers()$/;"	f	class:PFFW
add_handlers	elements/local/FlowNet/shaper/PFShapeFW.cc	/^void PFShapeFW::add_handlers()$/;"	f	class:PFShapeFW
add_handlers	elements/local/OpenFlow/RConn.cc	/^void RConn::add_handlers()$/;"	f	class:RConn
add_handlers	elements/local/OpenFlow/datapath.cc	/^void Datapath::add_handlers()$/;"	f	class:Datapath
add_handlers	elements/ns/tosimdevice.cc	/^ToSimDevice::add_handlers()$/;"	f	class:ToSimDevice
add_handlers	elements/simple/simplepullswitch.cc	/^SimplePullSwitch::add_handlers()$/;"	f	class:SimplePullSwitch
add_handlers	elements/standard/averagecounter.cc	/^AverageCounter::add_handlers()$/;"	f	class:AverageCounter
add_handlers	elements/standard/bandwidthmeter.cc	/^BandwidthMeter::add_handlers()$/;"	f	class:BandwidthMeter
add_handlers	elements/standard/block.cc	/^Block::add_handlers()$/;"	f	class:Block
add_handlers	elements/standard/checklength.cc	/^CheckLength::add_handlers()$/;"	f	class:CheckLength
add_handlers	elements/standard/checkpaint.cc	/^CheckPaint::add_handlers()$/;"	f	class:CheckPaint
add_handlers	elements/standard/classifier.cc	/^Classifier::add_handlers()$/;"	f	class:Classifier
add_handlers	elements/standard/compblock.cc	/^CompareBlock::add_handlers()$/;"	f	class:CompareBlock
add_handlers	elements/standard/counter.cc	/^Counter::add_handlers()$/;"	f	class:Counter
add_handlers	elements/standard/delayshaper.cc	/^DelayShaper::add_handlers()$/;"	f	class:DelayShaper
add_handlers	elements/standard/delayunqueue.cc	/^DelayUnqueue::add_handlers()$/;"	f	class:DelayUnqueue
add_handlers	elements/standard/discard.cc	/^Discard::add_handlers()$/;"	f	class:Discard
add_handlers	elements/standard/discardnofree.cc	/^DiscardNoFree::add_handlers()$/;"	f	class:DiscardNoFree
add_handlers	elements/standard/dropbroadcasts.cc	/^DropBroadcasts::add_handlers()$/;"	f	class:DropBroadcasts
add_handlers	elements/standard/infinitesource.cc	/^InfiniteSource::add_handlers()$/;"	f	class:InfiniteSource
add_handlers	elements/standard/linkunqueue.cc	/^LinkUnqueue::add_handlers()$/;"	f	class:LinkUnqueue
add_handlers	elements/standard/notifierqueue.cc	/^NotifierQueue::add_handlers()$/;"	f	class:NotifierQueue
add_handlers	elements/standard/paint.cc	/^Paint::add_handlers()$/;"	f	class:Paint
add_handlers	elements/standard/painttee.cc	/^PaintTee::add_handlers()$/;"	f	class:PaintTee
add_handlers	elements/standard/pokehandlers.cc	/^PokeHandlers::add_handlers()$/;"	f	class:PokeHandlers
add_handlers	elements/standard/print.cc	/^Print::add_handlers()$/;"	f	class:Print
add_handlers	elements/standard/randomerror.cc	/^RandomBitErrors::add_handlers()$/;"	f	class:RandomBitErrors
add_handlers	elements/standard/randomsample.cc	/^RandomSample::add_handlers()$/;"	f	class:RandomSample
add_handlers	elements/standard/randomsource.cc	/^RandomSource::add_handlers()$/;"	f	class:RandomSource
add_handlers	elements/standard/ratedsource.cc	/^RatedSource::add_handlers()$/;"	f	class:RatedSource
add_handlers	elements/standard/ratedsplitter.cc	/^RatedSplitter::add_handlers()$/;"	f	class:RatedSplitter
add_handlers	elements/standard/ratedunqueue.cc	/^RatedUnqueue::add_handlers()$/;"	f	class:RatedUnqueue
add_handlers	elements/standard/script.cc	/^Script::add_handlers()$/;"	f	class:Script
add_handlers	elements/standard/setannobyte.cc	/^SetAnnoByte::add_handlers()$/;"	f	class:SetAnnoByte
add_handlers	elements/standard/shaper.cc	/^Shaper::add_handlers()$/;"	f	class:Shaper
add_handlers	elements/standard/simplequeue.cc	/^SimpleQueue::add_handlers()$/;"	f	class:SimpleQueue
add_handlers	elements/standard/stridesched.cc	/^StrideSched::add_handlers()$/;"	f	class:StrideSched
add_handlers	elements/standard/suppressor.cc	/^Suppressor::add_handlers()$/;"	f	class:Suppressor
add_handlers	elements/standard/switch.cc	/^Switch::add_handlers()$/;"	f	class:Switch
add_handlers	elements/standard/timedsink.cc	/^TimedSink::add_handlers()$/;"	f	class:TimedSink
add_handlers	elements/standard/timedsource.cc	/^TimedSource::add_handlers()$/;"	f	class:TimedSource
add_handlers	elements/standard/truncate.cc	/^Truncate::add_handlers()$/;"	f	class:Truncate
add_handlers	elements/standard/unqueue.cc	/^Unqueue::add_handlers()$/;"	f	class:Unqueue
add_handlers	elements/standard/unqueue2.cc	/^Unqueue2::add_handlers()$/;"	f	class:Unqueue2
add_handlers	elements/tcpudp/checktcpheader.cc	/^CheckTCPHeader::add_handlers()$/;"	f	class:CheckTCPHeader
add_handlers	elements/tcpudp/checkudpheader.cc	/^CheckUDPHeader::add_handlers()$/;"	f	class:CheckUDPHeader
add_handlers	elements/tcpudp/iprewriter.cc	/^IPRewriter::add_handlers()$/;"	f	class:IPRewriter
add_handlers	elements/tcpudp/tcpipsend.cc	/^TCPIPSend::add_handlers()$/;"	f	class:TCPIPSend
add_handlers	elements/tcpudp/tcprewriter.cc	/^TCPRewriter::add_handlers()$/;"	f	class:TCPRewriter
add_handlers	elements/tcpudp/udpip6encap.cc	/^void UDPIP6Encap::add_handlers()$/;"	f	class:UDPIP6Encap
add_handlers	elements/tcpudp/udpipencap.cc	/^void UDPIPEncap::add_handlers()$/;"	f	class:UDPIPEncap
add_handlers	elements/tcpudp/udprewriter.cc	/^UDPRewriter::add_handlers()$/;"	f	class:UDPRewriter
add_handlers	elements/test/blockthread.cc	/^BlockThread::add_handlers()$/;"	f	class:BlockThread
add_handlers	elements/test/comparepackets.cc	/^ComparePackets::add_handlers()$/;"	f	class:ComparePackets
add_handlers	elements/test/handlertask.cc	/^HandlerTask::add_handlers()$/;"	f	class:HandlerTask
add_handlers	elements/test/neighborhoodtest.cc	/^NeighborhoodTest::add_handlers()$/;"	f	class:NeighborhoodTest
add_handlers	elements/test/notifierdebug.cc	/^NotifierDebug::add_handlers()$/;"	f	class:NotifierDebug
add_handlers	elements/test/nulltask.cc	/^NullTask::add_handlers()$/;"	f	class:NullTask
add_handlers	elements/test/randomseed.cc	/^RandomSeed::add_handlers()$/;"	f	class:RandomSeed
add_handlers	elements/test/schedordertest.cc	/^SchedOrderTest::add_handlers()$/;"	f	class:SchedOrderTest
add_handlers	elements/test/timertest.cc	/^TimerTest::add_handlers()$/;"	f	class:TimerTest
add_handlers	elements/test/upstreamnotifier.cc	/^UpstreamNotifier::add_handlers()$/;"	f	class:UpstreamNotifier
add_handlers	elements/userlevel/controlsocket.cc	/^ControlSocket::add_handlers()$/;"	f	class:ControlSocket
add_handlers	elements/userlevel/fromdevice.cc	/^FromDevice::add_handlers()$/;"	f	class:FromDevice
add_handlers	elements/userlevel/fromdump.cc	/^FromDump::add_handlers()$/;"	f	class:FromDump
add_handlers	elements/userlevel/fromhost.cc	/^FromHost::add_handlers()$/;"	f	class:FromHost
add_handlers	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::add_handlers()$/;"	f	class:IPFlowRawSockets
add_handlers	elements/userlevel/kerneltun.cc	/^KernelTun::add_handlers()$/;"	f	class:KernelTun
add_handlers	elements/userlevel/khandlerproxy.cc	/^KernelHandlerProxy::add_handlers()$/;"	f	class:KernelHandlerProxy
add_handlers	elements/userlevel/progressbar.cc	/^ProgressBar::add_handlers()$/;"	f	class:ProgressBar
add_handlers	elements/userlevel/rawsocket.cc	/^RawSocket::add_handlers()$/;"	f	class:RawSocket
add_handlers	elements/userlevel/socket.cc	/^Socket::add_handlers()$/;"	f	class:Socket
add_handlers	elements/userlevel/todevice.cc	/^ToDevice::add_handlers()$/;"	f	class:ToDevice
add_handlers	elements/userlevel/todump.cc	/^ToDump::add_handlers()$/;"	f	class:ToDump
add_handlers	elements/userlevel/tohost.cc	/^ToHost::add_handlers()$/;"	f	class:ToHost
add_handlers	elements/wifi/ap/associationresponder.cc	/^AssociationResponder::add_handlers()$/;"	f	class:AssociationResponder
add_handlers	elements/wifi/ap/beaconsource.cc	/^BeaconSource::add_handlers()$/;"	f	class:BeaconSource
add_handlers	elements/wifi/ap/openauthresponder.cc	/^OpenAuthResponder::add_handlers()$/;"	f	class:OpenAuthResponder
add_handlers	elements/wifi/ap/proberesponder.cc	/^ProbeResponder::add_handlers()$/;"	f	class:ProbeResponder
add_handlers	elements/wifi/ap/stationtable.cc	/^StationTable::add_handlers()$/;"	f	class:StationTable
add_handlers	elements/wifi/athdescdecap.cc	/^AthdescDecap::add_handlers()$/;"	f	class:AthdescDecap
add_handlers	elements/wifi/athdescencap.cc	/^AthdescEncap::add_handlers()$/;"	f	class:AthdescEncap
add_handlers	elements/wifi/autoratefallback.cc	/^AutoRateFallback::add_handlers()$/;"	f	class:AutoRateFallback
add_handlers	elements/wifi/availablerates.cc	/^AvailableRates::add_handlers()$/;"	f	class:AvailableRates
add_handlers	elements/wifi/ethercount.cc	/^EtherCount::add_handlers()$/;"	f	class:EtherCount
add_handlers	elements/wifi/extradecap.cc	/^ExtraDecap::add_handlers()$/;"	f	class:ExtraDecap
add_handlers	elements/wifi/extraencap.cc	/^ExtraEncap::add_handlers()$/;"	f	class:ExtraEncap
add_handlers	elements/wifi/filterfailures.cc	/^FilterFailures::add_handlers()$/;"	f	class:FilterFailures
add_handlers	elements/wifi/filterphyerr.cc	/^FilterPhyErr::add_handlers()$/;"	f	class:FilterPhyErr
add_handlers	elements/wifi/filtertx.cc	/^FilterTX::add_handlers()$/;"	f	class:FilterTX
add_handlers	elements/wifi/fromhandler.cc	/^FromHandler::add_handlers()$/;"	f	class:FromHandler
add_handlers	elements/wifi/linktable.cc	/^LinkTable::add_handlers() {$/;"	f	class:LinkTable
add_handlers	elements/wifi/madwifirate.cc	/^MadwifiRate::add_handlers()$/;"	f	class:MadwifiRate
add_handlers	elements/wifi/packetstore.cc	/^PacketStore::add_handlers()$/;"	f	class:PacketStore
add_handlers	elements/wifi/prism2decap.cc	/^Prism2Decap::add_handlers()$/;"	f	class:Prism2Decap
add_handlers	elements/wifi/prism2encap.cc	/^Prism2Encap::add_handlers()$/;"	f	class:Prism2Encap
add_handlers	elements/wifi/probetxrate.cc	/^ProbeTXRate::add_handlers()$/;"	f	class:ProbeTXRate
add_handlers	elements/wifi/radiotapdecap.cc	/^RadiotapDecap::add_handlers()$/;"	f	class:RadiotapDecap
add_handlers	elements/wifi/radiotapencap.cc	/^RadiotapEncap::add_handlers()$/;"	f	class:RadiotapEncap
add_handlers	elements/wifi/rxstats.cc	/^RXStats::add_handlers()$/;"	f	class:RXStats
add_handlers	elements/wifi/setrts.cc	/^SetRTS::add_handlers()$/;"	f	class:SetRTS
add_handlers	elements/wifi/settxpower.cc	/^SetTXPower::add_handlers()$/;"	f	class:SetTXPower
add_handlers	elements/wifi/settxrate.cc	/^SetTXRate::add_handlers()$/;"	f	class:SetTXRate
add_handlers	elements/wifi/station/associationrequester.cc	/^AssociationRequester::add_handlers()$/;"	f	class:AssociationRequester
add_handlers	elements/wifi/station/beaconscanner.cc	/^BeaconScanner::add_handlers()$/;"	f	class:BeaconScanner
add_handlers	elements/wifi/station/beacontracker.cc	/^BeaconTracker::add_handlers()$/;"	f	class:BeaconTracker
add_handlers	elements/wifi/station/openauthrequester.cc	/^OpenAuthRequester::add_handlers()$/;"	f	class:OpenAuthRequester
add_handlers	elements/wifi/station/proberequester.cc	/^ProbeRequester::add_handlers()$/;"	f	class:ProbeRequester
add_handlers	elements/wifi/wepdecap.cc	/^WepDecap::add_handlers()$/;"	f	class:WepDecap
add_handlers	elements/wifi/wepencap.cc	/^WepEncap::add_handlers()$/;"	f	class:WepEncap
add_handlers	elements/wifi/wifidecap.cc	/^WifiDecap::add_handlers()$/;"	f	class:WifiDecap
add_handlers	elements/wifi/wifidefrag.cc	/^WifiDefrag::add_handlers()$/;"	f	class:WifiDefrag
add_handlers	elements/wifi/wifidupefilter.cc	/^WifiDupeFilter::add_handlers()$/;"	f	class:WifiDupeFilter
add_handlers	elements/wifi/wifiencap.cc	/^WifiEncap::add_handlers()$/;"	f	class:WifiEncap
add_handlers	elements/wifi/wififragment.cc	/^WifiFragment::add_handlers()$/;"	f	class:WifiFragment
add_handlers	elements/wifi/wifiseq.cc	/^WifiSeq::add_handlers()$/;"	f	class:WifiSeq
add_handlers	elements/wifi/wirelessinfo.cc	/^WirelessInfo::add_handlers()$/;"	f	class:WirelessInfo
add_handlers	lib/element.cc	/^Element::add_handlers()$/;"	f	class:Element
add_handlers	lib/fromfile.cc	/^FromFile::add_handlers(Element* e, bool filepos_writable) const$/;"	f	class:FromFile
add_indent	tools/click2xml/click2xml.cc	/^add_indent(const String &indent, int spaces)$/;"	f	file:
add_insn	elements/standard/classification.cc	/^Program::add_insn(Vector<int> &tree, int offset, uint32_t value, uint32_t mask)$/;"	f	class:Classification::Wordwise::Program
add_insn	elements/standard/script.cc	/^Script::add_insn(int insn, int arg, int arg2, const String &arg3)$/;"	f	class:Script
add_interesting_handler	tools/click-fastclassifier/click-fastclassifier.cc	/^add_interesting_handler(const String &name)$/;"	f
add_ip	elements/grid/gridlogger.hh	/^  void add_ip(unsigned ip) {$/;"	f	class:GridLogger
add_item	tools/click-pretty/click-pretty.cc	/^    void add_item(const char *pos1, ElementClassT *e1, const char *pos2, const String &s2) {$/;"	f	class:PrettyLexerTInfo
add_item	tools/click-pretty/click-pretty.cc	/^    void add_item(const char *pos1, ElementT *e1, const char *pos2, const String &s2) {$/;"	f	class:PrettyLexerTInfo
add_item	tools/click-pretty/click-pretty.cc	/^    void add_item(const char *pos1, const String &s1, const char *pos2, const String &s2) {$/;"	f	class:PrettyLexerTInfo
add_item	tools/click-pretty/click-pretty.cc	/^add_item(int p1, ElementClassT *e1, int p2, const String &t2)$/;"	f	file:
add_item	tools/click-pretty/click-pretty.cc	/^add_item(int p1, ElementT *e1, int p2, const String &t2)$/;"	f	file:
add_item	tools/click-pretty/click-pretty.cc	/^add_item(int p1, const String &t1, int p2, const String &t2)$/;"	f	file:
add_keyword_error	lib/confparse.cc	/^CpVaHelper::add_keyword_error(StringAccum &sa, int err, const String &arg,$/;"	f	class:__anon517::CpVaHelper
add_lan_entry	ns/nsclick-test.cc	/^TestClickSimulator::add_lan_entry(int nodenum,int ifid,int lanid) {$/;"	f	class:TestClickSimulator
add_lan_entry	ns/nsclick-test.cc	/^TestClickSimulator::add_lan_entry(simclick_node_t *node,int ifid,int lanid) {$/;"	f	class:TestClickSimulator
add_line_directive	tools/lib/runparse.cc	/^add_line_directive(StringAccum &sa, const String &landmark)$/;"	f	file:
add_links	tools/click-combine/click-combine.cc	/^add_links(RouterT *r)$/;"	f	file:
add_listener	elements/analysis/aggregatenotifier.cc	/^AggregateNotifier::add_listener(AggregateListener *l)$/;"	f	class:AggregateNotifier
add_listener	lib/notifier.cc	/^ActiveNotifier::add_listener(Task* task)$/;"	f	class:ActiveNotifier
add_listener	lib/notifier.cc	/^Notifier::add_listener(Task* task)$/;"	f	class:Notifier
add_long	elements/grid/gridlogger.hh	/^  void add_long(unsigned long v) {$/;"	f	class:GridLogger
add_map	elements/ethernet/ip6ndadvertiser.cc	/^IP6NDAdvertiser::add_map(const IP6Address &ipa, const IP6Address &mask, const EtherAddress &ena)$/;"	f	class:IP6NDAdvertiser
add_map	elements/ip6/addresstranslator.cc	/^AddressTranslator::add_map(IP6Address &iai, unsigned short ipi, IP6Address &mai, unsigned short mpi, IP6Address &ea, unsigned short ep, bool binding)$/;"	f	class:AddressTranslator
add_map	elements/ip6/addresstranslator.cc	/^AddressTranslator::add_map(IP6Address &mai,  bool binding)$/;"	f	class:AddressTranslator
add_matches	apps/clicky/src/crouter.cc	/^bool crouter::reachable_match_t::add_matches(reachable_t &reach, ErrorHandler *debug_errh)$/;"	f	class:clicky::crouter::reachable_match_t
add_module_ref	lib/router.cc	/^Router::add_module_ref(struct module *module)$/;"	f	class:Router
add_msg	apps/clicky/src/cdriver.cc	/^void csocket_cdriver::add_msg(const String &hname, const String &command, int command_datalen, int type, int flags)$/;"	f	class:clicky::csocket_cdriver
add_net_order_data_handlers	lib/element.cc	/^Element::add_net_order_data_handlers(const String &name, int flags, uint16_t *data)$/;"	f	class:Element
add_net_order_data_handlers	lib/element.cc	/^Element::add_net_order_data_handlers(const String &name, int flags, uint32_t *data)$/;"	f	class:Element
add_node	ns/nsclick-test.cc	/^TestClickSimulator::add_node(char* clickfile) {$/;"	f	class:TestClickSimulator
add_note	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::Flow::add_note(const String &s, ErrorHandler *errh)$/;"	f	class:ToIPFlowDumps::Flow
add_note	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::add_note(uint32_t agg, const String &s, ErrorHandler *errh)$/;"	f	class:ToIPFlowDumps
add_note	elements/analysis/toipsumdump.cc	/^ToIPSummaryDump::add_note(const String &s)$/;"	f	class:ToIPSummaryDump
add_one_byte	elements/grid/gridlogger.hh	/^  void add_one_byte(unsigned char c) { add_bytes(&c, 1); }$/;"	f	class:GridLogger
add_parent	tools/click-devirtualize/cxxclass.cc	/^CxxClass::add_parent(CxxClass *cxx)$/;"	f	class:CxxClass
add_pending	include/click/routerthread.hh	/^RouterThread::add_pending()$/;"	f	class:RouterThread
add_pending	lib/task.cc	/^Task::add_pending()$/;"	f	class:Task
add_pending_locked	lib/task.cc	/^Task::add_pending_locked(RouterThread *thread)$/;"	f	class:Task
add_pixmap_directory	apps/clicky/src/support.c	/^add_pixmap_directory                   (const gchar     *directory)$/;"	f
add_pkt	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::Flow::add_pkt(const Packet *p, ErrorHandler *errh)$/;"	f	class:ToIPFlowDumps::Flow
add_pvconn	elements/local/OpenFlow/RConn.cc	/^void RConn::add_pvconn(struct pvconn *pvconn)$/;"	f	class:RConn
add_read_handler	lib/element.cc	/^Element::add_read_handler(const String &name, ReadHandlerCallback read_callback, const void *user_data, uint32_t flags)$/;"	f	class:Element
add_read_handler	lib/element.cc	/^Element::add_read_handler(const String &name, ReadHandlerCallback read_callback, int user_data, uint32_t flags)$/;"	f	class:Element
add_read_handler	lib/router.cc	/^Router::add_read_handler(const Element *e, const String &hname,$/;"	f	class:Router
add_ref_copy	apps/clicky/src/ref.hh	/^    void add_ref_copy() {$/;"	f	class:enable_ref_ptr
add_requirement	lib/router.cc	/^Router::add_requirement(const String &type, const String &requirement)$/;"	f	class:Router
add_requirement	tools/lib/routert.cc	/^RouterT::add_requirement(const String &type, const String &value)$/;"	f	class:RouterT
add_result	elements/wifi/probetxrate.hh	/^    void add_result(const Timestamp &now, int rate, int tries, int success,$/;"	f	struct:ProbeTXRate::DstInfo
add_rewriter_handlers	elements/ip/iprewriterbase.cc	/^IPRewriterBase::add_rewriter_handlers(bool writable_patterns)$/;"	f	class:IPRewriterBase
add_route	elements/ip/directiplookup.cc	/^DirectIPLookup::Table::add_route(const IPRoute& route, bool allow_replace, IPRoute* old_route, ErrorHandler *errh)$/;"	f	class:DirectIPLookup::Table
add_route	elements/ip/directiplookup.cc	/^DirectIPLookup::add_route(const IPRoute& route, bool allow_replace, IPRoute* old_route, ErrorHandler *errh)$/;"	f	class:DirectIPLookup
add_route	elements/ip/iproutetable.cc	/^IPRouteTable::add_route(const IPRoute&, bool, IPRoute*, ErrorHandler *errh)$/;"	f	class:IPRouteTable
add_route	elements/ip/lineariplookup.cc	/^LinearIPLookup::add_route(const IPRoute &r, bool allow_replace, IPRoute* replaced, ErrorHandler *)$/;"	f	class:LinearIPLookup
add_route	elements/ip/lookupiproute.cc	/^StaticIPLookup::add_route(const IPRoute& route, bool set, IPRoute* old_route, ErrorHandler *errh)$/;"	f	class:StaticIPLookup
add_route	elements/ip/radixiplookup.cc	/^RadixIPLookup::add_route(const IPRoute &route, bool set, IPRoute *old_route, ErrorHandler *)$/;"	f	class:RadixIPLookup
add_route	elements/ip/rangeiplookup.cc	/^RangeIPLookup::add_route(const IPRoute& route, bool allow_replace, IPRoute* old_route, ErrorHandler *errh)$/;"	f	class:RangeIPLookup
add_route	elements/ip/sortediplookup.cc	/^SortedIPLookup::add_route(const IPRoute& route, bool set, IPRoute* old, ErrorHandler *errh)$/;"	f	class:SortedIPLookup
add_route	elements/ip6/ip6routetable.cc	/^IP6RouteTable::add_route(IP6Address, IP6Address, IP6Address,$/;"	f	class:IP6RouteTable
add_route	elements/ip6/lookupip6route.cc	/^LookupIP6Route::add_route(IP6Address addr, IP6Address mask, IP6Address gw,$/;"	f	class:LookupIP6Route
add_route	elements/ipsec/ipsecroutetable.cc	/^IPsecRouteTable::add_route(const IPsecRoute&, bool, IPsecRoute*, ErrorHandler *errh)$/;"	f	class:IPsecRouteTable
add_route	elements/ipsec/radixipseclookup.cc	/^RadixIPsecLookup::add_route(const IPsecRoute& route, bool set, IPsecRoute* old_route, ErrorHandler *)$/;"	f	class:RadixIPsecLookup
add_route_handler	elements/ip/iproutetable.cc	/^IPRouteTable::add_route_handler(const String &conf, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:IPRouteTable
add_route_handler	elements/ip6/ip6routetable.cc	/^IP6RouteTable::add_route_handler(const String &conf, Element *e, void *, ErrorHandler *errh)$/;"	f	class:IP6RouteTable
add_route_handler	elements/ipsec/ipsecroutetable.cc	/^IPsecRouteTable::add_route_handler(const String &conf, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:IPsecRouteTable
add_route_to_link_table	elements/grid/dsrroutetable.cc	/^DSRRouteTable::add_route_to_link_table(DSRRoute route)$/;"	f	class:DSRRouteTable
add_router_connections	lib/lexer.cc	/^Lexer::add_router_connections(int c, const Vector<int> &router_id)$/;"	f	class:Lexer
add_router_requirements	tools/click-mkmindriver/click-mkmindriver.cc	/^Mindriver::add_router_requirements(RouterT* router, const ElementMap& default_map, ErrorHandler* errh)$/;"	f	class:Mindriver
add_select	lib/element.cc	/^Element::add_select(int fd, int mask)$/;"	f	class:Element
add_select	lib/selectset.cc	/^SelectSet::add_select(int fd, Element *element, int mask)$/;"	f	class:SelectSet
add_signal_handler	lib/master.cc	/^Master::add_signal_handler(int signo, Router *router, String handler)$/;"	f	class:Master
add_source_file	tools/click-mkmindriver/click-mkmindriver.cc	/^Mindriver::add_source_file(const String& fn, ErrorHandler* errh)$/;"	f	class:Mindriver
add_stat	elements/grid/ackretrysender2.cc	/^ACKRetrySender2::add_stat(const Timestamp &t, unsigned num_tx, bool succ)$/;"	f	class:ACKRetrySender2
add_stat	elements/grid/linktracker.cc	/^LinkTracker::add_stat(IPAddress dst, int sig, int qual, Timestamp when)$/;"	f	class:LinkTracker
add_table	elements/local/OpenFlow/lib/chain.cc	/^static int add_table(struct sw_chain *chain, struct sw_table *table, int emerg)$/;"	f	file:
add_task_handlers	include/click/element.hh	/^    inline void add_task_handlers(Task *task, NotifierSignal *signal, const String &prefix = String()) {$/;"	f	class:Element
add_task_handlers	include/click/element.hh	/^    inline void add_task_handlers(Task *task, const String &prefix = String()) {$/;"	f	class:Element
add_task_handlers	lib/element.cc	/^Element::add_task_handlers(Task *task, NotifierSignal *signal, int flags, const String &prefix)$/;"	f	class:Element
add_timeval	elements/grid/gridlogger.hh	/^  void add_timeval(struct timeval tv) {$/;"	f	class:GridLogger
add_traits	tools/click-mkmindriver/click-mkmindriver.cc	/^Mindriver::add_traits(const Traits& t, const ElementMap&, ErrorHandler* errh)$/;"	f	class:Mindriver
add_tunnel	tools/lib/routert.cc	/^RouterT::add_tunnel(const String &namein, const String &nameout,$/;"	f	class:RouterT
add_tunnels	lib/lexer.cc	/^Lexer::add_tunnels(String name, int *eidxes)$/;"	f	class:Lexer
add_type_info	tools/click-devirtualize/specializer.cc	/^Specializer::add_type_info(const String &click_name, const String &cxx_name,$/;"	f	class:Specializer
add_write_handler	lib/element.cc	/^Element::add_write_handler(const String &name, WriteHandlerCallback write_callback, const void *user_data, uint32_t flags)$/;"	f	class:Element
add_write_handler	lib/element.cc	/^Element::add_write_handler(const String &name, WriteHandlerCallback write_callback, int user_data, uint32_t flags)$/;"	f	class:Element
add_write_handler	lib/router.cc	/^Router::add_write_handler(const Element *e, const String &hname,$/;"	f	class:Router
additional_info_	elements/ns/tosimtrace.hh	/^  String	additional_info_;$/;"	m	class:ToSimTrace
addr	elements/grid/dsr.hh	/^  DSRHop addr[];$/;"	m	struct:click_dsr_rrep
addr	elements/grid/dsr.hh	/^  DSRHop addr[];$/;"	m	struct:click_dsr_rreq
addr	elements/grid/dsr.hh	/^  DSRHop addr[];$/;"	m	struct:click_dsr_source
addr	elements/ip/iproutetable.hh	/^    IPAddress addr;$/;"	m	struct:IPRoute
addr	elements/ipsec/ipsecroutetable.hh	/^    IPAddress addr;$/;"	m	struct:IPsecRoute
addr	include/click/ipaddress.hh	/^    inline uint32_t addr() const {$/;"	f	class:IPAddress
addr_anno	include/click/packet.hh	/^inline const void *Packet::addr_anno() const {$/;"	f	class:Packet
addr_anno	include/click/packet.hh	/^inline void *Packet::addr_anno() {$/;"	f	class:Packet
addr_anno_offset	include/click/packet.hh	/^	addr_anno_offset = 0,$/;"	e	enum:Packet::__anon464
addr_anno_size	include/click/packet.hh	/^	addr_anno_size = 16,$/;"	e	enum:Packet::__anon464
addr_info	conf/click-mkclgw.pl	/^sub addr_info { return undef; }$/;"	s
addr_info	conf/click-mkclgw.pl	/^sub addr_info {$/;"	s
address	include/click/confparse.hh	/^	unsigned char address[16];$/;"	m	union:cp_value::__anon479
address_bits	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t address_bits;$/;"	m	struct:e1000_eeprom_info
address_bits	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t address_bits;$/;"	m	struct:e1000_eeprom_info
address_pair	elements/ip/ipprint.cc	/^IPPrint::address_pair(StringAccum &sa, const click_ip *iph)$/;"	f	class:IPPrint
adjust	elements/wifi/madwifirate.cc	/^MadwifiRate::adjust(EtherAddress dst)$/;"	f	class:MadwifiRate
adjust	include/click/tokenbucket.hh	/^    void adjust(const rate_type &old_rate, const rate_type &new_rate) {$/;"	f	class:TokenCounterX
adjust	tools/click-align/click-align.cc	/^RouterAlign::adjust()$/;"	f	class:RouterAlign
adjust_all	elements/wifi/madwifirate.cc	/^MadwifiRate::adjust_all()$/;"	f	class:MadwifiRate
adjust_clickfs_prefix	tools/click-install/common.cc	/^adjust_clickfs_prefix()$/;"	f
adjust_flow	tools/click-align/alignclass.cc	/^Aligner::adjust_flow(Vector<Alignment>::iterator, int, Vector<Alignment>::const_iterator, int)$/;"	f	class:Aligner
adjust_flow	tools/click-align/alignclass.cc	/^ClassifierAligner::adjust_flow(Vector<Alignment>::iterator ain, int nin, Vector<Alignment>::const_iterator, int)$/;"	f	class:ClassifierAligner
adjust_length	include/click/straccum.hh	/^    inline void adjust_length(int delta) {$/;"	f	class:StringAccum
adjust_runcount	lib/router.cc	/^Router::adjust_runcount(int32_t delta)$/;"	f	class:Router
adjust_tickets	elements/bsdmodule/anydevice.hh	/^AnyDevice::adjust_tickets(int work)$/;"	f	class:AnyDevice
adjust_tickets	elements/linuxmodule/anydevice.hh	/^AnyTaskDevice::adjust_tickets(int work)$/;"	f	class:AnyTaskDevice
adjust_tickets	include/click/task.hh	/^Task::adjust_tickets(int delta)$/;"	f	class:Task
adjustment	include/click/timer.hh	/^    static inline Timestamp adjustment() {$/;"	f	class:Timer
advertise	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t advertise;     \/* Bitmap of "ofp_port_features"s.  Zero all$/;"	m	struct:ofp_port_mod
advertise_ok_jiffies	elements/grid/dsdvroutetable.hh	/^    unsigned int        advertise_ok_jiffies;  \/\/ when it is ok to advertise route$/;"	m	class:DSDVRouteTable::RTEntry
advertised	elements/local/OpenFlow/datapath.hh	/^	uint32_t advertised;$/;"	m	struct:click_port
advertised	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t advertised;    \/* Features being advertised by the port. *\/$/;"	m	struct:ofp_phy_port
advertising	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int advertising;$/;"	m	struct:_kc_mii_if_info	file:
aes_key_st	elements/ipsec/aes.hh	/^struct aes_key_st {$/;"	s
affine	apps/clicky/src/transform.cc	/^affine::affine()$/;"	f	class:affine
affine	apps/clicky/src/transform.cc	/^affine::affine(const double m[6])$/;"	f	class:affine
affine	apps/clicky/src/transform.cc	/^affine::affine(double m0, double m1, double m2,$/;"	f	class:affine
affine	apps/clicky/src/transform.hh	/^class affine { public:$/;"	c
age	elements/grid/grid.hh	/^	uint32_t age; \/* keep ``age'' for legacy code *\/$/;"	m	union:grid_nbr_entry::__anon226
age	elements/grid/grid.hh	/^	uint32_t age; \/* keep age field for legacy code *\/$/;"	m	union:grid_hello::__anon227
age	elements/local/FlowNet/common/Flow.hh	/^	uint8_t age;$/;"	m	class:Flow
age	elements/wifi/linktable.hh	/^    uint32_t age() {$/;"	f	class:LinkTable::LinkInfo
aggregate	elements/analysis/aggcounter.hh	/^	uint32_t aggregate;$/;"	m	struct:AggregateCounter::Node
aggregate	elements/analysis/aggpktcounter.hh	/^	uint32_t aggregate() const	{ return _aggregate; }$/;"	f	class:AggregatePacketCounter::Flow
aggregate	elements/analysis/aggregateipaddrpair.hh	/^	uint32_t aggregate;$/;"	m	struct:AggregateIPAddrPair::FlowInfo
aggregate	elements/analysis/aggregateipflows.hh	/^	uint32_t aggregate() const { return _aggregate; }$/;"	f	struct:AggregateIPFlows::FlowInfo
aggregate	elements/analysis/toipflowdumps.hh	/^	uint32_t aggregate() const	{ return _aggregate; }$/;"	f	class:ToIPFlowDumps::Flow
aggregate	elements/userlevel/ipflowrawsockets.hh	/^	uint32_t aggregate() const	{ return _aggregate; }$/;"	f	class:IPFlowRawSockets::Flow
aggregate_notify	elements/analysis/aggregatefirst.cc	/^AggregateFirst::aggregate_notify(uint32_t agg, AggregateEvent event, const Packet *)$/;"	f	class:AggregateFirst
aggregate_notify	elements/analysis/aggregatelast.cc	/^AggregateLast::aggregate_notify(uint32_t agg, AggregateEvent event, const Packet *)$/;"	f	class:AggregateLast
aggregate_notify	elements/analysis/aggregatenotifier.cc	/^AggregateListener::aggregate_notify(uint32_t, AggregateEvent, const Packet *)$/;"	f	class:AggregateListener
aggregate_notify	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::aggregate_notify(uint32_t agg, AggregateEvent event, const Packet *)$/;"	f	class:ToIPFlowDumps
aggregate_notify	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::aggregate_notify(uint32_t agg, AggregateEvent event, const Packet *)$/;"	f	class:IPFlowRawSockets
aggregate_stats_done	elements/local/OpenFlow/datapath.cc	/^static void aggregate_stats_done(void *state)$/;"	f	file:
aggregate_stats_dump	elements/local/OpenFlow/datapath.cc	/^static int aggregate_stats_dump(class Datapath *dp, void *state, struct ofpbuf *buffer)$/;"	f	file:
aggregate_stats_dump_callback	elements/local/OpenFlow/datapath.cc	/^static int aggregate_stats_dump_callback(struct sw_flow *flow, void *Private)$/;"	f	file:
aggregate_stats_init	elements/local/OpenFlow/datapath.cc	/^static int aggregate_stats_init(const void *body, int body_len UNUSED, void **state)$/;"	f	file:
aggregate_stats_state	elements/local/OpenFlow/datapath.cc	/^struct aggregate_stats_state {$/;"	s	file:
aggregated_path_quality	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	float aggregated_path_quality;$/;"	m	struct:E2ESignalInfo
aironet_ioctl_t	elements/grid/airoinfo.cc	/^struct aironet_ioctl_t {$/;"	s	file:
algnerrc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t algnerrc;$/;"	m	struct:e1000_hw_stats
algnerrc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t algnerrc;$/;"	m	struct:e1000_hw_stats
algnerrc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t algnerrc;$/;"	m	struct:e1000_hw_stats
algorithm1	elements/grid/pep.cc	/^PEP::algorithm1()$/;"	f	class:PEP
algorithm2	elements/grid/pep.cc	/^PEP::algorithm2()$/;"	f	class:PEP
algorithm_index	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	int32_t algorithm_index;$/;"	m	struct:CDInfo
align_offset	elements/standard/classification.hh	/^    unsigned align_offset() const {$/;"	f	class:Classification::Wordwise::CompressedProgram
align_offset	elements/standard/classification.hh	/^    unsigned align_offset() const {$/;"	f	class:Classification::Wordwise::Program
align_offset	tools/click-fastclassifier/click-fastclassifier.hh	/^    int align_offset;$/;"	m	struct:Classifier_Program
aligner_name	tools/click-align/click-align.cc	/^aligner_name(int anonymizer)$/;"	f
alive	tools/click-devirtualize/cxxclass.hh	/^  bool alive() const			{ return _alive; }$/;"	f	class:CxxFunction
all_errors	bsdmodule/kernelerror.cc	/^static StringAccum *all_errors = 0;$/;"	v	file:
all_programs	tools/click-fastclassifier/click-fastclassifier.cc	/^static Vector<Classifier_Program> all_programs;$/;"	v	file:
all_thread_packet_pools	lib/packet.cc	/^static PacketPool *all_thread_packet_pools;$/;"	v	file:
all_user_anno	include/click/packet.hh	/^inline const uint8_t *Packet::all_user_anno() const {$/;"	f	class:Packet
all_user_anno	include/click/packet.hh	/^inline uint8_t *Packet::all_user_anno() {$/;"	f	class:Packet
all_user_anno_u	include/click/packet.hh	/^inline const uint32_t *Packet::all_user_anno_u() const {$/;"	f	class:Packet
all_user_anno_u	include/click/packet.hh	/^inline uint32_t *Packet::all_user_anno_u() {$/;"	f	class:Packet
alloc	include/click/bighashmap_arena.hh	/^HashMap_Arena::alloc()$/;"	f	class:HashMap_Arena
alloc_cb_id	elements/grid/gridroutecb.hh	/^  static int alloc_cb_id() {$/;"	f	class:GridRouteActor
alloc_data	lib/packet.cc	/^Packet::alloc_data(uint32_t headroom, uint32_t length, uint32_t tailroom)$/;"	f	class:Packet
alloc_etherdev	drivers/e1000-4.x/src/kcompat.h	347;"	d
alloc_etherdev	drivers/e1000-5.x/src/kcompat.h	417;"	d
alloc_etherdev	drivers/e1000-7.x/src/kcompat.h	572;"	d
alloc_pid	elements/local/OpenFlow/lib/netlink.cc	/^alloc_pid(uint32_t *pid)$/;"	f	file:
alloc_rx_buf	drivers/e1000-7.x/src/e1000.h	/^	void (*alloc_rx_buf) (struct e1000_adapter *adapter,$/;"	m	struct:e1000_adapter
alloc_rx_buff_failed	drivers/e1000-7.x/src/e1000.h	/^	uint32_t alloc_rx_buff_failed;$/;"	m	struct:e1000_adapter
alloc_tun	elements/userlevel/kerneltun.cc	/^KernelTun::alloc_tun(ErrorHandler *errh)$/;"	f	class:KernelTun
alloc_xid	elements/local/OpenFlow/lib/vconn.cc	/^alloc_xid(void)$/;"	f	file:
allocate	elements/local/FlowNet/common/Flow.cc	/^int Flow::allocate(struct Flow** f)$/;"	f	class:Flow
allocate	include/click/hashallocator.hh	/^inline void *HashAllocator::allocate()$/;"	f	class:HashAllocator
allocate	linuxmodule/skbmgr.cc	/^RecycledSkbPool::allocate(unsigned headroom, unsigned size, int want, int *store_got)$/;"	f	class:RecycledSkbPool
allocated	elements/local/OpenFlow/lib/dynamic-string.hh	/^    size_t allocated;   \/* Bytes allocated, not including null terminator. *\/$/;"	m	struct:ds
allocated	elements/local/OpenFlow/lib/ofpbuf.hh	/^    size_t allocated;           \/* Number of bytes allocated. *\/$/;"	m	struct:ofpbuf
allocated	elements/local/OpenFlow/lib/svec.hh	/^    size_t allocated;$/;"	m	struct:svec
allow	elements/standard/suppressor.hh	/^  void allow(int output)    { _suppressed[output] = false; }$/;"	f	class:Suppressor
allow_all	elements/standard/suppressor.hh	/^  void allow_all()          { _suppressed.clear(); }$/;"	f	class:Suppressor
allow_bare_address	include/click/ip6address.hh	/^    bool allow_bare_address;$/;"	m	struct:IP6PrefixArg
allow_bare_address	include/click/ipaddress.hh	/^    bool allow_bare_address;$/;"	m	struct:IPPrefixArg
allow_int	lib/clp.c	/^    int allow_int;$/;"	m	struct:Clp_StringList	file:
allow_nonexistent	elements/linuxmodule/anydevice.hh	/^    bool allow_nonexistent() const	{ return _allow_nonexistent; }$/;"	f	class:AnyDevice
allowed	elements/userlevel/socket.cc	/^Socket::allowed(IPAddress addr)$/;"	f	class:Socket
allows_driver	tools/lib/etraits.hh	/^    bool allows_driver(int d) const	{ return (driver_mask&(1<<d)) != 0; }$/;"	f	struct:ElementTraits
alter_from_device	elements/linuxmodule/anydevice.cc	/^AnyDevice::alter_from_device(int delta)$/;"	f	class:AnyDevice
alter_promiscuity	elements/linuxmodule/anydevice.cc	/^AnyDevice::alter_promiscuity(int delta)$/;"	f	class:AnyDevice
ambiguity_error	lib/clp.c	/^ambiguity_error(Clp_Parser *clp, int ambiguous, int *ambiguous_values,$/;"	f	file:
ambiguous	lib/clp.c	/^    int ambiguous;$/;"	m	struct:Clp_Internal	file:
ambiguous_values	lib/clp.c	/^    int ambiguous_values[MAX_AMBIGUOUS_VALUES];$/;"	m	struct:Clp_Internal	file:
amoeba1	elements/grid/amoeba.cc	/^Amoeba::amoeba1(double **p, double y[], double ftol, int *nfunk)$/;"	f	class:Amoeba
amotry	elements/grid/amoeba.cc	/^Amoeba::amotry(double **p, double y[], double psum[],$/;"	f	class:Amoeba
analyze	tools/click-devirtualize/signature.cc	/^Signatures::analyze(ElementMap &em)$/;"	f	class:Signatures
analyze_classifiers	tools/click-fastclassifier/click-fastclassifier.cc	/^analyze_classifiers(RouterT *nr, const Vector<ElementT *> &classifiers,$/;"	f	file:
analyze_makefile	tools/click-mkmindriver/click-mkmindriver.cc	/^analyze_makefile(const String &directory, ErrorHandler *errh)$/;"	f	file:
analyze_unsafe_length_jump	tools/click-fastclassifier/click-fastclassifier.cc	/^analyze_unsafe_length_jump(Classifier_Program &prog, Bitvector &active,$/;"	f	file:
analyze_unsafe_length_output_everything	tools/click-fastclassifier/click-fastclassifier.cc	/^analyze_unsafe_length_output_everything(Classifier_Program &prog)$/;"	f	file:
angle	apps/clicky/src/rectangle.hh	/^    double angle() const {$/;"	f	struct:point
anno	elements/grid/packetlogger2.hh	/^    uint8_t anno[Packet::anno_size];$/;"	m	struct:PacketLogger2::log_entry
anno	include/click/packet.hh	/^    const void *anno() const		{ return xanno(); }$/;"	f	class:Packet
anno	include/click/packet.hh	/^    void *anno()			{ return xanno(); }$/;"	f	class:Packet
anno_extract	elements/analysis/ipsumdump_anno.cc	/^static bool anno_extract(PacketDesc& d, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
anno_ina	elements/analysis/ipsumdump_anno.cc	/^static bool anno_ina(PacketOdesc& d, const String &s, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
anno_inject	elements/analysis/ipsumdump_anno.cc	/^static void anno_inject(PacketOdesc& d, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
anno_level_write_handler	elements/ip/ipratemon.cc	/^IPRateMonitor::anno_level_write_handler$/;"	f	class:IPRateMonitor
anno_outa	elements/analysis/ipsumdump_anno.cc	/^static void anno_outa(const PacketDesc& d, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
anno_readers	elements/analysis/ipsumdump_anno.cc	/^static const IPSummaryDump::FieldReader anno_readers[] = {$/;"	m	namespace:IPSummaryDump	file:
anno_s16	include/click/packet.hh	/^    int16_t anno_s16(int i) const {$/;"	f	class:Packet
anno_s32	include/click/packet.hh	/^    int32_t anno_s32(int i) const {$/;"	f	class:Packet
anno_size	include/click/packet.hh	/^	anno_size = 48			\/\/\/< Size of annotation area.$/;"	e	enum:Packet::__anon462
anno_synonyms	elements/analysis/ipsumdump_anno.cc	/^static const IPSummaryDump::FieldSynonym anno_synonyms[] = {$/;"	m	namespace:IPSummaryDump	file:
anno_this	elements/ip/ipratemon.hh	/^    unsigned anno_this;$/;"	m	struct:IPRateMonitor::Counter
anno_u16	include/click/packet.hh	/^    uint16_t anno_u16(int i) const {$/;"	f	class:Packet
anno_u32	include/click/packet.hh	/^    const uint32_t *anno_u32() const	{ return &xanno()->u32[0]; }$/;"	f	class:Packet
anno_u32	include/click/packet.hh	/^    uint32_t *anno_u32()		{ return &xanno()->u32[0]; }$/;"	f	class:Packet
anno_u32	include/click/packet.hh	/^    uint32_t anno_u32(int i) const {$/;"	f	class:Packet
anno_u64	include/click/packet.hh	/^    uint64_t anno_u64(int i) const {$/;"	f	class:Packet
anno_u8	include/click/packet.hh	/^    const uint8_t *anno_u8() const	{ return &xanno()->u8[0]; }$/;"	f	class:Packet
anno_u8	include/click/packet.hh	/^    uint8_t *anno_u8()			{ return &xanno()->u8[0]; }$/;"	f	class:Packet
anno_u8	include/click/packet.hh	/^    uint8_t anno_u8(int i) const {$/;"	f	class:Packet
anno_writers	elements/analysis/ipsumdump_anno.cc	/^static const IPSummaryDump::FieldWriter anno_writers[] = {$/;"	m	namespace:IPSummaryDump	file:
annotation_entries	lib/nameinfo.cc	/^static const StaticNameDB::Entry annotation_entries[] = {$/;"	v	file:
anon_element_name	lib/lexer.cc	/^Lexer::anon_element_name(const String &class_name) const$/;"	f	class:Lexer
anon_element_name	tools/lib/lexert.cc	/^LexerT::anon_element_name(const String &class_name) const$/;"	f	class:LexerT
anonymize_addr	elements/analysis/anonipaddr.cc	/^AnonymizeIPAddr::anonymize_addr(uint32_t a)$/;"	f	class:AnonymizeIPAddr
ans_duplex	drivers/e1000-4.x/src/e1000.h	/^	uint32_t ans_duplex;$/;"	m	struct:e1000_adapter
ans_link	drivers/e1000-4.x/src/e1000.h	/^	uint32_t ans_link;$/;"	m	struct:e1000_adapter
ans_notify	drivers/e1000-4.x/src/ans_os.c	/^void (*ans_notify)(device_t *dev, int ind_type) = NULL;$/;"	v
ans_speed	drivers/e1000-4.x/src/e1000.h	/^	uint32_t ans_speed;$/;"	m	struct:e1000_adapter
ans_suspend	drivers/e1000-4.x/src/e1000.h	/^	uint32_t ans_suspend;$/;"	m	struct:e1000_adapter
ant_mode_xmit	elements/wifi/athdesc.h	/^	u_int32_t	ant_mode_xmit:4;$/;"	m	struct:ar5212_desc
anydev_change	elements/linuxmodule/anydevice.hh	/^	anydev_change = 1,$/;"	e	enum:AnyDevice::__anon314
anydev_from_device	elements/linuxmodule/anydevice.hh	/^	anydev_from_device = 2$/;"	e	enum:AnyDevice::__anon314
append	include/click/straccum.hh	/^    inline void append(char c) {$/;"	f	class:StringAccum
append	include/click/straccum.hh	/^    inline void append(const char *begin, const char *end) {$/;"	f	class:StringAccum
append	include/click/straccum.hh	/^    inline void append(const char *s, int len) {$/;"	f	class:StringAccum
append	include/click/straccum.hh	/^    inline void append(const unsigned char *s, int len) {$/;"	f	class:StringAccum
append	include/click/straccum.hh	/^    inline void append(unsigned char c) {$/;"	f	class:StringAccum
append	include/click/string.hh	/^    inline void append(const char *begin, const char *end) {$/;"	f	class:String
append	lib/string.cc	/^String::append(const char *s, int len)$/;"	f	class:String
append_build_string	lib/clp.c	/^append_build_string(Clp_BuildString *bs, const char *s, int l)$/;"	f	file:
append_data	include/click/straccum.hh	/^    inline void append_data(const char *s, int len) {$/;"	f	class:StringAccum
append_external_data	include/click/straccum.hh	/^    inline void append_external_data(const char *s, int len) {$/;"	f	class:StringAccum
append_fill	lib/straccum.cc	/^StringAccum::append_fill(int c, int len)$/;"	f	class:StringAccum
append_fill	lib/string.cc	/^String::append_fill(int c, int len)$/;"	f	class:String
append_garbage	lib/string.cc	/^String::append_garbage(int len)$/;"	f	class:String
append_internal_data	lib/straccum.cc	/^StringAccum::append_internal_data(const char *s, int len)$/;"	f	class:StringAccum
append_markup_quote	apps/clicky/src/dwidget.cc	/^static void append_markup_quote(StringAccum &sa, const String &str,$/;"	f	namespace:clicky
append_metric	elements/grid/bottleneckmetric.cc	/^BottleneckMetric::append_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:BottleneckMetric
append_metric	elements/grid/e2elossmetric.cc	/^E2ELossMetric::append_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:E2ELossMetric
append_metric	elements/grid/etx2metric.cc	/^ETX2Metric::append_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:ETX2Metric
append_metric	elements/grid/etxmetric.cc	/^ETXMetric::append_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:ETXMetric
append_metric	elements/grid/hopcountmetric.cc	/^HopcountMetric::append_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:HopcountMetric
append_metric	elements/grid/lirmetric.cc	/^LIRMetric::append_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:LIRMetric
append_metric	elements/grid/threshmetric.cc	/^ThresholdMetric::append_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:ThresholdMetric
append_metric	elements/grid/yarvismetric.cc	/^YarvisMetric::append_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:YarvisMetric
append_net_uint32_t	elements/analysis/fromtcpdump.cc	/^append_net_uint32_t(StringAccum &sa, uint32_t u)$/;"	f	file:
append_net_uint32_t	elements/analysis/ipsumdump_ip.cc	/^static void append_net_uint32_t(StringAccum &sa, uint32_t u)$/;"	f	namespace:IPSummaryDump
append_net_uint32_t	elements/analysis/ipsumdump_tcp.cc	/^static void append_net_uint32_t(StringAccum &sa, uint32_t u)$/;"	f	namespace:IPSummaryDump
append_numeric	lib/straccum.cc	/^StringAccum::append_numeric(String::int_large_t num, int base, bool uppercase)$/;"	f	class:StringAccum
append_numeric	lib/straccum.cc	/^StringAccum::append_numeric(String::uint_large_t num, int base, bool uppercase)$/;"	f	class:StringAccum
append_query	elements/ethernet/arptable.cc	/^ARPTable::append_query(IPAddress ip, Packet *p)$/;"	f	class:ARPTable
apply	elements/icmp/icmppingrewriter.cc	/^ICMPPingRewriter::ICMPPingFlow::apply(WritablePacket *p, bool direction, unsigned annos)$/;"	f	class:ICMPPingRewriter::ICMPPingFlow
apply	elements/ip/ipaddrpairrewriter.cc	/^IPAddrPairRewriter::IPAddrPairFlow::apply(WritablePacket *p, bool direction,$/;"	f	class:IPAddrPairRewriter::IPAddrPairFlow
apply	elements/ip/ipaddrrewriter.cc	/^IPAddrRewriter::IPAddrFlow::apply(WritablePacket *p, bool direction,$/;"	f	class:IPAddrRewriter::IPAddrFlow
apply	elements/ip/iprwmapping.cc	/^IPRewriterFlow::apply(WritablePacket *p, bool direction, unsigned annos)$/;"	f	class:IPRewriterFlow
apply	elements/tcpudp/tcprewriter.cc	/^TCPRewriter::TCPFlow::apply(WritablePacket *p, bool direction, unsigned annos)$/;"	f	class:TCPRewriter::TCPFlow
apply_action	apps/clicky/src/whandler.cc	/^void whandler::apply_action(const String &action_for, bool activate)$/;"	f	class:clicky::whandler
apply_sack	elements/tcpudp/tcprewriter.cc	/^TCPRewriter::TCPFlow::apply_sack(bool direction, click_tcp *tcph, int len)$/;"	f	class:TCPRewriter::TCPFlow
apply_tag	apps/clicky/src/wmain.cc	/^    void apply_tag(const char *pos1, const char *pos2, GtkTextTag *tag) {$/;"	f	class:clicky::ClickyLexerTInfo
ar5212_desc	elements/wifi/athdesc.h	/^struct ar5212_desc {$/;"	s
ar5212_rx_status	elements/wifi/athdesc.h	/^struct ar5212_rx_status {$/;"	s
ar_abs	elements/standard/script.hh	/^	ar_neg, ar_abs,$/;"	e	enum:Script::__anon178
ar_add	elements/standard/script.hh	/^	ar_add = 0, ar_sub, ar_mul, ar_div, ar_idiv, ar_mod, ar_rem,$/;"	e	enum:Script::__anon178
ar_and	elements/standard/script.hh	/^	ar_and, ar_or, ar_nand, ar_nor, ar_now, ar_if, ar_in,$/;"	e	enum:Script::__anon178
ar_cat	elements/standard/script.hh	/^	AR_FIRST, AR_NOT, AR_SPRINTF, ar_random, ar_cat,$/;"	e	enum:Script::__anon178
ar_div	elements/standard/script.hh	/^	ar_add = 0, ar_sub, ar_mul, ar_div, ar_idiv, ar_mod, ar_rem,$/;"	e	enum:Script::__anon178
ar_hln	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t ar_hln;            \/* Hardware address length. *\/$/;"	m	struct:arp_eth_header
ar_hln	include/clicknet/ether.h	/^    uint8_t	ar_hln;		\/* 4   (18)     hardware address length      *\/$/;"	m	struct:click_arp
ar_hrd	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t ar_hrd;           \/* Hardware type. *\/$/;"	m	struct:arp_eth_header
ar_hrd	include/clicknet/ether.h	/^    uint16_t	ar_hrd;		\/* 0-1 (14-15)  hardware address format      *\/$/;"	m	struct:click_arp
ar_idiv	elements/standard/script.hh	/^	ar_add = 0, ar_sub, ar_mul, ar_div, ar_idiv, ar_mod, ar_rem,$/;"	e	enum:Script::__anon178
ar_if	elements/standard/script.hh	/^	ar_and, ar_or, ar_nand, ar_nor, ar_now, ar_if, ar_in,$/;"	e	enum:Script::__anon178
ar_in	elements/standard/script.hh	/^	ar_and, ar_or, ar_nand, ar_nor, ar_now, ar_if, ar_in,$/;"	e	enum:Script::__anon178
ar_kill	elements/standard/script.hh	/^	ar_readable, ar_writable, ar_length, ar_unquote, ar_kill$/;"	e	enum:Script::__anon178
ar_length	elements/standard/script.hh	/^	ar_readable, ar_writable, ar_length, ar_unquote, ar_kill$/;"	e	enum:Script::__anon178
ar_mod	elements/standard/script.hh	/^	ar_add = 0, ar_sub, ar_mul, ar_div, ar_idiv, ar_mod, ar_rem,$/;"	e	enum:Script::__anon178
ar_mul	elements/standard/script.hh	/^	ar_add = 0, ar_sub, ar_mul, ar_div, ar_idiv, ar_mod, ar_rem,$/;"	e	enum:Script::__anon178
ar_nand	elements/standard/script.hh	/^	ar_and, ar_or, ar_nand, ar_nor, ar_now, ar_if, ar_in,$/;"	e	enum:Script::__anon178
ar_neg	elements/standard/script.hh	/^	ar_neg, ar_abs,$/;"	e	enum:Script::__anon178
ar_nor	elements/standard/script.hh	/^	ar_and, ar_or, ar_nand, ar_nor, ar_now, ar_if, ar_in,$/;"	e	enum:Script::__anon178
ar_now	elements/standard/script.hh	/^	ar_and, ar_or, ar_nand, ar_nor, ar_now, ar_if, ar_in,$/;"	e	enum:Script::__anon178
ar_op	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t ar_op;            \/* Opcode. *\/$/;"	m	struct:arp_eth_header
ar_op	include/clicknet/ether.h	/^    uint16_t	ar_op;		\/* 6-7 (20-21)  opcode (command)	     *\/$/;"	m	struct:click_arp
ar_or	elements/standard/script.hh	/^	ar_and, ar_or, ar_nand, ar_nor, ar_now, ar_if, ar_in,$/;"	e	enum:Script::__anon178
ar_pln	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t ar_pln;            \/* Protocol address length. *\/$/;"	m	struct:arp_eth_header
ar_pln	include/clicknet/ether.h	/^    uint8_t	ar_pln;		\/* 5   (19)     protocol address length      *\/$/;"	m	struct:click_arp
ar_pro	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t ar_pro;           \/* Protocol type. *\/$/;"	m	struct:arp_eth_header
ar_pro	include/clicknet/ether.h	/^    uint16_t	ar_pro;		\/* 2-3 (16-17)  protocol address format      *\/$/;"	m	struct:click_arp
ar_random	elements/standard/script.hh	/^	AR_FIRST, AR_NOT, AR_SPRINTF, ar_random, ar_cat,$/;"	e	enum:Script::__anon178
ar_readable	elements/standard/script.hh	/^	ar_readable, ar_writable, ar_length, ar_unquote, ar_kill$/;"	e	enum:Script::__anon178
ar_rem	elements/standard/script.hh	/^	ar_add = 0, ar_sub, ar_mul, ar_div, ar_idiv, ar_mod, ar_rem,$/;"	e	enum:Script::__anon178
ar_sha	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t ar_sha[ETH_ADDR_LEN]; \/* Sender hardware address. *\/$/;"	m	struct:arp_eth_header
ar_spa	elements/local/OpenFlow/lib/packets.hh	/^    uint32_t ar_spa;           \/* Sender protocol address. *\/$/;"	m	struct:arp_eth_header
ar_sub	elements/standard/script.hh	/^	ar_add = 0, ar_sub, ar_mul, ar_div, ar_idiv, ar_mod, ar_rem,$/;"	e	enum:Script::__anon178
ar_tha	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t ar_tha[ETH_ADDR_LEN]; \/* Target hardware address. *\/$/;"	m	struct:arp_eth_header
ar_tpa	elements/local/OpenFlow/lib/packets.hh	/^    uint32_t ar_tpa;           \/* Target protocol address. *\/$/;"	m	struct:arp_eth_header
ar_unquote	elements/standard/script.hh	/^	ar_readable, ar_writable, ar_length, ar_unquote, ar_kill$/;"	e	enum:Script::__anon178
ar_writable	elements/standard/script.hh	/^	ar_readable, ar_writable, ar_length, ar_unquote, ar_kill$/;"	e	enum:Script::__anon178
archive	tools/lib/routert.hh	/^    ArchiveElement &archive(int i)		{ return _archive[i]; }$/;"	f	class:RouterT
archive	tools/lib/routert.hh	/^    const ArchiveElement &archive(int i) const	{ return _archive[i]; }$/;"	f	class:RouterT
archive	tools/lib/routert.hh	/^    const Vector<ArchiveElement> &archive() const{ return _archive; }$/;"	f	class:RouterT
archive	tools/lib/routert.hh	/^RouterT::archive(const String &name) const$/;"	f	class:RouterT
archive	tools/lib/routert.hh	/^RouterT::archive(const String &name)$/;"	f	class:RouterT
archive_index	tools/lib/routert.hh	/^    int archive_index(const String &s) const	{ return _archive_map[s]; }$/;"	f	class:RouterT
area	apps/clicky/src/rectangle.hh	/^    double area() const {$/;"	f	struct:rectangle
arena_factory	include/click/router.hh	/^Router::arena_factory() const$/;"	f	class:Router
arg	drivers/e1000-4.x/src/e1000_param.c	/^	} arg;$/;"	m	struct:e1000_option	typeref:union:e1000_option::__anon67	file:
arg	drivers/e1000-5.x/src/e1000_param.c	/^	} arg;$/;"	m	struct:e1000_option	typeref:union:e1000_option::__anon164	file:
arg	drivers/e1000-7.x/src/e1000_param.c	/^	} arg;$/;"	m	struct:e1000_option	typeref:union:e1000_option::__anon122	file:
argc	lib/clp.c	/^    int argc;$/;"	m	struct:Clp_Internal	file:
argc	lib/clp.c	/^    int argc;$/;"	m	struct:Clp_ParserState	file:
argcmp	lib/clp.c	/^argcmp(const char *ref, const char *arg, int min_match, int fewer_dashes)$/;"	f	file:
argcmp	test/testie	/^sub argcmp ($$$;\\$) {$/;"	s
args	tools/click-devirtualize/cxxclass.hh	/^  const String &args() const		{ return _args; }$/;"	f	class:CxxFunction
args_base_read	include/click/args.hh	/^void args_base_read(Args *args, const char *keyword, int flags, T &variable)$/;"	f
args_base_read	include/click/args.hh	/^void args_base_read(Args *args, const char *keyword, int flags,$/;"	f
args_base_read_all_with	include/click/args.hh	/^void args_base_read_all_with(Args *args, const char *keyword, int flags, P parser)$/;"	f
args_base_read_all_with	include/click/args.hh	/^void args_base_read_all_with(Args *args, const char *keyword, int flags,$/;"	f
args_base_read_or_set	include/click/args.hh	/^void args_base_read_or_set(Args *args, const char *keyword, int flags,$/;"	f
args_base_read_with	include/click/args.hh	/^void args_base_read_with(Args *args, const char *keyword, int flags, P parser)$/;"	f
args_base_read_with	include/click/args.hh	/^void args_base_read_with(Args *args, const char *keyword, int flags,$/;"	f
args_x1	elements/test/clptest.cc	/^static const char * const args_x1[] = {$/;"	v	file:
args_x2	elements/test/clptest.cc	/^static const char * const args_x2[] = {$/;"	v	file:
args_x3	elements/test/clptest.cc	/^static const char * const args_x3[] = {$/;"	v	file:
args_x4	elements/test/clptest.cc	/^static const char * const args_x4[] = {$/;"	v	file:
args_x5	elements/test/clptest.cc	/^static const char * const args_x5[] = {$/;"	v	file:
args_x6	elements/test/clptest.cc	/^static const char * const args_x6[] = {$/;"	v	file:
args_x7	elements/test/clptest.cc	/^static const char * const args_x7[] = {$/;"	v	file:
args_x8	elements/test/clptest.cc	/^static const char * const args_x8[] = {$/;"	v	file:
argtype	include/click/confparse.hh	/^    const cp_argtype* argtype;$/;"	m	struct:cp_value
argtype_bucket	lib/confparse.cc	/^argtype_bucket(const char *command)$/;"	f	file:
argtype_hash	lib/confparse.cc	/^static cp_argtype *argtype_hash[NARGTYPE_HASH];$/;"	v	file:
argument_type	include/click/algorithm.hh	/^    typedef T argument_type;$/;"	t	struct:do_nothing
argv	lib/clp.c	/^    const char * const *argv;$/;"	m	struct:Clp_Internal	file:
argv	lib/clp.c	/^    const char * const *argv;$/;"	m	struct:Clp_ParserState	file:
arithmetic_handler	elements/standard/script.cc	/^Script::arithmetic_handler(int, String &str, Element *e, const Handler *h, ErrorHandler *errh)$/;"	f	class:Script
arp_eth_header	elements/local/OpenFlow/lib/packets.hh	/^struct arp_eth_header {$/;"	s
arp_machinery	conf/click-mkclgw.pl	/^sub arp_machinery {$/;"	s
arp_sha	include/clicknet/ether.h	/^    uint8_t	arp_sha[6];	\/* 8-13  (22-27)  sender hardware address    *\/$/;"	m	struct:click_ether_arp
arp_spa	include/clicknet/ether.h	/^    uint8_t	arp_spa[4];	\/* 14-17 (28-31)  sender protocol address    *\/$/;"	m	struct:click_ether_arp
arp_tha	include/clicknet/ether.h	/^    uint8_t	arp_tha[6];	\/* 18-23 (32-37)  target hardware address    *\/$/;"	m	struct:click_ether_arp
arp_tpa	include/clicknet/ether.h	/^    uint8_t	arp_tpa[4];	\/* 24-27 (38-41)  target protocol address    *\/$/;"	m	struct:click_ether_arp
arr_ql	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	struct queue_length arr_ql[MAX_QL_WINDOW_SIZE];$/;"	m	struct:queue_QL	typeref:struct:queue_QL::queue_length
arrival_j	elements/ip/ipfragmentmap.hh	/^	click_jiffies_t arrival_j;$/;"	m	struct:IPFragmentMap::Entry
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_append	etc/samplepackage/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_arith	etc/samplepackage/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_error	etc/samplepackage/configure	/^as_fn_error ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_exit	etc/samplepackage/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_failure	etc/samplepackage/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	etc/samplepackage/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_failure	etc/samplepackage/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_ret_success	etc/samplepackage/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_set_status	etc/samplepackage/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_success	etc/samplepackage/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
as_fn_unset	etc/samplepackage/configure	/^as_fn_unset ()$/;"	f
as_func_failure	apps/clicky/configure	/^as_func_failure () {$/;"	f
as_func_ret_failure	apps/clicky/configure	/^as_func_ret_failure () {$/;"	f
as_func_ret_success	apps/clicky/configure	/^as_func_ret_success () {$/;"	f
as_func_success	apps/clicky/configure	/^as_func_success () {$/;"	f
asf_firmware_present	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t asf_firmware_present;$/;"	m	struct:e1000_hw
asf_firmware_present	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t asf_firmware_present;$/;"	m	struct:e1000_hw
assert	include/click/config-bsdmodule.h	50;"	d
assert	include/click/config-bsdmodule.h	52;"	d
assert	include/click/config-linuxmodule.h	233;"	d
assert	include/click/config-linuxmodule.h	235;"	d
assert_eq	apps/csclient/csclient.cc	507;"	d	file:
assert_stops_router	bsdmodule/module.cc	/^static bool assert_stops_router = false;$/;"	v	file:
assert_stops_router	linuxmodule/module.cc	/^static bool assert_stops_router = false;$/;"	v	file:
assign	apps/clicky/src/dstyle.cc	/^int dcss::assign(dcss_propmatch **begin, dcss_propmatch **end) const$/;"	f	class:clicky::dcss
assign	apps/clicky/src/rectangle.hh	/^    void assign(const rectangle &r) {$/;"	f	struct:rectangle
assign	apps/clicky/src/rectangle.hh	/^    void assign(double x, double y, double width, double height) {$/;"	f	struct:rectangle
assign	include/click/dequeue.cc	/^DEQueue<T>::assign(int n, const T &e)$/;"	f	class:DEQueue
assign	include/click/element.hh	/^Element::Port::assign(Element *owner, Element *e, int port, bool isoutput)$/;"	f	class:Element::Port
assign	include/click/ewma.hh	/^    inline void assign(value_type scaled_value) {$/;"	f	class:DirectEWMAX
assign	include/click/ipflowid.hh	/^    void assign(IPAddress saddr, uint16_t sport, IPAddress daddr, uint16_t dport) {$/;"	f	class:IPFlowID
assign	include/click/string.hh	/^    inline void assign(const String &x) const {$/;"	f	class:String
assign	include/click/timer.hh	/^    inline void assign() {$/;"	f	class:Timer
assign	include/click/timer.hh	/^    inline void assign(TimerCallback f, void *user_data) {$/;"	f	class:Timer
assign	include/click/timer.hh	/^    inline void assign(const do_nothing_t &unused) {$/;"	f	class:Timer
assign	include/click/timer.hh	/^    void assign(Element *element) {$/;"	f	class:Timer
assign	include/click/timer.hh	/^    void assign(Task *task) {$/;"	f	class:Timer
assign	include/click/timestamp.hh	/^    inline void assign(seconds_type sec, uint32_t subsec = 0) {$/;"	f	class:Timestamp
assign	include/click/tokenbucket.hh	/^    void assign(bool unlimited = false) {$/;"	f	class:TokenBucketX
assign	include/click/tokenbucket.hh	/^    void assign(token_type rate, token_type capacity) {$/;"	f	class:TokenBucketX
assign	include/click/tokenbucket.hh	/^void TokenRateX<P>::assign(bool unlimited)$/;"	f	class:TokenRateX
assign	include/click/tokenbucket.hh	/^void TokenRateX<P>::assign(token_type rate, token_type capacity)$/;"	f	class:TokenRateX
assign	include/click/vector.cc	/^Vector<T>::assign(size_type n, const T &x)$/;"	f	class:Vector
assign	include/click/vector.hh	/^    Vector<T*>& assign(size_type n, T* x = 0)$/;"	f	class:Vector
assign	lib/bitvector.cc	/^Bitvector::assign(int n, bool value)$/;"	f	class:Bitvector
assign	lib/handlercall.cc	/^HandlerCall::assign(Element *e, const String &hname, const String &value, int flags, ErrorHandler* errh)$/;"	f	class:HandlerCall
assign	lib/string.cc	/^String::assign(const char *str, int len, bool need_deref)$/;"	f	class:String
assign	lib/vectorv.cc	/^Vector<void*>::assign(size_type n, void* e)$/;"	f	class:Vector
assign	tools/lib/routert.hh	/^    void assign(const ConnectionX *conn, int by) {$/;"	f	class:RouterT::conn_iterator
assign_adjust	include/click/tokenbucket.hh	/^    void assign_adjust(token_type rate, token_type capacity) {$/;"	f	class:TokenBucketX
assign_all	apps/clicky/src/dstyle.cc	/^void dcss::assign_all(dcss_propmatch *props, dcss_propmatch **pp, int n,$/;"	f	class:clicky::dcss
assign_arguments	lib/confparse.cc	/^CpVaHelper::assign_arguments(const Vector<String> &args, const char *argname, ErrorHandler *errh)$/;"	f	class:__anon517::CpVaHelper
assign_arguments	lib/lexer.cc	/^Lexer::Compound::assign_arguments(const Vector<String> &args, Vector<String> *values) const$/;"	f	class:Lexer::Compound
assign_arguments	tools/lib/routert.cc	/^RouterT::assign_arguments(const Vector<String> &args, Vector<String> *values) const$/;"	f	class:RouterT
assign_consume	include/click/algorithm.hh	/^inline void assign_consume(T &x, const V &y)$/;"	f
assign_consume	include/click/bitvector.hh	/^inline void assign_consume(Bitvector &a, Bitvector &b)$/;"	f
assign_consume	include/click/dequeue.hh	/^inline void assign_consume(DEQueue<T> &a, DEQueue<T> &b)$/;"	f
assign_consume	include/click/hashtable.hh	/^inline void assign_consume(HashTable<K, V> &a, HashTable<K, V> &b)$/;"	f
assign_consume	include/click/straccum.hh	/^inline void assign_consume(StringAccum &a, StringAccum &b)$/;"	f
assign_consume	include/click/vector.hh	/^inline void assign_consume(Vector<T> &a, Vector<T> &b)$/;"	f
assign_element_name	tools/lib/routert.cc	/^RouterT::assign_element_name(int ei)$/;"	f	class:RouterT
assign_element_names	tools/lib/routert.cc	/^RouterT::assign_element_names()$/;"	f	class:RouterT
assign_keyword_argument	lib/confparse.cc	/^CpVaHelper::assign_keyword_argument(const String &arg)$/;"	f	class:__anon517::CpVaHelper
assign_memo	include/click/string.hh	/^    inline void assign_memo(const char *data, int length, memo_t *memo) const {$/;"	f	class:String
assign_now	include/click/timestamp.hh	/^Timestamp::assign_now()$/;"	f	class:Timestamp
assign_now	include/click/timestamp.hh	/^Timestamp::assign_now(bool raw)$/;"	f	class:Timestamp
assign_now_real_time	include/click/timestamp.hh	/^Timestamp::assign_now_real_time()$/;"	f	class:Timestamp
assign_nsec	include/click/timestamp.hh	/^    inline void assign_nsec(seconds_type sec, uint32_t nsec) {$/;"	f	class:Timestamp
assign_out_of_memory	lib/straccum.cc	/^StringAccum::assign_out_of_memory()$/;"	f	class:StringAccum
assign_out_of_memory	lib/string.cc	/^String::assign_out_of_memory()$/;"	f	class:String
assign_rate	elements/wifi/autoratefallback.cc	/^AutoRateFallback::assign_rate(Packet *p_in)$/;"	f	class:AutoRateFallback
assign_rate	elements/wifi/madwifirate.cc	/^MadwifiRate::assign_rate(Packet *p_in)$/;"	f	class:MadwifiRate
assign_rate	elements/wifi/probetxrate.cc	/^ProbeTXRate::assign_rate(Packet *p_in) {$/;"	f	class:ProbeTXRate
assign_usec	include/click/timestamp.hh	/^    inline void assign_usec(seconds_type sec, uint32_t usec) {$/;"	f	class:Timestamp
assign_z_indexes	apps/clicky/src/dwidget.cc	/^int delt::assign_z_indexes(int z)$/;"	f	class:clicky::delt
assimilate_mbuf	include/click/packet.hh	/^Packet::assimilate_mbuf()$/;"	f	class:Packet
assimilate_mbuf	include/click/packet.hh	/^Packet::assimilate_mbuf(Packet *p)$/;"	f	class:Packet
at	include/click/dequeue.hh	/^  T &at(int i)				{ assert(i>=0 && i<_n); return _l[idx(i)]; }$/;"	f	class:DEQueue
at	include/click/dequeue.hh	/^  const T &at(int i) const		{ assert(i>=0 && i<_n); return _l[idx(i)]; }$/;"	f	class:DEQueue
at	include/click/string.hh	/^    inline char at(int i) const {$/;"	f	class:String
at	include/click/vector.hh	/^    T& at(size_type i)			{ return operator[](i); }$/;"	f	class:Vector
at	include/click/vector.hh	/^    T* at(size_type i) const	{ return (T*)(Base::at(i)); }$/;"	f	class:Vector
at	include/click/vector.hh	/^    T*& at(size_type i)		{ return (T*&)(Base::operator[](i)); }$/;"	f	class:Vector
at	include/click/vector.hh	/^    const T& at(size_type i) const	{ return operator[](i); }$/;"	f	class:Vector
at	include/click/vector.hh	/^    void* at(size_type i) const		{ return operator[](i); }$/;"	f	class:Vector
at	include/click/vector.hh	/^    void*& at(size_type i)		{ return operator[](i); }$/;"	f	class:Vector
at_u	include/click/dequeue.hh	/^  T &at_u(int i)			{ return _l[idx(i)]; }$/;"	f	class:DEQueue
at_u	include/click/dequeue.hh	/^  const T &at_u(int i) const		{ return _l[idx(i)]; }$/;"	f	class:DEQueue
at_u	include/click/vector.hh	/^    T& at_u(size_type i)		{ return _l[i]; }$/;"	f	class:Vector
at_u	include/click/vector.hh	/^    T* at_u(size_type i) const	{ return (T*)(Base::at_u(i)); }$/;"	f	class:Vector
at_u	include/click/vector.hh	/^    T*& at_u(size_type i)	{ return (T*&)(Base::at_u(i)); }$/;"	f	class:Vector
at_u	include/click/vector.hh	/^    const T& at_u(size_type i) const	{ return _l[i]; }$/;"	f	class:Vector
at_u	include/click/vector.hh	/^    void* at_u(size_type i) const	{ return _l[i]; }$/;"	f	class:Vector
at_u	include/click/vector.hh	/^    void*& at_u(size_type i)		{ return _l[i]; }$/;"	f	class:Vector
atexit_handler	elements/local/OpenFlow/lib/fatal-signal.cc	/^atexit_handler(void)$/;"	f	file:
atexit_remover	lib/userutils.cc	/^atexit_remover()$/;"	f	file:
atim	include/clicknet/wifi.h	/^	    	uint16_t	atim;$/;"	m	struct:wifi_information::ibss
atm	elements/analysis/fromdagdump.hh	/^	    DAGATMCell atm;$/;"	m	union:FromDAGDump::DAGCell::__anon270
atomic_uint32_t	include/click/atomic.hh	/^class atomic_uint32_t { public:$/;"	c
atomic_uint32_t_data_handler	lib/element.cc	/^atomic_uint32_t_data_handler(int op, String &str, Element *element, const Handler *h, ErrorHandler *errh)$/;"	f	file:
attach_router	include/click/element.hh	/^    inline void attach_router(Router *r, int eindex) {$/;"	f	class:Element
attachment	lib/router.cc	/^Router::attachment(const String &name) const$/;"	f	class:Router
attempt	include/click/sync.hh	/^SimpleSpinlock::attempt()$/;"	f	class:SimpleSpinlock
attempt	include/click/sync.hh	/^Spinlock::attempt()$/;"	f	class:Spinlock
attempt_lock_timers	include/click/timerset.hh	/^TimerSet::attempt_lock_timers()$/;"	f	class:TimerSet
attempt_read	include/click/sync.hh	/^ReadWriteLock::attempt_read()$/;"	f	class:ReadWriteLock
attempt_write	include/click/sync.hh	/^ReadWriteLock::attempt_write()$/;"	f	class:ReadWriteLock
attr_len_range	elements/local/OpenFlow/lib/netlink.cc	/^static size_t attr_len_range[N_NL_ATTR_TYPES+1][2];\/* = {$/;"	v	file:
attributed_mode	drivers/e1000-4.x/src/ans.h	/^    u32 attributed_mode;     \/* sending TLVs with our packets *\/$/;"	m	struct:_iANSsupport_t
autoneg	drivers/e1000-4.x/src/e1000_hw.h	/^    uint8_t autoneg;$/;"	m	struct:e1000_hw
autoneg	drivers/e1000-5.x/src/e1000_hw.h	/^    uint8_t autoneg;$/;"	m	struct:e1000_hw
autoneg	drivers/e1000-5.x/src/kcompat.h	/^	u32	autoneg;$/;"	m	struct:_kc_ethtool_pauseparam
autoneg	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t autoneg;$/;"	m	struct:e1000_hw
autoneg	drivers/e1000-7.x/src/kcompat.h	/^	u32	autoneg;$/;"	m	struct:_kc_ethtool_pauseparam
autoneg_advertised	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t autoneg_advertised;$/;"	m	struct:e1000_hw
autoneg_advertised	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t autoneg_advertised;$/;"	m	struct:e1000_hw
autoneg_advertised	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t autoneg_advertised;$/;"	m	struct:e1000_hw
autoneg_failed	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t autoneg_failed;$/;"	m	struct:e1000_hw
autoneg_failed	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t autoneg_failed;$/;"	m	struct:e1000_hw
autoneg_failed	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t autoneg_failed;$/;"	m	struct:e1000_hw
autorefresh	apps/clicky/src/dstyle.hh	/^    int autorefresh;$/;"	m	struct:clicky::dactivity_style
autorefresh	apps/clicky/src/dstyle.hh	/^    int autorefresh;$/;"	m	struct:clicky::dfullness_style
autorefresh_period	apps/clicky/src/dstyle.hh	/^    int autorefresh_period;$/;"	m	struct:clicky::dactivity_style
autorefresh_period	apps/clicky/src/dstyle.hh	/^    int autorefresh_period;$/;"	m	struct:clicky::dfullness_style
autorefresh_period	apps/clicky/src/dstyle.hh	/^    int autorefresh_period;$/;"	m	struct:clicky::dhandler_style
autorefresh_period	apps/clicky/src/hvalues.hh	/^    int autorefresh_period() const {$/;"	f	class:clicky::handler_value
autorefresher	apps/clicky/src/hvalues.cc	/^    autorefresher(handler_value *hv_, crouter *cr_, int period_)$/;"	f	struct:clicky::__anon22::autorefresher
autorefresher	apps/clicky/src/hvalues.cc	/^struct autorefresher {$/;"	s	namespace:clicky::__anon22	file:
aux	elements/local/OpenFlow/lib/fatal-signal.cc	/^    void *aux;$/;"	m	struct:hook	file:
aux	elements/local/OpenFlow/lib/poll-loop.cc	/^    void *aux;                  \/* Argument to callback function. *\/$/;"	m	struct:poll_waiter	file:
aux	elements/local/OpenFlow/lib/stp.cc	/^    void *aux;$/;"	m	struct:stp	file:
avail_sockets	elements/local/OpenFlow/lib/netlink.cc	/^static uint32_t avail_sockets[ROUND_UP(MAX_SOCKETS, 32)];$/;"	v	file:
available_speeds	drivers/e1000-4.x/src/ans.h	/^    u32 available_speeds;$/;"	m	struct:_iANSsupport_t
average	elements/wifi/probetxrate.hh	/^    int average(int ndx) {$/;"	f	struct:ProbeTXRate::DstInfo
average_queue_size	elements/aqm/pi.hh	/^    const ewma_type &average_queue_size() const { return _size; }$/;"	f	class:PI
average_queue_size	elements/aqm/red.hh	/^    const ewma_type &average_queue_size() const { return _size; }$/;"	f	class:RED
averagecounter_read_count_handler	elements/standard/averagecounter.cc	/^averagecounter_read_count_handler(Element *e, void *thunk)$/;"	f	file:
averagecounter_read_rate_handler	elements/standard/averagecounter.cc	/^averagecounter_read_rate_handler(Element *e, void *thunk)$/;"	f	file:
averagecounter_reset_write_handler	elements/standard/averagecounter.cc	/^averagecounter_reset_write_handler$/;"	f	file:
b	elements/analysis/aggregateipaddrpair.hh	/^	uint32_t b;$/;"	m	struct:AggregateIPAddrPair::HostPair
b	elements/analysis/aggregateipflows.hh	/^	uint32_t b;$/;"	m	struct:AggregateIPFlows::HostPair
b	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	double a, b;        \/\/ coefficients of f(x) = a + b*x$/;"	m	struct:LinearRegression
b	include/click/confparse.hh	/^	bool b;$/;"	m	union:cp_value::__anon479
b:c_minlines	etc/click.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	etc/click.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	etc/click.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:current_syntax	etc/click.vim	/^let b:current_syntax = "click"$/;"	v
ba_bad_argument	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t ba_bad_argument;$/;"	m	struct:ofpstat::__anon246
ba_bad_len	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t ba_bad_len;$/;"	m	struct:ofpstat::__anon246
ba_bad_out_port	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t ba_bad_out_port;$/;"	m	struct:ofpstat::__anon246
ba_bad_type	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t ba_bad_type;$/;"	m	struct:ofpstat::__anon246
ba_bad_vendor	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t ba_bad_vendor;$/;"	m	struct:ofpstat::__anon246
ba_bad_vendor_type	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t ba_bad_vendor_type;$/;"	m	struct:ofpstat::__anon246
ba_eperm	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t ba_eperm;$/;"	m	struct:ofpstat::__anon246
back	drivers/e1000-4.x/src/e1000_hw.h	/^    void *back;$/;"	m	struct:e1000_hw
back	drivers/e1000-5.x/src/e1000_hw.h	/^    void *back;$/;"	m	struct:e1000_hw
back	drivers/e1000-7.x/src/e1000_hw.h	/^    void *back;$/;"	m	struct:e1000_hw
back	elements/standard/classification.hh	/^    Insn &back() {$/;"	f	class:Classification::Wordwise::Program
back	include/click/dequeue.hh	/^  T &back()				{ return at(_n - 1); }$/;"	f	class:DEQueue
back	include/click/dequeue.hh	/^  const T &back() const			{ return at(_n - 1); }$/;"	f	class:DEQueue
back	include/click/list.hh	/^    const_pointer back() const {$/;"	f	class:List
back	include/click/list.hh	/^    pointer back() {$/;"	f	class:List
back	include/click/straccum.hh	/^    char &back() {$/;"	f	class:StringAccum
back	include/click/straccum.hh	/^    char back() const {$/;"	f	class:StringAccum
back	include/click/string.hh	/^    inline char back() const {$/;"	f	class:String
back	include/click/vector.hh	/^    T& back()				{ return operator[](_n - 1); }$/;"	f	class:Vector
back	include/click/vector.hh	/^    T* back() const		{ return (T*)(Base::back()); }$/;"	f	class:Vector
back	include/click/vector.hh	/^    T*& back()			{ return (T*&)(Base::back()); }$/;"	f	class:Vector
back	include/click/vector.hh	/^    const T& back() const		{ return operator[](_n - 1); }$/;"	f	class:Vector
back	include/click/vector.hh	/^    void* back() const			{ return operator[](_n - 1); }$/;"	f	class:Vector
back	include/click/vector.hh	/^    void*& back()			{ return operator[](_n - 1); }$/;"	f	class:Vector
back_component	apps/clicky/src/scopechain.hh	/^    const String &back_component() const {$/;"	f	class:ScopeChain
back_router	apps/clicky/src/scopechain.hh	/^    RouterT *back_router() const {$/;"	f	class:ScopeChain
background_color	apps/clicky/src/dstyle.hh	/^    double background_color[4];$/;"	m	struct:clicky::delt_style
backoff	elements/local/OpenFlow/lib/rconn.cc	/^    int backoff;$/;"	m	struct:rconn	file:
backoff_deadline	elements/local/OpenFlow/lib/rconn.cc	/^    time_t backoff_deadline;$/;"	m	struct:rconn	file:
backpressure	elements/local/FlowNet/common/Flow.hh	/^	double backpressure;	$/;"	m	struct:FlowStat
backpressure_value	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	double backpressure_value;$/;"	m	struct:SchedInfo
backpressure_value_computation_method	elements/local/FlowNet/common/FlowNetGod.hh	/^	int backpressure_value_computation_method;$/;"	m	struct:paramset_flowtable
backtrace	elements/local/OpenFlow/lib/poll-loop.cc	/^    struct backtrace *backtrace; \/* Optionally, event that created waiter. *\/$/;"	m	struct:poll_waiter	typeref:struct:poll_waiter::backtrace	file:
backward_flow	tools/lib/processingt.hh	/^    int backward_flow(const PortT &port, Bitvector *x, ErrorHandler *errh = 0) {$/;"	f	class:ProcessingT
backward_flow	tools/lib/processingt.hh	/^    static int backward_flow(const String &code, int output_port, Bitvector *x, int ninputs, ErrorHandler *errh = 0) {$/;"	f	class:ProcessingT
bad	lib/clp.c	/^    int bad;$/;"	m	struct:Clp_BuildString	file:
bad	tools/click-align/alignment.hh	/^    bool bad() const {$/;"	f	class:Alignment
bad_action	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t bad_action;$/;"	m	struct:ofpstat::__anon245
bad_bar	elements/userlevel/progressbar.cc	/^static const char bad_bar[] =$/;"	v	file:
bad_modulus	tools/click-align/alignment.hh	/^	bad_modulus = -1,$/;"	e	enum:Alignment::__anon541
bad_packet	elements/analysis/aggregateip.cc	/^AggregateIP::bad_packet(Packet *p)$/;"	f	class:AggregateIP
bad_packet	elements/analysis/aggregatelen.cc	/^AggregateLength::bad_packet(Packet *p)$/;"	f	class:AggregateLength
bad_request	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t bad_request;$/;"	m	struct:ofpstat::__anon245
bad_sa	elements/analysis/ipsumdumpinfo.hh	/^    StringAccum* bad_sa;$/;"	m	struct:IPSummaryDump::PacketDesc
bail	conf/make-dsdv-config.pl	/^sub bail($) {$/;"	s
bail	conf/make-dsr-config.pl	/^sub bail($) {$/;"	s
balance	include/click/hashcontainer.hh	/^    inline void balance() {$/;"	f	class:HashContainer
bang_aggregate	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::bang_aggregate(const String &line, ErrorHandler *errh)$/;"	f	class:FromIPSummaryDump
bang_binary	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::bang_binary(const String &line, ErrorHandler *errh)$/;"	f	class:FromIPSummaryDump
bang_data	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::bang_data(const String &line, ErrorHandler *errh)$/;"	f	class:FromIPSummaryDump
bang_flowid	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::bang_flowid(const String &line, ErrorHandler *errh)$/;"	f	class:FromIPSummaryDump
bang_proto	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::bang_proto(const String &line, const char *type,$/;"	f	class:FromIPSummaryDump
bar	elements/userlevel/progressbar.cc	/^static const char bar[] =$/;"	v	file:
bare	lib/lexer.cc	/^    bool bare;$/;"	m	struct:__anon511::ElementState	file:
bare	tools/lib/lexert.cc	/^    bool bare;$/;"	m	struct:__anon534::ElementState	file:
base	elements/grid/gridheaderinfo.hh	/^    char base; \/\/ 'd' or 'h' for decimal or hexadecimal$/;"	m	struct:GridHeaderInfo::info_t
base	elements/local/OpenFlow/lib/ofpbuf.hh	/^    void *base;                 \/* First byte of area malloc()'d area. *\/$/;"	m	struct:ofpbuf
base	include/click/args.hh	/^    int base;$/;"	m	struct:IntArg
base_default_errh	elements/userlevel/chattersocket.cc	/^static ErrorHandler *base_default_errh;$/;"	v	file:
base_read	include/click/args.hh	/^    void base_read(const char *keyword, int flags, P parser, T &variable) {$/;"	f	struct:Args
base_read	include/click/args.hh	/^    void base_read(const char *keyword, int flags, T &variable) {$/;"	f	struct:Args
base_read	include/click/args.hh	/^    void base_read(const char *keyword, int flags,$/;"	f	struct:Args
base_read_all_with	include/click/args.hh	/^    void base_read_all_with(const char *keyword, int flags, P parser) {$/;"	f	struct:Args
base_read_all_with	include/click/args.hh	/^    void base_read_all_with(const char *keyword, int flags, P parser, T &variable) {$/;"	f	struct:Args
base_read_or_set	include/click/args.hh	/^    void base_read_or_set(const char *keyword, int flags, P parser, T &variable, const V &value) {$/;"	f	struct:Args
base_read_or_set	include/click/args.hh	/^    void base_read_or_set(const char *keyword, int flags, T &variable, const V &value) {$/;"	f	struct:Args
base_read_with	include/click/args.hh	/^    void base_read_with(const char *keyword, int flags, P parser) {$/;"	f	struct:Args
base_read_with	include/click/args.hh	/^    void base_read_with(const char *keyword, int flags, P parser, T &variable) {$/;"	f	struct:Args
base_timer	elements/local/OpenFlow/datapath.hh	/^	Timer base_timer;$/;"	m	class:Datapath
base_type	tools/lib/eclasst.cc	/^ElementClassT::base_type(const String &name)$/;"	f	class:ElementClassT
base_type_factory	tools/lib/eclasst.cc	/^static ElementClassT *(*base_type_factory)(const String &) = default_base_type_factory;$/;"	v	file:
base_types	tools/lib/eclasst.cc	/^static Vector<ElementClassT *> base_types;$/;"	v	file:
basic_parse	lib/ip6address.cc	/^IP6AddressArg::basic_parse(const String &str, IP6Address &result, const ArgContext &args)$/;"	f	class:IP6AddressArg
basic_parse	lib/ipaddress.cc	/^IPAddressArg::basic_parse(const char *s, const char *end,$/;"	f	class:IPAddressArg
bcast_t	elements/grid/linktracker.hh	/^  struct bcast_t {$/;"	s	class:LinkTracker
bd_ans_ActivateFastPolling	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_ActivateFastPolling(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_AttributeFill	drivers/e1000-4.x/src/ans.c	/^bd_ans_AttributeFill(iANS_Attribute_ID attr_id, $/;"	f
bd_ans_DeActivateFastPolling	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_DeActivateFastPolling(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_Disconnect	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_Disconnect(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_ExtendedGetCapability	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_ExtendedGetCapability(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_ExtendedGetStatus	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_ExtendedGetStatus(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_ExtendedSetMode	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_ExtendedSetMode(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_ExtendedStopPromiscuousMode	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_ExtendedStopPromiscuousMode(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_ExtractValue	drivers/e1000-4.x/src/ans.c	/^bd_ans_ExtractValue(Per_Frame_Attribute_Header *pTLV)$/;"	f
bd_ans_FillStatus	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_FillStatus(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_GetAllCapabilities	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_GetAllCapabilities(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_GetVlanId	drivers/e1000-4.x/src/ans.c	/^bd_ans_GetVlanId(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_Identify	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_Identify(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_Init	drivers/e1000-4.x/src/ans.c	/^bd_ans_Init(iANSsupport_t *iANSdata)$/;"	f
bd_ans_IsQtagPacket	drivers/e1000-4.x/src/ans.c	/^bd_ans_IsQtagPacket(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_ProcessRequest	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_ProcessRequest(BOARD_PRIVATE_STRUCT *bps, $/;"	f
bd_ans_Receive	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_Receive(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_ResetAllModes	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_ResetAllModes(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_SetReportingMode	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_SetReportingMode(BOARD_PRIVATE_STRUCT *bps, $/;"	f
bd_ans_TagGetCapability	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_TagGetCapability(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_TagSetMode	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_TagSetMode(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_Transmit	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_Transmit(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_VlanGetCapability	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_VlanGetCapability(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_VlanSetMode	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_VlanSetMode(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_VlanSetTable	drivers/e1000-4.x/src/ans.c	/^BD_ANS_STATUS bd_ans_VlanSetTable(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_drv_ConfigureTagging	drivers/e1000-4.x/src/ans_driver.c	/^bd_ans_drv_ConfigureTagging(BOARD_PRIVATE_STRUCT *bps)$/;"	f
bd_ans_drv_ConfigureVlan	drivers/e1000-4.x/src/ans_driver.c	/^bd_ans_drv_ConfigureVlan(BOARD_PRIVATE_STRUCT *bps)$/;"	f
bd_ans_drv_ConfigureVlanTable	drivers/e1000-4.x/src/ans_driver.c	/^bd_ans_drv_ConfigureVlanTable(BOARD_PRIVATE_STRUCT *bps)$/;"	f
bd_ans_drv_InitANS	drivers/e1000-4.x/src/ans_driver.c	/^bd_ans_drv_InitANS(BOARD_PRIVATE_STRUCT *bps, $/;"	f
bd_ans_drv_StartWatchdog	drivers/e1000-4.x/src/ans_driver.c	/^bd_ans_drv_StartWatchdog(BOARD_PRIVATE_STRUCT *bps)$/;"	f
bd_ans_drv_StopPromiscuousMode	drivers/e1000-4.x/src/ans_driver.c	/^bd_ans_drv_StopPromiscuousMode(BOARD_PRIVATE_STRUCT *bps)$/;"	f
bd_ans_drv_StopWatchdog	drivers/e1000-4.x/src/ans_driver.c	/^bd_ans_drv_StopWatchdog(BOARD_PRIVATE_STRUCT *bps)$/;"	f
bd_ans_drv_UpdateStatus	drivers/e1000-4.x/src/ans_driver.c	/^bd_ans_drv_UpdateStatus(BOARD_PRIVATE_STRUCT *bps)$/;"	f
bd_ans_drv_hw_flags	drivers/e1000-4.x/src/ans_driver.c	/^bd_ans_drv_hw_flags(BOARD_PRIVATE_STRUCT *bps)$/;"	f
bd_ans_hw_DisableTagging	drivers/e1000-4.x/src/ans_hw.c	/^bd_ans_hw_DisableTagging(BOARD_PRIVATE_STRUCT *bps)$/;"	f
bd_ans_hw_EnablePriorityRx	drivers/e1000-4.x/src/ans_hw.c	/^bd_ans_hw_EnablePriorityRx(BOARD_PRIVATE_STRUCT *bps)$/;"	f
bd_ans_hw_EnableVLAN	drivers/e1000-4.x/src/ans_hw.c	/^bd_ans_hw_EnableVLAN(BOARD_PRIVATE_STRUCT *bps)$/;"	f
bd_ans_hw_GetVlanId	drivers/e1000-4.x/src/ans_hw.c	/^bd_ans_hw_GetVlanId(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_hw_InsertQtagHW	drivers/e1000-4.x/src/ans_hw.c	/^bd_ans_hw_InsertQtagHW(BOARD_PRIVATE_STRUCT *bps, HW_TX_DESCRIPTOR *txd, u16$/;"	f
bd_ans_hw_IsQtagPacket	drivers/e1000-4.x/src/ans_hw.c	/^bd_ans_hw_IsQtagPacket(BOARD_PRIVATE_STRUCT *bps, HW_RX_DESCRIPTOR *rxd)$/;"	f
bd_ans_hw_available_speeds	drivers/e1000-4.x/src/ans_hw.c	/^bd_ans_hw_available_speeds(u32 phy)$/;"	f
bd_ans_os_ActivateFastPolling	drivers/e1000-4.x/src/ans_os.c	/^BD_ANS_STATUS bd_ans_os_ActivateFastPolling(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_os_AllocateTLV	drivers/e1000-4.x/src/ans_os.c	/^bd_ans_os_AllocateTLV(struct sk_buff *frame, struct sk_buff **tlv)$/;"	f
bd_ans_os_AttributeFill	drivers/e1000-4.x/src/ans_os.c	/^bd_ans_os_AttributeFill(iANS_Attribute_ID attr_id, $/;"	f
bd_ans_os_ExtendedGetCapability	drivers/e1000-4.x/src/ans_os.c	/^BD_ANS_STATUS bd_ans_os_ExtendedGetCapability(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_os_ExtendedSetMode	drivers/e1000-4.x/src/ans_os.c	/^BD_ANS_STATUS bd_ans_os_ExtendedSetMode(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_os_GetAllCapabilities	drivers/e1000-4.x/src/ans_os.c	/^BD_ANS_STATUS bd_ans_os_GetAllCapabilities(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_os_InsertQtagSW	drivers/e1000-4.x/src/ans_os.c	/^bd_ans_os_InsertQtagSW(BOARD_PRIVATE_STRUCT *bps, struct sk_buff **skb, UINT16 *vlan_id)$/;"	f
bd_ans_os_Ioctl	drivers/e1000-4.x/src/ans_os.c	/^bd_ans_os_Ioctl(device_t *dev, struct ifreq *ifr, int cmd)$/;"	f
bd_ans_os_ProcessRequest	drivers/e1000-4.x/src/ans_os.c	/^BD_ANS_STATUS bd_ans_os_ProcessRequest(BOARD_PRIVATE_STRUCT *bps, $/;"	f
bd_ans_os_Receive	drivers/e1000-4.x/src/ans_os.c	/^bd_ans_os_Receive(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_os_ReserveSpaceForANS	drivers/e1000-4.x/src/ans_os.c	/^bd_ans_os_ReserveSpaceForANS(struct sk_buff *skb)$/;"	f
bd_ans_os_SetCallback	drivers/e1000-4.x/src/ans_os.c	/^BD_ANS_STATUS bd_ans_os_SetCallback(BOARD_PRIVATE_STRUCT *bps,$/;"	f
bd_ans_os_StripQtagSW	drivers/e1000-4.x/src/ans_os.c	/^bd_ans_os_StripQtagSW(struct sk_buff *skb)$/;"	f
bd_ans_os_Transmit	drivers/e1000-4.x/src/ans_os.c	/^bd_ans_os_Transmit( BOARD_PRIVATE_STRUCT *bps, $/;"	f
bd_ans_os_Watchdog	drivers/e1000-4.x/src/ans_os.c	/^bd_ans_os_Watchdog(device_t *dev, BOARD_PRIVATE_STRUCT *bps)$/;"	f
bd_flags	drivers/e1000-4.x/src/ans.h	/^	u32 bd_flags;$/;"	m	union:_iANSsupport_t::__anon38
bd_number	drivers/e1000-4.x/src/e1000.h	/^	uint32_t bd_number;$/;"	m	struct:e1000_adapter
bd_number	drivers/e1000-5.x/src/e1000.h	/^	uint32_t bd_number;$/;"	m	struct:e1000_adapter
bd_number	drivers/e1000-7.x/src/e1000.h	/^	uint32_t bd_number;$/;"	m	struct:e1000_adapter
beacon_t	elements/wifi/station/beacontracker.hh	/^  struct beacon_t {$/;"	s	class:BeaconTracker
beetlemonkey	userlevel/elements.cc	/^beetlemonkey(uintptr_t heywood)$/;"	f	file:
before	elements/grid/linktester.hh	/^    unsigned short before;$/;"	m	struct:LinkTester::payload_t
before_pkt	elements/analysis/toipflowdumps.hh	/^	int before_pkt;$/;"	m	struct:ToIPFlowDumps::Note
begin	apps/clicky/src/gathererror.hh	/^    const_iterator begin() const	{ return _v.begin(); }$/;"	f	class:GatherErrorHandler
begin	apps/clicky/src/gathererror.hh	/^    iterator begin()			{ return _v.begin(); }$/;"	f	class:GatherErrorHandler
begin	apps/clicky/src/hvalues.cc	/^handler_values::iterator handler_values::begin(const String &ename)$/;"	f	class:clicky::handler_values
begin	apps/clicky/src/permstr.hh	/^inline const char *PermString::begin() const$/;"	f	class:PermString
begin	elements/standard/classification.hh	/^    const Insn *begin() const {$/;"	f	class:Classification::Wordwise::Program
begin	elements/standard/classification.hh	/^    const uint32_t *begin() const {$/;"	f	class:Classification::Wordwise::CompressedProgram
begin	include/click/dequeue.hh	/^    const_iterator begin() const	{ return const_iterator((DEQueue<T> &) *this, 0); }$/;"	f	class:DEQueue
begin	include/click/dequeue.hh	/^    iterator begin()			{ return iterator(*this, 0); }$/;"	f	class:DEQueue
begin	include/click/hashcontainer.hh	/^HashContainer<T, A>::begin() const$/;"	f	class:HashContainer
begin	include/click/hashcontainer.hh	/^HashContainer<T, A>::begin()$/;"	f	class:HashContainer
begin	include/click/hashcontainer.hh	/^HashContainer<T, A>::begin(size_type b) const$/;"	f	class:HashContainer
begin	include/click/hashcontainer.hh	/^HashContainer<T, A>::begin(size_type b)$/;"	f	class:HashContainer
begin	include/click/hashmap.hh	/^HashMap<K, T *>::begin() const$/;"	f	class:HashMap
begin	include/click/hashmap.hh	/^HashMap<K, T *>::begin()$/;"	f	class:HashMap
begin	include/click/hashmap.hh	/^HashMap<K, V>::begin() const$/;"	f	class:HashMap
begin	include/click/hashmap.hh	/^HashMap<K, V>::begin()$/;"	f	class:HashMap
begin	include/click/hashmap.hh	/^HashMap<K, void *>::begin() const$/;"	f	class:HashMap
begin	include/click/hashmap.hh	/^HashMap<K, void *>::begin()$/;"	f	class:HashMap
begin	include/click/hashtable.hh	/^    inline const_iterator begin() const {$/;"	f	class:HashTable
begin	include/click/hashtable.hh	/^    inline iterator begin() {$/;"	f	class:HashTable
begin	include/click/hashtable.hh	/^inline typename HashTable<T>::const_iterator HashTable<T>::begin() const$/;"	f	class:HashTable
begin	include/click/hashtable.hh	/^inline typename HashTable<T>::iterator HashTable<T>::begin()$/;"	f	class:HashTable
begin	include/click/list.hh	/^    const_iterator begin() const {$/;"	f	class:List
begin	include/click/list.hh	/^    iterator begin() {$/;"	f	class:List
begin	include/click/routervisitor.hh	/^    const_iterator begin() const {$/;"	f	class:ElementTracker
begin	include/click/straccum.hh	/^    inline const_iterator begin() const {$/;"	f	class:StringAccum
begin	include/click/straccum.hh	/^    inline iterator begin() {$/;"	f	class:StringAccum
begin	include/click/string.hh	/^    inline const_iterator begin() const {$/;"	f	class:String
begin	include/click/vector.hh	/^    const_iterator begin() const	{ return _l; }$/;"	f	class:Vector
begin	include/click/vector.hh	/^    const_iterator begin() const { return (const_iterator)(Base::begin()); }$/;"	f	class:Vector
begin	include/click/vector.hh	/^    iterator begin()			{ return _l; }$/;"	f	class:Vector
begin	include/click/vector.hh	/^    iterator begin()		{ return (iterator)(Base::begin()); }$/;"	f	class:Vector
begin_connections	tools/lib/routert.hh	/^RouterT::begin_connections() const$/;"	f	class:RouterT
begin_contents	apps/clicky/src/dwidget.hh	/^    iterator begin_contents() const {$/;"	f	class:clicky::delt
begin_elements	tools/lib/elementmap.hh	/^ElementMap::begin_elements() const$/;"	f	class:ElementMap
begin_elements	tools/lib/routert.hh	/^RouterT::begin_elements() const$/;"	f	class:RouterT
begin_elements	tools/lib/routert.hh	/^RouterT::begin_elements()$/;"	f	class:RouterT
begin_elements	tools/lib/routert.hh	/^RouterT::begin_elements(ElementClassT *t) const$/;"	f	class:RouterT
begin_elements	tools/lib/routert.hh	/^RouterT::begin_elements(ElementClassT *t)$/;"	f	class:RouterT
begin_offset	apps/clicky/src/gathererror.hh	/^    int begin_offset() const		{ return 0; }$/;"	f	class:GatherErrorHandler
begin_parse	lib/lexer.cc	/^Lexer::begin_parse(const String &data, const String &filename,$/;"	f	class:Lexer
behind_sec	include/click/timer.hh	/^    enum { behind_sec = 1 };$/;"	e	enum:Timer::__anon458
below	apps/clicky/src/dstyle.hh	/^    dcss_set *below() const {$/;"	f	class:clicky::dcss_set
benchmark_changes	elements/test/timertest.cc	/^TimerTest::benchmark_changes(Timer *ts, int nts, const Timestamp &now)$/;"	f	class:TimerTest
benchmark_fires	elements/test/timertest.cc	/^TimerTest::benchmark_fires(Timer *ts, int, const Timestamp &)$/;"	f	class:TimerTest
benchmark_schedules	elements/test/timertest.cc	/^TimerTest::benchmark_schedules(Timer *ts, int nts, const Timestamp &now)$/;"	f	class:TimerTest
berasesz	drivers/e1000-7.x/src/e1000_hw.h	/^        uint16_t berasesz       :2;$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts
best_effort_expiry	elements/ip/iprewriterbase.hh	/^    virtual click_jiffies_t best_effort_expiry(const IPRewriterFlow *flow) {$/;"	f	class:IPRewriterBase
best_effort_expiry	elements/tcpudp/iprewriter.hh	/^    click_jiffies_t best_effort_expiry(const IPRewriterFlow *flow) {$/;"	f	class:IPRewriter
best_effort_expiry	elements/tcpudp/tcprewriter.hh	/^    click_jiffies_t best_effort_expiry(const IPRewriterFlow *flow) {$/;"	f	class:TCPRewriter
best_metric	elements/grid/dsrroutetable.hh	/^    unsigned short best_metric; \/\/ best metric we've forwarded so far$/;"	m	class:DSRRouteTable::ForwardedReqVal
best_rate_ndx	elements/wifi/probetxrate.hh	/^    int best_rate_ndx() {$/;"	f	struct:ProbeTXRate::DstInfo
best_route	elements/wifi/linktable.cc	/^LinkTable::best_route(IPAddress dst, bool from_me)$/;"	f	class:LinkTable
bigint	include/click/bigint.hh	/^typedef Bigint<uint32_t> bigint;$/;"	t
binary_size	elements/analysis/ipsumdumpinfo.hh	/^    inline int binary_size() const {$/;"	f	struct:IPSummaryDump::FieldReader
binary_size	elements/analysis/ipsumdumpinfo.hh	/^    inline int binary_size() const {$/;"	f	struct:IPSummaryDump::FieldWriter
binary_size	elements/analysis/ipsumdumpinfo.hh	/^    static int binary_size(int type) {$/;"	f	struct:IPSummaryDump::FieldWriter
binary_tag	apps/clicky/src/wmain.hh	/^    GtkTextTag *binary_tag() const {$/;"	f	class:clicky::wmain
binary_tag_table	apps/clicky/src/wmain.hh	/^    GtkTextTagTable *binary_tag_table() const {$/;"	f	class:clicky::wmain
binary_to_utf8	apps/clicky/src/whandler.cc	/^bool binary_to_utf8(const String &data, StringAccum &text, Vector<int> &positions)$/;"	f	namespace:clicky
bind	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterNoSchedule.cc	/^int VcScheduleOuterNoSchedule::bind( VcSchedule* )$/;"	f	class:VcScheduleOuterNoSchedule
bind	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterVirtualpressure.cc	/^int VcScheduleOuterVirtualpressure::bind( VcSchedule* )$/;"	f	class:VcScheduleOuterVirtualpressure
bind	lib/args.cc	/^Args::bind(Vector<String> &conf)$/;"	f	class:Args
bind_path	elements/local/OpenFlow/lib/vlog-socket.cc	/^    char *bind_path;$/;"	m	struct:vlog_client	file:
bindir	Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	bsdmodule/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	doc/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	etc/libclick/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	linuxmodule/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	ns/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	tools/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	tools/click-align/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	tools/click-check/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	tools/click-combine/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	tools/click-devirtualize/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	tools/click-fastclassifier/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	tools/click-flatten/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	tools/click-mkmindriver/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	tools/click-pretty/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	tools/click-undead/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	tools/click-xform/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	tools/click2xml/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	tools/lib/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindir	userlevel/Makefile	/^bindir = \/usr\/local\/bin$/;"	m
bindtextdomain	apps/clicky/src/support.h	29;"	d
bit_flip_array	elements/standard/randomerror.cc	/^static unsigned char bit_flip_array[] = {$/;"	v	file:
bit_flip_array_idx	elements/standard/randomerror.cc	/^static int bit_flip_array_idx[] = {$/;"	v	file:
bit_length	elements/ip/ipfieldinfo.hh	/^IPField::bit_length() const$/;"	f	class:IPField
bit_offset	elements/ip/ipfieldinfo.hh	/^IPField::bit_offset() const$/;"	f	class:IPField
bitctl	include/clicknet/wifi.h	/^		uint8_t 	bitctl;$/;"	m	struct:wifi_information::tim
bitmap	elements/ipsec/sadatatuple.hh	/^    uint32_t bitmap;	\/* Support out-of-order receive support *\/$/;"	m	class:SADataTuple
blacklist_timer_hook	elements/grid/dsrroutetable.cc	/^DSRRouteTable::blacklist_timer_hook()$/;"	f	class:DSRRouteTable
blank_args	lib/args.cc	/^const ArgContext blank_args;$/;"	v
blank_handler	include/click/handler.hh	/^    static inline const Handler *blank_handler() {$/;"	f	class:Handler
blink_timer	drivers/e1000-4.x/src/e1000.h	/^	struct timer_list blink_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
blink_timer	drivers/e1000-5.x/src/e1000.h	/^	struct timer_list blink_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
blink_timer	drivers/e1000-7.x/src/e1000.h	/^	struct timer_list blink_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
block_all	lib/master.cc	/^Master::block_all()$/;"	f	class:Master
block_level	elements/local/OpenFlow/lib/fatal-signal.cc	/^static int block_level = 0;$/;"	v	file:
block_sigalrm	elements/local/OpenFlow/lib/timeval.cc	/^block_sigalrm(sigset_t *oldsigs)$/;"	f	file:
block_tasks	include/click/routerthread.hh	/^RouterThread::block_tasks(bool scheduled)$/;"	f	class:RouterThread
body	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    uint8_t body[0];            \/* Body of ofp_queue objects for op. *\/$/;"	m	struct:openflow_queue_command_header
body	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t body[0];            \/* Body of the reply. *\/$/;"	m	struct:ofp_stats_reply
body	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t body[0];            \/* Body of the request. *\/$/;"	m	struct:ofp_stats_request
body	tools/click-devirtualize/cxxclass.hh	/^  const String &body() const		{ return _body; }$/;"	f	class:CxxFunction
bold_attr	apps/clicky/src/wmain.hh	/^    PangoAttrList *bold_attr() const {$/;"	f	class:clicky::wmain
bool_data	include/click/string.hh	/^    static const char bool_data[11];$/;"	m	class:String
bool_data	lib/string.cc	/^const char String::bool_data[] = "true\\0false";$/;"	m	class:String	file:
bool_data_handler	lib/element.cc	/^bool_data_handler(int op, String &str, Element *element, const Handler *h, ErrorHandler *errh)$/;"	f	file:
boolean_t	drivers/e1000-4.x/src/e1000_osdep.h	/^} boolean_t;$/;"	t	typeref:enum:__anon35
boolean_t	drivers/e1000-5.x/src/e1000_osdep.h	/^} boolean_t;$/;"	t	typeref:enum:__anon126
boolean_t	drivers/e1000-7.x/src/e1000_osdep.h	/^} boolean_t;$/;"	t	typeref:enum:__anon70
boot_time	elements/local/OpenFlow/lib/vlog.cc	/^static long long int boot_time;$/;"	v	file:
bootstrap_ca_cert	elements/local/OpenFlow/lib/vconn-ssl.cc	/^static bool bootstrap_ca_cert;$/;"	v	file:
border_color	apps/clicky/src/dstyle.hh	/^    double border_color[4];$/;"	m	struct:clicky::delt_style
border_color	apps/clicky/src/dstyle.hh	/^    double border_color[4];$/;"	m	struct:clicky::dport_style
border_style	apps/clicky/src/dstyle.hh	/^    int border_style;$/;"	m	struct:clicky::delt_style
border_style	apps/clicky/src/dstyle.hh	/^    int border_style;$/;"	m	struct:clicky::dport_style
border_width	apps/clicky/src/dstyle.hh	/^    double border_width;$/;"	m	struct:clicky::delt_size_style
border_width	apps/clicky/src/dstyle.hh	/^    double border_width;$/;"	m	struct:clicky::dport_style
both_data	elements/ip/iprwmapping.hh	/^    bool both_data() const {$/;"	f	class:IPRewriterFlow
both_done	elements/ip/iprwmapping.hh	/^    bool both_done() const {$/;"	f	class:IPRewriterFlow
bpadapt_header	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^struct bpadapt_header {$/;"	s
bpdu_type	elements/local/OpenFlow/lib/stp.cc	/^    uint8_t bpdu_type;          \/* One of STP_TYPE_*. *\/$/;"	m	struct:stp_bpdu_header	file:
bprc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t bprc;$/;"	m	struct:e1000_hw_stats
bprc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t bprc;$/;"	m	struct:e1000_hw_stats
bprc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t bprc;$/;"	m	struct:e1000_hw_stats
bptc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t bptc;$/;"	m	struct:e1000_hw_stats
bptc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t bptc;$/;"	m	struct:e1000_hw_stats
bptc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t bptc;$/;"	m	struct:e1000_hw_stats
br_bad_stat	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t br_bad_stat;$/;"	m	struct:ofpstat::__anon246
br_bad_type	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t br_bad_type;$/;"	m	struct:ofpstat::__anon246
br_bad_vendor	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t br_bad_vendor;$/;"	m	struct:ofpstat::__anon246
br_bad_version	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t br_bad_version;$/;"	m	struct:ofpstat::__anon246
br_eperm	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t br_eperm;$/;"	m	struct:ofpstat::__anon246
br_implies	elements/standard/classification.hh	/^    bool br_implies(int brno, int state) const {$/;"	f	class:Classification::Wordwise::DominatorOptimizer
br_implies_not	elements/standard/classification.hh	/^    bool br_implies_not(int brno, int state) const {$/;"	f	class:Classification::Wordwise::DominatorOptimizer
br_yes	elements/standard/classification.hh	/^    static bool br_yes(int brno)		{ return brno & 1; }$/;"	f	class:Classification::Wordwise::DominatorOptimizer
braces_to_regex	test/testie	/^sub braces_to_regex ($$) {$/;"	s
bridge_forward_delay	elements/local/OpenFlow/lib/stp.cc	/^    int bridge_forward_delay;       \/* 8.5.3.10: forward_delay as root. *\/$/;"	m	struct:stp	file:
bridge_hello_time	elements/local/OpenFlow/lib/stp.cc	/^    int bridge_hello_time;          \/* 8.5.3.9: hello_time as root. *\/$/;"	m	struct:stp	file:
bridge_id	elements/local/OpenFlow/lib/stp.cc	/^    stp_identifier bridge_id;       \/* 8.5.3.7: This bridge. *\/$/;"	m	struct:stp	file:
bridge_id	elements/local/OpenFlow/lib/stp.cc	/^    uint64_t bridge_id;            \/* 8.5.1.3: ID of transmitting bridge. *\/$/;"	m	struct:stp_config_bpdu	file:
bridge_max_age	elements/local/OpenFlow/lib/stp.cc	/^    int bridge_max_age;             \/* 8.5.3.8: max_age when we're root. *\/$/;"	m	struct:stp	file:
brno	elements/standard/classification.hh	/^    static int brno(int state, bool br)		{ return (state << 1) + br; }$/;"	f	class:Classification::Wordwise::DominatorOptimizer
broadcast	elements/etherswitch/etherswitch.cc	/^EtherSwitch::broadcast(int source, Packet *p)$/;"	f	class:EtherSwitch
broadcast	include/click/etheraddress.hh	/^inline EtherAddress EtherAddress::broadcast() {$/;"	f	class:EtherAddress
broken	elements/grid/dsdvroutetable.hh	/^    bool broken() const { check(); return num_hops() == 0; }$/;"	f	class:DSDVRouteTable::RTEntry
broken	elements/grid/gridgenericrt.hh	/^    bool                 broken()   const { return !good(); }$/;"	f	struct:GridGenericRouteTable::RouteEntry
bubble_sort_and_exprs	elements/standard/classification.cc	/^Program::bubble_sort_and_exprs(unsigned sort_stopper)$/;"	f	class:Classification::Wordwise::Program
bucket	include/click/hashcontainer.hh	/^    size_type bucket() const {$/;"	f	class:HashContainer_const_iterator
bucket	include/click/hashcontainer.hh	/^HashContainer<T, A>::bucket(const key_type &key) const$/;"	f	class:HashContainer
bucket	include/click/hashmap.cc	/^HashMap<K, V>::bucket(const K &key) const$/;"	f	class:HashMap
bucket	include/click/hashmap.cc	/^HashMap<K, void *>::bucket(const K &key) const$/;"	f	class:HashMap
bucket	linuxmodule/skbmgr.cc	/^RecycledSkbPool::bucket(int i)$/;"	f	class:RecycledSkbPool
bucket_count	include/click/hashcontainer.hh	/^    inline size_type bucket_count() const {$/;"	f	class:HashContainer
bucket_count	include/click/hashtable.hh	/^    inline size_type bucket_count() const {$/;"	f	class:HashTable
bucket_mask	elements/local/OpenFlow/lib/table-hash.cc	/^	unsigned int bucket_mask; \/* Number of buckets minus 1. *\/$/;"	m	struct:sw_table_hash	file:
bucket_size	include/click/hashcontainer.hh	/^    inline size_type bucket_size(size_type n) const {$/;"	f	class:HashContainer
bucket_size	include/click/hashtable.hh	/^    inline size_type bucket_size(size_type n) const {$/;"	f	class:HashTable
bucketno	elements/ip/ipreassembler.hh	/^IPReassembler::bucketno(const click_ip *h)$/;"	f	class:IPReassembler
buckets	apps/clicky/src/permstr.cc	/^PermString::Doodad* PermString::buckets[NHASH];$/;"	m	class:PermString	file:
buckets	apps/clicky/src/permstr.hh	/^    static Doodad zero_char_doodad, one_char_doodad[256], *buckets[NHASH];$/;"	m	class:PermString
buckets	elements/local/OpenFlow/lib/table-hash.cc	/^	struct sw_flow **buckets;$/;"	m	struct:sw_table_hash	typeref:struct:sw_table_hash::sw_flow	file:
buckets	include/click/hashcontainer.hh	/^    T **buckets;$/;"	m	class:HashContainer_rep
buf	include/click/md5.h	/^    md5_byte_t buf[64];		\/* accumulate block *\/$/;"	m	struct:md5_state_s
buf_len	elements/wifi/athdesc.h	/^	u_int32_t	buf_len:12;$/;"	m	struct:ar5212_desc
buffer	elements/local/OpenFlow/datapath.cc	/^	struct ofpbuf *buffer;$/;"	m	struct:flow_stats_state	typeref:struct:flow_stats_state::ofpbuf	file:
buffer	elements/local/OpenFlow/datapath.hh	/^	struct ofpbuf *buffer;$/;"	m	struct:dp_packet_buffer	typeref:struct:dp_packet_buffer::ofpbuf
buffer	include/click/hashallocator.hh	/^    struct buffer {$/;"	s	class:HashAllocator
buffer	include/click/packet.hh	/^Packet::buffer() const$/;"	f	class:Packet
buffer	include/click/packet.hh	/^WritablePacket::buffer() const$/;"	f	class:WritablePacket
buffer	linuxmodule/modulepriv.hh	/^    char *buffer;$/;"	m	struct:click_handler_direct_info
buffer_addr	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t buffer_addr;       \/* Address of the descriptor's buffer address *\/$/;"	m	struct:e1000_data_desc
buffer_addr	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t buffer_addr;       \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_tx_desc
buffer_addr	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t buffer_addr; \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_rx_desc
buffer_addr	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t buffer_addr;       \/* Address of the descriptor's buffer address *\/$/;"	m	struct:e1000_data_desc
buffer_addr	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t buffer_addr;       \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_tx_desc
buffer_addr	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t buffer_addr; \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_rx_desc
buffer_addr	drivers/e1000-7.x/src/e1000_hw.h	/^        uint64_t buffer_addr;$/;"	m	struct:e1000_rx_desc_extended::__anon93
buffer_addr	drivers/e1000-7.x/src/e1000_hw.h	/^        uint64_t buffer_addr[MAX_PS_BUFFERS];$/;"	m	struct:e1000_rx_desc_packet_split::__anon99
buffer_addr	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t buffer_addr;       \/* Address of the descriptor's buffer address *\/$/;"	m	struct:e1000_data_desc
buffer_addr	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t buffer_addr;       \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_tx_desc
buffer_addr	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t buffer_addr; \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_rx_desc
buffer_control_packet	elements/local/OpenFlow/RConn.cc	/^void RConn::buffer_control_packet( int ofpe_type UNUSED, const void *msg, int length, struct rconn_remote *sender, uint32_t xid )$/;"	f	class:RConn
buffer_data	include/click/packet.hh	/^Packet::buffer_data() const$/;"	f	class:Packet
buffer_data	include/click/packet.hh	/^WritablePacket::buffer_data() const$/;"	f	class:WritablePacket
buffer_id	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t buffer_id;           \/* Buffered packet to apply to (or -1).$/;"	m	struct:ofp_flow_mod
buffer_id	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t buffer_id;           \/* ID assigned by datapath (-1 if none). *\/$/;"	m	struct:ofp_packet_out
buffer_id	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t buffer_id;     \/* ID assigned by datapath. *\/$/;"	m	struct:ofp_packet_in
buffer_info	drivers/e1000-4.x/src/e1000.h	/^	struct e1000_buffer *buffer_info;$/;"	m	struct:e1000_desc_ring	typeref:struct:e1000_desc_ring::e1000_buffer
buffer_info	drivers/e1000-5.x/src/e1000.h	/^	struct e1000_buffer *buffer_info;$/;"	m	struct:e1000_desc_ring	typeref:struct:e1000_desc_ring::e1000_buffer
buffer_info	drivers/e1000-7.x/src/e1000.h	/^	struct e1000_buffer *buffer_info;$/;"	m	struct:e1000_rx_ring	typeref:struct:e1000_rx_ring::e1000_buffer
buffer_info	drivers/e1000-7.x/src/e1000.h	/^	struct e1000_buffer *buffer_info;$/;"	m	struct:e1000_tx_ring	typeref:struct:e1000_tx_ring::e1000_buffer
buffer_length	include/click/packet.hh	/^Packet::buffer_length() const$/;"	f	class:Packet
buffer_packet	elements/grid/dsrroutetable.cc	/^DSRRouteTable::buffer_packet(Packet *p)$/;"	f	class:DSRRouteTable
buffer_size	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int buffer_size;$/;"	m	class:FlowMpeg2AdaptDecap
buffer_store	linuxmodule/module.cc	/^KernelErrorHandler::buffer_store(uint32_t head, const char *begin, const char *end)$/;"	f	class:KernelErrorHandler
bufsz	elements/grid/gridlogger.hh	/^  size_t bufsz() { return _bufptr; }$/;"	f	class:GridLogger
build_and_tx_ad	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::build_and_tx_ad(Vector<RTEntry> &rtes_to_send)$/;"	f	class:DSDVRouteTable
build_ccompile	tools/lib/Makefile	/^build_ccompile = $(BUILD_COMPILE) $(1)$/;"	m
build_ccompile	tools/lib/Makefile	/^build_ccompile = @\/bin\/echo ' ' $(2) $< && $(BUILD_COMPILE) $(1)$/;"	m
build_cxxcompile	tools/lib/Makefile	/^build_cxxcompile = $(BUILD_CXXCOMPILE) $(1)$/;"	m
build_cxxcompile	tools/lib/Makefile	/^build_cxxcompile = @\/bin\/echo ' ' $(2) $< && $(BUILD_CXXCOMPILE) $(1)$/;"	m
build_region	elements/grid/regionpep.cc	/^EstimateRouterRegion::build_region()$/;"	f	class:EstimateRouterRegion
builddir	etc/pkg-linuxmodule-26.mk	/^builddir := $(obj)$/;"	m
bulk_latency	drivers/e1000-7.x/src/e1000_main.c	/^	bulk_latency = 2,$/;"	e	enum:latency_range	file:
burst	elements/local/OpenFlow/lib/vlog.hh	/^    unsigned int burst;         \/* Max cumulative tokens credit. *\/$/;"	m	struct:vlog_rate_limit
bus_info	drivers/e1000-5.x/src/kcompat.h	/^	char	 bus_info[32];$/;"	m	struct:k_ethtool_drvinfo
bus_info	drivers/e1000-7.x/src/kcompat.h	/^	char	 bus_info[32];$/;"	m	struct:k_ethtool_drvinfo
bus_speed	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_bus_speed bus_speed;$/;"	m	struct:e1000_hw
bus_speed	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_speed bus_speed;$/;"	m	struct:e1000_hw
bus_speed	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_speed bus_speed;$/;"	m	struct:e1000_hw
bus_type	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_bus_type bus_type;$/;"	m	struct:e1000_hw
bus_type	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_type bus_type;$/;"	m	struct:e1000_hw
bus_type	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_type bus_type;$/;"	m	struct:e1000_hw
bus_width	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_bus_width bus_width;$/;"	m	struct:e1000_hw
bus_width	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_width bus_width;$/;"	m	struct:e1000_hw
bus_width	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_width bus_width;$/;"	m	struct:e1000_hw
busy	include/click/notifier.hh	/^NotifierSignal::busy() const$/;"	f	class:NotifierSignal
busy_signal	include/click/notifier.hh	/^NotifierSignal::busy_signal()$/;"	f	class:NotifierSignal
bwshape_status	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^	uint32_t bwshape_status;$/;"	m	class:FlowBWShaperable
byte_bandwidth_prefixes	lib/args.cc	/^static const char byte_bandwidth_prefixes[] = "\\$/;"	v	file:
byte_bandwidth_units	lib/args.cc	/^static const char byte_bandwidth_units[] = "\\$/;"	v	file:
byte_count	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint64_t byte_count;$/;"	m	struct:nx_flow_end
byte_count	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t byte_count;      \/* Number of bytes in flow. *\/$/;"	m	struct:ofp_flow_stats
byte_count	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t byte_count;      \/* Number of bytes in flows. *\/$/;"	m	struct:ofp_aggregate_stats_reply
byte_count	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t byte_count;$/;"	m	struct:ofp_flow_removed
byte_count	elements/local/OpenFlow/lib/switch-flow.hh	/^    uint64_t byte_count;        \/* Number of bytes seen. *\/$/;"	m	struct:sw_flow
byte_count	elements/standard/averagecounter.hh	/^    uint32_t byte_count() const			{ return _byte_count; }$/;"	f	class:AverageCounter
byte_length	elements/ip/ipfieldinfo.hh	/^IPField::byte_length() const$/;"	f	class:IPField
byte_offset	elements/ip/ipfieldinfo.hh	/^IPField::byte_offset() const$/;"	f	class:IPField
byte_rate_t	elements/standard/counter.hh	/^    typedef RateEWMAX<RateEWMAXParameters<4, 4, uint64_t, int64_t> > byte_rate_t;$/;"	t	class:Counter
byte_rate_t	elements/standard/counter.hh	/^    typedef RateEWMAX<RateEWMAXParameters<4, 4> > byte_rate_t;$/;"	t	class:Counter
bytes	elements/grid/packetlogger.hh	/^    uint8_t bytes[NBYTES];$/;"	m	struct:PacketLogger::log_entry
bytes	elements/grid/packetlogger2.hh	/^    uint8_t bytes[NBYTES];$/;"	m	struct:PacketLogger2::log_entry
bytes_received	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int	bytes_received;$/;"	m	struct:FlowMpeg2AdaptDecapStat
c	elements/ip/ipfilter.hh	/^	unsigned char c[8];$/;"	m	union:IPFilter::PrimitiveData
c	elements/standard/classification.hh	/^	unsigned char c[4];$/;"	m	union:Classification::Wordwise::Insn::__anon180
c	elements/standard/classification.hh	/^	unsigned char c[4];$/;"	m	union:Classification::Wordwise::Insn::__anon181
c	include/click/packet.hh	/^	char c[anno_size];$/;"	m	union:Packet::Anno
c	lib/clp.c	/^    int c;$/;"	m	struct:__anon501	file:
c	tools/click-fastclassifier/click-fastclassifier.hh	/^	unsigned char c[4];$/;"	m	union:Classifier_Insn::__anon544
c	tools/click-fastclassifier/click-fastclassifier.hh	/^	unsigned char c[4];$/;"	m	union:Classifier_Insn::__anon545
c	tools/lib/routert.hh	/^	ConnectionX c[1];$/;"	m	struct:RouterT::ConnectionSet
c2l	elements/ipsec/des.cc	127;"	d	file:
c2l	elements/ipsec/sha1_impl.cc	113;"	d	file:
c2l	elements/ipsec/sha1_impl.cc	114;"	d	file:
c2l_p	elements/ipsec/sha1_impl.cc	129;"	d	file:
c2l_p	elements/ipsec/sha1_impl.cc	131;"	d	file:
c2nl	elements/ipsec/sha1_impl.cc	67;"	d	file:
c2nl	elements/ipsec/sha1_impl.cc	68;"	d	file:
c2nl_p	elements/ipsec/sha1_impl.cc	83;"	d	file:
c2nl_p	elements/ipsec/sha1_impl.cc	85;"	d	file:
c_and	elements/standard/classification.hh	/^    c_and,$/;"	e	enum:Classification::Combiner
c_element	apps/clicky/src/wdiagram.hh	/^    enum { c_element = 0, c_main = 9, c_hand = 10, ncursors = 11 };$/;"	e	enum:clicky::wdiagram::__anon2
c_hand	apps/clicky/src/wdiagram.hh	/^    enum { c_element = 0, c_main = 9, c_hand = 10, ncursors = 11 };$/;"	e	enum:clicky::wdiagram::__anon2
c_main	apps/clicky/src/wdiagram.hh	/^    enum { c_element = 0, c_main = 9, c_hand = 10, ncursors = 11 };$/;"	e	enum:clicky::wdiagram::__anon2
c_or	elements/standard/classification.hh	/^    c_or,$/;"	e	enum:Classification::Combiner
c_str	apps/clicky/src/permstr.hh	/^    inline const char *c_str() const {$/;"	f	class:PermString
c_str	include/click/confparse.hh	/^	const char *c_str;$/;"	m	union:cp_value::__anon478
c_str	include/click/string.hh	/^    inline const char *c_str() const {$/;"	f	class:String
c_str	lib/straccum.cc	/^StringAccum::c_str()$/;"	f	class:StringAccum
c_ternary	elements/standard/classification.hh	/^    c_ternary$/;"	e	enum:Classification::Combiner
ca_cert_file	elements/local/OpenFlow/lib/vconn-ssl.cc	/^static char *ca_cert_file;$/;"	v	file:
cable_length	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_cable_length cable_length;$/;"	m	struct:e1000_phy_info
cable_length	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_cable_length cable_length;$/;"	m	struct:e1000_phy_info
cable_length	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_cable_length cable_length;$/;"	m	struct:e1000_phy_info
cable_polarity	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_rev_polarity cable_polarity;$/;"	m	struct:e1000_phy_info
cable_polarity	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_rev_polarity cable_polarity;$/;"	m	struct:e1000_phy_info
cable_polarity	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_rev_polarity cable_polarity;$/;"	m	struct:e1000_phy_info
cache_entry	elements/ip/lookupiproutemp.hh	/^  struct cache_entry {$/;"	s	class:LookupIPRouteMP
cairo	apps/clicky/src/dwidget.hh	/^    cairo_t *cairo;$/;"	m	struct:clicky::dcontext
cairo_curve_to_points	apps/clicky/src/dwidget.cc	/^static inline void cairo_curve_to_points(cairo_t *cr, const point &p0, const point &p1, const point &p2)$/;"	f	namespace:clicky
cairo_jagged_edge	apps/clicky/src/dwidget.cc	/^static void cairo_jagged_edge(cairo_t *cr, double x0, double y0,$/;"	f	namespace:clicky
cairo_rel_line_to_point	apps/clicky/src/dwidget.cc	/^static inline void cairo_rel_line_to_point(cairo_t *cr, const point &p)$/;"	f	namespace:clicky
cairo_set_border	apps/clicky/src/dwidget.cc	/^static inline void cairo_set_border(cairo_t *cr, const double *color,$/;"	f	namespace:clicky
cairo_surface_ignore_write	apps/clicky/src/wdiagram.cc	/^static cairo_status_t cairo_surface_ignore_write(void *, const unsigned char *, unsigned)$/;"	f	file:
cairo_surface_stdout_write	apps/clicky/src/wdiagram.cc	/^static cairo_status_t cairo_surface_stdout_write(void *, const unsigned char *str, unsigned len)$/;"	f	file:
calc_backoff	elements/wifi/bitrate.cc	/^calc_backoff(int rate, int t)$/;"	f
calc_bcast_time	elements/grid/linktester.cc	/^LinkTester::calc_bcast_time()$/;"	f	class:LinkTester
calc_cksum	elements/grid/linkstat.cc	/^LinkStat::link_probe::calc_cksum(const unsigned char *d)$/;"	f	class:LinkStat::link_probe
calc_listen_time	elements/grid/linktester.cc	/^LinkTester::calc_listen_time()$/;"	f	class:LinkTester
calc_pad_time	elements/grid/linktester.hh	/^  int calc_pad_time() { return _pad; }$/;"	f	class:LinkTester
calc_pct	elements/grid/linkstat.cc	/^LinkStat::calc_pct(unsigned tau, unsigned period, unsigned num_rx)$/;"	f	class:LinkStat
calc_range	elements/grid/gridlocationinfo.cc	/^grid_location::calc_range(const grid_location &l1, const grid_location &l2)$/;"	f	class:grid_location
calc_transmit_time	elements/wifi/bitrate.cc	/^calc_transmit_time(int rate, int length)$/;"	f
calc_unicast_time	elements/grid/linktester.cc	/^LinkTester::calc_unicast_time()$/;"	f	class:LinkTester
calc_usecs_wifi_packet	elements/wifi/bitrate.cc	/^calc_usecs_wifi_packet(int length, int rate, int retries)$/;"	f
calc_usecs_wifi_packet_tries	elements/wifi/bitrate.cc	/^calc_usecs_wifi_packet_tries(int length, int rate, int try0, int tryN)$/;"	f
calculate_dom	elements/standard/classification.cc	/^DominatorOptimizer::calculate_dom(int state)$/;"	f	class:Classification::Wordwise::DominatorOptimizer
calculate_driver_mask	tools/lib/etraits.cc	/^ElementTraits::calculate_driver_mask()$/;"	f	class:ElementTraits
calculate_reachable	apps/clicky/src/crouter.cc	/^void crouter::calculate_reachable(const String &str, bool forward, reachable_t &reach)$/;"	f	class:clicky::crouter
calculate_router_ccss	apps/clicky/src/crouter.cc	/^crouter::calculate_router_ccss()$/;"	f	class:clicky::crouter
call_hooks	elements/local/OpenFlow/lib/fatal-signal.cc	/^call_hooks(int sig_nr)$/;"	f	file:
call_read	include/click/handler.hh	/^    inline String call_read(Element *e, ErrorHandler *errh = 0) const {$/;"	f	class:Handler
call_read	include/click/handlercall.hh	/^HandlerCall::call_read(ErrorHandler *errh) const$/;"	f	class:HandlerCall
call_read	lib/handlercall.cc	/^HandlerCall::call_read(Element *e, const String &hname, ErrorHandler *errh)$/;"	f	class:HandlerCall
call_read	lib/handlercall.cc	/^HandlerCall::call_read(const String &hdesc, const Element *context, ErrorHandler* errh)$/;"	f	class:HandlerCall
call_read	lib/router.cc	/^Handler::call_read(Element* e, const String& param, ErrorHandler* errh) const$/;"	f	class:Handler
call_read_handler	userlevel/click.cc	/^call_read_handler(Element *e, String handler_name,$/;"	f	file:
call_read_handlers	userlevel/click.cc	/^call_read_handlers(Vector<String> &handlers, ErrorHandler *errh)$/;"	f	file:
call_selected	lib/selectset.cc	/^SelectSet::call_selected(int fd, int mask) const$/;"	f	class:SelectSet
call_sigprocmask	elements/local/OpenFlow/lib/fatal-signal.cc	/^call_sigprocmask(int how, sigset_t* new_set, sigset_t* old_set)$/;"	f	file:
call_write	include/click/handlercall.hh	/^HandlerCall::call_write(Element *e, const String &hname, ErrorHandler *errh)$/;"	f	class:HandlerCall
call_write	include/click/handlercall.hh	/^HandlerCall::call_write(ErrorHandler *errh) const$/;"	f	class:HandlerCall
call_write	include/click/handlercall.hh	/^HandlerCall::call_write(const String &value_ext, ErrorHandler *errh) const$/;"	f	class:HandlerCall
call_write	include/click/handlercall.hh	/^HandlerCall::call_write(const VariableExpander &scope, ErrorHandler *errh) const$/;"	f	class:HandlerCall
call_write	lib/handlercall.cc	/^HandlerCall::call_write(Element* e, const String& hname, const String& value, ErrorHandler* errh)$/;"	f	class:HandlerCall
call_write	lib/handlercall.cc	/^HandlerCall::call_write(const String &hdesc, const Element *context, ErrorHandler *errh)$/;"	f	class:HandlerCall
call_write	lib/handlercall.cc	/^HandlerCall::call_write(const String &hdesc, const String &value, const Element *context, ErrorHandler *errh)$/;"	f	class:HandlerCall
call_write	lib/router.cc	/^Handler::call_write(const String& value, Element* e, ErrorHandler* errh) const$/;"	f	class:Handler
callback	include/click/task.hh	/^    inline TaskCallback callback() const {$/;"	f	class:Task
callback	include/click/timer.hh	/^	TimerCallback callback;$/;"	m	union:Timer::__anon459
canRead	apps/ClickController/ControlSocket.java	/^	boolean canRead;$/;"	f	class:ControlSocket.HandlerInfo
canWrite	apps/ClickController/ControlSocket.java	/^	boolean canWrite;$/;"	f	class:ControlSocket.HandlerInfo
can_insert	include/click/hashcontainer.hh	/^    bool can_insert() const {$/;"	f	class:HashContainer_iterator
can_live_reconfigure	elements/app/ftpportmapper.hh	/^    bool can_live_reconfigure() const	{ return true; }$/;"	f	class:FTPPortMapper
can_live_reconfigure	elements/aqm/pi.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:PI
can_live_reconfigure	elements/aqm/red.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:RED
can_live_reconfigure	elements/ethernet/arpquerier.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:ARPQuerier
can_live_reconfigure	elements/ethernet/arpresponder.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:ARPResponder
can_live_reconfigure	elements/ethernet/arptable.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:ARPTable
can_live_reconfigure	elements/ethernet/etherencap.hh	/^    bool can_live_reconfigure() const	{ return true; }$/;"	f	class:EtherEncap
can_live_reconfigure	elements/ethernet/ethervlanannoencap.hh	/^    bool can_live_reconfigure() const	{ return true; }$/;"	f	class:EtherVLANAnnoEncap
can_live_reconfigure	elements/ethernet/ethervlanencap.hh	/^    bool can_live_reconfigure() const	{ return true; }$/;"	f	class:EtherVLANEncap
can_live_reconfigure	elements/ethernet/hostetherfilter.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:HostEtherFilter
can_live_reconfigure	elements/ethernet/setvlananno.hh	/^    bool can_live_reconfigure() const	{ return true; }$/;"	f	class:SetVLANAnno
can_live_reconfigure	elements/ethernet/stripetherheader.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:EtherEncap
can_live_reconfigure	elements/ethernet/stripethervlanheader.hh	/^    bool can_live_reconfigure() const	{ return true; }$/;"	f	class:StripEtherVLANHeader
can_live_reconfigure	elements/grid/bottleneckmetric.hh	/^  bool can_live_reconfigure() const { return false; }$/;"	f	class:BottleneckMetric
can_live_reconfigure	elements/grid/dsdvroutetable.hh	/^  virtual bool can_live_reconfigure() const { return false; }$/;"	f	class:DSDVRouteTable
can_live_reconfigure	elements/grid/e2elossmetric.hh	/^  bool can_live_reconfigure() const { return false; }$/;"	f	class:E2ELossMetric
can_live_reconfigure	elements/grid/etx2metric.hh	/^  bool can_live_reconfigure() const { return false; }$/;"	f	class:ETX2Metric
can_live_reconfigure	elements/grid/etxmetric.hh	/^  bool can_live_reconfigure() const { return false; }$/;"	f	class:ETXMetric
can_live_reconfigure	elements/grid/gridencap.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:GridEncap
can_live_reconfigure	elements/grid/gridgatewayinfo.hh	/^  bool can_live_reconfigure() const { return true; }$/;"	f	class:GridGatewayInfo
can_live_reconfigure	elements/grid/gridheaderinfo.hh	/^  bool can_live_reconfigure() const { return true; }$/;"	f	class:GridHeaderInfo
can_live_reconfigure	elements/grid/gridlocationinfo.hh	/^  bool can_live_reconfigure() const { return true; }$/;"	f	class:GridLocationInfo
can_live_reconfigure	elements/grid/gridlocationinfo2.hh	/^  bool can_live_reconfigure() const { return true; }$/;"	f	class:GridLocationInfo2
can_live_reconfigure	elements/grid/gridlogger.hh	/^  bool can_live_reconfigure() const { return false; }$/;"	f	class:GridLogger
can_live_reconfigure	elements/grid/gridroutetable.hh	/^  virtual bool can_live_reconfigure() const { return false; }$/;"	f	class:GridRouteTable
can_live_reconfigure	elements/grid/hopcountmetric.hh	/^  bool can_live_reconfigure() const { return false; }$/;"	f	class:HopcountMetric
can_live_reconfigure	elements/grid/incseqno.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:IncrementSeqNo
can_live_reconfigure	elements/grid/lirmetric.hh	/^  bool can_live_reconfigure() const { return false; }$/;"	f	class:LIRMetric
can_live_reconfigure	elements/grid/locfromfile.hh	/^  bool can_live_reconfigure() const { return true; }$/;"	f	class:LocFromFile
can_live_reconfigure	elements/grid/loctable.hh	/^  bool can_live_reconfigure() const { return true; }$/;"	f	class:LocationTable
can_live_reconfigure	elements/grid/packetlogger.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:PacketLogger
can_live_reconfigure	elements/grid/packetlogger2.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:PacketLogger2
can_live_reconfigure	elements/grid/threshmetric.hh	/^  bool can_live_reconfigure() const { return false; }$/;"	f	class:ThresholdMetric
can_live_reconfigure	elements/grid/yarvismetric.hh	/^  bool can_live_reconfigure() const { return false; }$/;"	f	class:YarvisMetric
can_live_reconfigure	elements/icmp/icmperror.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:ICMPError
can_live_reconfigure	elements/ip/ipencap.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:IPEncap
can_live_reconfigure	elements/ip/ipfilter.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:IPFilter
can_live_reconfigure	elements/ip/setipaddress.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:SetIPAddress
can_live_reconfigure	elements/ip/setipdscp.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:SetIPDSCP
can_live_reconfigure	elements/ip/setipecn.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:SetIPECN
can_live_reconfigure	elements/ip6/ip6encap.hh	/^  bool can_live_reconfigure() const     { return true; }$/;"	f	class:IP6Encap
can_live_reconfigure	elements/ip6/setip6dscp.hh	/^    bool can_live_reconfigure() const	{ return true; }$/;"	f	class:SetIP6DSCP
can_live_reconfigure	elements/ipsec/ipsecencap.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:IPsecEncap
can_live_reconfigure	elements/local/FlowNet/scheduler/IPFragReset.hh	/^	bool can_live_reconfigure() const		{ return true; }$/;"	f	class:IPFragReset
can_live_reconfigure	elements/local/FlowNet/scheduler/WBSEtherFilter.hh	/^	bool can_live_reconfigure() const		{ return true; }$/;"	f	class:WBSEtherFilter
can_live_reconfigure	elements/local/OpenFlow/RConn.hh	/^	bool can_live_reconfigure() const		{ return true; }$/;"	f	class:RConn
can_live_reconfigure	elements/simple/simplepullswitch.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:SimplePullSwitch
can_live_reconfigure	elements/standard/classifier.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:Classifier
can_live_reconfigure	elements/standard/infinitesource.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:InfiniteSource
can_live_reconfigure	elements/standard/markmacheader.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:MarkMACHeader
can_live_reconfigure	elements/standard/paint.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:Paint
can_live_reconfigure	elements/standard/pokehandlers.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:PokeHandlers
can_live_reconfigure	elements/standard/print.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:Print
can_live_reconfigure	elements/standard/randomerror.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:RandomBitErrors
can_live_reconfigure	elements/standard/randomsample.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:RandomSample
can_live_reconfigure	elements/standard/ratedsplitter.hh	/^    bool can_live_reconfigure() const	{ return true; }$/;"	f	class:RatedSplitter
can_live_reconfigure	elements/standard/ratedunqueue.hh	/^    bool can_live_reconfigure() const	{ return true; }$/;"	f	class:RatedUnqueue
can_live_reconfigure	elements/standard/setannobyte.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:SetAnnoByte
can_live_reconfigure	elements/standard/setpackettype.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:SetPacketType
can_live_reconfigure	elements/standard/shaper.hh	/^    bool can_live_reconfigure() const	{ return true; }$/;"	f	class:Shaper
can_live_reconfigure	elements/standard/simplequeue.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:SimpleQueue
can_live_reconfigure	elements/standard/stridesched.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:StrideSched
can_live_reconfigure	elements/standard/switch.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:Switch
can_live_reconfigure	elements/standard/truncate.hh	/^    bool can_live_reconfigure() const		{ return true; }$/;"	f	class:Truncate
can_live_reconfigure	elements/tcpudp/tcpfragmenter.hh	/^    bool can_live_reconfigure() const	{ return true; }$/;"	f	class:TCPFragmenter
can_live_reconfigure	elements/tcpudp/udpip6encap.hh	/^    bool can_live_reconfigure() const	{ return true; }$/;"	f	class:UDPIP6Encap
can_live_reconfigure	elements/tcpudp/udpipencap.hh	/^    bool can_live_reconfigure() const	{ return true; }$/;"	f	class:UDPIPEncap
can_live_reconfigure	elements/test/randomseed.hh	/^    bool can_live_reconfigure() const	{ return true; }$/;"	f	class:RandomSeed
can_live_reconfigure	elements/wifi/ap/associationresponder.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:AssociationResponder
can_live_reconfigure	elements/wifi/ap/beaconsource.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:BeaconSource
can_live_reconfigure	elements/wifi/ap/openauthresponder.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:OpenAuthResponder
can_live_reconfigure	elements/wifi/ap/proberesponder.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:ProbeResponder
can_live_reconfigure	elements/wifi/athdescdecap.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:AthdescDecap
can_live_reconfigure	elements/wifi/athdescencap.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:AthdescEncap
can_live_reconfigure	elements/wifi/autoratefallback.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:AutoRateFallback
can_live_reconfigure	elements/wifi/availablerates.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:AvailableRates
can_live_reconfigure	elements/wifi/ethercount.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:EtherCount
can_live_reconfigure	elements/wifi/extradecap.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:ExtraDecap
can_live_reconfigure	elements/wifi/extraencap.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:ExtraEncap
can_live_reconfigure	elements/wifi/madwifirate.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:MadwifiRate
can_live_reconfigure	elements/wifi/packetstore.hh	/^  bool can_live_reconfigure() const		{ return false; }$/;"	f	class:PacketStore
can_live_reconfigure	elements/wifi/prism2decap.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:Prism2Decap
can_live_reconfigure	elements/wifi/prism2encap.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:Prism2Encap
can_live_reconfigure	elements/wifi/probetxrate.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:ProbeTXRate
can_live_reconfigure	elements/wifi/radiotapdecap.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:RadiotapDecap
can_live_reconfigure	elements/wifi/radiotapencap.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:RadiotapEncap
can_live_reconfigure	elements/wifi/settxpower.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:SetTXPower
can_live_reconfigure	elements/wifi/settxrate.hh	/^  bool can_live_reconfigure() const		{ return true; }$/;"	f	class:SetTXRate
can_live_reconfigure	elements/wifi/station/associationrequester.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:AssociationRequester
can_live_reconfigure	elements/wifi/station/beaconscanner.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:BeaconScanner
can_live_reconfigure	elements/wifi/station/beacontracker.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:BeaconTracker
can_live_reconfigure	elements/wifi/station/openauthrequester.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:OpenAuthRequester
can_live_reconfigure	elements/wifi/station/proberequester.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:ProbeRequester
can_live_reconfigure	elements/wifi/wepdecap.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:WepDecap
can_live_reconfigure	elements/wifi/wepencap.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:WepEncap
can_live_reconfigure	elements/wifi/wifidecap.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:WifiDecap
can_live_reconfigure	elements/wifi/wifidefrag.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:WifiDefrag
can_live_reconfigure	elements/wifi/wifiencap.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:WifiEncap
can_live_reconfigure	elements/wifi/wififragment.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:WifiFragment
can_live_reconfigure	elements/wifi/wifiseq.hh	/^  bool can_live_reconfigure() const	{ return true; }$/;"	f	class:WifiSeq
can_live_reconfigure	lib/element.cc	/^Element::can_live_reconfigure() const$/;"	f	class:Element
can_read	apps/csclient/csclient.hh	/^    bool can_read;$/;"	m	struct:ControlSocketClient::handler_info_t
can_set_mac_addr	drivers/e1000-4.x/src/ans.h	/^    BD_ANS_BOOLEAN can_set_mac_addr; \/* can the adapter change it's mac addr *\/$/;"	m	struct:_iANSsupport_t
can_write	apps/csclient/csclient.hh	/^    bool can_write;$/;"	m	struct:ControlSocketClient::handler_info_t
canonical_handler_name	elements/userlevel/controlsocket.cc	/^canonical_handler_name(const String &n)$/;"	f	file:
canonicalize_section	doc/click-elem2man	/^sub canonicalize_section ($$) {$/;"	s
canvas_to_window	apps/clicky/src/wdiagram.hh	/^inline point wdiagram::canvas_to_window(double x, double y) const$/;"	f	class:clicky::wdiagram
canvas_to_window	apps/clicky/src/wdiagram.hh	/^inline rectangle wdiagram::canvas_to_window(const rectangle &r) const$/;"	f	class:clicky::wdiagram
capabilities	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t capabilities;  \/* Bitmap of support "ofp_capabilities". *\/$/;"	m	struct:ofp_switch_features
capability_string	elements/wifi/printwifi.cc	/^String capability_string(int capability) {$/;"	f
capacity	apps/clicky/src/dstyle.hh	/^    String capacity;$/;"	m	struct:clicky::dfullness_style
capacity	elements/ethernet/arptable.hh	/^    uint32_t capacity() const {$/;"	f	class:ARPTable
capacity	elements/ip/iprewriterbase.hh	/^    int32_t capacity() const {$/;"	f	class:IPRewriterHeap
capacity	elements/linuxmodule/cpuqueue.hh	/^  unsigned capacity() const			{ return _capacity; }$/;"	f	class:CPUQueue
capacity	include/click/router.hh	/^	enum { capacity = 4096 };$/;"	e	enum:Router::notifier_signals_t::__anon443
capacity	include/click/standard/storage.hh	/^    int capacity() const		{ return _capacity; }$/;"	f	class:Storage
capacity	include/click/straccum.hh	/^    int capacity() const {$/;"	f	class:StringAccum
capacity	include/click/string.hh	/^	uint32_t capacity;$/;"	m	struct:String::memo_t
capacity	include/click/tokenbucket.hh	/^    token_type capacity() const {$/;"	f	class:TokenBucketX
capacity	include/click/tokenbucket.hh	/^    token_type capacity() const {$/;"	f	class:TokenRateX
capacity	include/click/vector.hh	/^    size_type capacity() const		{ return _capacity; }$/;"	f	class:Vector
capacity	include/click/vector.hh	/^    size_type capacity() const	{ return Base::capacity(); }$/;"	f	class:Vector
capacity	lib/clp.c	/^    int capacity;$/;"	m	struct:Clp_BuildString	file:
caplen	elements/userlevel/fakepcap.hh	/^	uint32_t caplen;	\/* length of portion present *\/$/;"	m	struct:fake_pcap_pkthdr
capsule	apps/clicky/src/permstr.hh	/^inline PermString::Capsule PermString::capsule() const$/;"	f	class:PermString
careful_trunc	elements/analysis/ipsumdumpinfo.hh	/^    bool careful_trunc;$/;"	m	struct:IPSummaryDump::PacketDesc
carrier	drivers/e1000-4.x/src/kcompat.c	/^	unsigned int carrier;$/;"	m	struct:_kc_net_dev_ext	file:
carrier	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	unsigned int carrier;$/;"	m	struct:_kc_net_dev_ext	file:
cast	elements/analysis/aggregateipaddrpair.cc	/^AggregateIPAddrPair::cast(const char *n)$/;"	f	class:AggregateIPAddrPair
cast	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::cast(const char *n)$/;"	f	class:AggregateIPFlows
cast	elements/analysis/fromcapdump.cc	/^FromCapDump::cast(const char *n)$/;"	f	class:FromCapDump
cast	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::cast(const char *n)$/;"	f	class:FromIPSummaryDump
cast	elements/analysis/fromnetflowsumdump.cc	/^FromNetFlowSummaryDump::cast(const char *n)$/;"	f	class:FromNetFlowSummaryDump
cast	elements/analysis/fromtcpdump.cc	/^FromTcpdump::cast(const char *n)$/;"	f	class:FromTcpdump
cast	elements/analysis/timesortedsched.cc	/^TimeSortedSched::cast(const char *n)$/;"	f	class:TimeSortedSched
cast	elements/aqm/adaptivered.cc	/^AdaptiveRED::cast(const char *n)$/;"	f	class:AdaptiveRED
cast	elements/bsdmodule/fromdevice.cc	/^FromDevice::cast(const char *n)$/;"	f	class:FromDevice
cast	elements/ethernet/arpquerier.cc	/^ARPQuerier::cast(const char *name)$/;"	f	class:ARPQuerier
cast	elements/grid/bottleneckmetric.cc	/^BottleneckMetric::cast(const char *n)$/;"	f	class:BottleneckMetric
cast	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::cast(const char *n)$/;"	f	class:DSDVRouteTable
cast	elements/grid/e2elossmetric.cc	/^E2ELossMetric::cast(const char *n)$/;"	f	class:E2ELossMetric
cast	elements/grid/etx2metric.cc	/^ETX2Metric::cast(const char *n)$/;"	f	class:ETX2Metric
cast	elements/grid/etxmetric.cc	/^ETXMetric::cast(const char *n)$/;"	f	class:ETXMetric
cast	elements/grid/gridlocationinfo.cc	/^GridLocationInfo::cast(const char *n)$/;"	f	class:GridLocationInfo
cast	elements/grid/gridlocationinfo2.cc	/^GridLocationInfo2::cast(const char *n)$/;"	f	class:GridLocationInfo2
cast	elements/grid/gridlogger.cc	/^GridLogger::cast(const char *n)$/;"	f	class:GridLogger
cast	elements/grid/gridroutetable.cc	/^GridRouteTable::cast(const char *n)$/;"	f	class:GridRouteTable
cast	elements/grid/gridsrforwarder.cc	/^GridSRForwarder::cast(const char *name)$/;"	f	class:GridSRForwarder
cast	elements/grid/hopcountmetric.cc	/^HopcountMetric::cast(const char *n)$/;"	f	class:HopcountMetric
cast	elements/grid/lirmetric.cc	/^LIRMetric::cast(const char *n)$/;"	f	class:LIRMetric
cast	elements/grid/locfromfile.cc	/^LocFromFile::cast(const char *name)$/;"	f	class:LocFromFile
cast	elements/grid/lookupgeogridroute.cc	/^LookupGeographicGridRoute::cast(const char *n)$/;"	f	class:LookupGeographicGridRoute
cast	elements/grid/lookuplocalgridroute.cc	/^LookupLocalGridRoute::cast(const char *n)$/;"	f	class:LookupLocalGridRoute
cast	elements/grid/lookuplocalgridroute2.cc	/^LookupLocalGridRoute2::cast(const char *n)$/;"	f	class:LookupLocalGridRoute2
cast	elements/grid/pep.cc	/^PEP::cast(const char *name)$/;"	f	class:PEP
cast	elements/grid/regionpep.cc	/^EstimateRouterRegion::cast(const char *name)$/;"	f	class:EstimateRouterRegion
cast	elements/grid/threshmetric.cc	/^ThresholdMetric::cast(const char *n)$/;"	f	class:ThresholdMetric
cast	elements/grid/updateroutes.cc	/^UpdateGridRoutes::cast(const char *n)$/;"	f	class:UpdateGridRoutes
cast	elements/grid/yarvismetric.cc	/^YarvisMetric::cast(const char *n)$/;"	f	class:YarvisMetric
cast	elements/icmp/icmppingrewriter.cc	/^ICMPPingRewriter::cast(const char *n)$/;"	f	class:ICMPPingRewriter
cast	elements/ip/ipaddrpairrewriter.cc	/^IPAddrPairRewriter::cast(const char *n)$/;"	f	class:IPAddrPairRewriter
cast	elements/ip/ipaddrrewriter.cc	/^IPAddrRewriter::cast(const char *n)$/;"	f	class:IPAddrRewriter
cast	elements/ip/iproutetable.cc	/^IPRouteTable::cast(const char *name)$/;"	f	class:IPRouteTable
cast	elements/ip/rripmapper.cc	/^RoundRobinIPMapper::cast(const char *name)$/;"	f	class:RoundRobinIPMapper
cast	elements/ip/siphmapper.cc	/^SourceIPHashMapper::cast(const char *name)$/;"	f	class:SourceIPHashMapper
cast	elements/ip6/ip6routetable.cc	/^IP6RouteTable::cast(const char *name)$/;"	f	class:IP6RouteTable
cast	elements/ipsec/ipsecroutetable.cc	/^IPsecRouteTable::cast(const char *name)$/;"	f	class:IPsecRouteTable
cast	elements/linuxmodule/fromdevice.cc	/^FromDevice::cast(const char *n)$/;"	f	class:FromDevice
cast	elements/linuxmodule/fromhost.cc	/^void *FromHost::cast(const char *name)$/;"	f	class:FromHost
cast	elements/linuxmodule/fromuserdevice.cc	/^FromUserDevice::cast(const char *n)$/;"	f	class:FromUserDevice
cast	elements/linuxmodule/perfcountaccum.cc	/^PerfCountAccum::cast(const char *n)$/;"	f	class:PerfCountAccum
cast	elements/linuxmodule/perfcountinfo.cc	/^PerfCountInfo::cast(const char *n)$/;"	f	class:PerfCountInfo
cast	elements/linuxmodule/setperfcount.cc	/^SetPerfCount::cast(const char *n)$/;"	f	class:SetPerfCount
cast	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.cc	/^void * PFMpeg2AdaptFW::cast(const char *name)$/;"	f	class:PFMpeg2AdaptFW
cast	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^void * PFSchedFW::cast(const char *name)$/;"	f	class:PFSchedFW
cast	elements/local/FlowNet/shaper/PFShapeFW.cc	/^void * PFShapeFW::cast(const char *name)$/;"	f	class:PFShapeFW
cast	elements/local/FlowNet/sink/PFSinkFW.cc	/^void * PFSinkFW::cast(const char *name)$/;"	f	class:PFSinkFW
cast	elements/standard/burster.cc	/^Burster::cast(const char *name)$/;"	f	class:Burster
cast	elements/standard/delayshaper.cc	/^DelayShaper::cast(const char *n)$/;"	f	class:DelayShaper
cast	elements/standard/drr.cc	/^DRRSched::cast(const char *n)$/;"	f	class:DRRSched
cast	elements/standard/frontdropqueue.cc	/^FrontDropQueue::cast(const char *n)$/;"	f	class:FrontDropQueue
cast	elements/standard/fullnotequeue.cc	/^FullNoteQueue::cast(const char *n)$/;"	f	class:FullNoteQueue
cast	elements/standard/idle.cc	/^Idle::cast(const char *name)$/;"	f	class:Idle
cast	elements/standard/infinitesource.cc	/^InfiniteSource::cast(const char *n)$/;"	f	class:InfiniteSource
cast	elements/standard/linkunqueue.cc	/^LinkUnqueue::cast(const char *n)$/;"	f	class:LinkUnqueue
cast	elements/standard/mixedqueue.cc	/^MixedQueue::cast(const char *n)$/;"	f	class:MixedQueue
cast	elements/standard/msqueue.cc	/^MSQueue::cast(const char *n)$/;"	f	class:MSQueue
cast	elements/standard/notifierqueue.cc	/^NotifierQueue::cast(const char *n)$/;"	f	class:NotifierQueue
cast	elements/standard/pullswitch.cc	/^PullSwitch::cast(const char *name)$/;"	f	class:PullSwitch
cast	elements/standard/quicknotequeue.cc	/^QuickNoteQueue::cast(const char *n)$/;"	f	class:QuickNoteQueue
cast	elements/standard/simplequeue.cc	/^SimpleQueue::cast(const char *n)$/;"	f	class:SimpleQueue
cast	elements/standard/threadsafequeue.cc	/^ThreadSafeQueue::cast(const char *n)$/;"	f	class:ThreadSafeQueue
cast	elements/tcpudp/iprewriter.cc	/^IPRewriter::cast(const char *n)$/;"	f	class:IPRewriter
cast	elements/tcpudp/tcprewriter.cc	/^TCPRewriter::cast(const char *n)$/;"	f	class:TCPRewriter
cast	elements/tcpudp/udprewriter.cc	/^UDPRewriter::cast(const char *n)$/;"	f	class:UDPRewriter
cast	elements/test/upstreamnotifier.cc	/^UpstreamNotifier::cast(const char *n)$/;"	f	class:UpstreamNotifier
cast	elements/userlevel/fromdump.cc	/^FromDump::cast(const char *n)$/;"	f	class:FromDump
cast	elements/userlevel/kerneltun.cc	/^KernelTun::cast(const char *n)$/;"	f	class:KernelTun
cast	elements/userlevel/khandlerproxy.cc	/^KernelHandlerProxy::cast(const char *n)$/;"	f	class:KernelHandlerProxy
cast	elements/wifi/availablerates.cc	/^AvailableRates::cast(const char *n)$/;"	f	class:AvailableRates
cast	elements/wifi/linktable.cc	/^LinkTable::cast(const char *n)$/;"	f	class:LinkTable
cast	elements/wifi/packetstore.cc	/^PacketStore::cast(const char *n)$/;"	f	class:PacketStore
cast	lib/element.cc	/^Element::cast(const char *name)$/;"	f	class:Element
cast	lib/lexer.cc	/^Lexer::Compound::cast(const char *s)$/;"	f	class:Lexer::Compound
cast	tools/click-align/alignclass.cc	/^AlignClass::cast(const char *s)$/;"	f	class:AlignClass
cast	tools/lib/eclasst.hh	/^    virtual void *cast(const char *)		{ return 0; }$/;"	f	class:ElementClassT
cast_conn	apps/clicky/src/dwidget.hh	/^inline const dconn *dwidget::cast_conn() const {$/;"	f	class:clicky::dwidget
cast_conn	apps/clicky/src/dwidget.hh	/^inline dconn *dwidget::cast_conn() {$/;"	f	class:clicky::dwidget
cast_elt	apps/clicky/src/dwidget.hh	/^inline const delt *dwidget::cast_elt() const {$/;"	f	class:clicky::dwidget
cast_elt	apps/clicky/src/dwidget.hh	/^inline delt *dwidget::cast_elt() {$/;"	f	class:clicky::dwidget
cast_router	tools/lib/eclasst.cc	/^SynonymElementClassT::cast_router()$/;"	f	class:SynonymElementClassT
cast_router	tools/lib/eclasst.hh	/^    virtual RouterT *cast_router()		{ return 0; }$/;"	f	class:ElementClassT
cast_router	tools/lib/routert.hh	/^    RouterT *cast_router()		{ return this; }$/;"	f	class:RouterT
cast_synonym	tools/lib/eclasst.hh	/^    SynonymElementClassT *cast_synonym() { return this; }$/;"	f	class:SynonymElementClassT
cast_synonym	tools/lib/eclasst.hh	/^    virtual SynonymElementClassT *cast_synonym() { return 0; }$/;"	f	class:ElementClassT
catch_dump_signal	userlevel/click.cc	/^catch_dump_signal(int sig)$/;"	f	file:
cb	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	void *cb;$/;"	m	struct:CDInfo
cb	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^	uint8_t cb[32];$/;"	m	struct:BWShapeInfo
cb	include/click/packet.hh	/^	Anno cb;$/;"	m	struct:Packet::AllAnno
cb_aux	elements/local/OpenFlow/RConn.hh	/^        void *cb_aux;$/;"	m	struct:rconn_remote
cb_done	elements/local/OpenFlow/RConn.hh	/^        void (*cb_done)(void *aux);$/;"	m	struct:rconn_remote
cb_dump	elements/local/OpenFlow/RConn.hh	/^        int (*cb_dump)(class RConn *, void *aux);$/;"	m	struct:rconn_remote
cb_is_set	elements/grid/gridroutecb.hh	/^  static bool cb_is_set(Packet *p, unsigned int cb_num) {$/;"	f	class:GridRouteActor
cb_lhalf	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	uint8_t cb_lhalf[512];$/;"	m	struct:SchedInfo
cb_uhalf	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	uint8_t cb_uhalf[512];$/;"	m	struct:SchedInfo
cc_read_router	tools/click-combine/click-combine.cc	/^cc_read_router(String name, String &next_name, int &next_number,$/;"	f	file:
ccb	elements/ip/rfc2507c.hh	/^  struct ccb {$/;"	s	class:RFC2507c
ccb	elements/ip/rfc2507d.hh	/^  struct ccb {$/;"	s	class:RFC2507d
ccompile	bsdmodule/Makefile	/^ccompile = $(COMPILE) $(DEPCFLAGS) $(1)$/;"	m
ccompile	bsdmodule/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(DEPCFLAGS) $(1)$/;"	m
ccompile	etc/pkg-bsdmodule.mk	/^ccompile = $(COMPILE) $(1)$/;"	m
ccompile	etc/pkg-bsdmodule.mk	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile	etc/pkg-linuxmodule.mk	/^ccompile = $(COMPILE) $(DEPCFLAGS) $(1)$/;"	m
ccompile	etc/pkg-linuxmodule.mk	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(DEPCFLAGS) $(1)$/;"	m
ccompile	etc/pkg-userlevel.mk	/^ccompile = $(COMPILE) $(DEPCFLAGS) $(1)$/;"	m
ccompile	etc/pkg-userlevel.mk	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(DEPCFLAGS) $(1)$/;"	m
ccompile	linuxmodule/Makefile	/^ccompile = $(COMPILE) $(DEPCFLAGS) $(1)$/;"	m
ccompile	linuxmodule/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(DEPCFLAGS) $(1)$/;"	m
ccompile	ns/Makefile	/^ccompile = $(COMPILE) $(DEPCFLAGS) $(1)$/;"	m
ccompile	ns/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(DEPCFLAGS) $(1)$/;"	m
ccompile	tools/click-align/Makefile	/^ccompile = $(COMPILE) $(1)$/;"	m
ccompile	tools/click-align/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile	tools/click-check/Makefile	/^ccompile = $(COMPILE) $(1)$/;"	m
ccompile	tools/click-check/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile	tools/click-combine/Makefile	/^ccompile = $(COMPILE) $(1)$/;"	m
ccompile	tools/click-combine/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile	tools/click-devirtualize/Makefile	/^ccompile = $(COMPILE) $(1)$/;"	m
ccompile	tools/click-devirtualize/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile	tools/click-fastclassifier/Makefile	/^ccompile = $(COMPILE) $(1)$/;"	m
ccompile	tools/click-fastclassifier/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile	tools/click-flatten/Makefile	/^ccompile = $(COMPILE) $(1)$/;"	m
ccompile	tools/click-flatten/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile	tools/click-install/Makefile	/^ccompile = $(COMPILE) $(1)$/;"	m
ccompile	tools/click-install/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile	tools/click-mkmindriver/Makefile	/^ccompile = $(COMPILE) $(1)$/;"	m
ccompile	tools/click-mkmindriver/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile	tools/click-pretty/Makefile	/^ccompile = $(COMPILE) $(1)$/;"	m
ccompile	tools/click-pretty/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile	tools/click-undead/Makefile	/^ccompile = $(COMPILE) $(1)$/;"	m
ccompile	tools/click-undead/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile	tools/click-xform/Makefile	/^ccompile = $(COMPILE) $(1)$/;"	m
ccompile	tools/click-xform/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile	tools/click2xml/Makefile	/^ccompile = $(COMPILE) $(1)$/;"	m
ccompile	tools/click2xml/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile	tools/lib/Makefile	/^ccompile = $(COMPILE) $(1)$/;"	m
ccompile	tools/lib/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile	userlevel/Makefile	/^ccompile = $(COMPILE) $(DEPCFLAGS) $(1)$/;"	m
ccompile	userlevel/Makefile	/^ccompile = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(DEPCFLAGS) $(1)$/;"	m
ccompile_nodep	bsdmodule/Makefile	/^ccompile_nodep = $(COMPILE) $(1)$/;"	m
ccompile_nodep	bsdmodule/Makefile	/^ccompile_nodep = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile_nodep	etc/pkg-linuxmodule.mk	/^ccompile_nodep = $(COMPILE) $(1)$/;"	m
ccompile_nodep	etc/pkg-linuxmodule.mk	/^ccompile_nodep = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile_nodep	etc/pkg-userlevel.mk	/^ccompile_nodep = $(COMPILE) $(1)$/;"	m
ccompile_nodep	etc/pkg-userlevel.mk	/^ccompile_nodep = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile_nodep	linuxmodule/Makefile	/^ccompile_nodep = $(COMPILE) $(1)$/;"	m
ccompile_nodep	linuxmodule/Makefile	/^ccompile_nodep = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile_nodep	ns/Makefile	/^ccompile_nodep = $(COMPILE) $(1)$/;"	m
ccompile_nodep	ns/Makefile	/^ccompile_nodep = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccompile_nodep	userlevel/Makefile	/^ccompile_nodep = $(COMPILE) $(1)$/;"	m
ccompile_nodep	userlevel/Makefile	/^ccompile_nodep = @\/bin\/echo ' ' $(2) $< && $(COMPILE) $(1)$/;"	m
ccss	apps/clicky/src/crouter.hh	/^    dcss_set *ccss() const {$/;"	f	class:clicky::crouter
ccss_list	apps/clicky/src/dstyle.cc	/^dcss *dcss_set::ccss_list(const String &str) const$/;"	f	class:clicky::dcss_set
ccss_pop_commavec	apps/clicky/src/dstyle.cc	/^static String ccss_pop_commavec(String &str)$/;"	f	namespace:clicky
ccss_skip_braces	apps/clicky/src/dstyle.cc	/^static const char *ccss_skip_braces(const char *s, const char *send,$/;"	f	namespace:clicky
cd	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.hh	/^	VcCongestionDetection*	cd;$/;"	m	struct:CBShapeByCD
cd	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.hh	/^	VcCongestionDetection*	cd;$/;"	m	struct:CBhapeByCD_CFB
cdiagram	apps/clicky/src/wdiagram.cc	/^cdiagram::cdiagram(crouter *cr, PangoLayout *pl, unsigned generation)$/;"	f	class:clicky::cdiagram
cdiagram	apps/clicky/src/wdiagram.hh	/^class cdiagram : public rectangle { public:$/;"	c	namespace:clicky
cdriver	apps/clicky/src/cdriver.hh	/^class cdriver { public:$/;"	c	namespace:clicky
center	elements/grid/grid.hh	/^  const grid_location &center() const { return _center; }$/;"	f	struct:grid_region
center_x	apps/clicky/src/rectangle.hh	/^    double center_x() const {$/;"	f	struct:rectangle
center_x	elements/grid/region.hh	/^  double center_x() { return _x + _w\/2; }$/;"	f	class:RectRegion
center_y	apps/clicky/src/rectangle.hh	/^    double center_y() const {$/;"	f	struct:rectangle
center_y	elements/grid/region.hh	/^  double center_y() { return _y + _h\/2; }$/;"	f	class:RectRegion
cexterr	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t cexterr;$/;"	m	struct:e1000_hw_stats
cexterr	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t cexterr;$/;"	m	struct:e1000_hw_stats
cexterr	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t cexterr;$/;"	m	struct:e1000_hw_stats
cf	include/clicknet/wifi.h	/^	struct cf {$/;"	s	struct:wifi_information
cf	include/clicknet/wifi.h	/^	} cf;$/;"	m	struct:wifi_information	typeref:struct:wifi_information::cf
cf_alternate_form	include/click/error.hh	/^	cf_alternate_form = 16,	\/\/\/< Set for conversions using the '#' flag.$/;"	e	enum:ErrorHandler::ConversionFlags
cf_left_just	include/click/error.hh	/^	cf_left_just = 8,	\/\/\/< Set for conversions using the '-' flag.$/;"	e	enum:ErrorHandler::ConversionFlags
cf_negative	include/click/error.hh	/^	cf_negative = 256,	\/\/\/< Set for conversions of negative numbers.$/;"	e	enum:ErrorHandler::ConversionFlags
cf_plus_positive	include/click/error.hh	/^	cf_plus_positive = 2,	\/\/\/< Set for conversions using the '+' flag.$/;"	e	enum:ErrorHandler::ConversionFlags
cf_signed	include/click/error.hh	/^	cf_signed = 128,	\/\/\/< Set for conversions of signed numbers.$/;"	e	enum:ErrorHandler::ConversionFlags
cf_singlequote	include/click/error.hh	/^	cf_singlequote = 32,	\/\/\/< Set for conversions using the '\\'' flag.$/;"	e	enum:ErrorHandler::ConversionFlags
cf_space_positive	include/click/error.hh	/^	cf_space_positive = 4,	\/\/\/< Set for conversions using the ' ' flag.$/;"	e	enum:ErrorHandler::ConversionFlags
cf_uppercase	include/click/error.hh	/^	cf_uppercase = 64,	\/\/\/< Set for 'X' conversions (not 'x').$/;"	e	enum:ErrorHandler::ConversionFlags
cf_utf8	include/click/error.hh	/^	cf_utf8 = 1024		\/\/\/< Set to use UTF-8 characters on output.$/;"	e	enum:ErrorHandler::ConversionFlags
cf_zero_pad	include/click/error.hh	/^	cf_zero_pad = 1,	\/\/\/< Set for conversions using the '0' flag.$/;"	e	enum:ErrorHandler::ConversionFlags
chaddr	include/clicknet/dhcp.h	/^	uint8_t  chaddr[16];   \/* client's hardware address *\/$/;"	m	struct:click_dhcp
chain	lib/packet.cc	/^    PacketPool *chain;$/;"	m	struct:__anon510::PacketPool	file:
chain_create	elements/local/OpenFlow/lib/chain.cc	/^struct sw_chain *chain_create(class Datapath *dp)$/;"	f
chain_delete	elements/local/OpenFlow/lib/chain.cc	/^int chain_delete(struct sw_chain *chain, const struct sw_flow_key *key,$/;"	f
chain_destroy	elements/local/OpenFlow/lib/chain.cc	/^void chain_destroy(struct sw_chain *chain)$/;"	f
chain_has_conflict	elements/local/OpenFlow/lib/chain.cc	/^int chain_has_conflict(struct sw_chain *chain, const struct sw_flow_key *key,$/;"	f
chain_insert	elements/local/OpenFlow/lib/chain.cc	/^int chain_insert(struct sw_chain *chain, struct sw_flow *flow, int emerg)$/;"	f
chain_lookup	elements/local/OpenFlow/lib/chain.cc	/^struct sw_flow * chain_lookup(struct sw_chain *chain, const struct sw_flow_key *key, int emerg)$/;"	f
chain_modify	elements/local/OpenFlow/lib/chain.cc	/^int chain_modify(struct sw_chain *chain, const struct sw_flow_key *key,$/;"	f
chain_timeout	elements/local/OpenFlow/lib/chain.cc	/^void chain_timeout(struct sw_chain *chain, struct list *deleted)$/;"	f
challenge	include/clicknet/wifi.h	/^	struct challenge {$/;"	s	struct:wifi_information
challenge	include/clicknet/wifi.h	/^	} challenge;$/;"	m	struct:wifi_information	typeref:struct:wifi_information::challenge
change	elements/ip/radixiplookup.cc	/^RadixIPLookup::Radix::change(uint32_t addr, uint32_t mask, int key, bool set)$/;"	f	class:RadixIPLookup::Radix
change	elements/ipsec/radixipseclookup.cc	/^RadixIPsecLookup::Radix::change(uint32_t addr, uint32_t naddr, int key, uint32_t key_priority)$/;"	f	class:RadixIPsecLookup::Radix
change_connection_from	tools/lib/routert.cc	/^RouterT::change_connection_from(conn_iterator it, PortT h)$/;"	f	class:RouterT
change_connection_to	tools/lib/routert.cc	/^RouterT::change_connection_to(conn_iterator it, PortT h)$/;"	f	class:RouterT
change_count	apps/clicky/src/dwidget.cc	/^bool dconn::change_count(unsigned new_count)$/;"	f	class:clicky::dconn
change_detection_enabled	elements/local/OpenFlow/lib/stp.cc	/^    bool change_detection_enabled;  \/* 8.5.5.10: Detect topology changes? *\/$/;"	m	struct:stp_port	file:
change_device	elements/linuxmodule/polldevice.cc	/^PollDevice::change_device(net_device *dev)$/;"	f	class:PollDevice
change_device	elements/linuxmodule/todevice.cc	/^ToDevice::change_device(net_device *dev)$/;"	f	class:ToDevice
change_display	apps/clicky/src/dwidget.hh	/^inline int dconn::change_display(unsigned change)$/;"	f	class:clicky::dconn
change_ename	tools/lib/routert.cc	/^RouterT::change_ename(int ei, const String &new_name)$/;"	f	class:RouterT
change_expiry	elements/ip/iprwmapping.cc	/^IPRewriterFlow::change_expiry(IPRewriterHeap *h, bool guaranteed,$/;"	f	class:IPRewriterFlow
change_expiry_by_timeout	elements/ip/iprwmapping.hh	/^    void change_expiry_by_timeout(IPRewriterHeap *h, click_jiffies_t now_j,$/;"	f	class:IPRewriterFlow
change_headroom_and_length	include/click/packet.hh	/^Packet::change_headroom_and_length(uint32_t headroom, uint32_t length)$/;"	f	class:Packet
change_heap	include/click/heap.hh	/^inline iterator_type change_heap(iterator_type begin, iterator_type end,$/;"	f
change_heap	include/click/heap.hh	/^iterator_type change_heap(iterator_type begin, iterator_type end,$/;"	f
change_landmark	tools/click-fastclassifier/click-fastclassifier.cc	/^change_landmark(ElementT *e)$/;"	f	file:
change_param	elements/standard/infinitesource.cc	/^InfiniteSource::change_param(const String &s, Element *e, void *vparam,$/;"	f	class:InfiniteSource
change_param	elements/standard/ratedsource.cc	/^RatedSource::change_param(const String &s, Element *e, void *vparam,$/;"	f	class:RatedSource
change_param	elements/standard/timedsource.cc	/^TimedSource::change_param(const String &s, Element *e, void *vparam,$/;"	f	class:TimedSource
change_ports	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows::change_ports(int flow)$/;"	f	class:FastTCPFlows
change_ports	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows::change_ports(int flow)$/;"	f	class:FastUDPFlows
change_rate	elements/local/FlowNet/shaper/PFShapeFW.cc	/^void PFShapeFW::change_rate( int r ) $/;"	f	class:PFShapeFW
change_rate	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeStaticMpeg2.cc	/^void VcBWShapeStaticMpeg2::change_rate( int r )$/;"	f	class:VcBWShapeStaticMpeg2
change_relative_pixel	apps/clicky/src/dstyle.hh	/^    bool change_relative_pixel() const {$/;"	f	struct:clicky::dcss_property
change_type	apps/clicky/src/dstyle.hh	/^    bool change_type(int t) const {$/;"	f	struct:clicky::dcss_property
channel	include/clicknet/wifi.h	/^		uint8_t		channel;$/;"	m	struct:wifi_information::ds
channel	include/clicknet/wifi.h	/^  p80211item_uint32_t channel;$/;"	m	struct:__anon498
char_to_hex	elements/wifi/fromhandler.cc	/^char_to_hex(char c)$/;"	f
chash_node_t	elements/ip/siphmapper.hh	/^  chash_node_t () {}$/;"	f	class:chash_node_t
chash_node_t	elements/ip/siphmapper.hh	/^  chash_node_t (K k, unsigned short v) : key (k), val (v), index (0) {}$/;"	f	class:chash_node_t
chash_node_t	elements/ip/siphmapper.hh	/^class chash_node_t {$/;"	c
chash_t	elements/ip/siphmapper.hh	/^  chash_t (size_t ns, unsigned short *ids, size_t nn, int seed = 0x1)$/;"	f	class:chash_t
chash_t	elements/ip/siphmapper.hh	/^class chash_t {$/;"	c
chatter_channel	lib/router.cc	/^Router::chatter_channel(const String &name) const$/;"	f	class:Router
chatter_socket_errh	elements/userlevel/chattersocket.cc	/^static ChatterSocketErrorHandler *chatter_socket_errh;$/;"	v	file:
chatterlevel_ceiling	linuxmodule/module.cc	/^static int chatterlevel_ceiling = ErrorHandler::el_error;$/;"	v	file:
check	elements/grid/ackretrysender.cc	/^ACKRetrySender::check()$/;"	f	class:ACKRetrySender
check	elements/grid/ackretrysender2.cc	/^ACKRetrySender2::check()$/;"	f	class:ACKRetrySender2
check	elements/grid/dsdvroutetable.hh	/^    void   check() const {$/;"	f	class:DSDVRouteTable::RTEntry
check	elements/grid/dsrroutetable.cc	/^DSRRouteTable::check()$/;"	f	class:DSRRouteTable
check	elements/grid/dsrroutetable.hh	/^    void check() const { assert(_p); }$/;"	f	class:DSRRouteTable::BufferedPacket
check	elements/grid/dsrroutetable.hh	/^    void check() const {$/;"	f	class:DSRRouteTable::BlacklistEntry
check	elements/grid/dsrroutetable.hh	/^    void check() const {$/;"	f	class:DSRRouteTable::ForwardedReqKey
check	elements/grid/dsrroutetable.hh	/^    void check() const {$/;"	f	class:DSRRouteTable::ForwardedReqVal
check	elements/grid/dsrroutetable.hh	/^    void check() const {$/;"	f	class:DSRRouteTable::InitiatedReq
check	elements/grid/gridroutetable.hh	/^    void check() const { assert(_init); assert((_num_hops > 0) != (_seq_no & 1)); }$/;"	f	class:GridRouteTable::RTEntry
check	elements/ip/ipfilter.cc	/^IPFilter::Primitive::check(const Primitive &prev_prim, int header,$/;"	f	class:IPFilter::Primitive
check	elements/ip/ipreassembler.cc	/^IPReassembler::check(ErrorHandler *errh)$/;"	f	class:IPReassembler
check	elements/ip/lineariplookup.cc	/^LinearIPLookup::check() const$/;"	f	class:LinearIPLookup
check	elements/ip/sortediplookup.cc	/^SortedIPLookup::check() const$/;"	f	class:SortedIPLookup
check	elements/test/comparepackets.cc	/^ComparePackets::check(Packet *p, Packet *q)$/;"	f	class:ComparePackets
check	elements/test/errortest.cc	/^    bool check(const String &text) {$/;"	f	class:__anon401::ErrorTestHandler
check	elements/wifi/probetxrate.hh	/^    void check () {$/;"	f	struct:ProbeTXRate::DstInfo
check	lib/nameinfo.cc	/^DynamicNameDB::check(ErrorHandler *errh)$/;"	f	class:DynamicNameDB
check	lib/nameinfo.cc	/^NameDB::check(ErrorHandler *)$/;"	f	class:NameDB
check	lib/nameinfo.cc	/^NameInfo::check(ErrorHandler *errh)$/;"	f	class:NameInfo
check	lib/nameinfo.cc	/^NameInfo::check(const Element *e, ErrorHandler *errh)$/;"	f	class:NameInfo
check	lib/nameinfo.cc	/^StaticNameDB::check(ErrorHandler *errh)$/;"	f	class:StaticNameDB
check	tools/lib/routert.cc	/^RouterT::check() const$/;"	f	class:RouterT
check1	elements/test/bhmtest.cc	/^check1(HashMap<String, int> &h, ErrorHandler *errh)$/;"	f	file:
check1	elements/test/hashtabletest.cc	/^check1(MAP_S2I &h, ErrorHandler *errh)$/;"	f	file:
checkFrameIntegrity	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^bool FlowMpeg2AdaptDecap::checkFrameIntegrity()$/;"	f	class:FlowMpeg2AdaptDecap
checkHandler	apps/ClickController/ControlSocket.java	/^    public boolean checkHandler(String elementName, String handlerName,$/;"	m	class:ControlSocket
checkHandlerWorkaround	apps/ClickController/ControlSocket.java	/^    private boolean checkHandlerWorkaround(String elementName, String handlerName, boolean writeHandler)$/;"	m	class:ControlSocket	file:
check_awake	elements/ethernet/etherpausesource.cc	/^EtherPauseSource::check_awake()$/;"	f	class:EtherPauseSource
check_blacklist	elements/grid/dsrroutetable.cc	/^DSRRouteTable::check_blacklist(IPAddress ip)$/;"	f	class:DSRRouteTable
check_command	elements/userlevel/controlsocket.cc	/^ControlSocket::check_command(connection &conn, const String &hname, bool write)$/;"	f	class:ControlSocket
check_complete	lib/args.cc	/^Args::check_complete()$/;"	f	class:Args
check_completeness	tools/lib/elementmap.cc	/^ElementMap::check_completeness(const RouterT *r, ErrorHandler *errh) const$/;"	f	class:ElementMap
check_connection_completion	elements/local/OpenFlow/lib/socket-util.cc	/^check_connection_completion(int fd) $/;"	f
check_connections	tools/lib/processingt.cc	/^ProcessingT::check_connections(Vector<ConnectionT> &conn, ErrorHandler *errh)$/;"	f	class:ProcessingT
check_driver	lib/master.cc	/^Master::check_driver()$/;"	f	class:Master
check_error	elements/ip/ipreassembler.cc	/^IPReassembler::check_error(ErrorHandler *errh, int bucket, const Packet *p, const char *format, ...)$/;"	f	class:IPReassembler
check_expects	test/testie	/^sub check_expects ($$$) {$/;"	s
check_handler	apps/csclient/csclient.cc	/^ControlSocketClient::check_handler(string el, string h, bool is_write, bool &exists)$/;"	f	class:ControlSocketClient
check_handler	elements/userlevel/handlerproxy.cc	/^HandlerProxy::check_handler(const String &hname, bool, ErrorHandler *errh)$/;"	f	class:HandlerProxy
check_handler	elements/userlevel/khandlerproxy.cc	/^KernelHandlerProxy::check_handler(const String &hname, bool write, ErrorHandler *errh)$/;"	f	class:KernelHandlerProxy
check_handler_name	apps/clicky/src/cdriver.cc	/^int cdriver::check_handler_name(const String &inname, String &ename, String &hname, ErrorHandler *errh)$/;"	f	class:clicky::cdriver
check_handler_name	elements/userlevel/khandlerproxy.cc	/^KernelHandlerProxy::check_handler_name(const String &hname, ErrorHandler *errh)$/;"	f	class:KernelHandlerProxy
check_handler_workaround	apps/csclient/csclient.cc	/^ControlSocketClient::check_handler_workaround(string el, string h, bool is_write, bool &exists)$/;"	f	class:ControlSocketClient
check_hookup_completeness	lib/router.cc	/^Router::check_hookup_completeness(ErrorHandler *errh)$/;"	f	class:Router
check_hookup_elements	lib/router.cc	/^Router::check_hookup_elements(ErrorHandler *errh)$/;"	f	class:Router
check_hookup_range	lib/router.cc	/^Router::check_hookup_range(ErrorHandler *errh)$/;"	f	class:Router
check_init	apps/csclient/csclient.cc	27;"	d	file:
check_into	tools/click-xform/click-xform.cc	/^Matcher::check_into(const PortT &houtside, const PortT &hinside)$/;"	f	class:Matcher
check_invariants	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::check_invariants(const IPAddress *ignore) const$/;"	f	class:DSDVRouteTable
check_match	lib/elemfilter.cc	/^CastElementFilter::check_match(Element *e, bool, int)$/;"	f	class:CastElementFilter
check_match	lib/elemfilter.cc	/^ElementFilter::check_match(Element *, bool, int)$/;"	f	class:ElementFilter
check_match	tools/click-xform/click-xform.cc	/^Matcher::check_match()$/;"	f	class:Matcher
check_message_type	elements/local/OpenFlow/lib/vconn.cc	/^check_message_type(uint8_t got_type, uint8_t want_type) $/;"	f	file:
check_metric_type	elements/grid/gridroutetable.cc	/^GridRouteTable::check_metric_type(const String &s)$/;"	f	class:GridRouteTable
check_nports	tools/lib/processingt.cc	/^ProcessingT::check_nports(Vector<ConnectionT> &conn, const ElementT *e,$/;"	f	class:ProcessingT
check_null	apps/clicky/src/transform.cc	/^affine::check_null(double tolerance)$/;"	f	class:affine
check_ofp_message	elements/local/OpenFlow/lib/vconn.cc	/^check_ofp_message(const struct ofp_header *msg, uint8_t type, size_t size)$/;"	f
check_ofp_message_array	elements/local/OpenFlow/lib/vconn.cc	/^check_ofp_message_array(const struct ofp_header *msg, uint8_t type,$/;"	f
check_once	tools/click-check/click-check.cc	/^check_once(const RouterT *r, const char *filename,$/;"	f	file:
check_out_of	tools/click-xform/click-xform.cc	/^Matcher::check_out_of(const PortT &hinside, const PortT &houtside)$/;"	f	class:Matcher
check_param	conf/make-dsdv-config.pl	/^sub check_param($$$) {$/;"	s
check_param	conf/make-dsr-config.pl	/^sub check_param($$$) {$/;"	s
check_params	elements/aqm/pi.cc	/^PI::check_params(double w, double a, double b, unsigned target_q,$/;"	f	class:PI
check_params	elements/aqm/red.cc	/^RED::check_params(unsigned min_thresh, unsigned max_thresh,$/;"	f	class:RED
check_port_numbers	tools/click-devirtualize/signature.cc	/^Signatures::check_port_numbers(int eid, const ProcessingT &pt)$/;"	f	class:Signatures
check_processing	tools/lib/processingt.cc	/^ProcessingT::check_processing(Vector<ConnectionT> &conn, ErrorHandler *errh)$/;"	f	class:ProcessingT
check_pseudoelement	lib/lexer.cc	/^Lexer::Compound::check_pseudoelement(int which, bool isoutput, const char *name, ErrorHandler *errh) const$/;"	f	class:Lexer::Compound
check_pseudoelement	tools/lib/routert.cc	/^RouterT::check_pseudoelement(const ElementT *e, bool isoutput, const char *name, ErrorHandler *errh) const$/;"	f	class:RouterT
check_push_and_pull	lib/router.cc	/^Router::check_push_and_pull(ErrorHandler *errh)$/;"	f	class:Router
check_queue	elements/local/OpenFlow/lib/queue.cc	/^check_queue(struct ofp_queue *q UNUSED)$/;"	f	file:
check_rep	include/click/dequeue.cc	/^DEQueue<T>::check_rep()$/;"	f	class:DEQueue
check_space	elements/grid/gridlogger.hh	/^  bool check_space(size_t needed) {$/;"	f	class:GridLogger
check_specialize	tools/click-devirtualize/specializer.cc	/^Specializer::check_specialize(int eindex, ErrorHandler *errh)$/;"	f	class:Specializer
check_state	elements/grid/gridlogger.hh	/^  bool check_state(state_t s) {$/;"	f	class:GridLogger
check_subgraph_isomorphism	tools/click-xform/adjacency.cc	/^check_subgraph_isomorphism(const RouterT *pat, const RouterT *input,$/;"	f
check_timer_expiry	lib/timerset.cc	/^TimerSet::check_timer_expiry(Timer *t)$/;"	f	class:TimerSet
check_timing	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::check_timing(Packet *p)$/;"	f	class:FromIPSummaryDump
check_tmpdir	lib/driver.cc	/^check_tmpdir(const Vector<ArchiveElement> &archive, bool populate_tmpdir,$/;"	f	file:
check_types	tools/lib/processingt.cc	/^ProcessingT::check_types(ErrorHandler *errh)$/;"	f	class:ProcessingT
check_units	lib/args.cc	/^UnitArg::check_units()$/;"	f	class:UnitArg
check_validity	elements/local/FlowNet/common/PacketQueue.hh	/^inline int PacketQueue::check_validity()$/;"	f	class:PacketQueue
check_validity	elements/local/FlowNet/libtable/TableLinear.hh	/^int VcTableLinear<T>::check_validity()$/;"	f	class:VcTableLinear
check_vconn_classes	elements/local/OpenFlow/lib/vconn.cc	/^check_vconn_classes(void)$/;"	f	file:
checkdb	lib/nameinfo.cc	/^NameInfo::checkdb(NameDB *db, NameDB *parent, ErrorHandler *errh)$/;"	f	class:NameInfo
checked_output_push	include/click/element.hh	/^Element::checked_output_push(int port, Packet* p) const$/;"	f	class:Element
checker_name	tools/click-align/click-align.cc	/^checker_name(int anonymizer)$/;"	f
checkreplaywindow	elements/ipsec/desp.cc	/^IPsecESPUnencap::checkreplaywindow(SADataTuple * sa_data,unsigned long seq)$/;"	f	class:IPsecESPUnencap
checksum	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t checksum;$/;"	m	struct:e1000_host_command_header
checksum	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t checksum;$/;"	m	struct:e1000_host_mng_command_header
checksum	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t checksum;$/;"	m	struct:e1000_host_mng_dhcp_cookie
checksum	include/clicknet/ether.h	/^    uint16_t checksum;$/;"	m	struct:click_nd_adv
checksum	include/clicknet/ether.h	/^    uint16_t checksum;$/;"	m	struct:click_nd_adv2
checksum	include/clicknet/ether.h	/^    uint16_t checksum;$/;"	m	struct:click_nd_sol
checksumIP	elements/local/FlowNet/utils/FlowNetUtils.cc	/^void checksumIP( Packet* p, int offset )$/;"	f
checksumUDP	elements/local/FlowNet/utils/FlowNetUtils.cc	/^void checksumUDP( Packet* p, int offset )$/;"	f
child	elements/analysis/aggcounter.hh	/^	Node *child[2];$/;"	m	struct:AggregateCounter::Node
child	elements/analysis/anonipaddr.hh	/^	Node *child[2];$/;"	m	struct:AnonymizeIPAddr::Node
child	elements/ip/radixiplookup.cc	/^	Radix *child;$/;"	m	struct:RadixIPLookup::Radix::Child	file:
child	elements/ipsec/radixipseclookup.hh	/^	Radix* child;$/;"	m	struct:RadixIPsecLookup::Radix::Child
choose_new_leg	elements/grid/gridlocationinfo.cc	/^GridLocationInfo::choose_new_leg(double *nlat, double *nlon, double *nt)$/;"	f	class:GridLocationInfo
choose_new_leg	elements/grid/locfromfile.cc	/^LocFromFile::choose_new_leg(double *nlat, double *nlon, double *nt)$/;"	f	class:LocFromFile
chunks	lib/glue.cc	/^static Chunk chunks = {$/;"	v	file:
ci	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	struct CDInfo ci[MAX_CD_ALGORITHMS];$/;"	m	class:FlowSchedulable	typeref:struct:FlowSchedulable::CDInfo
ciaddr	include/clicknet/dhcp.h	/^	uint32_t ciaddr;       \/* (previously allocated) client IP address *\/$/;"	m	struct:click_dhcp
cid	tools/click-pretty/click-pretty.cc	/^cid(ElementClassT *type)$/;"	f	file:
cid2class	tools/click-pretty/click-pretty.cc	/^static Vector<ElementClassT *> cid2class;$/;"	v	file:
cid_hrefs	tools/click-pretty/click-pretty.cc	/^static Vector<String> cid_hrefs;$/;"	v	file:
cids	tools/click-fastclassifier/click-fastclassifier.cc	/^static Vector<FastClassifier_Cid *> cids;$/;"	v	file:
cksum	elements/grid/grid.hh	/^    uint16_t cksum;     \/\/ Over the whole packet, starting at grid_hdr.$/;"	m	struct:grid_hdr
cksum	elements/grid/linkstat.hh	/^    unsigned short cksum;     \/\/ internet checksum$/;"	m	struct:LinkStat::link_probe
cksum_offset	elements/grid/linkstat.hh	/^    static const int cksum_offset = 16;$/;"	m	struct:LinkStat::link_probe
clamp	elements/local/OpenFlow/lib/stp.cc	/^clamp(int x, int min, int max)$/;"	f	file:
class	include/click/cxxprotect.h	5;"	d
class	include/click/cxxunprotect.h	5;"	d
class_factory	tools/click-align/click-align.cc	/^static ElementClassT *class_factory(const String &name)$/;"	f	file:
class_href	tools/click-pretty/click-pretty.cc	/^class_href(ElementClassT *type)$/;"	f	file:
class_id	elements/local/OpenFlow/datapath.hh	/^	uint16_t class_id; \/* internal mapping from OF queue_id to tc class_id *\/$/;"	m	struct:sw_queue
class_id	tools/click2xml/xml2click.hh	/^    String class_id;$/;"	m	struct:CxElement
class_name	elements/analysis/adjusttimestamp.hh	/^    const char *class_name() const		{ return "AdjustTimestamp"; }$/;"	f	class:AdjustTimestamp
class_name	elements/analysis/aggcounter.hh	/^    const char *class_name() const	{ return "AggregateCounter"; }$/;"	f	class:AggregateCounter
class_name	elements/analysis/aggpktcounter.hh	/^    const char *class_name() const	{ return "AggregatePacketCounter"; }$/;"	f	class:AggregatePacketCounter
class_name	elements/analysis/aggregatefilter.hh	/^    const char *class_name() const	{ return "AggregateFilter"; }$/;"	f	class:AggregateFilter
class_name	elements/analysis/aggregatefirst.hh	/^    const char *class_name() const	{ return "AggregateFirst"; }$/;"	f	class:AggregateFirst
class_name	elements/analysis/aggregateip.hh	/^    const char *class_name() const	{ return "AggregateIP"; }$/;"	f	class:AggregateIP
class_name	elements/analysis/aggregateipaddrpair.hh	/^    const char *class_name() const	{ return "AggregateIPAddrPair"; }$/;"	f	class:AggregateIPAddrPair
class_name	elements/analysis/aggregateipflows.hh	/^    const char *class_name() const	{ return "AggregateIPFlows"; }$/;"	f	class:AggregateIPFlows
class_name	elements/analysis/aggregatelast.hh	/^    const char *class_name() const	{ return "AggregateLast"; }$/;"	f	class:AggregateLast
class_name	elements/analysis/aggregatelen.hh	/^    const char *class_name() const	{ return "AggregateLength"; }$/;"	f	class:AggregateLength
class_name	elements/analysis/aggregatepaint.hh	/^    const char *class_name() const	{ return "AggregatePaint"; }$/;"	f	class:AggregatePaint
class_name	elements/analysis/anonipaddr.hh	/^    const char *class_name() const	{ return "AnonymizeIPAddr"; }$/;"	f	class:AnonymizeIPAddr
class_name	elements/analysis/eraseippayload.hh	/^    const char *class_name() const	{ return "EraseIPPayload"; }$/;"	f	class:EraseIPPayload
class_name	elements/analysis/fromcapdump.hh	/^    const char *class_name() const	{ return "FromCapDump"; }$/;"	f	class:FromCapDump
class_name	elements/analysis/fromdagdump.hh	/^    const char *class_name() const		{ return "FromDAGDump"; }$/;"	f	class:FromDAGDump
class_name	elements/analysis/fromflandump.hh	/^    const char *class_name() const		{ return "FromFlanDump"; }$/;"	f	class:FromFlanDump
class_name	elements/analysis/fromipsumdump.hh	/^    const char *class_name() const	{ return "FromIPSummaryDump"; }$/;"	f	class:FromIPSummaryDump
class_name	elements/analysis/fromnetflowsumdump.hh	/^    const char *class_name() const	{ return "FromNetFlowSummaryDump"; }$/;"	f	class:FromNetFlowSummaryDump
class_name	elements/analysis/fromnlanrdump.hh	/^    const char *class_name() const		{ return "FromNLANRDump"; }$/;"	f	class:FromNLANRDump
class_name	elements/analysis/fromtcpdump.hh	/^    const char *class_name() const	{ return "FromTcpdump"; }$/;"	f	class:FromTcpdump
class_name	elements/analysis/settimestampdelta.hh	/^    const char *class_name() const	{ return "SetTimestampDelta"; }$/;"	f	class:SetTimestampDelta
class_name	elements/analysis/storetimestamp.hh	/^    const char *class_name() const	{ return "StoreTimestamp"; }$/;"	f	class:StoreTimestamp
class_name	elements/analysis/storeudptimeseqrecord.hh	/^    const char *class_name() const	{ return "StoreUDPTimeSeqRecord"; }$/;"	f	class:StoreUDPTimeSeqRecord
class_name	elements/analysis/timefilter.hh	/^    const char *class_name() const	{ return "TimeFilter"; }$/;"	f	class:TimeFilter
class_name	elements/analysis/timerange.hh	/^    const char *class_name() const	{ return "TimeRange"; }$/;"	f	class:TimeRange
class_name	elements/analysis/timesortedsched.hh	/^    const char *class_name() const	{ return "TimeSortedSched"; }$/;"	f	class:TimeSortedSched
class_name	elements/analysis/timestampaccum.hh	/^    const char *class_name() const	{ return "TimestampAccum"; }$/;"	f	class:TimestampAccum
class_name	elements/analysis/toipflowdumps.hh	/^    const char *class_name() const	{ return "ToIPFlowDumps"; }$/;"	f	class:ToIPFlowDumps
class_name	elements/analysis/toipsumdump.hh	/^    const char *class_name() const	{ return "ToIPSummaryDump"; }$/;"	f	class:ToIPSummaryDump
class_name	elements/app/ftpportmapper.hh	/^    const char *class_name() const	{ return "FTPPortMapper"; }$/;"	f	class:FTPPortMapper
class_name	elements/aqm/adaptivered.hh	/^    const char *class_name() const		{ return "AdaptiveRED"; }$/;"	f	class:AdaptiveRED
class_name	elements/aqm/pi.hh	/^    const char *class_name() const		{ return "PI"; }$/;"	f	class:PI
class_name	elements/aqm/red.hh	/^    const char *class_name() const		{ return "RED"; }$/;"	f	class:RED
class_name	elements/bsdmodule/fastudpsrc.hh	/^  const char *class_name() const	{ return "FastUDPSource"; }$/;"	f	class:FastUDPSource
class_name	elements/bsdmodule/fromdevice.hh	/^    const char *class_name() const	{ return "FromDevice"; }$/;"	f	class:FromDevice
class_name	elements/bsdmodule/fromhost.hh	/^    const char *class_name() const	{ return "FromHost"; }$/;"	f	class:FromHost
class_name	elements/bsdmodule/todevice.hh	/^  const char *class_name() const	{ return "ToDevice"; }$/;"	f	class:ToDevice
class_name	elements/bsdmodule/tohost.hh	/^    const char *class_name() const      { return "ToHost"; }$/;"	f	class:ToHost
class_name	elements/bsdmodule/tohostsniffers.hh	/^    const char *class_name() const		{ return "ToHostSniffers"; }$/;"	f	class:ToHostSniffers
class_name	elements/ethernet/arpfaker.hh	/^  const char *class_name() const		{ return "ARPFaker"; }$/;"	f	class:ARPFaker
class_name	elements/ethernet/arpprint.hh	/^    const char *class_name() const		{ return "ARPPrint"; }$/;"	f	class:ARPPrint
class_name	elements/ethernet/arpquerier.hh	/^    const char *class_name() const		{ return "ARPQuerier"; }$/;"	f	class:ARPQuerier
class_name	elements/ethernet/arpresponder.hh	/^    const char *class_name() const		{ return "ARPResponder"; }$/;"	f	class:ARPResponder
class_name	elements/ethernet/arptable.hh	/^    const char *class_name() const		{ return "ARPTable"; }$/;"	f	class:ARPTable
class_name	elements/ethernet/checkarpheader.hh	/^    const char *class_name() const		{ return "CheckARPHeader"; }$/;"	f	class:CheckARPHeader
class_name	elements/ethernet/ensureether.hh	/^  const char *class_name() const	{ return "EnsureEther"; }$/;"	f	class:EnsureEther
class_name	elements/ethernet/etherencap.hh	/^    const char *class_name() const	{ return "EtherEncap"; }$/;"	f	class:EtherEncap
class_name	elements/ethernet/ethermirror.hh	/^  const char *class_name() const	{ return "EtherMirror"; }$/;"	f	class:EtherMirror
class_name	elements/ethernet/etherpausesource.hh	/^    const char *class_name() const	{ return "EtherPauseSource"; }$/;"	f	class:EtherPauseSource
class_name	elements/ethernet/ethervlanannoencap.hh	/^    const char *class_name() const	{ return "EtherVLANEncap"; }$/;"	f	class:EtherVLANAnnoEncap
class_name	elements/ethernet/ethervlanencap.hh	/^    const char *class_name() const	{ return "EtherVLANEncap"; }$/;"	f	class:EtherVLANEncap
class_name	elements/ethernet/hostetherfilter.hh	/^  const char *class_name() const		{ return "HostEtherFilter"; }$/;"	f	class:HostEtherFilter
class_name	elements/ethernet/ip6ndadvertiser.hh	/^  const char *class_name() const		{ return "IP6NDAdvertiser"; }$/;"	f	class:IP6NDAdvertiser
class_name	elements/ethernet/ip6ndsolicitor.hh	/^  const char *class_name() const		{ return "IP6NDSolicitor"; }$/;"	f	class:IP6NDSolicitor
class_name	elements/ethernet/setvlananno.hh	/^    const char *class_name() const	{ return "SetVLANAnno"; }$/;"	f	class:SetVLANAnno
class_name	elements/ethernet/storeetheraddress.hh	/^    const char *class_name() const		{ return "StoreEtherAddress"; }$/;"	f	class:StoreEtherAddress
class_name	elements/ethernet/stripetherheader.hh	/^  const char *class_name() const	{ return "EtherEncap"; }$/;"	f	class:EtherEncap
class_name	elements/ethernet/stripethervlanheader.hh	/^    const char *class_name() const	{ return "StripEtherVLANHeader"; }$/;"	f	class:StripEtherVLANHeader
class_name	elements/ethernet/vlandecap.hh	/^    const char *class_name() const	{ return "VLANDecap"; }$/;"	f	class:VLANDecap
class_name	elements/ethernet/vlanencap.hh	/^    const char *class_name() const	{ return "VLANEncap"; }$/;"	f	class:VLANEncap
class_name	elements/etherswitch/debugbridge.hh	/^  const char *class_name() const	{ return "DebugBridge"; }$/;"	f	class:DebugBridge
class_name	elements/etherswitch/etherswitch.hh	/^  const char *class_name() const		{ return "EtherSwitch"; }$/;"	f	class:EtherSwitch
class_name	elements/etherswitch/listenetherswitch.hh	/^    const char *class_name() const		{ return "ListenEtherSwitch"; }$/;"	f	class:ListenEtherSwitch
class_name	elements/etherswitch/spantree.hh	/^  const char *class_name() const		{ return "EtherSpanTree"; }$/;"	f	class:EtherSpanTree
class_name	elements/grid/ackresponder.hh	/^  const char *class_name() const { return "ACKResponder"; }$/;"	f	class:ACKResponder
class_name	elements/grid/ackresponder2.hh	/^  const char *class_name() const { return "ACKResponder2"; }$/;"	f	class:ACKResponder2
class_name	elements/grid/ackretrysender.hh	/^  const char *class_name() const { return "ACKRetrySender"; }$/;"	f	class:ACKRetrySender
class_name	elements/grid/ackretrysender2.hh	/^  const char *class_name() const { return "ACKRetrySender2"; }$/;"	f	class:ACKRetrySender2
class_name	elements/grid/airoinfo.hh	/^  const char *class_name() const		{ return "AiroInfo"; }$/;"	f	class:AiroInfo
class_name	elements/grid/bottleneckmetric.hh	/^  const char *class_name() const { return "BottleneckMetric"; }$/;"	f	class:BottleneckMetric
class_name	elements/grid/checkgridheader.hh	/^  const char *class_name() const		{ return "CheckGridHeader"; }$/;"	f	class:CheckGridHeader
class_name	elements/grid/dsdvroutetable.hh	/^  const char *class_name() const		{ return "DSDVRouteTable"; }$/;"	f	class:DSDVRouteTable
class_name	elements/grid/dsrarptable.hh	/^  const char *class_name() const	{ return "DSRArpTable"; }$/;"	f	class:DSRArpTable
class_name	elements/grid/dsrroutetable.hh	/^  const char *class_name() const { return "DSRRouteTable"; }$/;"	f	class:DSRRouteTable
class_name	elements/grid/e2elossmetric.hh	/^  const char *class_name() const { return "E2ELossMetric"; }$/;"	f	class:E2ELossMetric
class_name	elements/grid/etx2metric.hh	/^  const char *class_name() const { return "ETX2Metric"; }$/;"	f	class:ETX2Metric
class_name	elements/grid/etxmetric.hh	/^  const char *class_name() const { return "ETXMetric"; }$/;"	f	class:ETXMetric
class_name	elements/grid/filterbyhops.hh	/^  const char *class_name() const		{ return "FilterByGridHops"; }$/;"	f	class:FilterByGridHops
class_name	elements/grid/filterbyrange.hh	/^  const char *class_name() const		{ return "FilterByRange"; }$/;"	f	class:FilterByRange
class_name	elements/grid/fixdstloc.hh	/^  const char *class_name() const		{ return "FixDstLoc"; }$/;"	f	class:FixDstLoc
class_name	elements/grid/fixsrcloc.hh	/^  const char *class_name() const		{ return "FixSrcLoc"; }$/;"	f	class:FixSrcLoc
class_name	elements/grid/floodinglocquerier.hh	/^  const char *class_name() const		{ return "FloodingLocQuerier"; }$/;"	f	class:FloodingLocQuerier
class_name	elements/grid/gridencap.hh	/^  const char *class_name() const		{ return "GridEncap"; }$/;"	f	class:GridEncap
class_name	elements/grid/gridgatewayinfo.hh	/^  const char *class_name() const { return "GridGatewayInfo"; }$/;"	f	class:GridGatewayInfo
class_name	elements/grid/gridheaderinfo.hh	/^  const char *class_name() const { return "GridHeaderInfo"; }$/;"	f	class:GridHeaderInfo
class_name	elements/grid/gridlocationinfo.hh	/^  const char *class_name() const { return "GridLocationInfo"; }$/;"	f	class:GridLocationInfo
class_name	elements/grid/gridlocationinfo2.hh	/^  const char *class_name() const { return "GridLocationInfo2"; }$/;"	f	class:GridLocationInfo2
class_name	elements/grid/gridlogger.hh	/^  const char *class_name() const { return "GridLogger"; }$/;"	f	class:GridLogger
class_name	elements/grid/gridprobehandler.hh	/^  const char *class_name() const		{ return "GridProbeHandler"; }$/;"	f	class:GridProbeHandler
class_name	elements/grid/gridprobereplyreceiver.hh	/^  const char *class_name() const		{ return "GridProbeReplyReceiver"; }$/;"	f	class:GridProbeReplyReceiver
class_name	elements/grid/gridprobesender.hh	/^  const char *class_name() const		{ return "GridProbeSender"; }$/;"	f	class:GridProbeSender
class_name	elements/grid/gridproxy.hh	/^    const char *class_name() const { return "GridProxy"; }$/;"	f	class:GridProxy
class_name	elements/grid/gridroutetable.hh	/^  const char *class_name() const		{ return "GridRouteTable"; }$/;"	f	class:GridRouteTable
class_name	elements/grid/gridsrforwarder.hh	/^  const char *class_name() const { return "GridSRForwarder"; }$/;"	f	class:GridSRForwarder
class_name	elements/grid/gridtxerror.hh	/^  const char *class_name() const { return "GridTxError"; }$/;"	f	class:GridTxError
class_name	elements/grid/hello.hh	/^  const char *class_name() const		{ return "SendGridHello"; }$/;"	f	class:SendGridHello
class_name	elements/grid/hopcountmetric.hh	/^  const char *class_name() const { return "HopcountMetric"; }$/;"	f	class:HopcountMetric
class_name	elements/grid/incseqno.hh	/^  const char *class_name() const		{ return "IncrementSeqNo"; }$/;"	f	class:IncrementSeqNo
class_name	elements/grid/linkstat.hh	/^  const char *class_name() const		{ return "LinkStat"; }$/;"	f	class:LinkStat
class_name	elements/grid/linktester.hh	/^  const char *class_name() const { return "LinkTester"; }$/;"	f	class:LinkTester
class_name	elements/grid/linktestreceiver.hh	/^  const char *class_name() const { return "LinkTestReceiver"; }$/;"	f	class:LinkTestReceiver
class_name	elements/grid/linktracker.hh	/^  const char *class_name() const		{ return "LinkTracker"; }$/;"	f	class:LinkTracker
class_name	elements/grid/lirmetric.hh	/^  const char *class_name() const { return "LIRMetric"; }$/;"	f	class:LIRMetric
class_name	elements/grid/locfromfile.hh	/^  const char *class_name() const { return "LocFromFile"; }$/;"	f	class:LocFromFile
class_name	elements/grid/locqueryresponder.hh	/^  const char *class_name() const		{ return "LocQueryResponder"; }$/;"	f	class:LocQueryResponder
class_name	elements/grid/loctable.hh	/^  const char *class_name() const { return "LocationTable"; }$/;"	f	class:LocationTable
class_name	elements/grid/lookupgeogridroute.hh	/^  const char *class_name() const		{ return "LookupGeographicGridRoute"; }$/;"	f	class:LookupGeographicGridRoute
class_name	elements/grid/lookuplocalgridroute.hh	/^  const char *class_name() const		{ return "LookupLocalGridRoute"; }$/;"	f	class:LookupLocalGridRoute
class_name	elements/grid/lookuplocalgridroute2.hh	/^  const char *class_name() const	{ return "LookupLocalGridRoute2"; }$/;"	f	class:LookupLocalGridRoute2
class_name	elements/grid/lrhello.hh	/^  const char *class_name() const		{ return "SendGridLRHello"; }$/;"	f	class:SendGridLRHello
class_name	elements/grid/movesim.hh	/^  const char *class_name() const { return "MovementSimulator"; }$/;"	f	class:MovementSimulator
class_name	elements/grid/packetlogger.hh	/^  const char *class_name() const		{ return "PacketLogger"; }$/;"	f	class:PacketLogger
class_name	elements/grid/packetlogger2.hh	/^  const char *class_name() const		{ return "PacketLogger2"; }$/;"	f	class:PacketLogger2
class_name	elements/grid/pep.hh	/^  const char *class_name() const		{ return "PEP"; }$/;"	f	class:PEP
class_name	elements/grid/pingpong.hh	/^  const char *class_name() const		{ return "PingPong"; }$/;"	f	class:PingPong
class_name	elements/grid/printgrid.hh	/^  const char *class_name() const		{ return "PrintGrid"; }$/;"	f	class:PrintGrid
class_name	elements/grid/radiosim.hh	/^  const char *class_name() const		{ return "RadioSim"; }$/;"	f	class:RadioSim
class_name	elements/grid/regionpep.hh	/^  const char *class_name() const		{ return "EstimateRouterRegion"; }$/;"	f	class:EstimateRouterRegion
class_name	elements/grid/setgridchecksum.hh	/^  const char *class_name() const		{ return "SetGridChecksum"; }$/;"	f	class:SetGridChecksum
class_name	elements/grid/simplelocquerier.hh	/^  const char *class_name() const		{ return "SimpleLocQuerier"; }$/;"	f	class:SimpleLocQuerier
class_name	elements/grid/stripdsrheader.hh	/^    const char *class_name() const		{ return "StripDSRHeader"; }$/;"	f	class:StripDSRHeader
class_name	elements/grid/threshmetric.hh	/^  const char *class_name() const { return "ThresholdMetric"; }$/;"	f	class:ThresholdMetric
class_name	elements/grid/unstripdsrheader.hh	/^  const char *class_name() const		{ return "UnstripDSRHeader"; }$/;"	f	class:UnstripDSRHeader
class_name	elements/grid/updateroutes.hh	/^  const char *class_name() const		{ return "UpdateGridRoutes"; }$/;"	f	class:UpdateGridRoutes
class_name	elements/grid/yarvismetric.hh	/^  const char *class_name() const { return "YarvisMetric"; }$/;"	f	class:YarvisMetric
class_name	elements/icmp/checkicmpheader.hh	/^  const char *class_name() const		{ return "CheckICMPHeader"; }$/;"	f	class:CheckICMPHeader
class_name	elements/icmp/icmperror.hh	/^    const char *class_name() const		{ return "ICMPError"; }$/;"	f	class:ICMPError
class_name	elements/icmp/icmpipencap.hh	/^    const char *class_name() const		{ return "ICMPIPEncap"; }$/;"	f	class:ICMPIPEncap
class_name	elements/icmp/icmppingencap.hh	/^    const char *class_name() const		{ return "ICMPPingEncap"; }$/;"	f	class:ICMPPingEncap
class_name	elements/icmp/icmppingresponder.hh	/^  const char *class_name() const	{ return "ICMPPingResponder"; }$/;"	f	class:ICMPPingResponder
class_name	elements/icmp/icmppingrewriter.hh	/^    const char *class_name() const	{ return "ICMPPingRewriter"; }$/;"	f	class:ICMPPingRewriter
class_name	elements/icmp/icmprewriter.hh	/^    const char *class_name() const	{ return "ICMPRewriter"; }$/;"	f	class:ICMPRewriter
class_name	elements/icmp/icmpsendpings.hh	/^    const char *class_name() const		{ return "ICMPPingSource"; }$/;"	f	class:ICMPPingSource
class_name	elements/ip/checkipheader.hh	/^  const char *class_name() const		{ return "CheckIPHeader"; }$/;"	f	class:CheckIPHeader
class_name	elements/ip/checkipheader2.hh	/^  const char *class_name() const		{ return "CheckIPHeader2"; }$/;"	f	class:CheckIPHeader2
class_name	elements/ip/decipttl.hh	/^    const char *class_name() const		{ return "DecIPTTL"; }$/;"	f	class:DecIPTTL
class_name	elements/ip/directiplookup.hh	/^    const char *class_name() const	{ return "DirectIPLookup"; }$/;"	f	class:DirectIPLookup
class_name	elements/ip/fixipsrc.hh	/^  const char *class_name() const		{ return "FixIPSrc"; }$/;"	f	class:FixIPSrc
class_name	elements/ip/getipaddress.hh	/^  const char *class_name() const		{ return "GetIPAddress"; }$/;"	f	class:GetIPAddress
class_name	elements/ip/ipaddrpairrewriter.hh	/^    const char *class_name() const		{ return "IPAddrPairRewriter"; }$/;"	f	class:IPAddrPairRewriter
class_name	elements/ip/ipaddrrewriter.hh	/^    const char *class_name() const		{ return "IPAddrRewriter"; }$/;"	f	class:IPAddrRewriter
class_name	elements/ip/ipclassifier.hh	/^  const char *class_name() const		{ return "IPClassifier"; }$/;"	f	class:IPClassifier
class_name	elements/ip/ipencap.hh	/^  const char *class_name() const		{ return "IPEncap"; }$/;"	f	class:IPEncap
class_name	elements/ip/ipfieldinfo.hh	/^    const char *class_name() const	{ return "IPFieldInfo"; }$/;"	f	class:IPFieldInfo
class_name	elements/ip/ipfilter.hh	/^    const char *class_name() const		{ return "IPFilter"; }$/;"	f	class:IPFilter
class_name	elements/ip/ipfragmenter.hh	/^  const char *class_name() const		{ return "IPFragmenter"; }$/;"	f	class:IPFragmenter
class_name	elements/ip/ipgwoptions.hh	/^  const char *class_name() const		{ return "IPGWOptions"; }$/;"	f	class:IPGWOptions
class_name	elements/ip/ipinputcombo.hh	/^  const char *class_name() const		{ return "IPInputCombo"; }$/;"	f	class:IPInputCombo
class_name	elements/ip/ipmirror.hh	/^    const char *class_name() const		{ return "IPMirror"; }$/;"	f	class:IPMirror
class_name	elements/ip/ipnameinfo.hh	/^    const char *class_name() const		{ return "IPNameInfo"; }$/;"	f	class:IPNameInfo
class_name	elements/ip/ipoutputcombo.hh	/^  const char *class_name() const		{ return "IPOutputCombo"; }$/;"	f	class:IPOutputCombo
class_name	elements/ip/ipprint.hh	/^  const char *class_name() const		{ return "IPPrint"; }$/;"	f	class:IPPrint
class_name	elements/ip/ipratemon.hh	/^  const char *class_name() const		{ return "IPRateMonitor"; }$/;"	f	class:IPRateMonitor
class_name	elements/ip/ipreassembler.hh	/^    const char *class_name() const	{ return "IPReassembler"; }$/;"	f	class:IPReassembler
class_name	elements/ip/iprwpatterns.hh	/^    const char *class_name() const { return "IPRewriterPatterns"; }$/;"	f	class:IPRewriterPatterns
class_name	elements/ip/lineariplookup.hh	/^    const char *class_name() const	{ return "LinearIPLookup"; }$/;"	f	class:LinearIPLookup
class_name	elements/ip/lookupiproute.hh	/^    const char *class_name() const	{ return "StaticIPLookup"; }$/;"	f	class:StaticIPLookup
class_name	elements/ip/lookupiproutelinux.hh	/^  const char *class_name() const	{ return "LinuxIPLookup"; }$/;"	f	class:LinuxIPLookup
class_name	elements/ip/lookupiproutemp.hh	/^  const char *class_name() const		{ return "LookupIPRouteMP"; }$/;"	f	class:LookupIPRouteMP
class_name	elements/ip/markipce.hh	/^    const char *class_name() const		{ return "MarkIPCE"; }$/;"	f	class:MarkIPCE
class_name	elements/ip/markipheader.hh	/^  const char *class_name() const		{ return "MarkIPHeader"; }$/;"	f	class:MarkIPHeader
class_name	elements/ip/poundradixiplookup.hh	/^    const char *class_name() const	{ return "PoundRadixIPLookup"; }$/;"	f	class:PoundRadixIPLookup
class_name	elements/ip/radixiplookup.hh	/^    const char *class_name() const		{ return "RadixIPLookup"; }$/;"	f	class:RadixIPLookup
class_name	elements/ip/rangeiplookup.hh	/^    const char *class_name() const      { return "RangeIPLookup"; }$/;"	f	class:RangeIPLookup
class_name	elements/ip/rfc2507c.hh	/^  const char *class_name() const		{ return "RFC2507Comp"; }$/;"	f	class:RFC2507c
class_name	elements/ip/rfc2507d.hh	/^  const char *class_name() const		{ return "RFC2507Decomp"; }$/;"	f	class:RFC2507d
class_name	elements/ip/ripsend.hh	/^  const char *class_name() const		{ return "RIPSend"; }$/;"	f	class:RIPSend
class_name	elements/ip/rripmapper.hh	/^  const char *class_name() const	{ return "RoundRobinIPMapper"; }$/;"	f	class:RoundRobinIPMapper
class_name	elements/ip/setipaddress.hh	/^  const char *class_name() const		{ return "SetIPAddress"; }$/;"	f	class:SetIPAddress
class_name	elements/ip/setipchecksum.hh	/^  const char *class_name() const		{ return "SetIPChecksum"; }$/;"	f	class:SetIPChecksum
class_name	elements/ip/setipdscp.hh	/^  const char *class_name() const		{ return "SetIPDSCP"; }$/;"	f	class:SetIPDSCP
class_name	elements/ip/setipecn.hh	/^    const char *class_name() const		{ return "SetIPECN"; }$/;"	f	class:SetIPECN
class_name	elements/ip/setrandipaddress.hh	/^  const char *class_name() const	{ return "SetRandIPAddress"; }$/;"	f	class:SetRandIPAddress
class_name	elements/ip/siphmapper.hh	/^  const char *class_name() const	{ return "SourceIPHashMapper"; }$/;"	f	class:SourceIPHashMapper
class_name	elements/ip/sortediplookup.hh	/^    const char *class_name() const	{ return "SortedIPLookup"; }$/;"	f	class:SortedIPLookup
class_name	elements/ip/storeipaddress.hh	/^    const char *class_name() const		{ return "StoreIPAddress"; }$/;"	f	class:StoreIPAddress
class_name	elements/ip/stripipheader.hh	/^    const char *class_name() const		{ return "StripIPHeader"; }$/;"	f	class:StripIPHeader
class_name	elements/ip/truncateippayload.hh	/^    const char *class_name() const		{ return "TruncateIPPayload"; }$/;"	f	class:TruncateIPPayload
class_name	elements/ip/unstripipheader.hh	/^  const char *class_name() const		{ return "UnstripIPHeader"; }$/;"	f	class:UnstripIPHeader
class_name	elements/ip6/addresstranslator.hh	/^  const char *class_name() const		{ return "AddressTranslator"; }$/;"	f	class:AddressTranslator
class_name	elements/ip6/checkip6header.hh	/^  const char *class_name() const		{ return "CheckIP6Header"; }$/;"	f	class:CheckIP6Header
class_name	elements/ip6/decip6hlim.hh	/^  const char *class_name() const		{ return "DecIP6HLIM"; }$/;"	f	class:DecIP6HLIM
class_name	elements/ip6/getip6address.hh	/^  const char *class_name() const	{ return "GetIP6Address"; }$/;"	f	class:GetIP6Address
class_name	elements/ip6/icmp6error.hh	/^  const char *class_name() const		{ return "ICMP6Error"; }$/;"	f	class:ICMP6Error
class_name	elements/ip6/ip6encap.hh	/^  const char *class_name() const        { return "IP6Encap"; }$/;"	f	class:IP6Encap
class_name	elements/ip6/ip6fragmenter.hh	/^  const char *class_name() const		{ return "IP6Fragmenter"; }$/;"	f	class:IP6Fragmenter
class_name	elements/ip6/ip6mirror.hh	/^  const char *class_name() const		{ return "IP6Mirror"; }$/;"	f	class:IP6Mirror
class_name	elements/ip6/ip6print.hh	/^  const char *class_name() const		{ return "IP6Print"; }$/;"	f	class:IP6Print
class_name	elements/ip6/lookupip6route.hh	/^  const char *class_name() const		{ return "LookupIP6Route"; }$/;"	f	class:LookupIP6Route
class_name	elements/ip6/markip6header.hh	/^  const char *class_name() const		{ return "MarkIP6Header"; }$/;"	f	class:MarkIP6Header
class_name	elements/ip6/protocoltranslator46.hh	/^  const char *class_name() const		{ return "ProtocolTranslator46"; }$/;"	f	class:ProtocolTranslator46
class_name	elements/ip6/protocoltranslator64.hh	/^  const char *class_name() const		{ return "ProtocolTranslator64"; }$/;"	f	class:ProtocolTranslator64
class_name	elements/ip6/setip6address.hh	/^  const char *class_name() const		{ return "SetIP6Address"; }$/;"	f	class:SetIP6Address
class_name	elements/ip6/setip6dscp.hh	/^    const char *class_name() const	{ return "SetIP6DSCP"; }$/;"	f	class:SetIP6DSCP
class_name	elements/ipsec/aes.hh	/^   const char *class_name() const	{ return "IPsecAES"; }$/;"	f	class:Aes
class_name	elements/ipsec/des.hh	/^  const char *class_name() const	{ return "IPsecDES"; }$/;"	f	class:Des
class_name	elements/ipsec/desp.hh	/^  const char *class_name() const	{ return "IPsecESPUnencap"; }$/;"	f	class:IPsecESPUnencap
class_name	elements/ipsec/esp.hh	/^  const char *class_name() const	{ return "IPsecESPEncap"; }$/;"	f	class:IPsecESPEncap
class_name	elements/ipsec/hmacsha1.hh	/^  const char *class_name() const	{ return "IPsecAuthHMACSHA1"; }$/;"	f	class:IPsecAuthHMACSHA1
class_name	elements/ipsec/ipsecencap.hh	/^  const char *class_name() const		{ return "IPsecEncap"; }$/;"	f	class:IPsecEncap
class_name	elements/ipsec/radixipseclookup.hh	/^    const char *class_name() const		{ return "RadixIPsecLookup"; }$/;"	f	class:RadixIPsecLookup
class_name	elements/ipsec/satable.hh	/^  const char *class_name() const		{ return "SATable"; }$/;"	f	class:SATable
class_name	elements/ipsec/sha1.hh	/^  const char *class_name() const	{ return "IPsecAuthSHA1"; }$/;"	f	class:IPsecAuthSHA1
class_name	elements/linuxmodule/cpuqueue.hh	/^  const char *class_name() const		{ return "CPUQueue"; }$/;"	f	class:CPUQueue
class_name	elements/linuxmodule/cpuswitch.hh	/^  const char *class_name() const		{ return "CPUSwitch"; }$/;"	f	class:CPUSwitch
class_name	elements/linuxmodule/cyclecountaccum.hh	/^    const char *class_name() const	{ return "CycleCountAccum"; }$/;"	f	class:CycleCountAccum
class_name	elements/linuxmodule/fasttcpflows.hh	/^  const char *class_name() const	{ return "FastTCPFlows"; }$/;"	f	class:FastTCPFlows
class_name	elements/linuxmodule/fastudpflows.hh	/^  const char *class_name() const	{ return "FastUDPFlows"; }$/;"	f	class:FastUDPFlows
class_name	elements/linuxmodule/fastudpsrc.hh	/^  const char *class_name() const	{ return "FastUDPSource"; }$/;"	f	class:FastUDPSource
class_name	elements/linuxmodule/fastudpsrcip6.hh	/^  const char *class_name() const	{ return "FastUDPSourceIP6"; }$/;"	f	class:FastUDPSourceIP6
class_name	elements/linuxmodule/fromdevice.hh	/^    const char *class_name() const	{ return "FromDevice"; }$/;"	f	class:FromDevice
class_name	elements/linuxmodule/fromhost.hh	/^    const char *class_name() const	{ return "FromHost"; }$/;"	f	class:FromHost
class_name	elements/linuxmodule/fromuserdevice.hh	/^    const char *class_name() const      { return "FromUserDevice"; }$/;"	f	class:FromUserDevice
class_name	elements/linuxmodule/perfcountaccum.hh	/^  const char *class_name() const		{ return "PerfCountAccum"; }$/;"	f	class:PerfCountAccum
class_name	elements/linuxmodule/perfcountinfo.hh	/^  const char *class_name() const	{ return "PerfCountInfo"; }$/;"	f	class:PerfCountInfo
class_name	elements/linuxmodule/polldevice.hh	/^  const char *class_name() const	{ return "PollDevice"; }$/;"	f	class:PollDevice
class_name	elements/linuxmodule/rtcycles.hh	/^  const char *class_name() const	{ return "RoundTripCycleCount"; }$/;"	f	class:RTCycles
class_name	elements/linuxmodule/schedulelinux.hh	/^  const char *class_name() const		{ return "ScheduleLinux"; }$/;"	f	class:ScheduleLinux
class_name	elements/linuxmodule/setcyclecount.hh	/^  const char *class_name() const		{ return "SetCycleCount"; }$/;"	f	class:SetCycleCount
class_name	elements/linuxmodule/setperfcount.hh	/^  const char *class_name() const		{ return "SetPerfCount"; }$/;"	f	class:SetPerfCount
class_name	elements/linuxmodule/threadmonitor.hh	/^    const char *class_name() const	{ return "ThreadMonitor"; }$/;"	f	class:ThreadMonitor
class_name	elements/linuxmodule/todevice.hh	/^    const char *class_name() const	{ return "ToDevice"; }$/;"	f	class:ToDevice
class_name	elements/linuxmodule/tohost.hh	/^    const char *class_name() const	{ return "ToHost"; }$/;"	f	class:ToHost
class_name	elements/linuxmodule/tohostsniffers.hh	/^    const char *class_name() const		{ return "ToHostSniffers"; }$/;"	f	class:ToHostSniffers
class_name	elements/linuxmodule/touserdevice.hh	/^    const char *class_name() const      { return "ToUserDevice"; }$/;"	f	class:ToUserDevice
class_name	elements/local/FlowNet/common/FlowNetGod.hh	/^	const char *class_name() const { return "FlowNetGod"; }$/;"	f	class:FlowNetGod
class_name	elements/local/FlowNet/common/PF_FW.hh	/^        const char *class_name() const  { return "PFFW"; }$/;"	f	class:PFFW
class_name	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^	const char *class_name() const	{ return "PFMpeg2AdaptFW"; }$/;"	f	class:PFMpeg2AdaptFW
class_name	elements/local/FlowNet/scheduler/IPFragReset.hh	/^	const char *class_name() const		{ return "IPFragReset"; }$/;"	f	class:IPFragReset
class_name	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	const char *class_name() const	{ return "PFSchedFW"; }$/;"	f	class:PFSchedFW
class_name	elements/local/FlowNet/scheduler/WBSEtherFilter.hh	/^	const char *class_name() const		{ return "WBSEtherFilter"; }$/;"	f	class:WBSEtherFilter
class_name	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	const char *class_name() const	{ return "PFShapeFW"; }$/;"	f	class:PFShapeFW
class_name	elements/local/FlowNet/sink/PFSinkFW.hh	/^	const char *class_name() const	{ return "PFSinkFW"; }$/;"	f	class:PFSinkFW
class_name	elements/local/OpenFlow/RConn.hh	/^	const char *class_name() const		{ return "RConn"; }$/;"	f	class:RConn
class_name	elements/local/OpenFlow/datapath.hh	/^	const char *class_name() const		{ return "Datapath"; }$/;"	f	class:Datapath
class_name	elements/local/standard/ratesettable_bandwidthshaper.hh	/^    const char *class_name() const	{ return "RateSettableBandwidthShaper"; }$/;"	f	class:RateSettableBandwidthShaper
class_name	elements/ns/fromsimdevice.hh	/^  const char *class_name() const	{ return "FromSimDevice"; }$/;"	f	class:FromSimDevice
class_name	elements/ns/simpacketanalyzer.hh	/^  const char *class_name() const  { return "SimPacketAnalyzer"; }$/;"	f	class:SimPacketAnalyzer
class_name	elements/ns/tosimdevice.hh	/^  const char *class_name() const		{ return "ToSimDevice"; }$/;"	f	class:ToSimDevice
class_name	elements/ns/tosimtrace.hh	/^  const char* class_name() const { return "ToSimTrace"; }$/;"	f	class:ToSimTrace
class_name	elements/radio/b8b10.hh	/^  const char *class_name() const	{ return "B8B10"; }$/;"	f	class:B8B10
class_name	elements/radio/bim.hh	/^  const char *class_name() const	{ return "BIM"; }$/;"	f	class:BIM
class_name	elements/radio/checkpattern.hh	/^  const char *class_name() const	{ return "CheckPattern"; }$/;"	f	class:CheckPattern
class_name	elements/radio/scramble.hh	/^  const char *class_name() const	{ return "Scramble"; }$/;"	f	class:Scramble
class_name	elements/radio/sendpattern.hh	/^  const char *class_name() const		{ return "SendPattern"; }$/;"	f	class:SendPattern
class_name	elements/simple/simpleidle.hh	/^    const char *class_name() const	{ return "SimpleIdle"; }$/;"	f	class:SimpleIdle
class_name	elements/simple/simplepriosched.hh	/^    const char *class_name() const	{ return "SimplePrioSched"; }$/;"	f	class:SimplePrioSched
class_name	elements/simple/simplepullswitch.hh	/^    const char *class_name() const		{ return "SimplePullSwitch"; }$/;"	f	class:SimplePullSwitch
class_name	elements/simple/simplerrsched.hh	/^    const char *class_name() const	{ return "SimpleRoundRobinSched"; }$/;"	f	class:SimpleRRSched
class_name	elements/standard/align.hh	/^  const char *class_name() const		{ return "Align"; }$/;"	f	class:Align
class_name	elements/standard/annotationinfo.hh	/^    const char *class_name() const	{ return "AnnotationInfo"; }$/;"	f	class:AnnotationInfo
class_name	elements/standard/averagecounter.hh	/^    const char *class_name() const		{ return "AverageCounter"; }$/;"	f	class:AverageCounter
class_name	elements/standard/bandwidthmeter.hh	/^  const char *class_name() const		{ return "BandwidthMeter"; }$/;"	f	class:BandwidthMeter
class_name	elements/standard/bandwidthshaper.hh	/^    const char *class_name() const	{ return "BandwidthShaper"; }$/;"	f	class:BandwidthShaper
class_name	elements/standard/block.hh	/^  const char *class_name() const		{ return "Block"; }$/;"	f	class:Block
class_name	elements/standard/burster.hh	/^    const char *class_name() const		{ return "Burster"; }$/;"	f	class:Burster
class_name	elements/standard/bwratedsplitter.hh	/^    const char *class_name() const	{ return "BandwidthRatedSplitter"; }$/;"	f	class:BandwidthRatedSplitter
class_name	elements/standard/bwratedunqueue.hh	/^    const char *class_name() const	{ return "BandwidthRatedUnqueue"; }$/;"	f	class:BandwidthRatedUnqueue
class_name	elements/standard/checkcrc32.hh	/^    const char *class_name() const		{ return "CheckCRC32"; }$/;"	f	class:CheckCRC32
class_name	elements/standard/checklength.hh	/^  const char *class_name() const		{ return "CheckLength"; }$/;"	f	class:CheckLength
class_name	elements/standard/checkpaint.hh	/^    const char *class_name() const	{ return "CheckPaint"; }$/;"	f	class:CheckPaint
class_name	elements/standard/classifier.hh	/^    const char *class_name() const		{ return "Classifier"; }$/;"	f	class:Classifier
class_name	elements/standard/clickyinfo.hh	/^    const char *class_name() const	{ return "ClickyInfo"; }$/;"	f	class:ClickyInfo
class_name	elements/standard/compblock.hh	/^  const char *class_name() const		{ return "CompareBlock"; }$/;"	f	class:CompareBlock
class_name	elements/standard/counter.hh	/^    const char *class_name() const		{ return "Counter"; }$/;"	f	class:Counter
class_name	elements/standard/delayshaper.hh	/^    const char *class_name() const	{ return "DelayShaper"; }$/;"	f	class:DelayShaper
class_name	elements/standard/delayunqueue.hh	/^    const char *class_name() const	{ return "DelayUnqueue"; }$/;"	f	class:DelayUnqueue
class_name	elements/standard/devirtualizeinfo.hh	/^  const char *class_name() const	{ return "DevirtualizeInfo"; }$/;"	f	class:DevirtualizeInfo
class_name	elements/standard/discard.hh	/^    const char *class_name() const		{ return "Discard"; }$/;"	f	class:Discard
class_name	elements/standard/discardnofree.hh	/^  const char *class_name() const		{ return "DiscardNoFree"; }$/;"	f	class:DiscardNoFree
class_name	elements/standard/drivermanager.hh	/^    const char *class_name() const	{ return "DriverManager"; }$/;"	f	class:DriverManager
class_name	elements/standard/dropbroadcasts.hh	/^  const char *class_name() const	{ return "DropBroadcasts"; }$/;"	f	class:DropBroadcasts
class_name	elements/standard/drr.hh	/^    const char *class_name() const		{ return "DRRSched"; }$/;"	f	class:DRRSched
class_name	elements/standard/flowinfo.hh	/^    const char* class_name() const	{ return "FlowInfo"; }$/;"	f	class:FlowInfo
class_name	elements/standard/frontdropqueue.hh	/^  const char *class_name() const		{ return "FrontDropQueue"; }$/;"	f	class:FrontDropQueue
class_name	elements/standard/fullnotequeue.hh	/^    const char *class_name() const		{ return "Queue"; }$/;"	f	class:FullNoteQueue
class_name	elements/standard/hashswitch.hh	/^  const char *class_name() const		{ return "HashSwitch"; }$/;"	f	class:HashSwitch
class_name	elements/standard/hub.hh	/^    const char *class_name() const		{ return "Hub"; }$/;"	f	class:Hub
class_name	elements/standard/idle.hh	/^  const char *class_name() const	{ return "Idle"; }$/;"	f	class:Idle
class_name	elements/standard/infinitesource.hh	/^  const char *class_name() const		{ return "InfiniteSource"; }$/;"	f	class:InfiniteSource
class_name	elements/standard/linkunqueue.hh	/^    const char *class_name() const	{ return "LinkUnqueue"; }$/;"	f	class:LinkUnqueue
class_name	elements/standard/markmacheader.hh	/^    const char *class_name() const		{ return "MarkMACHeader"; }$/;"	f	class:MarkMACHeader
class_name	elements/standard/messageelement.hh	/^    const char *class_name() const		{ return "Message"; }$/;"	f	class:MessageElement
class_name	elements/standard/meter.hh	/^  const char *class_name() const		{ return "Meter"; }$/;"	f	class:Meter
class_name	elements/standard/mixedqueue.hh	/^    const char *class_name() const	{ return "MixedQueue"; }$/;"	f	class:MixedQueue
class_name	elements/standard/msqueue.hh	/^    const char *class_name() const		{ return "MSQueue"; }$/;"	f	class:MSQueue
class_name	elements/standard/notifierqueue.hh	/^    const char *class_name() const		{ return "NotifierQueue"; }$/;"	f	class:NotifierQueue
class_name	elements/standard/nullelement.hh	/^  const char *class_name() const	{ return "Null"; }$/;"	f	class:NullElement
class_name	elements/standard/nullelement.hh	/^  const char *class_name() const	{ return "PullNull"; }$/;"	f	class:PullNullElement
class_name	elements/standard/nullelement.hh	/^  const char *class_name() const	{ return "PushNull"; }$/;"	f	class:PushNullElement
class_name	elements/standard/nulls.hh	/^  const char *class_name() const	{ return "Null1"; }$/;"	f	class:Null1
class_name	elements/standard/nulls.hh	/^  const char *class_name() const	{ return "Null2"; }$/;"	f	class:Null2
class_name	elements/standard/nulls.hh	/^  const char *class_name() const	{ return "Null3"; }$/;"	f	class:Null3
class_name	elements/standard/nulls.hh	/^  const char *class_name() const	{ return "Null4"; }$/;"	f	class:Null4
class_name	elements/standard/nulls.hh	/^  const char *class_name() const	{ return "Null5"; }$/;"	f	class:Null5
class_name	elements/standard/nulls.hh	/^  const char *class_name() const	{ return "Null6"; }$/;"	f	class:Null6
class_name	elements/standard/nulls.hh	/^  const char *class_name() const	{ return "Null7"; }$/;"	f	class:Null7
class_name	elements/standard/nulls.hh	/^  const char *class_name() const	{ return "Null8"; }$/;"	f	class:Null8
class_name	elements/standard/paint.hh	/^    const char *class_name() const		{ return "Paint"; }$/;"	f	class:Paint
class_name	elements/standard/paintswitch.hh	/^    const char *class_name() const		{ return "PaintSwitch"; }$/;"	f	class:PaintSwitch
class_name	elements/standard/painttee.hh	/^    const char *class_name() const	{ return "PaintTee"; }$/;"	f	class:PaintTee
class_name	elements/standard/pokehandlers.hh	/^    const char *class_name() const		{ return "PokeHandlers"; }$/;"	f	class:PokeHandlers
class_name	elements/standard/print.hh	/^    const char *class_name() const		{ return "Print"; }$/;"	f	class:Print
class_name	elements/standard/priosched.hh	/^    const char *class_name() const	{ return "PrioSched"; }$/;"	f	class:PrioSched
class_name	elements/standard/pullswitch.hh	/^    const char *class_name() const		{ return "PullSwitch"; }$/;"	f	class:PullSwitch
class_name	elements/standard/quicknotequeue.hh	/^    const char *class_name() const		{ return "QuickNoteQueue"; }$/;"	f	class:QuickNoteQueue
class_name	elements/standard/quitwatcher.hh	/^  const char *class_name() const		{ return "QuitWatcher"; }$/;"	f	class:QuitWatcher
class_name	elements/standard/randomerror.hh	/^  const char *class_name() const		{ return "RandomBitErrors"; }$/;"	f	class:RandomBitErrors
class_name	elements/standard/randomsample.hh	/^    const char *class_name() const		{ return "RandomSample"; }$/;"	f	class:RandomSample
class_name	elements/standard/randomsource.hh	/^  const char *class_name() const		{ return "RandomSource"; }$/;"	f	class:RandomSource
class_name	elements/standard/randomswitch.hh	/^    const char *class_name() const	{ return "RandomSwitch"; }$/;"	f	class:RandomSwitch
class_name	elements/standard/ratedsource.hh	/^    const char *class_name() const		{ return "RatedSource"; }$/;"	f	class:RatedSource
class_name	elements/standard/ratedsplitter.hh	/^    const char *class_name() const	{ return "RatedSplitter"; }$/;"	f	class:RatedSplitter
class_name	elements/standard/ratedunqueue.hh	/^    const char *class_name() const	{ return "RatedUnqueue"; }$/;"	f	class:RatedUnqueue
class_name	elements/standard/rrsched.hh	/^    const char *class_name() const	{ return "RoundRobinSched"; }$/;"	f	class:RRSched
class_name	elements/standard/rrswitch.hh	/^  const char *class_name() const	{ return "RoundRobinSwitch"; }$/;"	f	class:RoundRobinSwitch
class_name	elements/standard/script.hh	/^    const char *class_name() const	{ return "Script"; }$/;"	f	class:Script
class_name	elements/standard/setannobyte.hh	/^    const char *class_name() const		{ return "SetAnnoByte"; }$/;"	f	class:SetAnnoByte
class_name	elements/standard/setcrc32.hh	/^  const char *class_name() const	{ return "SetCRC32"; }$/;"	f	class:SetCRC32
class_name	elements/standard/setpackettype.hh	/^    const char *class_name() const		{ return "SetPacketType"; }$/;"	f	class:SetPacketType
class_name	elements/standard/settimestamp.hh	/^    const char *class_name() const		{ return "SetTimestamp"; }$/;"	f	class:SetTimestamp
class_name	elements/standard/shaper.hh	/^    const char *class_name() const	{ return "Shaper"; }$/;"	f	class:Shaper
class_name	elements/standard/simplequeue.hh	/^    const char *class_name() const		{ return "SimpleQueue"; }$/;"	f	class:SimpleQueue
class_name	elements/standard/staticpullswitch.hh	/^  const char *class_name() const		{ return "StaticPullSwitch"; }$/;"	f	class:StaticPullSwitch
class_name	elements/standard/staticswitch.hh	/^  const char *class_name() const		{ return "StaticSwitch"; }$/;"	f	class:StaticSwitch
class_name	elements/standard/storedata.hh	/^    const char *class_name() const		{ return "StoreData"; }$/;"	f	class:StoreData
class_name	elements/standard/stridesched.hh	/^    const char *class_name() const		{ return "StrideSched"; }$/;"	f	class:StrideSched
class_name	elements/standard/strideswitch.hh	/^  const char *class_name() const		{ return "StrideSwitch"; }$/;"	f	class:StrideSwitch
class_name	elements/standard/strip.hh	/^    const char *class_name() const		{ return "Strip"; }$/;"	f	class:Strip
class_name	elements/standard/striptonet.hh	/^    const char *class_name() const	{ return "StripToNetworkHeader"; }$/;"	f	class:StripToNetworkHeader
class_name	elements/standard/suppressor.hh	/^  const char *class_name() const		{ return "Suppressor"; }$/;"	f	class:Suppressor
class_name	elements/standard/switch.hh	/^  const char *class_name() const		{ return "Switch"; }$/;"	f	class:Switch
class_name	elements/standard/tee.hh	/^  const char *class_name() const		{ return "PullTee"; }$/;"	f	class:PullTee
class_name	elements/standard/tee.hh	/^  const char *class_name() const		{ return "Tee"; }$/;"	f	class:Tee
class_name	elements/standard/threadsafequeue.hh	/^    const char *class_name() const		{ return "ThreadSafeQueue"; }$/;"	f	class:ThreadSafeQueue
class_name	elements/standard/timedsink.hh	/^  const char *class_name() const		{ return "TimedSink"; }$/;"	f	class:TimedSink
class_name	elements/standard/timedsource.hh	/^  const char *class_name() const		{ return "TimedSource"; }$/;"	f	class:TimedSource
class_name	elements/standard/timedunqueue.hh	/^    const char *class_name() const		{ return "TimedUnqueue"; }$/;"	f	class:TimedUnqueue
class_name	elements/standard/truncate.hh	/^    const char *class_name() const		{ return "Truncate"; }$/;"	f	class:Truncate
class_name	elements/standard/unqueue.hh	/^    const char *class_name() const		{ return "Unqueue"; }$/;"	f	class:Unqueue
class_name	elements/standard/unqueue2.hh	/^    const char *class_name() const		{ return "Unqueue2"; }$/;"	f	class:Unqueue2
class_name	elements/standard/unstrip.hh	/^  const char *class_name() const	{ return "Unstrip"; }$/;"	f	class:Unstrip
class_name	elements/tcpudp/checktcpheader.hh	/^  const char *class_name() const		{ return "CheckTCPHeader"; }$/;"	f	class:CheckTCPHeader
class_name	elements/tcpudp/checkudpheader.hh	/^  const char *class_name() const		{ return "CheckUDPHeader"; }$/;"	f	class:CheckUDPHeader
class_name	elements/tcpudp/dynudpipencap.hh	/^  const char *class_name() const	{ return "DynamicUDPIPEncap"; }$/;"	f	class:DynamicUDPIPEncap
class_name	elements/tcpudp/iprewriter.hh	/^    const char *class_name() const		{ return "IPRewriter"; }$/;"	f	class:IPRewriter
class_name	elements/tcpudp/settcpchecksum.hh	/^  const char *class_name() const		{ return "SetTCPChecksum"; }$/;"	f	class:SetTCPChecksum
class_name	elements/tcpudp/setudpchecksum.hh	/^    const char *class_name() const	{ return "SetUDPChecksum"; }$/;"	f	class:SetUDPChecksum
class_name	elements/tcpudp/snooptcp.hh	/^  const char *class_name() const		{ return "SnoopTCP"; }$/;"	f	class:SnoopTCP
class_name	elements/tcpudp/statelesstcpresp.hh	/^    const char *class_name() const	{ return "StatelessTCPResponder"; }$/;"	f	class:StatelessTCPResponder
class_name	elements/tcpudp/tcpfragmenter.hh	/^    const char *class_name() const	{ return "TCPFragmenter"; }$/;"	f	class:TCPFragmenter
class_name	elements/tcpudp/tcpipsend.hh	/^  const char *class_name() const	{ return "TCPIPSend"; }$/;"	f	class:TCPIPSend
class_name	elements/tcpudp/tcprewriter.hh	/^    const char *class_name() const		{ return "TCPRewriter"; }$/;"	f	class:TCPRewriter
class_name	elements/tcpudp/udpip6encap.hh	/^    const char *class_name() const	{ return "UDPIP6Encap"; }$/;"	f	class:UDPIP6Encap
class_name	elements/tcpudp/udpipencap.hh	/^    const char *class_name() const	{ return "UDPIPEncap"; }$/;"	f	class:UDPIPEncap
class_name	elements/tcpudp/udprewriter.hh	/^    const char *class_name() const		{ return "UDPRewriter"; }$/;"	f	class:UDPRewriter
class_name	elements/test/bhmtest.hh	/^    const char *class_name() const		{ return "BigHashMapTest"; }$/;"	f	class:BigHashMapTest
class_name	elements/test/biginttest.hh	/^    const char *class_name() const		{ return "BigintTest"; }$/;"	f	class:BigintTest
class_name	elements/test/blockthread.hh	/^    const char *class_name() const	{ return "BlockThread"; }$/;"	f	class:BlockThread
class_name	elements/test/checkpacket.hh	/^    const char *class_name() const		{ return "CheckPacket"; }$/;"	f	class:CheckPacket
class_name	elements/test/clptest.hh	/^    const char *class_name() const		{ return "CLPTest"; }$/;"	f	class:CLPTest
class_name	elements/test/comparepackets.hh	/^    const char *class_name() const		{ return "ComparePackets"; }$/;"	f	class:ComparePackets
class_name	elements/test/confparsetest.hh	/^    const char *class_name() const		{ return "ConfParseTest"; }$/;"	f	class:ConfParseTest
class_name	elements/test/errortest.hh	/^    const char *class_name() const		{ return "ErrorTest"; }$/;"	f	class:ErrorTest
class_name	elements/test/functiontest.hh	/^    const char *class_name() const		{ return "FunctionTest"; }$/;"	f	class:FunctionTest
class_name	elements/test/handlertask.hh	/^    const char *class_name() const		{ return "HandlerTask"; }$/;"	f	class:HandlerTask
class_name	elements/test/hashtabletest.hh	/^    const char *class_name() const		{ return "HashTableTest"; }$/;"	f	class:HashTableTest
class_name	elements/test/heaptest.hh	/^    const char *class_name() const		{ return "HeapTest"; }$/;"	f	class:HeapTest
class_name	elements/test/listtest.hh	/^    const char *class_name() const		{ return "ListTest"; }$/;"	f	class:ListTest
class_name	elements/test/neighborhoodtest.hh	/^    const char *class_name() const		{ return "NeighborhoodTest"; }$/;"	f	class:NeighborhoodTest
class_name	elements/test/notifierdebug.hh	/^    const char *class_name() const	{ return "NotifierDebug"; }$/;"	f	class:NotifierDebug
class_name	elements/test/nulltask.hh	/^    const char *class_name() const		{ return "NullTask"; }$/;"	f	class:NullTask
class_name	elements/test/packettest.hh	/^    const char *class_name() const		{ return "PacketTest"; }$/;"	f	class:PacketTest
class_name	elements/test/queuethreadtest.hh	/^    const char *class_name() const		{ return "QueueThreadTest1"; }$/;"	f	class:QueueThreadTest1
class_name	elements/test/queuethreadtest.hh	/^    const char *class_name() const		{ return "QueueThreadTest2"; }$/;"	f	class:QueueThreadTest2
class_name	elements/test/queueyanktest.hh	/^    const char *class_name() const		{ return "QueueYankTest"; }$/;"	f	class:QueueYankTest
class_name	elements/test/randomseed.hh	/^    const char *class_name() const	{ return "RandomSeed"; }$/;"	f	class:RandomSeed
class_name	elements/test/schedordertest.hh	/^    const char *class_name() const		{ return "SchedOrderTest"; }$/;"	f	class:SchedOrderTest
class_name	elements/test/sorttest.hh	/^    const char *class_name() const		{ return "SortTest"; }$/;"	f	class:SortTest
class_name	elements/test/timertest.hh	/^    const char *class_name() const		{ return "TimerTest"; }$/;"	f	class:TimerTest
class_name	elements/test/tokenbuckettest.hh	/^    const char *class_name() const		{ return "TokenBucketTest"; }$/;"	f	class:TokenBucketTest
class_name	elements/test/upstreamnotifier.hh	/^  const char *class_name() const	{ return "UpstreamNotifier"; }$/;"	f	class:UpstreamNotifier
class_name	elements/test/vectortest.hh	/^    const char *class_name() const		{ return "VectorTest"; }$/;"	f	class:VectorTest
class_name	elements/threads/balancedthreadsched.hh	/^    const char *class_name() const	{ return "BalancedThreadSched"; }$/;"	f	class:BalancedThreadSched
class_name	elements/threads/spinlockacquire.hh	/^    const char *class_name() const	{ return "SpinlockAcquire"; }$/;"	f	class:SpinlockAcquire
class_name	elements/threads/spinlockinfo.hh	/^    const char *class_name() const	{ return "SpinlockInfo"; }$/;"	f	class:SpinlockInfo
class_name	elements/threads/spinlockrelease.hh	/^    const char *class_name() const	{ return "SpinlockRelease"; }$/;"	f	class:SpinlockRelease
class_name	elements/threads/staticthreadsched.hh	/^    const char *class_name() const	{ return "StaticThreadSched"; }$/;"	f	class:StaticThreadSched
class_name	elements/userlevel/changeuid.hh	/^    const char *class_name() const	{ return "ChangeUID"; }$/;"	f	class:ChangeUID
class_name	elements/userlevel/chattersocket.hh	/^  const char *class_name() const	{ return "ChatterSocket"; }$/;"	f	class:ChatterSocket
class_name	elements/userlevel/controlsocket.hh	/^    const char *class_name() const	{ return "ControlSocket"; }$/;"	f	class:ControlSocket
class_name	elements/userlevel/fromdevice.hh	/^    const char *class_name() const	{ return "FromDevice"; }$/;"	f	class:FromDevice
class_name	elements/userlevel/fromdump.hh	/^    const char *class_name() const		{ return "FromDump"; }$/;"	f	class:FromDump
class_name	elements/userlevel/fromhost.hh	/^    const char *class_name() const	{ return "FromHost"; }$/;"	f	class:FromHost
class_name	elements/userlevel/fromrawsocket.hh	/^  const char *class_name() const	{ return "FromRawSocket"; }$/;"	f	class:FromRawSocket
class_name	elements/userlevel/fromsocket.hh	/^  const char *class_name() const	{ return "FromSocket"; }$/;"	f	class:FromSocket
class_name	elements/userlevel/ipflowrawsockets.hh	/^    const char *class_name() const	{ return "IPFlowRawSockets"; }$/;"	f	class:IPFlowRawSockets
class_name	elements/userlevel/kernelfilter.hh	/^    const char *class_name() const	{ return "KernelFilter"; }$/;"	f	class:KernelFilter
class_name	elements/userlevel/kerneltap.hh	/^    const char *class_name() const	{ return "KernelTap"; }$/;"	f	class:KernelTap
class_name	elements/userlevel/kerneltun.hh	/^    const char *class_name() const	{ return "KernelTun"; }$/;"	f	class:KernelTun
class_name	elements/userlevel/khandlerproxy.hh	/^    const char* class_name() const	{ return "KernelHandlerProxy"; }$/;"	f	class:KernelHandlerProxy
class_name	elements/userlevel/printold.hh	/^  const char *class_name() const		{ return "PrintOld"; }$/;"	f	class:PrintOld
class_name	elements/userlevel/progressbar.hh	/^    const char *class_name() const		{ return "ProgressBar"; }$/;"	f	class:ProgressBar
class_name	elements/userlevel/rawsocket.hh	/^  const char *class_name() const	{ return "RawSocket"; }$/;"	f	class:RawSocket
class_name	elements/userlevel/socket.hh	/^  const char *class_name() const	{ return "Socket"; }$/;"	f	class:Socket
class_name	elements/userlevel/todevice.hh	/^    const char *class_name() const		{ return "ToDevice"; }$/;"	f	class:ToDevice
class_name	elements/userlevel/todump.hh	/^    const char *class_name() const	{ return "ToDump"; }$/;"	f	class:ToDump
class_name	elements/userlevel/tohost.hh	/^    const char *class_name() const	{ return "ToHost"; }$/;"	f	class:ToHost
class_name	elements/userlevel/torawsocket.hh	/^  const char *class_name() const	{ return "ToRawSocket"; }$/;"	f	class:ToRawSocket
class_name	elements/userlevel/tosocket.hh	/^  const char *class_name() const	{ return "ToSocket"; }$/;"	f	class:ToSocket
class_name	elements/userlevel/umlswitch.hh	/^  const char *class_name() const	{ return "UMLSwitch"; }$/;"	f	class:UMLSwitch
class_name	elements/wifi/ap/associationresponder.hh	/^  const char *class_name() const	{ return "AssociationResponder"; }$/;"	f	class:AssociationResponder
class_name	elements/wifi/ap/beaconsource.hh	/^  const char *class_name() const	{ return "BeaconSource"; }$/;"	f	class:BeaconSource
class_name	elements/wifi/ap/openauthresponder.hh	/^  const char *class_name() const	{ return "OpenAuthResponder"; }$/;"	f	class:OpenAuthResponder
class_name	elements/wifi/ap/proberesponder.hh	/^  const char *class_name() const	{ return "ProbeResponder"; }$/;"	f	class:ProbeResponder
class_name	elements/wifi/ap/stationtable.hh	/^  const char *class_name() const		{ return "StationTable"; }$/;"	f	class:StationTable
class_name	elements/wifi/athdescdecap.hh	/^  const char *class_name() const	{ return "AthdescDecap"; }$/;"	f	class:AthdescDecap
class_name	elements/wifi/athdescencap.hh	/^  const char *class_name() const	{ return "AthdescEncap"; }$/;"	f	class:AthdescEncap
class_name	elements/wifi/autoratefallback.hh	/^  const char *class_name() const		{ return "AutoRateFallback"; }$/;"	f	class:AutoRateFallback
class_name	elements/wifi/availablerates.hh	/^  const char *class_name() const		{ return "AvailableRates"; }$/;"	f	class:AvailableRates
class_name	elements/wifi/ethercount.hh	/^  const char *class_name() const		{ return "EtherCount"; }$/;"	f	class:EtherCount
class_name	elements/wifi/extradecap.hh	/^  const char *class_name() const	{ return "ExtraDecap"; }$/;"	f	class:ExtraDecap
class_name	elements/wifi/extraencap.hh	/^  const char *class_name() const	{ return "ExtraEncap"; }$/;"	f	class:ExtraEncap
class_name	elements/wifi/filterfailures.hh	/^  const char *class_name() const		{ return "FilterFailures"; }$/;"	f	class:FilterFailures
class_name	elements/wifi/filterphyerr.hh	/^  const char *class_name() const		{ return "FilterPhyErr"; }$/;"	f	class:FilterPhyErr
class_name	elements/wifi/filtertx.hh	/^  const char *class_name() const		{ return "FilterTX"; }$/;"	f	class:FilterTX
class_name	elements/wifi/fromhandler.hh	/^    const char *class_name() const		{ return "FromHandler"; }$/;"	f	class:FromHandler
class_name	elements/wifi/linktable.hh	/^  const char* class_name() const { return "LinkTable"; }$/;"	f	class:LinkTable
class_name	elements/wifi/madwifirate.hh	/^  const char *class_name() const		{ return "MadwifiRate"; }$/;"	f	class:MadwifiRate
class_name	elements/wifi/packetstore.hh	/^  const char *class_name() const		{ return "PacketStore"; }$/;"	f	class:PacketStore
class_name	elements/wifi/printtxfeedback.hh	/^  const char *class_name() const		{ return "PrintTXFeedback"; }$/;"	f	class:PrintTXFeedback
class_name	elements/wifi/printwifi.hh	/^  const char *class_name() const		{ return "PrintWifi"; }$/;"	f	class:PrintWifi
class_name	elements/wifi/prism2decap.hh	/^  const char *class_name() const	{ return "Prism2Decap"; }$/;"	f	class:Prism2Decap
class_name	elements/wifi/prism2encap.hh	/^  const char *class_name() const	{ return "Prism2Encap"; }$/;"	f	class:Prism2Encap
class_name	elements/wifi/probetxrate.hh	/^  const char *class_name() const		{ return "ProbeTXRate"; }$/;"	f	class:ProbeTXRate
class_name	elements/wifi/pushanno.hh	/^  const char *class_name() const		{ return "PushAnno"; }$/;"	f	class:PushAnno
class_name	elements/wifi/radiotapdecap.hh	/^  const char *class_name() const	{ return "RadiotapDecap"; }$/;"	f	class:RadiotapDecap
class_name	elements/wifi/radiotapencap.hh	/^  const char *class_name() const	{ return "RadiotapEncap"; }$/;"	f	class:RadiotapEncap
class_name	elements/wifi/readanno.hh	/^  const char *class_name() const		{ return "ReadAnno"; }$/;"	f	class:ReadAnno
class_name	elements/wifi/rxstats.hh	/^  const char *class_name() const		{ return "RXStats"; }$/;"	f	class:RXStats
class_name	elements/wifi/setrts.hh	/^  const char *class_name() const		{ return "SetRTS"; }$/;"	f	class:SetRTS
class_name	elements/wifi/settxpower.hh	/^  const char *class_name() const		{ return "SetTXPower"; }$/;"	f	class:SetTXPower
class_name	elements/wifi/settxrate.hh	/^  const char *class_name() const		{ return "SetTXRate"; }$/;"	f	class:SetTXRate
class_name	elements/wifi/station/associationrequester.hh	/^  const char *class_name() const	{ return "AssociationRequester"; }$/;"	f	class:AssociationRequester
class_name	elements/wifi/station/beaconscanner.hh	/^  const char *class_name() const	{ return "BeaconScanner"; }$/;"	f	class:BeaconScanner
class_name	elements/wifi/station/beacontracker.hh	/^  const char *class_name() const	{ return "BeaconTracker"; }$/;"	f	class:BeaconTracker
class_name	elements/wifi/station/openauthrequester.hh	/^  const char *class_name() const	{ return "OpenAuthRequester"; }$/;"	f	class:OpenAuthRequester
class_name	elements/wifi/station/proberequester.hh	/^  const char *class_name() const	{ return "ProbeRequester"; }$/;"	f	class:ProbeRequester
class_name	elements/wifi/wepdecap.hh	/^  const char *class_name() const	{ return "WepDecap"; }$/;"	f	class:WepDecap
class_name	elements/wifi/wepencap.hh	/^  const char *class_name() const	{ return "WepEncap"; }$/;"	f	class:WepEncap
class_name	elements/wifi/wifidecap.hh	/^  const char *class_name() const	{ return "WifiDecap"; }$/;"	f	class:WifiDecap
class_name	elements/wifi/wifidefrag.hh	/^  const char *class_name() const	{ return "WifiDefrag"; }$/;"	f	class:WifiDefrag
class_name	elements/wifi/wifidupefilter.hh	/^  const char *class_name() const		{ return "WifiDupeFilter"; }$/;"	f	class:WifiDupeFilter
class_name	elements/wifi/wifiencap.hh	/^  const char *class_name() const	{ return "WifiEncap"; }$/;"	f	class:WifiEncap
class_name	elements/wifi/wififragment.hh	/^  const char *class_name() const	{ return "WifiFragment"; }$/;"	f	class:WifiFragment
class_name	elements/wifi/wifiseq.hh	/^  const char *class_name() const	{ return "WifiSeq"; }$/;"	f	class:WifiSeq
class_name	elements/wifi/wirelessinfo.hh	/^  const char *class_name() const		{ return "WirelessInfo"; }$/;"	f	class:WirelessInfo
class_name	etc/samplepackage/sampleelt.hh	/^    const char *class_name() const	{ return "SamplePackageElement"; }$/;"	f	class:SamplePackageElement
class_name	include/click/standard/addressinfo.hh	/^    const char *class_name() const	{ return "AddressInfo"; }$/;"	f	class:AddressInfo
class_name	include/click/standard/alignmentinfo.hh	/^    const char *class_name() const	{ return "AlignmentInfo"; }$/;"	f	class:AlignmentInfo
class_name	include/click/standard/errorelement.hh	/^    const char *class_name() const		{ return "Error"; }$/;"	f	class:ErrorElement
class_name	include/click/standard/portinfo.hh	/^    const char *class_name() const	{ return "PortInfo"; }$/;"	f	class:PortInfo
class_name	include/click/standard/scheduleinfo.hh	/^    const char* class_name() const	{ return "ScheduleInfo"; }$/;"	f	class:ScheduleInfo
class_name	lib/lexer.cc	/^  const char *class_name() const	{ return _name.c_str(); }$/;"	f	class:Lexer::Compound
class_name	tools/click2xml/xml2click.hh	/^    String class_name;$/;"	m	struct:CxElement
classes	elements/test/bhmtest.cc	/^static const char * const classes[] = {$/;"	v	file:
classes	elements/test/hashtabletest.cc	/^static const char * const classes[] = {$/;"	v	file:
classes	tools/click2xml/xml2click.cc	/^static Vector<CxConfig *> classes;$/;"	v	file:
classifier	elements/local/FlowNet/common/Flow.hh	/^	VcFlowClassify *classifier;$/;"	m	struct:FlowID
classifiers_program	tools/click-fastclassifier/click-fastclassifier.cc	/^classifiers_program(RouterT *r, const Vector<ElementT *> &classifiers)$/;"	f	file:
classify	elements/local/FlowNet/libclassify/Classify5Tuple.cc	/^int Vc5TupleClassify::classify(const Packet* p, struct FlowID* fid)$/;"	f	class:Vc5TupleClassify
classify	elements/local/FlowNet/libclassify/ClassifyNoClassify.cc	/^int VcNoClassify::classify(const Packet* , struct FlowID* fid)$/;"	f	class:VcNoClassify
classmask	drivers/e1000-4.x/src/kcompat.h	/^	unsigned int class, classmask;$/;"	m	struct:_kc_pci_device_id	typeref:class:_kc_pci_device_id::
classwarn_pcode	tools/lib/processingt.hh	/^    enum { classwarn_unknown = 1, classwarn_pcode = 2 };$/;"	e	enum:ProcessingT::__anon531
classwarn_unknown	tools/lib/processingt.hh	/^    enum { classwarn_unknown = 1, classwarn_pcode = 2 };$/;"	e	enum:ProcessingT::__anon531
clean	elements/tcpudp/snooptcp.cc	/^SnoopTCP::PCB::clean(unsigned ack)$/;"	f	class:SnoopTCP::PCB
clean_body	tools/click-devirtualize/cxxclass.hh	/^  const String &clean_body() const	{ return _clean_body; }$/;"	f	class:CxxFunction
clean_landmark	lib/error.cc	/^ErrorHandler::clean_landmark(const String &landmark, bool with_colon)$/;"	f	class:ErrorHandler
clean_map	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::clean_map(Map &table)$/;"	f	class:AggregateIPFlows
clean_map	elements/ip6/addresstranslator.cc	/^AddressTranslator::clean_map(Map6 &table, bool major_map)$/;"	f	class:AddressTranslator
clean_rx	drivers/e1000-7.x/src/e1000.h	/^	boolean_t (*clean_rx) (struct e1000_adapter *adapter,$/;"	m	struct:e1000_adapter
cleanup	elements/analysis/aggcounter.cc	/^AggregateCounter::cleanup(CleanupStage)$/;"	f	class:AggregateCounter
cleanup	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::cleanup(CleanupStage)$/;"	f	class:AggregatePacketCounter
cleanup	elements/analysis/aggregatefilter.cc	/^AggregateFilter::cleanup(CleanupStage)$/;"	f	class:AggregateFilter
cleanup	elements/analysis/aggregatefirst.cc	/^AggregateFirst::cleanup(CleanupStage)$/;"	f	class:AggregateFirst
cleanup	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::cleanup(CleanupStage)$/;"	f	class:AggregateIPFlows
cleanup	elements/analysis/aggregatelast.cc	/^AggregateLast::cleanup(CleanupStage)$/;"	f	class:AggregateLast
cleanup	elements/analysis/anonipaddr.cc	/^AnonymizeIPAddr::cleanup(CleanupStage)$/;"	f	class:AnonymizeIPAddr
cleanup	elements/analysis/fromcapdump.cc	/^FromCapDump::cleanup(CleanupStage)$/;"	f	class:FromCapDump
cleanup	elements/analysis/fromdagdump.cc	/^FromDAGDump::cleanup(CleanupStage)$/;"	f	class:FromDAGDump
cleanup	elements/analysis/fromflandump.cc	/^FromFlanDump::cleanup(CleanupStage)$/;"	f	class:FromFlanDump
cleanup	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::cleanup(CleanupStage)$/;"	f	class:FromIPSummaryDump
cleanup	elements/analysis/fromnetflowsumdump.cc	/^FromNetFlowSummaryDump::cleanup(CleanupStage)$/;"	f	class:FromNetFlowSummaryDump
cleanup	elements/analysis/fromnlanrdump.cc	/^FromNLANRDump::cleanup(CleanupStage)$/;"	f	class:FromNLANRDump
cleanup	elements/analysis/fromtcpdump.cc	/^FromTcpdump::cleanup(CleanupStage)$/;"	f	class:FromTcpdump
cleanup	elements/analysis/timesortedsched.cc	/^TimeSortedSched::cleanup(CleanupStage)$/;"	f	class:TimeSortedSched
cleanup	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::cleanup(CleanupStage)$/;"	f	class:ToIPFlowDumps
cleanup	elements/analysis/toipsumdump.cc	/^ToIPSummaryDump::cleanup(CleanupStage)$/;"	f	class:ToIPSummaryDump
cleanup	elements/aqm/pi.cc	/^void PI::cleanup(CleanupStage)$/;"	f	class:PI
cleanup	elements/bsdmodule/fastudpsrc.cc	/^FastUDPSource::cleanup(CleanupStage)$/;"	f	class:FastUDPSource
cleanup	elements/bsdmodule/fromdevice.cc	/^FromDevice::cleanup(CleanupStage)$/;"	f	class:FromDevice
cleanup	elements/bsdmodule/fromhost.cc	/^FromHost::cleanup(CleanupStage)$/;"	f	class:FromHost
cleanup	elements/bsdmodule/todevice.cc	/^ToDevice::cleanup(CleanupStage)$/;"	f	class:ToDevice
cleanup	elements/bsdmodule/tohost.cc	/^ToHost::cleanup(CleanupStage)$/;"	f	class:ToHost
cleanup	elements/ethernet/arpprint.cc	/^ARPPrint::cleanup(CleanupStage)$/;"	f	class:ARPPrint
cleanup	elements/ethernet/arpquerier.cc	/^ARPQuerier::cleanup(CleanupStage stage)$/;"	f	class:ARPQuerier
cleanup	elements/ethernet/arptable.cc	/^ARPTable::cleanup(CleanupStage)$/;"	f	class:ARPTable
cleanup	elements/ethernet/etherpausesource.cc	/^EtherPauseSource::cleanup(CleanupStage)$/;"	f	class:EtherPauseSource
cleanup	elements/ethernet/ip6ndsolicitor.cc	/^IP6NDSolicitor::cleanup(CleanupStage)$/;"	f	class:IP6NDSolicitor
cleanup	elements/grid/gridproxy.cc	/^GridProxy::cleanup(CleanupStage)$/;"	f	class:GridProxy
cleanup	elements/icmp/icmpsendpings.cc	/^ICMPPingSource::cleanup(CleanupStage)$/;"	f	class:ICMPPingSource
cleanup	elements/ip/directiplookup.cc	/^DirectIPLookup::Table::cleanup()$/;"	f	class:DirectIPLookup::Table
cleanup	elements/ip/directiplookup.cc	/^DirectIPLookup::cleanup(CleanupStage)$/;"	f	class:DirectIPLookup
cleanup	elements/ip/ipprint.cc	/^IPPrint::cleanup(CleanupStage)$/;"	f	class:IPPrint
cleanup	elements/ip/ipratemon.cc	/^IPRateMonitor::cleanup(CleanupStage)$/;"	f	class:IPRateMonitor
cleanup	elements/ip/ipreassembler.cc	/^IPReassembler::cleanup(CleanupStage)$/;"	f	class:IPReassembler
cleanup	elements/ip/iprewriterbase.cc	/^IPRewriterBase::cleanup(CleanupStage)$/;"	f	class:IPRewriterBase
cleanup	elements/ip/iprwpatterns.cc	/^IPRewriterPatterns::cleanup(CleanupStage)$/;"	f	class:IPRewriterPatterns
cleanup	elements/ip/radixiplookup.cc	/^RadixIPLookup::cleanup(CleanupStage)$/;"	f	class:RadixIPLookup
cleanup	elements/ip/rangeiplookup.cc	/^RangeIPLookup::cleanup(CleanupStage)$/;"	f	class:RangeIPLookup
cleanup	elements/ip/rripmapper.cc	/^RoundRobinIPMapper::cleanup(CleanupStage)$/;"	f	class:RoundRobinIPMapper
cleanup	elements/ip/siphmapper.cc	/^SourceIPHashMapper::cleanup(CleanupStage)$/;"	f	class:SourceIPHashMapper
cleanup	elements/ip6/addresstranslator.cc	/^AddressTranslator::cleanup(CleanupStage)$/;"	f	class:AddressTranslator
cleanup	elements/ipsec/radixipseclookup.cc	/^RadixIPsecLookup::cleanup(CleanupStage)$/;"	f	class:RadixIPsecLookup
cleanup	elements/linuxmodule/cpuqueue.cc	/^CPUQueue::cleanup(CleanupStage)$/;"	f	class:CPUQueue
cleanup	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows::cleanup(CleanupStage)$/;"	f	class:FastTCPFlows
cleanup	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows::cleanup(CleanupStage)$/;"	f	class:FastUDPFlows
cleanup	elements/linuxmodule/fastudpsrc.cc	/^FastUDPSource::cleanup(CleanupStage)$/;"	f	class:FastUDPSource
cleanup	elements/linuxmodule/fastudpsrcip6.cc	/^FastUDPSourceIP6::cleanup(CleanupStage)$/;"	f	class:FastUDPSourceIP6
cleanup	elements/linuxmodule/fromdevice.cc	/^FromDevice::cleanup(CleanupStage stage)$/;"	f	class:FromDevice
cleanup	elements/linuxmodule/fromhost.cc	/^FromHost::cleanup(CleanupStage)$/;"	f	class:FromHost
cleanup	elements/linuxmodule/fromuserdevice.cc	/^FromUserDevice::cleanup(CleanupStage stage)$/;"	f	class:FromUserDevice
cleanup	elements/linuxmodule/polldevice.cc	/^PollDevice::cleanup(CleanupStage)$/;"	f	class:PollDevice
cleanup	elements/linuxmodule/todevice.cc	/^ToDevice::cleanup(CleanupStage stage)$/;"	f	class:ToDevice
cleanup	elements/linuxmodule/tohost.cc	/^ToHost::cleanup(CleanupStage)$/;"	f	class:ToHost
cleanup	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::cleanup(CleanupStage stage)$/;"	f	class:ToUserDevice
cleanup	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^void PFSchedFW::cleanup(CleanupStage)$/;"	f	class:PFSchedFW
cleanup	elements/local/FlowNet/shaper/PFShapeFW.cc	/^void PFShapeFW::cleanup(CleanupStage)$/;"	f	class:PFShapeFW
cleanup	elements/local/OpenFlow/RConn.cc	/^void RConn::cleanup(CleanupStage stage UNUSED)$/;"	f	class:RConn
cleanup	elements/local/OpenFlow/datapath.cc	/^void Datapath::cleanup(CleanupStage stage UNUSED)$/;"	f	class:Datapath
cleanup	elements/standard/delayshaper.cc	/^DelayShaper::cleanup(CleanupStage)$/;"	f	class:DelayShaper
cleanup	elements/standard/delayunqueue.cc	/^DelayUnqueue::cleanup(CleanupStage)$/;"	f	class:DelayUnqueue
cleanup	elements/standard/drr.cc	/^DRRSched::cleanup(CleanupStage)$/;"	f	class:DRRSched
cleanup	elements/standard/infinitesource.cc	/^InfiniteSource::cleanup(CleanupStage)$/;"	f	class:InfiniteSource
cleanup	elements/standard/linkunqueue.cc	/^LinkUnqueue::cleanup(CleanupStage)$/;"	f	class:LinkUnqueue
cleanup	elements/standard/priosched.cc	/^PrioSched::cleanup(CleanupStage)$/;"	f	class:PrioSched
cleanup	elements/standard/pullswitch.cc	/^PullSwitch::cleanup(CleanupStage)$/;"	f	class:PullSwitch
cleanup	elements/standard/ratedsource.cc	/^RatedSource::cleanup(CleanupStage)$/;"	f	class:RatedSource
cleanup	elements/standard/rrsched.cc	/^RRSched::cleanup(CleanupStage)$/;"	f	class:RRSched
cleanup	elements/standard/simplequeue.cc	/^SimpleQueue::cleanup(CleanupStage)$/;"	f	class:SimpleQueue
cleanup	elements/standard/stridesched.cc	/^StrideSched::cleanup(CleanupStage)$/;"	f	class:StrideSched
cleanup	elements/standard/timedsource.cc	/^TimedSource::cleanup(CleanupStage)$/;"	f	class:TimedSource
cleanup	elements/test/comparepackets.cc	/^ComparePackets::cleanup(CleanupStage)$/;"	f	class:ComparePackets
cleanup	elements/test/queuethreadtest.cc	/^QueueThreadTest1::cleanup(CleanupStage stage)$/;"	f	class:QueueThreadTest1
cleanup	elements/userlevel/chattersocket.cc	/^ChatterSocket::cleanup(CleanupStage)$/;"	f	class:ChatterSocket
cleanup	elements/userlevel/controlsocket.cc	/^ControlSocket::cleanup(CleanupStage)$/;"	f	class:ControlSocket
cleanup	elements/userlevel/fromdevice.cc	/^FromDevice::cleanup(CleanupStage stage)$/;"	f	class:FromDevice
cleanup	elements/userlevel/fromdump.cc	/^FromDump::cleanup(CleanupStage)$/;"	f	class:FromDump
cleanup	elements/userlevel/fromhost.cc	/^FromHost::cleanup(CleanupStage)$/;"	f	class:FromHost
cleanup	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::cleanup(CleanupStage)$/;"	f	class:IPFlowRawSockets
cleanup	elements/userlevel/kernelfilter.cc	/^KernelFilter::cleanup(CleanupStage stage)$/;"	f	class:KernelFilter
cleanup	elements/userlevel/kerneltun.cc	/^KernelTun::cleanup(CleanupStage)$/;"	f	class:KernelTun
cleanup	elements/userlevel/progressbar.cc	/^ProgressBar::cleanup(CleanupStage)$/;"	f	class:ProgressBar
cleanup	elements/userlevel/rawsocket.cc	/^RawSocket::cleanup(CleanupStage)$/;"	f	class:RawSocket
cleanup	elements/userlevel/socket.cc	/^Socket::cleanup(CleanupStage)$/;"	f	class:Socket
cleanup	elements/userlevel/todevice.cc	/^ToDevice::cleanup(CleanupStage)$/;"	f	class:ToDevice
cleanup	elements/userlevel/todump.cc	/^ToDump::cleanup(CleanupStage)$/;"	f	class:ToDump
cleanup	elements/userlevel/umlswitch.cc	/^UMLSwitch::cleanup(CleanupStage stage)$/;"	f	class:UMLSwitch
cleanup	lib/element.cc	/^Element::cleanup(CleanupStage stage)$/;"	f	class:Element
cleanup	lib/fromfile.cc	/^FromFile::cleanup()$/;"	f	class:FromFile
cleanup	lib/ino.cc	/^ClickIno::cleanup()$/;"	f	class:ClickIno
cleanup	lib/task.cc	/^Task::cleanup()$/;"	f	class:Task
cleanup	linuxmodule/skbmgr.cc	/^RecycledSkbBucket::cleanup()$/;"	f	class:RecycledSkbBucket
cleanup	linuxmodule/skbmgr.cc	/^RecycledSkbPool::cleanup()$/;"	f	class:RecycledSkbPool
cleanup	test/testie	/^sub cleanup () {$/;"	s
cleanup	userlevel/click.cc	/^cleanup(Clp_Parser *clp, int exit_value)$/;"	f	file:
cleanup_clickfs	linuxmodule/clickfs.cc	/^cleanup_clickfs()$/;"	f
cleanup_module	bsdmodule/module.cc	/^cleanup_module()$/;"	f
cleanup_module	linuxmodule/module.cc	/^cleanup_module()$/;"	f
cleanup_module	linuxmodule/proclikefs.c	/^cleanup_module(void)$/;"	f
cleanup_pool	lib/packet.cc	/^cleanup_pool(PacketPool *pp)$/;"	f	file:
cleanup_router_element_procs	bsdmodule/clickfs_element.cc	/^cleanup_router_element_procs()$/;"	f
clear	apps/clicky/src/crouter.cc	/^void crouter::clear(bool alive)$/;"	f	class:clicky::crouter
clear	apps/clicky/src/gathererror.cc	/^void GatherErrorHandler::clear()$/;"	f	class:GatherErrorHandler
clear	apps/clicky/src/hvalues.cc	/^void handler_values::clear()$/;"	f	class:clicky::handler_values
clear	apps/clicky/src/hvalues.hh	/^    void clear() {$/;"	f	class:clicky::handler_value
clear	apps/clicky/src/rectsearch.hh	/^void rect_search<T, CHUNK>::clear()$/;"	f	class:rect_search
clear	apps/clicky/src/whandler.cc	/^void whandler::clear()$/;"	f	class:clicky::whandler
clear	apps/clicky/src/wmain.cc	/^void wmain::clear(bool alive)$/;"	f	class:clicky::wmain
clear	elements/analysis/aggcounter.cc	/^AggregateCounter::clear(ErrorHandler *errh)$/;"	f	class:AggregateCounter
clear	elements/ethernet/arptable.cc	/^ARPTable::clear()$/;"	f	class:ARPTable
clear	elements/grid/packetlogger2.cc	/^PacketLogger2::clear(const String &foo, Element *e, void *vparam, ErrorHandler *errh)$/;"	f	class:PacketLogger2
clear	elements/ip/ipfilter.cc	/^IPFilter::Primitive::clear()$/;"	f	class:IPFilter::Primitive
clear	elements/local/FlowNet/common/Flow.cc	/^void Flow::clear()$/;"	f	class:Flow
clear	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^void FlowMpeg2AdaptDecap::clear()$/;"	f	class:FlowMpeg2AdaptDecap
clear	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^void FlowMpeg2AdaptEncap::clear()$/;"	f	class:FlowMpeg2AdaptEncap
clear	elements/local/FlowNet/scheduler/FlowSchedulable.cc	/^void FlowSchedulable::clear()$/;"	f	class:FlowSchedulable
clear	elements/local/FlowNet/shaper/FlowBWShaperable.cc	/^void FlowBWShaperable::clear()$/;"	f	class:FlowBWShaperable
clear	elements/tcpudp/snooptcp.cc	/^SnoopTCP::PCB::clear(bool is_s)$/;"	f	class:SnoopTCP::PCB
clear	elements/tcpudp/snooptcp.cc	/^SnoopTCP::SCacheEntry::clear()$/;"	f	class:SnoopTCP::SCacheEntry
clear	elements/wifi/linktable.cc	/^LinkTable::clear()$/;"	f	class:LinkTable
clear	elements/wifi/linktable.hh	/^    void clear(bool from_me) {$/;"	f	class:LinkTable::HostInfo
clear	elements/wifi/wifidefrag.hh	/^    void clear() {$/;"	f	struct:WifiDefrag::PacketInfo
clear	elements/wifi/wifidupefilter.hh	/^    void clear() {$/;"	f	class:WifiDupeFilter::DstInfo
clear	include/click/args.hh	/^    Args &clear() {$/;"	f	struct:Args
clear	include/click/dequeue.hh	/^  void clear()                          { shrink(0); }$/;"	f	class:DEQueue
clear	include/click/error.hh	/^    virtual void clear() {$/;"	f	class:ErrorHandler
clear	include/click/ewma.hh	/^    void clear() {$/;"	f	class:DirectEWMAX
clear	include/click/handlercall.hh	/^    void clear() {$/;"	f	class:HandlerCall
clear	include/click/hashcontainer.hh	/^inline void HashContainer<T, A>::clear()$/;"	f	class:HashContainer
clear	include/click/hashmap.cc	/^HashMap<K, V>::clear()$/;"	f	class:HashMap
clear	include/click/hashmap.cc	/^HashMap<K, void *>::clear()$/;"	f	class:HashMap
clear	include/click/hashtable.hh	/^    void clear() {$/;"	f	class:HashTable
clear	include/click/hashtable.hh	/^void HashTable<T>::clear()$/;"	f	class:HashTable
clear	include/click/ip6table.hh	/^  void clear()				{ _v.clear(); }$/;"	f	class:IP6Table
clear	include/click/iptable.hh	/^  void clear()				{ _v.clear(); }$/;"	f	class:IPTable
clear	include/click/list.hh	/^    void clear() {$/;"	f	class:List
clear	include/click/routervisitor.hh	/^    void clear() {$/;"	f	class:ElementTracker
clear	include/click/straccum.hh	/^    inline void clear() {$/;"	f	class:StringAccum
clear	include/click/timer.hh	/^    inline void clear() {$/;"	f	class:Timer
clear	include/click/timestamp.hh	/^    inline void clear() {$/;"	f	class:Timestamp
clear	include/click/tokenbucket.hh	/^    void clear() {$/;"	f	class:TokenBucketX
clear	include/click/tokenbucket.hh	/^    void clear() {$/;"	f	class:TokenCounterX
clear	include/click/variableenv.hh	/^    void clear()			{ _names.clear(); _values.clear(); }$/;"	f	class:VariableEnvironment
clear	include/click/vector.hh	/^    void clear()			{ _n = 0; }$/;"	f	class:Vector
clear	include/click/vector.hh	/^    void clear()			{ erase(begin(), end()); }$/;"	f	class:Vector
clear	include/click/vector.hh	/^    void clear()		{ Base::clear(); }$/;"	f	class:Vector
clear	lib/bitvector.cc	/^Bitvector::clear()$/;"	f	class:Bitvector
clear	ns/CUT_BinHeap.h	/^  void clear() {$/;"	f	class:CUT_BinHeap
clear	test/testie	/^sub clear ($) {$/;"	s
clear	tools/lib/lexert.cc	/^LexerT::clear()$/;"	f	class:LexerT
clear_annotations	include/click/packet.hh	/^Packet::clear_annotations(bool all)$/;"	f	class:Packet
clear_buf	elements/grid/gridlogger.hh	/^  void clear_buf() { _bufptr = 0; }$/;"	f	class:GridLogger
clear_by_swap	include/click/algorithm.hh	/^inline void clear_by_swap(T &x)$/;"	f
clear_by_swap	include/click/hashtable.hh	/^inline void clear_by_swap(HashTable<K, V> &x)$/;"	f
clear_dest_mask	elements/wifi/athdesc.h	/^	u_int32_t	clear_dest_mask:1;$/;"	m	struct:ar5212_desc
clear_device	elements/bsdmodule/anydevice.cc	/^AnyDevice::clear_device(AnyDeviceMap *adm)$/;"	f	class:AnyDevice
clear_device	elements/linuxmodule/anydevice.cc	/^AnyDevice::clear_device(AnyDeviceMap *adm, int flags)$/;"	f	class:AnyDevice
clear_history	elements/grid/ackretrysender.cc	/^ACKRetrySender::clear_history(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:ACKRetrySender
clear_history	elements/grid/ackretrysender2.cc	/^ACKRetrySender2::clear_history(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:ACKRetrySender2
clear_hvalue	apps/clicky/src/hvalues.hh	/^    void clear_hvalue() {$/;"	f	class:clicky::handler_value
clear_last	lib/bitvector.cc	/^Bitvector::clear_last()$/;"	f	class:Bitvector
clear_log	bsdmodule/modulepriv.hh	/^    void clear_log()			{ _pos = 0; _generation += 2; }$/;"	f	class:KernelErrorHandler
clear_log	linuxmodule/modulepriv.hh	/^    void clear_log() {$/;"	f	class:KernelErrorHandler
clear_mac_header	include/click/packet.hh	/^Packet::clear_mac_header()$/;"	f	class:Packet
clear_network_header	include/click/packet.hh	/^Packet::clear_network_header()$/;"	f	class:Packet
clear_node	elements/analysis/aggcounter.cc	/^AggregateCounter::clear_node(Node *n)$/;"	f	class:AggregateCounter
clear_runs	include/click/task.hh	/^Task::clear_runs()$/;"	f	class:Task
clear_stale	elements/wifi/linktable.cc	/^LinkTable::clear_stale() {$/;"	f	class:LinkTable
clear_transport_header	include/click/packet.hh	/^Packet::clear_transport_header()$/;"	f	class:Packet
clear_tx_stats	elements/grid/airoinfo.cc	/^AiroInfo::clear_tx_stats()$/;"	f	class:AiroInfo
clear_values	elements/analysis/ipsumdumpinfo.hh	/^    void clear_values()			{ vptr[0] = vptr[1] = 0; }$/;"	f	struct:IPSummaryDump::PacketDesc
clear_values	elements/analysis/ipsumdumpinfo.hh	/^    void clear_values()			{ vptr[0] = vptr[1] = 0; }$/;"	f	struct:IPSummaryDump::PacketOdesc
click_accessible	bsdmodule/module.cc	/^static int click_accessible = 1;$/;"	v	file:
click_add_element_type	bsdmodule/config.cc	/^click_add_element_type(const char *name, Element *(*factory)(uintptr_t), uintptr_t thunk)$/;"	f
click_add_element_type	lib/driver.cc	/^click_add_element_type(const char *ename, Element *(*func)(uintptr_t), uintptr_t thunk)$/;"	f
click_add_element_type	linuxmodule/config.cc	/^click_add_element_type(const char *name, Element *(*factory)(uintptr_t), uintptr_t thunk, struct module *module)$/;"	f
click_add_element_type_stable	bsdmodule/config.cc	/^click_add_element_type_stable(const char *name, Element *(*factory)(uintptr_t), uintptr_t thunk)$/;"	f
click_add_element_type_stable	lib/driver.cc	/^click_add_element_type_stable(const char *ename, Element *(*func)(uintptr_t), uintptr_t thunk)$/;"	f
click_add_element_type_stable	linuxmodule/config.cc	/^click_add_element_type_stable(const char *name, Element *(*factory)(uintptr_t), uintptr_t thunk, struct module *module)$/;"	f
click_add_element_type_stable	userlevel/elements.cc	658;"	d	file:
click_arp	include/clicknet/ether.h	/^struct click_arp {		\/* Offsets relative to ARP (Ethernet) header *\/$/;"	s
click_assert_failed	bsdmodule/module.cc	/^click_assert_failed(const char *file, int line, const char *problem_text)$/;"	f
click_assert_failed	linuxmodule/module.cc	/^click_assert_failed(const char *file, int line, const char *problem_text)$/;"	f
click_br_handle_frame_hook	elements/linuxmodule/fromdevice.cc	/^click_br_handle_frame_hook(struct net_bridge_port *p, struct sk_buff *skb)$/;"	f	file:
click_buildtool_prog	lib/driver.cc	/^static String *click_buildtool_prog, *tmpdir;$/;"	v	file:
click_buildtool_prog	tools/click-fastclassifier/click-fastclassifier.cc	/^static String click_buildtool_prog;$/;"	v	file:
click_chatter	lib/glue.cc	/^click_chatter(const char *fmt, ...)$/;"	f
click_check_header_sizes	lib/glue.cc	/^click_check_header_sizes()$/;"	f
click_cleanup_config	bsdmodule/config.cc	/^click_cleanup_config()$/;"	f
click_cleanup_config	linuxmodule/config.cc	/^click_cleanup_config()$/;"	f
click_cleanup_packages	lib/driver.cc	/^click_cleanup_packages()$/;"	f
click_cleanup_sched	bsdmodule/sched.cc	/^click_cleanup_sched()$/;"	f
click_cleanup_sched	linuxmodule/sched.cc	/^click_cleanup_sched()$/;"	f
click_clear_error_log	bsdmodule/module.cc	/^click_clear_error_log()$/;"	f
click_clear_error_log	linuxmodule/module.cc	/^click_clear_error_log()$/;"	f
click_compare	include/click/glue.hh	/^template <typename T> int click_compare(const void *a, const void *b, void *)$/;"	f
click_compare	include/click/string.hh	/^template <> inline int click_compare<String>(const void *a, const void *b) {$/;"	f
click_compile_archive_file	lib/driver.cc	/^click_compile_archive_file(const Vector<ArchiveElement> &archive,$/;"	f
click_compiler_fence	include/click/sync.hh	/^click_compiler_fence()$/;"	f
click_config_generation	bsdmodule/config.cc	/^uint32_t click_config_generation;$/;"	v
click_config_generation	linuxmodule/config.cc	/^uint32_t click_config_generation;$/;"	v
click_constant_htons	include/click/config.h	213;"	d
click_constant_htons	include/click/config.h	215;"	d
click_current_processor	include/click/glue.hh	/^click_current_processor()$/;"	f
click_current_thread_id	lib/glue.cc	/^__thread int click_current_thread_id;$/;"	v
click_cycle_counter	linuxmodule/read-pmc.c	/^click_cycle_counter(int which, unsigned int *fnp, unsigned long long *valp)$/;"	f
click_cycles_t	include/click/glue.hh	/^typedef uint64_t click_cycles_t;$/;"	t
click_delete_dentry	linuxmodule/clickfs.cc	/^click_delete_dentry(struct dentry *)$/;"	f	file:
click_dentry_ops	linuxmodule/clickfs.cc	/^static struct dentry_operations click_dentry_ops;$/;"	v	typeref:struct:dentry_operations	file:
click_dev_ioctl	elements/linuxmodule/fromhost.cc	57;"	d	file:
click_dhcp	include/clicknet/dhcp.h	/^struct click_dhcp {$/;"	s
click_dir_file_ops	linuxmodule/clickfs.cc	/^static struct file_operations *click_dir_file_ops;$/;"	v	typeref:struct:file_operations	file:
click_dir_inode_ops	linuxmodule/clickfs.cc	/^static struct inode_operations *click_dir_inode_ops;$/;"	v	typeref:struct:inode_operations	file:
click_dir_lookup	linuxmodule/clickfs.cc	/^click_dir_lookup(struct inode *dir, struct dentry *dentry, struct nameidata *)$/;"	f	file:
click_dir_readdir	linuxmodule/clickfs.cc	/^click_dir_readdir(struct file *filp, void *dirent, filldir_t filldir)$/;"	f	file:
click_dir_revalidate	linuxmodule/clickfs.cc	/^click_dir_revalidate(struct dentry *dentry)$/;"	f	file:
click_dmalloc_cleanup	lib/glue.cc	/^click_dmalloc_cleanup()$/;"	f
click_dmalloc_curmem	lib/glue.cc	/^size_t click_dmalloc_curmem = 0;$/;"	v
click_dmalloc_curnew	lib/glue.cc	/^size_t click_dmalloc_curnew = 0;$/;"	v
click_dmalloc_failnew	lib/glue.cc	/^size_t click_dmalloc_failnew = 0;$/;"	v
click_dmalloc_maxmem	lib/glue.cc	/^size_t click_dmalloc_maxmem = 0;$/;"	v
click_dmalloc_totalnew	lib/glue.cc	/^size_t click_dmalloc_totalnew = 0;$/;"	v
click_dmalloc_where	lib/glue.cc	/^uint32_t click_dmalloc_where = 0x3F3F3F3F;$/;"	v
click_driver_control_socket_name	userlevel/click.cc	/^click_driver_control_socket_name(int number)$/;"	f	file:
click_dsr	elements/grid/dsr.hh	/^struct click_dsr { \/\/ DSR options header -- exactly one per packet$/;"	s
click_dsr_option	elements/grid/dsr.hh	/^struct click_dsr_option { \/\/ common part of option headers, used for determining type$/;"	s
click_dsr_rerr	elements/grid/dsr.hh	/^struct click_dsr_rerr {$/;"	s
click_dsr_rrep	elements/grid/dsr.hh	/^struct click_dsr_rrep {$/;"	s
click_dsr_rreq	elements/grid/dsr.hh	/^struct click_dsr_rreq {$/;"	s
click_dsr_source	elements/grid/dsr.hh	/^struct click_dsr_source {$/;"	s
click_dummyifnet	bsdmodule/sched.cc	/^struct ifnet click_dummyifnet;$/;"	v	typeref:struct:ifnet
click_err	apps/csclient/csclient.hh	/^    click_err,          \/* unexpected response or error from the router *\/$/;"	e	enum:ControlSocketClient::err_t
click_ether	include/clicknet/ether.h	/^struct click_ether {$/;"	s
click_ether_arp	include/clicknet/ether.h	/^struct click_ether_arp {$/;"	s
click_ether_input	elements/bsdmodule/fromdevice.cc	/^click_ether_input(struct ifnet *ifp, struct mbuf **mp)$/;"	f
click_ether_input_orphan	elements/bsdmodule/fromdevice.cc	/^click_ether_input_orphan(struct ifnet *ifp, struct mbuf **mp)$/;"	f
click_ether_link_state	elements/bsdmodule/fromdevice.cc	/^click_ether_link_state(struct ifnet *ifp, int state)$/;"	f
click_ether_macctl	include/clicknet/ether.h	/^struct click_ether_macctl {$/;"	s
click_ether_output	elements/bsdmodule/fromdevice.cc	/^click_ether_output(struct ifnet *ifp, struct mbuf **mp)$/;"	f
click_ether_vlan	include/clicknet/ether.h	/^struct click_ether_vlan {$/;"	s
click_export_elements	click-buildtool	/^click_export_elements() function to the standard output.$/;"	f
click_export_elements	lib/exportstub.cc	/^click_export_elements()$/;"	f
click_export_elements	userlevel/elements.cc	/^click_export_elements()$/;"	f
click_fddi	include/clicknet/fddi.h	/^struct click_fddi {$/;"	s
click_fddi_8022_1	include/clicknet/fddi.h	/^struct click_fddi_8022_1 {$/;"	s
click_fddi_8022_2	include/clicknet/fddi.h	/^struct click_fddi_8022_2 {$/;"	s
click_fddi_snap	include/clicknet/fddi.h	/^struct click_fddi_snap {$/;"	s
click_fence	include/click/sync.hh	/^click_fence()$/;"	f
click_fill_super	linuxmodule/clickfs.cc	/^click_fill_super(struct super_block *sb, void *data, int flags)$/;"	f	file:
click_fromdevice_rx_handler	elements/linuxmodule/fromdevice.cc	/^click_fromdevice_rx_handler(struct sk_buff *skb)$/;"	f
click_fsmode	linuxmodule/module.cc	/^click_fsmode_t click_fsmode;$/;"	v
click_fsmode_t	linuxmodule/modulepriv.hh	/^struct click_fsmode_t {$/;"	s
click_get_cycles	include/click/glue.hh	/^click_get_cycles()$/;"	f
click_get_processor	include/click/glue.hh	/^click_get_processor()$/;"	f
click_get_sb	linuxmodule/clickfs.cc	/^click_get_sb(struct file_system_type *fs_type, int flags, const char *, void *data)$/;"	f	file:
click_get_sb	linuxmodule/clickfs.cc	/^click_get_sb(struct file_system_type *fs_type, int flags, const char *, void *data, struct vfsmount *vfsmount)$/;"	f	file:
click_gettimeofday	include/click/glue.hh	385;"	d
click_gettimeofday	include/click/glue.hh	394;"	d
click_gettimeofday	lib/glue.cc	/^click_gettimeofday(timeval *tvp)$/;"	f
click_handler_direct_info	linuxmodule/modulepriv.hh	/^struct click_handler_direct_info {$/;"	s
click_handler_file_ops	linuxmodule/clickfs.cc	/^static struct file_operations *click_handler_file_ops;$/;"	v	typeref:struct:file_operations	file:
click_handler_inode_ops	linuxmodule/clickfs.cc	/^static struct inode_operations *click_handler_inode_ops;$/;"	v	typeref:struct:inode_operations	file:
click_has_provision	lib/driver.cc	/^click_has_provision(const char *package)$/;"	f
click_hash_assert	include/click/hashcontainer.hh	6;"	d
click_hash_assert	include/click/hashcontainer.hh	8;"	d
click_icmp	include/clicknet/icmp.h	/^struct click_icmp {$/;"	s
click_icmp6	include/clicknet/icmp6.h	/^struct click_icmp6 {$/;"	s
click_icmp6_echo	include/clicknet/icmp6.h	112;"	d
click_icmp6_membership	include/clicknet/icmp6.h	/^struct click_icmp6_membership {$/;"	s
click_icmp6_paramprob	include/clicknet/icmp6.h	/^struct click_icmp6_paramprob {$/;"	s
click_icmp6_pkttoobig	include/clicknet/icmp6.h	/^struct click_icmp6_pkttoobig {$/;"	s
click_icmp6_redirect	include/clicknet/icmp6.h	/^struct click_icmp6_redirect {$/;"	s
click_icmp6_sequenced	include/clicknet/icmp6.h	/^struct click_icmp6_sequenced {$/;"	s
click_icmp6_timxceed	include/clicknet/icmp6.h	111;"	d
click_icmp6_unreach	include/clicknet/icmp6.h	110;"	d
click_icmp_echo	include/clicknet/icmp.h	79;"	d
click_icmp_hl	include/clicknet/icmp.h	/^click_icmp_hl(uint8_t icmp_type)$/;"	f
click_icmp_needfrag	include/clicknet/icmp.h	/^struct click_icmp_needfrag {$/;"	s
click_icmp_paramprob	include/clicknet/icmp.h	/^struct click_icmp_paramprob {$/;"	s
click_icmp_redirect	include/clicknet/icmp.h	/^struct click_icmp_redirect {$/;"	s
click_icmp_sequenced	include/clicknet/icmp.h	/^struct click_icmp_sequenced {$/;"	s
click_icmp_sourcequench	include/clicknet/icmp.h	77;"	d
click_icmp_timxceed	include/clicknet/icmp.h	78;"	d
click_icmp_tstamp	include/clicknet/icmp.h	/^struct click_icmp_tstamp {$/;"	s
click_icmp_unreach	include/clicknet/icmp.h	76;"	d
click_in6_addr	include/clicknet/ip6.h	/^struct click_in6_addr {$/;"	s
click_in_cksum	include/clicknet/ip.h	134;"	d
click_in_cksum	lib/in_cksum.c	/^click_in_cksum(const unsigned char *addr, int len)$/;"	f
click_in_cksum_pseudohdr	include/clicknet/ip.h	/^click_in_cksum_pseudohdr(uint32_t data_csum, const struct click_ip *iph,$/;"	f
click_in_cksum_pseudohdr_hard	lib/in_cksum.c	/^click_in_cksum_pseudohdr_hard(uint32_t csum, const struct click_ip *iph, int packet_len)$/;"	f
click_in_cksum_pseudohdr_raw	include/clicknet/ip.h	136;"	d
click_in_cksum_pseudohdr_raw	lib/in_cksum.c	/^click_in_cksum_pseudohdr_raw(uint32_t csum, uint32_t src, uint32_t dst, int proto, int packet_len)$/;"	f
click_inet_ioctl	elements/linuxmodule/fromhost.cc	49;"	d	file:
click_init_config	bsdmodule/config.cc	/^click_init_config()$/;"	f
click_init_config	linuxmodule/config.cc	/^click_init_config()$/;"	f
click_init_sched	bsdmodule/sched.cc	/^click_init_sched(ErrorHandler *errh)$/;"	f
click_init_sched	linuxmodule/sched.cc	/^click_init_sched(ErrorHandler *errh)$/;"	f
click_ino	linuxmodule/clickfs.cc	/^static ClickIno click_ino;$/;"	v	file:
click_inode	linuxmodule/clickfs.cc	/^click_inode(struct super_block *sb, ino_t ino)$/;"	f	file:
click_int_large_t	include/click/type_traits.hh	/^typedef int64_t click_int_large_t;$/;"	t
click_int_large_t	include/click/type_traits.hh	/^typedef long click_int_large_t;$/;"	t
click_int_large_t	include/click/type_traits.hh	/^typedef long long click_int_large_t;$/;"	t
click_intmax_t	elements/standard/script.cc	767;"	d	file:
click_intmax_t	elements/standard/script.cc	771;"	d	file:
click_invalid_processor	include/click/glue.hh	/^click_invalid_processor()$/;"	f
click_ip	include/clicknet/ip.h	/^struct click_ip {$/;"	s
click_ip6	include/clicknet/ip6.h	/^struct click_ip6 {$/;"	s
click_jiffies	include/click/glue.hh	388;"	d
click_jiffies	include/click/glue.hh	397;"	d
click_jiffies	lib/glue.cc	/^click_jiffies()$/;"	f
click_jiffies_difference_t	include/click/glue.hh	/^typedef int click_jiffies_difference_t;$/;"	t
click_jiffies_difference_t	include/click/glue.hh	/^typedef long click_jiffies_difference_t;$/;"	t
click_jiffies_less	include/click/glue.hh	391;"	d
click_jiffies_less	include/click/glue.hh	399;"	d
click_jiffies_less	include/click/glue.hh	406;"	d
click_jiffies_t	include/click/glue.hh	/^typedef unsigned click_jiffies_t;$/;"	t
click_jiffies_t	include/click/glue.hh	/^typedef unsigned long click_jiffies_t;$/;"	t
click_lalloc	lib/glue.cc	/^click_lalloc(size_t size)$/;"	f
click_lexer	lib/driver.cc	/^click_lexer()$/;"	f
click_lfree	lib/glue.cc	/^click_lfree(volatile void *p, size_t size)$/;"	f
click_llc	include/clicknet/llc.h	/^struct click_llc {$/;"	s
click_llrpc_call_handler_st	include/click/llrpc.h	/^struct click_llrpc_call_handler_st {$/;"	s
click_llrpc_counts_st	include/click/llrpc.h	/^struct click_llrpc_counts_st {$/;"	s
click_llrpc_proxy_st	include/click/llrpc.h	/^struct click_llrpc_proxy_st {$/;"	s
click_logged_errh	bsdmodule/module.cc	/^KernelErrorHandler *Click::click_logged_errh = 0;$/;"	m	class:Click	file:
click_logged_errh	linuxmodule/module.cc	/^KernelErrorHandler *click_logged_errh = 0;$/;"	v
click_magic	elements/linuxmodule/anydevice.hh	/^	    click_magic = 0x817A10A7$/;"	e	enum:AnyDevice::fake_bridge::__anon315
click_master	bsdmodule/module.cc	/^Master *click_master = 0;$/;"	v
click_master	linuxmodule/module.cc	/^Master *click_master = 0;$/;"	v
click_maybe_define	tools/lib/toolutils.cc	/^click_maybe_define(const char *arg, ErrorHandler *errh)$/;"	f
click_mktmpdir	lib/userutils.cc	/^click_mktmpdir(ErrorHandler *errh)$/;"	f
click_mod	bsdmodule/module_c.c	/^static moduledata_t click_mod = {$/;"	v	file:
click_mode_dir	bsdmodule/module.cc	/^int click_mode_r, click_mode_w, click_mode_x, click_mode_dir;$/;"	v
click_mode_r	bsdmodule/module.cc	/^int click_mode_r, click_mode_w, click_mode_x, click_mode_dir;$/;"	v
click_mode_w	bsdmodule/module.cc	/^int click_mode_r, click_mode_w, click_mode_x, click_mode_dir;$/;"	v
click_mode_x	bsdmodule/module.cc	/^int click_mode_r, click_mode_w, click_mode_x, click_mode_dir;$/;"	v
click_modevent	bsdmodule/module_c.c	/^click_modevent(module_t mod, int type, void *data)$/;"	f	file:
click_name	tools/click-devirtualize/specializer.hh	/^  String click_name;$/;"	m	struct:ElementTypeInfo
click_name	tools/click-devirtualize/specializer.hh	/^  String click_name;$/;"	m	struct:SpecializedClass
click_nd_adv	include/clicknet/ether.h	/^struct click_nd_adv {$/;"	s
click_nd_adv2	include/clicknet/ether.h	/^struct click_nd_adv2 {$/;"	s
click_nd_sol	include/clicknet/ether.h	/^struct click_nd_sol {$/;"	s
click_netif_lock	elements/linuxmodule/todevice.cc	267;"	d	file:
click_netif_lock	elements/linuxmodule/todevice.cc	270;"	d	file:
click_netif_lock	elements/linuxmodule/todevice.cc	273;"	d	file:
click_netif_lock_owner	elements/linuxmodule/todevice.cc	268;"	d	file:
click_netif_lock_owner	elements/linuxmodule/todevice.cc	271;"	d	file:
click_netif_lock_owner	elements/linuxmodule/todevice.cc	274;"	d	file:
click_netif_needs_lock	elements/linuxmodule/todevice.cc	261;"	d	file:
click_netif_needs_lock	elements/linuxmodule/todevice.cc	263;"	d	file:
click_netif_tx_queue_frozen	elements/linuxmodule/todevice.cc	255;"	d	file:
click_netif_tx_queue_frozen	elements/linuxmodule/todevice.cc	257;"	d	file:
click_netif_tx_queue_stopped	elements/linuxmodule/todevice.cc	244;"	d	file:
click_netif_tx_queue_stopped	elements/linuxmodule/todevice.cc	247;"	d	file:
click_netif_tx_queue_stopped	elements/linuxmodule/todevice.cc	250;"	d	file:
click_netif_tx_wake_queue	elements/linuxmodule/todevice.cc	245;"	d	file:
click_netif_tx_wake_queue	elements/linuxmodule/todevice.cc	248;"	d	file:
click_netif_tx_wake_queue	elements/linuxmodule/todevice.cc	251;"	d	file:
click_netisr	bsdmodule/sched.cc	/^click_netisr(struct mbuf* buf)$/;"	f
click_new_file_operations	linuxmodule/clickfs.cc	/^click_new_file_operations()$/;"	f
click_nh	bsdmodule/sched.cc	/^static struct netisr_handler click_nh = {$/;"	v	typeref:struct:netisr_handler	file:
click_parm	linuxmodule/kernelversion.c	/^click_parm(int which)$/;"	f
click_port	elements/local/OpenFlow/datapath.hh	/^struct click_port {$/;"	s
click_port_num	elements/local/OpenFlow/datapath.hh	/^	int click_port_num;$/;"	m	struct:click_port
click_processor_t	include/click/glue.hh	/^typedef int8_t click_processor_t;$/;"	t
click_processor_t	include/click/glue.hh	/^typedef pthread_t click_processor_t;$/;"	t
click_processor_t	include/click/glue.hh	/^typedef uint32_t click_processor_t;$/;"	t
click_provide	lib/driver.cc	/^click_provide(const char *package)$/;"	f
click_put_processor	include/click/glue.hh	/^click_put_processor()$/;"	f
click_qsort	include/click/glue.hh	/^template <typename T> int click_qsort(T *base, size_t n)$/;"	f
click_qsort	lib/glue.cc	/^click_qsort(void *base, size_t n, size_t size, int (*compar)(const void *, const void *))$/;"	f
click_qsort	lib/glue.cc	/^click_qsort(void *base, size_t n, size_t size,$/;"	f
click_radiotap_header	elements/wifi/radiotapencap.cc	/^struct click_radiotap_header {$/;"	s	file:
click_random	include/click/glue.hh	/^inline uint32_t click_random() {$/;"	f
click_random	lib/glue.cc	/^click_random(uint32_t low, uint32_t high)$/;"	f
click_random_seed	lib/glue.cc	/^uint32_t click_random_seed = 152;$/;"	v
click_random_srandom	lib/glue.cc	/^click_random_srandom()$/;"	f
click_read_router	lib/driver.cc	/^click_read_router(String filename, bool is_expr, ErrorHandler *errh, bool initialize, Master *master)$/;"	f
click_read_super	linuxmodule/clickfs.cc	/^click_read_super(struct super_block *sb, void * \/* data *\/, int)$/;"	f	file:
click_remove_element_type	bsdmodule/config.cc	/^click_remove_element_type(int i)$/;"	f
click_remove_element_type	lib/driver.cc	/^click_remove_element_type(int which)$/;"	f
click_remove_element_type	linuxmodule/config.cc	/^click_remove_element_type(int i)$/;"	f
click_reread_super	linuxmodule/clickfs.cc	/^click_reread_super(struct super_block *sb)$/;"	f	file:
click_rfc1483	include/clicknet/rfc1483.h	/^struct click_rfc1483 {$/;"	s
click_root	bsdmodule/clickfs.cc	/^    struct vnode *click_root;$/;"	m	struct:clickfs_mount	typeref:struct:clickfs_mount::vnode	file:
click_router	bsdmodule/module.cc	/^Router *click_router = 0;$/;"	v
click_router	linuxmodule/module.cc	/^Router *click_router = 0;$/;"	v
click_sched	bsdmodule/sched.cc	/^click_sched(void *thunk)$/;"	f	file:
click_sched	linuxmodule/sched.cc	/^click_sched(void *thunk)$/;"	f	file:
click_signal	lib/userutils.cc	/^click_signal(int signum, void (*handler)(int), bool resethand)$/;"	f
click_srandom	include/click/glue.hh	/^inline void click_srandom(uint32_t seed) {$/;"	f
click_static_cleanup	lib/driver.cc	/^click_static_cleanup()$/;"	f
click_static_initialize	lib/driver.cc	/^click_static_initialize()$/;"	f
click_strcmp	lib/glue.cc	/^click_strcmp(const char *a, const char *b)$/;"	f
click_strcmp	lib/userutils.cc	/^click_strcmp(const String &a, const String &b)$/;"	f
click_superblock_ops	linuxmodule/clickfs.cc	/^static struct super_operations click_superblock_ops;$/;"	v	typeref:struct:super_operations	file:
click_swap	include/click/algorithm.hh	/^inline void click_swap(T &a, T &b)$/;"	f
click_swap	include/click/bitvector.hh	/^inline void click_swap(Bitvector &a, Bitvector &b)$/;"	f
click_swap	include/click/dequeue.hh	/^inline void click_swap(DEQueue<T> &a, DEQueue<T> &b)$/;"	f
click_swap	include/click/hashtable.hh	/^inline void click_swap(HashTable<K, V> &a, HashTable<K, V> &b)$/;"	f
click_swap	include/click/straccum.hh	/^inline void click_swap(StringAccum &a, StringAccum &b)$/;"	f
click_swap	include/click/vector.hh	/^inline void click_swap(Vector<T> &a, Vector<T> &b)$/;"	f
click_tcp	include/clicknet/tcp.h	/^struct click_tcp {$/;"	s
click_thread_lock	bsdmodule/sched.cc	/^static struct mtx click_thread_lock;$/;"	v	typeref:struct:mtx	file:
click_thread_lock	linuxmodule/sched.cc	/^static spinlock_t click_thread_lock;$/;"	v	file:
click_thread_pids	bsdmodule/sched.cc	/^static Vector<int> *click_thread_pids;$/;"	v	file:
click_thread_priority	bsdmodule/sched.cc	/^int click_thread_priority = PRIO_PROCESS;$/;"	v
click_thread_priority	linuxmodule/sched.cc	/^static int click_thread_priority = DEF_PRIO;$/;"	v	file:
click_thread_tasks	linuxmodule/sched.cc	/^static Vector<struct task_struct *> *click_thread_tasks;$/;"	v	file:
click_timer	bsdmodule/sched.cc	/^click_timer(void *arg)$/;"	f	file:
click_timer_h	bsdmodule/sched.cc	/^struct callout click_timer_h;$/;"	v	typeref:struct:callout
click_timer_mbuf	bsdmodule/sched.cc	/^static struct mbuf *click_timer_mbuf;$/;"	v	typeref:struct:mbuf	file:
click_to_cxx_name	tools/click-devirtualize/click-devirtualize.cc	/^click_to_cxx_name(const String &click)$/;"	f
click_udp	include/clicknet/udp.h	/^struct click_udp {$/;"	s
click_uint_large_t	include/click/type_traits.hh	/^typedef uint64_t click_uint_large_t;$/;"	t
click_uint_large_t	include/click/type_traits.hh	/^typedef unsigned long click_uint_large_t;$/;"	t
click_uint_large_t	include/click/type_traits.hh	/^typedef unsigned long long click_uint_large_t;$/;"	t
click_uintmax_t	elements/standard/script.cc	768;"	d	file:
click_uintmax_t	elements/standard/script.cc	772;"	d	file:
click_unexport_elements	lib/exportstub.cc	/^click_unexport_elements()$/;"	f
click_unexport_elements	userlevel/elements.cc	/^click_unexport_elements()$/;"	f
click_unprovide	lib/driver.cc	/^click_unprovide(const char *package)$/;"	f
click_update_in_cksum	include/clicknet/ip.h	/^click_update_in_cksum(uint16_t *csum, uint16_t old_hw, uint16_t new_hw)$/;"	f
click_update_zero_in_cksum	include/clicknet/ip.h	/^click_update_zero_in_cksum(uint16_t *csum, const unsigned char *x, int len)$/;"	f
click_update_zero_in_cksum_hard	lib/in_cksum.c	/^click_update_zero_in_cksum_hard(uint16_t *csum, const unsigned char *x, int len)$/;"	f
click_vfsconf	bsdmodule/module_c.c	/^static struct vfsconf click_vfsconf = {$/;"	v	typeref:struct:vfsconf	file:
click_wifi	include/clicknet/wifi.h	/^struct click_wifi {$/;"	s
click_wifi_extra	include/clicknet/wifi.h	/^struct click_wifi_extra {$/;"	s
clickbindir	config.mk	/^clickbindir=\/usr\/local\/bin$/;"	m
clickdatadir	Makefile	/^clickdatadir = $(datadir)\/click$/;"	m
clickdatadir	config.mk	/^clickdatadir=\/usr\/local\/share\/click$/;"	m
clickdatadir	doc/Makefile	/^clickdatadir = $(datadir)\/click$/;"	m
clickdl_load_package	lib/userutils.cc	/^clickdl_load_package(String package, ErrorHandler *errh)$/;"	f
clickdl_load_requirement	lib/driver.cc	/^clickdl_load_requirement(String name, const Vector<ArchiveElement> *archive, ErrorHandler *errh)$/;"	f
clickfs	linuxmodule/clickfs.cc	/^static struct proclikefs_file_system *clickfs;$/;"	v	typeref:struct:proclikefs_file_system	file:
clickfs_access	bsdmodule/clickfs_vnops.cc	/^clickfs_access(struct vop_access_args *ap)$/;"	f	file:
clickfs_cdriver	apps/clicky/src/cdriver.cc	/^clickfs_cdriver::clickfs_cdriver(crouter *cr, const String &prefix)$/;"	f	class:clicky::clickfs_cdriver
clickfs_cdriver	apps/clicky/src/cdriver.hh	/^class clickfs_cdriver : public cdriver { public:$/;"	c	namespace:clicky
clickfs_close	bsdmodule/clickfs_vnops.cc	/^clickfs_close(struct vop_close_args *ap)$/;"	f	file:
clickfs_dir	tools/click-install/common.cc	/^String clickfs_dir = String::make_stable("\/click");$/;"	v
clickfs_dirent	bsdmodule/clickfs_tree.hh	/^struct clickfs_dirent {$/;"	s
clickfs_dirent_type	bsdmodule/clickfs_tree.hh	/^enum clickfs_dirent_type {$/;"	g
clickfs_fsync	bsdmodule/clickfs_vnops.cc	/^clickfs_fsync(struct vop_fsync_args *ap)$/;"	f	file:
clickfs_fsync_body	bsdmodule/clickfs_vnops.cc	/^clickfs_fsync_body(struct clickfs_dirent *cde)$/;"	f	file:
clickfs_getattr	bsdmodule/clickfs_vnops.cc	/^clickfs_getattr(struct vop_getattr_args *ap)$/;"	f	file:
clickfs_inactive	bsdmodule/clickfs_vnops.cc	/^clickfs_inactive(struct vop_inactive_args *ap)$/;"	f	file:
clickfs_init	bsdmodule/clickfs.cc	/^clickfs_init(struct vfsconf *vfsp)$/;"	f	file:
clickfs_ino	bsdmodule/clickfs_tree.cc	/^uint32_t clickfs_ino;		\/* Just assume it will never rewind *\/$/;"	v
clickfs_int_get_element	bsdmodule/clickfs_vnops.cc	/^clickfs_int_get_element(struct clickfs_dirent *cde)$/;"	f	file:
clickfs_int_get_handler	bsdmodule/clickfs_vnops.cc	/^clickfs_int_get_handler(struct clickfs_dirent *cde)$/;"	f
clickfs_int_send_dirent	bsdmodule/clickfs_vnops.cc	/^clickfs_int_send_dirent(const char *name, int *skip, int fileno, struct uio *uio)$/;"	f	file:
clickfs_lock	linuxmodule/clickfs.cc	/^static spinlock_t clickfs_lock;$/;"	v	file:
clickfs_lookup	bsdmodule/clickfs_vnops.cc	/^clickfs_lookup(struct vop_lookup_args *ap)$/;"	f	file:
clickfs_mount	bsdmodule/clickfs.cc	/^clickfs_mount(struct mount *mp, struct thread *td)$/;"	f	file:
clickfs_mount	bsdmodule/clickfs.cc	/^struct clickfs_mount {$/;"	s	file:
clickfs_open	bsdmodule/clickfs_vnops.cc	/^clickfs_open(struct vop_open_args *ap)$/;"	f	file:
clickfs_prefix	etc/samplellrpc/click-readcounter.c	/^static const char *clickfs_prefix;$/;"	v	file:
clickfs_prefix	tools/click-install/common.cc	/^String clickfs_prefix = String::make_stable("\/click");$/;"	v
clickfs_read	bsdmodule/clickfs_vnops.cc	/^clickfs_read(struct vop_read_args *ap)$/;"	f	file:
clickfs_read_count	linuxmodule/clickfs.cc	/^static atomic_t clickfs_read_count;$/;"	v	file:
clickfs_readdir	bsdmodule/clickfs_vnops.cc	/^clickfs_readdir(struct vop_readdir_args *ap)$/;"	f	file:
clickfs_readlink	bsdmodule/clickfs_vnops.cc	/^clickfs_readlink(struct vop_readlink_args *ap)$/;"	f	file:
clickfs_ready	linuxmodule/clickfs.cc	/^static int clickfs_ready;$/;"	v	file:
clickfs_reclaim	bsdmodule/clickfs_vnops.cc	/^clickfs_reclaim(struct vop_reclaim_args *ap)$/;"	f	file:
clickfs_root	bsdmodule/clickfs.cc	/^clickfs_root(struct mount *mp, int flags, struct vnode **vpp, struct thread *td)$/;"	f	file:
clickfs_rootvnode	bsdmodule/clickfs_vnops.cc	/^clickfs_rootvnode(struct mount *mp, struct vnode **vpp)$/;"	f
clickfs_setattr	bsdmodule/clickfs_vnops.cc	/^clickfs_setattr(struct vop_setattr_args *ap)$/;"	f	file:
clickfs_statfs	bsdmodule/clickfs.cc	/^clickfs_statfs(struct mount *mp, struct statfs *sbp, struct thread *td)$/;"	f	file:
clickfs_sync	bsdmodule/clickfs.cc	/^clickfs_sync(struct mount *mp, int waitfor, struct thread *td)$/;"	f	file:
clickfs_task	lib/glue.cc	/^struct task_struct *clickfs_task;$/;"	v	typeref:struct:task_struct
clickfs_tree_add_dir	bsdmodule/clickfs_tree.cc	/^clickfs_tree_add_dir(struct clickfs_dirent *cde, char *name, int perm)$/;"	f
clickfs_tree_add_handle	bsdmodule/clickfs_tree.cc	/^clickfs_tree_add_handle(struct clickfs_dirent *cde,$/;"	f
clickfs_tree_add_link	bsdmodule/clickfs_tree.cc	/^clickfs_tree_add_link(struct clickfs_dirent *cde, char *name, char *lnk_name)$/;"	f
clickfs_tree_cleanup	bsdmodule/clickfs_tree.cc	/^clickfs_tree_cleanup()$/;"	f
clickfs_tree_find_file	bsdmodule/clickfs_tree.cc	/^clickfs_tree_find_file(struct clickfs_dirent *cde, char *name)$/;"	f	file:
clickfs_tree_free_dirent_r	bsdmodule/clickfs_tree.cc	/^clickfs_tree_free_dirent_r(struct clickfs_dirent *cde)$/;"	f	file:
clickfs_tree_init	bsdmodule/clickfs_tree.cc	/^clickfs_tree_init()$/;"	f
clickfs_tree_root	bsdmodule/clickfs_tree.cc	/^struct clickfs_dirent *clickfs_tree_root;$/;"	v	typeref:struct:clickfs_dirent
clickfs_tree_unlink	bsdmodule/clickfs_tree.cc	/^clickfs_tree_unlink(struct clickfs_dirent *cde, char *name)$/;"	f
clickfs_uninit	bsdmodule/clickfs.cc	/^clickfs_uninit(struct vfsconf *vfsp)$/;"	f	file:
clickfs_unmount	bsdmodule/clickfs.cc	/^clickfs_unmount(struct mount *mp, int mntflags, struct thread *td)$/;"	f	file:
clickfs_vfsops	bsdmodule/clickfs.cc	/^struct vfsops clickfs_vfsops = {$/;"	v	typeref:struct:vfsops
clickfs_vnodeops	bsdmodule/clickfs_vnops.cc	/^struct vop_vector clickfs_vnodeops = {$/;"	v	typeref:struct:vop_vector
clickfs_vtype	bsdmodule/clickfs_vnops.cc	/^static enum vtype clickfs_vtype[] = {$/;"	v	typeref:enum:vtype	file:
clickfs_waitq	linuxmodule/clickfs.cc	/^static wait_queue_head_t clickfs_waitq;$/;"	v	file:
clickfs_write	bsdmodule/clickfs_vnops.cc	/^clickfs_write(struct vop_write_args *ap)$/;"	f	file:
clickincludedir	Makefile	/^clickincludedir = $(includedir)\/click$/;"	m
clickincludedir	config.mk	/^clickincludedir=\/usr\/local\/include$/;"	m
clickinfo	include/click/simclick.h	/^    void *clickinfo;$/;"	m	struct:simclick_node
clicklibdir	config.mk	/^clicklibdir=\/usr\/local\/lib$/;"	m
clicklinux_builddir	config.mk	/^clicklinux_builddir=NONE$/;"	m
clicklinux_srcdir	config.mk	/^clicklinux_srcdir=NONE$/;"	m
clicknode	ns/nsclick-test.cc	/^    struct clicknode : public simclick_node_t {$/;"	s	class:TestClickSimulator	file:
clickpath	lib/userutils.cc	/^clickpath()$/;"	f
clickpath_expand_path	lib/userutils.cc	/^clickpath_expand_path(const char* subdir, const String& default_path, Vector<String>& result)$/;"	f
clickpath_find_file	lib/userutils.cc	/^clickpath_find_file(const String &filename, const char *subdir,$/;"	f
clickprefix	config.mk	/^clickprefix=\/usr\/local$/;"	m
clickrouters_	ns/nsclick-test.cc	/^    vector<clicknode *> clickrouters_;$/;"	m	class:TestClickSimulator	file:
clicksbindir	config.mk	/^clicksbindir=\/usr\/local\/sbin$/;"	m
clicksrcdir	config.mk	/^clicksrcdir=\/usr\/local\/share\/click\/src$/;"	m
clicky	apps/clicky/src/cdriver.cc	/^namespace clicky {$/;"	n	file:
clicky	apps/clicky/src/cdriver.hh	/^namespace clicky {$/;"	n
clicky	apps/clicky/src/crouter.cc	/^namespace clicky {$/;"	n	file:
clicky	apps/clicky/src/crouter.hh	/^namespace clicky {$/;"	n
clicky	apps/clicky/src/ddecor.cc	/^namespace clicky {$/;"	n	file:
clicky	apps/clicky/src/ddecor.hh	/^namespace clicky {$/;"	n
clicky	apps/clicky/src/dialogs.cc	/^namespace clicky {$/;"	n	file:
clicky	apps/clicky/src/dstyle.cc	/^namespace clicky {$/;"	n	file:
clicky	apps/clicky/src/dstyle.hh	/^namespace clicky {$/;"	n
clicky	apps/clicky/src/dwidget.cc	/^namespace clicky {$/;"	n	file:
clicky	apps/clicky/src/dwidget.hh	/^namespace clicky {$/;"	n
clicky	apps/clicky/src/hvalues.cc	/^namespace clicky {$/;"	n	file:
clicky	apps/clicky/src/hvalues.hh	/^namespace clicky {$/;"	n
clicky	apps/clicky/src/tmain.cc	/^namespace clicky {$/;"	n	file:
clicky	apps/clicky/src/tmain.hh	/^namespace clicky {$/;"	n
clicky	apps/clicky/src/wdiagram.cc	/^namespace clicky {$/;"	n	file:
clicky	apps/clicky/src/wdiagram.hh	/^namespace clicky {$/;"	n
clicky	apps/clicky/src/whandler.cc	/^namespace clicky {$/;"	n	file:
clicky	apps/clicky/src/whandler.hh	/^namespace clicky {$/;"	n
clicky	apps/clicky/src/wmain.cc	/^namespace clicky {$/;"	n	file:
clicky	apps/clicky/src/wmain.hh	/^namespace clicky {$/;"	n
client_set_tickets	lib/routerthread.cc	/^RouterThread::client_set_tickets(int client, int new_tickets)$/;"	f	class:RouterThread
client_update_pass	lib/routerthread.cc	/^RouterThread::client_update_pass(int client, const Timestamp &t_before)$/;"	f	class:RouterThread
clip_to_border	apps/clicky/src/dwidget.cc	/^void delt::clip_to_border(dcontext &dcx) const$/;"	f	class:clicky::delt
clone	lib/lexer.cc	/^  Compound *clone() const		{ return 0; }$/;"	f	class:Lexer::Compound
clone	lib/packet.cc	/^Packet::clone()$/;"	f	class:Packet
clone_elements	include/click/hashtable.hh	/^void HashTable<T>::clone_elements(const HashTable<T> &o)$/;"	f	class:HashTable
close	apps/ClickController/ControlSocket.java	/^    public void close() {$/;"	m	class:ControlSocket
close	apps/clicky/src/rectangle.hh	/^inline bool point::close(const point &a, const point &b, double d) {$/;"	f	class:point
close	apps/csclient/csclient.cc	/^ControlSocketClient::close()$/;"	f	class:ControlSocketClient
close	elements/local/OpenFlow/lib/vconn-provider.hh	/^    void (*close)(struct pvconn *pvconn);$/;"	m	struct:pvconn_class
close	elements/local/OpenFlow/lib/vconn-provider.hh	/^    void (*close)(struct vconn *vconn);$/;"	m	struct:vconn_class
close_active	elements/userlevel/socket.cc	/^Socket::close_active(void)$/;"	f	class:Socket
close_log	elements/grid/gridlogger.cc	/^GridLogger::close_log() {$/;"	f	class:GridLogger
clp_utf8_charlen	lib/clp.c	/^clp_utf8_charlen(const Clp_Internal *cli, const char *s)$/;"	f	file:
clptest_errh	elements/test/clptest.cc	/^void clptest_errh(Clp_Parser *clp, const char *error) {$/;"	f
clust_full_size	conf/click-mkclgw.pl	/^sub clust_full_size { return -1; }$/;"	s
clust_full_size	conf/click-mkclgw.pl	/^sub clust_full_size {$/;"	s
cmd	drivers/e1000-4.x/src/e1000_hw.h	/^            uint8_t cmd;        \/* *\/$/;"	m	struct:e1000_data_desc::__anon62::__anon63
cmd	drivers/e1000-4.x/src/e1000_hw.h	/^            uint8_t cmd;        \/* Descriptor control *\/$/;"	m	struct:e1000_tx_desc::__anon52::__anon53
cmd	drivers/e1000-4.x/src/idiag_pro.h	/^	uint32_t cmd;$/;"	m	struct:idiag_pro_data
cmd	drivers/e1000-5.x/src/e1000_hw.h	/^            uint8_t cmd;        \/* *\/$/;"	m	struct:e1000_data_desc::__anon159::__anon160
cmd	drivers/e1000-5.x/src/e1000_hw.h	/^            uint8_t cmd;        \/* Descriptor control *\/$/;"	m	struct:e1000_tx_desc::__anon149::__anon150
cmd	drivers/e1000-5.x/src/kcompat.h	/^	u32	cmd;	\/* ETHTOOL_{G,S}COALESCE *\/$/;"	m	struct:_kc_ethtool_coalesce
cmd	drivers/e1000-5.x/src/kcompat.h	/^	u32	cmd;	\/* ETHTOOL_{G,S}PAUSEPARAM *\/$/;"	m	struct:_kc_ethtool_pauseparam
cmd	drivers/e1000-5.x/src/kcompat.h	/^	u32	cmd;	\/* ETHTOOL_{G,S}RINGPARAM *\/$/;"	m	struct:_kc_ethtool_ringparam
cmd	drivers/e1000-5.x/src/kcompat.h	/^	u32	cmd;$/;"	m	struct:_kc_ethtool_regs
cmd	drivers/e1000-5.x/src/kcompat.h	/^	u32     cmd;            \/* ETHTOOL_GSTRINGS *\/$/;"	m	struct:ethtool_gstrings
cmd	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t cmd;$/;"	m	struct:ethtool_eeprom
cmd	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t cmd;$/;"	m	struct:ethtool_stats
cmd	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t cmd;$/;"	m	struct:ethtool_test
cmd	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t cmd;$/;"	m	struct:ethtool_value
cmd	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t cmd;$/;"	m	struct:k_ethtool_drvinfo
cmd	drivers/e1000-7.x/src/e1000_hw.h	/^            uint8_t cmd;        \/* *\/$/;"	m	struct:e1000_data_desc::__anon116::__anon117
cmd	drivers/e1000-7.x/src/e1000_hw.h	/^            uint8_t cmd;        \/* Descriptor control *\/$/;"	m	struct:e1000_tx_desc::__anon106::__anon107
cmd	drivers/e1000-7.x/src/kcompat.h	/^	u32	cmd;	\/* ETHTOOL_{G,S}COALESCE *\/$/;"	m	struct:_kc_ethtool_coalesce
cmd	drivers/e1000-7.x/src/kcompat.h	/^	u32	cmd;	\/* ETHTOOL_{G,S}PAUSEPARAM *\/$/;"	m	struct:_kc_ethtool_pauseparam
cmd	drivers/e1000-7.x/src/kcompat.h	/^	u32	cmd;	\/* ETHTOOL_{G,S}RINGPARAM *\/$/;"	m	struct:_kc_ethtool_ringparam
cmd	drivers/e1000-7.x/src/kcompat.h	/^	u32	cmd;$/;"	m	struct:_kc_ethtool_regs
cmd	drivers/e1000-7.x/src/kcompat.h	/^	u32     cmd;            \/* ETHTOOL_GSTRINGS *\/$/;"	m	struct:ethtool_gstrings
cmd	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t cmd;$/;"	m	struct:ethtool_eeprom
cmd	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t cmd;$/;"	m	struct:ethtool_stats
cmd	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t cmd;$/;"	m	struct:ethtool_test
cmd	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t cmd;$/;"	m	struct:ethtool_value
cmd	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t cmd;$/;"	m	struct:k_ethtool_drvinfo
cmd	elements/local/OpenFlow/lib/netlink-protocol.hh	/^    uint8_t cmd;$/;"	m	struct:genlmsghdr
cmd_and_length	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t cmd_and_length;    \/* *\/$/;"	m	struct:e1000_context_desc
cmd_and_length	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t cmd_and_length;    \/* *\/$/;"	m	struct:e1000_context_desc
cmd_and_length	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t cmd_and_length;    \/* *\/$/;"	m	struct:e1000_context_desc
cmd_ccompile	bsdmodule/Makefile	/^cmd_ccompile = $(COMPILE) -c -o $@ $<$/;"	m
cmd_ccompile	etc/pkg-linuxmodule-26.mk	/^cmd_ccompile = $(COMPILE) $(DEPCFLAGS) $(compile_option) -o $@ $<$/;"	m
cmd_ccompile	linuxmodule/Makefile	/^cmd_ccompile = $(COMPILE) $(CLICKDEPCFLAGS) $(compile_option) -o $@ $<$/;"	m
cmd_ccompile_nodep	etc/pkg-linuxmodule-26.mk	/^cmd_ccompile_nodep = $(COMPILE) $(compile_option) -o $@ $<$/;"	m
cmd_ccompile_nodep	linuxmodule/Makefile	/^cmd_ccompile_nodep = $(COMPILE) $(compile_option) -o $@ $<$/;"	m
cmd_cxxcompile	bsdmodule/Makefile	/^cmd_cxxcompile = $(CXXCOMPILE) -c -o $@ $<$/;"	m
cmd_cxxcompile	etc/pkg-linuxmodule-26.mk	/^cmd_cxxcompile = $(CXXCOMPILE) $(DEPCFLAGS) $(compile_option) -o $@ $<$/;"	m
cmd_cxxcompile	linuxmodule/Makefile	/^cmd_cxxcompile = $(CXXCOMPILE) $(CLICKDEPCFLAGS) $(compile_option) -o $@ $<$/;"	m
cmd_cxxcompile_nodep	etc/pkg-linuxmodule-26.mk	/^cmd_cxxcompile_nodep = $(CXXCOMPILE) $(compile_option) -o $@ $<$/;"	m
cmd_cxxcompile_nodep	linuxmodule/Makefile	/^cmd_cxxcompile_nodep = $(CXXCOMPILE) $(compile_option) -o $@ $<$/;"	m
cmp	elements/local/FlowNet/common/Flow.hh	/^inline int Flow::cmp(const struct FlowID* f)$/;"	f	class:Flow
cmp	elements/local/FlowNet/common/Flow.hh	/^inline int FlowID::cmp(const struct FlowID* fid)$/;"	f	class:FlowID
code	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t code;$/;"	m	struct:ofp_error_msg
code	elements/local/OpenFlow/lib/ofp-print.cc	/^    int code;$/;"	m	struct:error_type	file:
code	include/clicknet/ether.h	/^    uint8_t code;$/;"	m	struct:click_nd_adv
code	include/clicknet/ether.h	/^    uint8_t code;$/;"	m	struct:click_nd_adv2
code	include/clicknet/ether.h	/^    uint8_t code;$/;"	m	struct:click_nd_sol
code_flow	tools/lib/processingt.cc	/^ProcessingT::code_flow(const String &flow_code, int port, bool isoutput,$/;"	f	class:ProcessingT
coefC	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	       coefC,       \/\/ coefficient of correlation$/;"	m	struct:LinearRegression
coefD	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	double coefD,       \/\/ coefficient of determination$/;"	m	struct:LinearRegression
colc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t colc;$/;"	m	struct:e1000_hw_stats
colc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t colc;$/;"	m	struct:e1000_hw_stats
colc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t colc;$/;"	m	struct:e1000_hw_stats
colc_old	drivers/e1000-5.x/src/e1000.h	/^	uint64_t colc_old;$/;"	m	struct:e1000_adapter
colc_old	drivers/e1000-7.x/src/e1000.h	/^	uint64_t colc_old;$/;"	m	struct:e1000_adapter
collect_decor_styles	apps/clicky/src/dstyle.cc	/^void dcss_set::collect_decor_styles(PermString decor, crouter *cr, const delt *e,$/;"	f	class:clicky::dcss_set
collect_elt_styles	apps/clicky/src/dstyle.cc	/^void dcss_set::collect_elt_styles(crouter *cr, const delt *e, int pflag,$/;"	f	class:clicky::dcss_set
collect_handler_styles	apps/clicky/src/dstyle.cc	/^void dcss_set::collect_handler_styles(crouter *cr, const handler_value *hv,$/;"	f	class:clicky::dcss_set
collect_indexes	tools/lib/elementmap.cc	/^ElementMap::collect_indexes(const RouterT *router, Vector<int> &indexes,$/;"	f	class:ElementMap
collect_locally_declared_types	tools/lib/routert.cc	/^RouterT::collect_locally_declared_types(Vector<ElementClassT *> &v) const$/;"	f	class:RouterT
collect_overloads	tools/lib/eclasst.cc	/^ElementClassT::collect_overloads(Vector<ElementClassT *> &v) const$/;"	f	class:ElementClassT
collect_overloads	tools/lib/eclasst.cc	/^SynonymElementClassT::collect_overloads(Vector<ElementClassT *> &v) const$/;"	f	class:SynonymElementClassT
collect_overloads	tools/lib/routert.cc	/^RouterT::collect_overloads(Vector<ElementClassT *> &v) const$/;"	f	class:RouterT
collect_port_styles	apps/clicky/src/dstyle.cc	/^void dcss_set::collect_port_styles(crouter *cr, const delt *e, bool isoutput,$/;"	f	class:clicky::dcss_set
collect_types	tools/lib/eclasst.cc	/^ElementClassT::collect_types(HashTable<ElementClassT *, int> &m) const$/;"	f	class:ElementClassT
collect_types	tools/lib/eclasst.cc	/^SynonymElementClassT::collect_types(HashTable<ElementClassT *, int> &m) const$/;"	f	class:SynonymElementClassT
collect_types	tools/lib/routert.cc	/^RouterT::collect_types(HashTable<ElementClassT *, int> &m) const$/;"	f	class:RouterT
collision_delta	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t collision_delta;$/;"	m	struct:e1000_hw
collision_delta	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t collision_delta;$/;"	m	struct:e1000_hw
collision_delta	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t collision_delta;$/;"	m	struct:e1000_hw
collisions	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t collisions;     \/* Number of collisions. *\/$/;"	m	struct:ofp_port_stats
color	apps/clicky/src/dstyle.hh	/^    double color[4];$/;"	m	struct:clicky::delt_style
color	apps/clicky/src/dstyle.hh	/^    double color[4];$/;"	m	struct:clicky::dfullness_style
color	apps/clicky/src/dstyle.hh	/^    double color[4];$/;"	m	struct:clicky::dport_style
color_interpolate	apps/clicky/src/ddecor.cc	/^void color_interpolate(double *c, const double *c1, double m, const double *c2)$/;"	f	namespace:clicky
colordef	apps/clicky/src/dstyle.cc	/^struct colordef {$/;"	s	namespace:clicky	file:
colordefs	apps/clicky/src/dstyle.cc	/^static const colordef colordefs[] = {$/;"	m	namespace:clicky	file:
colors	apps/clicky/src/dstyle.hh	/^    Vector<double> colors;$/;"	m	struct:clicky::dactivity_style
column_count	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::Flow::column_count(int column) const$/;"	f	class:AggregatePacketCounter::Flow
combine	lib/router.cc	/^Handler::combine(const Handler &x)$/;"	f	class:Handler
combine_alignment	tools/click-align/alignclass.cc	/^combine_alignment(Vector<Alignment>::const_iterator a, int n)$/;"	f
combine_anno	lib/error.cc	/^ErrorHandler::combine_anno(const String &text, const String &anno)$/;"	f	class:ErrorHandler
combine_classifiers	tools/click-fastclassifier/click-fastclassifier.cc	/^combine_classifiers(RouterT *router, ElementT *from, int from_port, ElementT *to)$/;"	f	file:
combine_compatible_states	elements/standard/classification.cc	/^Program::combine_compatible_states()$/;"	f	class:Classification::Wordwise::Program
combine_links	tools/click-combine/click-combine.cc	/^combine_links(ErrorHandler *errh)$/;"	f	file:
command	apps/clicky/src/cdriver.hh	/^	String command;$/;"	m	struct:clicky::csocket_cdriver::msg
command	elements/grid/airoinfo.cc	/^  unsigned short command;	\/\/ What to do$/;"	m	struct:aironet_ioctl_t	file:
command	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint8_t command;        \/* One of NXSC_*. *\/$/;"	m	struct:nx_snat_config
command	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t command;             \/* One of OFPFC_*. *\/$/;"	m	struct:ofp_flow_mod
command_at	test/testie	/^sub command_at ($$;$) {$/;"	s
command_data	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t command_data[E1000_HI_MAX_DATA_LENGTH];   \/* Command data can length 0..252 *\/$/;"	m	struct:e1000_host_command_info
command_data	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t command_data[E1000_HI_MAX_MNG_DATA_LENGTH];   \/* Command data can length 0..0x658*\/$/;"	m	struct:e1000_host_mng_command_info
command_datalen	apps/clicky/src/cdriver.hh	/^	int command_datalen;$/;"	m	struct:clicky::csocket_cdriver::msg
command_header	drivers/e1000-7.x/src/e1000_hw.h	/^    struct e1000_host_command_header command_header;  \/* Command Head\/Command Result Head has 4 bytes *\/$/;"	m	struct:e1000_host_command_info	typeref:struct:e1000_host_command_info::e1000_host_command_header
command_header	drivers/e1000-7.x/src/e1000_hw.h	/^    struct e1000_host_mng_command_header command_header;  \/* Command Head\/Command Result Head has 4 bytes *\/$/;"	m	struct:e1000_host_mng_command_info	typeref:struct:e1000_host_mng_command_info::e1000_host_mng_command_header
command_id	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t command_id;$/;"	m	struct:e1000_host_command_header
command_id	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t command_id;$/;"	m	struct:e1000_host_mng_command_header
command_length	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t command_length;$/;"	m	struct:e1000_host_mng_command_header
command_length	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t command_length;$/;"	m	struct:e1000_host_command_header
command_options	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t command_options;   \/* I\/F bits for command, status for return *\/$/;"	m	struct:e1000_host_command_header
common_alignment	tools/click-align/alignclass.cc	/^common_alignment(Vector<Alignment>::const_iterator a, int n)$/;"	f
comp_icv_len	elements/wifi/athdesc.h	/^	u_int32_t	comp_icv_len:2;$/;"	m	struct:ar5212_desc
comp_iv_len	elements/wifi/athdesc.h	/^	u_int32_t	comp_iv_len:2;$/;"	m	struct:ar5212_desc
comp_proc	elements/wifi/athdesc.h	/^	u_int32_t	comp_proc:2;$/;"	m	struct:ar5212_desc
comp_success	elements/wifi/athdesc.h	/^	u_int32_t	comp_success:1;$/;"	m	struct:ar5212_desc
compact	include/click/string.hh	/^    inline String compact() const {$/;"	f	class:String
compact	tools/lib/routert.cc	/^RouterT::compact()$/;"	f	class:RouterT
compar	elements/test/sorttest.cc	/^static int compar(const void *xa, const void *xb, void *)$/;"	f	file:
compar_items	tools/click-pretty/click-pretty.cc	/^static OutputItem *compar_items;$/;"	v	file:
compare	apps/ClickController/RouterTreeModel.java	/^	public int compare(Object o1, Object o2) {$/;"	m	class:RouterTreeModel.HandlerComparator
compare	elements/etherswitch/bridgemessage.cc	/^BridgeMessage::compare(const BridgeMessage* other) const {$/;"	f	class:BridgeMessage
compare	elements/etherswitch/bridgemessage.cc	/^BridgeMessage::compare(const BridgeMessage* other,$/;"	f	class:BridgeMessage
compare	elements/etherswitch/bridgemessage.cc	/^BridgeMessage::compare(const BridgeMessage::wire* other) const {$/;"	f	class:BridgeMessage
compare	elements/standard/classification.hh	/^    static int compare(const Insn &a, const Insn &b) {$/;"	f	struct:Classification::Wordwise::Insn
compare	include/click/string.hh	/^    inline int compare(const String &x) const {$/;"	f	class:String
compare	include/click/string.hh	/^    static inline int compare(const String &a, const String &b) {$/;"	f	class:String
compare	lib/string.cc	/^String::compare(const char *s, int len) const$/;"	f	class:String
compare	ns/CUT_BinHeap.h	/^  Compare compare;$/;"	m	class:CUT_BinHeap
compare_and_swap	include/click/atomic.hh	/^atomic_uint32_t::compare_and_swap(uint32_t expected, uint32_t desired)$/;"	f	class:atomic_uint32_t
compare_and_swap	include/click/atomic.hh	/^atomic_uint32_t::compare_and_swap(volatile uint32_t &x, uint32_t expected, uint32_t desired)$/;"	f	class:atomic_uint32_t
compare_options	lib/clp.c	/^compare_options(Clp_Parser *clp, const Clp_Option *o1, Clp_InternOption *io1,$/;"	f	file:
compare_ports	elements/local/OpenFlow/lib/ofp-print.cc	/^compare_ports(const void *a_, const void *b_)$/;"	f	file:
compare_strings	elements/local/OpenFlow/lib/svec.cc	/^compare_strings(const void *a_, const void *b_)$/;"	f	file:
compare_swap	include/click/atomic.hh	/^atomic_uint32_t::compare_swap(uint32_t expected, uint32_t desired)$/;"	f	class:atomic_uint32_t
compare_swap	include/click/atomic.hh	/^atomic_uint32_t::compare_swap(volatile uint32_t &x, uint32_t expected, uint32_t desired)$/;"	f	class:atomic_uint32_t
comparison_char	apps/clicky/src/dstyle.cc	/^inline bool comparison_char(char c)$/;"	f	namespace:clicky
compatible	elements/standard/classification.cc	/^Insn::compatible(const Insn &x, bool consider_short) const$/;"	f	class:Classification::Wordwise::Insn
compatible	lib/router.cc	/^Handler::compatible(const Handler &x) const$/;"	f	class:Handler
compatible_driver_mask	tools/lib/elementmap.cc	/^ElementMap::compatible_driver_mask(const RouterT *r, ErrorHandler *errh) const$/;"	f	class:ElementMap
compensation	include/click/ewma.hh	/^    static unsigned compensation() {$/;"	f	class:FixedEWMAXParameters
compensation	include/click/ewma.hh	/^    unsigned compensation() const {$/;"	f	class:StabilityEWMAXParameters
compile	elements/ip/ipfilter.cc	/^IPFilter::Primitive::compile(Classification::Wordwise::Program &p, Vector<int> &tree) const$/;"	f	class:IPFilter::Primitive
compile	elements/standard/classification.cc	/^CompressedProgram::compile(const Program &prog, bool perform_binary_search,$/;"	f	class:Classification::Wordwise::CompressedProgram
compile_archive_packages	tools/click-install/click-install.cc	/^compile_archive_packages(RouterT *r, HashTable<String, int> &packages,$/;"	f	file:
compile_classifiers	tools/click-fastclassifier/click-fastclassifier.cc	/^compile_classifiers(RouterT *r, const String &package_name,$/;"	f	file:
compile_file	click-compile	/^compile_file () {$/;"	f
compile_flags	tools/lib/elementmap.hh	/^	String compile_flags;$/;"	m	struct:ElementMap::Globals
compile_option	etc/pkg-linuxmodule-26.mk	/^compile_option = -E$/;"	m
compile_option	etc/pkg-linuxmodule-26.mk	/^compile_option = -c$/;"	m
compile_option	linuxmodule/Makefile	/^compile_option = -E$/;"	m
compile_option	linuxmodule/Makefile	/^compile_option = -c$/;"	m
compile_pattern	tools/click-devirtualize/cxxclass.cc	/^compile_pattern(const String &pattern0)$/;"	f
compile_quiet	tools/click-fastclassifier/click-fastclassifier.cc	/^static bool compile_quiet;$/;"	v	file:
complain	apps/clicky/src/cdriver.cc	/^void clickfs_cdriver::complain(const String &fullname, const String &ename, const String &, int errno_val, messagevector &messages)$/;"	f	class:clicky::clickfs_cdriver
complain	elements/userlevel/khandlerproxy.cc	/^KernelHandlerProxy::complain(ErrorHandler *errh, const String &hname,$/;"	f	class:KernelHandlerProxy
complain	etc/samplellrpc/click-readcounter.c	/^complain(const char *element, char *buf)$/;"	f	file:
complain_about_open	elements/userlevel/khandlerproxy.cc	/^KernelHandlerProxy::complain_about_open(ErrorHandler *errh,$/;"	f	class:KernelHandlerProxy
complain_to	elements/userlevel/khandlerproxy.cc	/^complain_to(ErrorHandler *errh, int errcode, const String &complaint)$/;"	f	file:
complete	elements/userlevel/progressbar.cc	/^ProgressBar::complete(bool is_full)$/;"	f	class:ProgressBar
complete	lib/args.cc	/^Args::complete()$/;"	f	class:Args
complete	test/testie	/^sub complete ($$) {$/;"	s
complete	tools/click2xml/xml2click.cc	/^CxConfig::complete(ErrorHandler *errh)$/;"	f	class:CxConfig
complete_elementclass	tools/click2xml/xml2click.cc	/^CxConfig::complete_elementclass(ErrorHandler *errh)$/;"	f	class:CxConfig
complete_elementclass	tools/click2xml/xml2click.cc	/^complete_elementclass(const String &id, const String &xml_landmark, ErrorHandler *errh)$/;"	f	file:
complete_schedule	include/click/task.hh	/^Task::complete_schedule(unsigned new_pass)$/;"	f	class:Task
complete_step	elements/standard/script.cc	/^Script::complete_step(String *retval)$/;"	f	class:Script
complex_expand_element	tools/lib/eclasst.cc	/^ElementClassT::complex_expand_element($/;"	f	class:ElementClassT
complex_expand_element	tools/lib/eclasst.cc	/^SynonymElementClassT::complex_expand_element($/;"	f	class:SynonymElementClassT
complex_expand_element	tools/lib/routert.cc	/^RouterT::complex_expand_element($/;"	f	class:RouterT
complex_slot	include/click/args.hh	/^T *Args::complex_slot(T &variable)$/;"	f	class:Args
complex_step	tools/lib/routert.cc	/^RouterT::conn_iterator::complex_step()$/;"	f	class:RouterT::conn_iterator
component	tools/lib/etraits.cc	/^ElementTraits::component(int what)$/;"	f	class:ElementTraits
component	tools/lib/etraits.hh	/^ElementTraits::component(const String &s)$/;"	f	class:ElementTraits
component_endpoints	tools/click-combine/click-uncombine.cc	/^static Vector<ElementT *> component_endpoints;$/;"	v	file:
components_initialized	tools/lib/etraits.cc	/^static bool components_initialized = false;$/;"	v	file:
composed_trace	elements/local/FlowNet/papmo/PaPMo.hh	/^struct composed_trace {$/;"	s
compound	apps/clicky/src/crouter.hh	/^	HashTable<String, Bitvector> compound;$/;"	m	struct:clicky::crouter::reachable_t
compound	apps/clicky/src/wmain.hh	/^	String compound;$/;"	m	struct:clicky::wmain::element_lister
compound_element_factory	lib/lexer.cc	/^compound_element_factory(uintptr_t)$/;"	f	file:
compound_flow_code	tools/lib/processingt.cc	/^ProcessingT::compound_flow_code(ErrorHandler *errh) const$/;"	f	class:ProcessingT
compound_port_count_code	tools/lib/processingt.cc	/^ProcessingT::compound_port_count_code() const$/;"	f	class:ProcessingT
compound_processing_code	tools/lib/processingt.cc	/^ProcessingT::compound_processing_code() const$/;"	f	class:ProcessingT
compressed_data	lib/userutils.cc	/^compressed_data(const unsigned char *buf, int len)$/;"	f
compressed_filename	lib/userutils.cc	/^compressed_filename(const String &filename)$/;"	f
compute_backpressure	elements/local/FlowNet/scheduler/sched_algorithms/SchedBackpressure.cc	/^static float compute_backpressure( FlowSchedulable *flow )$/;"	f	file:
compute_backpressure	elements/local/FlowNet/scheduler/sched_algorithms/SchedHorizon.cc	/^static float compute_backpressure( FlowSchedulable *flow )$/;"	f	file:
compute_backpressure	elements/local/FlowNet/scheduler/sched_algorithms/SchedLogWeight.cc	/^static float compute_backpressure( FlowSchedulable *flow )$/;"	f	file:
compute_backpressure	elements/local/FlowNet/scheduler/sched_algorithms/SchedWBS.cc	/^static float compute_backpressure( FlowSchedulable *flow, double b, double g )$/;"	f	file:
conditional	include/click/type_traits.hh	/^struct conditional {$/;"	s
conditional	include/click/type_traits.hh	/^struct conditional<false, T, F> {$/;"	s
conditional	include/click/type_traits.hh	/^struct conditional<true, T, F> {$/;"	s
conf_auxdir	Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	doc/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	etc/libclick/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	linuxmodule/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	ns/Makefile	/^conf_auxdir := $(top_srcdir)$/;"	m
conf_auxdir	tools/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	tools/click-align/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	tools/click-check/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	tools/click-combine/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	tools/click-devirtualize/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	tools/click-fastclassifier/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	tools/click-flatten/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	tools/click-install/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	tools/click-mkmindriver/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	tools/click-pretty/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	tools/click-undead/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	tools/click-xform/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	tools/click2xml/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	tools/lib/Makefile	/^conf_auxdir = $(top_srcdir)$/;"	m
conf_auxdir	userlevel/Makefile	/^conf_auxdir := $(top_srcdir)$/;"	m
config	apps/clicky/src/crouter.hh	/^    const String &config() const {$/;"	f	class:clicky::crouter
config	elements/local/OpenFlow/datapath.hh	/^	uint32_t config;            \/* Some subset of OFPPC_* flags. *\/$/;"	m	struct:click_port
config	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t config;        \/* Bitmap of OFPPC_* flags. *\/$/;"	m	struct:ofp_phy_port
config	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t config;        \/* Bitmap of OFPPC_* flags. *\/$/;"	m	struct:ofp_port_mod
config	tools/click2xml/xml2click.hh	/^    String config;$/;"	m	struct:CxElement
config	tools/lib/elementt.hh	/^    const String &config() const	{ return _configuration; }$/;"	f	struct:ElementT
config_changed	apps/clicky/src/wmain.cc	/^static void config_changed(GtkTextBuffer *, gpointer user_data)$/;"	f	file:
config_changed_initialize	apps/clicky/src/wmain.cc	/^void wmain::config_changed_initialize(bool check, bool save)$/;"	f	class:clicky::wmain
config_check	apps/clicky/src/wmain.cc	/^void wmain::config_check(bool install)$/;"	f	class:clicky::wmain
config_choose_driver	apps/clicky/src/dialogs.cc	/^void wmain::config_choose_driver()$/;"	f	class:clicky::wmain
config_generation	linuxmodule/clickfs.cc	/^    uint32_t config_generation;$/;"	m	struct:ClickInodeInfo	file:
config_pending	elements/local/OpenFlow/lib/stp.cc	/^    bool config_pending;            \/* 8.5.5.9: Send BPDU when hold expires? *\/$/;"	m	struct:stp_port	file:
config_set_driver	apps/clicky/src/dialogs.cc	/^void wmain::config_set_driver(int driver)$/;"	f	class:clicky::wmain
config_space	drivers/e1000-7.x/src/e1000.h	/^	uint32_t *config_space;$/;"	m	struct:e1000_adapter
configuration	lib/element.cc	/^Element::configuration() const$/;"	f	class:Element
configuration	lib/lexer.cc	/^    String configuration;$/;"	m	struct:__anon511::ElementState	file:
configuration	tools/lib/elementt.hh	/^    const String &configuration() const	{ return _configuration; }$/;"	f	struct:ElementT
configuration	tools/lib/lexert.cc	/^    String configuration;$/;"	m	struct:__anon534::ElementState	file:
configuration_handler	lib/element.cc	/^configuration_handler(int operation, String &str, Element *e,$/;"	f	file:
configuration_string	lib/router.cc	/^Router::configuration_string() const$/;"	f	class:Router
configuration_string	tools/lib/runparse.cc	/^RouterT::configuration_string() const$/;"	f	class:RouterT
configure	apps/csclient/csclient.cc	/^ControlSocketClient::configure(unsigned int host_ip, unsigned short port)$/;"	f	class:ControlSocketClient
configure	elements/analysis/adjusttimestamp.cc	/^AdjustTimestamp::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AdjustTimestamp
configure	elements/analysis/aggcounter.cc	/^AggregateCounter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AggregateCounter
configure	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AggregatePacketCounter
configure	elements/analysis/aggregatefilter.cc	/^AggregateFilter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AggregateFilter
configure	elements/analysis/aggregatefirst.cc	/^AggregateFirst::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AggregateFirst
configure	elements/analysis/aggregateip.cc	/^AggregateIP::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AggregateIP
configure	elements/analysis/aggregateipaddrpair.cc	/^AggregateIPAddrPair::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AggregateIPAddrPair
configure	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AggregateIPFlows
configure	elements/analysis/aggregatelast.cc	/^AggregateLast::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AggregateLast
configure	elements/analysis/aggregatelen.cc	/^AggregateLength::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AggregateLength
configure	elements/analysis/aggregatepaint.cc	/^AggregatePaint::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AggregatePaint
configure	elements/analysis/anonipaddr.cc	/^AnonymizeIPAddr::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AnonymizeIPAddr
configure	elements/analysis/fromcapdump.cc	/^FromCapDump::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromCapDump
configure	elements/analysis/fromdagdump.cc	/^FromDAGDump::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromDAGDump
configure	elements/analysis/fromflandump.cc	/^FromFlanDump::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromFlanDump
configure	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromIPSummaryDump
configure	elements/analysis/fromnetflowsumdump.cc	/^FromNetFlowSummaryDump::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromNetFlowSummaryDump
configure	elements/analysis/fromnlanrdump.cc	/^FromNLANRDump::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromNLANRDump
configure	elements/analysis/fromtcpdump.cc	/^FromTcpdump::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromTcpdump
configure	elements/analysis/settimestampdelta.cc	/^SetTimestampDelta::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetTimestampDelta
configure	elements/analysis/storetimestamp.cc	/^StoreTimestamp::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:StoreTimestamp
configure	elements/analysis/storeudptimeseqrecord.cc	/^int StoreUDPTimeSeqRecord::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:StoreUDPTimeSeqRecord
configure	elements/analysis/timefilter.cc	/^TimeFilter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:TimeFilter
configure	elements/analysis/timerange.cc	/^TimeRange::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:TimeRange
configure	elements/analysis/timesortedsched.cc	/^TimeSortedSched::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:TimeSortedSched
configure	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ToIPFlowDumps
configure	elements/analysis/toipsumdump.cc	/^ToIPSummaryDump::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ToIPSummaryDump
configure	elements/app/ftpportmapper.cc	/^FTPPortMapper::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FTPPortMapper
configure	elements/aqm/adaptivered.cc	/^AdaptiveRED::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AdaptiveRED
configure	elements/aqm/pi.cc	/^PI::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PI
configure	elements/aqm/red.cc	/^RED::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RED
configure	elements/bsdmodule/fastudpsrc.cc	/^FastUDPSource::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FastUDPSource
configure	elements/bsdmodule/fromdevice.cc	/^FromDevice::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromDevice
configure	elements/bsdmodule/fromhost.cc	/^FromHost::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromHost
configure	elements/bsdmodule/todevice.cc	/^ToDevice::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ToDevice
configure	elements/bsdmodule/tohost.cc	/^ToHost::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ToHost
configure	elements/ethernet/arpfaker.cc	/^ARPFaker::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ARPFaker
configure	elements/ethernet/arpprint.cc	/^ARPPrint::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ARPPrint
configure	elements/ethernet/arpquerier.cc	/^ARPQuerier::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ARPQuerier
configure	elements/ethernet/arpresponder.cc	/^ARPResponder::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ARPResponder
configure	elements/ethernet/arptable.cc	/^ARPTable::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ARPTable
configure	elements/ethernet/checkarpheader.cc	/^CheckARPHeader::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:CheckARPHeader
configure	elements/ethernet/ensureether.cc	/^EnsureEther::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:EnsureEther
configure	elements/ethernet/etherencap.cc	/^EtherEncap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:EtherEncap
configure	elements/ethernet/etherpausesource.cc	/^EtherPauseSource::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:EtherPauseSource
configure	elements/ethernet/ethervlanencap.cc	/^EtherVLANEncap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:EtherVLANEncap
configure	elements/ethernet/hostetherfilter.cc	/^HostEtherFilter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:HostEtherFilter
configure	elements/ethernet/ip6ndadvertiser.cc	/^IP6NDAdvertiser::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IP6NDAdvertiser
configure	elements/ethernet/ip6ndsolicitor.cc	/^IP6NDSolicitor::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IP6NDSolicitor
configure	elements/ethernet/setvlananno.cc	/^SetVLANAnno::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetVLANAnno
configure	elements/ethernet/storeetheraddress.cc	/^StoreEtherAddress::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:StoreEtherAddress
configure	elements/ethernet/stripethervlanheader.cc	/^StripEtherVLANHeader::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:StripEtherVLANHeader
configure	elements/ethernet/vlandecap.cc	/^VLANDecap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:VLANDecap
configure	elements/ethernet/vlanencap.cc	/^VLANEncap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:VLANEncap
configure	elements/etherswitch/debugbridge.cc	/^DebugBridge::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:DebugBridge
configure	elements/etherswitch/etherswitch.cc	/^EtherSwitch::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:EtherSwitch
configure	elements/etherswitch/spantree.cc	/^EtherSpanTree::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:EtherSpanTree
configure	elements/grid/ackresponder.cc	/^ACKResponder::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ACKResponder
configure	elements/grid/ackresponder2.cc	/^ACKResponder2::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ACKResponder2
configure	elements/grid/ackretrysender.cc	/^ACKRetrySender::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ACKRetrySender
configure	elements/grid/ackretrysender2.cc	/^ACKRetrySender2::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ACKRetrySender2
configure	elements/grid/airoinfo.cc	/^AiroInfo::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AiroInfo
configure	elements/grid/bottleneckmetric.cc	/^BottleneckMetric::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:BottleneckMetric
configure	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:DSDVRouteTable
configure	elements/grid/dsrarptable.cc	/^DSRArpTable::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:DSRArpTable
configure	elements/grid/dsrroutetable.cc	/^DSRRouteTable::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:DSRRouteTable
configure	elements/grid/e2elossmetric.cc	/^E2ELossMetric::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:E2ELossMetric
configure	elements/grid/etx2metric.cc	/^ETX2Metric::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ETX2Metric
configure	elements/grid/etxmetric.cc	/^ETXMetric::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ETXMetric
configure	elements/grid/filterbyhops.cc	/^FilterByGridHops::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FilterByGridHops
configure	elements/grid/filterbyrange.cc	/^FilterByRange::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FilterByRange
configure	elements/grid/fixdstloc.cc	/^FixDstLoc::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FixDstLoc
configure	elements/grid/fixsrcloc.cc	/^FixSrcLoc::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FixSrcLoc
configure	elements/grid/floodinglocquerier.cc	/^FloodingLocQuerier::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FloodingLocQuerier
configure	elements/grid/gridencap.cc	/^GridEncap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GridEncap
configure	elements/grid/gridgatewayinfo.cc	/^GridGatewayInfo::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GridGatewayInfo
configure	elements/grid/gridheaderinfo.cc	/^GridHeaderInfo::configure(Vector<String> &, ErrorHandler *)$/;"	f	class:GridHeaderInfo
configure	elements/grid/gridlocationinfo.cc	/^GridLocationInfo::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GridLocationInfo
configure	elements/grid/gridlocationinfo2.cc	/^GridLocationInfo2::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GridLocationInfo2
configure	elements/grid/gridlogger.cc	/^GridLogger::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GridLogger
configure	elements/grid/gridprobehandler.cc	/^GridProbeHandler::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GridProbeHandler
configure	elements/grid/gridprobereplyreceiver.cc	/^GridProbeReplyReceiver::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GridProbeReplyReceiver
configure	elements/grid/gridprobesender.cc	/^GridProbeSender::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GridProbeSender
configure	elements/grid/gridproxy.cc	/^GridProxy::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GridProxy
configure	elements/grid/gridroutetable.cc	/^GridRouteTable::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GridRouteTable
configure	elements/grid/gridsrforwarder.cc	/^GridSRForwarder::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GridSRForwarder
configure	elements/grid/gridtxerror.cc	/^GridTxError::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GridTxError
configure	elements/grid/hello.cc	/^SendGridHello::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SendGridHello
configure	elements/grid/incseqno.cc	/^IncrementSeqNo::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IncrementSeqNo
configure	elements/grid/linkstat.cc	/^LinkStat::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LinkStat
configure	elements/grid/linktester.cc	/^LinkTester::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LinkTester
configure	elements/grid/linktestreceiver.cc	/^LinkTestReceiver::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LinkTestReceiver
configure	elements/grid/linktracker.cc	/^LinkTracker::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LinkTracker
configure	elements/grid/lirmetric.cc	/^LIRMetric::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LIRMetric
configure	elements/grid/locfromfile.cc	/^LocFromFile::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LocFromFile
configure	elements/grid/locqueryresponder.cc	/^LocQueryResponder::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LocQueryResponder
configure	elements/grid/loctable.cc	/^LocationTable::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LocationTable
configure	elements/grid/lookupgeogridroute.cc	/^LookupGeographicGridRoute::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LookupGeographicGridRoute
configure	elements/grid/lookuplocalgridroute.cc	/^LookupLocalGridRoute::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LookupLocalGridRoute
configure	elements/grid/lookuplocalgridroute2.cc	/^LookupLocalGridRoute2::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LookupLocalGridRoute2
configure	elements/grid/lrhello.cc	/^SendGridLRHello::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SendGridLRHello
configure	elements/grid/movesim.cc	/^MovementSimulator::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:MovementSimulator
configure	elements/grid/packetlogger.cc	/^PacketLogger::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PacketLogger
configure	elements/grid/packetlogger2.cc	/^PacketLogger2::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PacketLogger2
configure	elements/grid/pep.cc	/^PEP::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PEP
configure	elements/grid/pingpong.cc	/^PingPong::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PingPong
configure	elements/grid/printgrid.cc	/^PrintGrid::configure(Vector<String> &conf, ErrorHandler* errh)$/;"	f	class:PrintGrid
configure	elements/grid/radiosim.cc	/^RadioSim::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RadioSim
configure	elements/grid/regionpep.cc	/^EstimateRouterRegion::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:EstimateRouterRegion
configure	elements/grid/simplelocquerier.cc	/^SimpleLocQuerier::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SimpleLocQuerier
configure	elements/grid/threshmetric.cc	/^ThresholdMetric::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ThresholdMetric
configure	elements/grid/updateroutes.cc	/^UpdateGridRoutes::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:UpdateGridRoutes
configure	elements/grid/yarvismetric.cc	/^YarvisMetric::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:YarvisMetric
configure	elements/icmp/checkicmpheader.cc	/^CheckICMPHeader::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:CheckICMPHeader
configure	elements/icmp/icmperror.cc	/^ICMPError::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ICMPError
configure	elements/icmp/icmpipencap.cc	/^ICMPIPEncap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ICMPIPEncap
configure	elements/icmp/icmppingencap.cc	/^ICMPPingEncap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ICMPPingEncap
configure	elements/icmp/icmppingrewriter.cc	/^ICMPPingRewriter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ICMPPingRewriter
configure	elements/icmp/icmprewriter.cc	/^ICMPRewriter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ICMPRewriter
configure	elements/icmp/icmpsendpings.cc	/^ICMPPingSource::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ICMPPingSource
configure	elements/ip/checkipheader.cc	/^CheckIPHeader::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:CheckIPHeader
configure	elements/ip/decipttl.cc	/^DecIPTTL::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:DecIPTTL
configure	elements/ip/directiplookup.cc	/^DirectIPLookup::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:DirectIPLookup
configure	elements/ip/fixipsrc.cc	/^FixIPSrc::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FixIPSrc
configure	elements/ip/getipaddress.cc	/^GetIPAddress::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GetIPAddress
configure	elements/ip/ipaddrpairrewriter.cc	/^IPAddrPairRewriter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPAddrPairRewriter
configure	elements/ip/ipaddrrewriter.cc	/^IPAddrRewriter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPAddrRewriter
configure	elements/ip/ipclassifier.cc	/^IPClassifier::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPClassifier
configure	elements/ip/ipencap.cc	/^IPEncap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPEncap
configure	elements/ip/ipfilter.cc	/^IPFilter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPFilter
configure	elements/ip/ipfragmenter.cc	/^IPFragmenter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPFragmenter
configure	elements/ip/ipgwoptions.cc	/^IPGWOptions::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPGWOptions
configure	elements/ip/ipinputcombo.cc	/^IPInputCombo::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPInputCombo
configure	elements/ip/ipmirror.cc	/^IPMirror::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPMirror
configure	elements/ip/ipoutputcombo.cc	/^IPOutputCombo::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPOutputCombo
configure	elements/ip/ipprint.cc	/^IPPrint::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPPrint
configure	elements/ip/ipratemon.cc	/^IPRateMonitor::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPRateMonitor
configure	elements/ip/ipreassembler.cc	/^IPReassembler::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPReassembler
configure	elements/ip/iprewriterbase.cc	/^IPRewriterBase::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPRewriterBase
configure	elements/ip/iproutetable.cc	/^IPRouteTable::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPRouteTable
configure	elements/ip/iprwpatterns.cc	/^IPRewriterPatterns::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPRewriterPatterns
configure	elements/ip/lookupiproutelinux.cc	/^LinuxIPLookup::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LinuxIPLookup
configure	elements/ip/lookupiproutemp.cc	/^LookupIPRouteMP::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LookupIPRouteMP
configure	elements/ip/markipce.cc	/^MarkIPCE::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:MarkIPCE
configure	elements/ip/markipheader.cc	/^MarkIPHeader::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:MarkIPHeader
configure	elements/ip/poundradixiplookup.cc	/^PoundRadixIPLookup::configure(Vector<String> &conf, ErrorHandler *errh) {$/;"	f	class:PoundRadixIPLookup
configure	elements/ip/rangeiplookup.cc	/^RangeIPLookup::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RangeIPLookup
configure	elements/ip/ripsend.cc	/^RIPSend::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RIPSend
configure	elements/ip/rripmapper.cc	/^RoundRobinIPMapper::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RoundRobinIPMapper
configure	elements/ip/setipaddress.cc	/^SetIPAddress::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetIPAddress
configure	elements/ip/setipdscp.cc	/^SetIPDSCP::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetIPDSCP
configure	elements/ip/setipecn.cc	/^SetIPECN::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetIPECN
configure	elements/ip/setrandipaddress.cc	/^SetRandIPAddress::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetRandIPAddress
configure	elements/ip/siphmapper.cc	/^SourceIPHashMapper::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SourceIPHashMapper
configure	elements/ip/sortediplookup.cc	/^SortedIPLookup::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SortedIPLookup
configure	elements/ip/storeipaddress.cc	/^StoreIPAddress::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:StoreIPAddress
configure	elements/ip/truncateippayload.cc	/^TruncateIPPayload::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:TruncateIPPayload
configure	elements/ip6/addresstranslator.cc	/^AddressTranslator::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AddressTranslator
configure	elements/ip6/checkip6header.cc	/^CheckIP6Header::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:CheckIP6Header
configure	elements/ip6/getip6address.cc	/^GetIP6Address::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GetIP6Address
configure	elements/ip6/icmp6error.cc	/^ICMP6Error::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ICMP6Error
configure	elements/ip6/ip6encap.cc	/^IP6Encap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IP6Encap
configure	elements/ip6/ip6fragmenter.cc	/^IP6Fragmenter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IP6Fragmenter
configure	elements/ip6/ip6print.cc	/^IP6Print::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IP6Print
configure	elements/ip6/lookupip6route.cc	/^LookupIP6Route::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LookupIP6Route
configure	elements/ip6/markip6header.cc	/^MarkIP6Header::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:MarkIP6Header
configure	elements/ip6/setip6address.cc	/^SetIP6Address::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetIP6Address
configure	elements/ip6/setip6dscp.cc	/^SetIP6DSCP::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetIP6DSCP
configure	elements/ipsec/aes.cc	/^Aes::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Aes
configure	elements/ipsec/des.cc	/^Des::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Des
configure	elements/ipsec/esp.cc	/^IPsecESPEncap::configure(Vector<String> &, ErrorHandler *)$/;"	f	class:IPsecESPEncap
configure	elements/ipsec/hmacsha1.cc	/^IPsecAuthHMACSHA1::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPsecAuthHMACSHA1
configure	elements/ipsec/ipsecencap.cc	/^IPsecEncap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPsecEncap
configure	elements/ipsec/ipsecroutetable.cc	/^IPsecRouteTable::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPsecRouteTable
configure	elements/ipsec/sha1.cc	/^IPsecAuthSHA1::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPsecAuthSHA1
configure	elements/linuxmodule/cpuqueue.cc	/^CPUQueue::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:CPUQueue
configure	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FastTCPFlows
configure	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FastUDPFlows
configure	elements/linuxmodule/fastudpsrc.cc	/^FastUDPSource::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FastUDPSource
configure	elements/linuxmodule/fastudpsrcip6.cc	/^FastUDPSourceIP6::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FastUDPSourceIP6
configure	elements/linuxmodule/fromdevice.cc	/^FromDevice::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromDevice
configure	elements/linuxmodule/fromhost.cc	/^FromHost::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromHost
configure	elements/linuxmodule/fromuserdevice.cc	/^FromUserDevice::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromUserDevice
configure	elements/linuxmodule/perfcountaccum.cc	/^PerfCountAccum::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PerfCountAccum
configure	elements/linuxmodule/perfcountinfo.cc	/^PerfCountInfo::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PerfCountInfo
configure	elements/linuxmodule/polldevice.cc	/^PollDevice::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PollDevice
configure	elements/linuxmodule/setperfcount.cc	/^SetPerfCount::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetPerfCount
configure	elements/linuxmodule/threadmonitor.cc	/^ThreadMonitor::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ThreadMonitor
configure	elements/linuxmodule/todevice.cc	/^ToDevice::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ToDevice
configure	elements/linuxmodule/tohost.cc	/^ToHost::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ToHost
configure	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ToUserDevice
configure	elements/local/FlowNet/common/FlowNetGod.cc	/^int FlowNetGod::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FlowNetGod
configure	elements/local/FlowNet/common/PF_FW.cc	/^int PFFW::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PFFW
configure	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.cc	/^int PFMpeg2AdaptFW::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PFMpeg2AdaptFW
configure	elements/local/FlowNet/scheduler/IPFragReset.cc	/^IPFragReset::configure(Vector<String> &, ErrorHandler* )$/;"	f	class:IPFragReset
configure	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^int PFSchedFW::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PFSchedFW
configure	elements/local/FlowNet/scheduler/WBSEtherFilter.cc	/^WBSEtherFilter::configure(Vector<String> &conf, ErrorHandler *errh )$/;"	f	class:WBSEtherFilter
configure	elements/local/FlowNet/shaper/PFShapeFW.cc	/^int PFShapeFW::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PFShapeFW
configure	elements/local/FlowNet/sink/PFSinkFW.cc	/^int PFSinkFW::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PFSinkFW
configure	elements/local/OpenFlow/RConn.cc	/^int RConn::configure(Vector<String> &, ErrorHandler *)$/;"	f	class:RConn
configure	elements/local/OpenFlow/datapath.cc	/^int Datapath::configure(Vector<String> &conf, ErrorHandler* errh)$/;"	f	class:Datapath
configure	elements/ns/fromsimdevice.cc	/^FromSimDevice::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromSimDevice
configure	elements/ns/tosimdevice.cc	/^ToSimDevice::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ToSimDevice
configure	elements/ns/tosimtrace.cc	/^ToSimTrace::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ToSimTrace
configure	elements/radio/b8b10.cc	/^B8B10::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:B8B10
configure	elements/radio/bim.cc	/^BIM::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:BIM
configure	elements/radio/checkpattern.cc	/^CheckPattern::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:CheckPattern
configure	elements/radio/sendpattern.cc	/^SendPattern::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SendPattern
configure	elements/simple/simplepullswitch.cc	/^SimplePullSwitch::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SimplePullSwitch
configure	elements/standard/addressinfo.cc	/^AddressInfo::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AddressInfo
configure	elements/standard/align.cc	/^Align::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Align
configure	elements/standard/alignmentinfo.cc	/^AlignmentInfo::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AlignmentInfo
configure	elements/standard/annotationinfo.cc	/^AnnotationInfo::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AnnotationInfo
configure	elements/standard/averagecounter.cc	/^AverageCounter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AverageCounter
configure	elements/standard/bandwidthmeter.cc	/^BandwidthMeter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:BandwidthMeter
configure	elements/standard/block.cc	/^Block::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Block
configure	elements/standard/checklength.cc	/^CheckLength::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:CheckLength
configure	elements/standard/checkpaint.cc	/^CheckPaint::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:CheckPaint
configure	elements/standard/classifier.cc	/^Classifier::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Classifier
configure	elements/standard/clickyinfo.cc	/^ClickyInfo::configure(Vector<String> &, ErrorHandler *)$/;"	f	class:ClickyInfo
configure	elements/standard/compblock.cc	/^CompareBlock::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:CompareBlock
configure	elements/standard/counter.cc	/^Counter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Counter
configure	elements/standard/delayshaper.cc	/^DelayShaper::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:DelayShaper
configure	elements/standard/delayunqueue.cc	/^DelayUnqueue::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:DelayUnqueue
configure	elements/standard/devirtualizeinfo.cc	/^DevirtualizeInfo::configure(Vector<String> &, ErrorHandler *)$/;"	f	class:DevirtualizeInfo
configure	elements/standard/discard.cc	/^Discard::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Discard
configure	elements/standard/drr.cc	/^DRRSched::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:DRRSched
configure	elements/standard/errorelement.cc	/^ErrorElement::configure(Vector<String> &, ErrorHandler *)$/;"	f	class:ErrorElement
configure	elements/standard/flowinfo.cc	/^FlowInfo::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FlowInfo
configure	elements/standard/fullnotequeue.cc	/^FullNoteQueue::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FullNoteQueue
configure	elements/standard/hashswitch.cc	/^HashSwitch::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:HashSwitch
configure	elements/standard/infinitesource.cc	/^InfiniteSource::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:InfiniteSource
configure	elements/standard/linkunqueue.cc	/^LinkUnqueue::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LinkUnqueue
configure	elements/standard/markmacheader.cc	/^MarkMACHeader::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:MarkMACHeader
configure	elements/standard/messageelement.cc	/^MessageElement::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:MessageElement
configure	elements/standard/msqueue.cc	/^MSQueue::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:MSQueue
configure	elements/standard/notifierqueue.cc	/^NotifierQueue::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:NotifierQueue
configure	elements/standard/paint.cc	/^Paint::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Paint
configure	elements/standard/paintswitch.cc	/^PaintSwitch::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PaintSwitch
configure	elements/standard/painttee.cc	/^PaintTee::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PaintTee
configure	elements/standard/pokehandlers.cc	/^PokeHandlers::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PokeHandlers
configure	elements/standard/portinfo.cc	/^PortInfo::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PortInfo
configure	elements/standard/print.cc	/^Print::configure(Vector<String> &conf, ErrorHandler* errh)$/;"	f	class:Print
configure	elements/standard/quitwatcher.cc	/^QuitWatcher::configure(Vector<String> &, ErrorHandler *)$/;"	f	class:QuitWatcher
configure	elements/standard/randomerror.cc	/^RandomBitErrors::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RandomBitErrors
configure	elements/standard/randomsample.cc	/^RandomSample::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RandomSample
configure	elements/standard/randomsource.cc	/^RandomSource::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RandomSource
configure	elements/standard/ratedsource.cc	/^RatedSource::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RatedSource
configure	elements/standard/ratedsplitter.cc	/^RatedSplitter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RatedSplitter
configure	elements/standard/ratedunqueue.cc	/^RatedUnqueue::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RatedUnqueue
configure	elements/standard/scheduleinfo.cc	/^ScheduleInfo::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ScheduleInfo
configure	elements/standard/script.cc	/^Script::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Script
configure	elements/standard/setannobyte.cc	/^SetAnnoByte::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetAnnoByte
configure	elements/standard/setpackettype.cc	/^SetPacketType::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetPacketType
configure	elements/standard/settimestamp.cc	/^SetTimestamp::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetTimestamp
configure	elements/standard/shaper.cc	/^Shaper::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Shaper
configure	elements/standard/simplequeue.cc	/^SimpleQueue::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SimpleQueue
configure	elements/standard/staticpullswitch.cc	/^StaticPullSwitch::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:StaticPullSwitch
configure	elements/standard/staticswitch.cc	/^StaticSwitch::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:StaticSwitch
configure	elements/standard/storedata.cc	/^StoreData::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:StoreData
configure	elements/standard/stridesched.cc	/^StrideSched::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:StrideSched
configure	elements/standard/strip.cc	/^Strip::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Strip
configure	elements/standard/suppressor.cc	/^Suppressor::configure(Vector<String> &, ErrorHandler *)$/;"	f	class:Suppressor
configure	elements/standard/switch.cc	/^Switch::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Switch
configure	elements/standard/tee.cc	/^PullTee::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PullTee
configure	elements/standard/tee.cc	/^Tee::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Tee
configure	elements/standard/timedsink.cc	/^TimedSink::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:TimedSink
configure	elements/standard/timedsource.cc	/^TimedSource::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:TimedSource
configure	elements/standard/timedunqueue.cc	/^TimedUnqueue::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:TimedUnqueue
configure	elements/standard/truncate.cc	/^Truncate::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Truncate
configure	elements/standard/unqueue.cc	/^Unqueue::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Unqueue
configure	elements/standard/unqueue2.cc	/^Unqueue2::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Unqueue2
configure	elements/standard/unstrip.cc	/^Unstrip::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Unstrip
configure	elements/tcpudp/checktcpheader.cc	/^CheckTCPHeader::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:CheckTCPHeader
configure	elements/tcpudp/checkudpheader.cc	/^CheckUDPHeader::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:CheckUDPHeader
configure	elements/tcpudp/dynudpipencap.cc	/^DynamicUDPIPEncap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:DynamicUDPIPEncap
configure	elements/tcpudp/iprewriter.cc	/^IPRewriter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPRewriter
configure	elements/tcpudp/settcpchecksum.cc	/^SetTCPChecksum::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetTCPChecksum
configure	elements/tcpudp/statelesstcpresp.cc	/^StatelessTCPResponder::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:StatelessTCPResponder
configure	elements/tcpudp/tcpfragmenter.cc	/^TCPFragmenter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:TCPFragmenter
configure	elements/tcpudp/tcprewriter.cc	/^TCPRewriter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:TCPRewriter
configure	elements/tcpudp/udpip6encap.cc	/^UDPIP6Encap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:UDPIP6Encap
configure	elements/tcpudp/udpipencap.cc	/^UDPIPEncap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:UDPIPEncap
configure	elements/tcpudp/udprewriter.cc	/^UDPRewriter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:UDPRewriter
configure	elements/test/checkpacket.cc	/^CheckPacket::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:CheckPacket
configure	elements/test/comparepackets.cc	/^ComparePackets::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ComparePackets
configure	elements/test/handlertask.cc	/^HandlerTask::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:HandlerTask
configure	elements/test/nulltask.cc	/^NullTask::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:NullTask
configure	elements/test/queueyanktest.cc	/^QueueYankTest::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:QueueYankTest
configure	elements/test/randomseed.cc	/^RandomSeed::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RandomSeed
configure	elements/test/schedordertest.cc	/^SchedOrderTest::configure(Vector<String>& conf, ErrorHandler* errh)$/;"	f	class:SchedOrderTest
configure	elements/test/sorttest.cc	/^SortTest::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SortTest
configure	elements/test/timertest.cc	/^TimerTest::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:TimerTest
configure	elements/test/upstreamnotifier.cc	/^UpstreamNotifier::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:UpstreamNotifier
configure	elements/threads/balancedthreadsched.cc	/^BalancedThreadSched::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:BalancedThreadSched
configure	elements/threads/spinlockacquire.cc	/^SpinlockAcquire::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SpinlockAcquire
configure	elements/threads/spinlockinfo.cc	/^SpinlockInfo::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SpinlockInfo
configure	elements/threads/spinlockrelease.cc	/^SpinlockRelease::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SpinlockRelease
configure	elements/threads/staticthreadsched.cc	/^StaticThreadSched::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:StaticThreadSched
configure	elements/userlevel/chattersocket.cc	/^ChatterSocket::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ChatterSocket
configure	elements/userlevel/controlsocket.cc	/^ControlSocket::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ControlSocket
configure	elements/userlevel/fromdevice.cc	/^FromDevice::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromDevice
configure	elements/userlevel/fromdump.cc	/^FromDump::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromDump
configure	elements/userlevel/fromhost.cc	/^FromHost::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromHost
configure	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:IPFlowRawSockets
configure	elements/userlevel/kernelfilter.cc	/^KernelFilter::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:KernelFilter
configure	elements/userlevel/kerneltun.cc	/^KernelTun::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:KernelTun
configure	elements/userlevel/khandlerproxy.cc	/^KernelHandlerProxy::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:KernelHandlerProxy
configure	elements/userlevel/printold.cc	/^PrintOld::configure(Vector<String> &conf, ErrorHandler* errh)$/;"	f	class:PrintOld
configure	elements/userlevel/progressbar.cc	/^ProgressBar::configure(Vector<String> &, ErrorHandler *)$/;"	f	class:ProgressBar
configure	elements/userlevel/rawsocket.cc	/^RawSocket::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RawSocket
configure	elements/userlevel/socket.cc	/^Socket::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Socket
configure	elements/userlevel/todevice.cc	/^ToDevice::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ToDevice
configure	elements/userlevel/todump.cc	/^ToDump::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ToDump
configure	elements/userlevel/tohost.cc	/^ToHost::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ToHost
configure	elements/userlevel/umlswitch.cc	/^UMLSwitch::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:UMLSwitch
configure	elements/wifi/ap/associationresponder.cc	/^AssociationResponder::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AssociationResponder
configure	elements/wifi/ap/beaconsource.cc	/^BeaconSource::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:BeaconSource
configure	elements/wifi/ap/openauthresponder.cc	/^OpenAuthResponder::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:OpenAuthResponder
configure	elements/wifi/ap/proberesponder.cc	/^ProbeResponder::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ProbeResponder
configure	elements/wifi/athdescdecap.cc	/^AthdescDecap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AthdescDecap
configure	elements/wifi/athdescencap.cc	/^AthdescEncap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AthdescEncap
configure	elements/wifi/autoratefallback.cc	/^AutoRateFallback::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AutoRateFallback
configure	elements/wifi/availablerates.cc	/^AvailableRates::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AvailableRates
configure	elements/wifi/extradecap.cc	/^ExtraDecap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ExtraDecap
configure	elements/wifi/extraencap.cc	/^ExtraEncap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ExtraEncap
configure	elements/wifi/fromhandler.cc	/^FromHandler::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FromHandler
configure	elements/wifi/linktable.cc	/^LinkTable::configure (Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LinkTable
configure	elements/wifi/madwifirate.cc	/^MadwifiRate::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:MadwifiRate
configure	elements/wifi/packetstore.cc	/^PacketStore::configure(Vector<String> &, ErrorHandler *)$/;"	f	class:PacketStore
configure	elements/wifi/printtxfeedback.cc	/^PrintTXFeedback::configure(Vector<String> &conf, ErrorHandler* errh)$/;"	f	class:PrintTXFeedback
configure	elements/wifi/printwifi.cc	/^PrintWifi::configure(Vector<String> &conf, ErrorHandler* errh)$/;"	f	class:PrintWifi
configure	elements/wifi/prism2decap.cc	/^Prism2Decap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Prism2Decap
configure	elements/wifi/prism2encap.cc	/^Prism2Encap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Prism2Encap
configure	elements/wifi/probetxrate.cc	/^ProbeTXRate::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ProbeTXRate
configure	elements/wifi/radiotapdecap.cc	/^RadiotapDecap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RadiotapDecap
configure	elements/wifi/radiotapencap.cc	/^RadiotapEncap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RadiotapEncap
configure	elements/wifi/setrts.cc	/^SetRTS::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetRTS
configure	elements/wifi/settxpower.cc	/^SetTXPower::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetTXPower
configure	elements/wifi/settxrate.cc	/^SetTXRate::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SetTXRate
configure	elements/wifi/station/associationrequester.cc	/^AssociationRequester::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:AssociationRequester
configure	elements/wifi/station/beaconscanner.cc	/^BeaconScanner::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:BeaconScanner
configure	elements/wifi/station/beacontracker.cc	/^BeaconTracker::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:BeaconTracker
configure	elements/wifi/station/openauthrequester.cc	/^OpenAuthRequester::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:OpenAuthRequester
configure	elements/wifi/station/proberequester.cc	/^ProbeRequester::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ProbeRequester
configure	elements/wifi/wepdecap.cc	/^WepDecap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:WepDecap
configure	elements/wifi/wepencap.cc	/^WepEncap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:WepEncap
configure	elements/wifi/wifidecap.cc	/^WifiDecap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:WifiDecap
configure	elements/wifi/wifidefrag.cc	/^WifiDefrag::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:WifiDefrag
configure	elements/wifi/wifidupefilter.cc	/^WifiDupeFilter::configure(Vector<String> &conf, ErrorHandler* errh)$/;"	f	class:WifiDupeFilter
configure	elements/wifi/wifiencap.cc	/^WifiEncap::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:WifiEncap
configure	elements/wifi/wififragment.cc	/^WifiFragment::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:WifiFragment
configure	elements/wifi/wifiseq.cc	/^WifiSeq::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:WifiSeq
configure	elements/wifi/wirelessinfo.cc	/^WirelessInfo::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:WirelessInfo
configure	lib/element.cc	/^Element::configure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Element
configure_helper	elements/standard/ratedunqueue.cc	/^RatedUnqueue::configure_helper(TokenBucket *tb, bool is_bandwidth, Element *elt, Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:RatedUnqueue
configure_keywords	elements/linuxmodule/anydevice.cc	/^AnyDevice::configure_keywords(Vector<String> &conf, ErrorHandler *errh,$/;"	f	class:AnyDevice
configure_keywords	lib/fromfile.cc	/^FromFile::configure_keywords(Vector<String> &conf, Element *e, ErrorHandler *errh)$/;"	f	class:FromFile
configure_order_compar	lib/router.cc	/^configure_order_compar(const void *athunk, const void *bthunk, void *copthunk)$/;"	f	file:
configure_phase	elements/analysis/toipflowdumps.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE; }$/;"	f	class:ToIPFlowDumps
configure_phase	elements/bsdmodule/fromhost.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_FROMHOST; }$/;"	f	class:FromHost
configure_phase	elements/bsdmodule/todevice.hh	/^  int configure_phase() const		{ return CONFIGURE_PHASE_TODEVICE; }$/;"	f	class:ToDevice
configure_phase	elements/bsdmodule/tohost.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_TODEVICE; }$/;"	f	class:ToHost
configure_phase	elements/ip/iprewriterbase.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_REWRITER; }$/;"	f	class:IPRewriterBase
configure_phase	elements/ip/iprwpatterns.hh	/^    int configure_phase() const	{ return IPRewriterBase::CONFIGURE_PHASE_PATTERNS; }$/;"	f	class:IPRewriterPatterns
configure_phase	elements/ip/rripmapper.hh	/^  int configure_phase() const		{ return IPRewriterBase::CONFIGURE_PHASE_MAPPER;}$/;"	f	class:RoundRobinIPMapper
configure_phase	elements/ip/siphmapper.hh	/^  int configure_phase() const		{ return IPRewriterBase::CONFIGURE_PHASE_MAPPER;}$/;"	f	class:SourceIPHashMapper
configure_phase	elements/linuxmodule/fromhost.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_FROMHOST; }$/;"	f	class:FromHost
configure_phase	elements/linuxmodule/perfcountinfo.hh	/^  int configure_phase() const		{ return CONFIGURE_PHASE_INFO; }$/;"	f	class:PerfCountInfo
configure_phase	elements/linuxmodule/polldevice.hh	/^  int configure_phase() const		{ return CONFIGURE_PHASE_POLLDEVICE; }$/;"	f	class:PollDevice
configure_phase	elements/linuxmodule/todevice.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_TODEVICE; }$/;"	f	class:ToDevice
configure_phase	elements/linuxmodule/tohost.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_TODEVICE; }$/;"	f	class:ToHost
configure_phase	elements/linuxmodule/touserdevice.hh	/^    int    configure_phase() const      { return CONFIGURE_PHASE_DEFAULT - 1; }$/;"	f	class:ToUserDevice
configure_phase	elements/ns/fromsimdevice.hh	/^  int configure_phase() const		{ return CONFIGURE_PHASE_DEFAULT; }$/;"	f	class:FromSimDevice
configure_phase	elements/ns/tosimdevice.hh	/^  int configure_phase() const { return CONFIGURE_PHASE_DEFAULT; }$/;"	f	class:ToSimDevice
configure_phase	elements/standard/annotationinfo.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_FIRST; }$/;"	f	class:AnnotationInfo
configure_phase	elements/standard/flowinfo.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_INFO; }$/;"	f	class:FlowInfo
configure_phase	elements/test/randomseed.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_FIRST; }$/;"	f	class:RandomSeed
configure_phase	elements/threads/spinlockinfo.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_INFO; }$/;"	f	class:SpinlockInfo
configure_phase	elements/userlevel/changeuid.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_PRIVILEGED+1; }$/;"	f	class:ChangeUID
configure_phase	elements/userlevel/chattersocket.hh	/^  int configure_phase() const		{ return CONFIGURE_PHASE_INFO; }$/;"	f	class:ChatterSocket
configure_phase	elements/userlevel/fromdevice.hh	/^    int configure_phase() const		{ return KernelFilter::CONFIGURE_PHASE_FROMDEVICE; }$/;"	f	class:FromDevice
configure_phase	elements/userlevel/fromhost.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_FROMHOST; }$/;"	f	class:FromHost
configure_phase	elements/userlevel/kernelfilter.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_KERNELFILTER; }$/;"	f	class:KernelFilter
configure_phase	elements/userlevel/kerneltun.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_PRIVILEGED - 1; }$/;"	f	class:KernelTun
configure_phase	elements/userlevel/todevice.hh	/^    int configure_phase() const { return KernelFilter::CONFIGURE_PHASE_TODEVICE; }$/;"	f	class:ToDevice
configure_phase	elements/userlevel/todump.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_DEFAULT+100; }$/;"	f	class:ToDump
configure_phase	elements/userlevel/tohost.hh	/^    int configure_phase() const		{ return FromHost::CONFIGURE_PHASE_TOHOST; }$/;"	f	class:ToHost
configure_phase	include/click/standard/addressinfo.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_FIRST; }$/;"	f	class:AddressInfo
configure_phase	include/click/standard/alignmentinfo.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_INFO; }$/;"	f	class:AlignmentInfo
configure_phase	include/click/standard/portinfo.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_FIRST; }$/;"	f	class:PortInfo
configure_phase	include/click/standard/scheduleinfo.hh	/^    int configure_phase() const		{ return CONFIGURE_PHASE_INFO; }$/;"	f	class:ScheduleInfo
configure_phase	lib/element.cc	/^Element::configure_phase() const$/;"	f	class:Element
configuring	elements/linuxmodule/fromhost.cc	/^FromHost *FromHost::configuring = 0;$/;"	m	class:FromHost	file:
configuring	elements/linuxmodule/fromhost.hh	/^    static FromHost *configuring;$/;"	m	class:FromHost
congest_detected	elements/local/FlowNet/common/CongestionDetection.hh	/^	void (*congest_detected)(struct CongestionNotification*);$/;"	m	class:VcCongestionDetection
congested	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeSimple.hh	/^	bool congested;$/;"	m	struct:CBShapeSimple
congestion_action	elements/local/FlowNet/common/BWShape.cc	/^void VcBWShape::congestion_action(struct FlowID *, const Packet *)$/;"	f	class:VcBWShape
congestion_action	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.cc	/^void VcBWShapeByCD::congestion_action(struct FlowID *fid, const Packet *p)$/;"	f	class:VcBWShapeByCD
congestion_action	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.cc	/^void VcBWShapeByCD_CFB::congestion_action(struct FlowID *, const Packet *)$/;"	f	class:VcBWShapeByCD_CFB
congestion_action	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeSimple.cc	/^void VcBWShapeSimple::congestion_action(struct FlowID *fid, const Packet *p)$/;"	f	class:VcBWShapeSimple
conn_compar	tools/click-pretty/click-pretty.cc	/^conn_compar(const void *v1, const void *v2)$/;"	f	file:
conn_compar_from	tools/click-pretty/click-pretty.cc	/^static bool conn_compar_from;$/;"	v	file:
conn_iterator	tools/lib/routert.hh	/^    inline conn_iterator()			: _conn(0), _by(0) { }$/;"	f	class:RouterT::conn_iterator
conn_iterator	tools/lib/routert.hh	/^RouterT::conn_iterator::conn_iterator(const ConnectionX *conn, int by)$/;"	f	class:RouterT::conn_iterator
conn_iterator	tools/lib/routert.hh	/^class RouterT::conn_iterator { public:$/;"	c	class:RouterT
conn_output_sorter_compar	lib/router.cc	/^conn_output_sorter_compar(const void *ap, const void *bp, void *user_data)$/;"	f	file:
connect	conf/click-mkclgw.pl	/^sub connect {$/;"	s
connect	elements/local/OpenFlow/lib/vconn-provider.hh	/^    int (*connect)(struct vconn *vconn);$/;"	m	struct:vconn_class
connect	lib/lexer.cc	/^Lexer::Compound::connect(int from_idx, int from_port, int to_idx, int to_port)$/;"	f	class:Lexer::Compound
connect	tools/lib/lexert.cc	/^LexerT::connect(int element1, int port1, int port2, int element2, const char *pos1, const char *pos2)$/;"	f	class:LexerT
connectTo	apps/ClickController/ClickController.java	/^    public void connectTo(String hostname, String portname) {$/;"	m	class:ClickController
connect_error	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    int connect_error;$/;"	m	struct:ssl_vconn	file:
connect_path	elements/local/OpenFlow/lib/vlog-socket.cc	/^    char *connect_path;$/;"	m	struct:vlog_client	file:
connect_port	lib/element.cc	/^Element::connect_port(bool isoutput, int port, Element* e, int e_port)$/;"	f	class:Element
connection	elements/userlevel/controlsocket.hh	/^	connection(int fd_)$/;"	f	struct:ControlSocket::connection
connection	elements/userlevel/controlsocket.hh	/^    struct connection {$/;"	s	class:ControlSocket
connection_exists	tools/click-xform/adjacency.hh	/^AdjacencyMatrix::connection_exists(int i, int j) const$/;"	f	class:AdjacencyMatrix
connection_indicator	tools/click-xform/adjacency.cc	/^connection_indicator(int fromport, int toport)$/;"	f	file:
connindex_lower_bound	lib/router.cc	/^Router::connindex_lower_bound(bool isoutput, const Port &p) const$/;"	f	class:Router
const_access_type	include/click/vector.hh	/^    typedef T* const_access_type;$/;"	t	class:Vector
const_access_type	include/click/vector.hh	/^    typedef const T& const_access_type;$/;"	t	class:Vector
const_access_type	include/click/vector.hh	/^    typedef void* const_access_type;$/;"	t	class:Vector
const_iterator	apps/clicky/src/gathererror.hh	/^    typedef Vector<Message>::const_iterator const_iterator;$/;"	t	class:GatherErrorHandler
const_iterator	include/click/dequeue.hh	/^	const_iterator(const DEQueue<T> &q, int p) : _q(q), _pos(p)  { }$/;"	f	struct:DEQueue::const_iterator
const_iterator	include/click/dequeue.hh	/^	const_iterator(const const_iterator &i) : _q(i._q), _pos(i._pos) { }$/;"	f	struct:DEQueue::const_iterator
const_iterator	include/click/dequeue.hh	/^    struct const_iterator {$/;"	s	class:DEQueue
const_iterator	include/click/hashcontainer.hh	/^    typedef HashContainer_const_iterator<T, A> const_iterator;$/;"	t	class:HashContainer
const_iterator	include/click/hashmap.hh	/^  typedef _HashMap_const_iterator<K, T *> const_iterator;$/;"	t	class:HashMap
const_iterator	include/click/hashmap.hh	/^  typedef _HashMap_const_iterator<K, V> const_iterator;$/;"	t	class:HashMap
const_iterator	include/click/hashmap.hh	/^  typedef _HashMap_const_iterator<K, void *> const_iterator;$/;"	t	class:HashMap
const_iterator	include/click/hashtable.hh	/^    typedef HashTable_const_iterator<T> const_iterator;$/;"	t	class:HashTable
const_iterator	include/click/hashtable.hh	/^    typedef HashTable_const_iterator<value_type> const_iterator;$/;"	t	class:HashTable
const_iterator	include/click/list.hh	/^	const_iterator()$/;"	f	class:List::const_iterator
const_iterator	include/click/list.hh	/^	const_iterator(const List<T, member> *list)$/;"	f	class:List::const_iterator
const_iterator	include/click/list.hh	/^	const_iterator(const T *x)$/;"	f	class:List::const_iterator
const_iterator	include/click/list.hh	/^	const_iterator(const T *x, const List<T, member> *list)$/;"	f	class:List::const_iterator
const_iterator	include/click/list.hh	/^    class const_iterator { public:$/;"	c	class:List
const_iterator	include/click/routervisitor.hh	/^    typedef Vector<Element *>::const_iterator const_iterator;$/;"	t	class:ElementTracker
const_iterator	include/click/straccum.hh	/^    typedef const char *const_iterator;$/;"	t	class:StringAccum
const_iterator	include/click/string.hh	/^    typedef const char *const_iterator;$/;"	t	class:String
const_iterator	include/click/vector.hh	/^    typedef T* const* const_iterator;$/;"	t	class:Vector
const_iterator	include/click/vector.hh	/^    typedef const T* const_iterator;$/;"	t	class:Vector
const_iterator	include/click/vector.hh	/^    typedef void* const* const_iterator;$/;"	t	class:Vector
const_iterator	tools/lib/routert.hh	/^    const_iterator()			: _e(0) { }$/;"	f	class:RouterT::const_iterator
const_iterator	tools/lib/routert.hh	/^    const_iterator(const RouterT *r, int ei) { step(r, ei); }$/;"	f	class:RouterT::const_iterator
const_iterator	tools/lib/routert.hh	/^class RouterT::const_iterator { public:$/;"	c	class:RouterT
const_max	include/click/type_traits.hh	/^    static constexpr char const_max = 127;$/;"	m	struct:integer_traits
const_max	include/click/type_traits.hh	/^    static constexpr char const_max = ~const_min;$/;"	m	struct:integer_traits
const_max	include/click/type_traits.hh	/^    static constexpr int const_max = (unsigned) const_min - 1;$/;"	m	struct:integer_traits
const_max	include/click/type_traits.hh	/^    static constexpr int64_t const_max = (uint64_t) const_min - 1;$/;"	m	struct:integer_traits
const_max	include/click/type_traits.hh	/^    static constexpr long const_max = (unsigned long) const_min - 1;$/;"	m	struct:integer_traits
const_max	include/click/type_traits.hh	/^    static constexpr long long const_max = (unsigned long long) const_min - 1;$/;"	m	struct:integer_traits
const_max	include/click/type_traits.hh	/^    static constexpr short const_max = 32767;$/;"	m	struct:integer_traits
const_max	include/click/type_traits.hh	/^    static constexpr signed char const_max = 127;$/;"	m	struct:integer_traits
const_max	include/click/type_traits.hh	/^    static constexpr uint64_t const_max = ~const_min;$/;"	m	struct:integer_traits
const_max	include/click/type_traits.hh	/^    static constexpr unsigned char const_max = ~const_min;$/;"	m	struct:integer_traits
const_max	include/click/type_traits.hh	/^    static constexpr unsigned int const_max = ~const_min;$/;"	m	struct:integer_traits
const_max	include/click/type_traits.hh	/^    static constexpr unsigned long const_max = ~const_min;$/;"	m	struct:integer_traits
const_max	include/click/type_traits.hh	/^    static constexpr unsigned long long const_max = ~const_min;$/;"	m	struct:integer_traits
const_max	include/click/type_traits.hh	/^    static constexpr unsigned short const_max = ~const_min;$/;"	m	struct:integer_traits
const_max	lib/glue.cc	/^constexpr char integer_traits<char>::const_max;$/;"	m	class:integer_traits	file:
const_min	include/click/type_traits.hh	/^    static constexpr char const_min = -128;$/;"	m	struct:integer_traits
const_min	include/click/type_traits.hh	/^    static constexpr char const_min = 0;$/;"	m	struct:integer_traits
const_min	include/click/type_traits.hh	/^    static constexpr int const_min = 1 << (8*SIZEOF_INT - 1);$/;"	m	struct:integer_traits
const_min	include/click/type_traits.hh	/^    static constexpr int64_t const_min = (int64_t) 1 << 63;$/;"	m	struct:integer_traits
const_min	include/click/type_traits.hh	/^    static constexpr long const_min = (long) 1 << (8*SIZEOF_LONG - 1);$/;"	m	struct:integer_traits
const_min	include/click/type_traits.hh	/^    static constexpr long long const_min = (long long) 1 << (8*SIZEOF_LONG_LONG - 1);$/;"	m	struct:integer_traits
const_min	include/click/type_traits.hh	/^    static constexpr short const_min = -32768;$/;"	m	struct:integer_traits
const_min	include/click/type_traits.hh	/^    static constexpr signed char const_min = -128;$/;"	m	struct:integer_traits
const_min	include/click/type_traits.hh	/^    static constexpr uint64_t const_min = 0;$/;"	m	struct:integer_traits
const_min	include/click/type_traits.hh	/^    static constexpr unsigned char const_min = 0;$/;"	m	struct:integer_traits
const_min	include/click/type_traits.hh	/^    static constexpr unsigned int const_min = 0;$/;"	m	struct:integer_traits
const_min	include/click/type_traits.hh	/^    static constexpr unsigned long const_min = 0;$/;"	m	struct:integer_traits
const_min	include/click/type_traits.hh	/^    static constexpr unsigned long long const_min = 0;$/;"	m	struct:integer_traits
const_min	include/click/type_traits.hh	/^    static constexpr unsigned short const_min = 0;$/;"	m	struct:integer_traits
const_min	lib/glue.cc	/^constexpr char integer_traits<char>::const_min;$/;"	m	class:integer_traits	file:
const_pointer	include/click/list.hh	/^    typedef const T *const_pointer;$/;"	t	class:List
const_pointer	include/click/vector.hh	/^    typedef T* const* const_pointer;$/;"	t	class:Vector
const_pointer	include/click/vector.hh	/^    typedef const T* const_pointer;$/;"	t	class:Vector
const_pointer	include/click/vector.hh	/^    typedef void* const* const_pointer;$/;"	t	class:Vector
const_reference	include/click/vector.hh	/^    typedef T* const& const_reference;$/;"	t	class:Vector
const_reference	include/click/vector.hh	/^    typedef const T& const_reference;$/;"	t	class:Vector
const_reference	include/click/vector.hh	/^    typedef void* const& const_reference;$/;"	t	class:Vector
const_type_iterator	tools/lib/routert.hh	/^    const_type_iterator()		: _e(0), _t(0) { }$/;"	f	class:RouterT::const_type_iterator
const_type_iterator	tools/lib/routert.hh	/^    const_type_iterator(const RouterT *r, ElementClassT *t, int i) : _t(t) { step(r, i); }$/;"	f	class:RouterT::const_type_iterator
const_type_iterator	tools/lib/routert.hh	/^class RouterT::const_type_iterator { public:$/;"	c	class:RouterT
constexpr	include/click/config.h	144;"	d
consume	lib/args.cc	/^Args::consume()$/;"	f	class:Args
contains	apps/clicky/src/rectangle.hh	/^    bool contains(const point &p) const {$/;"	f	struct:rectangle
contains	apps/clicky/src/rectangle.hh	/^    bool contains(double x, double y) const {$/;"	f	struct:rectangle
contains	elements/grid/grid.hh	/^  bool contains(const grid_location &l)$/;"	f	struct:grid_region
contains	elements/grid/region.hh	/^  bool contains(double x, double y)$/;"	f	class:RectRegion
contains	elements/ip/iproutetable.hh	/^IPRoute::contains(IPAddress a) const$/;"	f	class:IPRoute
contains	elements/ip/iproutetable.hh	/^IPRoute::contains(const IPRoute& r) const$/;"	f	class:IPRoute
contains	elements/ipsec/ipsecroutetable.hh	/^IPsecRoute::contains(IPAddress a) const$/;"	f	class:IPsecRoute
contains	elements/ipsec/ipsecroutetable.hh	/^IPsecRoute::contains(const IPsecRoute& r) const$/;"	f	class:IPsecRoute
contains	elements/wifi/linktable.hh	/^    bool contains(IPAddress foo) const {$/;"	f	class:IPPair
contains	include/click/list.hh	/^    bool contains(const_pointer x) const {$/;"	f	class:List
contains	include/click/routervisitor.hh	/^    bool contains(const Element *e) const {$/;"	f	class:ElementTracker
contains	include/click/tokenbucket.hh	/^    bool contains(const rate_type &rate, token_type t) const {$/;"	f	class:TokenCounterX
contains	include/click/tokenbucket.hh	/^    bool contains(token_type t) const {$/;"	f	class:TokenBucketX
contains_fraction	include/click/tokenbucket.hh	/^    bool contains_fraction(token_type f) const {$/;"	f	class:TokenBucketX
contains_fraction	include/click/tokenbucket.hh	/^    bool contains_fraction(token_type f) const {$/;"	f	class:TokenCounterX
contents_height	apps/clicky/src/dwidget.hh	/^    double contents_height() const {$/;"	f	class:clicky::delt
contents_width	apps/clicky/src/dwidget.hh	/^    double contents_width() const {$/;"	f	class:clicky::delt
context	include/click/args.hh	/^    const Element *context() const {$/;"	f	struct:ArgContext
context	include/click/nameinfo.hh	/^    const String &context() const {$/;"	f	class:NameDB
context	test/testie	/^sub context ($@) {$/;"	s
context_parent	include/click/nameinfo.hh	/^    NameDB *context_parent() const {$/;"	f	class:NameDB
context_printed	include/click/error.hh	/^    bool context_printed() const {$/;"	f	class:ContextErrorHandler
contract	elements/userlevel/controlsocket.cc	/^ControlSocket::connection::contract(StringAccum &sa, int &pos)$/;"	f	class:ControlSocket::connection
control	include/clicknet/llc.h	/^		uint8_t control;$/;"	m	struct:click_llc::__anon481::__anon482
control	include/clicknet/llc.h	/^		uint8_t control;$/;"	m	struct:click_llc::__anon481::__anon484
control	include/clicknet/llc.h	/^		uint8_t control;$/;"	m	struct:click_llc::__anon481::__anon486
control	include/clicknet/llc.h	/^		uint8_t control;$/;"	m	struct:click_llc::__anon481::__anon487
control	include/clicknet/llc.h	/^	        uint8_t control;$/;"	m	struct:click_llc::__anon481::__anon485
control_ext	include/clicknet/llc.h	/^		uint8_t control_ext;$/;"	m	struct:click_llc::__anon481::__anon487
controller	apps/ClickController/ClickController.java	/^    public ClickController controller() {$/;"	m	class:ClickController
controllers	apps/ClickController/ClickController.java	/^    private static Vector controllers = new Vector();$/;"	f	class:ClickController	file:
cookie	elements/local/OpenFlow/datapath.hh	/^	uint32_t cookie;$/;"	m	struct:dp_packet_buffer
cookie	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint64_t cookie;          \/* Opaque controller-issued identifier. *\/$/;"	m	struct:nx_flow_end
cookie	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t cookie;             \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp_flow_mod
cookie	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t cookie;          \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp_flow_removed
cookie	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t cookie;          \/* Opaque controller-issued identifier. *\/$/;"	m	struct:ofp_flow_stats
cookie	elements/local/OpenFlow/lib/switch-flow.hh	/^    uint64_t cookie;            \/* Opaque controller-issued identifier. *\/$/;"	m	struct:sw_flow
copy_annotations	include/click/packet.hh	/^Packet::copy_annotations(const Packet *p)$/;"	f	class:Packet
copy_elements	include/click/hashtable.hh	/^void HashTable<T>::copy_elements(const HashTable<T> &o)$/;"	f	class:HashTable
copy_elements	tools/click-fastclassifier/click-fastclassifier.cc	/^copy_elements(RouterT *oldr, RouterT *newr, ElementClassT *type)$/;"	f	file:
copy_from	include/click/hashmap.cc	/^HashMap<K, V>::copy_from(const HashMap<K, V> &o)$/;"	f	class:HashMap
copy_from	include/click/hashmap.cc	/^HashMap<K, void *>::copy_from(const HashMap<K, void *> &o)$/;"	f	class:HashMap
copy_string	lib/clp.c	/^copy_string(char *buf, int buflen, int bufpos, const char *what)$/;"	f	file:
copy_to_monitor	elements/local/OpenFlow/lib/rconn.cc	/^static void copy_to_monitor(struct rconn *rc, const struct ofpbuf *b)$/;"	f	file:
core	elements/local/FlowNet/papmo/PaPMo.hh	/^	float	core;$/;"	m	struct:composed_trace
core_value	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^double VcCDCORE::core_value(const Flow* flow_in) const$/;"	f	class:VcCDCORE
could_be_short	lib/clp.c	/^    unsigned char could_be_short;$/;"	m	struct:Clp_Internal	file:
count	drivers/e1000-4.x/src/e1000.h	/^	unsigned int count;$/;"	m	struct:e1000_desc_ring
count	drivers/e1000-5.x/src/e1000.h	/^	unsigned int count;$/;"	m	struct:e1000_desc_ring
count	drivers/e1000-7.x/src/e1000.h	/^	unsigned int count;$/;"	m	struct:e1000_rx_ring
count	drivers/e1000-7.x/src/e1000.h	/^	unsigned int count;$/;"	m	struct:e1000_tx_ring
count	elements/analysis/aggcounter.hh	/^	uint32_t count;$/;"	m	struct:AggregateCounter::Node
count	elements/bsdmodule/fastudpsrc.hh	/^  unsigned count() { return _count; }$/;"	f	class:FastUDPSource
count	elements/ethernet/arptable.hh	/^    uint32_t count() const {$/;"	f	class:ARPTable
count	elements/ip/iprewriterbase.hh	/^    uint32_t count;$/;"	m	struct:IPRewriterInput
count	elements/linuxmodule/fasttcpflows.hh	/^  unsigned count() { return _count; }$/;"	f	class:FastTCPFlows
count	elements/linuxmodule/fastudpflows.hh	/^  unsigned count() { return _count; }$/;"	f	class:FastUDPFlows
count	elements/linuxmodule/fastudpsrc.hh	/^  unsigned count() { return _count; }$/;"	f	class:FastUDPSource
count	elements/linuxmodule/fastudpsrcip6.hh	/^  unsigned count() { return _count; }$/;"	f	class:FastUDPSourceIP6
count	elements/standard/averagecounter.hh	/^    uint32_t count() const			{ return _count; }$/;"	f	class:AverageCounter
count	elements/wifi/ethercount.hh	/^    int count;$/;"	m	class:EtherCount::DstInfo
count	include/click/md5.h	/^    md5_word_t count[2];	\/* message length in bits, lsw first *\/$/;"	m	struct:md5_state_s
count	include/clicknet/wifi.h	/^		uint8_t		count;$/;"	m	struct:wifi_information::cf
count	include/clicknet/wifi.h	/^		uint8_t 	count;$/;"	m	struct:wifi_information::tim
count	linuxmodule/modulepriv.hh	/^    size_t count;$/;"	m	struct:click_handler_direct_info
countControllers	apps/ClickController/ClickController.java	/^    private static int countControllers() {$/;"	m	class:ClickController	file:
count_inbranches	elements/standard/classification.cc	/^Program::count_inbranches(Vector<int> &inbranches) const$/;"	f	class:Classification::Wordwise::Program
count_rx	elements/grid/linkstat.cc	/^LinkStat::count_rx(const EtherAddress &eth)$/;"	f	class:LinkStat
count_rx	elements/grid/linkstat.cc	/^LinkStat::count_rx(const probe_list_t *pl)$/;"	f	class:LinkStat
counter	elements/ip/ipratemon.hh	/^    Counter* counter[MAX_COUNTERS];$/;"	m	struct:IPRateMonitor::Stats
counter_t	elements/icmp/icmpsendpings.hh	/^    typedef uint32_t counter_t;$/;"	t	class:ICMPPingSource
counter_t	elements/icmp/icmpsendpings.hh	/^    typedef uint64_t counter_t;$/;"	t	class:ICMPPingSource
counter_t	elements/standard/counter.hh	/^    typedef uint32_t counter_t;$/;"	t	class:Counter
counter_t	elements/standard/counter.hh	/^    typedef uint64_t counter_t;$/;"	t	class:Counter
counter_t	elements/standard/discard.hh	/^    typedef uint32_t counter_t;$/;"	t	class:Discard
counter_t	elements/standard/discard.hh	/^    typedef uint64_t counter_t;$/;"	t	class:Discard
counter_t	elements/standard/infinitesource.hh	/^    typedef int32_t counter_t;$/;"	t	class:InfiniteSource
counter_t	elements/standard/infinitesource.hh	/^    typedef int64_t counter_t;$/;"	t	class:InfiniteSource
counter_t	elements/userlevel/fromdevice.hh	/^    typedef uint32_t counter_t;$/;"	t	class:FromDevice
counter_t	elements/userlevel/fromdevice.hh	/^    typedef uint64_t counter_t;$/;"	t	class:FromDevice
counter_t	elements/userlevel/fromdump.hh	/^    typedef uint32_t counter_t;$/;"	t	class:FromDump
counter_t	elements/userlevel/fromdump.hh	/^    typedef uint64_t counter_t;$/;"	t	class:FromDump
counter_t	elements/userlevel/todump.hh	/^    typedef uint32_t counter_t;$/;"	t	class:ToDump
counter_t	elements/userlevel/todump.hh	/^    typedef uint64_t counter_t;$/;"	t	class:ToDump
counter_type	include/click/tokenbucket.hh	/^    typedef TokenCounterX<rate_type> counter_type;$/;"	t	class:TokenBucketX
cpAnno	lib/confparse.cc	/^  cpAnno		= "anno",$/;"	v
cpArgAllowNumbers	include/click/confparse.hh	/^    cpArgExtraCStr = 4, cpArgAllowNumbers = 8$/;"	e	enum:__anon480
cpArgExtraCStr	include/click/confparse.hh	/^    cpArgExtraCStr = 4, cpArgAllowNumbers = 8$/;"	e	enum:__anon480
cpArgExtraInt	include/click/confparse.hh	/^    cpArgNormal = 0, cpArgStore2 = 1, cpArgExtraInt = 2,$/;"	e	enum:__anon480
cpArgNormal	include/click/confparse.hh	/^    cpArgNormal = 0, cpArgStore2 = 1, cpArgExtraInt = 2,$/;"	e	enum:__anon480
cpArgStore2	include/click/confparse.hh	/^    cpArgNormal = 0, cpArgStore2 = 1, cpArgExtraInt = 2,$/;"	e	enum:__anon480
cpArgument	lib/confparse.cc	/^  cpArgument		= "arg",$/;"	v
cpArguments	lib/confparse.cc	/^  cpArguments		= "args",$/;"	v
cpBandwidth	lib/confparse.cc	/^  cpBandwidth		= "bandwidth_Bps",$/;"	v
cpBool	lib/confparse.cc	/^  cpBool		= "bool",$/;"	v
cpByte	lib/confparse.cc	/^  cpByte		= "byte",$/;"	v
cpConfirmKeywords	lib/confparse.cc	/^  cpConfirmKeywords	= "\\377CONFIRM_KEYWORDS",$/;"	v
cpDouble	lib/confparse.cc	/^  cpDouble		= "double",$/;"	v
cpElement	lib/confparse.cc	/^  cpElement		= "element",$/;"	v
cpElementCast	lib/confparse.cc	/^  cpElementCast		= "element_cast",$/;"	v
cpEnd	include/click/confparse.hh	739;"	d
cpEnd	lib/confparse.cc	/^  cpEnd			= 0,$/;"	v
cpEnd	lib/confparse.cc	2167;"	d	file:
cpEtherAddress	lib/confparse.cc	/^  cpEtherAddress	= cpEthernetAddress, \/\/ synonym$/;"	v
cpEthernetAddress	lib/confparse.cc	/^  cpEthernetAddress	= "ether_addr",$/;"	v
cpFileOffset	lib/confparse.cc	/^  cpFileOffset		= "off_t",$/;"	v
cpFilename	lib/confparse.cc	/^  cpFilename		= "filename",$/;"	v
cpHandler	lib/confparse.cc	/^  cpHandler		= "handler",$/;"	v
cpHandlerCallPtrRead	lib/confparse.cc	/^  cpHandlerCallPtrRead	= "handler_call_ptr_read",$/;"	v
cpHandlerCallPtrWrite	lib/confparse.cc	/^  cpHandlerCallPtrWrite	= "handler_call_ptr_write",$/;"	v
cpHandlerCallRead	lib/confparse.cc	/^  cpHandlerCallRead	= "handler_call_read",$/;"	v
cpHandlerCallWrite	lib/confparse.cc	/^  cpHandlerCallWrite	= "handler_call_write",$/;"	v
cpHandlerName	lib/confparse.cc	/^  cpHandlerName		= "handler_name",$/;"	v
cpIP6Address	lib/confparse.cc	/^  cpIP6Address		= "ip6_addr",$/;"	v
cpIP6AddressOrPrefix	lib/confparse.cc	/^  cpIP6AddressOrPrefix	= "ip6_addr_or_prefix",$/;"	v
cpIP6Prefix	lib/confparse.cc	/^  cpIP6Prefix		= "ip6_prefix",$/;"	v
cpIP6PrefixLen	lib/confparse.cc	/^  cpIP6PrefixLen	= "ip6_prefix_len",$/;"	v
cpIPAddress	lib/confparse.cc	/^  cpIPAddress		= "ip_addr",$/;"	v
cpIPAddressList	lib/confparse.cc	/^  cpIPAddressList	= "ip_addr_list",$/;"	v
cpIPAddressOrPrefix	lib/confparse.cc	/^  cpIPAddressOrPrefix	= "ip_addr_or_prefix",$/;"	v
cpIPPrefix	lib/confparse.cc	/^  cpIPPrefix		= "ip_prefix",$/;"	v
cpIgnore	lib/confparse.cc	/^  cpIgnore		= "IGNORE",$/;"	v
cpIgnoreRest	lib/confparse.cc	/^  cpIgnoreRest		= "\\377IGNORE_REST",$/;"	v
cpInteger	lib/confparse.cc	/^  cpInteger		= "int",$/;"	v
cpInteger64	lib/confparse.cc	/^  cpInteger64		= "long_long",$/;"	v
cpInterval	lib/confparse.cc	/^  cpInterval		= cpTimeval,$/;"	v
cpKeyword	lib/confparse.cc	/^  cpKeyword		= "keyword",$/;"	v
cpKeywords	lib/confparse.cc	/^  cpKeywords		= "\\377KEYWORDS",$/;"	v
cpMandatoryKeywords	lib/confparse.cc	/^  cpMandatoryKeywords	= "\\377MANDATORY_KEYWORDS",$/;"	v
cpNamedInteger	lib/confparse.cc	/^  cpNamedInteger	= "named_int",$/;"	v
cpOptional	lib/confparse.cc	/^  cpOptional		= "OPTIONAL",$/;"	v
cpReadHandlerCall	lib/confparse.cc	/^  cpReadHandlerCall	= cpHandlerCallPtrRead,$/;"	v
cpReal10	lib/confparse.cc	/^  cpReal10		= "real10",$/;"	v
cpReal2	lib/confparse.cc	/^  cpReal2		= "real2",$/;"	v
cpSeconds	lib/confparse.cc	/^  cpSeconds		= "sec",$/;"	v
cpSecondsAsMicro	lib/confparse.cc	/^  cpSecondsAsMicro	= "usec",$/;"	v
cpSecondsAsMilli	lib/confparse.cc	/^  cpSecondsAsMilli	= "msec",$/;"	v
cpShort	lib/confparse.cc	/^  cpShort		= "short",$/;"	v
cpSize	lib/confparse.cc	/^  cpSize		= "size_t",$/;"	v
cpString	lib/confparse.cc	/^  cpString		= "string",$/;"	v
cpTCPPort	lib/confparse.cc	/^  cpTCPPort		= "tcp_port",$/;"	v
cpTimestamp	lib/confparse.cc	/^  cpTimestamp		= "timestamp",$/;"	v
cpTimestampSigned	lib/confparse.cc	/^  cpTimestampSigned	= "timestamp_signed",$/;"	v
cpTimeval	lib/confparse.cc	/^  cpTimeval		= "timeval",$/;"	v
cpUDPPort	lib/confparse.cc	/^  cpUDPPort		= "udp_port",$/;"	v
cpUnsigned	lib/confparse.cc	/^  cpUnsigned		= "u_int",$/;"	v
cpUnsigned64	lib/confparse.cc	/^  cpUnsigned64		= "u_long_long",$/;"	v
cpUnsignedReal10	lib/confparse.cc	/^  cpUnsignedReal10	= "u_real10",$/;"	v
cpUnsignedReal2	lib/confparse.cc	/^  cpUnsignedReal2	= "u_real2",$/;"	v
cpUnsignedShort	lib/confparse.cc	/^  cpUnsignedShort	= "u_short",$/;"	v
cpWord	lib/confparse.cc	/^  cpWord		= "word",$/;"	v
cpWriteHandlerCall	lib/confparse.cc	/^  cpWriteHandlerCall	= cpHandlerCallPtrWrite;$/;"	v
cp_anno	lib/confparse.cc	/^cp_anno(const String &str, int size, int *result  CP_CONTEXT)$/;"	f
cp_argtype	include/click/confparse.hh	/^struct cp_argtype {$/;"	s
cp_argvec	lib/confparse.cc	/^cp_argvec(const String &str, Vector<String> &conf)$/;"	f
cp_assign_arguments	lib/confparse.cc	/^cp_assign_arguments(const Vector<String> &argv, const String *param_begin, const String *param_end, Vector<String> *values)$/;"	f
cp_bandwidth	lib/confparse.cc	/^bool cp_bandwidth(const String &str, uint32_t *result)$/;"	f
cp_basic_integer	lib/confparse.cc	/^cp_basic_integer(const char *begin, const char *end, int flags, int size,$/;"	f
cp_basic_integer_whole	include/click/confparse.hh	/^enum { cp_basic_integer_whole = 64 };$/;"	e	enum:__anon477
cp_bool	lib/confparse.cc	/^cp_bool(const String &str, bool *result)$/;"	f
cp_color	apps/clicky/src/dstyle.cc	/^bool cp_color(const String &str, double *r, double *g, double *b, double *a)$/;"	f	namespace:clicky
cp_double	apps/clicky/src/dwidget.cc	/^const char *cp_double(const char *begin, const char *end, double *result)$/;"	f	namespace:clicky
cp_double	lib/confparse.cc	/^cp_double(const String &str, double *result)$/;"	f
cp_eat_space	lib/confparse.cc	/^cp_eat_space(String &str)$/;"	f
cp_element	lib/confparse.cc	/^cp_element(const String &str, Router *router, ErrorHandler *errh,$/;"	f
cp_element	lib/confparse.cc	/^cp_element(const String &str, const Element *context, ErrorHandler *errh,$/;"	f
cp_errno	lib/confparse.cc	/^int cp_errno;$/;"	v
cp_ethernet_address	lib/confparse.cc	/^cp_ethernet_address(const String &str, EtherAddress *result  CP_CONTEXT)$/;"	f
cp_ethernet_address	lib/confparse.cc	/^cp_ethernet_address(const String &str, unsigned char *result$/;"	f
cp_expand	lib/variableenv.cc	/^cp_expand(const String &config, const VariableExpander &ve,$/;"	f
cp_extend_stringlist_argtype	lib/confparse.cc	/^cp_extend_stringlist_argtype(const char *name, ...)$/;"	f
cp_file_offset	lib/confparse.cc	/^cp_file_offset(const String &str, off_t *result)$/;"	f
cp_filename	lib/confparse.cc	/^cp_filename(const String &str, String *result)$/;"	f
cp_find_argtype	lib/confparse.cc	/^cp_find_argtype(const char *command)$/;"	f	file:
cp_handler	lib/confparse.cc	/^cp_handler(const String &str, int flags,$/;"	f
cp_handler_name	lib/confparse.cc	/^cp_handler_name(const String& str,$/;"	f
cp_host_port	apps/clicky/src/dialogs.cc	/^bool cp_host_port(const String &hosts, const String &ports, IPAddress *result_addr, uint16_t *result_port, ErrorHandler *errh)$/;"	f	namespace:clicky
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, int *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, int base, int *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, int base, int64_t *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, int base, long *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, int base, long long *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, int base, uint64_t *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, int base, unsigned int *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, int base, unsigned long *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, int base, unsigned long long *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, int64_t *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, long *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, long long *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, uint64_t *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, unsigned int *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, unsigned long *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline bool cp_integer(const String &str, unsigned long long *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline const char *cp_integer(const char *begin, const char *end, int base, int *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline const char *cp_integer(const char *begin, const char *end, int base, int64_t *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline const char *cp_integer(const char *begin, const char *end, int base, long *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline const char *cp_integer(const char *begin, const char *end, int base, long long *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline const char *cp_integer(const char *begin, const char *end, int base, uint64_t *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline const char *cp_integer(const char *begin, const char *end, int base, unsigned *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline const char *cp_integer(const char *begin, const char *end, int base, unsigned long *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline const char *cp_integer(const char *begin, const char *end, int base, unsigned long long *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline const unsigned char *cp_integer(const unsigned char *begin, const unsigned char *end, int base, uint64_t *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline const unsigned char *cp_integer(const unsigned char *begin, const unsigned char *end, int base, unsigned *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline const unsigned char *cp_integer(const unsigned char *begin, const unsigned char *end, int base, unsigned long *result)$/;"	f
cp_integer	include/click/confparse.hh	/^inline const unsigned char *cp_integer(const unsigned char *begin, const unsigned char *end, int base, unsigned long long *result)$/;"	f
cp_integer64	include/click/confparse.hh	436;"	d
cp_ip6_address	include/click/confparse.hh	/^inline bool cp_ip6_address(const String& str, struct click_in6_addr *x  CP_CONTEXT)$/;"	f
cp_ip6_address	lib/confparse.cc	/^cp_ip6_address(const String &str, IP6Address *result$/;"	f
cp_ip6_address	lib/confparse.cc	/^cp_ip6_address(const String &str, unsigned char *result$/;"	f
cp_ip6_prefix	lib/confparse.cc	/^cp_ip6_prefix(const String &str, IP6Address *address, IP6Address *prefix,$/;"	f
cp_ip6_prefix	lib/confparse.cc	/^cp_ip6_prefix(const String &str, IP6Address *result_addr, int *result_prefix,$/;"	f
cp_ip6_prefix	lib/confparse.cc	/^cp_ip6_prefix(const String &str, unsigned char *address, unsigned char *mask,$/;"	f
cp_ip6_prefix	lib/confparse.cc	/^cp_ip6_prefix(const String &str,$/;"	f
cp_ip_address	include/click/confparse.hh	/^inline bool cp_ip_address(const String& str, struct in_addr *ina  CP_CONTEXT)$/;"	f
cp_ip_address	lib/confparse.cc	/^cp_ip_address(const String &str, IPAddress *result  CP_CONTEXT)$/;"	f
cp_ip_address	lib/confparse.cc	/^cp_ip_address(const String &str, unsigned char *result$/;"	f
cp_ip_address_list	lib/confparse.cc	/^cp_ip_address_list(const String &str, Vector<IPAddress> *result  CP_CONTEXT)$/;"	f
cp_ip_field_helper	elements/ip/ipfieldinfo.cc	/^cp_ip_field_helper(const char *begin, int which, ErrorHandler *errh)$/;"	f	file:
cp_ip_field_messages	elements/ip/ipfieldinfo.cc	/^static const char * const cp_ip_field_messages[] = {$/;"	v	file:
cp_ip_prefix	lib/confparse.cc	/^cp_ip_prefix(const String &str, IPAddress *address, IPAddress *mask$/;"	f
cp_ip_prefix	lib/confparse.cc	/^cp_ip_prefix(const String &str, IPAddress *result_addr, IPAddress *result_mask,$/;"	f
cp_ip_prefix	lib/confparse.cc	/^cp_ip_prefix(const String &str, unsigned char *address, unsigned char *mask$/;"	f
cp_ip_prefix	lib/confparse.cc	/^cp_ip_prefix(const String &str,$/;"	f
cp_ip_route	elements/ip/iproutetable.cc	/^cp_ip_route(String s, IPRoute *r_store, bool remove_route, Element *context)$/;"	f
cp_ipsec_route	elements/ipsec/ipsecroutetable.cc	/^cp_ipsec_route(String s, IPsecRoute *r_store, bool remove_route, Element *context)$/;"	f
cp_is_click_id	lib/confparse.cc	/^cp_is_click_id(const String &str)$/;"	f
cp_is_space	include/click/confparse.hh	/^inline bool cp_is_space(const String& str)$/;"	f
cp_is_word	lib/confparse.cc	/^cp_is_word(const String &str)$/;"	f
cp_keyword	lib/confparse.cc	/^cp_keyword(const String &str, String *result, String *rest)$/;"	f
cp_parameter_used	lib/confparse.cc	/^static Vector<int> *cp_parameter_used;$/;"	v	file:
cp_parsefunc	include/click/confparse.hh	/^typedef void (*cp_parsefunc)(cp_value* value, const String& arg,$/;"	t
cp_pixel	apps/clicky/src/dstyle.cc	/^bool cp_pixel(const String &str, double *v)$/;"	f	namespace:clicky
cp_pop_spacevec	include/click/confparse.hh	/^inline String cp_pop_spacevec(String &str) {$/;"	f
cp_process_backslash	lib/confparse.cc	/^cp_process_backslash(const char *begin, const char *end, StringAccum &sa)$/;"	f
cp_quote	lib/confparse.cc	/^cp_quote(const String &str, bool allow_newlines)$/;"	f
cp_real10	lib/confparse.cc	/^cp_real10(const String &str, int frac_digits, int exponent_delta,$/;"	f
cp_real10	lib/confparse.cc	/^cp_real10(const String &str, int frac_digits, int32_t *result)$/;"	f
cp_real10	lib/confparse.cc	/^cp_real10(const String &str, int frac_digits, uint32_t *result)$/;"	f
cp_real10	lib/confparse.cc	/^cp_real10(const String &str, int frac_digits,$/;"	f
cp_real2	lib/confparse.cc	/^cp_real2(const String &str, int frac_bits, int32_t *result)$/;"	f
cp_real2	lib/confparse.cc	/^cp_real2(const String &str, int frac_bits, uint32_t *result)$/;"	f
cp_register_argtype	include/click/confparse.hh	/^inline int cp_register_argtype(const char* name, const char* description, int flags,$/;"	f
cp_register_argtype	lib/confparse.cc	/^cp_register_argtype(const char *name, const char *desc, int flags,$/;"	f
cp_register_argtype	lib/confparse.cc	/^cp_register_argtype(const char *name, const char *desc, int flags,$/;"	f	file:
cp_register_stringlist_argtype	lib/confparse.cc	/^cp_register_stringlist_argtype(const char *name, const char *desc, int flags)$/;"	f
cp_relative	apps/clicky/src/dstyle.cc	/^bool cp_relative(const String &str, double *v)$/;"	f	namespace:clicky
cp_scanf	elements/ip/ipfieldinfo.cc	/^cp_scanf(const char *begin, const char *end, const char *format, ...)$/;"	f
cp_seconds	lib/confparse.cc	/^bool cp_seconds(const String &str, double *result)$/;"	f
cp_seconds_as	include/click/confparse.hh	/^inline bool cp_seconds_as(int want_power, const String &str, uint32_t *result)$/;"	f
cp_seconds_as	lib/confparse.cc	/^bool cp_seconds_as(const String &str, int frac_digits, uint32_t *result)$/;"	f
cp_seconds_as_micro	lib/confparse.cc	/^bool cp_seconds_as_micro(const String &str, uint32_t *result)$/;"	f
cp_seconds_as_milli	lib/confparse.cc	/^bool cp_seconds_as_milli(const String &str, uint32_t *result)$/;"	f
cp_shift_spacevec	lib/confparse.cc	/^cp_shift_spacevec(String &str)$/;"	f
cp_skip_comment_space	lib/confparse.cc	/^cp_skip_comment_space(const char *begin, const char *end)$/;"	f
cp_skip_double_quote	lib/confparse.cc	/^cp_skip_double_quote(const char *begin, const char *end)$/;"	f
cp_skip_space	lib/confparse.cc	/^cp_skip_space(const char *begin, const char *end)$/;"	f
cp_spacevec	lib/confparse.cc	/^cp_spacevec(const String &str, Vector<String> &conf)$/;"	f
cp_storefunc	include/click/confparse.hh	/^typedef void (*cp_storefunc)(cp_value* value  CP_CONTEXT);$/;"	t
cp_string	lib/confparse.cc	/^cp_string(const String &str, String *result, String *rest)$/;"	f
cp_tcpudp_port	lib/confparse.cc	/^cp_tcpudp_port(const String &str, int proto, uint16_t *result$/;"	f
cp_time	lib/confparse.cc	/^bool cp_time(const String &str, Timestamp *result, bool allow_negative)$/;"	f
cp_time	lib/confparse.cc	/^bool cp_time(const String &str, timeval *result)$/;"	f
cp_unargvec	lib/confparse.cc	/^cp_unargvec(const Vector<String> &conf)$/;"	f
cp_uncomment	lib/confparse.cc	/^cp_uncomment(const String &str)$/;"	f
cp_unparse_bandwidth	lib/confparse.cc	/^cp_unparse_bandwidth(uint32_t bw)$/;"	f
cp_unparse_bool	lib/confparse.cc	/^cp_unparse_bool(bool b)$/;"	f
cp_unparse_interval	lib/confparse.cc	/^cp_unparse_interval(const Timestamp& ts)$/;"	f
cp_unparse_interval	lib/confparse.cc	/^cp_unparse_interval(const timeval& tv)$/;"	f
cp_unparse_microseconds	lib/confparse.cc	/^cp_unparse_microseconds(uint32_t us)$/;"	f
cp_unparse_milliseconds	lib/confparse.cc	/^cp_unparse_milliseconds(uint32_t ms)$/;"	f
cp_unparse_real10	lib/confparse.cc	/^cp_unparse_real10(int32_t real, int frac_digits)$/;"	f
cp_unparse_real10	lib/confparse.cc	/^cp_unparse_real10(uint32_t real, int frac_digits)$/;"	f
cp_unparse_real2	lib/confparse.cc	/^cp_unparse_real2(int32_t real, int frac_bits)$/;"	f
cp_unparse_real2	lib/confparse.cc	/^cp_unparse_real2(int64_t real, int frac_bits)$/;"	f
cp_unparse_real2	lib/confparse.cc	/^cp_unparse_real2(uint32_t real, int frac_bits)$/;"	f
cp_unparse_real2	lib/confparse.cc	/^cp_unparse_real2(uint64_t real, int frac_bits)$/;"	f
cp_unquote	lib/confparse.cc	/^cp_unquote(const String &str)$/;"	f
cp_unregister_argtype	lib/confparse.cc	/^cp_unregister_argtype(const char *name)$/;"	f
cp_unsigned	include/click/confparse.hh	438;"	d
cp_unsigned64	include/click/confparse.hh	437;"	d
cp_unsigned_real10	include/click/confparse.hh	439;"	d
cp_unsigned_real2	include/click/confparse.hh	440;"	d
cp_unspacevec	include/click/confparse.hh	/^inline String cp_unspacevec(const Vector<String>& conf)$/;"	f
cp_unspacevec	lib/confparse.cc	/^cp_unspacevec(const String *begin, const String *end)$/;"	f
cp_va_kparse	lib/confparse.cc	/^cp_va_kparse(const String &str,$/;"	f
cp_va_kparse	lib/confparse.cc	/^cp_va_kparse(const Vector<String> &conf,$/;"	f
cp_va_kparse_keyword	lib/confparse.cc	/^cp_va_kparse_keyword(const String &str,$/;"	f
cp_va_kparse_remove_keywords	lib/confparse.cc	/^cp_va_kparse_remove_keywords(Vector<String> &conf,$/;"	f
cp_va_parse	lib/confparse.cc	/^cp_va_parse(const String &str,$/;"	f
cp_va_parse	lib/confparse.cc	/^cp_va_parse(const Vector<String> &conf,$/;"	f
cp_va_parse_keyword	lib/confparse.cc	/^cp_va_parse_keyword(const String &str,$/;"	f
cp_va_parse_remove_keywords	lib/confparse.cc	/^cp_va_parse_remove_keywords(Vector<String> &conf, int first,$/;"	f
cp_va_space_kparse	lib/confparse.cc	/^cp_va_space_kparse(const String &str,$/;"	f
cp_va_space_parse	lib/confparse.cc	/^cp_va_space_parse(const String &str,$/;"	f
cp_va_static_cleanup	lib/confparse.cc	/^cp_va_static_cleanup()$/;"	f
cp_va_static_initialize	lib/confparse.cc	/^cp_va_static_initialize()$/;"	f
cp_value	include/click/confparse.hh	/^struct cp_value {$/;"	s
cp_values	lib/confparse.cc	/^  struct cp_value *cp_values;$/;"	m	struct:__anon517::CpVaHelper	typeref:struct:__anon517::CpVaHelper::cp_value	file:
cp_values	lib/confparse.cc	/^static cp_value *cp_values;$/;"	v	file:
cp_values_size	lib/confparse.cc	/^  int cp_values_size;$/;"	m	struct:__anon517::CpVaHelper	file:
cp_word	lib/confparse.cc	/^cp_word(const String &str, String *result, String *rest)$/;"	f
cpiAnno	lib/confparse.cc	/^  cpiAnno$/;"	e	enum:__anon514	file:
cpiArgument	lib/confparse.cc	/^  cpiArgument,$/;"	e	enum:__anon514	file:
cpiArguments	lib/confparse.cc	/^  cpiArguments,$/;"	e	enum:__anon514	file:
cpiBandwidth	lib/confparse.cc	/^  cpiBandwidth,$/;"	e	enum:__anon514	file:
cpiBool	lib/confparse.cc	/^  cpiBool,$/;"	e	enum:__anon514	file:
cpiByte	lib/confparse.cc	/^  cpiByte,$/;"	e	enum:__anon514	file:
cpiConfirmKeywords	lib/confparse.cc	/^  cpiConfirmKeywords,$/;"	e	enum:__anon514	file:
cpiDouble	lib/confparse.cc	/^  cpiDouble,$/;"	e	enum:__anon514	file:
cpiElement	lib/confparse.cc	/^  cpiElement,$/;"	e	enum:__anon514	file:
cpiElementCast	lib/confparse.cc	/^  cpiElementCast,$/;"	e	enum:__anon514	file:
cpiEnd	lib/confparse.cc	/^  cpiEnd = 0,$/;"	e	enum:__anon514	file:
cpiEthernetAddress	lib/confparse.cc	/^  cpiEthernetAddress,$/;"	e	enum:__anon514	file:
cpiFileOffset	lib/confparse.cc	/^  cpiFileOffset,$/;"	e	enum:__anon514	file:
cpiFilename	lib/confparse.cc	/^  cpiFilename,$/;"	e	enum:__anon514	file:
cpiHandlerCallPtrRead	lib/confparse.cc	/^  cpiHandlerCallPtrRead,$/;"	e	enum:__anon514	file:
cpiHandlerCallPtrWrite	lib/confparse.cc	/^  cpiHandlerCallPtrWrite,$/;"	e	enum:__anon514	file:
cpiHandlerCallRead	lib/confparse.cc	/^  cpiHandlerCallRead,$/;"	e	enum:__anon514	file:
cpiHandlerCallWrite	lib/confparse.cc	/^  cpiHandlerCallWrite,$/;"	e	enum:__anon514	file:
cpiHandlerName	lib/confparse.cc	/^  cpiHandlerName,$/;"	e	enum:__anon514	file:
cpiIP6Address	lib/confparse.cc	/^  cpiIP6Address,$/;"	e	enum:__anon514	file:
cpiIP6AddressOrPrefix	lib/confparse.cc	/^  cpiIP6AddressOrPrefix,$/;"	e	enum:__anon514	file:
cpiIP6Prefix	lib/confparse.cc	/^  cpiIP6Prefix,$/;"	e	enum:__anon514	file:
cpiIP6PrefixLen	lib/confparse.cc	/^  cpiIP6PrefixLen,$/;"	e	enum:__anon514	file:
cpiIPAddress	lib/confparse.cc	/^  cpiIPAddress,$/;"	e	enum:__anon514	file:
cpiIPAddressList	lib/confparse.cc	/^  cpiIPAddressList,$/;"	e	enum:__anon514	file:
cpiIPAddressOrPrefix	lib/confparse.cc	/^  cpiIPAddressOrPrefix,$/;"	e	enum:__anon514	file:
cpiIPPrefix	lib/confparse.cc	/^  cpiIPPrefix,$/;"	e	enum:__anon514	file:
cpiIgnore	lib/confparse.cc	/^  cpiIgnore,$/;"	e	enum:__anon514	file:
cpiIgnoreRest	lib/confparse.cc	/^  cpiIgnoreRest,$/;"	e	enum:__anon514	file:
cpiInteger	lib/confparse.cc	/^  cpiInteger,$/;"	e	enum:__anon514	file:
cpiInteger64	lib/confparse.cc	/^  cpiInteger64,$/;"	e	enum:__anon514	file:
cpiKeyword	lib/confparse.cc	/^  cpiKeyword,$/;"	e	enum:__anon514	file:
cpiKeywords	lib/confparse.cc	/^  cpiKeywords,$/;"	e	enum:__anon514	file:
cpiLastMagic	lib/confparse.cc	/^  cpiLastMagic = cpiIgnoreRest, \/\/ everything before here is a magic command$/;"	e	enum:__anon514	file:
cpiMandatoryKeywords	lib/confparse.cc	/^  cpiMandatoryKeywords,$/;"	e	enum:__anon514	file:
cpiNamedInteger	lib/confparse.cc	/^  cpiNamedInteger,$/;"	e	enum:__anon514	file:
cpiOptional	lib/confparse.cc	/^  cpiOptional,$/;"	e	enum:__anon514	file:
cpiReal10	lib/confparse.cc	/^  cpiReal10,$/;"	e	enum:__anon514	file:
cpiReal2	lib/confparse.cc	/^  cpiReal2,$/;"	e	enum:__anon514	file:
cpiSeconds	lib/confparse.cc	/^  cpiSeconds,$/;"	e	enum:__anon514	file:
cpiSecondsAsMicro	lib/confparse.cc	/^  cpiSecondsAsMicro,$/;"	e	enum:__anon514	file:
cpiSecondsAsMilli	lib/confparse.cc	/^  cpiSecondsAsMilli,$/;"	e	enum:__anon514	file:
cpiShort	lib/confparse.cc	/^  cpiShort,$/;"	e	enum:__anon514	file:
cpiSize	lib/confparse.cc	/^  cpiSize,$/;"	e	enum:__anon514	file:
cpiString	lib/confparse.cc	/^  cpiString,$/;"	e	enum:__anon514	file:
cpiTCPPort	lib/confparse.cc	/^  cpiTCPPort,$/;"	e	enum:__anon514	file:
cpiTimestamp	lib/confparse.cc	/^  cpiTimestamp,$/;"	e	enum:__anon514	file:
cpiTimestampSigned	lib/confparse.cc	/^  cpiTimestampSigned,$/;"	e	enum:__anon514	file:
cpiTimeval	lib/confparse.cc	/^  cpiTimeval,$/;"	e	enum:__anon514	file:
cpiUDPPort	lib/confparse.cc	/^  cpiUDPPort,$/;"	e	enum:__anon514	file:
cpiUnsigned	lib/confparse.cc	/^  cpiUnsigned,$/;"	e	enum:__anon514	file:
cpiUnsigned64	lib/confparse.cc	/^  cpiUnsigned64,$/;"	e	enum:__anon514	file:
cpiUnsignedReal10	lib/confparse.cc	/^  cpiUnsignedReal10,$/;"	e	enum:__anon514	file:
cpiUnsignedReal2	lib/confparse.cc	/^  cpiUnsignedReal2,$/;"	e	enum:__anon514	file:
cpiUnsignedShort	lib/confparse.cc	/^  cpiUnsignedShort,$/;"	e	enum:__anon514	file:
cpiWord	lib/confparse.cc	/^  cpiWord,$/;"	e	enum:__anon514	file:
cpkC	include/click/confparse.hh	/^    cpkC = 4,		\/\/\/< Argument presence should be confirmed$/;"	e	enum:CpKparseFlags
cpkConfirm	include/click/confparse.hh	/^    cpkConfirm = cpkC,$/;"	e	enum:CpKparseFlags
cpkD	include/click/confparse.hh	/^    cpkD = 8,		\/\/\/< Argument is deprecated$/;"	e	enum:CpKparseFlags
cpkDeprecated	include/click/confparse.hh	/^    cpkDeprecated = cpkD$/;"	e	enum:CpKparseFlags
cpkM	include/click/confparse.hh	/^    cpkM = 1,		\/\/\/< Argument is mandatory$/;"	e	enum:CpKparseFlags
cpkMandatory	include/click/confparse.hh	/^    cpkMandatory = cpkM,$/;"	e	enum:CpKparseFlags
cpkN	include/click/confparse.hh	/^    cpkN = 0,		\/\/\/< Default flags$/;"	e	enum:CpKparseFlags
cpkNormal	include/click/confparse.hh	/^    cpkNormal = cpkN,$/;"	e	enum:CpKparseFlags
cpkP	include/click/confparse.hh	/^    cpkP = 2,		\/\/\/< Argument may be specified positionally$/;"	e	enum:CpKparseFlags
cpkPositional	include/click/confparse.hh	/^    cpkPositional = cpkP,$/;"	e	enum:CpKparseFlags
cpkSupplied	lib/confparse.cc	/^    cpkSupplied = cpkDeprecated * 2$/;"	e	enum:__anon516	file:
cpu	drivers/e1000-7.x/src/e1000.h	/^	int cpu;$/;"	m	struct:e1000_rx_ring
cpu	linuxmodule/kernelversion.c	/^CLICK_INT_MODULE_PARAM(cpu);$/;"	v
cpu	linuxmodule/kernelversion.c	/^static int cpu = -1;$/;"	v	file:
cpu_relax	drivers/e1000-7.x/src/kcompat.h	712;"	d
cpu_to_le16	include/click/glue.hh	551;"	d
cpu_to_le32	include/click/glue.hh	553;"	d
cq_exch	lib/glue.cc	505;"	d	file:
cq_med3	lib/glue.cc	/^cq_med3(char *a, char *b, char *c,$/;"	f	namespace:__anon502
cq_swap	lib/glue.cc	506;"	d	file:
cq_swapfunc	lib/glue.cc	/^cq_swapfunc(char *a, char *b, size_t n, int swaptype)$/;"	f	namespace:__anon502
cq_word_t	lib/glue.cc	/^typedef long cq_word_t;$/;"	t	namespace:__anon502	file:
cr	apps/clicky/src/dwidget.hh	/^    crouter *cr;$/;"	m	struct:clicky::dcontext
cr	apps/clicky/src/hvalues.cc	/^    crouter *cr;$/;"	m	struct:clicky::__anon22::autorefresher	file:
crc32	elements/local/OpenFlow/lib/of_crc32.hh	/^struct crc32 {$/;"	s
crc32	elements/local/OpenFlow/lib/table-hash.cc	/^	struct crc32 crc32;$/;"	m	struct:sw_table_hash	typeref:struct:sw_table_hash::crc32	file:
crc32_calculate	elements/local/OpenFlow/lib/of_crc32.cc	/^crc32_calculate(const struct crc32 *crc, const void *data_, size_t n_bytes)$/;"	f
crc32_init	elements/local/OpenFlow/lib/of_crc32.cc	/^crc32_init(struct crc32 *crc, unsigned int polynomial)$/;"	f
crc_init	elements/wifi/rc4.cc	/^crc_init(void)$/;"	f	file:
crc_table	elements/wifi/rc4.cc	/^static u_int32_t crc_table[256];$/;"	v	file:
crc_table	lib/crc32.c	/^static uint32_t crc_table[256];$/;"	v	file:
crcerr	elements/wifi/athdesc.h	/^	u_int32_t crcerr:1;$/;"	m	struct:ar5212_rx_status
crcerrs	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t crcerrs;$/;"	m	struct:e1000_hw_stats
crcerrs	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t crcerrs;$/;"	m	struct:e1000_hw_stats
crcerrs	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t crcerrs;$/;"	m	struct:e1000_hw_stats
create	apps/clicky/src/dwidget.cc	/^delt *delt::create(ElementT *e, delt *parent,$/;"	f	class:clicky::delt
create	apps/clicky/src/whandler.cc	/^void whandler::hinfo::create(whandler *wh, int new_flags, bool always_position)$/;"	f	class:clicky::whandler::hinfo
create	tools/lib/processingt.cc	/^ProcessingT::create(const String &compound_pcode, bool resolve_agnostics,$/;"	f	class:ProcessingT
createMenuItem	apps/ClickController/ClickController.java	/^    public JMenuItem createMenuItem(JMenu menu, String label, char mnemonic,$/;"	m	class:ClickController
createMenus	apps/ClickController/ClickController.java	/^    public JMenuBar createMenus() {$/;"	m	class:ClickController
create_aligner	tools/click-align/alignclass.cc	/^AlignAlignClass::create_aligner(ElementT *e, RouterT *, ErrorHandler *errh)$/;"	f	class:AlignAlignClass
create_aligner	tools/click-align/alignclass.cc	/^AlignClass::create_aligner(ElementT *, RouterT *, ErrorHandler *)$/;"	f	class:AlignClass
create_aligner	tools/click-align/alignclass.cc	/^CheckIPHeaderAlignClass::create_aligner(ElementT *e, RouterT *, ErrorHandler *)$/;"	f	class:CheckIPHeaderAlignClass
create_aligner	tools/click-align/alignclass.cc	/^DeviceAlignClass::create_aligner(ElementT *e, RouterT *, ErrorHandler *errh)$/;"	f	class:DeviceAlignClass
create_aligner	tools/click-align/alignclass.cc	/^ICMPErrorAlignClass::create_aligner(ElementT *e, RouterT *, ErrorHandler *)$/;"	f	class:ICMPErrorAlignClass
create_aligner	tools/click-align/alignclass.cc	/^StripAlignClass::create_aligner(ElementT *e, RouterT *, ErrorHandler *errh)$/;"	f	class:StripAlignClass
create_and_register_algorithms	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^void PFSchedFW::create_and_register_algorithms()$/;"	f	class:PFSchedFW
create_and_register_algorithms	elements/local/FlowNet/shaper/PFShapeFW.cc	/^void PFShapeFW::create_and_register_algorithms()$/;"	f	class:PFShapeFW
create_autorefresh	apps/clicky/src/hvalues.cc	/^void handler_value::create_autorefresh(crouter *cr)$/;"	f	class:clicky::handler_value
create_bbox_contents	apps/clicky/src/dwidget.cc	/^void delt::create_bbox_contents(double bbox[4], double mbbox[4], bool include_compound_ports) const$/;"	f	class:clicky::delt
create_buffer	elements/local/FlowNet/papmo/PaPMo.cc	/^int lfc_buffer::create_buffer( int bs, int is )$/;"	f	class:lfc_buffer
create_class	tools/click-devirtualize/specializer.cc	/^Specializer::create_class(SpecializedClass &spc)$/;"	f	class:Specializer
create_connections	apps/clicky/src/dwidget.cc	/^void delt::create_connections(crouter *cr)$/;"	f	class:clicky::delt
create_connections	apps/clicky/src/dwidget.cc	/^void delt::create_connections(std::vector<delt_conn> &cc, crouter *cr) const$/;"	f	class:clicky::delt
create_connector_methods	tools/click-devirtualize/specializer.cc	/^Specializer::create_connector_methods(SpecializedClass &spc)$/;"	f	class:Specializer
create_deviceinfo	elements/standard/addressinfo.cc	/^create_deviceinfo(Vector<String> &deviceinfo)$/;"	f	file:
create_directories	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::Flow::create_directories(const String &n, ErrorHandler *errh)$/;"	f	class:ToIPFlowDumps::Flow
create_display	apps/clicky/src/whandler.cc	/^int whandler::hinfo::create_display(whandler *wh)$/;"	f	class:clicky::whandler::hinfo
create_elements	apps/clicky/src/dwidget.cc	/^void delt::create_elements(crouter *cr, RouterT *router,$/;"	f	class:clicky::delt
create_elements	tools/click-pretty/click-pretty.cc	/^ElementsOutput::create_elements()$/;"	f	class:ElementsOutput
create_entries	tools/click-pretty/click-pretty.cc	/^ElementsOutput::create_entries()$/;"	f	class:ElementsOutput
create_mainw	apps/clicky/src/interface.c	/^create_mainw (void)$/;"	f
create_memo	lib/string.cc	/^String::create_memo(char *space, int dirty, int capacity)$/;"	f	class:String
create_new_buffer	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^FrameReceivingBuffer* FlowMpeg2AdaptDecap::create_new_buffer( int ftype, int findex, int pkts )$/;"	f	class:FlowMpeg2AdaptDecap
create_opensocketdialog	apps/clicky/src/interface.c	/^create_opensocketdialog (void)$/;"	f
create_phase_0	tools/click-devirtualize/signature.cc	/^Signatures::create_phase_0(const ProcessingT &pt)$/;"	f	class:Signatures
create_pidx	tools/lib/processingt.cc	/^ProcessingT::create_pidx(ErrorHandler *errh)$/;"	f	class:ProcessingT
create_pixbuf	apps/clicky/src/support.c	/^create_pixbuf                          (const gchar     *filename)$/;"	f
create_pixmap	apps/clicky/src/support.c	/^create_pixmap                          (GtkWidget       *widget,$/;"	f
create_preferences	apps/clicky/src/whandler.cc	/^int whandler::hinfo::create_preferences(whandler *wh)$/;"	f	class:clicky::whandler::hinfo
create_router	lib/lexer.cc	/^Lexer::create_router(Master *master)$/;"	f	class:Lexer
create_row	elements/analysis/aggregatefirst.cc	/^AggregateFirst::create_row(uint32_t agg)$/;"	f	class:AggregateFirst
create_row	elements/analysis/aggregatelast.cc	/^AggregateLast::create_row(uint32_t agg)$/;"	f	class:AggregateLast
create_scope	tools/lib/eclasst.cc	/^ElementClassT::create_scope(const Vector<String> &, const VariableEnvironment &, VariableEnvironment &)$/;"	f	class:ElementClassT
create_scope	tools/lib/eclasst.cc	/^SynonymElementClassT::create_scope(const Vector<String> &, const VariableEnvironment &, VariableEnvironment &)$/;"	f	class:SynonymElementClassT
create_scope	tools/lib/routert.cc	/^RouterT::create_scope(const Vector<String> &args,$/;"	f	class:RouterT
create_split	apps/clicky/src/dwidget.cc	/^delt *delt::create_split(crouter *cr, int split_type)$/;"	f	class:clicky::delt
create_thread_nox_commun	elements/local/OpenFlow/RConn.cc	/^void RConn::create_thread_nox_commun()$/;"	f	class:RConn
created	elements/local/OpenFlow/lib/switch-flow.hh	/^    uint64_t created;           \/* When the flow was created. *\/$/;"	m	struct:sw_flow
creation_time	elements/local/OpenFlow/lib/rconn.cc	/^    time_t creation_time;$/;"	m	struct:rconn	file:
crouter	apps/clicky/src/crouter.cc	/^crouter::crouter(dcss_set *ccss)$/;"	f	class:clicky::crouter
crouter	apps/clicky/src/crouter.hh	/^class crouter { public:$/;"	c	namespace:clicky
cs	include/click/clp.h	/^	char cs[Clp_ValSize];$/;"	m	union:Clp_Parser::__anon460
cs_ports	userlevel/click.cc	/^static Vector<String> cs_ports;$/;"	v	file:
cs_sockets	userlevel/click.cc	/^static Vector<String> cs_sockets;$/;"	v	file:
cs_unix_sockets	userlevel/click.cc	/^static Vector<String> cs_unix_sockets;$/;"	v	file:
cso	drivers/e1000-4.x/src/e1000_hw.h	/^            uint8_t cso;        \/* Checksum offset *\/$/;"	m	struct:e1000_tx_desc::__anon52::__anon53
cso	drivers/e1000-5.x/src/e1000_hw.h	/^            uint8_t cso;        \/* Checksum offset *\/$/;"	m	struct:e1000_tx_desc::__anon149::__anon150
cso	drivers/e1000-7.x/src/e1000_hw.h	/^            uint8_t cso;        \/* Checksum offset *\/$/;"	m	struct:e1000_tx_desc::__anon106::__anon107
csocket_cdriver	apps/clicky/src/cdriver.cc	/^csocket_cdriver::csocket_cdriver(crouter *cr, GIOChannel *socket, bool ready)$/;"	f	class:clicky::csocket_cdriver
csocket_cdriver	apps/clicky/src/cdriver.hh	/^class csocket_cdriver : public cdriver { public:$/;"	c	namespace:clicky
csocket_connected	apps/clicky/src/cdriver.hh	/^	   csocket_connected };$/;"	e	enum:clicky::csocket_cdriver::__anon5
csocket_connecting	apps/clicky/src/cdriver.hh	/^    enum { csocket_failed, csocket_connecting, csocket_initial,$/;"	e	enum:clicky::csocket_cdriver::__anon5
csocket_event	apps/clicky/src/cdriver.cc	/^gboolean csocket_cdriver::csocket_event(GIOCondition)$/;"	f	class:clicky::csocket_cdriver
csocket_failed	apps/clicky/src/cdriver.hh	/^    enum { csocket_failed, csocket_connecting, csocket_initial,$/;"	e	enum:clicky::csocket_cdriver::__anon5
csocket_initial	apps/clicky/src/cdriver.hh	/^    enum { csocket_failed, csocket_connecting, csocket_initial,$/;"	e	enum:clicky::csocket_cdriver::__anon5
csocket_watch	apps/clicky/src/cdriver.cc	/^static gboolean csocket_watch(GIOChannel *, GIOCondition condition, gpointer user_data)$/;"	f	file:
css	drivers/e1000-4.x/src/e1000_hw.h	/^            uint8_t css;        \/* Checksum start *\/$/;"	m	struct:e1000_tx_desc::__anon54::__anon55
css	drivers/e1000-5.x/src/e1000_hw.h	/^            uint8_t css;        \/* Checksum start *\/$/;"	m	struct:e1000_tx_desc::__anon151::__anon152
css	drivers/e1000-7.x/src/e1000_hw.h	/^            uint8_t css;        \/* Checksum start *\/$/;"	m	struct:e1000_tx_desc::__anon108::__anon109
csum	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t csum;       \/* Packet checksum *\/$/;"	m	struct:e1000_rx_desc
csum	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t csum;       \/* Packet checksum *\/$/;"	m	struct:e1000_rx_desc
csum	drivers/e1000-7.x/src/e1000_hw.h	/^                    uint16_t csum;     \/* Packet Checksum *\/$/;"	m	struct:e1000_rx_desc_extended::__anon94::__anon95::__anon96::__anon97
csum	drivers/e1000-7.x/src/e1000_hw.h	/^                    uint16_t csum;     \/* Packet Checksum *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon100::__anon101::__anon102::__anon103
csum	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t csum;       \/* Packet checksum *\/$/;"	m	struct:e1000_rx_desc
csum	elements/local/OpenFlow/lib/csum.cc	/^csum(const void *data, size_t n)$/;"	f
csum_add16	elements/local/OpenFlow/lib/csum.cc	/^csum_add16(uint32_t partial, uint16_t New)$/;"	f
csum_add32	elements/local/OpenFlow/lib/csum.cc	/^csum_add32(uint32_t partial, uint32_t New)$/;"	f
csum_continue	elements/local/OpenFlow/lib/csum.cc	/^csum_continue(uint32_t partial, const void *data_, size_t n)$/;"	f
csum_finish	elements/local/OpenFlow/lib/csum.cc	/^csum_finish(uint32_t partial)$/;"	f
csum_ip	drivers/e1000-7.x/src/e1000_hw.h	/^                } csum_ip;$/;"	m	union:e1000_rx_desc_extended::__anon94::__anon95::__anon96	typeref:struct:e1000_rx_desc_extended::__anon94::__anon95::__anon96::__anon97
csum_ip	drivers/e1000-7.x/src/e1000_hw.h	/^                } csum_ip;$/;"	m	union:e1000_rx_desc_packet_split::__anon100::__anon101::__anon102	typeref:struct:e1000_rx_desc_packet_split::__anon100::__anon101::__anon102::__anon103
ctrl	include/clicknet/fddi.h	/^    uint8_t	ctrl;$/;"	m	struct:click_fddi_8022_1
ctrl	include/clicknet/fddi.h	/^    uint8_t	ctrl;$/;"	m	struct:click_fddi_snap
ctrl1	include/clicknet/fddi.h	/^    uint8_t	ctrl1;$/;"	m	struct:click_fddi_8022_2
ctrl2	include/clicknet/fddi.h	/^    uint8_t	ctrl2;$/;"	m	struct:click_fddi_8022_2
ctrl_handler	elements/ip/iproutetable.cc	/^IPRouteTable::ctrl_handler(const String &conf_in, Element *e, void *, ErrorHandler *errh)$/;"	f	class:IPRouteTable
ctrl_handler	elements/ip6/ip6routetable.cc	/^IP6RouteTable::ctrl_handler(const String &conf_in, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:IP6RouteTable
ctrl_handler	elements/ipsec/ipsecroutetable.cc	/^IPsecRouteTable::ctrl_handler(const String &conf_in, Element *e, void *, ErrorHandler *errh)$/;"	f	class:IPsecRouteTable
cts_enable	elements/wifi/athdesc.h	/^	u_int32_t	cts_enable:1;$/;"	m	struct:ar5212_desc
ctx	elements/local/OpenFlow/lib/vconn-ssl.cc	/^static SSL_CTX *ctx;$/;"	v	file:
cur_cpu_share	include/click/routerthread.hh	/^    unsigned cur_cpu_share() const	{ return _cur_click_share; }$/;"	f	class:RouterThread
cur_rpl	elements/ipsec/sadatatuple.hh	/^    uint32_t cur_rpl;$/;"	m	class:SADataTuple
curr	elements/local/OpenFlow/datapath.hh	/^	uint32_t curr;$/;"	m	struct:click_port
curr	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t curr;          \/* Current features. *\/$/;"	m	struct:ofp_phy_port
curr_deque_frametype	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^	unsigned int curr_deque_frametype; \/* used in deque *\/$/;"	m	class:FlowMpeg2AdaptEncap
curr_enque_frametype	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^	unsigned int curr_enque_frametype; \/* used in enque *\/$/;"	m	class:FlowMpeg2AdaptEncap
current_config	bsdmodule/config.cc	/^static String *current_config = 0;$/;"	v	file:
current_config	linuxmodule/config.cc	/^static String *current_config = 0;$/;"	v	file:
current_drop_count	elements/local/FlowNet/common/Flow.hh	/^	int current_drop_count;$/;"	m	struct:FlowStat
current_gateway	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::current_gateway(RouteEntry &gw)$/;"	f	class:DSDVRouteTable
current_gateway	elements/grid/gridroutetable.cc	/^GridRouteTable::current_gateway(RouteEntry &entry)$/;"	f	class:GridRouteTable
current_ifs_val	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t current_ifs_val;$/;"	m	struct:e1000_hw
current_ifs_val	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t current_ifs_val;$/;"	m	struct:e1000_hw
current_ifs_val	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t current_ifs_val;$/;"	m	struct:e1000_hw
current_option	lib/clp.c	/^    int current_option;$/;"	m	struct:Clp_Internal	file:
current_option	lib/clp.c	/^    int current_option;$/;"	m	struct:Clp_ParserState	file:
current_pffw	elements/local/FlowNet/common/FlowNetGod.hh	/^	int	current_pffw;$/;"	m	class:FlowNetGod
current_pkt_count	elements/local/FlowNet/common/Flow.hh	/^	int current_pkt_count;$/;"	m	struct:FlowStat
current_short	lib/clp.c	/^    unsigned char current_short;$/;"	m	struct:Clp_Internal	file:
current_short	lib/clp.c	/^    unsigned char current_short;$/;"	m	struct:Clp_ParserState	file:
current_thread_is_running	include/click/routerthread.hh	/^RouterThread::current_thread_is_running() const$/;"	f	class:RouterThread
cursimnode	ns/nsclick.cc	/^static simclick_node_t *cursimnode = NULL;$/;"	v	file:
cursimtime_	ns/nsclick-test.cc	/^  SimTime cursimtime_;$/;"	m	class:Simulator	file:
curtime	include/click/simclick.h	/^    struct timeval curtime;$/;"	m	struct:simclick_node	typeref:struct:simclick_node::timeval
cxx	tools/lib/etraits.hh	/^    String cxx;$/;"	m	struct:ElementTraits
cxx_name	tools/click-devirtualize/specializer.hh	/^  String cxx_name;$/;"	m	struct:ElementTypeInfo
cxx_name	tools/click-devirtualize/specializer.hh	/^  String cxx_name;$/;"	m	struct:SpecializedClass
cxxc	tools/click-devirtualize/specializer.hh	/^  CxxClass *cxxc;$/;"	m	struct:SpecializedClass
cxxcompile	bsdmodule/Makefile	/^cxxcompile = $(CXXCOMPILE) $(DEPCFLAGS) $(1)$/;"	m
cxxcompile	bsdmodule/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(DEPCFLAGS) $(1)$/;"	m
cxxcompile	etc/pkg-bsdmodule.mk	/^cxxcompile = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	etc/pkg-bsdmodule.mk	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	etc/pkg-linuxmodule.mk	/^cxxcompile = $(CXXCOMPILE) $(DEPCFLAGS) $(1)$/;"	m
cxxcompile	etc/pkg-linuxmodule.mk	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(DEPCFLAGS) $(1)$/;"	m
cxxcompile	etc/pkg-userlevel.mk	/^cxxcompile = $(CXXCOMPILE) $(DEPCFLAGS) $(1)$/;"	m
cxxcompile	etc/pkg-userlevel.mk	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(DEPCFLAGS) $(1)$/;"	m
cxxcompile	linuxmodule/Makefile	/^cxxcompile = $(CXXCOMPILE) $(DEPCFLAGS) $(1)$/;"	m
cxxcompile	linuxmodule/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(DEPCFLAGS) $(1)$/;"	m
cxxcompile	ns/Makefile	/^cxxcompile = $(CXXCOMPILE) $(DEPCFLAGS) $(1)$/;"	m
cxxcompile	ns/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(DEPCFLAGS) $(1)$/;"	m
cxxcompile	tools/click-align/Makefile	/^cxxcompile = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-align/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-check/Makefile	/^cxxcompile = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-check/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-combine/Makefile	/^cxxcompile = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-combine/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-devirtualize/Makefile	/^cxxcompile = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-devirtualize/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-fastclassifier/Makefile	/^cxxcompile = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-fastclassifier/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-flatten/Makefile	/^cxxcompile = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-flatten/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-install/Makefile	/^cxxcompile = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-install/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-mkmindriver/Makefile	/^cxxcompile = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-mkmindriver/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-pretty/Makefile	/^cxxcompile = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-pretty/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-undead/Makefile	/^cxxcompile = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-undead/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-xform/Makefile	/^cxxcompile = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click-xform/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click2xml/Makefile	/^cxxcompile = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/click2xml/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/lib/Makefile	/^cxxcompile = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	tools/lib/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile	userlevel/Makefile	/^cxxcompile = $(CXXCOMPILE) $(DEPCFLAGS) $(1)$/;"	m
cxxcompile	userlevel/Makefile	/^cxxcompile = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(DEPCFLAGS) $(1)$/;"	m
cxxcompile_nodep	bsdmodule/Makefile	/^cxxcompile_nodep = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile_nodep	bsdmodule/Makefile	/^cxxcompile_nodep = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile_nodep	etc/pkg-linuxmodule.mk	/^cxxcompile_nodep = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile_nodep	etc/pkg-linuxmodule.mk	/^cxxcompile_nodep = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile_nodep	etc/pkg-userlevel.mk	/^cxxcompile_nodep = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile_nodep	etc/pkg-userlevel.mk	/^cxxcompile_nodep = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile_nodep	linuxmodule/Makefile	/^cxxcompile_nodep = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile_nodep	linuxmodule/Makefile	/^cxxcompile_nodep = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile_nodep	ns/Makefile	/^cxxcompile_nodep = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile_nodep	ns/Makefile	/^cxxcompile_nodep = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxcompile_nodep	userlevel/Makefile	/^cxxcompile_nodep = $(CXXCOMPILE) $(1)$/;"	m
cxxcompile_nodep	userlevel/Makefile	/^cxxcompile_nodep = @\/bin\/echo ' ' $(2) $< && $(CXXCOMPILE) $(1)$/;"	m
cxxlink	tools/click-align/Makefile	/^cxxlink = $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-align/Makefile	/^cxxlink = @\/bin\/echo ' ' $(2) $@ && $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-check/Makefile	/^cxxlink = $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-check/Makefile	/^cxxlink = @\/bin\/echo ' ' $(2) $@ && $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-combine/Makefile	/^cxxlink = $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-combine/Makefile	/^cxxlink = @\/bin\/echo ' ' $(2) $@ && $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-devirtualize/Makefile	/^cxxlink = $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-devirtualize/Makefile	/^cxxlink = @\/bin\/echo ' ' $(2) $@ && $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-fastclassifier/Makefile	/^cxxlink = $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-fastclassifier/Makefile	/^cxxlink = @\/bin\/echo ' ' $(2) $@ && $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-flatten/Makefile	/^cxxlink = $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-flatten/Makefile	/^cxxlink = @\/bin\/echo ' ' $(2) $@ && $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-install/Makefile	/^cxxlink = $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-install/Makefile	/^cxxlink = @\/bin\/echo ' ' $(2) $@ && $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-mkmindriver/Makefile	/^cxxlink = $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-mkmindriver/Makefile	/^cxxlink = @\/bin\/echo ' ' $(2) $@ && $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-pretty/Makefile	/^cxxlink = $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-pretty/Makefile	/^cxxlink = @\/bin\/echo ' ' $(2) $@ && $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-undead/Makefile	/^cxxlink = $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-undead/Makefile	/^cxxlink = @\/bin\/echo ' ' $(2) $@ && $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-xform/Makefile	/^cxxlink = $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click-xform/Makefile	/^cxxlink = @\/bin\/echo ' ' $(2) $@ && $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click2xml/Makefile	/^cxxlink = $(CXXLINK) $(1)$/;"	m
cxxlink	tools/click2xml/Makefile	/^cxxlink = @\/bin\/echo ' ' $(2) $@ && $(CXXLINK) $(1)$/;"	m
cxxlink	userlevel/Makefile	/^cxxlink = $(CXXLINK) $(1)$/;"	m
cxxlink	userlevel/Makefile	/^cxxlink = @\/bin\/echo ' ' $(2) $@ && $(CXXLINK) $(1)$/;"	m
cycle_runs	include/click/task.hh	/^Task::cycle_runs() const$/;"	f	class:Task
cycles	include/click/task.hh	/^Task::cycles() const$/;"	f	class:Task
d	apps/clicky/src/dstyle.hh	/^	double d;$/;"	m	union:clicky::dcss_property::__anon20
d	elements/grid/amoeba.cc	/^  double d;$/;"	m	struct:xxx	file:
d	elements/local/FlowNet/scheduler/sched_algorithms/SchedNoSchedule.hh	/^	int d;$/;"	m	class:DummyScheduleNoSchedule
d	elements/local/OpenFlow/lib/dp_act.hh	/^	int d;$/;"	m	class:Of_DpAct
d	elements/local/OpenFlow/lib/of_ext_msg.hh	/^	int d;$/;"	m	class:Of_OfExtMsg
d	include/click/clp.h	/^	double d;$/;"	m	union:Clp_Parser::__anon460
d	include/click/confparse.hh	/^	double d;$/;"	m	union:cp_value::__anon479
da	elements/grid/amoeba.cc	/^static struct xxx da[] = {$/;"	v	typeref:struct:xxx	file:
dactivity_absolute	apps/clicky/src/dstyle.hh	/^    dactivity_absolute = 0,$/;"	e	enum:clicky::__anon16
dactivity_decor	apps/clicky/src/ddecor.cc	/^dactivity_decor::dactivity_decor(PermString name, crouter *cr, delt *e,$/;"	f	class:clicky::dactivity_decor
dactivity_decor	apps/clicky/src/ddecor.hh	/^class dactivity_decor : public ddecor { public:$/;"	c	namespace:clicky
dactivity_rate	apps/clicky/src/dstyle.hh	/^    dactivity_rate = 1$/;"	e	enum:clicky::__anon16
dactivity_style	apps/clicky/src/dstyle.hh	/^struct dactivity_style : public enable_ref_ptr {$/;"	s	namespace:clicky
daddr	elements/ip/iprwpattern.hh	/^    IPAddress daddr() const {$/;"	f	class:IPRewriterPattern
daddr	include/click/ip6flowid.hh	/^  const IP6Address &daddr() const	{ return _daddr; }$/;"	f	class:IP6FlowID
daddr	include/click/ipflowid.hh	/^    IPAddress daddr() const {$/;"	f	class:IPFlowID
daddr	include/clicknet/fddi.h	/^    uint8_t	daddr[6];$/;"	m	struct:click_fddi
dael	drivers/e1000-7.x/src/e1000_hw.h	/^        uint16_t dael           :1;$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts
dagtype2linktype	elements/analysis/fromdagdump.hh	/^    static const int dagtype2linktype[];$/;"	m	class:FromDAGDump
damp_after_usec	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	int32_t damp_after_usec;$/;"	m	struct:PFSchedFWStat
damp_error_count	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	uint32_t damp_error_count;$/;"	m	struct:PFSchedFWStat
damp_error_usec	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	int32_t damp_error_usec;$/;"	m	struct:PFSchedFWStat
damp_sleep_count	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	uint32_t damp_sleep_count;$/;"	m	struct:PFSchedFWStat
data	apps/clicky/src/permstr.hh	/^	char data[2];$/;"	m	struct:PermString::Doodad
data	bsdmodule/clickfs_tree.hh	/^    } data;$/;"	m	struct:clickfs_dirent	typeref:union:clickfs_dirent::__anon34
data	drivers/e1000-4.x/src/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_context_desc::__anon60
data	drivers/e1000-4.x/src/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_data_desc::__anon62
data	drivers/e1000-4.x/src/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_data_desc::__anon64
data	drivers/e1000-4.x/src/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_tx_desc::__anon52
data	drivers/e1000-4.x/src/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_tx_desc::__anon54
data	drivers/e1000-4.x/src/e1000_proc.c	/^	void *data;                             \/* attribute data *\/$/;"	m	struct:proc_list	file:
data	drivers/e1000-5.x/src/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_context_desc::__anon157
data	drivers/e1000-5.x/src/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_data_desc::__anon159
data	drivers/e1000-5.x/src/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_data_desc::__anon161
data	drivers/e1000-5.x/src/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_tx_desc::__anon149
data	drivers/e1000-5.x/src/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_tx_desc::__anon151
data	drivers/e1000-5.x/src/kcompat.h	/^	u8	data[0];$/;"	m	struct:_kc_ethtool_regs
data	drivers/e1000-5.x/src/kcompat.h	/^	u8      data[0];$/;"	m	struct:ethtool_gstrings
data	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t data;$/;"	m	struct:ethtool_value
data	drivers/e1000-5.x/src/kcompat.h	/^	uint64_t data[0];$/;"	m	struct:ethtool_stats
data	drivers/e1000-5.x/src/kcompat.h	/^	uint64_t data[0];$/;"	m	struct:ethtool_test
data	drivers/e1000-5.x/src/kcompat.h	/^	uint8_t	 data[0];$/;"	m	struct:ethtool_eeprom
data	drivers/e1000-7.x/src/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_context_desc::__anon114
data	drivers/e1000-7.x/src/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_data_desc::__anon116
data	drivers/e1000-7.x/src/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_data_desc::__anon118
data	drivers/e1000-7.x/src/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_tx_desc::__anon106
data	drivers/e1000-7.x/src/e1000_hw.h	/^        uint32_t data;$/;"	m	union:e1000_tx_desc::__anon108
data	drivers/e1000-7.x/src/kcompat.h	/^	u8	data[0];$/;"	m	struct:_kc_ethtool_regs
data	drivers/e1000-7.x/src/kcompat.h	/^	u8      data[0];$/;"	m	struct:ethtool_gstrings
data	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t data;$/;"	m	struct:ethtool_value
data	drivers/e1000-7.x/src/kcompat.h	/^	uint64_t data[0];$/;"	m	struct:ethtool_stats
data	drivers/e1000-7.x/src/kcompat.h	/^	uint64_t data[0];$/;"	m	struct:ethtool_test
data	drivers/e1000-7.x/src/kcompat.h	/^	uint8_t	 data[0];$/;"	m	struct:ethtool_eeprom
data	elements/analysis/storeudptimeseqrecord.hh	/^        uint32_t  data[4];$/;"	m	struct:StoreUDPTimeSeqRecord::PData
data	elements/grid/airoinfo.cc	/^  unsigned char *data;		\/\/ d-data$/;"	m	struct:aironet_ioctl_t	file:
data	elements/ipsec/sha1_impl.hh	/^  unsigned long data[SHA_LBLOCK];$/;"	m	struct:SHAstate_st
data	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t data[0];          \/* Variable-length data.  Interpreted based$/;"	m	struct:ofp_error_msg
data	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t data[0];        \/* Ethernet frame, halfway through 32-bit word,$/;"	m	struct:ofp_packet_in
data	elements/local/OpenFlow/lib/ofpbuf.hh	/^    void *data;                 \/* First byte actually in use. *\/$/;"	m	struct:ofpbuf
data	elements/wifi/packetstore.hh	/^	  char data[80];$/;"	m	class:PacketStore::store
data	include/click/archive.hh	/^    String data;		\/\/\/< Member contents$/;"	m	struct:ArchiveElement
data	include/click/etheraddress.hh	/^    inline const unsigned char *data() const {$/;"	f	class:EtherAddress
data	include/click/etheraddress.hh	/^    inline unsigned char *data() {$/;"	f	class:EtherAddress
data	include/click/ip6address.hh	/^    const unsigned char *data() const		{ return &_addr.s6_addr[0]; }$/;"	f	class:IP6Address
data	include/click/ip6address.hh	/^    unsigned char *data()			{ return &_addr.s6_addr[0]; }$/;"	f	class:IP6Address
data	include/click/ipaddress.hh	/^IPAddress::data() const$/;"	f	class:IPAddress
data	include/click/ipaddress.hh	/^IPAddress::data()$/;"	f	class:IPAddress
data	include/click/packet.hh	/^Packet::data() const$/;"	f	class:Packet
data	include/click/packet.hh	/^WritablePacket::data() const$/;"	f	class:WritablePacket
data	include/click/straccum.hh	/^    inline char *data() {$/;"	f	class:StringAccum
data	include/click/straccum.hh	/^    inline const char *data() const {$/;"	f	class:StringAccum
data	include/click/string.hh	/^	const char *data;$/;"	m	struct:String::rep_t
data	include/click/string.hh	/^    inline const char *data() const {$/;"	f	class:String
data	include/clicknet/wifi.h	/^  uint32_t data;$/;"	m	struct:__anon497
data	ns/CUT_BinHeap.h	/^      Data data;$/;"	m	class:CUT_BinHeap::Node
data	ns/CUT_BinHeap.h	/^  Data&  data(Pix xx) const {$/;"	f	class:CUT_BinHeap
data1	elements/grid/grid.hh	/^    uint32_t data1;$/;"	m	struct:grid_route_reply
data16	include/click/ip6address.hh	/^    const uint16_t *data16() const		{ return &_addr.s6_addr16[0]; }$/;"	f	class:IP6Address
data16	include/click/ip6address.hh	/^    uint16_t *data16()				{ return &_addr.s6_addr16[0]; }$/;"	f	class:IP6Address
data2	elements/grid/grid.hh	/^    uint32_t data2;$/;"	m	struct:grid_route_reply
data32	include/click/ip6address.hh	/^    const uint32_t *data32() const		{ return &_addr.s6_addr32[0]; }$/;"	f	class:IP6Address
data32	include/click/ip6address.hh	/^    uint32_t *data32()				{ return &_addr.s6_addr32[0]; }$/;"	f	class:IP6Address
data_	ns/nsclick-test.cc	/^    unsigned char* data_;$/;"	m	class:TestClickSimulator::PacketEvent	file:
data_fail_count	elements/wifi/athdesc.h	/^	u_int32_t	data_fail_count:4;$/;"	m	struct:ar5212_desc
data_len	elements/wifi/athdesc.h	/^	u_int32_t data_len:12;$/;"	m	struct:ar5212_rx_status
data_packet	elements/linuxmodule/fasttcpflows.hh	/^    Packet *data_packet;$/;"	m	struct:FastTCPFlows::flow_t
data_shared	include/click/string.hh	/^    inline bool data_shared() const {$/;"	f	class:String
data_word_bits	include/click/bitvector.hh	/^	data_word_bits = 32$/;"	e	enum:Bitvector::__anon465
data_word_type	include/click/bitvector.hh	/^    typedef uint32_t data_word_type;$/;"	t	class:Bitvector
data_words	include/click/bitvector.hh	/^    const data_word_type *data_words() const {$/;"	f	class:Bitvector
data_words	include/click/bitvector.hh	/^    data_word_type *data_words() {$/;"	f	class:Bitvector
datadir	Makefile	/^datadir = \/usr\/local\/share$/;"	m
datadir	doc/Makefile	/^datadir = \/usr\/local\/share$/;"	m
datalink	elements/userlevel/ipflowrawsockets.hh	/^	int datalink()			{ return _datalink; }$/;"	f	class:IPFlowRawSockets::Flow
datapath	elements/local/OpenFlow/datapath.hh	/^	class Datapath *datapath;$/;"	m	struct:click_port	typeref:class:click_port::Datapath
datapath_id	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t datapath_id;   \/* Datapath unique ID.  The lower 48-bits are for$/;"	m	struct:ofp_switch_features
datarootdir	Makefile	/^datarootdir = \/usr\/local\/share$/;"	m
datarootdir	doc/Makefile	/^datarootdir = \/usr\/local\/share$/;"	m
date	include/click/archive.hh	/^    int date;			\/\/\/< Decimal seconds since the epoch (1\/1\/1970)$/;"	m	struct:ArchiveElement
db2type	elements/ip/ipfilter.cc	/^static const uint32_t db2type[] = {$/;"	v	file:
dbg	apps/ClickController/Util.java	/^    public static void dbg(String msg) { dbg(1, msg); }$/;"	m	class:Util
dbg	apps/ClickController/Util.java	/^    public static void dbg(int level, String msg) {$/;"	m	class:Util
dborder_dashed	apps/clicky/src/dstyle.hh	/^    dborder_dashed = 3,$/;"	e	enum:clicky::__anon12
dborder_dotted	apps/clicky/src/dstyle.hh	/^    dborder_dotted = 4$/;"	e	enum:clicky::__anon12
dborder_inset	apps/clicky/src/dstyle.hh	/^    dborder_inset = 2,$/;"	e	enum:clicky::__anon12
dborder_none	apps/clicky/src/dstyle.hh	/^    dborder_none = 0,$/;"	e	enum:clicky::__anon12
dborder_solid	apps/clicky/src/dstyle.hh	/^    dborder_solid = 1,$/;"	e	enum:clicky::__anon12
dbs	elements/ip/ipfieldinfo.cc	/^static NameDB *dbs[5];$/;"	v	file:
dbs	elements/ip/ipfilter.cc	/^static NameDB *dbs[2];$/;"	v	file:
dbs	elements/ip/ipnameinfo.cc	/^static NameDB *dbs[13];$/;"	v	file:
dbs	elements/standard/script.cc	/^static NameDB *dbs[2];$/;"	v	file:
dc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t dc;$/;"	m	struct:e1000_hw_stats
dc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t dc;$/;"	m	struct:e1000_hw_stats
dc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t dc;$/;"	m	struct:e1000_hw_stats
dcgettext	apps/clicky/src/support.h	28;"	d
dconn	apps/clicky/src/dwidget.hh	/^class dconn : public dwidget { public:$/;"	c	namespace:clicky
dconn	apps/clicky/src/dwidget.hh	/^inline dconn::dconn(delt *fe, int fp, delt *te, int tp)$/;"	f	class:clicky::dconn
dcontext	apps/clicky/src/dwidget.cc	/^dcontext::dcontext(crouter *cr_, PangoLayout *pl_, cairo_t *cairo_,$/;"	f	class:clicky::dcontext
dcontext	apps/clicky/src/dwidget.hh	/^struct dcontext {$/;"	s	namespace:clicky
dcss	apps/clicky/src/dstyle.cc	/^dcss::dcss()$/;"	f	class:clicky::dcss
dcss	apps/clicky/src/dstyle.hh	/^class dcss { public:$/;"	c	namespace:clicky
dcss_property	apps/clicky/src/dstyle.hh	/^    dcss_property(PermString name, const String &vstr)$/;"	f	struct:clicky::dcss_property
dcss_property	apps/clicky/src/dstyle.hh	/^struct dcss_property {$/;"	s	namespace:clicky
dcss_propmatch	apps/clicky/src/dstyle.hh	/^struct dcss_propmatch {$/;"	s	namespace:clicky
dcss_selector	apps/clicky/src/dstyle.hh	/^    dcss_selector()$/;"	f	class:clicky::dcss_selector
dcss_selector	apps/clicky/src/dstyle.hh	/^class dcss_selector { public:$/;"	c	namespace:clicky
dcss_set	apps/clicky/src/dstyle.cc	/^dcss_set::dcss_set(const String &text, const String &media)$/;"	f	class:clicky::dcss_set
dcss_set	apps/clicky/src/dstyle.cc	/^dcss_set::dcss_set(dcss_set *below)$/;"	f	class:clicky::dcss_set
dcss_set	apps/clicky/src/dstyle.hh	/^class dcss_set { public:$/;"	c	namespace:clicky
dcsspp_compare	apps/clicky/src/dstyle.cc	/^static bool dcsspp_compare(dcss *a, dcss *b)$/;"	f	namespace:clicky
ddecor	apps/clicky/src/ddecor.hh	/^    ddecor(ddecor *next)$/;"	f	class:clicky::ddecor
ddecor	apps/clicky/src/ddecor.hh	/^class ddecor { public:$/;"	c	namespace:clicky
deactivate	tools/click-pretty/click-pretty.cc	/^deactivate(OutputItem &item, int &first_active, int ipos)$/;"	f	file:
dead	tools/lib/elementt.hh	/^    bool dead() const			{ return !_type; }$/;"	f	struct:ElementT
dead	tools/lib/elementt.hh	/^    bool dead() const			{ return _end[end_from].dead(); }$/;"	f	class:ConnectionT
dead	tools/lib/elementt.hh	/^    bool dead() const			{ return element == 0; }$/;"	f	struct:PortT
deadline	elements/local/OpenFlow/lib/timeval.cc	/^static time_t deadline = TIME_MIN;$/;"	v	file:
dealloc_tun	elements/userlevel/fromhost.cc	/^FromHost::dealloc_tun()$/;"	f	class:FromHost
deallocate	include/click/hashallocator.hh	/^inline void HashAllocator::deallocate(void *p)$/;"	f	class:HashAllocator
deanonymize_element_name	lib/lexer.cc	/^Lexer::deanonymize_element_name(const String &ename, int eidx)$/;"	f	class:Lexer
debug	drivers/e1000-5.x/src/e1000_main.c	/^static int debug = NETIF_MSG_DRV | NETIF_MSG_PROBE;$/;"	v	file:
debug	drivers/e1000-7.x/src/e1000_main.c	/^static int debug = NETIF_MSG_DRV | NETIF_MSG_PROBE;$/;"	v	file:
debug	lib/error.cc	/^ErrorHandler::debug(const char *fmt, ...)$/;"	f	class:ErrorHandler
debug_code	elements/local/FlowNet/common/FlowNetGod.cc	/^int FlowNetGod::debug_code(int level)$/;"	f	class:FlowNetGod
debug_dump	elements/ip/ipreassembler.cc	/^IPReassembler::debug_dump(Element *e, void *)$/;"	f	class:IPReassembler
debug_level	elements/local/FlowNet/common/FlowNetGod.hh	/^	int	debug_level;$/;"	m	class:FlowNetGod
debug_message	elements/local/FlowNet/common/FlowNetGod.cc	/^void FlowNetGod::debug_message(int level, const char* fmt, ...)$/;"	f	class:FlowNetGod
debug_print_pidxes	tools/lib/processingt.cc	/^ProcessingT::debug_print_pidxes(const Bitvector &ports, bool isoutput,$/;"	f	class:ProcessingT
dec_and_test	include/click/atomic.hh	/^atomic_uint32_t::dec_and_test()$/;"	f	class:atomic_uint32_t
dec_and_test	include/click/atomic.hh	/^atomic_uint32_t::dec_and_test(volatile uint32_t &x)$/;"	f	class:atomic_uint32_t
decapsulate_bpadapt	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^WritablePacket* FlowMpeg2AdaptDecap::decapsulate_bpadapt( Packet* p )$/;"	f	class:FlowMpeg2AdaptDecap
decapsule	apps/clicky/src/permstr.hh	/^inline PermString PermString::decapsule(Capsule c)$/;"	f	class:PermString
decay	apps/clicky/src/dstyle.hh	/^    double decay;$/;"	m	struct:clicky::dactivity_style
decl_lexeme	tools/lib/lexert.cc	/^    Lexeme decl_lexeme;$/;"	m	struct:__anon534::ElementState	file:
decl_pos2	tools/lib/lexert.cc	/^    const char *decl_pos2;$/;"	m	struct:__anon534::ElementState	file:
decl_type	lib/lexer.cc	/^    int decl_type;$/;"	m	struct:__anon511::ElementState	file:
decl_type	tools/lib/lexert.cc	/^    ElementClassT *decl_type;$/;"	m	struct:__anon534::ElementState	file:
declaration	elements/userlevel/fromdump.cc	/^FromDump::declaration() const$/;"	f	class:FromDump
declaration	lib/element.cc	/^Element::declaration() const$/;"	f	class:Element
declaration	tools/lib/elementt.hh	/^ElementT::declaration() const$/;"	f	class:ElementT
declaration_scope	tools/lib/eclasst.cc	/^ElementClassT::declaration_scope() const$/;"	f	class:ElementClassT
declaration_scope	tools/lib/eclasst.cc	/^SynonymElementClassT::declaration_scope() const$/;"	f	class:SynonymElementClassT
declaration_scope	tools/lib/routert.hh	/^    RouterT *declaration_scope() const	{ return _declaration_scope; }$/;"	f	class:RouterT
declared_type	tools/lib/routert.cc	/^RouterT::declared_type(const String &name, int scope_cookie) const$/;"	f	class:RouterT
declared_type	tools/lib/routert.hh	/^RouterT::declared_type(const String &name) const$/;"	f	class:RouterT
decode	elements/ip/rfc2507d.cc	/^RFC2507d::decode(const u_char * &in, unsigned int &x)$/;"	f	class:RFC2507d
decode	elements/ip/rfc2507d.cc	/^RFC2507d::decode(const u_char * &in, unsigned short &x)$/;"	f	class:RFC2507d
decode_utf8	lib/clp.c	/^decode_utf8(const char *s, char **cp)$/;"	f	file:
decomperr	elements/wifi/athdesc.h	/^	u_int32_t decomperr:2;$/;"	m	struct:ar5212_rx_status
decorate	lib/error.cc	/^ContextErrorHandler::decorate(const String &str)$/;"	f	class:ContextErrorHandler
decorate	lib/error.cc	/^ErrorHandler::decorate(const String &str)$/;"	f	class:ErrorHandler
decorate	lib/error.cc	/^ErrorVeneer::decorate(const String &str)$/;"	f	class:ErrorVeneer
decorate	lib/error.cc	/^LandmarkErrorHandler::decorate(const String &str)$/;"	f	class:LandmarkErrorHandler
decorate	lib/error.cc	/^PrefixErrorHandler::decorate(const String &str)$/;"	f	class:PrefixErrorHandler
decorate	lib/router.cc	/^    String decorate(const String &str) {$/;"	f	class:Router::RouterContextErrh
decorated_input_processing_letter	tools/lib/processingt.hh	/^ProcessingT::decorated_input_processing_letter(const PortT &h) const$/;"	f	class:ProcessingT
decorated_landmark	tools/lib/elementt.hh	/^    String decorated_landmark() const	{ return _landmark.decorated_str(); }$/;"	f	class:ConnectionT
decorated_landmark	tools/lib/elementt.hh	/^    String decorated_landmark() const	{ return _landmark.decorated_str(); }$/;"	f	struct:ElementT
decorated_landmark	tools/lib/routert.hh	/^    String decorated_landmark() const	{ return _type_landmark.decorated_str(); }$/;"	f	class:RouterT
decorated_output_processing_letter	tools/lib/processingt.hh	/^ProcessingT::decorated_output_processing_letter(const PortT &h) const$/;"	f	class:ProcessingT
decorated_processing_code	tools/lib/processingt.cc	/^ProcessingT::decorated_processing_code(const ElementT *e) const$/;"	f	class:ProcessingT
decorated_processing_letters	tools/lib/processingt.cc	/^const char ProcessingT::decorated_processing_letters[] = "ahlXaHLX";$/;"	m	class:ProcessingT	file:
decorated_processing_letters	tools/lib/processingt.hh	/^    static const char decorated_processing_letters[];$/;"	m	class:ProcessingT
decorated_str	tools/lib/landmarkt.hh	/^LandmarkT::decorated_str() const$/;"	f	class:LandmarkT
decorations	apps/clicky/src/dstyle.hh	/^    String decorations;$/;"	m	struct:clicky::delt_style
decr_age	elements/grid/updateroutes.hh	/^  static unsigned int decr_age(unsigned int age, unsigned int decr)$/;"	f	class:UpdateGridRoutes
decr_ttl	elements/grid/dsdvroutetable.hh	/^  static unsigned int decr_ttl(unsigned int ttl, unsigned int decr)$/;"	f	class:DSDVRouteTable
decr_ttl	elements/grid/gridroutetable.hh	/^  static unsigned int decr_ttl(unsigned int ttl, unsigned int decr)$/;"	f	class:GridRouteTable
decrease_factor	elements/local/FlowNet/common/FlowNetGod.hh	/^	double decrease_factor;$/;"	m	struct:paramset_sourceproxytable
decryptcrc	elements/wifi/athdesc.h	/^	u_int32_t decryptcrc:1;$/;"	m	struct:ar5212_rx_status
dedisp_children_visible	apps/clicky/src/dstyle.hh	/^static inline bool dedisp_children_visible(int dedisp) {$/;"	f	namespace:clicky
dedisp_closed	apps/clicky/src/dstyle.hh	/^    dedisp_closed = 2,$/;"	e	enum:clicky::__anon10
dedisp_expanded	apps/clicky/src/dstyle.hh	/^    dedisp_expanded = -2,$/;"	e	enum:clicky::__anon10
dedisp_none	apps/clicky/src/dstyle.hh	/^    dedisp_none = 0,$/;"	e	enum:clicky::__anon10
dedisp_normal	apps/clicky/src/dstyle.hh	/^    dedisp_normal = 1,$/;"	e	enum:clicky::__anon10
dedisp_passthrough	apps/clicky/src/dstyle.hh	/^    dedisp_passthrough = -1,$/;"	e	enum:clicky::__anon10
dedisp_placeholder	apps/clicky/src/dstyle.hh	/^    dedisp_placeholder = -99$/;"	e	enum:clicky::__anon10
dedisp_visible	apps/clicky/src/dstyle.hh	/^static inline bool dedisp_visible(int dedisp) {$/;"	f	namespace:clicky
def	drivers/e1000-4.x/src/e1000_param.c	/^	int  def;$/;"	m	struct:e1000_option	file:
def	drivers/e1000-5.x/src/e1000_param.c	/^	int  def;$/;"	m	struct:e1000_option	file:
def	drivers/e1000-7.x/src/e1000_param.c	/^	int  def;$/;"	m	struct:e1000_option	file:
def_index	tools/lib/etraits.hh	/^    int def_index;$/;"	m	struct:ElementTraits
default_aligner	tools/click-align/alignclass.cc	/^default_aligner()$/;"	f
default_base_type_factory	tools/lib/eclasst.cc	/^static ElementClassT *default_base_type_factory(const String &name)$/;"	f	file:
default_capacity	elements/linuxmodule/touserdevice.hh	/^    enum { default_capacity = 64 };$/;"	e	enum:ToUserDevice::__anon306
default_css	apps/clicky/src/dstyle.cc	/^const char default_css[] = "port.input {\\n\\$/;"	m	namespace:clicky	file:
default_destination	elements/ethernet/etherpausesource.cc	/^static const unsigned char default_destination[6] = {$/;"	v	file:
default_gc_interval	elements/ip/iprewriterbase.hh	/^	default_gc_interval = 60 * 15 \/\/ 15 minutes$/;"	e	enum:IPRewriterBase::__anon330
default_graph_template	tools/click-pretty/click-pretty.cc	/^static const char *default_graph_template = "\\$/;"	v	file:
default_guarantee	elements/ip/iprewriterbase.hh	/^	default_guarantee = 5,	   \/\/ 5 seconds$/;"	e	enum:IPRewriterBase::__anon330
default_handler	include/click/error.hh	/^    static ErrorHandler *default_handler() {$/;"	f	class:ErrorHandler
default_headroom	include/click/packet.hh	/^	default_headroom = 28,		\/\/\/< Default packet headroom() for$/;"	e	enum:Packet::__anon461
default_html_template	tools/click-pretty/click-pretty.cc	/^static const char *default_html_template = "\\$/;"	v	file:
default_ip_flowid	elements/analysis/ipsumdumpinfo.hh	/^    const IPFlowID *default_ip_flowid;$/;"	m	struct:IPSummaryDump::PacketOdesc
default_ip_p	elements/analysis/ipsumdumpinfo.hh	/^    int default_ip_p;$/;"	m	struct:IPSummaryDump::PacketOdesc
default_map	tools/lib/elementmap.hh	/^    static ElementMap* default_map()		{ return the_element_map; }$/;"	f	class:ElementMap
default_parsefunc	lib/confparse.cc	/^default_parsefunc(cp_value *v, const String &arg,$/;"	f	file:
default_pattern	elements/local/OpenFlow/lib/vlog.cc	/^    bool default_pattern;       \/* Whether current pattern is the default. *\/$/;"	m	struct:facility	file:
default_refreshable	apps/clicky/src/hvalues.hh	/^    static bool default_refreshable(int flags) {$/;"	f	class:clicky::handler_value
default_set	apps/clicky/src/dstyle.cc	/^dcss_set *dcss_set::default_set(const String &media)$/;"	f	class:clicky::dcss_set
default_snaplen	elements/userlevel/fromdevice.hh	/^    enum { default_snaplen = 2046 };$/;"	e	enum:FromDevice::__anon195
default_storefunc	lib/confparse.cc	/^default_storefunc(cp_value *v  CP_CONTEXT)$/;"	f	file:
default_timeout	elements/ip/iprewriterbase.hh	/^	default_timeout = 300,	   \/\/ 5 minutes$/;"	e	enum:IPRewriterBase::__anon330
default_value	include/click/hashtable.hh	/^    inline const mapped_type &default_value() const {$/;"	f	class:HashTable
deficit	elements/standard/drr.hh	/^	unsigned deficit;$/;"	m	struct:DRRSched::portinfo
define	include/click/nameinfo.hh	/^NameInfo::define(uint32_t type, const Element *e, const String &name, const void *value, size_t vsize)$/;"	f	class:NameInfo
define	lib/lexer.cc	/^Lexer::Compound::define(const String &name, const String &value, bool isformal, Lexer *l)$/;"	f	class:Lexer::Compound
define	lib/nameinfo.cc	/^DynamicNameDB::define(const String& name, const void* value, size_t vsize)$/;"	f	class:DynamicNameDB
define	lib/nameinfo.cc	/^NameDB::define(const String &, const void *, size_t)$/;"	f	class:NameDB
define	lib/variableenv.cc	/^VariableEnvironment::define(const String &name, const String &value, bool override)$/;"	f	class:VariableEnvironment
define	tools/lib/routert.hh	/^RouterT::define(const String &name, const String &value)$/;"	f	class:RouterT
define_int	include/click/nameinfo.hh	/^NameDB::define_int(const String &name, const int32_t value)$/;"	f	class:NameDB
define_int	include/click/nameinfo.hh	/^NameInfo::define_int(uint32_t type, const Element *e, const String &name, const int32_t value)$/;"	f	class:NameInfo
defines	lib/variableenv.cc	/^VariableEnvironment::defines(const String &name) const$/;"	f	class:VariableEnvironment
defines	tools/lib/routert.hh	/^RouterT::defines(const String &name) const$/;"	f	class:RouterT
definition_index	tools/lib/elementmap.hh	/^    int definition_index(int i) const		{ return _e[i].def_index; }$/;"	f	class:ElementMap
definitions	tools/click-pretty/click-pretty.cc	/^static HashTable<String, String> definitions;$/;"	v	file:
defun	tools/click-devirtualize/cxxclass.cc	/^CxxClass::defun(const CxxFunction &fn)$/;"	f	class:CxxClass
deg_border_bot	apps/clicky/src/dwidget.hh	/^    deg_border_bot = 2,$/;"	e	enum:clicky::__anon26
deg_border_lft	apps/clicky/src/dwidget.hh	/^    deg_border_lft = 3,$/;"	e	enum:clicky::__anon26
deg_border_rt	apps/clicky/src/dwidget.hh	/^    deg_border_rt = 6,$/;"	e	enum:clicky::__anon26
deg_border_top	apps/clicky/src/dwidget.hh	/^    deg_border_top = 1,$/;"	e	enum:clicky::__anon26
deg_corner_llft	apps/clicky/src/dwidget.hh	/^    deg_corner_llft = deg_border_bot + deg_border_lft,$/;"	e	enum:clicky::__anon26
deg_corner_lrt	apps/clicky/src/dwidget.hh	/^    deg_corner_lrt = deg_border_bot + deg_border_rt$/;"	e	enum:clicky::__anon26
deg_corner_ulft	apps/clicky/src/dwidget.hh	/^    deg_corner_ulft = deg_border_top + deg_border_lft,$/;"	e	enum:clicky::__anon26
deg_corner_urt	apps/clicky/src/dwidget.hh	/^    deg_corner_urt = deg_border_top + deg_border_rt,$/;"	e	enum:clicky::__anon26
deg_element	apps/clicky/src/dwidget.hh	/^    deg_element = 0,$/;"	e	enum:clicky::__anon26
deg_none	apps/clicky/src/dwidget.hh	/^    deg_none = -1,$/;"	e	enum:clicky::__anon26
del	lib/ip6table.cc	/^IP6Table::del(const IP6Address &dst, const IP6Address &mask)$/;"	f	class:IP6Table
del	lib/iptable.cc	/^IPTable::del(IPAddress dst, IPAddress mask)$/;"	f	class:IPTable
del_timer_sync	drivers/e1000-4.x/src/kcompat.h	281;"	d
delay_by_bandwidth	elements/standard/linkunqueue.cc	/^LinkUnqueue::delay_by_bandwidth(Packet *p, const Timestamp &tv) const$/;"	f	class:LinkUnqueue
delay_usec	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t delay_usec;$/;"	m	struct:e1000_eeprom_info
delay_usec	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t delay_usec;$/;"	m	struct:e1000_eeprom_info
delete	include/click/cxxprotect.h	4;"	d
delete	include/click/cxxunprotect.h	4;"	d
deleteBuffer	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^void FlowMpeg2AdaptDecap::deleteBuffer( FrameReceivingBuffer* buffer)$/;"	f	class:FlowMpeg2AdaptDecap
delete_entry	elements/grid/dsrarptable.cc	/^DSRArpTable::delete_entry(IPAddress ip)$/;"	f	class:DSRArpTable
delete_flowinfo	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::delete_flowinfo(const HostPair &hp, FlowInfo *finfo, bool really_delete)$/;"	f	class:AggregateIPFlows
delete_memo	lib/string.cc	/^String::delete_memo(memo_t *memo)$/;"	f	class:String
delete_strict	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t delete_strict;$/;"	m	struct:ofpstat::__anon247
delivery_rate_table	elements/grid/delivery_rate_table.hh	/^static const unsigned char delivery_rate_table[][21][161] = {$/;"	v
delt	apps/clicky/src/dwidget.hh	/^    delt(delt *parent = 0, int z_index = 0)$/;"	f	class:clicky::delt
delt	apps/clicky/src/dwidget.hh	/^class delt : public dwidget { public:$/;"	c	namespace:clicky
delt_conn	apps/clicky/src/dwidget.hh	/^	delt_conn(delt *f, int fp, delt *t, int tp)$/;"	f	struct:clicky::delt::delt_conn
delt_conn	apps/clicky/src/dwidget.hh	/^    struct delt_conn {$/;"	s	class:clicky::delt
delt_size_style	apps/clicky/src/dstyle.hh	/^struct delt_size_style : public enable_ref_ptr {$/;"	s	namespace:clicky
delt_style	apps/clicky/src/dstyle.hh	/^struct delt_style : public enable_ref_ptr {$/;"	s	namespace:clicky
delta	elements/grid/locfromfile.hh	/^  struct delta {$/;"	s	class:LocFromFile
deprecated	include/click/args.hh	/^    static constexpr int deprecated = 4; \/\/\/< read flag for deprecated arguments$/;"	m	struct:Args
depth	include/click/variableenv.hh	/^    int depth() const			{ return _depth; }$/;"	f	class:VariableEnvironment
depth	lib/lexer.cc	/^  int depth() const			{ return _scope.depth(); }$/;"	f	class:Lexer::Compound
deq	elements/linuxmodule/cpuqueue.cc	/^CPUQueue::deq(int n)$/;"	f	class:CPUQueue
deq	elements/standard/simplequeue.hh	/^SimpleQueue::deq()$/;"	f	class:SimpleQueue
deq	linuxmodule/skbmgr.cc	/^RecycledSkbBucket::deq()$/;"	f	class:RecycledSkbBucket
deq	ns/CUT_BinHeap.h	/^  void deq() {$/;"	f	class:CUT_BinHeap
deque	elements/local/FlowNet/common/Flow.cc	/^Packet* Flow::deque()$/;"	f	class:Flow
deque	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.cc	/^Packet* FrameReceivingBuffer::deque() $/;"	f	class:FrameReceivingBuffer
deque_and_send	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^int FlowMpeg2AdaptDecap::deque_and_send( const Element* e, papmo* papmo )$/;"	f	class:FlowMpeg2AdaptDecap
deque_and_send	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^int FlowMpeg2AdaptEncap::deque_and_send(const Element* e, papmo* papmo)$/;"	f	class:FlowMpeg2AdaptEncap
deref	include/click/string.hh	/^    inline void deref() const {$/;"	f	class:String
des_SPtrans	elements/ipsec/des.cc	/^static unsigned long des_SPtrans[8][64]={$/;"	v	file:
des_cblock	elements/ipsec/des.hh	/^typedef unsigned char des_cblock[8];$/;"	t
des_ecb_encrypt	elements/ipsec/des.cc	/^Des::des_ecb_encrypt(des_cblock *input,des_cblock *output,$/;"	f	class:Des
des_encrypt	elements/ipsec/des.cc	/^Des::des_encrypt(unsigned long *input,unsigned long *output,$/;"	f	class:Des
des_key_schedule	elements/ipsec/des.hh	/^} des_key_schedule[16];$/;"	t	typeref:struct:des_ks_struct
des_ks_struct	elements/ipsec/des.hh	/^typedef struct des_ks_struct {$/;"	s
des_set_key	elements/ipsec/des.cc	/^Des::des_set_key(des_cblock *key,des_key_schedule schedule)$/;"	f	class:Des
des_skb	elements/ipsec/des.cc	/^static unsigned long des_skb[8][64]={$/;"	v	file:
desc	drivers/e1000-4.x/src/e1000.h	/^	void *desc;$/;"	m	struct:e1000_desc_ring
desc	drivers/e1000-5.x/src/e1000.h	/^	void *desc;$/;"	m	struct:e1000_desc_ring
desc	drivers/e1000-7.x/src/e1000.h	/^	void *desc;$/;"	m	struct:e1000_rx_ring
desc	drivers/e1000-7.x/src/e1000.h	/^	void *desc;$/;"	m	struct:e1000_tx_ring
desc	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_phy_port desc;$/;"	m	struct:ofp_port_status	typeref:struct:ofp_port_status::ofp_phy_port
desc_stats_dump	elements/local/OpenFlow/datapath.cc	/^static int desc_stats_dump(class Datapath *dp UNUSED, void *state UNUSED,$/;"	f	file:
description	include/click/confparse.hh	/^    const char* description;$/;"	m	struct:cp_argtype
designated_bridge	elements/local/OpenFlow/lib/stp.cc	/^    stp_identifier designated_bridge; \/* 8.5.5.6. *\/$/;"	m	struct:stp_port	file:
designated_cost	elements/local/OpenFlow/lib/stp.cc	/^    int designated_cost;            \/* 8.5.5.5: Path cost to root on port. *\/$/;"	m	struct:stp_port	file:
designated_port	elements/local/OpenFlow/lib/stp.cc	/^    int designated_port;            \/* 8.5.5.7: Port to send config msgs on. *\/$/;"	m	struct:stp_port	file:
designated_root	elements/local/OpenFlow/lib/stp.cc	/^    stp_identifier designated_root; \/* 8.5.3.1: Bridge believed to be root. *\/$/;"	m	struct:stp	file:
designated_root	elements/local/OpenFlow/lib/stp.cc	/^    stp_identifier designated_root; \/* 8.5.5.4. *\/$/;"	m	struct:stp_port	file:
desplit_inputs	apps/clicky/src/dwidget.hh	/^    desplit_inputs = 1$/;"	e	enum:clicky::__anon24
desplit_outputs	apps/clicky/src/dwidget.hh	/^    desplit_outputs = 0,$/;"	e	enum:clicky::__anon24
dest_eth	elements/grid/dsdvroutetable.hh	/^    class EtherAddress  dest_eth;              \/\/ hardware address of destination;$/;"	m	class:DSDVRouteTable::RTEntry	typeref:class:DSDVRouteTable::RTEntry::EtherAddress
dest_eth	elements/grid/gridroutetable.hh	/^    EtherAddress dest_eth; \/\/ Eth of this destination; may be all 0s if we don't hear any ads...$/;"	m	class:GridRouteTable::RTEntry
dest_ip	elements/grid/gridgenericrt.hh	/^    class IPAddress      dest_ip;      \/\/ IP address of this destination$/;"	m	struct:GridGenericRouteTable::RouteEntry	typeref:class:GridGenericRouteTable::RouteEntry::IPAddress
dest_ip	elements/grid/gridroutetable.hh	/^    IPAddress dest_ip; \/\/ IP address of this destination$/;"	m	class:GridRouteTable::RTEntry
dest_loc	elements/grid/gridgenericrt.hh	/^    class grid_location  dest_loc;     \/\/ location of dest, as contained in its route ads$/;"	m	struct:GridGenericRouteTable::RouteEntry	typeref:class:GridGenericRouteTable::RouteEntry::grid_location
dest_loc_good	elements/grid/lookupgeogridroute.cc	/^LookupGeographicGridRoute::dest_loc_good(const Packet *p) const$/;"	f	class:LookupGeographicGridRoute
destroy	apps/clicky/src/wmain.cc	/^static void destroy(gpointer data) {$/;"	f	file:
destroy	elements/ip/iprwmapping.cc	/^IPRewriterFlow::destroy(IPRewriterHeap *heap)$/;"	f	class:IPRewriterFlow
destroy	elements/local/FlowNet/common/Flow.cc	/^void Flow::destroy()$/;"	f	class:Flow
destroy	elements/local/FlowNet/common/PacketQueue.hh	/^inline int PacketQueue::destroy()$/;"	f	class:PacketQueue
destroy	elements/local/OpenFlow/SynchronizedPacketQueue.hh	/^inline int SynchronizedPacketQueue::destroy()$/;"	f	class:SynchronizedPacketQueue
destroy	elements/local/OpenFlow/lib/table.hh	/^    void (*destroy)(struct sw_table *table);$/;"	m	struct:sw_table
destroy_autorefresh	apps/clicky/src/hvalues.cc	/^static void destroy_autorefresh(gpointer user_data) {$/;"	f	file:
destroy_callback	apps/clicky/src/whandler.cc	/^static void destroy_callback(GtkWidget *w, gpointer) {$/;"	f	file:
destroy_flow	elements/icmp/icmppingrewriter.hh	/^ICMPPingRewriter::destroy_flow(IPRewriterFlow *flow)$/;"	f	class:ICMPPingRewriter
destroy_flow	elements/ip/ipaddrpairrewriter.hh	/^IPAddrPairRewriter::destroy_flow(IPRewriterFlow *flow)$/;"	f	class:IPAddrPairRewriter
destroy_flow	elements/ip/ipaddrrewriter.hh	/^IPAddrRewriter::destroy_flow(IPRewriterFlow *flow)$/;"	f	class:IPAddrRewriter
destroy_flow	elements/tcpudp/iprewriter.hh	/^IPRewriter::destroy_flow(IPRewriterFlow *flow)$/;"	f	class:IPRewriter
destroy_flow	elements/tcpudp/tcprewriter.hh	/^TCPRewriter::destroy_flow(IPRewriterFlow *flow)$/;"	f	class:TCPRewriter
destroy_flow	elements/tcpudp/udprewriter.hh	/^UDPRewriter::destroy_flow(IPRewriterFlow *flow)$/;"	f	class:UDPRewriter
destyle_normal	apps/clicky/src/dstyle.hh	/^    destyle_normal = 0,$/;"	e	enum:clicky::__anon14
destyle_queue	apps/clicky/src/dstyle.hh	/^    destyle_queue = 1$/;"	e	enum:clicky::__anon14
detach	include/click/bighashmap_arena.hh	/^    void detach()		{ _detached = true; }$/;"	f	class:HashMap_Arena
detached	include/click/bighashmap_arena.hh	/^    bool detached() const	{ return _detached; }$/;"	f	class:HashMap_Arena
detect_tx_hung	drivers/e1000-5.x/src/e1000.h	/^	boolean_t detect_tx_hung;$/;"	m	struct:e1000_adapter
detect_tx_hung	drivers/e1000-7.x/src/e1000.h	/^	boolean_t detect_tx_hung;$/;"	m	struct:e1000_adapter
dev	drivers/e1000-4.x/src/kcompat.c	/^	struct net_device *dev;$/;"	m	struct:_kc_net_dev_ext	typeref:struct:_kc_net_dev_ext::net_device	file:
dev	drivers/e1000-4.x/src/kcompat.c	/^	struct pci_dev *dev;$/;"	m	struct:_kc_pci_dev_ext	typeref:struct:_kc_pci_dev_ext::pci_dev	file:
dev	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	struct net_device *dev;$/;"	m	struct:_kc_mii_if_info	typeref:struct:_kc_mii_if_info::net_device	file:
dev	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	struct net_device *dev;$/;"	m	struct:_kc_net_dev_ext	typeref:struct:_kc_net_dev_ext::net_device	file:
dev	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	struct pci_dev *dev;$/;"	m	struct:_kc_pci_dev_ext	typeref:struct:_kc_pci_dev_ext::pci_dev	file:
dev	elements/linuxmodule/touserdevice.hh	/^        ToUserDevice *dev;$/;"	m	struct:ToUserDevice::file_priv
dev_fops	elements/linuxmodule/touserdevice.cc	/^struct file_operations *ToUserDevice::dev_fops;$/;"	m	class:ToUserDevice	typeref:struct:ToUserDevice::	file:
dev_fops	elements/linuxmodule/touserdevice.hh	/^    static struct file_operations *dev_fops;$/;"	m	class:ToUserDevice	typeref:struct:ToUserDevice::file_operations
dev_kfree_skb_any	drivers/e1000-4.x/src/kcompat.h	228;"	d
dev_kfree_skb_irq	drivers/e1000-4.x/src/kcompat.h	224;"	d
dev_name	elements/userlevel/fromhost.hh	/^    String dev_name() const		{ return _dev_name; }$/;"	f	class:FromHost
dev_open	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::dev_open(struct inode *inode, struct file *filp)$/;"	f	class:ToUserDevice
dev_poll	elements/linuxmodule/fromuserdevice.cc	/^FromUserDevice::dev_poll()$/;"	f	class:FromUserDevice
dev_poll	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::dev_poll(struct file *filp, struct poll_table_struct *pt)$/;"	f	class:ToUserDevice
dev_put	drivers/e1000-7.x/src/kcompat.h	858;"	d
dev_put	drivers/e1000-7.x/src/kcompat.h	859;"	d
dev_read	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::dev_read(struct file *filp, char *buff, size_t len, loff_t *ppos)$/;"	f	class:ToUserDevice
dev_release	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::dev_release(struct inode *inode, struct file *filp)$/;"	f	class:ToUserDevice
dev_setup	conf/click-mkclgw.pl	/^sub dev_setup ()$/;"	s
dev_updown	elements/linuxmodule/fromhost.cc	/^dev_updown(net_device *dev, int up, ErrorHandler *errh)$/;"	f	file:
dev_write	elements/linuxmodule/fromuserdevice.cc	/^FromUserDevice::dev_write(const char *buf, size_t count, loff_t *ppos)$/;"	f	class:FromUserDevice
dev_write	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::dev_write(struct file *filp, const char *buff, size_t len, loff_t *ppos)$/;"	f	class:ToUserDevice
develop_kvalues	lib/confparse.cc	/^CpVaHelper::develop_kvalues(va_list val, ErrorHandler *errh)$/;"	f	class:__anon517::CpVaHelper
develop_values	lib/confparse.cc	/^CpVaHelper::develop_values(va_list val, ErrorHandler *errh)$/;"	f	class:__anon517::CpVaHelper
device	drivers/e1000-4.x/src/kcompat.h	/^	unsigned int vendor, device;$/;"	m	struct:_kc_pci_device_id
device	elements/bsdmodule/anydevice.hh	/^    struct ifnet *device() const	{ return _dev; }$/;"	f	class:AnyDevice
device	elements/linuxmodule/anydevice.hh	/^    net_device *device() const		{ return _dev; }$/;"	f	class:AnyDevice
device_anno	include/click/packet.hh	/^Packet::device_anno() const$/;"	f	class:Packet
device_filter	elements/userlevel/kernelfilter.cc	/^KernelFilter::device_filter(const String &devname, bool add_filter,$/;"	f	class:KernelFilter
device_id	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t device_id;$/;"	m	struct:e1000_hw
device_id	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t device_id;$/;"	m	struct:e1000_hw
device_id	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t device_id;$/;"	m	struct:e1000_hw
device_notifier	elements/linuxmodule/fromdevice.cc	/^static struct notifier_block device_notifier;$/;"	v	typeref:struct:notifier_block	file:
device_notifier	elements/linuxmodule/polldevice.cc	/^static struct notifier_block device_notifier;$/;"	v	typeref:struct:notifier_block	file:
device_notifier	elements/linuxmodule/todevice.cc	/^static struct notifier_block device_notifier;$/;"	v	typeref:struct:notifier_block	file:
device_notifier	elements/linuxmodule/tohost.cc	/^static struct notifier_block device_notifier;$/;"	v	typeref:struct:notifier_block	file:
device_notifier_early	elements/linuxmodule/fromdevice.cc	/^static struct notifier_block device_notifier_early;$/;"	v	typeref:struct:notifier_block	file:
device_notifier_hook	elements/linuxmodule/fromdevice.cc	/^device_notifier_hook(struct notifier_block *nb, unsigned long flags, void *v)$/;"	f	file:
device_notifier_hook	elements/linuxmodule/polldevice.cc	/^device_notifier_hook(struct notifier_block *nb, unsigned long flags, void *v)$/;"	f	file:
device_notifier_hook	elements/linuxmodule/todevice.cc	/^device_notifier_hook(struct notifier_block *nb, unsigned long flags, void *v)$/;"	f	file:
device_notifier_hook	elements/linuxmodule/tohost.cc	/^device_notifier_hook(struct notifier_block *nb, unsigned long flags, void *v)$/;"	f	file:
device_notifier_hook_early	elements/linuxmodule/fromdevice.cc	/^device_notifier_hook_early(struct notifier_block *nb, unsigned long flags, void *v)$/;"	f	file:
device_t	drivers/e1000-4.x/src/ans_os.h	/^typedef struct device device_t;$/;"	t	typeref:struct:device
device_t	drivers/e1000-4.x/src/ans_os.h	/^typedef struct net_device device_t;$/;"	t	typeref:struct:net_device
devname	elements/bsdmodule/anydevice.hh	/^    const String &devname() const	{ return _devname; }$/;"	f	class:AnyDevice
devname	elements/linuxmodule/anydevice.hh	/^    const String &devname() const	{ return _devname; }$/;"	f	class:AnyDevice
devname	elements/local/OpenFlow/datapath.hh	/^	char devname[8];$/;"	m	struct:click_port
devname	include/clicknet/wifi.h	/^  uint8_t devname[WLAN_DEVNAMELEN_MAX];$/;"	m	struct:__anon498
dflag_background	apps/clicky/src/cdriver.hh	/^    enum { dflag_background = 1, dflag_clear = 2, dflag_nonraw = 4 };$/;"	e	enum:clicky::cdriver::__anon4
dflag_clear	apps/clicky/src/cdriver.hh	/^    enum { dflag_background = 1, dflag_clear = 2, dflag_nonraw = 4 };$/;"	e	enum:clicky::cdriver::__anon4
dflag_nonraw	apps/clicky/src/cdriver.hh	/^    enum { dflag_background = 1, dflag_clear = 2, dflag_nonraw = 4 };$/;"	e	enum:clicky::cdriver::__anon4
dfullness_decor	apps/clicky/src/ddecor.cc	/^dfullness_decor::dfullness_decor(PermString name, crouter *cr, delt *e,$/;"	f	class:clicky::dfullness_decor
dfullness_decor	apps/clicky/src/ddecor.hh	/^class dfullness_decor : public ddecor { public:$/;"	c	namespace:clicky
dfullness_style	apps/clicky/src/dstyle.hh	/^struct dfullness_style : public enable_ref_ptr {$/;"	s	namespace:clicky
dgettext	apps/clicky/src/support.h	27;"	d
dhandler_style	apps/clicky/src/dstyle.hh	/^struct dhandler_style : public enable_ref_ptr {$/;"	s	namespace:clicky
dhcp_client_state	include/clicknet/dhcp.h	/^enum dhcp_client_state {$/;"	g
dhlt_click	apps/clicky/src/dstyle.hh	/^    dhlt_click = 1,$/;"	e	enum:clicky::__anon17
dhlt_hover	apps/clicky/src/dstyle.hh	/^    dhlt_hover = 0,$/;"	e	enum:clicky::__anon17
dhlt_pressed	apps/clicky/src/dstyle.hh	/^    dhlt_pressed = 2,$/;"	e	enum:clicky::__anon17
dhlt_rect_click	apps/clicky/src/dstyle.hh	/^    dhlt_rect_click = 3$/;"	e	enum:clicky::__anon17
diag_icr	drivers/e1000-4.x/src/e1000.h	/^	uint32_t diag_icr;$/;"	m	struct:e1000_adapter
diag_param	drivers/e1000-4.x/src/idiag_pro.h	/^	uint8_t diag_param[IDIAG_PRO_PARAM_SIZE];$/;"	m	struct:idiag_pro_data
diag_rx_ring	drivers/e1000-4.x/src/e1000.h	/^	struct e1000_desc_ring diag_rx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_desc_ring
diag_tx_ring	drivers/e1000-4.x/src/e1000.h	/^	struct e1000_desc_ring diag_tx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_desc_ring
diagram	apps/clicky/src/wmain.hh	/^    wdiagram *diagram() const {$/;"	f	class:clicky::wmain
diagram_expose	apps/clicky/src/wdiagram.cc	/^static gboolean diagram_expose(GtkWidget *, GdkEventExpose *e, gpointer user_data)$/;"	f	file:
diagram_map	apps/clicky/src/wdiagram.cc	/^static void diagram_map(GtkWidget *, gpointer user_data)$/;"	f	file:
dialog	apps/ClickController/NewConnectionDialog.java	/^	JDialog dialog;$/;"	f	class:NewConnectionDialog.DoneAction
dialogs_connect	apps/clicky/src/dialogs.cc	/^void wmain::dialogs_connect()$/;"	f	class:clicky::wmain
did	include/clicknet/wifi.h	/^  uint32_t did;$/;"	m	struct:__anon497
diff_in_ms	elements/grid/dsrroutetable.cc	/^DSRRouteTable::diff_in_ms(const Timestamp &t1, const Timestamp &t2)$/;"	f	class:DSRRouteTable
dijkstra	elements/wifi/linktable.cc	/^LinkTable::dijkstra(bool from_me)$/;"	f	class:LinkTable
dijkstra_time	elements/wifi/linktable.hh	/^  Timestamp dijkstra_time;$/;"	m	class:LinkTable
dimension_markup	apps/clicky/src/dwidget.cc	/^void delt::dimension_markup(dcontext &dcx)$/;"	f	class:clicky::delt
dimensions	elements/grid/amoeba.hh	/^  int dimensions() { return(_dimensions); }$/;"	f	class:Amoeba
dir	bsdmodule/clickfs_tree.hh	/^	} dir;$/;"	m	union:clickfs_dirent::__anon34	typeref:struct:clickfs_dirent::__anon34::dir_struct
dir	linuxmodule/modulepriv.hh	/^    int dir;$/;"	m	struct:click_fsmode_t
dir_struct	bsdmodule/clickfs_tree.hh	/^	struct dir_struct {$/;"	s	union:clickfs_dirent::__anon34
direct_expand_element	tools/lib/eclasst.cc	/^ElementClassT::direct_expand_element($/;"	f	class:ElementClassT
direction	elements/analysis/toipflowdumps.hh	/^	uint8_t direction;$/;"	m	struct:ToIPFlowDumps::Pkt
direction	elements/ip/iprwmapping.hh	/^    bool direction() const {$/;"	f	class:IPRewriterEntry
direction	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	int direction;$/;"	m	struct:CORE
dirent	linuxmodule/clickfs.cc	/^    void *dirent;$/;"	m	struct:my_filldir_container	file:
dirty	include/click/string.hh	/^	volatile uint32_t dirty;$/;"	m	struct:String::memo_t
disable_polarity_correction	drivers/e1000-4.x/src/e1000_hw.h	/^    boolean_t disable_polarity_correction;$/;"	m	struct:e1000_hw
disable_polarity_correction	drivers/e1000-5.x/src/e1000_hw.h	/^    boolean_t disable_polarity_correction;$/;"	m	struct:e1000_hw
disable_polarity_correction	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t disable_polarity_correction;$/;"	m	struct:e1000_hw
disabled	elements/local/OpenFlow/lib/fatal-signal.cc	/^static bool disabled;$/;"	v	file:
discard	conf/click-mkclgw.pl	/^sub discard {$/;"	s
discard_buffer	elements/local/OpenFlow/datapath.cc	/^void DatapathPacketBuffer::discard_buffer(uint32_t id)$/;"	f	class:DatapathPacketBuffer
disconnect	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^void FlowMpeg2AdaptDecap::disconnect( FrameReceivingBuffer* buffer )$/;"	f	class:FlowMpeg2AdaptDecap
disconnect	elements/local/OpenFlow/lib/rconn.cc	/^disconnect(struct rconn *rc, int error)$/;"	f	file:
display	apps/clicky/src/dstyle.hh	/^    int display;$/;"	m	struct:clicky::delt_style
display	apps/clicky/src/dstyle.hh	/^    int display;$/;"	m	struct:clicky::dport_style
display	apps/clicky/src/dwidget.hh	/^    int display() const {$/;"	f	class:clicky::delt
display	apps/clicky/src/whandler.cc	/^void whandler::display(const String &ename, bool incremental)$/;"	f	class:clicky::whandler
display	apps/clicky/src/whandler.cc	/^void whandler::hinfo::display(whandler *wh, bool change_form)$/;"	f	class:clicky::whandler::hinfo
displayHandler	apps/ClickController/RouterTreeModel.java	/^    public void displayHandler(String h, String data);$/;"	m	interface:RouterTreeModel.DisplayHandlerListener
display_name	apps/clicky/src/dwidget.cc	/^String delt::display_name() const$/;"	f	class:clicky::delt
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distdir	etc/libclick/Makefile	/^distdir = libclick-$(VERSION)$/;"	m
divide	include/click/bigint.hh	/^    static limb_type divide(limb_type *x, const limb_type *a, int n,$/;"	f	class:Bigint
dl_addr	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t dl_addr[OFP_ETH_ALEN];  \/* Ethernet address. *\/$/;"	m	struct:ofp_action_dl_addr
dl_dst	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t dl_dst[OFP_ETH_ALEN]; \/* Ethernet destination address. *\/$/;"	m	struct:ofp_match
dl_dst	elements/local/OpenFlow/lib/flow.hh	/^    uint8_t dl_dst[6];          \/* Ethernet destination address. *\/$/;"	m	struct:flow
dl_src	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t dl_src[OFP_ETH_ALEN]; \/* Ethernet source address. *\/$/;"	m	struct:ofp_match
dl_src	elements/local/OpenFlow/lib/flow.hh	/^    uint8_t dl_src[6];          \/* Ethernet source address. *\/$/;"	m	struct:flow
dl_type	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t dl_type;          \/* Ethernet frame type. *\/$/;"	m	struct:ofp_match
dl_type	elements/local/OpenFlow/lib/flow.hh	/^    uint16_t dl_type;           \/* Ethernet frame type. *\/$/;"	m	struct:flow
dl_vlan	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t dl_vlan;          \/* Input VLAN id. *\/$/;"	m	struct:ofp_match
dl_vlan	elements/local/OpenFlow/lib/flow.hh	/^    uint16_t dl_vlan;           \/* Input VLAN id. *\/$/;"	m	struct:flow
dl_vlan_pcp	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t dl_vlan_pcp;       \/* Input VLAN priority. *\/$/;"	m	struct:ofp_match
dl_vlan_pcp	elements/local/OpenFlow/lib/flow.hh	/^    uint8_t dl_vlan_pcp;        \/* Input VLAN priority. *\/$/;"	m	struct:flow
dlt	elements/userlevel/fakepcap.cc	/^    int dlt;$/;"	m	struct:dlt_name	file:
dlt_name	elements/userlevel/fakepcap.cc	/^static const struct dlt_name {$/;"	s	file:
dlt_names	elements/userlevel/fakepcap.cc	/^} dlt_names[] = {$/;"	v	typeref:struct:dlt_name	file:
dma	drivers/e1000-4.x/src/e1000.h	/^	dma_addr_t dma;$/;"	m	struct:e1000_desc_ring
dma	drivers/e1000-4.x/src/e1000.h	/^	uint64_t dma;$/;"	m	struct:e1000_buffer
dma	drivers/e1000-5.x/src/e1000.h	/^	dma_addr_t dma;$/;"	m	struct:e1000_desc_ring
dma	drivers/e1000-5.x/src/e1000.h	/^	uint64_t dma;$/;"	m	struct:e1000_buffer
dma	drivers/e1000-7.x/src/e1000.h	/^	dma_addr_t dma;$/;"	m	struct:e1000_buffer
dma	drivers/e1000-7.x/src/e1000.h	/^	dma_addr_t dma;$/;"	m	struct:e1000_rx_ring
dma	drivers/e1000-7.x/src/e1000.h	/^	dma_addr_t dma;$/;"	m	struct:e1000_tx_ring
dma_addr_t	drivers/e1000-4.x/src/kcompat.h	187;"	d
dma_fairness	drivers/e1000-4.x/src/e1000_hw.h	/^    uint8_t dma_fairness;$/;"	m	struct:e1000_hw
dma_fairness	drivers/e1000-5.x/src/e1000_hw.h	/^    uint8_t dma_fairness;$/;"	m	struct:e1000_hw
dma_fairness	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t dma_fairness;$/;"	m	struct:e1000_hw
dmx_len	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^        pktlen_t dmx_len;$/;"	m	class:FlowMpeg2AdaptEncap
doClose	apps/ClickController/ClickController.java	/^    public void doClose() {$/;"	m	class:ClickController
doWeEncap	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^	int	doWeEncap;$/;"	m	class:PFMpeg2AdaptFW
do_ca_cert_bootstrap	elements/local/OpenFlow/lib/vconn-ssl.cc	/^do_ca_cert_bootstrap(struct vconn *vconn)$/;"	f	file:
do_check_write	apps/clicky/src/cdriver.cc	/^void clickfs_cdriver::do_check_write(const String &fullname, int)$/;"	f	class:clicky::clickfs_cdriver
do_check_write	apps/clicky/src/cdriver.cc	/^void csocket_cdriver::do_check_write(const String &hname, int flags)$/;"	f	class:clicky::csocket_cdriver
do_connection	tools/click2xml/xml2click.cc	/^do_connection(XML_Parser parser, const XML_Char **attrs, ErrorHandler *errh)$/;"	f	file:
do_delete	elements/local/OpenFlow/lib/table-hash.cc	/^static void do_delete(struct sw_flow **bucket)$/;"	f	file:
do_delete	elements/local/OpenFlow/lib/table-linear.cc	/^do_delete(struct sw_flow *flow) $/;"	f	file:
do_element	tools/click2xml/xml2click.cc	/^do_element(XML_Parser parser, const XML_Char **attrs, ErrorHandler *errh)$/;"	f	file:
do_error	lib/clp.c	/^do_error(Clp_Parser *clp, Clp_BuildString *bs)$/;"	f	file:
do_fd_connected	apps/clicky/src/dialogs.cc	/^int do_fd_connected(int fd, ErrorHandler *errh)$/;"	f	namespace:clicky
do_formal	tools/click2xml/xml2click.cc	/^do_formal(XML_Parser parser, const XML_Char **attrs, ErrorHandler *errh)$/;"	f	file:
do_handler_ioctl	linuxmodule/clickfs.cc	/^do_handler_ioctl(struct inode *inode, struct file *filp,$/;"	f	file:
do_lookup_genl_family	elements/local/OpenFlow/lib/netlink.cc	/^static int do_lookup_genl_family(const char *name) $/;"	f	file:
do_monitor	elements/local/FlowNet/papmo/PaPMo.cc	/^int papmo::do_monitor( int tag, int pos, const Packet* p, const Flow* f, const VcSchedule* , const VcBWShape* , const VcCongestionDetection* cd )$/;"	f	class:papmo
do_monitor	elements/local/FlowNet/papmo/PaPMo.cc	/^int papmo::do_monitor(Packet* p, uint32_t tag, uint32_t qlen, uint32_t qlen_next)$/;"	f	class:papmo
do_monitor	elements/local/FlowNet/papmo/PaPMo.cc	/^int papmo::do_monitor(struct composed_trace* ct)$/;"	f	class:papmo
do_nothing	include/click/algorithm.hh	/^struct do_nothing {$/;"	s
do_nothing	include/click/algorithm.hh	/^struct do_nothing<T, void> {$/;"	s
do_nothing_hook	lib/timer.cc	/^Timer::do_nothing_hook(Timer *, void *)$/;"	f	class:Timer
do_nothing_t	include/click/timer.hh	/^    struct do_nothing_t {$/;"	s	class:Timer
do_number	lib/error.cc	/^do_number(unsigned long num, char *after_last, int base, int flags)$/;"	f	file:
do_number_flags	lib/error.cc	/^do_number_flags(char *pos, char *after_last, int base, int flags,$/;"	f	file:
do_output	elements/local/OpenFlow/lib/dp_act.cc	/^do_output(class Datapath *dp, struct ofpbuf *buffer, int in_port,$/;"	f	file:
do_poll_watchdog	drivers/e1000-4.x/src/e1000.h	/^        int do_poll_watchdog; \/* Click polling *\/$/;"	m	struct:e1000_adapter
do_poll_watchdog	drivers/e1000-5.x/src/e1000.h	/^	int do_poll_watchdog;$/;"	m	struct:e1000_adapter
do_poll_watchdog	drivers/e1000-7.x/src/e1000.h	/^        int do_poll_watchdog; \/* Click polling *\/$/;"	m	struct:e1000_adapter
do_protection	elements/local/OpenFlow/lib/private-msg.cc	/^do_protection(class Datapath *dp)$/;"	f	file:
do_read	apps/clicky/src/cdriver.cc	/^void clickfs_cdriver::do_read(const String &fullname, const String &hparam, int flags)$/;"	f	class:clicky::clickfs_cdriver
do_read	apps/clicky/src/cdriver.cc	/^void csocket_cdriver::do_read(const String &hname, const String &hparam, int flags)$/;"	f	class:clicky::csocket_cdriver
do_recv	elements/local/OpenFlow/lib/vconn.cc	/^do_recv(struct vconn *vconn, struct ofpbuf **msgp)$/;"	f	file:
do_section	doc/click-elem2man	/^sub do_section ($$$) {$/;"	s
do_send	elements/local/OpenFlow/lib/vconn.cc	/^static int do_send(struct vconn *vconn, struct ofpbuf *msg)$/;"	f	file:
do_set_pattern	elements/local/OpenFlow/lib/vlog.cc	/^do_set_pattern(enum vlog_facility facility, const char *pattern) $/;"	f	file:
do_simple_action	tools/click-devirtualize/specializer.cc	/^Specializer::do_simple_action(SpecializedClass &spc)$/;"	f	class:Specializer
do_sleep	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^int PFSchedFW::do_sleep(int microsec)$/;"	f	class:PFSchedFW
do_ssl_init	elements/local/OpenFlow/lib/vconn-ssl.cc	/^do_ssl_init(void)$/;"	f	file:
do_start_compound	tools/click2xml/xml2click.cc	/^do_start_compound(XML_Parser parser, const XML_Char **attrs, ErrorHandler *errh)$/;"	f	file:
do_start_elementclass	tools/click2xml/xml2click.cc	/^do_start_elementclass(XML_Parser parser, const XML_Char **attrs, ErrorHandler *errh)$/;"	f	file:
do_synonym	tools/click2xml/xml2click.cc	/^do_synonym(XML_Parser parser, const XML_Char **attrs, ErrorHandler *errh)$/;"	f	file:
do_tx_work	elements/local/OpenFlow/lib/rconn.cc	/^static void do_tx_work(struct rconn *rc)$/;"	f	file:
do_unlink_files	elements/local/OpenFlow/lib/fatal-signal.cc	/^do_unlink_files(void)$/;"	f	file:
do_we_send	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.cc	/^int VcBWShapeByCD::do_we_send(Flow *flow_in, Packet *p, const Element::Port &e)$/;"	f	class:VcBWShapeByCD
do_we_send	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.cc	/^int VcBWShapeByCD_CFB::do_we_send(Flow* flow_in, Packet* p, const Element::Port &e)$/;"	f	class:VcBWShapeByCD_CFB
do_we_send	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeNULL.cc	/^int VcBWShapeNULL::do_we_send(Flow*, Packet* p, const Element::Port &e)$/;"	f	class:VcBWShapeNULL
do_we_send	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeSimple.cc	/^int VcBWShapeSimple::do_we_send(Flow *flow_in, Packet *p, const Element::Port &e)$/;"	f	class:VcBWShapeSimple
do_we_send	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeStaticMpeg2.cc	/^int VcBWShapeStaticMpeg2::do_we_send(Flow*, Packet* p, const Element::Port &e)$/;"	f	class:VcBWShapeStaticMpeg2
do_we_sleep	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^int PFSchedFW::do_we_sleep()$/;"	f	class:PFSchedFW
do_write	apps/clicky/src/cdriver.cc	/^void clickfs_cdriver::do_write(const String &fullname, const String &hvalue, int)$/;"	f	class:clicky::clickfs_cdriver
do_write	apps/clicky/src/cdriver.cc	/^void csocket_cdriver::do_write(const String &hname, const String &hvalue, int flags)$/;"	f	class:clicky::csocket_cdriver
dochref	tools/lib/elementmap.hh	/^	String dochref;$/;"	m	struct:ElementMap::Globals
documentation_name	tools/lib/eclasst.hh	/^ElementClassT::documentation_name() const$/;"	f	class:ElementClassT
documentation_name	tools/lib/etraits.hh	/^    String documentation_name;$/;"	m	struct:ElementTraits
documentation_url	tools/lib/eclasst.cc	/^ElementClassT::documentation_url() const$/;"	f	class:ElementClassT
documentation_url	tools/lib/elementmap.cc	/^ElementMap::documentation_url(const ElementTraits &t) const$/;"	f	class:ElementMap
does_it_expire	elements/local/FlowNet/common/Flow.cc	/^int Flow::does_it_expire()$/;"	f	class:Flow
doinstall	installch	/^doinstall () {$/;"	f
doit	elements/grid/amoeba.cc	/^AmoebaTest::doit()$/;"	f	class:AmoebaTest
dokuwiki_do_section	doc/click-elem2man	/^sub dokuwiki_do_section ($$$) {$/;"	s
dokuwiki_filename_func	doc/click-elem2man	/^sub dokuwiki_filename_func ($$) {$/;"	s
dokuwiki_quotedbl	doc/click-elem2man	/^sub dokuwiki_quotedbl ($) {$/;"	s
dokuwiki_surround	doc/click-elem2man	/^sub dokuwiki_surround ($$) {$/;"	s
dokuwiki_unentity	doc/click-elem2man	/^sub dokuwiki_unentity ($) {$/;"	s
dokuwikiize	doc/click-elem2man	/^sub dokuwikiize ($) {$/;"	s
dokuwikiize_text	doc/click-elem2man	/^sub dokuwikiize_text ($) {$/;"	s
dom_shift_branch	elements/standard/classification.cc	/^DominatorOptimizer::dom_shift_branch(int brno, int to_state, int dom, int dom_end, Vector<int> *collector)$/;"	f	class:Classification::Wordwise::DominatorOptimizer
done	elements/local/OpenFlow/datapath.cc	/^	bool done;$/;"	m	struct:stats_dump_cb	file:
done	elements/local/OpenFlow/datapath.cc	/^	void (*done)(void *state);$/;"	m	struct:stats_type	file:
done	elements/wifi/athdesc.h	/^	u_int32_t	done:1;$/;"	m	struct:ar5212_desc
done	elements/wifi/athdesc.h	/^	u_int32_t done:1;$/;"	m	struct:ar5212_rx_status
dont_forward	elements/grid/lookupgeogridroute.cc	/^LookupGeographicGridRoute::dont_forward(const Packet *p) const$/;"	f	class:LookupGeographicGridRoute
doodad	apps/clicky/src/permstr.hh	/^    Doodad* doodad() const { return (Doodad*)(_rep - offsetof(Doodad, data)); }$/;"	f	class:PermString
dot11_to_ratecode	elements/wifi/athdesc.h	/^dot11_to_ratecode(int dot11) {$/;"	f
double_data_handler	lib/element.cc	/^double_data_handler(int op, String &str, Element *element, const Handler *h, ErrorHandler *errh)$/;"	f	file:
doubleval	include/click/timestamp.hh	/^Timestamp::doubleval() const$/;"	f	class:Timestamp
downshift	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_downshift downshift;$/;"	m	struct:e1000_phy_info
downshift	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_downshift downshift;$/;"	m	struct:e1000_phy_info
downstream	apps/clicky/src/crouter.hh	/^inline const crouter::reachable_t &crouter::downstream(const String &str)$/;"	f	class:clicky::crouter
downstream_elements	lib/router.cc	/^Router::downstream_elements(Element *e, int port, ElementFilter *filter, Vector<Element *> &result)$/;"	f	class:Router
downstream_full_signal	lib/notifier.cc	/^Notifier::downstream_full_signal(Element* e, int port, Task* task, Notifier* dependent_notifier)$/;"	f	class:Notifier
dp	apps/clicky/src/dstyle.hh	/^	double *dp;$/;"	m	union:clicky::dcss_property::__anon20
dp	elements/local/OpenFlow/lib/chain.hh	/^    class Datapath *dp;$/;"	m	struct:sw_chain	typeref:class:sw_chain::Datapath
dp	elements/local/OpenFlow/lib/private-msg.cc	/^	class Datapath *dp;$/;"	m	struct:emerg_flow_context	typeref:class:emerg_flow_context::Datapath	file:
dp	elements/local/OpenFlow/lib/vconn-netlink.cc	/^    struct dpif dp;$/;"	m	struct:netlink_vconn	typeref:struct:netlink_vconn::dpif	file:
dp_add_local_port	elements/local/OpenFlow/datapath.cc	/^int Datapath::dp_add_local_port(const char *devname, uint16_t num_queues)$/;"	f	class:Datapath
dp_add_port	elements/local/OpenFlow/datapath.cc	/^int Datapath::dp_add_port(const char *devname, const uint8_t *macaddr, uint16_t num_queues, uint16_t click_port_num)$/;"	f	class:Datapath
dp_desc	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    char dp_desc[DESC_STR_LEN];$/;"	m	struct:openflow_ext_set_dp_desc
dp_desc	elements/local/OpenFlow/include/openflow/openflow.hh	/^    char dp_desc[DESC_STR_LEN];        \/* Human readable description of datapath. *\/$/;"	m	struct:ofp_desc_stats
dp_genl_command	elements/local/OpenFlow/include/openflow/openflow-netlink.hh	/^enum dp_genl_command {$/;"	g
dp_idx	elements/local/OpenFlow/lib/vconn-netlink.cc	/^    int dp_idx;$/;"	m	struct:netlink_vconn	file:
dp_lookup_port	elements/local/OpenFlow/datapath.cc	/^struct click_port * Datapath::dp_lookup_port(uint16_t port_no)$/;"	f	class:Datapath
dp_lookup_queue	elements/local/OpenFlow/datapath.cc	/^struct sw_queue * dp_lookup_queue(struct click_port *p, uint32_t queue_id)$/;"	f
dp_output_control	elements/local/OpenFlow/datapath.cc	/^void Datapath::dp_output_control(struct ofpbuf *buffer, int in_port, size_t max_len, int reason)$/;"	f	class:Datapath
dp_output_port	elements/local/OpenFlow/datapath.cc	/^void Datapath::dp_output_port(struct ofpbuf *buffer, int in_port, int out_port, uint32_t queue_id, bool ignore_no_fwd UNUSED )$/;"	f	class:Datapath
dp_packet_buffer	elements/local/OpenFlow/datapath.hh	/^struct dp_packet_buffer {$/;"	s
dp_send_error_msg	elements/local/OpenFlow/datapath.cc	/^void Datapath::dp_send_error_msg(struct rconn_remote *rconn_sender, uint32_t xid, uint16_t type, uint16_t code, const void *data, size_t len)$/;"	f	class:Datapath
dp_send_features_reply	elements/local/OpenFlow/datapath.cc	/^void Datapath::dp_send_features_reply(struct rconn_remote *rconn_sender, uint32_t xid)$/;"	f	class:Datapath
dp_send_flow_end	elements/local/OpenFlow/datapath.cc	/^void Datapath::dp_send_flow_end(struct sw_flow *flow, enum ofp_flow_removed_reason reason)$/;"	f	class:Datapath
dp_wait	elements/local/OpenFlow/RConn.cc	/^void dp_wait(struct RConn* rconn)$/;"	f
dpdisp_both	apps/clicky/src/dstyle.hh	/^    dpdisp_both = 3$/;"	e	enum:clicky::__anon15
dpdisp_inputs	apps/clicky/src/dstyle.hh	/^    dpdisp_inputs = 1,$/;"	e	enum:clicky::__anon15
dpdisp_none	apps/clicky/src/dstyle.hh	/^    dpdisp_none = 0,$/;"	e	enum:clicky::__anon15
dpdisp_outputs	apps/clicky/src/dstyle.hh	/^    dpdisp_outputs = 2,$/;"	e	enum:clicky::__anon15
dpif	elements/local/OpenFlow/lib/dpif.hh	/^struct dpif$/;"	s
dpif_add_dp	elements/local/OpenFlow/lib/dpif.cc	/^dpif_add_dp(struct dpif *dp, int dp_idx, const char *dp_name)$/;"	f
dpif_add_port	elements/local/OpenFlow/lib/dpif.cc	/^dpif_add_port(struct dpif *dp, int dp_idx, const char *netdev)$/;"	f
dpif_close	elements/local/OpenFlow/lib/dpif.cc	/^dpif_close(struct dpif *dp) $/;"	f
dpif_del_dp	elements/local/OpenFlow/lib/dpif.cc	/^dpif_del_dp(struct dpif *dp, int dp_idx, const char *dp_name)$/;"	f
dpif_del_port	elements/local/OpenFlow/lib/dpif.cc	/^dpif_del_port(struct dpif *dp, int dp_idx, const char *netdev)$/;"	f
dpif_get_idx	elements/local/OpenFlow/lib/dpif.cc	/^dpif_get_idx(const char *name)$/;"	f
dpif_open	elements/local/OpenFlow/lib/dpif.cc	/^dpif_open(int subscribe_dp_idx, struct dpif *dp)$/;"	f
dpif_recv_openflow	elements/local/OpenFlow/lib/dpif.cc	/^dpif_recv_openflow(struct dpif *dp, int dp_idx, struct ofpbuf **bufferp,$/;"	f
dpif_send_openflow	elements/local/OpenFlow/lib/dpif.cc	/^dpif_send_openflow(struct dpif *dp, int dp_idx, struct ofpbuf *buffer)$/;"	f
dport	elements/analysis/fromnlanrdump.hh	/^	uint16_t dport;$/;"	m	struct:FromNLANRDump::FRCell
dport	elements/ip/ipfragmentmap.hh	/^	uint16_t dport;$/;"	m	struct:IPFragmentMap::Entry
dport	elements/ip6/addresstranslator.hh	/^  unsigned short dport() const        { return _mapto.dport(); }$/;"	f	class:AddressTranslator::Mapping
dport	include/click/ip6flowid.hh	/^  uint16_t dport() const		{ return _dport; }$/;"	f	class:IP6FlowID
dport	include/click/ipflowid.hh	/^    uint16_t dport() const {$/;"	f	class:IPFlowID
dport_style	apps/clicky/src/dstyle.hh	/^struct dport_style : public enable_ref_ptr {$/;"	s	namespace:clicky
dpshape_rectangle	apps/clicky/src/dstyle.hh	/^    dpshape_rectangle = 0,$/;"	e	enum:clicky::__anon11
dpshape_triangle	apps/clicky/src/dstyle.hh	/^    dpshape_triangle = 1$/;"	e	enum:clicky::__anon11
drag_canvas_changed	apps/clicky/src/dwidget.cc	/^bool delt::drag_canvas_changed(const rectangle &canvas) const$/;"	f	class:clicky::delt
drag_dragging	apps/clicky/src/wdiagram.hh	/^	drag_dragging,$/;"	e	enum:clicky::wdiagram::__anon3
drag_hand_dragging	apps/clicky/src/wdiagram.hh	/^	drag_hand_dragging$/;"	e	enum:clicky::wdiagram::__anon3
drag_hand_start	apps/clicky/src/wdiagram.hh	/^	drag_hand_start,$/;"	e	enum:clicky::wdiagram::__anon3
drag_none	apps/clicky/src/wdiagram.hh	/^	drag_none,$/;"	e	enum:clicky::wdiagram::__anon3
drag_prepare	apps/clicky/src/dwidget.cc	/^void delt::drag_prepare()$/;"	f	class:clicky::delt
drag_rect_dragging	apps/clicky/src/wdiagram.hh	/^	drag_rect_dragging,$/;"	e	enum:clicky::wdiagram::__anon3
drag_rect_start	apps/clicky/src/wdiagram.hh	/^	drag_rect_start,$/;"	e	enum:clicky::wdiagram::__anon3
drag_shift	apps/clicky/src/dwidget.cc	/^void delt::drag_shift(wdiagram *d, const point &delta)$/;"	f	class:clicky::delt
drag_size	apps/clicky/src/dwidget.cc	/^void delt::drag_size(wdiagram *d, const point &delta, int direction)$/;"	f	class:clicky::delt
drag_start	apps/clicky/src/wdiagram.hh	/^	drag_start,$/;"	e	enum:clicky::wdiagram::__anon3
drag_threshold	apps/clicky/src/dwidget.hh	/^    enum { drag_threshold = 8 };\/\/ amount after which recalculate layout$/;"	e	enum:clicky::delt::__anon27
drain_fd	elements/local/OpenFlow/lib/socket-util.cc	/^drain_fd(int fd, size_t n_packets)$/;"	f
drain_rcvbuf	elements/local/OpenFlow/lib/socket-util.cc	/^drain_rcvbuf(int fd)$/;"	f
draw	apps/clicky/src/ddecor.cc	/^void dactivity_decor::draw(delt *, double *sides, dcontext &dcx)$/;"	f	class:clicky::dactivity_decor
draw	apps/clicky/src/ddecor.cc	/^void ddecor::draw(delt *, double *, dcontext &)$/;"	f	class:clicky::ddecor
draw	apps/clicky/src/ddecor.cc	/^void dfullness_decor::draw(delt *e, double *sides, dcontext &dcx)$/;"	f	class:clicky::dfullness_decor
draw	apps/clicky/src/dwidget.cc	/^void dconn::draw(dcontext &dcx)$/;"	f	class:clicky::dconn
draw	apps/clicky/src/dwidget.cc	/^void delt::draw(dcontext &dcx)$/;"	f	class:clicky::delt
draw	apps/clicky/src/dwidget.hh	/^inline void dwidget::draw(dcontext &dcx) {$/;"	f	class:clicky::dwidget
draw_background	apps/clicky/src/dwidget.cc	/^void delt::draw_background(dcontext &dcx)$/;"	f	class:clicky::delt
draw_drop_shadow	apps/clicky/src/dwidget.cc	/^void delt::draw_drop_shadow(dcontext &dcx)$/;"	f	class:clicky::delt
draw_list	apps/clicky/src/ddecor.hh	/^    static void draw_list(ddecor *dd, delt *e, double *sides, dcontext &dcx) {$/;"	f	class:clicky::ddecor
draw_outline	apps/clicky/src/dwidget.cc	/^void delt::draw_outline(dcontext &dcx)$/;"	f	class:clicky::delt
draw_port	apps/clicky/src/dwidget.cc	/^void delt::draw_port(dcontext &dcx, dport_style *dps, point p,$/;"	f	class:clicky::delt
draw_ports	apps/clicky/src/dwidget.cc	/^void delt::draw_ports(dcontext &dcx)$/;"	f	class:clicky::delt
draw_random	elements/grid/linktester.cc	/^LinkTester::draw_random(double lambda)$/;"	f	class:LinkTester
draw_random_msecs	elements/grid/linktester.hh	/^  unsigned int draw_random_msecs(double lambda)$/;"	f	class:LinkTester
draw_text	apps/clicky/src/dwidget.cc	/^void delt::draw_text(dcontext &dcx)$/;"	f	class:clicky::delt
driver	apps/clicky/src/crouter.hh	/^    cdriver *driver() const {$/;"	f	class:clicky::crouter
driver	drivers/e1000-4.x/src/kcompat.c	/^	struct pci_driver *driver;$/;"	m	struct:_kc_pci_dev_ext	typeref:struct:_kc_pci_dev_ext::pci_driver	file:
driver	drivers/e1000-5.x/src/kcompat.h	/^	char	 driver[32];$/;"	m	struct:k_ethtool_drvinfo
driver	drivers/e1000-7.x/src/kcompat.h	/^	char	 driver[32];$/;"	m	struct:k_ethtool_drvinfo
driver	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	struct pci_driver *driver;$/;"	m	struct:_kc_pci_dev_ext	typeref:struct:_kc_pci_dev_ext::pci_driver	file:
driver	lib/routerthread.cc	/^RouterThread::driver()$/;"	f	class:RouterThread
driver	tools/click-mkmindriver/click-mkmindriver.cc	/^static int driver = -1;$/;"	v	file:
driver	tools/lib/etraits.cc	/^Driver::driver(const String& name)$/;"	f	class:Driver
driver_compatible	tools/lib/elementmap.cc	/^ElementMap::driver_compatible(const RouterT *r, int driver, ErrorHandler *errh) const$/;"	f	class:ElementMap
driver_data	drivers/e1000-4.x/src/kcompat.h	/^	unsigned long driver_data;$/;"	m	struct:_kc_pci_device_id
driver_elt_index	tools/lib/elementmap.cc	/^ElementMap::driver_elt_index(int i) const$/;"	f	class:ElementMap
driver_epoch	include/click/routerthread.hh	/^    uint32_t driver_epoch() const	{ return _driver_epoch; }$/;"	f	class:RouterThread
driver_id	drivers/e1000-4.x/src/idiag_pro.h	/^	uint32_t driver_id;$/;"	m	struct:idiag_pro_data
driver_indifferent	tools/lib/elementmap.cc	/^ElementMap::driver_indifferent(const RouterT *r, int driver_mask, ErrorHandler *errh) const$/;"	f	class:ElementMap
driver_local	apps/clicky/src/crouter.hh	/^    bool driver_local() const {$/;"	f	class:clicky::crouter
driver_lock_tasks	lib/routerthread.cc	/^RouterThread::driver_lock_tasks()$/;"	f	class:RouterThread
driver_mask	apps/clicky/src/cdriver.cc	/^int clickfs_cdriver::driver_mask() const$/;"	f	class:clicky::clickfs_cdriver
driver_mask	apps/clicky/src/cdriver.cc	/^int csocket_cdriver::driver_mask() const$/;"	f	class:clicky::csocket_cdriver
driver_mask	click-mkelemmap	/^sub driver_mask ($) {$/;"	s
driver_mask	tools/lib/elementmap.hh	/^	int driver_mask;$/;"	m	struct:ElementMap::Globals
driver_mask	tools/lib/elementmap.hh	/^    int driver_mask() const		{ return _driver_mask; }$/;"	f	class:ElementMap
driver_mask	tools/lib/etraits.cc	/^Driver::driver_mask(const String& name)$/;"	f	class:Driver
driver_mask	tools/lib/etraits.hh	/^    int driver_mask;$/;"	m	struct:ElementTraits
driver_multithread_names	tools/lib/etraits.cc	/^static const char * const driver_multithread_names[] = {$/;"	v	file:
driver_names	tools/lib/etraits.cc	/^static const char * const driver_names[] = {$/;"	v	file:
driver_once	lib/routerthread.cc	/^RouterThread::driver_once()$/;"	f	class:RouterThread
driver_requirement	doc/click-elem2man	/^sub driver_requirement ($) {$/;"	s
driver_task_epoch	include/click/routerthread.hh	/^    uint32_t driver_task_epoch() const	{ return _driver_task_epoch; }$/;"	f	class:RouterThread
driver_unlock_tasks	lib/routerthread.cc	/^RouterThread::driver_unlock_tasks()$/;"	f	class:RouterThread
drop	elements/ethernet/checkarpheader.cc	/^CheckARPHeader::drop(Reason reason, Packet *p)$/;"	f	class:CheckARPHeader
drop	elements/icmp/checkicmpheader.cc	/^CheckICMPHeader::drop(Reason reason, Packet *p)$/;"	f	class:CheckICMPHeader
drop	elements/ip/checkipheader.cc	/^CheckIPHeader::drop(Reason reason, Packet *p)$/;"	f	class:CheckIPHeader
drop	elements/tcpudp/checktcpheader.cc	/^CheckTCPHeader::drop(Reason reason, Packet *p)$/;"	f	class:CheckTCPHeader
drop	elements/tcpudp/checkudpheader.cc	/^CheckUDPHeader::drop(Reason reason, Packet *p)$/;"	f	class:CheckUDPHeader
drop_count	elements/local/FlowNet/common/Flow.hh	/^	int drop_count;$/;"	m	struct:FlowStat
drop_count	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^	int drop_count;$/;"	m	struct:FlowMpeg2AdaptEncapStat
drop_frame_indicator	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int drop_frame_indicator[STREAMINGSTUB_MAX_FRAMEINDEX_BUFFER];$/;"	m	struct:FlowMpeg2AdaptDecapStat
drop_handler	elements/ipsec/hmacsha1.cc	/^IPsecAuthHMACSHA1::drop_handler(Element *e, void *)$/;"	f	class:IPsecAuthHMACSHA1
drop_handler	elements/ipsec/sha1.cc	/^IPsecAuthSHA1::drop_handler(Element *e, void *)$/;"	f	class:IPsecAuthSHA1
drop_it	elements/grid/checkgridheader.cc	/^CheckGridHeader::drop_it(Packet *p)$/;"	f	class:CheckGridHeader
drop_it	elements/ip6/checkip6header.cc	/^CheckIP6Header::drop_it(Packet *p)$/;"	f	class:CheckIP6Header
drop_it	elements/ip6/decip6hlim.cc	/^DecIP6HLIM::drop_it(Packet *p)$/;"	f	class:DecIP6HLIM
drop_it	elements/standard/dropbroadcasts.cc	/^DropBroadcasts::drop_it(Packet *p)$/;"	f	class:DropBroadcasts
dropbroadcasts_read_drops	elements/standard/dropbroadcasts.cc	/^dropbroadcasts_read_drops(Element *f, void *)$/;"	f	file:
drops	elements/aqm/pi.hh	/^    int drops() const				{ return _drops; }$/;"	f	class:PI
drops	elements/aqm/red.hh	/^    int drops() const				{ return _drops; }$/;"	f	class:RED
drops	elements/ethernet/arptable.hh	/^    uint32_t drops() const {$/;"	f	class:ARPTable
drops	elements/grid/checkgridheader.hh	/^  int drops() const				{ return _drops; }$/;"	f	class:CheckGridHeader
drops	elements/ip/ipfragmenter.hh	/^  uint32_t drops() const			{ return _drops; }$/;"	f	class:IPFragmenter
drops	elements/ip/ipgwoptions.hh	/^  uint32_t drops() const			{ return _drops; }$/;"	f	class:IPGWOptions
drops	elements/ip/ipinputcombo.hh	/^  uint32_t drops() const			{ return _drops; }$/;"	f	class:IPInputCombo
drops	elements/ip6/checkip6header.hh	/^  int drops() const				{ return _drops; }$/;"	f	class:CheckIP6Header
drops	elements/ip6/decip6hlim.hh	/^  int drops()					{ return _drops; }$/;"	f	class:DecIP6HLIM
drops	elements/ip6/ip6fragmenter.hh	/^  int drops() const				{ return _drops; }$/;"	f	class:IP6Fragmenter
drops	elements/linuxmodule/cpuqueue.hh	/^  unsigned drops() const			{ return _drops; }$/;"	f	class:CPUQueue
drops	elements/standard/dropbroadcasts.hh	/^  uint32_t drops() const		{ return _drops; }$/;"	f	class:DropBroadcasts
drops	elements/standard/simplequeue.hh	/^    int drops() const				{ return _drops; }$/;"	f	class:SimpleQueue
ds	elements/local/OpenFlow/lib/dynamic-string.hh	/^struct ds {$/;"	s
ds	include/clicknet/wifi.h	/^	struct ds {$/;"	s	struct:wifi_information
ds	include/clicknet/wifi.h	/^	} ds;$/;"	m	struct:wifi_information	typeref:struct:wifi_information::ds
ds_chomp	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_chomp(struct ds *ds, int c)$/;"	f
ds_clear	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_clear(struct ds *ds) $/;"	f
ds_cstr	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_cstr(struct ds *ds)$/;"	f
ds_destroy	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_destroy(struct ds *ds)$/;"	f
ds_get_line	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_get_line(struct ds *ds, FILE *file)$/;"	f
ds_init	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_init(struct ds *ds)$/;"	f
ds_last	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_last(const struct ds *ds)$/;"	f
ds_put_buffer	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_put_buffer(struct ds *ds, const char *s, size_t n)$/;"	f
ds_put_char	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_put_char(struct ds *ds, char c)$/;"	f
ds_put_char_multiple	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_put_char_multiple(struct ds *ds, char c, size_t n)$/;"	f
ds_put_cstr	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_put_cstr(struct ds *ds, const char *s)$/;"	f
ds_put_format	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_put_format(struct ds *ds, const char *format, ...)$/;"	f
ds_put_format_valist	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_put_format_valist(struct ds *ds, const char *format, va_list args_)$/;"	f
ds_put_hex_dump	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_put_hex_dump(struct ds *ds, const void *buf_, size_t size,$/;"	f
ds_put_printable	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_put_printable(struct ds *ds, const char *s, size_t n) $/;"	f
ds_put_strftime	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_put_strftime(struct ds *ds, const char *temp, const struct tm *tm)$/;"	f
ds_put_uninit	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_put_uninit(struct ds *ds, size_t n)$/;"	f
ds_reserve	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_reserve(struct ds *ds, size_t min_length)$/;"	f
ds_truncate	elements/local/OpenFlow/lib/dynamic-string.cc	/^ds_truncate(struct ds *ds, size_t new_length)$/;"	f
dsap	include/clicknet/fddi.h	/^    uint8_t	dsap;$/;"	m	struct:click_fddi_8022_1
dsap	include/clicknet/fddi.h	/^    uint8_t	dsap;$/;"	m	struct:click_fddi_8022_2
dsap	include/clicknet/fddi.h	/^    uint8_t	dsap;$/;"	m	struct:click_fddi_snap
dsap	include/clicknet/rfc1483.h	/^    uint8_t	dsap;$/;"	m	struct:click_rfc1483
dscp	elements/ip6/setip6dscp.hh	/^    uint8_t dscp() const		{ return ntohl(_dscp) >> IP6_DSCP_SHIFT; }$/;"	f	class:SetIP6DSCP
dsdv_assert	elements/grid/dsdvroutetable.cc	48;"	d	file:
dsdv_assert_	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::dsdv_assert_(const char *file, int line, const char *expr) const$/;"	f	class:DSDVRouteTable
dsdv_jiffies	elements/grid/dsdvroutetable.hh	/^dsdv_jiffies()$/;"	f
dsense_always	apps/clicky/src/dstyle.hh	/^    dsense_always = 4$/;"	e	enum:clicky::__anon18
dsense_handler	apps/clicky/src/dstyle.hh	/^    dsense_handler = 2,$/;"	e	enum:clicky::__anon18
dsense_highlight	apps/clicky/src/dstyle.hh	/^    dsense_highlight = 1,$/;"	e	enum:clicky::__anon18
dshadow_drop	apps/clicky/src/dstyle.hh	/^    dshadow_drop = 1,$/;"	e	enum:clicky::__anon13
dshadow_none	apps/clicky/src/dstyle.hh	/^    dshadow_none = 0,$/;"	e	enum:clicky::__anon13
dshadow_outline	apps/clicky/src/dstyle.hh	/^    dshadow_outline = 2,$/;"	e	enum:clicky::__anon13
dshadow_unscaled_outline	apps/clicky/src/dstyle.hh	/^    dshadow_unscaled_outline = 3$/;"	e	enum:clicky::__anon13
dsp_config_state	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_dsp_config dsp_config_state;$/;"	m	struct:e1000_hw
dsp_config_state	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_dsp_config dsp_config_state;$/;"	m	struct:e1000_hw
dsr_err_dst	elements/grid/dsr.hh	/^  in_addr dsr_err_dst;$/;"	m	struct:click_dsr_rerr
dsr_err_src	elements/grid/dsr.hh	/^  in_addr dsr_err_src;$/;"	m	struct:click_dsr_rerr
dsr_error	elements/grid/dsr.hh	/^  unsigned char dsr_error;$/;"	m	struct:click_dsr_rerr
dsr_flags	elements/grid/dsr.hh	/^  unsigned char dsr_flags;$/;"	m	struct:click_dsr_rerr
dsr_flags	elements/grid/dsr.hh	/^  unsigned char dsr_flags;$/;"	m	struct:click_dsr_rrep
dsr_id	elements/grid/dsr.hh	/^  u_int16_t dsr_id;$/;"	m	struct:click_dsr_rreq
dsr_len	elements/grid/dsr.hh	/^  u_int16_t dsr_len;$/;"	m	struct:click_dsr
dsr_len	elements/grid/dsr.hh	/^  unsigned char dsr_len;$/;"	m	struct:click_dsr_option
dsr_len	elements/grid/dsr.hh	/^  unsigned char dsr_len;$/;"	m	struct:click_dsr_rerr
dsr_len	elements/grid/dsr.hh	/^  unsigned char dsr_len;$/;"	m	struct:click_dsr_rrep
dsr_len	elements/grid/dsr.hh	/^  unsigned char dsr_len;$/;"	m	struct:click_dsr_rreq
dsr_len	elements/grid/dsr.hh	/^  unsigned char dsr_len;$/;"	m	struct:click_dsr_source
dsr_next_header	elements/grid/dsr.hh	/^  unsigned char dsr_next_header; \/\/ original IP protocol field$/;"	m	struct:click_dsr
dsr_pad	elements/grid/dsr.hh	/^  unsigned char dsr_pad; \/\/ for alignment; against the spec$/;"	m	struct:click_dsr_rrep
dsr_reserved	elements/grid/dsr.hh	/^  unsigned char dsr_reserved;$/;"	m	struct:click_dsr
dsr_salvage	elements/grid/dsr.hh	/^  unsigned char dsr_salvage;$/;"	m	struct:click_dsr_source
dsr_segsleft	elements/grid/dsr.hh	/^  unsigned char dsr_segsleft;$/;"	m	struct:click_dsr_source
dsr_type	elements/grid/dsr.hh	/^  unsigned char dsr_type;$/;"	m	struct:click_dsr_option
dsr_type	elements/grid/dsr.hh	/^  unsigned char dsr_type;$/;"	m	struct:click_dsr_rerr
dsr_type	elements/grid/dsr.hh	/^  unsigned char dsr_type;$/;"	m	struct:click_dsr_rrep
dsr_type	elements/grid/dsr.hh	/^  unsigned char dsr_type;$/;"	m	struct:click_dsr_rreq
dsr_type	elements/grid/dsr.hh	/^  unsigned char dsr_type;$/;"	m	struct:click_dsr_source
dst	elements/ethernet/arpresponder.hh	/^	IPAddress dst;$/;"	m	struct:ARPResponder::Entry
dst	elements/ethernet/ip6ndadvertiser.hh	/^    IP6Address dst;$/;"	m	struct:IP6NDAdvertiser::Entry
dst	include/click/iptable.hh	/^    IPAddress dst;$/;"	m	struct:IPTable::Entry
dst_ip	elements/grid/grid.hh	/^    uint32_t dst_ip;$/;"	m	struct:grid_loc_query
dst_ip	elements/grid/grid.hh	/^  uint32_t dst_ip;$/;"	m	struct:grid_nbr_encap
dst_ip6_anno_offset	include/click/packet.hh	/^	dst_ip6_anno_offset = 0, dst_ip6_anno_size = 16$/;"	e	enum:Packet::__anon463
dst_ip6_anno_size	include/click/packet.hh	/^	dst_ip6_anno_offset = 0, dst_ip6_anno_size = 16$/;"	e	enum:Packet::__anon463
dst_ip_anno	include/click/packet.hh	/^Packet::dst_ip_anno() const$/;"	f	class:Packet
dst_ip_anno_offset	include/click/packet.hh	/^	dst_ip_anno_offset = 0, dst_ip_anno_size = 4,$/;"	e	enum:Packet::__anon463
dst_ip_anno_size	include/click/packet.hh	/^	dst_ip_anno_offset = 0, dst_ip_anno_size = 4,$/;"	e	enum:Packet::__anon463
dst_loc	elements/grid/grid.hh	/^  struct grid_location dst_loc;$/;"	m	struct:grid_nbr_encap	typeref:struct:grid_nbr_encap::grid_location
dst_loc_err	elements/grid/grid.hh	/^    uint16_t dst_loc_err;$/;"	m	struct:grid_geocast
dst_loc_err	elements/grid/grid.hh	/^  uint16_t dst_loc_err;$/;"	m	struct:grid_nbr_encap
dst_loc_good	elements/grid/grid.hh	/^  uint8_t \/* bool *\/ dst_loc_good;$/;"	m	struct:grid_nbr_encap
dst_region	elements/grid/grid.hh	/^    struct grid_region dst_region;$/;"	m	struct:grid_geocast	typeref:struct:grid_geocast::grid_region
dtype_check_write	apps/clicky/src/cdriver.hh	/^    enum { dtype_read = 1, dtype_write = 2, dtype_check_write = 3 };$/;"	e	enum:clicky::csocket_cdriver::__anon6
dtype_read	apps/clicky/src/cdriver.hh	/^    enum { dtype_read = 1, dtype_write = 2, dtype_check_write = 3 };$/;"	e	enum:clicky::csocket_cdriver::__anon6
dtype_write	apps/clicky/src/cdriver.hh	/^    enum { dtype_read = 1, dtype_write = 2, dtype_check_write = 3 };$/;"	e	enum:clicky::csocket_cdriver::__anon6
dummy	elements/local/OpenFlow/include/openflow/openflow.hh	/^	int dummy;$/;"	m	class:Of_Openflow
dummy	elements/local/OpenFlow/lib/csum.hh	/^	int dummy;$/;"	m	class:Of_Csum
dummy	elements/local/OpenFlow/lib/hash.hh	/^	int dummy;$/;"	m	class:Of_Hash
dummy	elements/local/OpenFlow/lib/leak-checker.hh	/^	int dummy;$/;"	m	class:Of_LeakChecker
dummy	elements/local/OpenFlow/lib/of_crc32.hh	/^	int dummy;$/;"	m	class:Of_Crc32
dummy	elements/local/OpenFlow/lib/ofp-print.hh	/^	int dummy;$/;"	m	class:Of_OfpPrint
dummy	elements/local/OpenFlow/lib/ofpbuf.hh	/^	int dummy;$/;"	m	class:Of_Ofpbuf
dummy	elements/local/OpenFlow/lib/ofpstat.hh	/^	int dummy;$/;"	m	class:Of_Ofpstat
dummy	elements/local/OpenFlow/lib/pcap.hh	/^	int dummy;$/;"	m	class:Of_Pcap
dummy	elements/local/OpenFlow/lib/poll-loop.hh	/^	int dummy;$/;"	m	class:Of_PollLoop
dummy	elements/local/OpenFlow/lib/private-msg.hh	/^	int dummy;$/;"	m	class:Of_PrivateMsg
dummy	elements/local/OpenFlow/lib/queue.hh	/^	int dummy;$/;"	m	class:Of_Queue
dummy	elements/local/OpenFlow/lib/random.hh	/^	int dummy;$/;"	m	class:Of_Random
dummy	elements/local/OpenFlow/lib/switch-flow.hh	/^	int dummy;$/;"	m	class:Of_SwitchFlow
dummy	elements/local/OpenFlow/lib/table.hh	/^	int dummy;$/;"	m	class:Of_TableHash
dummy	elements/local/OpenFlow/lib/table.hh	/^	int dummy;$/;"	m	class:Of_TableLinear
dummy	elements/local/OpenFlow/lib/timeval.hh	/^	int dummy;$/;"	m	class:OfTime
dump	conf/click-mkclgw.pl	/^sub dump {$/;"	s
dump	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::RTEntry::dump() const$/;"	f	class:DSDVRouteTable::RTEntry
dump	elements/ip/directiplookup.cc	/^DirectIPLookup::Table::dump() const$/;"	f	class:DirectIPLookup::Table
dump	elements/local/FlowNet/common/PF_FW.cc	/^void PFFW::dump()$/;"	f	class:PFFW
dump	elements/local/FlowNet/libtable/TableLinear.hh	/^int VcTableLinear<T>::dump(VcFlowClassify *clfy, const char* additional_name, int )$/;"	f	class:VcTableLinear
dump	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.cc	/^void PFMpeg2AdaptFW::dump()$/;"	f	class:PFMpeg2AdaptFW
dump	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^void PFSchedFW::dump()$/;"	f	class:PFSchedFW
dump	elements/local/FlowNet/shaper/PFShapeFW.cc	/^void PFShapeFW::dump()$/;"	f	class:PFShapeFW
dump	elements/local/OpenFlow/datapath.cc	/^	int (*dump)(class Datapath *dp, void *state, struct ofpbuf *buffer);$/;"	m	struct:stats_type	file:
dump	lib/ip6table.cc	/^IP6Table::dump()$/;"	f	class:IP6Table
dump_buf	elements/grid/gridlogger.hh	/^  void dump_buf() {$/;"	f	class:GridLogger
dump_buffer	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.cc	/^void FrameReceivingBuffer::dump_buffer(FILE* fp, char* buf )$/;"	f	class:FrameReceivingBuffer
dump_mappings_handler	elements/icmp/icmppingrewriter.cc	/^ICMPPingRewriter::dump_mappings_handler(Element *e, void *)$/;"	f	class:ICMPPingRewriter
dump_mappings_handler	elements/ip/ipaddrpairrewriter.cc	/^IPAddrPairRewriter::dump_mappings_handler(Element *e, void *)$/;"	f	class:IPAddrPairRewriter
dump_mappings_handler	elements/ip/ipaddrrewriter.cc	/^IPAddrRewriter::dump_mappings_handler(Element *e, void *)$/;"	f	class:IPAddrRewriter
dump_mappings_handler	elements/tcpudp/udprewriter.cc	/^UDPRewriter::dump_mappings_handler(Element *e, void *)$/;"	f	class:UDPRewriter
dump_port_stats	elements/local/OpenFlow/datapath.cc	/^static void dump_port_stats(struct click_port *port, struct ofpbuf *buffer)$/;"	f	file:
dump_print_clear	elements/local/FlowNet/common/FlowNetGod.hh	/^	int	dump_print_clear;$/;"	m	class:FlowNetGod
dump_queue_stats	elements/local/OpenFlow/datapath.cc	/^static void dump_queue_stats(struct sw_queue *q, struct ofpbuf *buffer)$/;"	f	file:
dump_routes	elements/ip/directiplookup.cc	/^DirectIPLookup::dump_routes()$/;"	f	class:DirectIPLookup
dump_routes	elements/ip/iproutetable.cc	/^IPRouteTable::dump_routes()$/;"	f	class:IPRouteTable
dump_routes	elements/ip/lineariplookup.cc	/^LinearIPLookup::dump_routes()$/;"	f	class:LinearIPLookup
dump_routes	elements/ip/radixiplookup.cc	/^RadixIPLookup::dump_routes()$/;"	f	class:RadixIPLookup
dump_routes	elements/ip/rangeiplookup.cc	/^RangeIPLookup::dump_routes()$/;"	f	class:RangeIPLookup
dump_routes	elements/ip6/ip6routetable.cc	/^IP6RouteTable::dump_routes()$/;"	f	class:IP6RouteTable
dump_routes	elements/ip6/lookupip6route.hh	/^  String dump_routes()				{ return _t.dump(); };$/;"	f	class:LookupIP6Route
dump_routes	elements/ipsec/ipsecroutetable.cc	/^IPsecRouteTable::dump_routes()$/;"	f	class:IPsecRouteTable
dump_routes	elements/ipsec/radixipseclookup.cc	/^RadixIPsecLookup::dump_routes()$/;"	f	class:RadixIPsecLookup
dump_table	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^void tspacket_table::dump_table(FILE* fp)$/;"	f	class:tspacket_table
dump_timer	elements/local/FlowNet/common/FlowNetGod.hh	/^	Timer dump_timer;$/;"	m	class:FlowNetGod
dup_jumbo_m	lib/packet.cc	/^Packet::dup_jumbo_m(struct mbuf *m)$/;"	f	class:Packet
duplex	drivers/e1000-4.x/src/ans.h	/^    u32 *duplex;$/;"	m	struct:_iANSsupport_t
dur	include/clicknet/wifi.h	/^		uint8_t		dur[2];$/;"	m	struct:wifi_information::cf
duration_nsec	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t duration_nsec;   \/* Time flow has been alive in nanoseconds beyond$/;"	m	struct:ofp_flow_stats
duration_nsec	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t duration_nsec;   \/* Time flow was alive in nanoseconds beyond$/;"	m	struct:ofp_flow_removed
duration_sec	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t duration_sec;    \/* Time flow has been alive in seconds. *\/$/;"	m	struct:ofp_flow_stats
duration_sec	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t duration_sec;    \/* Time flow was alive in seconds. *\/$/;"	m	struct:ofp_flow_removed
duration_update_enable	elements/wifi/athdesc.h	/^	u_int32_t	duration_update_enable:1;$/;"	m	struct:ar5212_desc
dw_conn	apps/clicky/src/dwidget.hh	/^enum { dw_elt = 0, dw_conn = 1 };$/;"	e	enum:clicky::__anon25
dw_elt	apps/clicky/src/dwidget.hh	/^enum { dw_elt = 0, dw_conn = 1 };$/;"	e	enum:clicky::__anon25
dwell	include/clicknet/wifi.h	/^		uint16_t 	dwell;$/;"	m	struct:wifi_information::fh
dwidget	apps/clicky/src/dwidget.hh	/^    dwidget(int type, int z_index = 0)$/;"	f	class:clicky::dwidget
dwidget	apps/clicky/src/dwidget.hh	/^class dwidget : public rectangle { public:$/;"	c	namespace:clicky
dynamic_resizing	include/click/hashmap.hh	/^  bool dynamic_resizing() const		{ return _capacity < 0x7FFFFFFF; }$/;"	f	class:HashMap
e	elements/analysis/ipsumdumpinfo.hh	/^    const Element *e;$/;"	m	struct:IPSummaryDump::PacketDesc
e	elements/analysis/ipsumdumpinfo.hh	/^    const Element *e;$/;"	m	struct:IPSummaryDump::PacketOdesc
e1000-objs	drivers/e1000-5.x/src/Makefile	/^e1000-objs := $(CFILES:.c=.o)$/;"	m
e1000-objs	drivers/e1000-7.x/src/Makefile	/^e1000-objs := $(CFILES:.c=.o)$/;"	m
e1000_1000t_rx_status	drivers/e1000-4.x/src/e1000_hw.h	/^} e1000_1000t_rx_status;$/;"	t	typeref:enum:__anon51
e1000_1000t_rx_status	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_1000t_rx_status;$/;"	t	typeref:enum:__anon143
e1000_1000t_rx_status	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_1000t_rx_status;$/;"	t	typeref:enum:__anon87
e1000_1000t_rx_status_not_ok	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_1000t_rx_status_not_ok = 0,$/;"	e	enum:__anon51
e1000_1000t_rx_status_not_ok	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_1000t_rx_status_not_ok = 0,$/;"	e	enum:__anon143
e1000_1000t_rx_status_not_ok	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_1000t_rx_status_not_ok = 0,$/;"	e	enum:__anon87
e1000_1000t_rx_status_ok	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_1000t_rx_status_ok,$/;"	e	enum:__anon51
e1000_1000t_rx_status_ok	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_1000t_rx_status_ok,$/;"	e	enum:__anon143
e1000_1000t_rx_status_ok	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_1000t_rx_status_ok,$/;"	e	enum:__anon87
e1000_1000t_rx_status_undefined	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_1000t_rx_status_undefined = 0xFF$/;"	e	enum:__anon51
e1000_1000t_rx_status_undefined	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_1000t_rx_status_undefined = 0xFF$/;"	e	enum:__anon143
e1000_1000t_rx_status_undefined	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_1000t_rx_status_undefined = 0xFF$/;"	e	enum:__anon87
e1000_100_full	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_100_full = 3$/;"	e	enum:__anon41
e1000_100_full	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_100_full = 3$/;"	e	enum:__anon130
e1000_100_full	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_100_full = 3$/;"	e	enum:__anon74
e1000_100_half	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_100_half = 2,$/;"	e	enum:__anon41
e1000_100_half	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_100_half = 2,$/;"	e	enum:__anon130
e1000_100_half	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_100_half = 2,$/;"	e	enum:__anon74
e1000_10_full	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_10_full = 1,$/;"	e	enum:__anon41
e1000_10_full	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_10_full = 1,$/;"	e	enum:__anon130
e1000_10_full	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_10_full = 1,$/;"	e	enum:__anon74
e1000_10_half	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_10_half = 0,$/;"	e	enum:__anon41
e1000_10_half	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_10_half = 0,$/;"	e	enum:__anon130
e1000_10_half	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_10_half = 0,$/;"	e	enum:__anon74
e1000_10bt_ext_dist_enable	drivers/e1000-4.x/src/e1000_hw.h	/^} e1000_10bt_ext_dist_enable;$/;"	t	typeref:enum:__anon47
e1000_10bt_ext_dist_enable	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_10bt_ext_dist_enable;$/;"	t	typeref:enum:__anon137
e1000_10bt_ext_dist_enable	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_10bt_ext_dist_enable;$/;"	t	typeref:enum:__anon81
e1000_10bt_ext_dist_enable_lower	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_10bt_ext_dist_enable_lower,$/;"	e	enum:__anon47
e1000_10bt_ext_dist_enable_lower	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_10bt_ext_dist_enable_lower,$/;"	e	enum:__anon137
e1000_10bt_ext_dist_enable_lower	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_10bt_ext_dist_enable_lower,$/;"	e	enum:__anon81
e1000_10bt_ext_dist_enable_normal	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_10bt_ext_dist_enable_normal = 0,$/;"	e	enum:__anon47
e1000_10bt_ext_dist_enable_normal	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_10bt_ext_dist_enable_normal = 0,$/;"	e	enum:__anon137
e1000_10bt_ext_dist_enable_normal	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_10bt_ext_dist_enable_normal = 0,$/;"	e	enum:__anon81
e1000_10bt_ext_dist_enable_undefined	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_10bt_ext_dist_enable_undefined = 0xFF$/;"	e	enum:__anon47
e1000_10bt_ext_dist_enable_undefined	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_10bt_ext_dist_enable_undefined = 0xFF$/;"	e	enum:__anon137
e1000_10bt_ext_dist_enable_undefined	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_10bt_ext_dist_enable_undefined = 0xFF$/;"	e	enum:__anon81
e1000_80003es2lan	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_80003es2lan,$/;"	e	enum:__anon71
e1000_82540	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_82540,$/;"	e	enum:__anon39
e1000_82540	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_82540,$/;"	e	enum:__anon127
e1000_82540	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82540,$/;"	e	enum:__anon71
e1000_82541	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_82541,$/;"	e	enum:__anon127
e1000_82541	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82541,$/;"	e	enum:__anon71
e1000_82541_rev_2	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_82541_rev_2,$/;"	e	enum:__anon127
e1000_82541_rev_2	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82541_rev_2,$/;"	e	enum:__anon71
e1000_82542_rev2_0	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_82542_rev2_0,$/;"	e	enum:__anon39
e1000_82542_rev2_0	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_82542_rev2_0,$/;"	e	enum:__anon127
e1000_82542_rev2_0	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82542_rev2_0,$/;"	e	enum:__anon71
e1000_82542_rev2_1	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_82542_rev2_1,$/;"	e	enum:__anon39
e1000_82542_rev2_1	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_82542_rev2_1,$/;"	e	enum:__anon127
e1000_82542_rev2_1	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82542_rev2_1,$/;"	e	enum:__anon71
e1000_82543	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_82543,$/;"	e	enum:__anon39
e1000_82543	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_82543,$/;"	e	enum:__anon127
e1000_82543	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82543,$/;"	e	enum:__anon71
e1000_82544	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_82544,$/;"	e	enum:__anon39
e1000_82544	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_82544,$/;"	e	enum:__anon127
e1000_82544	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82544,$/;"	e	enum:__anon71
e1000_82545	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_82545,$/;"	e	enum:__anon39
e1000_82545	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_82545,$/;"	e	enum:__anon127
e1000_82545	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82545,$/;"	e	enum:__anon71
e1000_82545_rev_3	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_82545_rev_3,$/;"	e	enum:__anon127
e1000_82545_rev_3	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82545_rev_3,$/;"	e	enum:__anon71
e1000_82546	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_82546,$/;"	e	enum:__anon39
e1000_82546	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_82546,$/;"	e	enum:__anon127
e1000_82546	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82546,$/;"	e	enum:__anon71
e1000_82546_rev_3	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_82546_rev_3,$/;"	e	enum:__anon127
e1000_82546_rev_3	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82546_rev_3,$/;"	e	enum:__anon71
e1000_82547	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_82547,$/;"	e	enum:__anon127
e1000_82547	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82547,$/;"	e	enum:__anon71
e1000_82547_fifo_workaround	drivers/e1000-5.x/src/e1000_main.c	/^e1000_82547_fifo_workaround(struct e1000_adapter *adapter, struct sk_buff *skb)$/;"	f	file:
e1000_82547_fifo_workaround	drivers/e1000-7.x/src/e1000_main.c	/^e1000_82547_fifo_workaround(struct e1000_adapter *adapter, struct sk_buff *skb)$/;"	f	file:
e1000_82547_rev_2	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_82547_rev_2,$/;"	e	enum:__anon127
e1000_82547_rev_2	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82547_rev_2,$/;"	e	enum:__anon71
e1000_82547_tx_fifo_stall	drivers/e1000-5.x/src/e1000_main.c	/^e1000_82547_tx_fifo_stall(unsigned long data)$/;"	f	file:
e1000_82547_tx_fifo_stall	drivers/e1000-7.x/src/e1000_main.c	/^e1000_82547_tx_fifo_stall(unsigned long data)$/;"	f	file:
e1000_82571	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82571,$/;"	e	enum:__anon71
e1000_82572	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82572,$/;"	e	enum:__anon71
e1000_82573	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_82573,$/;"	e	enum:__anon71
e1000_acquire_eeprom	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_acquire_eeprom(struct e1000_hw *hw)$/;"	f	file:
e1000_acquire_eeprom	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_acquire_eeprom(struct e1000_hw *hw)$/;"	f	file:
e1000_adapter	drivers/e1000-4.x/src/e1000.h	/^struct e1000_adapter {$/;"	s
e1000_adapter	drivers/e1000-5.x/src/e1000.h	/^struct e1000_adapter {$/;"	s
e1000_adapter	drivers/e1000-7.x/src/e1000.h	/^struct e1000_adapter {$/;"	s
e1000_adjust_serdes_amplitude	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_adjust_serdes_amplitude(struct e1000_hw *hw)$/;"	f	file:
e1000_adjust_serdes_amplitude	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_adjust_serdes_amplitude(struct e1000_hw *hw)$/;"	f	file:
e1000_align_type	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_align_type;$/;"	t	typeref:enum:__anon148
e1000_align_type	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_align_type;$/;"	t	typeref:enum:__anon92
e1000_alloc_queues	drivers/e1000-7.x/src/e1000_main.c	/^e1000_alloc_queues(struct e1000_adapter *adapter)$/;"	f	file:
e1000_alloc_rx_buffers	drivers/e1000-4.x/src/e1000_main.c	/^e1000_alloc_rx_buffers(struct e1000_adapter *adapter)$/;"	f	file:
e1000_alloc_rx_buffers	drivers/e1000-5.x/src/e1000_main.c	/^e1000_alloc_rx_buffers(struct e1000_adapter *adapter)$/;"	f	file:
e1000_alloc_rx_buffers	drivers/e1000-7.x/src/e1000_main.c	/^e1000_alloc_rx_buffers(struct e1000_adapter *adapter,$/;"	f	file:
e1000_alloc_rx_buffers_ps	drivers/e1000-7.x/src/e1000_main.c	/^e1000_alloc_rx_buffers_ps(struct e1000_adapter *adapter,$/;"	f	file:
e1000_arc_subsystem_valid	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_arc_subsystem_valid(struct e1000_hw *hw)$/;"	f	file:
e1000_auto_x_mode	drivers/e1000-4.x/src/e1000_hw.h	/^} e1000_auto_x_mode;$/;"	t	typeref:enum:__anon50
e1000_auto_x_mode	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_auto_x_mode;$/;"	t	typeref:enum:__anon142
e1000_auto_x_mode	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_auto_x_mode;$/;"	t	typeref:enum:__anon86
e1000_auto_x_mode_auto1	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_auto_x_mode_auto1,$/;"	e	enum:__anon50
e1000_auto_x_mode_auto1	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_auto_x_mode_auto1,$/;"	e	enum:__anon142
e1000_auto_x_mode_auto1	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_auto_x_mode_auto1,$/;"	e	enum:__anon86
e1000_auto_x_mode_auto2	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_auto_x_mode_auto2,$/;"	e	enum:__anon50
e1000_auto_x_mode_auto2	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_auto_x_mode_auto2,$/;"	e	enum:__anon142
e1000_auto_x_mode_auto2	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_auto_x_mode_auto2,$/;"	e	enum:__anon86
e1000_auto_x_mode_manual_mdi	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_auto_x_mode_manual_mdi = 0,$/;"	e	enum:__anon50
e1000_auto_x_mode_manual_mdi	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_auto_x_mode_manual_mdi = 0,$/;"	e	enum:__anon142
e1000_auto_x_mode_manual_mdi	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_auto_x_mode_manual_mdi = 0,$/;"	e	enum:__anon86
e1000_auto_x_mode_manual_mdix	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_auto_x_mode_manual_mdix,$/;"	e	enum:__anon50
e1000_auto_x_mode_manual_mdix	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_auto_x_mode_manual_mdix,$/;"	e	enum:__anon142
e1000_auto_x_mode_manual_mdix	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_auto_x_mode_manual_mdix,$/;"	e	enum:__anon86
e1000_auto_x_mode_undefined	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_auto_x_mode_undefined = 0xFF$/;"	e	enum:__anon50
e1000_auto_x_mode_undefined	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_auto_x_mode_undefined = 0xFF$/;"	e	enum:__anon142
e1000_auto_x_mode_undefined	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_auto_x_mode_undefined = 0xFF$/;"	e	enum:__anon86
e1000_blink_led_start	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_blink_led_start(struct e1000_hw *hw)$/;"	f
e1000_buffer	drivers/e1000-4.x/src/e1000.h	/^struct e1000_buffer {$/;"	s
e1000_buffer	drivers/e1000-5.x/src/e1000.h	/^struct e1000_buffer {$/;"	s
e1000_buffer	drivers/e1000-7.x/src/e1000.h	/^struct e1000_buffer {$/;"	s
e1000_bus_speed	drivers/e1000-4.x/src/e1000_hw.h	/^} e1000_bus_speed;$/;"	t	typeref:enum:__anon44
e1000_bus_speed	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_bus_speed;$/;"	t	typeref:enum:__anon133
e1000_bus_speed	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_bus_speed;$/;"	t	typeref:enum:__anon76
e1000_bus_speed_100	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_bus_speed_100,$/;"	e	enum:__anon44
e1000_bus_speed_100	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_speed_100,$/;"	e	enum:__anon133
e1000_bus_speed_100	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_speed_100,$/;"	e	enum:__anon76
e1000_bus_speed_120	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_speed_120,$/;"	e	enum:__anon133
e1000_bus_speed_120	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_speed_120,$/;"	e	enum:__anon76
e1000_bus_speed_133	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_bus_speed_133,$/;"	e	enum:__anon44
e1000_bus_speed_133	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_speed_133,$/;"	e	enum:__anon133
e1000_bus_speed_133	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_speed_133,$/;"	e	enum:__anon76
e1000_bus_speed_2500	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_speed_2500,$/;"	e	enum:__anon76
e1000_bus_speed_33	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_bus_speed_33,$/;"	e	enum:__anon44
e1000_bus_speed_33	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_speed_33,$/;"	e	enum:__anon133
e1000_bus_speed_33	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_speed_33,$/;"	e	enum:__anon76
e1000_bus_speed_66	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_bus_speed_66,$/;"	e	enum:__anon44
e1000_bus_speed_66	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_speed_66,$/;"	e	enum:__anon133
e1000_bus_speed_66	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_speed_66,$/;"	e	enum:__anon76
e1000_bus_speed_reserved	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_bus_speed_reserved$/;"	e	enum:__anon44
e1000_bus_speed_reserved	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_speed_reserved$/;"	e	enum:__anon133
e1000_bus_speed_reserved	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_speed_reserved$/;"	e	enum:__anon76
e1000_bus_speed_unknown	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_bus_speed_unknown = 0,$/;"	e	enum:__anon44
e1000_bus_speed_unknown	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_speed_unknown = 0,$/;"	e	enum:__anon133
e1000_bus_speed_unknown	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_speed_unknown = 0,$/;"	e	enum:__anon76
e1000_bus_type	drivers/e1000-4.x/src/e1000_hw.h	/^} e1000_bus_type;$/;"	t	typeref:enum:__anon43
e1000_bus_type	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_bus_type;$/;"	t	typeref:enum:__anon132
e1000_bus_type	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_bus_type;$/;"	t	typeref:enum:__anon75
e1000_bus_type_pci	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_bus_type_pci,$/;"	e	enum:__anon43
e1000_bus_type_pci	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_type_pci,$/;"	e	enum:__anon132
e1000_bus_type_pci	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_type_pci,$/;"	e	enum:__anon75
e1000_bus_type_pci_express	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_type_pci_express,$/;"	e	enum:__anon75
e1000_bus_type_pcix	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_bus_type_pcix$/;"	e	enum:__anon43
e1000_bus_type_pcix	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_type_pcix,$/;"	e	enum:__anon132
e1000_bus_type_pcix	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_type_pcix,$/;"	e	enum:__anon75
e1000_bus_type_reserved	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_type_reserved$/;"	e	enum:__anon132
e1000_bus_type_reserved	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_type_reserved$/;"	e	enum:__anon75
e1000_bus_type_unknown	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_bus_type_unknown = 0,$/;"	e	enum:__anon43
e1000_bus_type_unknown	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_type_unknown = 0,$/;"	e	enum:__anon132
e1000_bus_type_unknown	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_type_unknown = 0,$/;"	e	enum:__anon75
e1000_bus_width	drivers/e1000-4.x/src/e1000_hw.h	/^} e1000_bus_width;$/;"	t	typeref:enum:__anon45
e1000_bus_width	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_bus_width;$/;"	t	typeref:enum:__anon134
e1000_bus_width	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_bus_width;$/;"	t	typeref:enum:__anon77
e1000_bus_width_32	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_bus_width_32,$/;"	e	enum:__anon45
e1000_bus_width_32	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_width_32,$/;"	e	enum:__anon134
e1000_bus_width_32	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_width_32,$/;"	e	enum:__anon77
e1000_bus_width_64	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_bus_width_64$/;"	e	enum:__anon45
e1000_bus_width_64	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_width_64,$/;"	e	enum:__anon134
e1000_bus_width_64	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_width_64,$/;"	e	enum:__anon77
e1000_bus_width_pciex_1	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_width_pciex_1 = 1,$/;"	e	enum:__anon77
e1000_bus_width_pciex_2	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_width_pciex_2 = 2,$/;"	e	enum:__anon77
e1000_bus_width_pciex_4	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_width_pciex_4 = 4,$/;"	e	enum:__anon77
e1000_bus_width_reserved	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_width_reserved$/;"	e	enum:__anon134
e1000_bus_width_reserved	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_width_reserved$/;"	e	enum:__anon77
e1000_bus_width_unknown	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_bus_width_unknown = 0,$/;"	e	enum:__anon45
e1000_bus_width_unknown	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_bus_width_unknown = 0,$/;"	e	enum:__anon134
e1000_bus_width_unknown	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_bus_width_unknown = 0,$/;"	e	enum:__anon77
e1000_byte_align	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_byte_align = 0,$/;"	e	enum:__anon148
e1000_byte_align	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_byte_align = 0,$/;"	e	enum:__anon92
e1000_cable_length	drivers/e1000-4.x/src/e1000_hw.h	/^} e1000_cable_length;$/;"	t	typeref:enum:__anon46
e1000_cable_length	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_cable_length;$/;"	t	typeref:enum:__anon135
e1000_cable_length	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_cable_length;$/;"	t	typeref:enum:__anon78
e1000_cable_length_110_140	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_cable_length_110_140,$/;"	e	enum:__anon46
e1000_cable_length_110_140	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_cable_length_110_140,$/;"	e	enum:__anon135
e1000_cable_length_110_140	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_cable_length_110_140,$/;"	e	enum:__anon78
e1000_cable_length_140	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_cable_length_140,$/;"	e	enum:__anon46
e1000_cable_length_140	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_cable_length_140,$/;"	e	enum:__anon135
e1000_cable_length_140	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_cable_length_140,$/;"	e	enum:__anon78
e1000_cable_length_50	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_cable_length_50 = 0,$/;"	e	enum:__anon46
e1000_cable_length_50	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_cable_length_50 = 0,$/;"	e	enum:__anon135
e1000_cable_length_50	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_cable_length_50 = 0,$/;"	e	enum:__anon78
e1000_cable_length_50_80	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_cable_length_50_80,$/;"	e	enum:__anon46
e1000_cable_length_50_80	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_cable_length_50_80,$/;"	e	enum:__anon135
e1000_cable_length_50_80	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_cable_length_50_80,$/;"	e	enum:__anon78
e1000_cable_length_80_110	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_cable_length_80_110,$/;"	e	enum:__anon46
e1000_cable_length_80_110	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_cable_length_80_110,$/;"	e	enum:__anon135
e1000_cable_length_80_110	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_cable_length_80_110,$/;"	e	enum:__anon78
e1000_cable_length_undefined	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_cable_length_undefined = 0xFF$/;"	e	enum:__anon46
e1000_cable_length_undefined	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_cable_length_undefined = 0xFF$/;"	e	enum:__anon135
e1000_cable_length_undefined	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_cable_length_undefined = 0xFF$/;"	e	enum:__anon78
e1000_calculate_mng_checksum	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_calculate_mng_checksum(char *buffer, uint32_t length)$/;"	f	file:
e1000_change_mtu	drivers/e1000-4.x/src/e1000_main.c	/^e1000_change_mtu(struct net_device *netdev, int new_mtu)$/;"	f	file:
e1000_change_mtu	drivers/e1000-5.x/src/e1000_main.c	/^e1000_change_mtu(struct net_device *netdev, int new_mtu)$/;"	f	file:
e1000_change_mtu	drivers/e1000-7.x/src/e1000_main.c	/^e1000_change_mtu(struct net_device *netdev, int new_mtu)$/;"	f	file:
e1000_check_64k_bound	drivers/e1000-5.x/src/e1000_main.c	/^e1000_check_64k_bound(struct e1000_adapter *adapter,$/;"	f	file:
e1000_check_64k_bound	drivers/e1000-7.x/src/e1000_main.c	/^e1000_check_64k_bound(struct e1000_adapter *adapter,$/;"	f	file:
e1000_check_copper_options	drivers/e1000-4.x/src/e1000_param.c	/^e1000_check_copper_options(struct e1000_adapter *adapter)$/;"	f	file:
e1000_check_copper_options	drivers/e1000-5.x/src/e1000_param.c	/^e1000_check_copper_options(struct e1000_adapter *adapter)$/;"	f	file:
e1000_check_copper_options	drivers/e1000-7.x/src/e1000_param.c	/^e1000_check_copper_options(struct e1000_adapter *adapter)$/;"	f	file:
e1000_check_downshift	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_check_downshift(struct e1000_hw *hw)$/;"	f
e1000_check_downshift	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_check_downshift(struct e1000_hw *hw)$/;"	f	file:
e1000_check_fiber_options	drivers/e1000-4.x/src/e1000_param.c	/^e1000_check_fiber_options(struct e1000_adapter *adapter)$/;"	f	file:
e1000_check_fiber_options	drivers/e1000-5.x/src/e1000_param.c	/^e1000_check_fiber_options(struct e1000_adapter *adapter)$/;"	f	file:
e1000_check_fiber_options	drivers/e1000-7.x/src/e1000_param.c	/^e1000_check_fiber_options(struct e1000_adapter *adapter)$/;"	f	file:
e1000_check_for_link	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_check_for_link(struct e1000_hw *hw)$/;"	f
e1000_check_for_link	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_check_for_link(struct e1000_hw *hw)$/;"	f
e1000_check_for_link	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_check_for_link(struct e1000_hw *hw)$/;"	f
e1000_check_lbtest_frame	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_check_lbtest_frame(struct sk_buff *skb,$/;"	f	file:
e1000_check_lbtest_frame	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_check_lbtest_frame(struct sk_buff *skb, unsigned int frame_size)$/;"	f	file:
e1000_check_lbtest_frame	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_check_lbtest_frame(struct sk_buff *skb, unsigned int frame_size)$/;"	f	file:
e1000_check_mng_mode	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_check_mng_mode(struct e1000_hw *hw)$/;"	f
e1000_check_options	drivers/e1000-4.x/src/e1000_param.c	/^e1000_check_options(struct e1000_adapter *adapter)$/;"	f
e1000_check_options	drivers/e1000-5.x/src/e1000_param.c	/^e1000_check_options(struct e1000_adapter *adapter)$/;"	f
e1000_check_options	drivers/e1000-7.x/src/e1000_param.c	/^e1000_check_options(struct e1000_adapter *adapter)$/;"	f
e1000_check_phy_reset_block	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_check_phy_reset_block(struct e1000_hw *hw)$/;"	f
e1000_check_polarity	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_check_polarity(struct e1000_hw *hw,$/;"	f
e1000_check_polarity	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_check_polarity(struct e1000_hw *hw,$/;"	f	file:
e1000_clean	drivers/e1000-5.x/src/e1000_main.c	/^e1000_clean(struct net_device *netdev, int *budget)$/;"	f	file:
e1000_clean	drivers/e1000-7.x/src/e1000_main.c	/^e1000_clean(struct net_device *poll_dev, int *budget)$/;"	f	file:
e1000_clean_all_rx_rings	drivers/e1000-7.x/src/e1000_main.c	/^e1000_clean_all_rx_rings(struct e1000_adapter *adapter)$/;"	f	file:
e1000_clean_all_tx_rings	drivers/e1000-7.x/src/e1000_main.c	/^e1000_clean_all_tx_rings(struct e1000_adapter *adapter)$/;"	f	file:
e1000_clean_rx_irq	drivers/e1000-4.x/src/e1000_main.c	/^e1000_clean_rx_irq(struct e1000_adapter *adapter)$/;"	f	file:
e1000_clean_rx_irq	drivers/e1000-5.x/src/e1000_main.c	/^e1000_clean_rx_irq(struct e1000_adapter *adapter, int *work_done,$/;"	f	file:
e1000_clean_rx_irq	drivers/e1000-7.x/src/e1000_main.c	/^e1000_clean_rx_irq(struct e1000_adapter *adapter,$/;"	f	file:
e1000_clean_rx_irq_ps	drivers/e1000-7.x/src/e1000_main.c	/^e1000_clean_rx_irq_ps(struct e1000_adapter *adapter,$/;"	f	file:
e1000_clean_rx_ring	drivers/e1000-4.x/src/e1000_main.c	/^e1000_clean_rx_ring(struct e1000_adapter *adapter)$/;"	f	file:
e1000_clean_rx_ring	drivers/e1000-5.x/src/e1000_main.c	/^e1000_clean_rx_ring(struct e1000_adapter *adapter)$/;"	f	file:
e1000_clean_rx_ring	drivers/e1000-7.x/src/e1000_main.c	/^e1000_clean_rx_ring(struct e1000_adapter *adapter,$/;"	f	file:
e1000_clean_tx_irq	drivers/e1000-4.x/src/e1000_main.c	/^e1000_clean_tx_irq(struct e1000_adapter *adapter)$/;"	f	file:
e1000_clean_tx_irq	drivers/e1000-5.x/src/e1000_main.c	/^e1000_clean_tx_irq(struct e1000_adapter *adapter)$/;"	f	file:
e1000_clean_tx_irq	drivers/e1000-7.x/src/e1000_main.c	/^e1000_clean_tx_irq(struct e1000_adapter *adapter,$/;"	f	file:
e1000_clean_tx_ring	drivers/e1000-4.x/src/e1000_main.c	/^e1000_clean_tx_ring(struct e1000_adapter *adapter)$/;"	f	file:
e1000_clean_tx_ring	drivers/e1000-5.x/src/e1000_main.c	/^e1000_clean_tx_ring(struct e1000_adapter *adapter)$/;"	f	file:
e1000_clean_tx_ring	drivers/e1000-7.x/src/e1000_main.c	/^e1000_clean_tx_ring(struct e1000_adapter *adapter,$/;"	f	file:
e1000_cleanup_eeprom	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_cleanup_eeprom(struct e1000_hw *hw)$/;"	f	file:
e1000_cleanup_led	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_cleanup_led(struct e1000_hw *hw)$/;"	f
e1000_cleanup_led	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_cleanup_led(struct e1000_hw *hw)$/;"	f
e1000_cleanup_led	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_cleanup_led(struct e1000_hw *hw)$/;"	f
e1000_clear_hw_cntrs	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_clear_hw_cntrs(struct e1000_hw *hw)$/;"	f
e1000_clear_hw_cntrs	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_clear_hw_cntrs(struct e1000_hw *hw)$/;"	f
e1000_clear_hw_cntrs	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_clear_hw_cntrs(struct e1000_hw *hw)$/;"	f
e1000_clear_vfta	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_clear_vfta(struct e1000_hw *hw)$/;"	f
e1000_clear_vfta	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_clear_vfta(struct e1000_hw *hw)$/;"	f
e1000_clear_vfta	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_clear_vfta(struct e1000_hw *hw)$/;"	f	file:
e1000_clock_eeprom	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_clock_eeprom(struct e1000_hw *hw)$/;"	f	file:
e1000_close	drivers/e1000-4.x/src/e1000_main.c	/^e1000_close(struct net_device *netdev)$/;"	f	file:
e1000_close	drivers/e1000-5.x/src/e1000_main.c	/^e1000_close(struct net_device *netdev)$/;"	f	file:
e1000_close	drivers/e1000-7.x/src/e1000_main.c	/^e1000_close(struct net_device *netdev)$/;"	f	file:
e1000_commit_shadow_ram	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_commit_shadow_ram(struct e1000_hw *hw)$/;"	f	file:
e1000_config_collision_dist	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_config_collision_dist(struct e1000_hw *hw)$/;"	f
e1000_config_collision_dist	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_config_collision_dist(struct e1000_hw *hw)$/;"	f
e1000_config_collision_dist	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_config_collision_dist(struct e1000_hw *hw)$/;"	f
e1000_config_dsp_after_link_change	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_config_dsp_after_link_change(struct e1000_hw *hw,$/;"	f
e1000_config_dsp_after_link_change	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_config_dsp_after_link_change(struct e1000_hw *hw,$/;"	f	file:
e1000_config_fc_after_link_up	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_config_fc_after_link_up(struct e1000_hw *hw)$/;"	f
e1000_config_fc_after_link_up	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_config_fc_after_link_up(struct e1000_hw *hw)$/;"	f
e1000_config_fc_after_link_up	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_config_fc_after_link_up(struct e1000_hw *hw)$/;"	f	file:
e1000_config_mac_to_phy	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_config_mac_to_phy(struct e1000_hw *hw)$/;"	f	file:
e1000_config_mac_to_phy	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_config_mac_to_phy(struct e1000_hw *hw)$/;"	f	file:
e1000_config_mac_to_phy	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_config_mac_to_phy(struct e1000_hw *hw)$/;"	f	file:
e1000_configure_kmrn_for_1000	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_configure_kmrn_for_1000(struct e1000_hw *hw)$/;"	f	file:
e1000_configure_kmrn_for_10_100	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_configure_kmrn_for_10_100(struct e1000_hw *hw, uint16_t duplex)$/;"	f	file:
e1000_configure_rx	drivers/e1000-4.x/src/e1000_main.c	/^e1000_configure_rx(struct e1000_adapter *adapter)$/;"	f	file:
e1000_configure_rx	drivers/e1000-5.x/src/e1000_main.c	/^e1000_configure_rx(struct e1000_adapter *adapter)$/;"	f	file:
e1000_configure_rx	drivers/e1000-7.x/src/e1000_main.c	/^e1000_configure_rx(struct e1000_adapter *adapter)$/;"	f	file:
e1000_configure_tx	drivers/e1000-4.x/src/e1000_main.c	/^e1000_configure_tx(struct e1000_adapter *adapter)$/;"	f	file:
e1000_configure_tx	drivers/e1000-5.x/src/e1000_main.c	/^e1000_configure_tx(struct e1000_adapter *adapter)$/;"	f	file:
e1000_configure_tx	drivers/e1000-7.x/src/e1000_main.c	/^e1000_configure_tx(struct e1000_adapter *adapter)$/;"	f	file:
e1000_context_desc	drivers/e1000-4.x/src/e1000_hw.h	/^struct e1000_context_desc {$/;"	s
e1000_context_desc	drivers/e1000-5.x/src/e1000_hw.h	/^struct e1000_context_desc {$/;"	s
e1000_context_desc	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_context_desc {$/;"	s
e1000_copper_link_autoneg	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_copper_link_autoneg(struct e1000_hw *hw)$/;"	f	file:
e1000_copper_link_ggp_setup	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_copper_link_ggp_setup(struct e1000_hw *hw)$/;"	f	file:
e1000_copper_link_igp_setup	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_copper_link_igp_setup(struct e1000_hw *hw)$/;"	f	file:
e1000_copper_link_mgp_setup	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_copper_link_mgp_setup(struct e1000_hw *hw)$/;"	f	file:
e1000_copper_link_postconfig	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_copper_link_postconfig(struct e1000_hw *hw)$/;"	f	file:
e1000_copper_link_preconfig	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_copper_link_preconfig(struct e1000_hw *hw)$/;"	f	file:
e1000_copyright	drivers/e1000-4.x/src/e1000_main.c	/^char e1000_copyright[] = "Copyright (c) 1999-2002 Intel Corporation.";$/;"	v
e1000_copyright	drivers/e1000-5.x/src/e1000_main.c	/^char e1000_copyright[] = "Copyright (c) 1999-2004 Intel Corporation.";$/;"	v
e1000_copyright	drivers/e1000-7.x/src/e1000_main.c	/^static char e1000_copyright[] = "Copyright (c) 1999-2006 Intel Corporation.";$/;"	v	file:
e1000_create_lbtest_frame	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_create_lbtest_frame(struct sk_buff *skb,$/;"	f	file:
e1000_create_lbtest_frame	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_create_lbtest_frame(struct sk_buff *skb, unsigned int frame_size)$/;"	f	file:
e1000_create_lbtest_frame	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_create_lbtest_frame(struct sk_buff *skb, unsigned int frame_size)$/;"	f	file:
e1000_data_desc	drivers/e1000-4.x/src/e1000_hw.h	/^struct e1000_data_desc {$/;"	s
e1000_data_desc	drivers/e1000-5.x/src/e1000_hw.h	/^struct e1000_data_desc {$/;"	s
e1000_data_desc	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_data_desc {$/;"	s
e1000_desc_ring	drivers/e1000-4.x/src/e1000.h	/^struct e1000_desc_ring {$/;"	s
e1000_desc_ring	drivers/e1000-5.x/src/e1000.h	/^struct e1000_desc_ring {$/;"	s
e1000_detect_gig_phy	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_detect_gig_phy(struct e1000_hw *hw)$/;"	f
e1000_detect_gig_phy	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_detect_gig_phy(struct e1000_hw *hw)$/;"	f
e1000_detect_gig_phy	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_detect_gig_phy(struct e1000_hw *hw)$/;"	f	file:
e1000_diag_eeprom_test	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_diag_eeprom_test(struct e1000_adapter *adapter,$/;"	f	file:
e1000_diag_intr	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_diag_intr(int irq,$/;"	f	file:
e1000_diag_intr_test	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_diag_intr_test(struct e1000_adapter *adapter,$/;"	f	file:
e1000_diag_ioctl	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_diag_ioctl(struct net_device *netdev,$/;"	f
e1000_diag_link_test	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_diag_link_test(struct e1000_adapter *adapter,$/;"	f	file:
e1000_diag_loopback_test	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_diag_loopback_test(struct e1000_adapter *adapter,$/;"	f	file:
e1000_diag_reg_test	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_diag_reg_test(struct e1000_adapter *adapter,$/;"	f	file:
e1000_diag_test	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_diag_test(struct net_device *netdev,$/;"	f	file:
e1000_diag_test	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_diag_test(struct net_device *netdev,$/;"	f	file:
e1000_diag_test_count	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_diag_test_count(struct net_device *netdev)$/;"	f	file:
e1000_diag_test_count	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_diag_test_count(struct net_device *netdev)$/;"	f	file:
e1000_disable_pciex_master	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_disable_pciex_master(struct e1000_hw *hw)$/;"	f
e1000_down	drivers/e1000-4.x/src/e1000_main.c	/^e1000_down(struct e1000_adapter *adapter)$/;"	f
e1000_down	drivers/e1000-5.x/src/e1000_main.c	/^e1000_down(struct e1000_adapter *adapter)$/;"	f
e1000_down	drivers/e1000-7.x/src/e1000_main.c	/^e1000_down(struct e1000_adapter *adapter)$/;"	f
e1000_downshift	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_downshift;$/;"	t	typeref:enum:__anon139
e1000_downshift	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_downshift;$/;"	t	typeref:enum:__anon83
e1000_downshift_activated	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_downshift_activated,$/;"	e	enum:__anon139
e1000_downshift_activated	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_downshift_activated,$/;"	e	enum:__anon83
e1000_downshift_normal	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_downshift_normal = 0,$/;"	e	enum:__anon139
e1000_downshift_normal	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_downshift_normal = 0,$/;"	e	enum:__anon83
e1000_downshift_undefined	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_downshift_undefined = 0xFF$/;"	e	enum:__anon139
e1000_downshift_undefined	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_downshift_undefined = 0xFF$/;"	e	enum:__anon83
e1000_driver	drivers/e1000-4.x/src/e1000_main.c	/^static struct pci_driver e1000_driver = {$/;"	v	typeref:struct:pci_driver	file:
e1000_driver	drivers/e1000-5.x/src/e1000_main.c	/^static struct pci_driver e1000_driver = {$/;"	v	typeref:struct:pci_driver	file:
e1000_driver	drivers/e1000-7.x/src/e1000_main.c	/^static struct pci_driver e1000_driver = {$/;"	v	typeref:struct:pci_driver	file:
e1000_driver_name	drivers/e1000-4.x/src/e1000_main.c	/^char e1000_driver_name[] = "e1000";$/;"	v
e1000_driver_name	drivers/e1000-5.x/src/e1000_main.c	/^char e1000_driver_name[] = "e1000";$/;"	v
e1000_driver_name	drivers/e1000-7.x/src/e1000_main.c	/^char e1000_driver_name[] = "e1000";$/;"	v
e1000_driver_string	drivers/e1000-4.x/src/e1000_main.c	/^char e1000_driver_string[] = "Intel(R) PRO\/1000 Network Driver";$/;"	v
e1000_driver_string	drivers/e1000-5.x/src/e1000_main.c	/^char e1000_driver_string[] = "Intel(R) PRO\/1000 Network Driver";$/;"	v
e1000_driver_string	drivers/e1000-7.x/src/e1000_main.c	/^static char e1000_driver_string[] = "Intel(R) PRO\/1000 Network Driver";$/;"	v	file:
e1000_driver_version	drivers/e1000-4.x/src/e1000_main.c	/^char e1000_driver_version[] = "4.3.15";$/;"	v
e1000_driver_version	drivers/e1000-5.x/src/e1000_main.c	/^char e1000_driver_version[] = "5.7.6"DRIVERNAPI;$/;"	v
e1000_driver_version	drivers/e1000-7.x/src/e1000_main.c	/^char e1000_driver_version[] = DRV_VERSION;$/;"	v
e1000_dsp_config	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_dsp_config;$/;"	t	typeref:enum:__anon147
e1000_dsp_config	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_dsp_config;$/;"	t	typeref:enum:__anon91
e1000_dsp_config_activated	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_dsp_config_activated,$/;"	e	enum:__anon147
e1000_dsp_config_activated	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_dsp_config_activated,$/;"	e	enum:__anon91
e1000_dsp_config_disabled	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_dsp_config_disabled = 0,$/;"	e	enum:__anon147
e1000_dsp_config_disabled	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_dsp_config_disabled = 0,$/;"	e	enum:__anon91
e1000_dsp_config_enabled	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_dsp_config_enabled,$/;"	e	enum:__anon147
e1000_dsp_config_enabled	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_dsp_config_enabled,$/;"	e	enum:__anon91
e1000_dsp_config_undefined	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_dsp_config_undefined = 0xFF$/;"	e	enum:__anon147
e1000_dsp_config_undefined	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_dsp_config_undefined = 0xFF$/;"	e	enum:__anon91
e1000_dword_align	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_dword_align = 2$/;"	e	enum:__anon148
e1000_dword_align	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_dword_align = 2$/;"	e	enum:__anon92
e1000_eeprom_flash	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_eeprom_flash,$/;"	e	enum:__anon72
e1000_eeprom_ich8	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_eeprom_ich8,$/;"	e	enum:__anon72
e1000_eeprom_info	drivers/e1000-5.x/src/e1000_hw.h	/^struct e1000_eeprom_info {$/;"	s
e1000_eeprom_info	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_eeprom_info {$/;"	s
e1000_eeprom_microwire	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_eeprom_microwire,$/;"	e	enum:__anon128
e1000_eeprom_microwire	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_eeprom_microwire,$/;"	e	enum:__anon72
e1000_eeprom_none	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_eeprom_none, \/* No NVM support *\/$/;"	e	enum:__anon72
e1000_eeprom_size	drivers/e1000-4.x/src/e1000_ethtool.c	/^e1000_eeprom_size(struct e1000_hw *hw)$/;"	f	file:
e1000_eeprom_spi	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_eeprom_spi,$/;"	e	enum:__anon128
e1000_eeprom_spi	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_eeprom_spi,$/;"	e	enum:__anon72
e1000_eeprom_test	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_eeprom_test(struct e1000_adapter *adapter, uint64_t *data)$/;"	f	file:
e1000_eeprom_test	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_eeprom_test(struct e1000_adapter *adapter, uint64_t *data)$/;"	f	file:
e1000_eeprom_type	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_eeprom_type;$/;"	t	typeref:enum:__anon128
e1000_eeprom_type	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_eeprom_type;$/;"	t	typeref:enum:__anon72
e1000_eeprom_uninitialized	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_eeprom_uninitialized = 0,$/;"	e	enum:__anon128
e1000_eeprom_uninitialized	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_eeprom_uninitialized = 0,$/;"	e	enum:__anon72
e1000_enable_mng_pass_thru	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_enable_mng_pass_thru(struct e1000_hw *hw)$/;"	f
e1000_enable_tx_pkt_filtering	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_enable_tx_pkt_filtering(struct e1000_hw *hw)$/;"	f
e1000_enter_82542_rst	drivers/e1000-4.x/src/e1000_main.c	/^e1000_enter_82542_rst(struct e1000_adapter *adapter)$/;"	f	file:
e1000_enter_82542_rst	drivers/e1000-5.x/src/e1000_main.c	/^e1000_enter_82542_rst(struct e1000_adapter *adapter)$/;"	f	file:
e1000_enter_82542_rst	drivers/e1000-7.x/src/e1000_main.c	/^e1000_enter_82542_rst(struct e1000_adapter *adapter)$/;"	f	file:
e1000_erase_ich8_4k_segment	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_erase_ich8_4k_segment(struct e1000_hw *hw, uint32_t bank)$/;"	f
e1000_err_handler	drivers/e1000-7.x/src/e1000_main.c	/^static struct pci_error_handlers e1000_err_handler = {$/;"	v	typeref:struct:pci_error_handlers	file:
e1000_ethtool_gdrvinfo	drivers/e1000-4.x/src/e1000_ethtool.c	/^e1000_ethtool_gdrvinfo(struct e1000_adapter *adapter,$/;"	f	file:
e1000_ethtool_geeprom	drivers/e1000-4.x/src/e1000_ethtool.c	/^e1000_ethtool_geeprom(struct e1000_adapter *adapter,$/;"	f	file:
e1000_ethtool_gregs	drivers/e1000-4.x/src/e1000_ethtool.c	/^e1000_ethtool_gregs(struct e1000_adapter *adapter,$/;"	f	file:
e1000_ethtool_gset	drivers/e1000-4.x/src/e1000_ethtool.c	/^e1000_ethtool_gset(struct e1000_adapter *adapter, struct ethtool_cmd *ecmd)$/;"	f	file:
e1000_ethtool_gwol	drivers/e1000-4.x/src/e1000_ethtool.c	/^e1000_ethtool_gwol(struct e1000_adapter *adapter, struct ethtool_wolinfo *wol)$/;"	f	file:
e1000_ethtool_ioctl	drivers/e1000-4.x/src/e1000_ethtool.c	/^e1000_ethtool_ioctl(struct net_device *netdev, struct ifreq *ifr)$/;"	f
e1000_ethtool_led_blink	drivers/e1000-4.x/src/e1000_ethtool.c	/^e1000_ethtool_led_blink(struct e1000_adapter *adapter, struct ethtool_value *id)$/;"	f	file:
e1000_ethtool_ops	drivers/e1000-5.x/src/e1000_ethtool.c	/^struct ethtool_ops e1000_ethtool_ops = {$/;"	v	typeref:struct:ethtool_ops
e1000_ethtool_ops	drivers/e1000-7.x/src/e1000_ethtool.c	/^static struct ethtool_ops e1000_ethtool_ops = {$/;"	v	typeref:struct:ethtool_ops	file:
e1000_ethtool_seeprom	drivers/e1000-4.x/src/e1000_ethtool.c	/^e1000_ethtool_seeprom(struct e1000_adapter *adapter,$/;"	f	file:
e1000_ethtool_sset	drivers/e1000-4.x/src/e1000_ethtool.c	/^e1000_ethtool_sset(struct e1000_adapter *adapter, struct ethtool_cmd *ecmd)$/;"	f	file:
e1000_ethtool_swol	drivers/e1000-4.x/src/e1000_ethtool.c	/^e1000_ethtool_swol(struct e1000_adapter *adapter, struct ethtool_wolinfo *wol)$/;"	f	file:
e1000_exit_module	drivers/e1000-4.x/src/e1000_main.c	/^e1000_exit_module(void)$/;"	f	file:
e1000_exit_module	drivers/e1000-4.x/src/e1000_main.c	/^module_exit(e1000_exit_module);$/;"	v
e1000_exit_module	drivers/e1000-5.x/src/e1000_main.c	/^e1000_exit_module(void)$/;"	f	file:
e1000_exit_module	drivers/e1000-5.x/src/e1000_main.c	/^module_exit(e1000_exit_module);$/;"	v
e1000_exit_module	drivers/e1000-7.x/src/e1000_main.c	/^e1000_exit_module(void)$/;"	f	file:
e1000_exit_module	drivers/e1000-7.x/src/e1000_main.c	/^module_exit(e1000_exit_module);$/;"	v
e1000_fc_default	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_fc_default = 0xFF$/;"	e	enum:__anon42
e1000_fc_default	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_fc_default = 0xFF$/;"	e	enum:__anon131
e1000_fc_full	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_fc_full = 3,$/;"	e	enum:__anon42
e1000_fc_full	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_fc_full = 3,$/;"	e	enum:__anon131
e1000_fc_none	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_fc_none = 0,$/;"	e	enum:__anon42
e1000_fc_none	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_fc_none = 0,$/;"	e	enum:__anon131
e1000_fc_rx_pause	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_fc_rx_pause = 1,$/;"	e	enum:__anon42
e1000_fc_rx_pause	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_fc_rx_pause = 1,$/;"	e	enum:__anon131
e1000_fc_tx_pause	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_fc_tx_pause = 2,$/;"	e	enum:__anon42
e1000_fc_tx_pause	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_fc_tx_pause = 2,$/;"	e	enum:__anon131
e1000_fc_type	drivers/e1000-4.x/src/e1000_hw.h	/^} e1000_fc_type;$/;"	t	typeref:enum:__anon42
e1000_fc_type	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_fc_type;$/;"	t	typeref:enum:__anon131
e1000_ffe_config	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_ffe_config;$/;"	t	typeref:enum:__anon146
e1000_ffe_config	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_ffe_config;$/;"	t	typeref:enum:__anon90
e1000_ffe_config_active	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_ffe_config_active,$/;"	e	enum:__anon146
e1000_ffe_config_active	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_ffe_config_active,$/;"	e	enum:__anon90
e1000_ffe_config_blocked	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_ffe_config_blocked$/;"	e	enum:__anon146
e1000_ffe_config_blocked	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_ffe_config_blocked$/;"	e	enum:__anon90
e1000_ffe_config_enabled	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_ffe_config_enabled = 0,$/;"	e	enum:__anon146
e1000_ffe_config_enabled	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_ffe_config_enabled = 0,$/;"	e	enum:__anon90
e1000_fflt_entry	drivers/e1000-4.x/src/e1000_hw.h	/^struct e1000_fflt_entry {$/;"	s
e1000_fflt_entry	drivers/e1000-5.x/src/e1000_hw.h	/^struct e1000_fflt_entry {$/;"	s
e1000_fflt_entry	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_fflt_entry {$/;"	s
e1000_ffmt_entry	drivers/e1000-4.x/src/e1000_hw.h	/^struct e1000_ffmt_entry {$/;"	s
e1000_ffmt_entry	drivers/e1000-5.x/src/e1000_hw.h	/^struct e1000_ffmt_entry {$/;"	s
e1000_ffmt_entry	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_ffmt_entry {$/;"	s
e1000_ffvt_entry	drivers/e1000-4.x/src/e1000_hw.h	/^struct e1000_ffvt_entry {$/;"	s
e1000_ffvt_entry	drivers/e1000-5.x/src/e1000_hw.h	/^struct e1000_ffvt_entry {$/;"	s
e1000_ffvt_entry	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_ffvt_entry {$/;"	s
e1000_force_mac_fc	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_force_mac_fc(struct e1000_hw *hw)$/;"	f	file:
e1000_force_mac_fc	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_force_mac_fc(struct e1000_hw *hw)$/;"	f
e1000_force_mac_fc	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_force_mac_fc(struct e1000_hw *hw)$/;"	f
e1000_free_all_rx_resources	drivers/e1000-7.x/src/e1000_main.c	/^e1000_free_all_rx_resources(struct e1000_adapter *adapter)$/;"	f
e1000_free_all_tx_resources	drivers/e1000-7.x/src/e1000_main.c	/^e1000_free_all_tx_resources(struct e1000_adapter *adapter)$/;"	f
e1000_free_desc_rings	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_free_desc_rings(struct e1000_adapter *adapter)$/;"	f	file:
e1000_free_desc_rings	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_free_desc_rings(struct e1000_adapter *adapter)$/;"	f	file:
e1000_free_desc_rings	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_free_desc_rings(struct e1000_adapter *adapter)$/;"	f	file:
e1000_free_irq	drivers/e1000-7.x/src/e1000_main.c	/^static void e1000_free_irq(struct e1000_adapter *adapter)$/;"	f	file:
e1000_free_rx_resources	drivers/e1000-4.x/src/e1000_main.c	/^e1000_free_rx_resources(struct e1000_adapter *adapter)$/;"	f	file:
e1000_free_rx_resources	drivers/e1000-5.x/src/e1000_main.c	/^e1000_free_rx_resources(struct e1000_adapter *adapter)$/;"	f
e1000_free_rx_resources	drivers/e1000-7.x/src/e1000_main.c	/^e1000_free_rx_resources(struct e1000_adapter *adapter,$/;"	f	file:
e1000_free_tx_resources	drivers/e1000-4.x/src/e1000_main.c	/^e1000_free_tx_resources(struct e1000_adapter *adapter)$/;"	f	file:
e1000_free_tx_resources	drivers/e1000-5.x/src/e1000_main.c	/^e1000_free_tx_resources(struct e1000_adapter *adapter)$/;"	f
e1000_free_tx_resources	drivers/e1000-7.x/src/e1000_main.c	/^e1000_free_tx_resources(struct e1000_adapter *adapter,$/;"	f	file:
e1000_get_auto_rd_done	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_get_auto_rd_done(struct e1000_hw *hw)$/;"	f	file:
e1000_get_bus_info	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_get_bus_info(struct e1000_hw *hw)$/;"	f
e1000_get_bus_info	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_get_bus_info(struct e1000_hw *hw)$/;"	f
e1000_get_bus_info	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_get_bus_info(struct e1000_hw *hw)$/;"	f
e1000_get_cable_length	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_get_cable_length(struct e1000_hw *hw,$/;"	f
e1000_get_cable_length	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_get_cable_length(struct e1000_hw *hw,$/;"	f	file:
e1000_get_drvinfo	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_get_drvinfo(struct net_device *netdev,$/;"	f	file:
e1000_get_drvinfo	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_get_drvinfo(struct net_device *netdev,$/;"	f	file:
e1000_get_eeprom	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_get_eeprom(struct net_device *netdev,$/;"	f	file:
e1000_get_eeprom	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_get_eeprom(struct net_device *netdev,$/;"	f	file:
e1000_get_eeprom_len	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_get_eeprom_len(struct net_device *netdev)$/;"	f	file:
e1000_get_eeprom_len	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_get_eeprom_len(struct net_device *netdev)$/;"	f	file:
e1000_get_ethtool_stats	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_get_ethtool_stats(struct net_device *netdev, $/;"	f	file:
e1000_get_ethtool_stats	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_get_ethtool_stats(struct net_device *netdev,$/;"	f	file:
e1000_get_hw_control	drivers/e1000-7.x/src/e1000_main.c	/^e1000_get_hw_control(struct e1000_adapter *adapter)$/;"	f	file:
e1000_get_hw_eeprom_semaphore	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_get_hw_eeprom_semaphore(struct e1000_hw *hw)$/;"	f	file:
e1000_get_msglevel	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_get_msglevel(struct net_device *netdev)$/;"	f	file:
e1000_get_msglevel	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_get_msglevel(struct net_device *netdev)$/;"	f	file:
e1000_get_pauseparam	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_get_pauseparam(struct net_device *netdev,$/;"	f	file:
e1000_get_pauseparam	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_get_pauseparam(struct net_device *netdev,$/;"	f	file:
e1000_get_phy_cfg_done	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_get_phy_cfg_done(struct e1000_hw *hw)$/;"	f	file:
e1000_get_regs	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_get_regs(struct net_device *netdev,$/;"	f	file:
e1000_get_regs	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_get_regs(struct net_device *netdev,$/;"	f	file:
e1000_get_regs_len	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_get_regs_len(struct net_device *netdev)$/;"	f	file:
e1000_get_regs_len	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_get_regs_len(struct net_device *netdev)$/;"	f	file:
e1000_get_ringparam	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_get_ringparam(struct net_device *netdev,$/;"	f	file:
e1000_get_ringparam	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_get_ringparam(struct net_device *netdev,$/;"	f	file:
e1000_get_rx_csum	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_get_rx_csum(struct net_device *netdev)$/;"	f	file:
e1000_get_rx_csum	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_get_rx_csum(struct net_device *netdev)$/;"	f	file:
e1000_get_settings	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_get_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)$/;"	f	file:
e1000_get_settings	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_get_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)$/;"	f	file:
e1000_get_software_flag	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_get_software_flag(struct e1000_hw *hw)$/;"	f	file:
e1000_get_software_semaphore	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_get_software_semaphore(struct e1000_hw *hw)$/;"	f	file:
e1000_get_speed_and_duplex	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_get_speed_and_duplex(struct e1000_hw *hw,$/;"	f
e1000_get_speed_and_duplex	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_get_speed_and_duplex(struct e1000_hw *hw,$/;"	f
e1000_get_speed_and_duplex	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_get_speed_and_duplex(struct e1000_hw *hw,$/;"	f
e1000_get_stats	drivers/e1000-4.x/src/e1000_main.c	/^e1000_get_stats(struct net_device *netdev)$/;"	f	file:
e1000_get_stats	drivers/e1000-5.x/src/e1000_main.c	/^e1000_get_stats(struct net_device *netdev)$/;"	f	file:
e1000_get_stats	drivers/e1000-7.x/src/e1000_main.c	/^e1000_get_stats(struct net_device *netdev)$/;"	f	file:
e1000_get_stats_count	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_get_stats_count(struct net_device *netdev)$/;"	f	file:
e1000_get_stats_count	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_get_stats_count(struct net_device *netdev)$/;"	f	file:
e1000_get_strings	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_get_strings(struct net_device *netdev, uint32_t stringset, uint8_t *data)$/;"	f	file:
e1000_get_strings	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_get_strings(struct net_device *netdev, uint32_t stringset, uint8_t *data)$/;"	f	file:
e1000_get_tx_csum	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_get_tx_csum(struct net_device *netdev)$/;"	f	file:
e1000_get_tx_csum	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_get_tx_csum(struct net_device *netdev)$/;"	f	file:
e1000_get_wol	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_get_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)$/;"	f	file:
e1000_get_wol	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_get_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)$/;"	f	file:
e1000_gg_cable_length	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_gg_cable_length;$/;"	t	typeref:enum:__anon79
e1000_gg_cable_length_115_150	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_gg_cable_length_115_150 = 2,$/;"	e	enum:__anon79
e1000_gg_cable_length_150	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_gg_cable_length_150 = 4$/;"	e	enum:__anon79
e1000_gg_cable_length_60	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_gg_cable_length_60 = 0,$/;"	e	enum:__anon79
e1000_gg_cable_length_60_115	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_gg_cable_length_60_115 = 1,$/;"	e	enum:__anon79
e1000_gstrings_stats	drivers/e1000-5.x/src/e1000_ethtool.c	/^static const struct e1000_stats e1000_gstrings_stats[] = {$/;"	v	typeref:struct:e1000_stats	file:
e1000_gstrings_stats	drivers/e1000-7.x/src/e1000_ethtool.c	/^static const struct e1000_stats e1000_gstrings_stats[] = {$/;"	v	typeref:struct:e1000_stats	file:
e1000_gstrings_test	drivers/e1000-5.x/src/e1000_ethtool.c	/^static const char e1000_gstrings_test[][ETH_GSTRING_LEN] = {$/;"	v	file:
e1000_gstrings_test	drivers/e1000-7.x/src/e1000_ethtool.c	/^static const char e1000_gstrings_test[][ETH_GSTRING_LEN] = {$/;"	v	file:
e1000_hash_mc_addr	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_hash_mc_addr(struct e1000_hw *hw,$/;"	f
e1000_hash_mc_addr	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_hash_mc_addr(struct e1000_hw *hw,$/;"	f
e1000_hash_mc_addr	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_hash_mc_addr(struct e1000_hw *hw,$/;"	f
e1000_host_command_header	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_host_command_header {$/;"	s
e1000_host_command_info	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_host_command_info {$/;"	s
e1000_host_if_read_cookie	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_host_if_read_cookie(struct e1000_hw * hw, uint8_t *buffer)$/;"	f	file:
e1000_host_mng_command_header	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_host_mng_command_header {$/;"	s
e1000_host_mng_command_info	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_host_mng_command_info {$/;"	s
e1000_host_mng_dhcp_cookie	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_host_mng_dhcp_cookie{$/;"	s
e1000_hw	drivers/e1000-4.x/src/e1000_hw.h	/^struct e1000_hw {$/;"	s
e1000_hw	drivers/e1000-5.x/src/e1000_hw.h	/^struct e1000_hw {$/;"	s
e1000_hw	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_hw {$/;"	s
e1000_hw_stats	drivers/e1000-4.x/src/e1000_hw.h	/^struct e1000_hw_stats {$/;"	s
e1000_hw_stats	drivers/e1000-5.x/src/e1000_hw.h	/^struct e1000_hw_stats {$/;"	s
e1000_hw_stats	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_hw_stats {$/;"	s
e1000_ich8_cycle_init	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_ich8_cycle_init(struct e1000_hw *hw)$/;"	f	file:
e1000_ich8_flash_cycle	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_ich8_flash_cycle(struct e1000_hw *hw, uint32_t timeout)$/;"	f	file:
e1000_ich8lan	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_ich8lan,$/;"	e	enum:__anon71
e1000_id_led_init	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_id_led_init(struct e1000_hw * hw)$/;"	f	file:
e1000_id_led_init	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_id_led_init(struct e1000_hw * hw)$/;"	f	file:
e1000_id_led_init	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_id_led_init(struct e1000_hw * hw)$/;"	f	file:
e1000_igp_2_cable_length_table	drivers/e1000-7.x/src/e1000_hw.c	/^uint16_t e1000_igp_2_cable_length_table[IGP02E1000_AGC_LENGTH_TABLE_SIZE] =$/;"	v	file:
e1000_igp_cable_length	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_igp_cable_length;$/;"	t	typeref:enum:__anon136
e1000_igp_cable_length	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_igp_cable_length;$/;"	t	typeref:enum:__anon80
e1000_igp_cable_length_10	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_10  = 10,$/;"	e	enum:__anon136
e1000_igp_cable_length_10	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_10  = 10,$/;"	e	enum:__anon80
e1000_igp_cable_length_100	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_100 = 100,$/;"	e	enum:__anon136
e1000_igp_cable_length_100	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_100 = 100,$/;"	e	enum:__anon80
e1000_igp_cable_length_110	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_110 = 110,$/;"	e	enum:__anon136
e1000_igp_cable_length_110	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_110 = 110,$/;"	e	enum:__anon80
e1000_igp_cable_length_115	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_115 = 115,$/;"	e	enum:__anon80
e1000_igp_cable_length_120	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_120 = 120,$/;"	e	enum:__anon136
e1000_igp_cable_length_120	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_120 = 120,$/;"	e	enum:__anon80
e1000_igp_cable_length_130	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_130 = 130,$/;"	e	enum:__anon136
e1000_igp_cable_length_130	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_130 = 130,$/;"	e	enum:__anon80
e1000_igp_cable_length_140	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_140 = 140,$/;"	e	enum:__anon136
e1000_igp_cable_length_140	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_140 = 140,$/;"	e	enum:__anon80
e1000_igp_cable_length_150	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_150 = 150,$/;"	e	enum:__anon136
e1000_igp_cable_length_150	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_150 = 150,$/;"	e	enum:__anon80
e1000_igp_cable_length_160	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_160 = 160,$/;"	e	enum:__anon136
e1000_igp_cable_length_160	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_160 = 160,$/;"	e	enum:__anon80
e1000_igp_cable_length_170	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_170 = 170,$/;"	e	enum:__anon136
e1000_igp_cable_length_170	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_170 = 170,$/;"	e	enum:__anon80
e1000_igp_cable_length_180	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_180 = 180$/;"	e	enum:__anon136
e1000_igp_cable_length_180	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_180 = 180$/;"	e	enum:__anon80
e1000_igp_cable_length_20	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_20  = 20,$/;"	e	enum:__anon136
e1000_igp_cable_length_20	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_20  = 20,$/;"	e	enum:__anon80
e1000_igp_cable_length_30	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_30  = 30,$/;"	e	enum:__anon136
e1000_igp_cable_length_30	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_30  = 30,$/;"	e	enum:__anon80
e1000_igp_cable_length_40	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_40  = 40,$/;"	e	enum:__anon136
e1000_igp_cable_length_40	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_40  = 40,$/;"	e	enum:__anon80
e1000_igp_cable_length_50	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_50  = 50,$/;"	e	enum:__anon136
e1000_igp_cable_length_50	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_50  = 50,$/;"	e	enum:__anon80
e1000_igp_cable_length_60	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_60  = 60,$/;"	e	enum:__anon136
e1000_igp_cable_length_60	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_60  = 60,$/;"	e	enum:__anon80
e1000_igp_cable_length_70	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_70  = 70,$/;"	e	enum:__anon136
e1000_igp_cable_length_70	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_70  = 70,$/;"	e	enum:__anon80
e1000_igp_cable_length_80	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_80  = 80,$/;"	e	enum:__anon136
e1000_igp_cable_length_80	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_80  = 80,$/;"	e	enum:__anon80
e1000_igp_cable_length_90	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_igp_cable_length_90  = 90,$/;"	e	enum:__anon136
e1000_igp_cable_length_90	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_igp_cable_length_90  = 90,$/;"	e	enum:__anon80
e1000_igp_cable_length_table	drivers/e1000-5.x/src/e1000_hw.c	/^uint16_t e1000_igp_cable_length_table[IGP01E1000_AGC_LENGTH_TABLE_SIZE] =$/;"	v	file:
e1000_igp_cable_length_table	drivers/e1000-7.x/src/e1000_hw.c	/^uint16_t e1000_igp_cable_length_table[IGP01E1000_AGC_LENGTH_TABLE_SIZE] =$/;"	v	file:
e1000_init_eeprom_params	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_init_eeprom_params(struct e1000_hw *hw)$/;"	f
e1000_init_eeprom_params	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_init_eeprom_params(struct e1000_hw *hw)$/;"	f
e1000_init_hw	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_init_hw(struct e1000_hw *hw)$/;"	f
e1000_init_hw	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_init_hw(struct e1000_hw *hw)$/;"	f
e1000_init_hw	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_init_hw(struct e1000_hw *hw)$/;"	f
e1000_init_lcd_from_nvm	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_init_lcd_from_nvm(struct e1000_hw *hw)$/;"	f	file:
e1000_init_lcd_from_nvm_config_region	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_init_lcd_from_nvm_config_region(struct e1000_hw *hw,$/;"	f	file:
e1000_init_manageability	drivers/e1000-7.x/src/e1000_main.c	/^e1000_init_manageability(struct e1000_adapter *adapter)$/;"	f	file:
e1000_init_module	drivers/e1000-4.x/src/e1000_main.c	/^e1000_init_module(void)$/;"	f	file:
e1000_init_module	drivers/e1000-4.x/src/e1000_main.c	/^module_init(e1000_init_module);$/;"	v
e1000_init_module	drivers/e1000-5.x/src/e1000_main.c	/^e1000_init_module(void)$/;"	f	file:
e1000_init_module	drivers/e1000-5.x/src/e1000_main.c	/^module_init(e1000_init_module);$/;"	v
e1000_init_module	drivers/e1000-7.x/src/e1000_main.c	/^e1000_init_module(void)$/;"	f	file:
e1000_init_module	drivers/e1000-7.x/src/e1000_main.c	/^module_init(e1000_init_module);$/;"	v
e1000_init_rx_addrs	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_init_rx_addrs(struct e1000_hw *hw)$/;"	f
e1000_init_rx_addrs	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_init_rx_addrs(struct e1000_hw *hw)$/;"	f
e1000_init_rx_addrs	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_init_rx_addrs(struct e1000_hw *hw)$/;"	f	file:
e1000_initialize_hardware_bits	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_initialize_hardware_bits(struct e1000_hw *hw)$/;"	f	file:
e1000_integrated_phy_loopback	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_integrated_phy_loopback(struct e1000_adapter *adapter,$/;"	f	file:
e1000_integrated_phy_loopback	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_integrated_phy_loopback(struct e1000_adapter *adapter)$/;"	f	file:
e1000_integrated_phy_loopback	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_integrated_phy_loopback(struct e1000_adapter *adapter)$/;"	f	file:
e1000_intr	drivers/e1000-4.x/src/e1000_main.c	/^e1000_intr(int irq, void *data, struct pt_regs *regs)$/;"	f	file:
e1000_intr	drivers/e1000-5.x/src/e1000_main.c	/^e1000_intr(int irq, void *data, struct pt_regs *regs)$/;"	f	file:
e1000_intr	drivers/e1000-7.x/src/e1000_main.c	/^e1000_intr(int irq, void *data)$/;"	f	file:
e1000_intr_msi	drivers/e1000-7.x/src/e1000_main.c	/^e1000_intr_msi(int irq, void *data)$/;"	f	file:
e1000_intr_test	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_intr_test(struct e1000_adapter *adapter, uint64_t *data)$/;"	f	file:
e1000_intr_test	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_intr_test(struct e1000_adapter *adapter, uint64_t *data)$/;"	f	file:
e1000_io_error_detected	drivers/e1000-7.x/src/e1000_main.c	/^static pci_ers_result_t e1000_io_error_detected(struct pci_dev *pdev, pci_channel_state_t state)$/;"	f	file:
e1000_io_read	drivers/e1000-4.x/src/e1000_main.c	/^e1000_io_read(struct e1000_hw *hw, uint32_t port)$/;"	f
e1000_io_read	drivers/e1000-5.x/src/e1000_main.c	/^e1000_io_read(struct e1000_hw *hw, unsigned long port)$/;"	f
e1000_io_read	drivers/e1000-7.x/src/e1000_main.c	/^e1000_io_read(struct e1000_hw *hw, unsigned long port)$/;"	f
e1000_io_resume	drivers/e1000-7.x/src/e1000_main.c	/^static void e1000_io_resume(struct pci_dev *pdev)$/;"	f	file:
e1000_io_slot_reset	drivers/e1000-7.x/src/e1000_main.c	/^static pci_ers_result_t e1000_io_slot_reset(struct pci_dev *pdev)$/;"	f	file:
e1000_io_write	drivers/e1000-4.x/src/e1000_main.c	/^e1000_io_write(struct e1000_hw *hw, uint32_t port, uint32_t value)$/;"	f
e1000_io_write	drivers/e1000-5.x/src/e1000_main.c	/^e1000_io_write(struct e1000_hw *hw, unsigned long port, uint32_t value)$/;"	f
e1000_io_write	drivers/e1000-7.x/src/e1000_main.c	/^e1000_io_write(struct e1000_hw *hw, unsigned long port, uint32_t value)$/;"	f
e1000_ioctl	drivers/e1000-4.x/src/e1000_main.c	/^e1000_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)$/;"	f	file:
e1000_ioctl	drivers/e1000-5.x/src/e1000_main.c	/^e1000_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)$/;"	f	file:
e1000_ioctl	drivers/e1000-7.x/src/e1000_main.c	/^e1000_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)$/;"	f	file:
e1000_ipv4_at_entry	drivers/e1000-4.x/src/e1000_hw.h	/^struct e1000_ipv4_at_entry {$/;"	s
e1000_ipv4_at_entry	drivers/e1000-5.x/src/e1000_hw.h	/^struct e1000_ipv4_at_entry {$/;"	s
e1000_ipv4_at_entry	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_ipv4_at_entry {$/;"	s
e1000_ipv6_at_entry	drivers/e1000-4.x/src/e1000_hw.h	/^struct e1000_ipv6_at_entry {$/;"	s
e1000_ipv6_at_entry	drivers/e1000-5.x/src/e1000_hw.h	/^struct e1000_ipv6_at_entry {$/;"	s
e1000_ipv6_at_entry	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_ipv6_at_entry {$/;"	s
e1000_irq_disable	drivers/e1000-4.x/src/e1000_main.c	/^e1000_irq_disable(struct e1000_adapter *adapter)$/;"	f	file:
e1000_irq_disable	drivers/e1000-5.x/src/e1000_main.c	/^e1000_irq_disable(struct e1000_adapter *adapter)$/;"	f	file:
e1000_irq_disable	drivers/e1000-7.x/src/e1000_main.c	/^e1000_irq_disable(struct e1000_adapter *adapter)$/;"	f	file:
e1000_irq_enable	drivers/e1000-4.x/src/e1000_main.c	/^e1000_irq_enable(struct e1000_adapter *adapter)$/;"	f	file:
e1000_irq_enable	drivers/e1000-5.x/src/e1000_main.c	/^e1000_irq_enable(struct e1000_adapter *adapter)$/;"	f	file:
e1000_irq_enable	drivers/e1000-7.x/src/e1000_main.c	/^e1000_irq_enable(struct e1000_adapter *adapter)$/;"	f	file:
e1000_is_onboard_nvm_eeprom	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_is_onboard_nvm_eeprom(struct e1000_hw *hw)$/;"	f	file:
e1000_kumeran_lock_loss_workaround	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_kumeran_lock_loss_workaround(struct e1000_hw *hw)$/;"	f	file:
e1000_leave_82542_rst	drivers/e1000-4.x/src/e1000_main.c	/^e1000_leave_82542_rst(struct e1000_adapter *adapter)$/;"	f	file:
e1000_leave_82542_rst	drivers/e1000-5.x/src/e1000_main.c	/^e1000_leave_82542_rst(struct e1000_adapter *adapter)$/;"	f	file:
e1000_leave_82542_rst	drivers/e1000-7.x/src/e1000_main.c	/^e1000_leave_82542_rst(struct e1000_adapter *adapter)$/;"	f	file:
e1000_led_blink_callback	drivers/e1000-4.x/src/e1000_ethtool.c	/^e1000_led_blink_callback(unsigned long data)$/;"	f	file:
e1000_led_blink_callback	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_led_blink_callback(unsigned long data)$/;"	f	file:
e1000_led_blink_callback	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_led_blink_callback(unsigned long data)$/;"	f	file:
e1000_led_off	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_led_off(struct e1000_hw *hw)$/;"	f
e1000_led_off	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_led_off(struct e1000_hw *hw)$/;"	f
e1000_led_off	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_led_off(struct e1000_hw *hw)$/;"	f
e1000_led_on	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_led_on(struct e1000_hw *hw)$/;"	f
e1000_led_on	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_led_on(struct e1000_hw *hw)$/;"	f
e1000_led_on	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_led_on(struct e1000_hw *hw)$/;"	f
e1000_link_test	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_link_test(struct e1000_adapter *adapter, uint64_t *data)$/;"	f	file:
e1000_link_test	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_link_test(struct e1000_adapter *adapter, uint64_t *data)$/;"	f	file:
e1000_loopback_cleanup	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_loopback_cleanup(struct e1000_adapter *adapter)$/;"	f	file:
e1000_loopback_cleanup	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_loopback_cleanup(struct e1000_adapter *adapter)$/;"	f	file:
e1000_loopback_test	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_loopback_test(struct e1000_adapter *adapter)$/;"	f	file:
e1000_loopback_test	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_loopback_test(struct e1000_adapter *adapter, uint64_t *data)$/;"	f	file:
e1000_loopback_test	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_loopback_test(struct e1000_adapter *adapter, uint64_t *data)$/;"	f	file:
e1000_lower_ee_clk	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_lower_ee_clk(struct e1000_hw *hw,$/;"	f	file:
e1000_lower_ee_clk	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_lower_ee_clk(struct e1000_hw *hw,$/;"	f	file:
e1000_lower_ee_clk	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_lower_ee_clk(struct e1000_hw *hw,$/;"	f	file:
e1000_lower_mdi_clk	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_lower_mdi_clk(struct e1000_hw *hw,$/;"	f	file:
e1000_lower_mdi_clk	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_lower_mdi_clk(struct e1000_hw *hw,$/;"	f	file:
e1000_lower_mdi_clk	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_lower_mdi_clk(struct e1000_hw *hw,$/;"	f	file:
e1000_mac_type	drivers/e1000-4.x/src/e1000_hw.h	/^} e1000_mac_type;$/;"	t	typeref:enum:__anon39
e1000_mac_type	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_mac_type;$/;"	t	typeref:enum:__anon127
e1000_mac_type	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_mac_type;$/;"	t	typeref:enum:__anon71
e1000_maybe_stop_tx	drivers/e1000-7.x/src/e1000_main.c	/^static int e1000_maybe_stop_tx(struct net_device *netdev,$/;"	f	file:
e1000_mc_addr_list_update	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_mc_addr_list_update(struct e1000_hw *hw,$/;"	f
e1000_mc_addr_list_update	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_mc_addr_list_update(struct e1000_hw *hw,$/;"	f
e1000_mc_addr_list_update	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_mc_addr_list_update(struct e1000_hw *hw,$/;"	f
e1000_media_type	drivers/e1000-4.x/src/e1000_hw.h	/^} e1000_media_type;$/;"	t	typeref:enum:__anon40
e1000_media_type	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_media_type;$/;"	t	typeref:enum:__anon129
e1000_media_type	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_media_type;$/;"	t	typeref:enum:__anon73
e1000_media_type_copper	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_media_type_copper = 0,$/;"	e	enum:__anon40
e1000_media_type_copper	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_media_type_copper = 0,$/;"	e	enum:__anon129
e1000_media_type_copper	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_media_type_copper = 0,$/;"	e	enum:__anon73
e1000_media_type_fiber	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_media_type_fiber = 1,$/;"	e	enum:__anon40
e1000_media_type_fiber	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_media_type_fiber = 1,$/;"	e	enum:__anon129
e1000_media_type_fiber	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_media_type_fiber = 1,$/;"	e	enum:__anon73
e1000_media_type_internal_serdes	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_media_type_internal_serdes = 2,$/;"	e	enum:__anon129
e1000_media_type_internal_serdes	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_media_type_internal_serdes = 2,$/;"	e	enum:__anon73
e1000_mii_ioctl	drivers/e1000-5.x/src/e1000_main.c	/^e1000_mii_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)$/;"	f	file:
e1000_mii_ioctl	drivers/e1000-7.x/src/e1000_main.c	/^e1000_mii_ioctl(struct net_device *netdev, struct ifreq *ifr, int cmd)$/;"	f	file:
e1000_mng_enable_host_if	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_mng_enable_host_if(struct e1000_hw * hw)$/;"	f	file:
e1000_mng_host_if_write	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_mng_host_if_write(struct e1000_hw * hw, uint8_t *buffer,$/;"	f	file:
e1000_mng_mode	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_mng_mode;$/;"	t	typeref:enum:__anon120
e1000_mng_mode_asf	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_mng_mode_asf,$/;"	e	enum:__anon120
e1000_mng_mode_host_interface_only	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_mng_mode_host_interface_only$/;"	e	enum:__anon120
e1000_mng_mode_ipmi	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_mng_mode_ipmi,$/;"	e	enum:__anon120
e1000_mng_mode_none	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_mng_mode_none     = 0,$/;"	e	enum:__anon120
e1000_mng_mode_pt	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_mng_mode_pt,$/;"	e	enum:__anon120
e1000_mng_write_cmd_header	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_mng_write_cmd_header(struct e1000_hw * hw,$/;"	f	file:
e1000_mng_write_commit	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_mng_write_commit(struct e1000_hw * hw)$/;"	f	file:
e1000_mng_write_dhcp_info	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_mng_write_dhcp_info(struct e1000_hw * hw, uint8_t *buffer,$/;"	f
e1000_ms_auto	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_ms_auto$/;"	e	enum:__anon145
e1000_ms_auto	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_ms_auto$/;"	e	enum:__anon89
e1000_ms_force_master	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_ms_force_master,$/;"	e	enum:__anon145
e1000_ms_force_master	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_ms_force_master,$/;"	e	enum:__anon89
e1000_ms_force_slave	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_ms_force_slave,$/;"	e	enum:__anon145
e1000_ms_force_slave	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_ms_force_slave,$/;"	e	enum:__anon89
e1000_ms_hw_default	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_ms_hw_default = 0,$/;"	e	enum:__anon145
e1000_ms_hw_default	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_ms_hw_default = 0,$/;"	e	enum:__anon89
e1000_ms_type	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_ms_type;$/;"	t	typeref:enum:__anon145
e1000_ms_type	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_ms_type;$/;"	t	typeref:enum:__anon89
e1000_mta_set	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_mta_set(struct e1000_hw *hw,$/;"	f
e1000_mta_set	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_mta_set(struct e1000_hw *hw,$/;"	f
e1000_mta_set	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_mta_set(struct e1000_hw *hw,$/;"	f
e1000_netpoll	drivers/e1000-5.x/src/e1000_main.c	/^e1000_netpoll (struct net_device *netdev)$/;"	f	file:
e1000_netpoll	drivers/e1000-7.x/src/e1000_main.c	/^e1000_netpoll(struct net_device *netdev)$/;"	f	file:
e1000_nonintegrated_phy_loopback	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_nonintegrated_phy_loopback(struct e1000_adapter *adapter)$/;"	f	file:
e1000_nonintegrated_phy_loopback	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_nonintegrated_phy_loopback(struct e1000_adapter *adapter)$/;"	f	file:
e1000_nonintegrated_phy_loopback	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_nonintegrated_phy_loopback(struct e1000_adapter *adapter)$/;"	f	file:
e1000_notifier	drivers/e1000-4.x/src/e1000_main.c	/^struct notifier_block e1000_notifier = {$/;"	v	typeref:struct:notifier_block
e1000_notifier_reboot	drivers/e1000-5.x/src/e1000_main.c	/^struct notifier_block e1000_notifier_reboot = {$/;"	v	typeref:struct:notifier_block
e1000_notifier_reboot	drivers/e1000-7.x/src/e1000_main.c	/^static struct notifier_block e1000_notifier_reboot = {$/;"	v	typeref:struct:notifier_block	file:
e1000_notify_reboot	drivers/e1000-4.x/src/e1000_main.c	/^e1000_notify_reboot(struct notifier_block *nb, unsigned long event, void *p)$/;"	f	file:
e1000_notify_reboot	drivers/e1000-5.x/src/e1000_main.c	/^e1000_notify_reboot(struct notifier_block *nb, unsigned long event, void *p)$/;"	f	file:
e1000_notify_reboot	drivers/e1000-7.x/src/e1000_main.c	/^e1000_notify_reboot(struct notifier_block *nb, unsigned long event, void *p)$/;"	f	file:
e1000_num_eeprom_types	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_num_eeprom_types$/;"	e	enum:__anon128
e1000_num_eeprom_types	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_num_eeprom_types$/;"	e	enum:__anon72
e1000_num_macs	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_num_macs$/;"	e	enum:__anon39
e1000_num_macs	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_num_macs$/;"	e	enum:__anon127
e1000_num_macs	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_num_macs$/;"	e	enum:__anon71
e1000_num_media_types	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_num_media_types$/;"	e	enum:__anon40
e1000_num_media_types	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_num_media_types$/;"	e	enum:__anon129
e1000_num_media_types	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_num_media_types$/;"	e	enum:__anon73
e1000_nway_reset	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_nway_reset(struct net_device *netdev)$/;"	f	file:
e1000_nway_reset	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_nway_reset(struct net_device *netdev)$/;"	f	file:
e1000_open	drivers/e1000-4.x/src/e1000_main.c	/^e1000_open(struct net_device *netdev)$/;"	f	file:
e1000_open	drivers/e1000-5.x/src/e1000_main.c	/^e1000_open(struct net_device *netdev)$/;"	f	file:
e1000_open	drivers/e1000-7.x/src/e1000_main.c	/^e1000_open(struct net_device *netdev)$/;"	f	file:
e1000_opt_list	drivers/e1000-4.x/src/e1000_param.c	/^			struct e1000_opt_list { int i; char *str; } *p;$/;"	s	struct:e1000_option::__anon67::__anon69	file:
e1000_opt_list	drivers/e1000-5.x/src/e1000_param.c	/^			struct e1000_opt_list { int i; char *str; } *p;$/;"	s	struct:e1000_option::__anon164::__anon166	file:
e1000_opt_list	drivers/e1000-7.x/src/e1000_param.c	/^			struct e1000_opt_list { int i; char *str; } *p;$/;"	s	struct:e1000_option::__anon122::__anon124	file:
e1000_option	drivers/e1000-4.x/src/e1000_param.c	/^struct e1000_option {$/;"	s	file:
e1000_option	drivers/e1000-5.x/src/e1000_param.c	/^struct e1000_option {$/;"	s	file:
e1000_option	drivers/e1000-7.x/src/e1000_param.c	/^struct e1000_option {$/;"	s	file:
e1000_pci_clear_mwi	drivers/e1000-4.x/src/e1000_main.c	/^e1000_pci_clear_mwi(struct e1000_hw *hw)$/;"	f
e1000_pci_clear_mwi	drivers/e1000-5.x/src/e1000_main.c	/^e1000_pci_clear_mwi(struct e1000_hw *hw)$/;"	f
e1000_pci_clear_mwi	drivers/e1000-7.x/src/e1000_main.c	/^e1000_pci_clear_mwi(struct e1000_hw *hw)$/;"	f
e1000_pci_restore_state	drivers/e1000-7.x/src/e1000_main.c	/^e1000_pci_restore_state(struct e1000_adapter *adapter)$/;"	f	file:
e1000_pci_save_state	drivers/e1000-7.x/src/e1000_main.c	/^e1000_pci_save_state(struct e1000_adapter *adapter)$/;"	f	file:
e1000_pci_set_mwi	drivers/e1000-4.x/src/e1000_main.c	/^e1000_pci_set_mwi(struct e1000_hw *hw)$/;"	f
e1000_pci_set_mwi	drivers/e1000-5.x/src/e1000_main.c	/^e1000_pci_set_mwi(struct e1000_hw *hw)$/;"	f
e1000_pci_set_mwi	drivers/e1000-7.x/src/e1000_main.c	/^e1000_pci_set_mwi(struct e1000_hw *hw)$/;"	f
e1000_pci_tbl	drivers/e1000-5.x/src/e1000_main.c	/^static struct pci_device_id e1000_pci_tbl[] = {$/;"	v	typeref:struct:pci_device_id	file:
e1000_pci_tbl	drivers/e1000-7.x/src/e1000_main.c	/^static struct pci_device_id e1000_pci_tbl[] = {$/;"	v	typeref:struct:pci_device_id	file:
e1000_phy_disable_receiver	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_phy_disable_receiver(struct e1000_adapter *adapter)$/;"	f	file:
e1000_phy_disable_receiver	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_phy_disable_receiver(struct e1000_adapter *adapter)$/;"	f	file:
e1000_phy_disable_receiver	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_phy_disable_receiver(struct e1000_adapter *adapter)$/;"	f	file:
e1000_phy_force_speed_duplex	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_phy_force_speed_duplex(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_force_speed_duplex	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_phy_force_speed_duplex(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_force_speed_duplex	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_phy_force_speed_duplex(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_get_info	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_phy_get_info(struct e1000_hw *hw,$/;"	f
e1000_phy_get_info	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_phy_get_info(struct e1000_hw *hw,$/;"	f
e1000_phy_get_info	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_phy_get_info(struct e1000_hw *hw,$/;"	f
e1000_phy_gg82563	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_phy_gg82563,$/;"	e	enum:__anon88
e1000_phy_hw_reset	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_phy_hw_reset(struct e1000_hw *hw)$/;"	f
e1000_phy_hw_reset	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_phy_hw_reset(struct e1000_hw *hw)$/;"	f
e1000_phy_hw_reset	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_phy_hw_reset(struct e1000_hw *hw)$/;"	f
e1000_phy_ife	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_phy_ife,$/;"	e	enum:__anon88
e1000_phy_ife_get_info	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_phy_ife_get_info(struct e1000_hw *hw,$/;"	f	file:
e1000_phy_igp	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_phy_igp,$/;"	e	enum:__anon144
e1000_phy_igp	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_phy_igp,$/;"	e	enum:__anon88
e1000_phy_igp_2	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_phy_igp_2,$/;"	e	enum:__anon88
e1000_phy_igp_3	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_phy_igp_3,$/;"	e	enum:__anon88
e1000_phy_igp_get_info	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_phy_igp_get_info(struct e1000_hw *hw,$/;"	f
e1000_phy_igp_get_info	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_phy_igp_get_info(struct e1000_hw *hw,$/;"	f	file:
e1000_phy_info	drivers/e1000-4.x/src/e1000_hw.h	/^struct e1000_phy_info {$/;"	s
e1000_phy_info	drivers/e1000-5.x/src/e1000_hw.h	/^struct e1000_phy_info {$/;"	s
e1000_phy_info	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_phy_info {$/;"	s
e1000_phy_init_script	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_phy_init_script(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_init_script	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_phy_init_script(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_m88	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_phy_m88 = 0,$/;"	e	enum:__anon144
e1000_phy_m88	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_phy_m88 = 0,$/;"	e	enum:__anon88
e1000_phy_m88_get_info	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_phy_m88_get_info(struct e1000_hw *hw,$/;"	f
e1000_phy_m88_get_info	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_phy_m88_get_info(struct e1000_hw *hw,$/;"	f	file:
e1000_phy_powerdown_workaround	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_phy_powerdown_workaround(struct e1000_hw *hw)$/;"	f
e1000_phy_reset	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_phy_reset(struct e1000_hw *hw)$/;"	f
e1000_phy_reset	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_phy_reset(struct e1000_hw *hw)$/;"	f
e1000_phy_reset	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_phy_reset(struct e1000_hw *hw)$/;"	f
e1000_phy_reset_clk_and_crs	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_phy_reset_clk_and_crs(struct e1000_adapter *adapter)$/;"	f	file:
e1000_phy_reset_clk_and_crs	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_phy_reset_clk_and_crs(struct e1000_adapter *adapter)$/;"	f	file:
e1000_phy_reset_clk_and_crs	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_phy_reset_clk_and_crs(struct e1000_adapter *adapter)$/;"	f	file:
e1000_phy_reset_dsp	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_phy_reset_dsp(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_reset_dsp	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_phy_reset_dsp(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_reset_dsp	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_phy_reset_dsp(struct e1000_hw *hw)$/;"	f	file:
e1000_phy_setup_autoneg	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_phy_setup_autoneg(struct e1000_hw *hw)$/;"	f
e1000_phy_setup_autoneg	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_phy_setup_autoneg(struct e1000_hw *hw)$/;"	f
e1000_phy_setup_autoneg	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_phy_setup_autoneg(struct e1000_hw *hw)$/;"	f
e1000_phy_stats	drivers/e1000-4.x/src/e1000_hw.h	/^struct e1000_phy_stats {$/;"	s
e1000_phy_stats	drivers/e1000-5.x/src/e1000_hw.h	/^struct e1000_phy_stats {$/;"	s
e1000_phy_stats	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_phy_stats {$/;"	s
e1000_phy_type	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_phy_type;$/;"	t	typeref:enum:__anon144
e1000_phy_type	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_phy_type;$/;"	t	typeref:enum:__anon88
e1000_phy_undefined	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_phy_undefined = 0xFF$/;"	e	enum:__anon144
e1000_phy_undefined	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_phy_undefined = 0xFF$/;"	e	enum:__anon88
e1000_phys_id	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_phys_id(struct net_device *netdev, uint32_t data)$/;"	f	file:
e1000_phys_id	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_phys_id(struct net_device *netdev, uint32_t data)$/;"	f	file:
e1000_polarity_reversal	drivers/e1000-4.x/src/e1000_hw.h	/^} e1000_polarity_reversal;$/;"	t	typeref:enum:__anon49
e1000_polarity_reversal	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_polarity_reversal;$/;"	t	typeref:enum:__anon141
e1000_polarity_reversal	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_polarity_reversal;$/;"	t	typeref:enum:__anon85
e1000_polarity_reversal_disabled	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_polarity_reversal_disabled,$/;"	e	enum:__anon49
e1000_polarity_reversal_disabled	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_polarity_reversal_disabled,$/;"	e	enum:__anon141
e1000_polarity_reversal_disabled	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_polarity_reversal_disabled,$/;"	e	enum:__anon85
e1000_polarity_reversal_enabled	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_polarity_reversal_enabled = 0,$/;"	e	enum:__anon49
e1000_polarity_reversal_enabled	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_polarity_reversal_enabled = 0,$/;"	e	enum:__anon141
e1000_polarity_reversal_enabled	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_polarity_reversal_enabled = 0,$/;"	e	enum:__anon85
e1000_polarity_reversal_undefined	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_polarity_reversal_undefined = 0xFF$/;"	e	enum:__anon49
e1000_polarity_reversal_undefined	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_polarity_reversal_undefined = 0xFF$/;"	e	enum:__anon141
e1000_polarity_reversal_undefined	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_polarity_reversal_undefined = 0xFF$/;"	e	enum:__anon85
e1000_polarity_reversal_workaround	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_polarity_reversal_workaround(struct e1000_hw *hw)$/;"	f	file:
e1000_polarity_reversal_workaround	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_polarity_reversal_workaround(struct e1000_hw *hw)$/;"	f	file:
e1000_poll_eerd_eewr_done	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_poll_eerd_eewr_done(struct e1000_hw *hw, int eerd)$/;"	f	file:
e1000_poll_off	drivers/e1000-4.x/src/e1000_main.c	/^e1000_poll_off(struct net_device *dev)$/;"	f	file:
e1000_poll_off	drivers/e1000-5.x/src/e1000_main.c	/^e1000_poll_off(struct net_device *dev)$/;"	f	file:
e1000_poll_off	drivers/e1000-7.x/src/e1000_main.c	/^e1000_poll_off(struct net_device *dev)$/;"	f	file:
e1000_poll_on	drivers/e1000-4.x/src/e1000_main.c	/^e1000_poll_on(struct net_device *dev)$/;"	f	file:
e1000_poll_on	drivers/e1000-5.x/src/e1000_main.c	/^e1000_poll_on(struct net_device *dev)$/;"	f	file:
e1000_poll_on	drivers/e1000-7.x/src/e1000_main.c	/^e1000_poll_on(struct net_device *dev)$/;"	f	file:
e1000_power_down_phy	drivers/e1000-7.x/src/e1000_main.c	/^static void e1000_power_down_phy(struct e1000_adapter *adapter)$/;"	f	file:
e1000_power_up_phy	drivers/e1000-7.x/src/e1000_main.c	/^void e1000_power_up_phy(struct e1000_adapter *adapter)$/;"	f
e1000_print_rx_buffer_info	drivers/e1000-7.x/src/e1000_main.c	/^void e1000_print_rx_buffer_info(struct e1000_buffer *bi)$/;"	f
e1000_print_rx_desc	drivers/e1000-7.x/src/e1000_main.c	/^void e1000_print_rx_desc(struct e1000_rx_desc *rx_desc)$/;"	f
e1000_print_rx_desc_ring	drivers/e1000-7.x/src/e1000_main.c	/^void e1000_print_rx_desc_ring(struct e1000_desc_ring *desc_ring)$/;"	f
e1000_print_skb	drivers/e1000-7.x/src/e1000_main.c	/^void e1000_print_skb(struct sk_buff* skb) $/;"	f
e1000_probe	drivers/e1000-4.x/src/e1000_main.c	/^e1000_probe(struct pci_dev *pdev,$/;"	f	file:
e1000_probe	drivers/e1000-5.x/src/e1000_main.c	/^e1000_probe(struct pci_dev *pdev,$/;"	f	file:
e1000_probe	drivers/e1000-7.x/src/e1000_main.c	/^e1000_probe(struct pci_dev *pdev,$/;"	f	file:
e1000_proc_bus_speed	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_bus_speed(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_bus_type	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_bus_type(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_bus_width	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_bus_width(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_cable_length	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_cable_length(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_cable_polarity	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_cable_polarity(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_dev_free	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_dev_free(struct e1000_adapter *adapter)$/;"	f
e1000_proc_dev_free	drivers/e1000-4.x/src/e1000_proc.c	/^void __devexit e1000_proc_dev_free(struct e1000_adapter *adapter) {}$/;"	f
e1000_proc_dev_setup	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_dev_setup(struct e1000_adapter *adapter)$/;"	f
e1000_proc_dev_setup	drivers/e1000-4.x/src/e1000_proc.c	/^void __devinit e1000_proc_dev_setup(struct e1000_adapter *adapter) {}$/;"	f
e1000_proc_dirs_create	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_dirs_create(void *data, char *name, $/;"	f	file:
e1000_proc_dirs_free	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_dirs_free(char *name, struct list_head *proc_list_head)$/;"	f	file:
e1000_proc_extended	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_extended(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_hex	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_hex(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_hwaddr	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_hwaddr(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_info_read	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_info_read(char *page, char **start, off_t off,$/;"	f	file:
e1000_proc_link	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_link(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_link_duplex	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_link_duplex(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_link_speed	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_link_speed(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_list_add	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_list_add(struct list_head *proc_list_head, char *tag,$/;"	f	file:
e1000_proc_list_free	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_list_free(struct list_head *proc_list_head)$/;"	f	file:
e1000_proc_list_setup	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_list_setup(struct e1000_adapter *adapter)$/;"	f	file:
e1000_proc_mdi_x_enabled	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_mdi_x_enabled(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_media_type	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_media_type(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_part_number	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_part_number(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_polarity_correction	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_polarity_correction(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_read	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_read(char *page, char **start, off_t off, int count, int *eof)$/;"	f	file:
e1000_proc_rx_status	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_rx_status(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_single_read	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_single_read(char *page, char **start, off_t off,$/;"	f	file:
e1000_proc_singles_create	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_singles_create(struct proc_dir_entry *parent,$/;"	f	file:
e1000_proc_slot	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_slot(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_state	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_state(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_str	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_str(void *data, size_t len, char *buf)$/;"	f	file:
e1000_proc_unsigned	drivers/e1000-4.x/src/e1000_proc.c	/^e1000_proc_unsigned(void *data, size_t len, char *buf)$/;"	f	file:
e1000_ps_page	drivers/e1000-7.x/src/e1000.h	/^struct e1000_ps_page { struct page *ps_page[PS_PAGE_BUFFERS]; };$/;"	s
e1000_ps_page_dma	drivers/e1000-7.x/src/e1000.h	/^struct e1000_ps_page_dma { uint64_t ps_page_dma[PS_PAGE_BUFFERS]; };$/;"	s
e1000_put_hw_eeprom_semaphore	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_put_hw_eeprom_semaphore(struct e1000_hw *hw)$/;"	f	file:
e1000_raise_ee_clk	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_raise_ee_clk(struct e1000_hw *hw,$/;"	f	file:
e1000_raise_ee_clk	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_raise_ee_clk(struct e1000_hw *hw,$/;"	f	file:
e1000_raise_ee_clk	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_raise_ee_clk(struct e1000_hw *hw,$/;"	f	file:
e1000_raise_mdi_clk	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_raise_mdi_clk(struct e1000_hw *hw,$/;"	f	file:
e1000_raise_mdi_clk	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_raise_mdi_clk(struct e1000_hw *hw,$/;"	f	file:
e1000_raise_mdi_clk	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_raise_mdi_clk(struct e1000_hw *hw,$/;"	f	file:
e1000_rar	drivers/e1000-4.x/src/e1000_hw.h	/^struct e1000_rar {$/;"	s
e1000_rar	drivers/e1000-5.x/src/e1000_hw.h	/^struct e1000_rar {$/;"	s
e1000_rar	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_rar {$/;"	s
e1000_rar_set	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_rar_set(struct e1000_hw *hw,$/;"	f
e1000_rar_set	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_rar_set(struct e1000_hw *hw,$/;"	f
e1000_rar_set	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_rar_set(struct e1000_hw *hw,$/;"	f
e1000_read_eeprom	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_read_eeprom(struct e1000_hw *hw,$/;"	f
e1000_read_eeprom	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_read_eeprom(struct e1000_hw *hw,$/;"	f
e1000_read_eeprom	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_read_eeprom(struct e1000_hw *hw,$/;"	f
e1000_read_eeprom_eerd	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_read_eeprom_eerd(struct e1000_hw *hw,$/;"	f	file:
e1000_read_eeprom_ich8	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_read_eeprom_ich8(struct e1000_hw *hw, uint16_t offset, uint16_t words,$/;"	f	file:
e1000_read_ich8_byte	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_read_ich8_byte(struct e1000_hw *hw, uint32_t index, uint8_t* data)$/;"	f	file:
e1000_read_ich8_data	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_read_ich8_data(struct e1000_hw *hw, uint32_t index,$/;"	f	file:
e1000_read_ich8_word	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_read_ich8_word(struct e1000_hw *hw, uint32_t index, uint16_t *data)$/;"	f	file:
e1000_read_kmrn_reg	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_read_kmrn_reg(struct e1000_hw *hw,$/;"	f	file:
e1000_read_mac_addr	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_read_mac_addr(struct e1000_hw * hw)$/;"	f
e1000_read_mac_addr	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_read_mac_addr(struct e1000_hw * hw)$/;"	f
e1000_read_mac_addr	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_read_mac_addr(struct e1000_hw * hw)$/;"	f
e1000_read_part_num	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_read_part_num(struct e1000_hw *hw,$/;"	f
e1000_read_part_num	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_read_part_num(struct e1000_hw *hw,$/;"	f
e1000_read_part_num	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_read_part_num(struct e1000_hw *hw,$/;"	f
e1000_read_pci_cfg	drivers/e1000-4.x/src/e1000_main.c	/^e1000_read_pci_cfg(struct e1000_hw *hw, uint32_t reg, uint16_t *value)$/;"	f
e1000_read_pci_cfg	drivers/e1000-5.x/src/e1000_main.c	/^e1000_read_pci_cfg(struct e1000_hw *hw, uint32_t reg, uint16_t *value)$/;"	f
e1000_read_pci_cfg	drivers/e1000-7.x/src/e1000_main.c	/^e1000_read_pci_cfg(struct e1000_hw *hw, uint32_t reg, uint16_t *value)$/;"	f
e1000_read_pcie_cap_reg	drivers/e1000-7.x/src/e1000_main.c	/^e1000_read_pcie_cap_reg(struct e1000_hw *hw, uint32_t reg, uint16_t *value)$/;"	f
e1000_read_phy_reg	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_read_phy_reg(struct e1000_hw *hw,$/;"	f
e1000_read_phy_reg	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_read_phy_reg(struct e1000_hw *hw,$/;"	f
e1000_read_phy_reg	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_read_phy_reg(struct e1000_hw *hw,$/;"	f
e1000_read_phy_reg_ex	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_read_phy_reg_ex(struct e1000_hw *hw,$/;"	f
e1000_read_phy_reg_ex	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_read_phy_reg_ex(struct e1000_hw *hw, uint32_t reg_addr,$/;"	f	file:
e1000_read_reg_io	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_read_reg_io(struct e1000_hw *hw,$/;"	f
e1000_read_reg_io	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_read_reg_io(struct e1000_hw *hw,$/;"	f
e1000_reg_test	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_reg_test(struct e1000_adapter *adapter, uint64_t *data)$/;"	f	file:
e1000_reg_test	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_reg_test(struct e1000_adapter *adapter, uint64_t *data)$/;"	f	file:
e1000_reinit_locked	drivers/e1000-7.x/src/e1000_main.c	/^e1000_reinit_locked(struct e1000_adapter *adapter)$/;"	f
e1000_release_eeprom	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_release_eeprom(struct e1000_hw *hw)$/;"	f	file:
e1000_release_eeprom	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_release_eeprom(struct e1000_hw *hw)$/;"	f	file:
e1000_release_hw_control	drivers/e1000-7.x/src/e1000_main.c	/^e1000_release_hw_control(struct e1000_adapter *adapter)$/;"	f	file:
e1000_release_manageability	drivers/e1000-7.x/src/e1000_main.c	/^e1000_release_manageability(struct e1000_adapter *adapter)$/;"	f	file:
e1000_release_software_flag	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_release_software_flag(struct e1000_hw *hw)$/;"	f	file:
e1000_release_software_semaphore	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_release_software_semaphore(struct e1000_hw *hw)$/;"	f	file:
e1000_remove	drivers/e1000-4.x/src/e1000_main.c	/^e1000_remove(struct pci_dev *pdev)$/;"	f	file:
e1000_remove	drivers/e1000-5.x/src/e1000_main.c	/^e1000_remove(struct pci_dev *pdev)$/;"	f	file:
e1000_remove	drivers/e1000-7.x/src/e1000_main.c	/^e1000_remove(struct pci_dev *pdev)$/;"	f	file:
e1000_request_irq	drivers/e1000-7.x/src/e1000_main.c	/^static int e1000_request_irq(struct e1000_adapter *adapter)$/;"	f	file:
e1000_reset	drivers/e1000-4.x/src/e1000_main.c	/^e1000_reset(struct e1000_adapter *adapter)$/;"	f
e1000_reset	drivers/e1000-5.x/src/e1000_main.c	/^e1000_reset(struct e1000_adapter *adapter)$/;"	f
e1000_reset	drivers/e1000-7.x/src/e1000_main.c	/^e1000_reset(struct e1000_adapter *adapter)$/;"	f
e1000_reset_adaptive	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_reset_adaptive(struct e1000_hw *hw)$/;"	f
e1000_reset_adaptive	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_reset_adaptive(struct e1000_hw *hw)$/;"	f
e1000_reset_adaptive	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_reset_adaptive(struct e1000_hw *hw)$/;"	f
e1000_reset_hw	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_reset_hw(struct e1000_hw *hw)$/;"	f
e1000_reset_hw	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_reset_hw(struct e1000_hw *hw)$/;"	f
e1000_reset_hw	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_reset_hw(struct e1000_hw *hw)$/;"	f
e1000_reset_task	drivers/e1000-7.x/src/e1000_main.c	/^e1000_reset_task(struct net_device *netdev)$/;"	f	file:
e1000_restore_vlan	drivers/e1000-5.x/src/e1000_main.c	/^e1000_restore_vlan(struct e1000_adapter *adapter)$/;"	f	file:
e1000_restore_vlan	drivers/e1000-7.x/src/e1000_main.c	/^e1000_restore_vlan(struct e1000_adapter *adapter)$/;"	f	file:
e1000_resume	drivers/e1000-4.x/src/e1000_main.c	/^e1000_resume(struct pci_dev *pdev)$/;"	f	file:
e1000_resume	drivers/e1000-5.x/src/e1000_main.c	/^e1000_resume(struct pci_dev *pdev)$/;"	f	file:
e1000_resume	drivers/e1000-7.x/src/e1000_main.c	/^e1000_resume(struct pci_dev *pdev)$/;"	f	file:
e1000_rev_polarity	drivers/e1000-4.x/src/e1000_hw.h	/^} e1000_rev_polarity;$/;"	t	typeref:enum:__anon48
e1000_rev_polarity	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_rev_polarity;$/;"	t	typeref:enum:__anon138
e1000_rev_polarity	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_rev_polarity;$/;"	t	typeref:enum:__anon82
e1000_rev_polarity_normal	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_rev_polarity_normal = 0,$/;"	e	enum:__anon48
e1000_rev_polarity_normal	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_rev_polarity_normal = 0,$/;"	e	enum:__anon138
e1000_rev_polarity_normal	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_rev_polarity_normal = 0,$/;"	e	enum:__anon82
e1000_rev_polarity_reversed	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_rev_polarity_reversed,$/;"	e	enum:__anon48
e1000_rev_polarity_reversed	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_rev_polarity_reversed,$/;"	e	enum:__anon138
e1000_rev_polarity_reversed	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_rev_polarity_reversed,$/;"	e	enum:__anon82
e1000_rev_polarity_undefined	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_rev_polarity_undefined = 0xFF$/;"	e	enum:__anon48
e1000_rev_polarity_undefined	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_rev_polarity_undefined = 0xFF$/;"	e	enum:__anon138
e1000_rev_polarity_undefined	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_rev_polarity_undefined = 0xFF$/;"	e	enum:__anon82
e1000_run_loopback_test	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_run_loopback_test(struct e1000_adapter *adapter)$/;"	f	file:
e1000_run_loopback_test	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_run_loopback_test(struct e1000_adapter *adapter)$/;"	f	file:
e1000_rx_checksum	drivers/e1000-4.x/src/e1000_main.c	/^e1000_rx_checksum(struct e1000_adapter *adapter,$/;"	f	file:
e1000_rx_checksum	drivers/e1000-5.x/src/e1000_main.c	/^e1000_rx_checksum(struct e1000_adapter *adapter,$/;"	f	file:
e1000_rx_checksum	drivers/e1000-7.x/src/e1000_main.c	/^e1000_rx_checksum(struct e1000_adapter *adapter,$/;"	f	file:
e1000_rx_desc	drivers/e1000-4.x/src/e1000_hw.h	/^struct e1000_rx_desc {$/;"	s
e1000_rx_desc	drivers/e1000-5.x/src/e1000_hw.h	/^struct e1000_rx_desc {$/;"	s
e1000_rx_desc	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_rx_desc {$/;"	s
e1000_rx_desc_extended	drivers/e1000-7.x/src/e1000_hw.h	/^union e1000_rx_desc_extended {$/;"	u
e1000_rx_desc_packet_split	drivers/e1000-7.x/src/e1000_hw.h	/^union e1000_rx_desc_packet_split {$/;"	u
e1000_rx_poll	drivers/e1000-4.x/src/e1000_main.c	/^e1000_rx_poll(struct net_device *dev, int *want)$/;"	f	file:
e1000_rx_poll	drivers/e1000-5.x/src/e1000_main.c	/^e1000_rx_poll(struct net_device *dev, int *want)$/;"	f	file:
e1000_rx_poll	drivers/e1000-7.x/src/e1000_main.c	/^e1000_rx_poll(struct net_device *dev, int *want)$/;"	f	file:
e1000_rx_refill	drivers/e1000-4.x/src/e1000_main.c	/^e1000_rx_refill(struct net_device *dev, struct sk_buff **skbs)$/;"	f
e1000_rx_refill	drivers/e1000-5.x/src/e1000_main.c	/^e1000_rx_refill(struct net_device *dev, struct sk_buff **skbs)$/;"	f
e1000_rx_refill	drivers/e1000-7.x/src/e1000_main.c	/^e1000_rx_refill(struct net_device *dev, struct sk_buff **skbs)$/;"	f
e1000_rx_ring	drivers/e1000-7.x/src/e1000.h	/^struct e1000_rx_ring {$/;"	s
e1000_set_d0_lplu_state	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_set_d0_lplu_state(struct e1000_hw *hw,$/;"	f	file:
e1000_set_d3_lplu_state	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_set_d3_lplu_state(struct e1000_hw *hw,$/;"	f
e1000_set_d3_lplu_state	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_set_d3_lplu_state(struct e1000_hw *hw,$/;"	f	file:
e1000_set_eeprom	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_set_eeprom(struct net_device *netdev,$/;"	f	file:
e1000_set_eeprom	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_set_eeprom(struct net_device *netdev,$/;"	f	file:
e1000_set_ethtool_ops	drivers/e1000-7.x/src/e1000_ethtool.c	/^void e1000_set_ethtool_ops(struct net_device *netdev)$/;"	f
e1000_set_itr	drivers/e1000-7.x/src/e1000_main.c	/^static void e1000_set_itr(struct e1000_adapter *adapter)$/;"	f	file:
e1000_set_loopback_mode	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_set_loopback_mode(struct e1000_adapter *adapter,$/;"	f	file:
e1000_set_mac	drivers/e1000-4.x/src/e1000_main.c	/^e1000_set_mac(struct net_device *netdev, void *p)$/;"	f	file:
e1000_set_mac	drivers/e1000-5.x/src/e1000_main.c	/^e1000_set_mac(struct net_device *netdev, void *p)$/;"	f	file:
e1000_set_mac	drivers/e1000-7.x/src/e1000_main.c	/^e1000_set_mac(struct net_device *netdev, void *p)$/;"	f	file:
e1000_set_mac_type	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_set_mac_type(struct e1000_hw *hw)$/;"	f
e1000_set_mac_type	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_set_mac_type(struct e1000_hw *hw)$/;"	f
e1000_set_mac_type	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_set_mac_type(struct e1000_hw *hw)$/;"	f
e1000_set_media_type	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_set_media_type(struct e1000_hw *hw)$/;"	f
e1000_set_media_type	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_set_media_type(struct e1000_hw *hw)$/;"	f
e1000_set_msglevel	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_set_msglevel(struct net_device *netdev, uint32_t data)$/;"	f	file:
e1000_set_msglevel	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_set_msglevel(struct net_device *netdev, uint32_t data)$/;"	f	file:
e1000_set_multi	drivers/e1000-4.x/src/e1000_main.c	/^e1000_set_multi(struct net_device *netdev)$/;"	f	file:
e1000_set_multi	drivers/e1000-5.x/src/e1000_main.c	/^e1000_set_multi(struct net_device *netdev)$/;"	f	file:
e1000_set_multi	drivers/e1000-7.x/src/e1000_main.c	/^e1000_set_multi(struct net_device *netdev)$/;"	f	file:
e1000_set_pauseparam	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_set_pauseparam(struct net_device *netdev,$/;"	f	file:
e1000_set_pauseparam	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_set_pauseparam(struct net_device *netdev,$/;"	f	file:
e1000_set_pci_ex_no_snoop	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_set_pci_ex_no_snoop(struct e1000_hw *hw, uint32_t no_snoop)$/;"	f	file:
e1000_set_pci_express_master_disable	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_set_pci_express_master_disable(struct e1000_hw *hw)$/;"	f	file:
e1000_set_phy_loopback	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_set_phy_loopback(struct e1000_adapter *adapter)$/;"	f	file:
e1000_set_phy_loopback	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_set_phy_loopback(struct e1000_adapter *adapter)$/;"	f	file:
e1000_set_phy_loopback	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_set_phy_loopback(struct e1000_adapter *adapter)$/;"	f	file:
e1000_set_phy_mode	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_set_phy_mode(struct e1000_hw *hw)$/;"	f	file:
e1000_set_phy_mode	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_set_phy_mode(struct e1000_hw *hw)$/;"	f	file:
e1000_set_phy_type	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_set_phy_type(struct e1000_hw *hw)$/;"	f
e1000_set_phy_type	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_set_phy_type(struct e1000_hw *hw)$/;"	f	file:
e1000_set_ringparam	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_set_ringparam(struct net_device *netdev,$/;"	f	file:
e1000_set_ringparam	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_set_ringparam(struct net_device *netdev,$/;"	f	file:
e1000_set_rx_csum	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_set_rx_csum(struct net_device *netdev, uint32_t data)$/;"	f	file:
e1000_set_rx_csum	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_set_rx_csum(struct net_device *netdev, uint32_t data)$/;"	f	file:
e1000_set_settings	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_set_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)$/;"	f	file:
e1000_set_settings	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_set_settings(struct net_device *netdev, struct ethtool_cmd *ecmd)$/;"	f	file:
e1000_set_spd_dplx	drivers/e1000-5.x/src/e1000_main.c	/^e1000_set_spd_dplx(struct e1000_adapter *adapter, uint16_t spddplx)$/;"	f
e1000_set_spd_dplx	drivers/e1000-7.x/src/e1000_main.c	/^e1000_set_spd_dplx(struct e1000_adapter *adapter, uint16_t spddplx)$/;"	f
e1000_set_tso	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_set_tso(struct net_device *netdev, uint32_t data)$/;"	f	file:
e1000_set_tso	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_set_tso(struct net_device *netdev, uint32_t data)$/;"	f	file:
e1000_set_tx_csum	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_set_tx_csum(struct net_device *netdev, uint32_t data)$/;"	f	file:
e1000_set_tx_csum	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_set_tx_csum(struct net_device *netdev, uint32_t data)$/;"	f	file:
e1000_set_vco_speed	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_set_vco_speed(struct e1000_hw *hw)$/;"	f	file:
e1000_set_vco_speed	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_set_vco_speed(struct e1000_hw *hw)$/;"	f	file:
e1000_set_wol	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_set_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)$/;"	f	file:
e1000_set_wol	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_set_wol(struct net_device *netdev, struct ethtool_wolinfo *wol)$/;"	f	file:
e1000_setup_all_rx_resources	drivers/e1000-7.x/src/e1000_main.c	/^e1000_setup_all_rx_resources(struct e1000_adapter *adapter)$/;"	f
e1000_setup_all_tx_resources	drivers/e1000-7.x/src/e1000_main.c	/^e1000_setup_all_tx_resources(struct e1000_adapter *adapter)$/;"	f
e1000_setup_copper_link	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_setup_copper_link(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_setup_copper_link(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_copper_link	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_setup_copper_link(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_desc_rings	drivers/e1000-4.x/src/e1000_idiag.c	/^e1000_setup_desc_rings(struct e1000_adapter *adapter)$/;"	f	file:
e1000_setup_desc_rings	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_setup_desc_rings(struct e1000_adapter *adapter)$/;"	f	file:
e1000_setup_desc_rings	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_setup_desc_rings(struct e1000_adapter *adapter)$/;"	f	file:
e1000_setup_eeprom	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_setup_eeprom(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_fiber_link	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_setup_fiber_link(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_fiber_serdes_link	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_setup_fiber_serdes_link(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_fiber_serdes_link	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_setup_fiber_serdes_link(struct e1000_hw *hw)$/;"	f	file:
e1000_setup_led	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_setup_led(struct e1000_hw *hw)$/;"	f
e1000_setup_led	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_setup_led(struct e1000_hw *hw)$/;"	f
e1000_setup_led	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_setup_led(struct e1000_hw *hw)$/;"	f
e1000_setup_link	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_setup_link(struct e1000_hw *hw)$/;"	f
e1000_setup_link	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_setup_link(struct e1000_hw *hw)$/;"	f
e1000_setup_link	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_setup_link(struct e1000_hw *hw)$/;"	f
e1000_setup_loopback_test	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_setup_loopback_test(struct e1000_adapter *adapter)$/;"	f	file:
e1000_setup_loopback_test	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_setup_loopback_test(struct e1000_adapter *adapter)$/;"	f	file:
e1000_setup_rctl	drivers/e1000-4.x/src/e1000_main.c	/^e1000_setup_rctl(struct e1000_adapter *adapter)$/;"	f	file:
e1000_setup_rctl	drivers/e1000-5.x/src/e1000_main.c	/^e1000_setup_rctl(struct e1000_adapter *adapter)$/;"	f	file:
e1000_setup_rctl	drivers/e1000-7.x/src/e1000_main.c	/^e1000_setup_rctl(struct e1000_adapter *adapter)$/;"	f	file:
e1000_setup_rx_resources	drivers/e1000-4.x/src/e1000_main.c	/^e1000_setup_rx_resources(struct e1000_adapter *adapter)$/;"	f	file:
e1000_setup_rx_resources	drivers/e1000-5.x/src/e1000_main.c	/^e1000_setup_rx_resources(struct e1000_adapter *adapter)$/;"	f
e1000_setup_rx_resources	drivers/e1000-7.x/src/e1000_main.c	/^e1000_setup_rx_resources(struct e1000_adapter *adapter,$/;"	f	file:
e1000_setup_tx_resources	drivers/e1000-4.x/src/e1000_main.c	/^e1000_setup_tx_resources(struct e1000_adapter *adapter)$/;"	f	file:
e1000_setup_tx_resources	drivers/e1000-5.x/src/e1000_main.c	/^e1000_setup_tx_resources(struct e1000_adapter *adapter)$/;"	f
e1000_setup_tx_resources	drivers/e1000-7.x/src/e1000_main.c	/^e1000_setup_tx_resources(struct e1000_adapter *adapter,$/;"	f	file:
e1000_shadow_ram	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_shadow_ram {$/;"	s
e1000_shift_in_ee_bits	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_shift_in_ee_bits(struct e1000_hw *hw)$/;"	f	file:
e1000_shift_in_ee_bits	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_shift_in_ee_bits(struct e1000_hw *hw,$/;"	f	file:
e1000_shift_in_ee_bits	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_shift_in_ee_bits(struct e1000_hw *hw,$/;"	f	file:
e1000_shift_in_mdi_bits	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_shift_in_mdi_bits(struct e1000_hw *hw)$/;"	f	file:
e1000_shift_in_mdi_bits	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_shift_in_mdi_bits(struct e1000_hw *hw)$/;"	f	file:
e1000_shift_in_mdi_bits	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_shift_in_mdi_bits(struct e1000_hw *hw)$/;"	f	file:
e1000_shift_out_ee_bits	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_shift_out_ee_bits(struct e1000_hw *hw,$/;"	f	file:
e1000_shift_out_ee_bits	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_shift_out_ee_bits(struct e1000_hw *hw,$/;"	f	file:
e1000_shift_out_ee_bits	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_shift_out_ee_bits(struct e1000_hw *hw,$/;"	f	file:
e1000_shift_out_mdi_bits	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_shift_out_mdi_bits(struct e1000_hw *hw,$/;"	f	file:
e1000_shift_out_mdi_bits	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_shift_out_mdi_bits(struct e1000_hw *hw,$/;"	f	file:
e1000_shift_out_mdi_bits	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_shift_out_mdi_bits(struct e1000_hw *hw,$/;"	f	file:
e1000_shutdown	drivers/e1000-7.x/src/e1000_main.c	/^static void e1000_shutdown(struct pci_dev *pdev)$/;"	f	file:
e1000_smart_speed	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_smart_speed;$/;"	t	typeref:enum:__anon140
e1000_smart_speed	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_smart_speed;$/;"	t	typeref:enum:__anon84
e1000_smart_speed_default	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_smart_speed_default = 0,$/;"	e	enum:__anon140
e1000_smart_speed_default	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_smart_speed_default = 0,$/;"	e	enum:__anon84
e1000_smart_speed_off	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_smart_speed_off$/;"	e	enum:__anon140
e1000_smart_speed_off	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_smart_speed_off$/;"	e	enum:__anon84
e1000_smart_speed_on	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_smart_speed_on,$/;"	e	enum:__anon140
e1000_smart_speed_on	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_smart_speed_on,$/;"	e	enum:__anon84
e1000_smartspeed	drivers/e1000-5.x/src/e1000_main.c	/^e1000_smartspeed(struct e1000_adapter *adapter)$/;"	f	file:
e1000_smartspeed	drivers/e1000-7.x/src/e1000_main.c	/^e1000_smartspeed(struct e1000_adapter *adapter)$/;"	f	file:
e1000_smbus_arp_enable	drivers/e1000-4.x/src/e1000_main.c	/^e1000_smbus_arp_enable(struct e1000_adapter *adapter, boolean_t arp_enable)$/;"	f	file:
e1000_smbus_lock	drivers/e1000-4.x/src/e1000_main.c	/^EXPORT_SYMBOL(e1000_smbus_lock);$/;"	v
e1000_smbus_lock	drivers/e1000-4.x/src/e1000_main.c	/^e1000_smbus_lock(struct pci_dev *pdev, boolean_t lock)$/;"	f
e1000_speed_duplex_type	drivers/e1000-4.x/src/e1000_hw.h	/^} e1000_speed_duplex_type;$/;"	t	typeref:enum:__anon41
e1000_speed_duplex_type	drivers/e1000-5.x/src/e1000_hw.h	/^} e1000_speed_duplex_type;$/;"	t	typeref:enum:__anon130
e1000_speed_duplex_type	drivers/e1000-7.x/src/e1000_hw.h	/^} e1000_speed_duplex_type;$/;"	t	typeref:enum:__anon74
e1000_spi_eeprom_ready	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_spi_eeprom_ready(struct e1000_hw *hw)$/;"	f
e1000_spi_eeprom_ready	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_spi_eeprom_ready(struct e1000_hw *hw)$/;"	f	file:
e1000_standby_eeprom	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_standby_eeprom(struct e1000_hw *hw)$/;"	f	file:
e1000_standby_eeprom	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_standby_eeprom(struct e1000_hw *hw)$/;"	f	file:
e1000_standby_eeprom	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_standby_eeprom(struct e1000_hw *hw)$/;"	f	file:
e1000_state_t	drivers/e1000-7.x/src/e1000.h	/^enum e1000_state_t {$/;"	g
e1000_stats	drivers/e1000-5.x/src/e1000_ethtool.c	/^struct e1000_stats {$/;"	s	file:
e1000_stats	drivers/e1000-7.x/src/e1000_ethtool.c	/^struct e1000_stats {$/;"	s	file:
e1000_strings	drivers/e1000-4.x/src/e1000_main.c	/^static char *e1000_strings[] = {$/;"	v	file:
e1000_suspend	drivers/e1000-4.x/src/e1000_main.c	/^e1000_suspend(struct pci_dev *pdev, uint32_t state)$/;"	f	file:
e1000_suspend	drivers/e1000-5.x/src/e1000_main.c	/^e1000_suspend(struct pci_dev *pdev, uint32_t state)$/;"	f	file:
e1000_suspend	drivers/e1000-7.x/src/e1000_main.c	/^e1000_suspend(struct pci_dev *pdev, pm_message_t state)$/;"	f	file:
e1000_sw_init	drivers/e1000-4.x/src/e1000_main.c	/^e1000_sw_init(struct e1000_adapter *adapter)$/;"	f	file:
e1000_sw_init	drivers/e1000-5.x/src/e1000_main.c	/^e1000_sw_init(struct e1000_adapter *adapter)$/;"	f	file:
e1000_sw_init	drivers/e1000-7.x/src/e1000_main.c	/^e1000_sw_init(struct e1000_adapter *adapter)$/;"	f	file:
e1000_swfw_sync_acquire	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_swfw_sync_acquire(struct e1000_hw *hw, uint16_t mask)$/;"	f	file:
e1000_swfw_sync_release	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_swfw_sync_release(struct e1000_hw *hw, uint16_t mask)$/;"	f	file:
e1000_tbi_adjust_stats	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_tbi_adjust_stats(struct e1000_hw *hw,$/;"	f
e1000_tbi_adjust_stats	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_tbi_adjust_stats(struct e1000_hw *hw,$/;"	f
e1000_tbi_adjust_stats	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_tbi_adjust_stats(struct e1000_hw *hw,$/;"	f
e1000_test_intr	drivers/e1000-4.x/src/idiag_test.c	/^e1000_test_intr(int sock, struct ifreq *interface)$/;"	f	file:
e1000_test_intr	drivers/e1000-5.x/src/e1000_ethtool.c	/^e1000_test_intr(int irq,$/;"	f	file:
e1000_test_intr	drivers/e1000-7.x/src/e1000_ethtool.c	/^e1000_test_intr(int irq, void *data)$/;"	f	file:
e1000_test_link	drivers/e1000-4.x/src/idiag_test.c	/^e1000_test_link(int sock, struct ifreq *interface)$/;"	f	file:
e1000_test_loopback	drivers/e1000-4.x/src/idiag_test.c	/^e1000_test_loopback(int sock, struct ifreq *interface)$/;"	f	file:
e1000_test_register	drivers/e1000-4.x/src/idiag_test.c	/^e1000_test_register(int sock, struct ifreq *interface)$/;"	f	file:
e1000_test_xsum	drivers/e1000-4.x/src/idiag_test.c	/^e1000_test_xsum(int sock, struct ifreq *interface)$/;"	f	file:
e1000_transfer_dhcp_info	drivers/e1000-7.x/src/e1000_main.c	/^e1000_transfer_dhcp_info(struct e1000_adapter *adapter, struct sk_buff *skb)$/;"	f	file:
e1000_tso	drivers/e1000-5.x/src/e1000_main.c	/^e1000_tso(struct e1000_adapter *adapter, struct sk_buff *skb)$/;"	f	file:
e1000_tso	drivers/e1000-7.x/src/e1000_main.c	/^e1000_tso(struct e1000_adapter *adapter, struct e1000_tx_ring *tx_ring,$/;"	f	file:
e1000_tx_clean	drivers/e1000-4.x/src/e1000_main.c	/^e1000_tx_clean(struct net_device *netdev)$/;"	f	file:
e1000_tx_clean	drivers/e1000-5.x/src/e1000_main.c	/^e1000_tx_clean(struct net_device *netdev)$/;"	f	file:
e1000_tx_clean	drivers/e1000-7.x/src/e1000_main.c	/^e1000_tx_clean(struct net_device *netdev)$/;"	f	file:
e1000_tx_csum	drivers/e1000-4.x/src/e1000_main.c	/^e1000_tx_csum(struct e1000_adapter *adapter, struct sk_buff *skb)$/;"	f	file:
e1000_tx_csum	drivers/e1000-5.x/src/e1000_main.c	/^e1000_tx_csum(struct e1000_adapter *adapter, struct sk_buff *skb)$/;"	f	file:
e1000_tx_csum	drivers/e1000-7.x/src/e1000_main.c	/^e1000_tx_csum(struct e1000_adapter *adapter, struct e1000_tx_ring *tx_ring,$/;"	f	file:
e1000_tx_desc	drivers/e1000-4.x/src/e1000_hw.h	/^struct e1000_tx_desc {$/;"	s
e1000_tx_desc	drivers/e1000-5.x/src/e1000_hw.h	/^struct e1000_tx_desc {$/;"	s
e1000_tx_desc	drivers/e1000-7.x/src/e1000_hw.h	/^struct e1000_tx_desc {$/;"	s
e1000_tx_eob	drivers/e1000-4.x/src/e1000_main.c	/^e1000_tx_eob(struct net_device *dev)$/;"	f	file:
e1000_tx_eob	drivers/e1000-5.x/src/e1000_main.c	/^e1000_tx_eob(struct net_device *dev)$/;"	f	file:
e1000_tx_eob	drivers/e1000-7.x/src/e1000_main.c	/^e1000_tx_eob(struct net_device *dev)$/;"	f	file:
e1000_tx_flush	drivers/e1000-4.x/src/e1000_main.c	/^e1000_tx_flush(struct e1000_adapter *adapter)$/;"	f	file:
e1000_tx_map	drivers/e1000-4.x/src/e1000_main.c	/^e1000_tx_map(struct e1000_adapter *adapter, struct sk_buff *skb)$/;"	f	file:
e1000_tx_map	drivers/e1000-5.x/src/e1000_main.c	/^e1000_tx_map(struct e1000_adapter *adapter, struct sk_buff *skb,$/;"	f	file:
e1000_tx_map	drivers/e1000-7.x/src/e1000_main.c	/^e1000_tx_map(struct e1000_adapter *adapter, struct e1000_tx_ring *tx_ring,$/;"	f	file:
e1000_tx_pqueue	drivers/e1000-4.x/src/e1000_main.c	/^e1000_tx_pqueue(struct net_device *netdev, struct sk_buff *skb)$/;"	f	file:
e1000_tx_pqueue	drivers/e1000-5.x/src/e1000_main.c	/^e1000_tx_pqueue(struct net_device *netdev, struct sk_buff *skb)$/;"	f	file:
e1000_tx_pqueue	drivers/e1000-7.x/src/e1000_main.c	/^e1000_tx_pqueue(struct net_device *netdev, struct sk_buff *skb)$/;"	f	file:
e1000_tx_queue	drivers/e1000-4.x/src/e1000_main.c	/^e1000_tx_queue(struct e1000_adapter *adapter, int count, int tx_flags)$/;"	f	file:
e1000_tx_queue	drivers/e1000-5.x/src/e1000_main.c	/^e1000_tx_queue(struct e1000_adapter *adapter, int count, int tx_flags)$/;"	f	file:
e1000_tx_queue	drivers/e1000-7.x/src/e1000_main.c	/^e1000_tx_queue(struct e1000_adapter *adapter, struct e1000_tx_ring *tx_ring,$/;"	f	file:
e1000_tx_queue_clickpoll	drivers/e1000-5.x/src/e1000_main.c	/^e1000_tx_queue_clickpoll(struct e1000_adapter *adapter, int count, int tx_flags)$/;"	f	file:
e1000_tx_ring	drivers/e1000-7.x/src/e1000.h	/^struct e1000_tx_ring {$/;"	s
e1000_tx_start	drivers/e1000-4.x/src/e1000_main.c	/^e1000_tx_start(struct net_device *dev)$/;"	f	file:
e1000_tx_start	drivers/e1000-5.x/src/e1000_main.c	/^e1000_tx_start(struct net_device *dev)$/;"	f	file:
e1000_tx_start	drivers/e1000-7.x/src/e1000_main.c	/^e1000_tx_start(struct net_device *dev)$/;"	f	file:
e1000_tx_timeout	drivers/e1000-4.x/src/e1000_main.c	/^e1000_tx_timeout(struct net_device *netdev)$/;"	f	file:
e1000_tx_timeout	drivers/e1000-5.x/src/e1000_main.c	/^e1000_tx_timeout(struct net_device *netdev)$/;"	f	file:
e1000_tx_timeout	drivers/e1000-7.x/src/e1000_main.c	/^e1000_tx_timeout(struct net_device *netdev)$/;"	f	file:
e1000_tx_timeout_task	drivers/e1000-5.x/src/e1000_main.c	/^e1000_tx_timeout_task(struct net_device *netdev)$/;"	f	file:
e1000_undefined	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_undefined = 0,$/;"	e	enum:__anon39
e1000_undefined	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_undefined = 0,$/;"	e	enum:__anon127
e1000_undefined	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_undefined = 0,$/;"	e	enum:__anon71
e1000_unmap_and_free_tx_resource	drivers/e1000-5.x/src/e1000_main.c	/^e1000_unmap_and_free_tx_resource(struct e1000_adapter *adapter,$/;"	f	file:
e1000_unmap_and_free_tx_resource	drivers/e1000-7.x/src/e1000_main.c	/^e1000_unmap_and_free_tx_resource(struct e1000_adapter *adapter,$/;"	f	file:
e1000_up	drivers/e1000-4.x/src/e1000_main.c	/^e1000_up(struct e1000_adapter *adapter)$/;"	f
e1000_up	drivers/e1000-5.x/src/e1000_main.c	/^e1000_up(struct e1000_adapter *adapter)$/;"	f
e1000_up	drivers/e1000-7.x/src/e1000_main.c	/^e1000_up(struct e1000_adapter *adapter)$/;"	f
e1000_update_adaptive	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_update_adaptive(struct e1000_hw *hw)$/;"	f
e1000_update_adaptive	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_update_adaptive(struct e1000_hw *hw)$/;"	f
e1000_update_adaptive	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_update_adaptive(struct e1000_hw *hw)$/;"	f
e1000_update_eeprom_checksum	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_update_eeprom_checksum(struct e1000_hw *hw)$/;"	f
e1000_update_eeprom_checksum	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_update_eeprom_checksum(struct e1000_hw *hw)$/;"	f
e1000_update_eeprom_checksum	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_update_eeprom_checksum(struct e1000_hw *hw)$/;"	f
e1000_update_itr	drivers/e1000-7.x/src/e1000_main.c	/^static unsigned int e1000_update_itr(struct e1000_adapter *adapter,$/;"	f	file:
e1000_update_mng_vlan	drivers/e1000-7.x/src/e1000_main.c	/^e1000_update_mng_vlan(struct e1000_adapter *adapter)$/;"	f	file:
e1000_update_phy_info	drivers/e1000-4.x/src/e1000_main.c	/^e1000_update_phy_info(unsigned long data)$/;"	f	file:
e1000_update_phy_info	drivers/e1000-5.x/src/e1000_main.c	/^e1000_update_phy_info(unsigned long data)$/;"	f	file:
e1000_update_phy_info	drivers/e1000-7.x/src/e1000_main.c	/^e1000_update_phy_info(unsigned long data)$/;"	f	file:
e1000_update_stats	drivers/e1000-4.x/src/e1000_main.c	/^e1000_update_stats(struct e1000_adapter *adapter)$/;"	f	file:
e1000_update_stats	drivers/e1000-5.x/src/e1000_main.c	/^e1000_update_stats(struct e1000_adapter *adapter)$/;"	f
e1000_update_stats	drivers/e1000-7.x/src/e1000_main.c	/^e1000_update_stats(struct e1000_adapter *adapter)$/;"	f
e1000_validate_eeprom_checksum	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_validate_eeprom_checksum(struct e1000_hw *hw)$/;"	f
e1000_validate_eeprom_checksum	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_validate_eeprom_checksum(struct e1000_hw *hw)$/;"	f
e1000_validate_eeprom_checksum	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_validate_eeprom_checksum(struct e1000_hw *hw)$/;"	f
e1000_validate_mdi_setting	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_validate_mdi_setting(struct e1000_hw *hw)$/;"	f
e1000_validate_mdi_setting	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_validate_mdi_setting(struct e1000_hw *hw)$/;"	f
e1000_validate_mdi_setting	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_validate_mdi_setting(struct e1000_hw *hw)$/;"	f
e1000_validate_option	drivers/e1000-4.x/src/e1000_param.c	/^e1000_validate_option(int *value, struct e1000_option *opt)$/;"	f	file:
e1000_validate_option	drivers/e1000-5.x/src/e1000_param.c	/^e1000_validate_option(int *value, struct e1000_option *opt,$/;"	f	file:
e1000_validate_option	drivers/e1000-7.x/src/e1000_param.c	/^e1000_validate_option(int *value, struct e1000_option *opt,$/;"	f	file:
e1000_verify_write_ich8_byte	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_verify_write_ich8_byte(struct e1000_hw *hw, uint32_t index, uint8_t byte)$/;"	f	file:
e1000_vlan_rx_add_vid	drivers/e1000-4.x/src/e1000_main.c	/^e1000_vlan_rx_add_vid(struct net_device *netdev, uint16_t vid)$/;"	f	file:
e1000_vlan_rx_add_vid	drivers/e1000-5.x/src/e1000_main.c	/^e1000_vlan_rx_add_vid(struct net_device *netdev, uint16_t vid)$/;"	f	file:
e1000_vlan_rx_add_vid	drivers/e1000-7.x/src/e1000_main.c	/^e1000_vlan_rx_add_vid(struct net_device *netdev, uint16_t vid)$/;"	f	file:
e1000_vlan_rx_kill_vid	drivers/e1000-4.x/src/e1000_main.c	/^e1000_vlan_rx_kill_vid(struct net_device *netdev, uint16_t vid)$/;"	f	file:
e1000_vlan_rx_kill_vid	drivers/e1000-5.x/src/e1000_main.c	/^e1000_vlan_rx_kill_vid(struct net_device *netdev, uint16_t vid)$/;"	f	file:
e1000_vlan_rx_kill_vid	drivers/e1000-7.x/src/e1000_main.c	/^e1000_vlan_rx_kill_vid(struct net_device *netdev, uint16_t vid)$/;"	f	file:
e1000_vlan_rx_register	drivers/e1000-4.x/src/e1000_main.c	/^e1000_vlan_rx_register(struct net_device *netdev, struct vlan_group *grp)$/;"	f	file:
e1000_vlan_rx_register	drivers/e1000-5.x/src/e1000_main.c	/^e1000_vlan_rx_register(struct net_device *netdev, struct vlan_group *grp)$/;"	f	file:
e1000_vlan_rx_register	drivers/e1000-7.x/src/e1000_main.c	/^e1000_vlan_rx_register(struct net_device *netdev, struct vlan_group *grp)$/;"	f	file:
e1000_wait_autoneg	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_wait_autoneg(struct e1000_hw *hw)$/;"	f
e1000_wait_autoneg	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_wait_autoneg(struct e1000_hw *hw)$/;"	f
e1000_wait_autoneg	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_wait_autoneg(struct e1000_hw *hw)$/;"	f	file:
e1000_watchdog	drivers/e1000-4.x/src/e1000_main.c	/^e1000_watchdog(unsigned long data)$/;"	f	file:
e1000_watchdog	drivers/e1000-5.x/src/e1000_main.c	/^e1000_watchdog(unsigned long data)$/;"	f	file:
e1000_watchdog	drivers/e1000-7.x/src/e1000_main.c	/^e1000_watchdog(unsigned long data)$/;"	f	file:
e1000_watchdog_1	drivers/e1000-4.x/src/e1000_main.c	/^e1000_watchdog_1(struct e1000_adapter *adapter)$/;"	f
e1000_watchdog_1	drivers/e1000-5.x/src/e1000_main.c	/^e1000_watchdog_1(struct e1000_adapter *adapter)$/;"	f
e1000_watchdog_1	drivers/e1000-7.x/src/e1000_main.c	/^e1000_watchdog_1(struct e1000_adapter *adapter)$/;"	f	file:
e1000_wol_exclusion	drivers/e1000-7.x/src/e1000_ethtool.c	/^static int e1000_wol_exclusion(struct e1000_adapter *adapter, struct ethtool_wolinfo *wol)$/;"	f	file:
e1000_word_align	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_word_align = 1,$/;"	e	enum:__anon148
e1000_word_align	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_word_align = 1,$/;"	e	enum:__anon92
e1000_write_eeprom	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_write_eeprom(struct e1000_hw *hw,$/;"	f
e1000_write_eeprom	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_write_eeprom(struct e1000_hw *hw,$/;"	f
e1000_write_eeprom	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_write_eeprom(struct e1000_hw *hw,$/;"	f
e1000_write_eeprom_eewr	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_write_eeprom_eewr(struct e1000_hw *hw,$/;"	f	file:
e1000_write_eeprom_ich8	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_write_eeprom_ich8(struct e1000_hw *hw, uint16_t offset, uint16_t words,$/;"	f	file:
e1000_write_eeprom_microwire	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_write_eeprom_microwire(struct e1000_hw *hw,$/;"	f
e1000_write_eeprom_microwire	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_write_eeprom_microwire(struct e1000_hw *hw,$/;"	f	file:
e1000_write_eeprom_spi	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_write_eeprom_spi(struct e1000_hw *hw,$/;"	f
e1000_write_eeprom_spi	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_write_eeprom_spi(struct e1000_hw *hw,$/;"	f	file:
e1000_write_ich8_byte	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_write_ich8_byte(struct e1000_hw *hw, uint32_t index, uint8_t data)$/;"	f	file:
e1000_write_ich8_data	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_write_ich8_data(struct e1000_hw *hw, uint32_t index, uint32_t size,$/;"	f	file:
e1000_write_kmrn_reg	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_write_kmrn_reg(struct e1000_hw *hw,$/;"	f	file:
e1000_write_pci_cfg	drivers/e1000-4.x/src/e1000_main.c	/^e1000_write_pci_cfg(struct e1000_hw *hw, uint32_t reg, uint16_t *value)$/;"	f
e1000_write_pci_cfg	drivers/e1000-5.x/src/e1000_main.c	/^e1000_write_pci_cfg(struct e1000_hw *hw, uint32_t reg, uint16_t *value)$/;"	f
e1000_write_pci_cfg	drivers/e1000-7.x/src/e1000_main.c	/^e1000_write_pci_cfg(struct e1000_hw *hw, uint32_t reg, uint16_t *value)$/;"	f
e1000_write_phy_reg	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_write_phy_reg(struct e1000_hw *hw,$/;"	f
e1000_write_phy_reg	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_write_phy_reg(struct e1000_hw *hw,$/;"	f
e1000_write_phy_reg	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_write_phy_reg(struct e1000_hw *hw, uint32_t reg_addr,$/;"	f
e1000_write_phy_reg_ex	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_write_phy_reg_ex(struct e1000_hw *hw,$/;"	f
e1000_write_phy_reg_ex	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_write_phy_reg_ex(struct e1000_hw *hw, uint32_t reg_addr,$/;"	f	file:
e1000_write_reg_io	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_write_reg_io(struct e1000_hw *hw,$/;"	f
e1000_write_reg_io	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_write_reg_io(struct e1000_hw *hw,$/;"	f
e1000_write_reg_io	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_write_reg_io(struct e1000_hw *hw,$/;"	f	file:
e1000_write_vfta	drivers/e1000-4.x/src/e1000_hw.c	/^e1000_write_vfta(struct e1000_hw *hw,$/;"	f
e1000_write_vfta	drivers/e1000-5.x/src/e1000_hw.c	/^e1000_write_vfta(struct e1000_hw *hw,$/;"	f
e1000_write_vfta	drivers/e1000-7.x/src/e1000_hw.c	/^e1000_write_vfta(struct e1000_hw *hw,$/;"	f
e1000_xmit_frame	drivers/e1000-4.x/src/e1000_main.c	/^e1000_xmit_frame(struct sk_buff *skb, struct net_device *netdev)$/;"	f	file:
e1000_xmit_frame	drivers/e1000-5.x/src/e1000_main.c	/^e1000_xmit_frame(struct sk_buff *skb, struct net_device *netdev)$/;"	f	file:
e1000_xmit_frame	drivers/e1000-7.x/src/e1000_main.c	/^e1000_xmit_frame(struct sk_buff *skb, struct net_device *netdev)$/;"	f	file:
e1000_xmit_frame_clickpoll	drivers/e1000-5.x/src/e1000_main.c	/^e1000_xmit_frame_clickpoll(struct net_device *netdev, struct sk_buff *skb)$/;"	f	file:
e2e_signal_interval	elements/local/FlowNet/common/FlowNetGod.hh	/^	int	e2e_signal_interval;$/;"	m	struct:paramset_flowtable
e2e_signal_stable	elements/local/FlowNet/common/FlowNetGod.hh	/^	int	e2e_signal_stable;$/;"	m	struct:paramset_flowtable
e_abort	include/click/error.hh	/^    static const char e_abort[],$/;"	m	class:ErrorHandler
e_abort	lib/error.cc	/^const char ErrorHandler::e_abort[] = "<-999>";$/;"	m	class:ErrorHandler	file:
e_alert	include/click/error.hh	/^	e_alert[],$/;"	m	class:ErrorHandler
e_alert	lib/error.cc	/^const char ErrorHandler::e_alert[] = "<1>";$/;"	m	class:ErrorHandler	file:
e_critical	include/click/error.hh	/^	e_critical[],$/;"	m	class:ErrorHandler
e_critical	lib/error.cc	/^const char ErrorHandler::e_critical[] = "<2>";$/;"	m	class:ErrorHandler	file:
e_debug	include/click/error.hh	/^	e_debug[];$/;"	m	class:ErrorHandler
e_debug	lib/error.cc	/^const char ErrorHandler::e_debug[] = "<7>";$/;"	m	class:ErrorHandler	file:
e_emergency	include/click/error.hh	/^	e_emergency[],$/;"	m	class:ErrorHandler
e_emergency	lib/error.cc	/^const char ErrorHandler::e_emergency[] = "<0>";$/;"	m	class:ErrorHandler	file:
e_error	include/click/error.hh	/^	e_error[],$/;"	m	class:ErrorHandler
e_error	lib/error.cc	/^const char ErrorHandler::e_error[] = "<3>";$/;"	m	class:ErrorHandler	file:
e_fatal	include/click/error.hh	/^	e_fatal[],$/;"	m	class:ErrorHandler
e_fatal	lib/error.cc	/^const char ErrorHandler::e_fatal[] = "<-1>";$/;"	m	class:ErrorHandler	file:
e_info	include/click/error.hh	/^	e_info[],$/;"	m	class:ErrorHandler
e_info	lib/error.cc	/^const char ErrorHandler::e_info[] = "<6>";$/;"	m	class:ErrorHandler	file:
e_notice	include/click/error.hh	/^	e_notice[],$/;"	m	class:ErrorHandler
e_notice	lib/error.cc	/^const char ErrorHandler::e_notice[] = "<5>";$/;"	m	class:ErrorHandler	file:
e_warning	include/click/error.hh	/^	e_warning[],$/;"	m	class:ErrorHandler
e_warning	lib/error.cc	/^const char ErrorHandler::e_warning[] = "<4>";$/;"	m	class:ErrorHandler	file:
e_warning_annotated	include/click/error.hh	/^	e_warning_annotated[],$/;"	m	class:ErrorHandler
e_warning_annotated	lib/error.cc	/^const char ErrorHandler::e_warning_annotated[] = "<4>warning: ";$/;"	m	class:ErrorHandler	file:
ea_hdr	include/clicknet/ether.h	/^    struct click_arp ea_hdr;	\/* 0-7   (14-21)  fixed-size ARP header	     *\/$/;"	m	struct:click_ether_arp	typeref:struct:click_ether_arp::click_arp
echo_n	click-buildtool	/^echo_n () {$/;"	f
eclass	tools/click-fastclassifier/click-fastclassifier.hh	/^    ElementClassT *eclass;$/;"	m	struct:Classifier_Program
eclass	tools/click-pretty/click-pretty.cc	/^	ElementClassT *eclass;$/;"	m	union:OutputItem::__anon538	file:
eclass_sorter	apps/clicky/src/wmain.cc	/^bool eclass_sorter(const wmain::element_lister &a,$/;"	f	namespace:clicky::__anon8
ecol	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t ecol;$/;"	m	struct:e1000_hw_stats
ecol	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t ecol;$/;"	m	struct:e1000_hw_stats
ecol	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t ecol;$/;"	m	struct:e1000_hw_stats
econfiguration	lib/router.cc	/^Router::econfiguration(int eindex) const$/;"	f	class:Router
edead	tools/lib/routert.hh	/^    bool edead(int i) const		{ return _elements[i]->dead(); }$/;"	f	class:RouterT
edge_padding	apps/clicky/src/dstyle.hh	/^    double edge_padding;$/;"	m	struct:clicky::dport_style
editable	apps/clicky/src/hvalues.hh	/^    bool editable() const {$/;"	f	class:clicky::handler_value
editable	apps/clicky/src/whandler.hh	/^	bool editable() const {$/;"	f	struct:clicky::whandler::hinfo
eedump_len	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t eedump_len;$/;"	m	struct:k_ethtool_drvinfo
eedump_len	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t eedump_len;$/;"	m	struct:k_ethtool_drvinfo
eeprom	drivers/e1000-5.x/src/e1000_hw.h	/^    struct e1000_eeprom_info eeprom;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_eeprom_info
eeprom	drivers/e1000-7.x/src/e1000_hw.h	/^    struct e1000_eeprom_info eeprom;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_eeprom_info
eeprom_semaphore_present	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t eeprom_semaphore_present;$/;"	m	struct:e1000_hw
eeprom_shadow_ram	drivers/e1000-7.x/src/e1000_hw.h	/^    struct e1000_shadow_ram *eeprom_shadow_ram;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_shadow_ram
eeprom_wol	drivers/e1000-7.x/src/e1000.h	/^	uint32_t eeprom_wol;$/;"	m	struct:e1000_adapter
eeprom_word	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t    eeprom_word;$/;"	m	struct:e1000_shadow_ram
eh	test/testie	/^sub eh ($) {$/;"	s
ei	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	struct E2ESignalInfo ei;$/;"	m	struct:SchedInfo	typeref:struct:SchedInfo::E2ESignalInfo
eindex	apps/clicky/src/dwidget.hh	/^    int eindex() const {$/;"	f	class:clicky::delt
eindex	bsdmodule/clickfs_tree.hh	/^	    int eindex;$/;"	m	struct:clickfs_dirent::__anon34::handle_struct
eindex	include/click/element.hh	/^Element::eindex() const$/;"	f	class:Element
eindex	include/click/element.hh	/^Element::eindex(Router* r) const$/;"	f	class:Element
eindex	tools/click-devirtualize/specializer.hh	/^  int eindex;$/;"	m	struct:SpecializedClass
eindex	tools/lib/elementt.hh	/^    int eindex() const			{ return (element ? element->eindex() : -1); }$/;"	f	struct:PortT
eindex	tools/lib/elementt.hh	/^    int eindex() const			{ return _eindex; }$/;"	f	struct:ElementT
eindex	tools/lib/elementt.hh	/^    int eindex(bool isoutput) const {$/;"	f	class:ConnectionT
eindex	tools/lib/routert.hh	/^    int eindex() const			{ return _e->eindex(); }$/;"	f	class:RouterT::const_iterator
eindex	tools/lib/routert.hh	/^    int eindex() const			{ return _e->eindex(); }$/;"	f	class:RouterT::const_type_iterator
eindex	tools/lib/routert.hh	/^    int eindex(const String &name) const { return _element_name_map[name]; }$/;"	f	class:RouterT
el_abort	include/click/error.hh	/^	el_abort = -999,	\/\/\/< Error level that triggers abort().$/;"	e	enum:ErrorHandler::Level
el_alert	include/click/error.hh	/^	el_alert = 1,		\/\/\/< Alert error level: action must be taken.$/;"	e	enum:ErrorHandler::Level
el_critical	include/click/error.hh	/^	el_critical = 2,	\/\/\/< Error level for critical conditions.$/;"	e	enum:ErrorHandler::Level
el_debug	include/click/error.hh	/^	el_debug = 7		\/\/\/< Error level for debug messages.$/;"	e	enum:ErrorHandler::Level
el_emergency	include/click/error.hh	/^	el_emergency = 0,	\/\/\/< Emergency error level: system is unusable.$/;"	e	enum:ErrorHandler::Level
el_error	include/click/error.hh	/^	el_error = 3,		\/\/\/< Error level for normal error conditions.$/;"	e	enum:ErrorHandler::Level
el_fatal	include/click/error.hh	/^	el_fatal = -1,		\/\/\/< Fatal exit error level.$/;"	e	enum:ErrorHandler::Level
el_info	include/click/error.hh	/^	el_info = 6,		\/\/\/< Error level for informational messages.$/;"	e	enum:ErrorHandler::Level
el_notice	include/click/error.hh	/^	el_notice = 5,		\/\/\/< Error level for normal, but significant$/;"	e	enum:ErrorHandler::Level
el_warning	include/click/error.hh	/^	el_warning = 4,		\/\/\/< Error level for warning conditions.$/;"	e	enum:ErrorHandler::Level
elandmark	lib/router.cc	/^Router::elandmark(int eindex) const$/;"	f	class:Router
elapsed_in_this_state	elements/local/OpenFlow/lib/rconn.cc	/^elapsed_in_this_state(const struct rconn *rc)$/;"	f	file:
elapsed_remainder	elements/local/OpenFlow/lib/stp.cc	/^    int elapsed_remainder;          \/* Left-over msecs from last stp_tick(). *\/$/;"	m	struct:stp	file:
elem2make	click-buildtool	/^elem2make () {$/;"	f
elem2xxx	click-buildtool	/^elem2xxx () {$/;"	f
elem2xxx_usage	click-buildtool	/^elem2xxx_usage () {$/;"	f
elem_map	elements/linuxmodule/touserdevice.cc	/^volatile ToUserDevice *ToUserDevice::elem_map[256] = {0};$/;"	m	class:ToUserDevice	file:
elem_map	elements/linuxmodule/touserdevice.hh	/^    static volatile ToUserDevice *elem_map[256];$/;"	m	class:ToUserDevice
element	apps/clicky/src/wmain.hh	/^	ElementT *element;$/;"	m	struct:clicky::wmain::element_lister
element	include/click/confparse.hh	/^	Element *element;$/;"	m	union:cp_value::__anon479
element	include/click/element.hh	/^Element::Port::element() const$/;"	f	class:Element::Port
element	include/click/handlercall.hh	/^    Element *element() const {$/;"	f	class:HandlerCall
element	include/click/router.hh	/^Router::element(int i) const$/;"	f	class:Router
element	include/click/task.hh	/^    inline Element *element() const {$/;"	f	class:Task
element	lib/router.cc	/^Router::element(const Router *router, int eindex)$/;"	f	class:Router
element	tools/click-pretty/click-pretty.cc	/^	ElementT *element;$/;"	m	union:OutputItem::__anon538	file:
element	tools/lib/elementt.hh	/^    ElementT *element(bool isoutput) const {$/;"	f	class:ConnectionT
element	tools/lib/elementt.hh	/^    ElementT *element;$/;"	m	struct:PortT
element	tools/lib/routert.hh	/^    ElementT *element(int i)		{ return _elements[i]; }$/;"	f	class:RouterT
element	tools/lib/routert.hh	/^    const ElementT *element(int i) const{ return _elements[i]; }$/;"	f	class:RouterT
element	tools/lib/routert.hh	/^RouterT::element(const String &s) const$/;"	f	class:RouterT
element	tools/lib/routert.hh	/^RouterT::element(const String &s)$/;"	f	class:RouterT
elementName	apps/ClickController/ControlSocket.java	/^	String elementName;$/;"	f	class:ControlSocket.HandlerInfo
element_error_hook	lib/error.cc	/^element_error_hook(int, VA_LIST_REF_T val)$/;"	f	file:
element_exists	apps/clicky/src/crouter.cc	/^bool crouter::element_exists(const String &ename, bool only_primitive) const$/;"	f	class:clicky::crouter
element_hindexes	lib/router.cc	/^Router::element_hindexes(const Element *e, Vector<int> &result)$/;"	f	class:Router
element_hook	lib/timer.cc	/^Timer::element_hook(Timer *timer, void *thunk)$/;"	f	class:Timer
element_landmark	lib/lexer.cc	/^    String element_landmark(int e) const {$/;"	f	class:Lexer::Compound
element_landmark	lib/lexer.cc	/^Lexer::element_landmark(int eid) const$/;"	f	class:Lexer
element_landmark_t	include/click/router.hh	/^    struct element_landmark_t {$/;"	s	class:Router
element_lerror	lib/router.cc	/^Router::element_lerror(ErrorHandler *errh, Element *e,$/;"	f	class:Router
element_lister	apps/clicky/src/wmain.hh	/^    struct element_lister {$/;"	s	class:clicky::wmain
element_map	apps/clicky/src/crouter.hh	/^    ElementMap *element_map() const {$/;"	f	class:clicky::crouter
element_map	tools/click-align/click-align.cc	/^static ElementMap element_map;$/;"	v	file:
element_map	tools/lib/processingt.hh	/^    ElementMap *element_map() const {$/;"	f	class:ProcessingT
element_map_stack	tools/lib/elementmap.cc	/^static Vector<ElementMap *> element_map_stack;$/;"	v	file:
element_name	apps/clicky/src/hvalues.hh	/^    String element_name() const {$/;"	f	class:clicky::handler_value
element_name	apps/csclient/csclient.hh	/^    string element_name;$/;"	m	struct:ControlSocketClient::handler_info_t
element_name	lib/lexer.cc	/^Lexer::element_name(int eid) const$/;"	f	class:Lexer
element_name_compar	tools/click-pretty/click-pretty.cc	/^element_name_compar(const void *v1, const void *v2)$/;"	f	file:
element_name_search	lib/ino.cc	/^ClickIno::element_name_search(const String &n, int elementno) const$/;"	f	class:ClickIno
element_name_sorter_compar	lib/router.cc	/^element_name_sorter_compar(const void *ap, const void *bp, void *user_data)$/;"	f	file:
element_ports_string	lib/router.cc	/^Router::element_ports_string(const Element *e) const$/;"	f	class:Router
element_show	apps/clicky/src/wdiagram.cc	/^void wdiagram::element_show(const String &ename, bool scroll_to)$/;"	f	class:clicky::wdiagram
element_show	apps/clicky/src/wmain.cc	/^void wmain::element_show(String ename, int expand, bool incremental)$/;"	f	class:clicky::wmain
element_showing	apps/clicky/src/wmain.hh	/^    const String &element_showing() const {$/;"	f	class:clicky::wmain
element_tree_sort	apps/clicky/src/wmain.cc	/^void wmain::element_tree_sort(int state)$/;"	f	class:clicky::wmain
element_type	apps/clicky/src/crouter.cc	/^ElementClassT *crouter::element_type(const String &ename) const$/;"	f	class:clicky::crouter
element_type	include/click/lexer.hh	/^    int element_type(const String &name) const {$/;"	f	class:Lexer
element_type	tools/lib/lexert.cc	/^LexerT::element_type(const Lexeme &t) const$/;"	f	class:LexerT
element_type_names	lib/lexer.cc	/^Lexer::element_type_names(Vector<String> &v) const$/;"	f	class:Lexer
element_unhighlight	apps/clicky/src/wmain.cc	/^void wmain::element_unhighlight()$/;"	f	class:clicky::wmain
elementmap_provisions	click-buildtool	/^elementmap_provisions () {$/;"	f
elementno	include/click/ino.hh	/^ClickIno::elementno(int xindex) const$/;"	f	class:ClickIno
elementno_plus1	include/click/ino.hh	/^	uint16_t elementno_plus1;$/;"	m	struct:ClickIno::Entry
elements	include/click/router.hh	/^Router::elements() const$/;"	f	class:Router
elements	include/click/routervisitor.hh	/^    const Vector<Element *> &elements() const {$/;"	f	class:ElementTracker
elementtreesort_callback	apps/clicky/src/wmain.cc	/^static void elementtreesort_callback(GtkButton *, gpointer user_data)$/;"	f	file:
elist_sort_class	apps/clicky/src/wmain.hh	/^    enum { elist_sort_none = 0, elist_sort_name, elist_sort_class };$/;"	e	enum:clicky::wmain::__anon7
elist_sort_name	apps/clicky/src/wmain.hh	/^    enum { elist_sort_none = 0, elist_sort_name, elist_sort_class };$/;"	e	enum:clicky::wmain::__anon7
elist_sort_none	apps/clicky/src/wmain.hh	/^    enum { elist_sort_none = 0, elist_sort_name, elist_sort_class };$/;"	e	enum:clicky::wmain::__anon7
elive	tools/lib/routert.hh	/^    bool elive(int i) const		{ return _elements[i]->live(); }$/;"	f	class:RouterT
elt	apps/clicky/src/dwidget.hh	/^    delt *elt(bool isoutput) const {$/;"	f	class:clicky::dconn
elt	apps/clicky/src/wdiagram.hh	/^    delt *elt(const String &ename) const {$/;"	f	class:clicky::cdiagram
elt	apps/clicky/src/wdiagram.hh	/^    delt *elt(const String &ename) const {$/;"	f	class:clicky::wdiagram
elt	include/click/hashtable.hh	/^	elt(const T &v_)$/;"	f	struct:HashTable::elt
elt	include/click/hashtable.hh	/^    struct elt {$/;"	s	class:HashTable
elt_pm	apps/clicky/src/dstyle.cc	/^static dcss_propmatch elt_pm[] = {$/;"	m	namespace:clicky	file:
elt_pmp	apps/clicky/src/dstyle.cc	/^static dcss_propmatch *elt_pmp[num_elt_pm];$/;"	m	namespace:clicky	file:
elt_size_pm	apps/clicky/src/dstyle.cc	/^static dcss_propmatch elt_size_pm[] = {$/;"	m	namespace:clicky	file:
elt_size_pmp	apps/clicky/src/dstyle.cc	/^static dcss_propmatch *elt_size_pmp[num_elt_size_pm];$/;"	m	namespace:clicky	file:
elt_size_style	apps/clicky/src/dstyle.cc	/^ref_ptr<delt_size_style> dcss_set::elt_size_style(crouter *cr, const delt *e, int *sensitivity)$/;"	f	class:clicky::dcss_set
elt_style	apps/clicky/src/dstyle.cc	/^ref_ptr<delt_style> dcss_set::elt_style(crouter *cr, const delt *e, int *sensitivity)$/;"	f	class:clicky::dcss_set
emap	tools/click-pretty/click-pretty.cc	/^    ElementMap emap;$/;"	m	struct:PrettyRouter	file:
emerg_flow	elements/local/OpenFlow/lib/switch-flow.hh	/^    uint8_t emerg_flow;         \/* Emergency flow indicator *\/$/;"	m	struct:sw_flow
emerg_flow_context	elements/local/OpenFlow/lib/private-msg.cc	/^struct emerg_flow_context {$/;"	s	file:
emerg_table	elements/local/OpenFlow/lib/chain.hh	/^    struct sw_table *emerg_table;$/;"	m	struct:sw_chain	typeref:struct:sw_chain::sw_table
emission_report	elements/linuxmodule/fromdevice.cc	/^FromDevice::emission_report(int idx)$/;"	f	class:FromDevice
emit	apps/clicky/src/gathererror.cc	/^void *GatherErrorHandler::emit(const String &str, void *, bool more)$/;"	f	class:GatherErrorHandler
emit	bsdmodule/kernelerror.cc	/^KernelErrorHandler::emit(const String &str, void *, bool)$/;"	f	class:KernelErrorHandler
emit	bsdmodule/module.cc	/^KernelErrorHandler::emit(const String &str, void *, bool)$/;"	f	class:KernelErrorHandler
emit	elements/test/confparsetest.cc	/^    void *emit(const String &str, void *, bool) {$/;"	f	class:__anon404::RecordErrorHandler
emit	elements/test/errortest.cc	/^    void *emit(const String &str, void *, bool) {$/;"	f	class:__anon401::ErrorTestHandler
emit	elements/userlevel/chattersocket.cc	/^ChatterSocketErrorHandler::emit(const String &str, void *user_data, bool more)$/;"	f	class:ChatterSocketErrorHandler
emit	elements/userlevel/chattersocket.hh	/^ChatterSocket::emit(const String &message)$/;"	f	class:ChatterSocket
emit	elements/userlevel/controlsocket.cc	/^ControlSocketErrorHandler::emit(const String &str, void *, bool)$/;"	f	class:ControlSocketErrorHandler
emit	lib/error.cc	/^ErrorHandler::emit(const String &, void *user_data, bool)$/;"	f	class:ErrorHandler
emit	lib/error.cc	/^ErrorVeneer::emit(const String &str, void *user_data, bool more)$/;"	f	class:ErrorVeneer
emit	lib/error.cc	/^FileErrorHandler::emit(const String &str, void *, bool)$/;"	f	class:FileErrorHandler
emit	linuxmodule/clickfs.cc	/^    void *emit(const String &str, void *, bool) {$/;"	f	class:__anon523::ClickfsHandlerErrorHandler
emit	linuxmodule/module.cc	/^KernelErrorHandler::emit(const String &str, void *, bool)$/;"	f	class:KernelErrorHandler
emit_fragment_head	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::emit_fragment_head(HostPairInfo *hpinfo)$/;"	f	class:AggregateIPFlows
emit_whole_packet	elements/ip/ipreassembler.cc	/^IPReassembler::emit_whole_packet(WritablePacket *q, WritablePacket **q_pprev,$/;"	f	class:IPReassembler
empty	apps/ClickController/ClickController.java	/^    public boolean empty() {$/;"	m	class:ClickController
empty	apps/clicky/src/crouter.cc	/^bool crouter::empty() const$/;"	f	class:clicky::crouter
empty	apps/clicky/src/hvalues.hh	/^    bool empty() const {$/;"	f	class:clicky::handler_value
empty	apps/clicky/src/hvalues.hh	/^    inline bool empty() const {$/;"	f	struct:clicky::handler_values
empty	elements/analysis/aggcounter.hh	/^    bool empty() const			{ return _num_nonzero == 0; }$/;"	f	class:AggregateCounter
empty	elements/grid/region.hh	/^  bool empty() { return _w < 0 || _h < 0; }$/;"	f	class:RectRegion
empty	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.cc	/^int FrameReceivingBuffer::empty()$/;"	f	class:FrameReceivingBuffer
empty	include/click/args.hh	/^    bool empty() const {$/;"	f	struct:Args
empty	include/click/handlercall.hh	/^    bool empty() const {$/;"	f	class:HandlerCall
empty	include/click/hashcontainer.hh	/^    inline bool empty() const {$/;"	f	class:HashContainer
empty	include/click/hashmap.hh	/^  bool empty() const			{ return _n == 0; }$/;"	f	class:HashMap
empty	include/click/hashtable.hh	/^    inline bool empty() const {$/;"	f	class:HashTable
empty	include/click/ipaddress.hh	/^    inline bool empty() const {$/;"	f	class:IPAddress
empty	include/click/list.hh	/^    bool empty() const {$/;"	f	class:List
empty	include/click/standard/storage.hh	/^    bool empty() const			{ return _head == _tail; }$/;"	f	class:Storage
empty	include/click/tokenbucket.hh	/^    bool empty() const {$/;"	f	class:TokenBucketX
empty	include/click/tokenbucket.hh	/^    bool empty() const {$/;"	f	class:TokenCounterX
empty	include/click/vector.hh	/^    bool empty() const			{ return _n == 0; }$/;"	f	class:Vector
empty	include/click/vector.hh	/^    bool empty() const		{ return Base::empty(); }$/;"	f	class:Vector
empty	linuxmodule/skbmgr.cc	/^  bool empty() const		{ return _head == _tail; }$/;"	f	class:RecycledSkbBucket
empty	ns/CUT_BinHeap.h	/^  bool  empty() const {$/;"	f	class:CUT_BinHeap
empty	test/testie	/^sub empty ($) {$/;"	s
empty	tools/click-align/alignment.hh	/^    bool empty() const {$/;"	f	class:Alignment
empty	tools/lib/elementmap.hh	/^    bool empty() const				{ return _e.size() == 1; }$/;"	f	class:ElementMap
empty	tools/lib/landmarkt.cc	/^LandmarkT *LandmarkT::empty;$/;"	m	class:LandmarkT	file:
empty	tools/lib/landmarkt.hh	/^    static LandmarkT *empty;$/;"	m	class:LandmarkT
empty	tools/lib/routert.hh	/^    inline bool empty() const			{ return !_conn; }$/;"	f	class:RouterT::conn_iterator
empty_landmark	tools/lib/landmarkt.hh	/^LandmarkT::empty_landmark()$/;"	f	class:LandmarkT
empty_modulus	tools/click-align/alignment.hh	/^	empty_modulus = 0,$/;"	e	enum:Alignment::__anon541
empty_program	elements/standard/classifier.cc	/^Classifier::empty_program(ErrorHandler *errh) const$/;"	f	class:Classifier
en	elements/ethernet/ip6ndsolicitor.hh	/^    EtherAddress en;$/;"	m	struct:IP6NDSolicitor::NDEntry
en_mng_pt	drivers/e1000-5.x/src/e1000.h	/^	uint32_t en_mng_pt;$/;"	m	struct:e1000_adapter
en_mng_pt	drivers/e1000-7.x/src/e1000.h	/^	uint32_t en_mng_pt;$/;"	m	struct:e1000_adapter
ena	elements/ethernet/arpresponder.hh	/^	EtherAddress ena;$/;"	m	struct:ARPResponder::Entry
ena	elements/ethernet/ip6ndadvertiser.hh	/^    EtherAddress ena;$/;"	m	struct:IP6NDAdvertiser::Entry
enable	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint8_t enable;           \/* Set to 1 to enable Flow End message$/;"	m	struct:nx_flow_end_config
enableClose	apps/ClickController/ClickController.java	/^    public void enableClose() {$/;"	m	class:ClickController
enable_BP	elements/local/FlowNet/common/FlowNetGod.hh	/^	int enable_BP;$/;"	m	struct:paramset_flowtable
enable_bandwidth_damper	elements/local/FlowNet/common/FlowNetGod.hh	/^	int	enable_bandwidth_damper;$/;"	m	struct:paramset_flowtable
enable_control_vibration	elements/local/FlowNet/common/FlowNetGod.hh	/^	int	enable_control_vibration;$/;"	m	struct:paramset_flowtable
enable_neighbor_table	elements/local/FlowNet/common/FlowNetGod.hh	/^	int	enable_neighbor_table;$/;"	m	struct:paramset_flowtable
enable_option	drivers/e1000-4.x/src/e1000_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:e1000_option::__anon66	file:
enable_option	drivers/e1000-5.x/src/e1000_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:e1000_option::__anon163	file:
enable_option	drivers/e1000-7.x/src/e1000_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:e1000_option::__anon121	file:
enable_papmo	elements/local/FlowNet/common/FlowNetGod.hh	/^	int enable_papmo;$/;"	m	class:FlowNetGod
enable_perfect_source_rate_control	elements/local/FlowNet/common/FlowNetGod.hh	/^	int enable_perfect_source_rate_control;$/;"	m	struct:paramset_flowtable
enable_postfix_calculator	elements/local/FlowNet/common/FlowNetGod.hh	/^	int	enable_postfix_calculator;$/;"	m	struct:paramset_flowtable
enable_qlen_monitor_ewma	elements/local/FlowNet/common/FlowNetGod.hh	/^	int	enable_qlen_monitor_ewma;$/;"	m	struct:paramset_flowtable
enable_qlen_monitor_sequence	elements/local/FlowNet/common/FlowNetGod.hh	/^	int	enable_qlen_monitor_sequence;$/;"	m	struct:paramset_flowtable
enable_random_schedule	elements/local/FlowNet/common/FlowNetGod.hh	/^	int	enable_random_schedule;$/;"	m	struct:paramset_flowtable
enable_ref_ptr	apps/clicky/src/ref.hh	/^    enable_ref_ptr()$/;"	f	class:enable_ref_ptr
enable_ref_ptr	apps/clicky/src/ref.hh	/^class enable_ref_ptr { public:$/;"	c
enable_wake	drivers/e1000-4.x/src/kcompat.h	/^	int (*enable_wake)(struct pci_dev *dev, u32 state, int enable);$/;"	m	struct:_kc_pci_driver
ename	lib/router.cc	/^Router::ename(int eindex) const$/;"	f	class:Router
ename	tools/lib/routert.hh	/^RouterT::ename(int e) const$/;"	f	class:RouterT
ename_sorter	apps/clicky/src/wmain.cc	/^bool ename_sorter(const wmain::element_lister &a,$/;"	f	namespace:clicky::__anon8
encap_to_string	elements/grid/printgrid.cc	/^PrintGrid::encap_to_string(const grid_nbr_encap *nb) const$/;"	f	class:PrintGrid
encapsulate_bpadapt	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^WritablePacket* FlowMpeg2AdaptEncap::encapsulate_bpadapt( Packet* p, int frametype )$/;"	f	class:FlowMpeg2AdaptEncap
encode16	elements/ip/rfc2507c.cc	/^RFC2507c::encode16(int o, int n, char *p, int &i)$/;"	f	class:RFC2507c
encode32	elements/ip/rfc2507c.cc	/^RFC2507c::encode32(int o, int n, char *p, int &i)$/;"	f	class:RFC2507c
encodeX	elements/ip/rfc2507c.cc	/^RFC2507c::encodeX(int o, int n, char *p, int &i)$/;"	f	class:RFC2507c
encode_utf8	lib/clp.c	/^encode_utf8(char *s, int n, int c)$/;"	f	file:
encrypt_key_index	elements/wifi/athdesc.h	/^	u_int32_t	encrypt_key_index:7;$/;"	m	struct:ar5212_desc
encrypt_key_valid	elements/wifi/athdesc.h	/^	u_int32_t	encrypt_key_valid:1;$/;"	m	struct:ar5212_desc
end	apps/clicky/src/gathererror.hh	/^    const_iterator end() const		{ return _v.end(); }$/;"	f	class:GatherErrorHandler
end	apps/clicky/src/gathererror.hh	/^    iterator end()			{ return _v.end(); }$/;"	f	class:GatherErrorHandler
end	apps/clicky/src/hvalues.hh	/^    inline iterator end() {$/;"	f	struct:clicky::handler_values
end	apps/clicky/src/permstr.hh	/^inline const char *PermString::end() const$/;"	f	class:PermString
end	elements/local/OpenFlow/lib/vconn.hh	/^    const uint8_t *pos, *end;$/;"	m	struct:flow_stats_iterator
end	elements/standard/classification.hh	/^    const Insn *end() const {$/;"	f	class:Classification::Wordwise::Program
end	elements/standard/classification.hh	/^    const uint32_t *end() const {$/;"	f	class:Classification::Wordwise::CompressedProgram
end	include/click/dequeue.hh	/^    const_iterator end() const		{ return const_iterator((DEQueue<T> &) *this, _n); }$/;"	f	class:DEQueue
end	include/click/dequeue.hh	/^    iterator end()			{ return iterator(*this, _n); }$/;"	f	class:DEQueue
end	include/click/hashcontainer.hh	/^HashContainer<T, A>::end() const$/;"	f	class:HashContainer
end	include/click/hashcontainer.hh	/^HashContainer<T, A>::end()$/;"	f	class:HashContainer
end	include/click/hashmap.hh	/^HashMap<K, T *>::end() const$/;"	f	class:HashMap
end	include/click/hashmap.hh	/^HashMap<K, T *>::end()$/;"	f	class:HashMap
end	include/click/hashmap.hh	/^HashMap<K, V>::end() const$/;"	f	class:HashMap
end	include/click/hashmap.hh	/^HashMap<K, V>::end()$/;"	f	class:HashMap
end	include/click/hashmap.hh	/^HashMap<K, void *>::end() const$/;"	f	class:HashMap
end	include/click/hashmap.hh	/^HashMap<K, void *>::end()$/;"	f	class:HashMap
end	include/click/hashtable.hh	/^    inline const_iterator end() const {$/;"	f	class:HashTable
end	include/click/hashtable.hh	/^    inline iterator end() {$/;"	f	class:HashTable
end	include/click/hashtable.hh	/^inline typename HashTable<T>::const_iterator HashTable<T>::end() const$/;"	f	class:HashTable
end	include/click/hashtable.hh	/^inline typename HashTable<T>::iterator HashTable<T>::end()$/;"	f	class:HashTable
end	include/click/list.hh	/^    const_iterator end() const {$/;"	f	class:List
end	include/click/list.hh	/^    iterator end() {$/;"	f	class:List
end	include/click/routervisitor.hh	/^    const_iterator end() const {$/;"	f	class:ElementTracker
end	include/click/straccum.hh	/^    inline StringAccum::const_iterator end() const {$/;"	f	class:StringAccum
end	include/click/straccum.hh	/^    inline iterator end() {$/;"	f	class:StringAccum
end	include/click/string.hh	/^    inline const_iterator end() const {$/;"	f	class:String
end	include/click/vector.hh	/^    const_iterator end() const		{ return _l + _n; }$/;"	f	class:Vector
end	include/click/vector.hh	/^    const_iterator end() const	{ return (const_iterator)(Base::end()); }$/;"	f	class:Vector
end	include/click/vector.hh	/^    iterator end()			{ return _l + _n; }$/;"	f	class:Vector
end	include/click/vector.hh	/^    iterator end()		{ return (iterator)(Base::end()); }$/;"	f	class:Vector
end	tools/lib/elementt.hh	/^    const PortT &end(bool isoutput) const {$/;"	f	class:ConnectionT
end	tools/lib/routert.hh	/^	ConnectionX *end[2];$/;"	m	struct:RouterT::Pair
end_all	tools/lib/routert.hh	/^    enum { end_all = 2 };$/;"	e	enum:RouterT::__anon536
end_buffer	include/click/packet.hh	/^Packet::end_buffer() const$/;"	f	class:Packet
end_buffer	include/click/packet.hh	/^WritablePacket::end_buffer() const$/;"	f	class:WritablePacket
end_connections	tools/lib/routert.hh	/^RouterT::end_connections() const$/;"	f	class:RouterT
end_contents	apps/clicky/src/dwidget.hh	/^    iterator end_contents() const {$/;"	f	class:clicky::delt
end_data	elements/analysis/ipsumdumpinfo.hh	/^    const unsigned char *end_data() const {$/;"	f	struct:IPSummaryDump::PacketDesc
end_data	include/click/packet.hh	/^Packet::end_data() const$/;"	f	class:Packet
end_data	include/click/packet.hh	/^WritablePacket::end_data() const$/;"	f	class:WritablePacket
end_element_handler	tools/click2xml/xml2click.cc	/^end_element_handler(void *v, const XML_Char *name)$/;"	f	file:
end_elements	tools/lib/routert.hh	/^RouterT::end_elements() const$/;"	f	class:RouterT
end_elements	tools/lib/routert.hh	/^RouterT::end_elements()$/;"	f	class:RouterT
end_flow	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::end_flow(Flow *f, ErrorHandler *)$/;"	f	class:AggregatePacketCounter
end_flow	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::end_flow(Flow *f, ErrorHandler *errh)$/;"	f	class:ToIPFlowDumps
end_flow	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::end_flow(Flow *f, ErrorHandler *)$/;"	f	class:IPFlowRawSockets
end_from	tools/lib/elementt.hh	/^    enum { end_to = 0, end_from = 1 };$/;"	e	enum:ConnectionT::__anon529
end_from	tools/lib/processingt.hh	/^	end_from = ConnectionT::end_from$/;"	e	enum:ProcessingT::__anon530
end_from	tools/lib/routert.hh	/^    enum { end_to = ConnectionT::end_to, end_from = ConnectionT::end_from };$/;"	e	enum:RouterT::__anon535
end_item	tools/click-pretty/click-pretty.cc	/^    bool end_item() const		{ return _end_item; }$/;"	f	struct:OutputItem
end_item_index	tools/click-pretty/click-pretty.cc	/^OutputItem::end_item_index() const$/;"	f	class:OutputItem
end_items	tools/click-pretty/click-pretty.cc	/^static Vector<OutputItem> end_items;$/;"	v	file:
end_offset	apps/clicky/src/gathererror.hh	/^    inline int end_offset() const	{ return _end_offset; }$/;"	f	class:GatherErrorHandler
end_offset	tools/lib/landmarkt.hh	/^	unsigned end_offset;$/;"	m	struct:LandmarkSetT::LandmarkInfo
end_parse	lib/lexer.cc	/^Lexer::end_parse(int cookie)$/;"	f	class:Lexer
end_time	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint64_t end_time;        \/* Time flow ended in milliseconds. *\/$/;"	m	struct:nx_flow_end
end_to	tools/lib/elementt.hh	/^    enum { end_to = 0, end_from = 1 };$/;"	e	enum:ConnectionT::__anon529
end_to	tools/lib/processingt.hh	/^	end_to = ConnectionT::end_to,$/;"	e	enum:ProcessingT::__anon530
end_to	tools/lib/routert.hh	/^    enum { end_to = ConnectionT::end_to, end_from = ConnectionT::end_from };$/;"	e	enum:RouterT::__anon535
enew_cxx_type	tools/click-devirtualize/specializer.cc	/^Specializer::enew_cxx_type(int i) const$/;"	f	class:Specializer
engress_speed	elements/local/FlowNet/common/Flow.hh	/^	double engress_speed;$/;"	m	struct:FlowStat
enq	elements/standard/simplequeue.hh	/^SimpleQueue::enq(Packet *p)$/;"	f	class:SimpleQueue
enq	linuxmodule/skbmgr.cc	/^RecycledSkbBucket::enq(struct sk_buff *skb)$/;"	f	class:RecycledSkbBucket
enq_epoch	elements/linuxmodule/fromdevice.hh	/^	uint32_t enq_epoch;$/;"	m	struct:FromDevice::Schinfo
enq_state	elements/linuxmodule/fromdevice.hh	/^	char enq_state;$/;"	m	struct:FromDevice::Schinfo
enq_task_epoch	elements/linuxmodule/fromdevice.hh	/^	uint32_t enq_task_epoch;$/;"	m	struct:FromDevice::Schinfo
enq_task_scheduled	elements/linuxmodule/fromdevice.hh	/^	char enq_task_scheduled;$/;"	m	struct:FromDevice::Schinfo
enq_time	elements/linuxmodule/fromdevice.hh	/^	Timestamp enq_time;$/;"	m	struct:FromDevice::Schinfo
enq_woke_process	elements/linuxmodule/fromdevice.hh	/^	char enq_woke_process;$/;"	m	struct:FromDevice::Schinfo
enque	elements/local/FlowNet/common/Flow.cc	/^int Flow::enque(Packet* p)$/;"	f	class:Flow
enque	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^int FlowMpeg2AdaptDecap::enque( Packet* p, const Element* e, papmo* papmo )$/;"	f	class:FlowMpeg2AdaptDecap
enque	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^int FlowMpeg2AdaptEncap::enque( Packet* p, const Element* e )$/;"	f	class:FlowMpeg2AdaptEncap
enque	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.cc	/^int FrameReceivingBuffer::enque(Packet* p)$/;"	f	class:FrameReceivingBuffer
ensure	elements/ethernet/arptable.cc	/^ARPTable::ensure(IPAddress ip, click_jiffies_t now)$/;"	f	class:ARPTable
enter_element	apps/clicky/src/scopechain.cc	/^ScopeChain::enter_element(ElementT *e)$/;"	f	class:ScopeChain
entry	elements/grid/loctable.hh	/^    entry() : err(-1) { }$/;"	f	struct:LocationTable::entry
entry	elements/grid/loctable.hh	/^    entry(grid_location l, int e) : loc(l), err(e) { }$/;"	f	struct:LocationTable::entry
entry	elements/grid/loctable.hh	/^  struct entry {$/;"	s	class:LocationTable
entry	elements/ip/iprwmapping.hh	/^    IPRewriterEntry &entry(bool direction) {$/;"	f	class:IPRewriterFlow
entry	elements/ip/iprwmapping.hh	/^    const IPRewriterEntry &entry(bool direction) const {$/;"	f	class:IPRewriterFlow
entry_capacity	elements/ethernet/arptable.hh	/^    uint32_t entry_capacity() const {$/;"	f	class:ARPTable
entry_compar	lib/ino.cc	/^entry_compar(const void *v1, const void *v2, void *)$/;"	f	file:
entry_compare	elements/ethernet/arpresponder.cc	/^ARPResponder::entry_compare(const void *ap, const void *bp, void *user_data)$/;"	f	class:ARPResponder
environ	elements/analysis/toipflowdumps.cc	/^extern "C" char **environ;$/;"	v
epoch	elements/ip/ipratemon.hh	/^	static unsigned epoch() {$/;"	f	struct:IPRateMonitor::EWMAParameters
epoch	include/click/ewma.hh	/^    static unsigned epoch() {$/;"	f	class:RateEWMAXParameters
epoch	include/click/tokenbucket.hh	/^    epoch_type epoch() const {$/;"	f	class:TokenRateX
epoch	include/click/tokenbucket.hh	/^    epoch_type epoch(U time) const {$/;"	f	class:TokenRateX
epoch	include/click/tokenbucket.hh	/^    static epoch_type epoch() {$/;"	f	class:TokenBucketJiffyParameters
epoch	include/click/tokenbucket.hh	/^    static epoch_type epoch(epoch_type t) {$/;"	f	class:TokenBucketJiffyParameters
epoch_difference_type	include/click/tokenbucket.hh	/^    typedef click_jiffies_difference_t epoch_difference_type;$/;"	t	class:TokenBucketJiffyParameters
epoch_frequency	elements/ip/ipratemon.hh	/^	static unsigned epoch_frequency() {$/;"	f	struct:IPRateMonitor::EWMAParameters
epoch_frequency	include/click/ewma.hh	/^    static unsigned epoch_frequency() {$/;"	f	class:RateEWMAXParameters
epoch_frequency	include/click/tokenbucket.hh	/^    static unsigned epoch_frequency() {$/;"	f	class:TokenBucketJiffyParameters
epoch_less	include/click/tokenbucket.hh	/^    static bool epoch_less(epoch_type a, epoch_type b) {$/;"	f	class:TokenBucketJiffyParameters
epoch_monotonic_difference	include/click/tokenbucket.hh	/^    epoch_type epoch_monotonic_difference(epoch_type a, epoch_type b) const {$/;"	f	class:TokenRateX
epoch_monotonic_difference	include/click/tokenbucket.hh	/^    static epoch_type epoch_monotonic_difference(epoch_type a, epoch_type b) {$/;"	f	class:TokenBucketJiffyParameters
epoch_timestamp	include/click/tokenbucket.hh	/^    static Timestamp epoch_timestamp(epoch_difference_type x) {$/;"	f	class:TokenBucketJiffyParameters
epoch_timestamp	include/click/tokenbucket.hh	/^    static Timestamp epoch_timestamp(epoch_type x) {$/;"	f	class:TokenBucketJiffyParameters
epoch_type	include/click/tokenbucket.hh	/^    typedef click_jiffies_t epoch_type;$/;"	t	class:TokenBucketJiffyParameters
epoch_type	include/click/tokenbucket.hh	/^    typedef typename P::epoch_type epoch_type;$/;"	t	class:TokenRateX
epoch_type	include/click/tokenbucket.hh	/^    typedef typename R::epoch_type epoch_type;$/;"	t	class:TokenCounterX
epoch_type	include/click/tokenbucket.hh	/^    typedef typename rate_type::epoch_type epoch_type;$/;"	t	class:TokenBucketX
epochs_until_contains	include/click/tokenbucket.hh	/^    epoch_type epochs_until_contains(const rate_type &rate,$/;"	f	class:TokenCounterX
epochs_until_contains	include/click/tokenbucket.hh	/^    epoch_type epochs_until_contains(token_type t) const {$/;"	f	class:TokenBucketX
epochs_until_contains_fraction	include/click/tokenbucket.hh	/^    epoch_type epochs_until_contains_fraction(const rate_type &rate,$/;"	f	class:TokenCounterX
epochs_until_contains_fraction	include/click/tokenbucket.hh	/^    epoch_type epochs_until_contains_fraction(token_type f) const {$/;"	f	class:TokenBucketX
epochs_until_full	include/click/tokenbucket.hh	/^    epoch_type epochs_until_full() const {$/;"	f	class:TokenRateX
epsilon	include/click/timestamp.hh	/^    static inline Timestamp epsilon() {$/;"	f	class:Timestamp
equals	include/click/master.hh	/^	bool equals(int signo_, Router *router_, const String &handler_) const {$/;"	f	struct:Master::SignalInfo
equals	lib/string.cc	/^String::equals(const char *s, int len) const$/;"	f	class:String
erase	apps/clicky/src/gathererror.cc	/^GatherErrorHandler::iterator GatherErrorHandler::erase(iterator begin, iterator end)$/;"	f	class:GatherErrorHandler
erase	apps/clicky/src/gathererror.cc	/^GatherErrorHandler::iterator GatherErrorHandler::erase(iterator i)$/;"	f	class:GatherErrorHandler
erase	include/click/hashcontainer.hh	/^inline T *HashContainer<T, A>::erase(const key_type &key)$/;"	f	class:HashContainer
erase	include/click/hashcontainer.hh	/^inline T *HashContainer<T, A>::erase(iterator &it)$/;"	f	class:HashContainer
erase	include/click/hashmap.cc	/^HashMap<K, V>::erase(const K &key)$/;"	f	class:HashMap
erase	include/click/hashmap.cc	/^HashMap<K, void *>::erase(const K &key)$/;"	f	class:HashMap
erase	include/click/hashtable.hh	/^    iterator erase(const iterator &it) {$/;"	f	class:HashTable
erase	include/click/hashtable.hh	/^    size_type erase(const key_type &key) {$/;"	f	class:HashTable
erase	include/click/hashtable.hh	/^typename HashTable<T>::iterator HashTable<T>::erase(const iterator &it)$/;"	f	class:HashTable
erase	include/click/hashtable.hh	/^typename HashTable<T>::size_type HashTable<T>::erase(const key_type &key)$/;"	f	class:HashTable
erase	include/click/list.hh	/^    iterator erase(iterator first, iterator last) {$/;"	f	class:List
erase	include/click/list.hh	/^    iterator erase(iterator it) {$/;"	f	class:List
erase	include/click/list.hh	/^    void erase(pointer x) {$/;"	f	class:List
erase	include/click/vector.cc	/^Vector<T>::erase(iterator a, iterator b)$/;"	f	class:Vector
erase	include/click/vector.hh	/^    iterator erase(iterator a, iterator b) { return (iterator)Base::erase((void**)a, (void**)b); }$/;"	f	class:Vector
erase	include/click/vector.hh	/^    iterator erase(iterator it)	{ return (iterator)Base::erase((void**)it); }$/;"	f	class:Vector
erase	include/click/vector.hh	/^Vector<T>::erase(iterator it)$/;"	f	class:Vector
erase	include/click/vector.hh	/^Vector<void*>::erase(iterator it)$/;"	f	class:Vector
erase	lib/vectorv.cc	/^Vector<void*>::erase(iterator a, iterator b)$/;"	f	class:Vector
erase	ns/CUT_BinHeap.h	/^  void erase(Pix ref) {$/;"	f	class:CUT_BinHeap
erase	tools/lib/routert.cc	/^RouterT::erase(conn_iterator ci)$/;"	f	class:RouterT
err	drivers/e1000-4.x/src/e1000_param.c	/^	char *err;$/;"	m	struct:e1000_option	file:
err	drivers/e1000-5.x/src/e1000_param.c	/^	char *err;$/;"	m	struct:e1000_option	file:
err	drivers/e1000-7.x/src/e1000_param.c	/^	char *err;$/;"	m	struct:e1000_option	file:
err	elements/grid/loctable.hh	/^    int err;$/;"	m	struct:LocationTable::entry
err_t	apps/csclient/csclient.hh	/^  enum err_t {$/;"	g	class:ControlSocketClient
errh	elements/standard/script.hh	/^	ErrorHandler *errh;$/;"	m	struct:Script::Expander
errh	include/click/args.hh	/^    ErrorHandler *errh() const {$/;"	f	struct:ArgContext
errh	include/click/lexer.hh	/^    ErrorHandler *errh() const		{ return _errh; }$/;"	f	class:Lexer
errh	userlevel/click.cc	/^static ErrorHandler *errh;$/;"	v	file:
error	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        int error;$/;"	m	struct:nlmsgerr
error	elements/local/OpenFlow/lib/vconn-provider.hh	/^    int error;$/;"	m	struct:vconn
error	lib/args.cc	/^ArgContext::error(const char *fmt, ...) const$/;"	f	class:ArgContext
error	lib/error.cc	/^ErrorHandler::error(const char *fmt, ...)$/;"	f	class:ErrorHandler
error	lib/fromfile.cc	/^FromFile::error(ErrorHandler *errh, const char *format, ...) const$/;"	f	class:FromFile
error_code	elements/userlevel/controlsocket.cc	/^    int error_code() const {$/;"	f	struct:ControlSocketErrorHandler
error_code_to_string	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^const char* const error_code_to_string [] = {$/;"	v
error_element_factory	lib/lexer.cc	/^error_element_factory(uintptr_t)$/;"	f	file:
error_expanders_callback	apps/clicky/src/wmain.cc	/^static void error_expanders_callback(GObject *object, GParamSpec *, gpointer)$/;"	f	file:
error_handler	apps/clicky/src/crouter.hh	/^    GatherErrorHandler *error_handler() const {$/;"	f	class:clicky::crouter
error_handler	lib/clp.c	/^    void (*error_handler)(Clp_Parser *, const char *);$/;"	m	struct:Clp_Internal	file:
error_helper	elements/analysis/fromflandump.cc	/^FromFlanDump::error_helper(ErrorHandler *errh, const char *x)$/;"	f	class:FromFlanDump
error_hook	lib/task.cc	/^Task::error_hook(Task *, void *)$/;"	f	class:Task
error_items	lib/error.cc	/^static ErrorHandler::Conversion *error_items;$/;"	v	file:
error_prefix	lib/args.cc	/^ArgContext::error_prefix() const$/;"	f	class:ArgContext
error_result	include/click/error.hh	/^    static const int error_result;	\/\/\/< Equals -EINVAL, used for error$/;"	m	class:ErrorHandler
error_result	lib/error.cc	/^const int ErrorHandler::error_result = -EINVAL;$/;"	m	class:ErrorHandler	file:
error_type	elements/local/OpenFlow/lib/ofp-print.cc	/^struct error_type {$/;"	s	file:
error_types	elements/local/OpenFlow/lib/ofp-print.cc	/^static const struct error_type error_types[] = {$/;"	v	typeref:struct:error_type	file:
error_unhighlight	apps/clicky/src/wmain.cc	/^void wmain::error_unhighlight()$/;"	f	class:clicky::wmain
error_view_event	apps/clicky/src/wmain.cc	/^gboolean wmain::error_view_event(GdkEvent *event)$/;"	f	class:clicky::wmain
error_view_motion_offsets	apps/clicky/src/wmain.cc	/^bool wmain::error_view_motion_offsets(int off1, int off2, int eindex)$/;"	f	class:clicky::wmain
error_view_motion_position	apps/clicky/src/wmain.cc	/^bool wmain::error_view_motion_position(gint x, gint y)$/;"	f	class:clicky::wmain
errorbuf	include/click/llrpc.h	/^    void *errorbuf;$/;"	m	struct:click_llrpc_call_handler_st
errorlen	include/click/llrpc.h	/^    size_t errorlen;$/;"	m	struct:click_llrpc_call_handler_st
errors	drivers/e1000-4.x/src/e1000_hw.h	/^    uint8_t errors;      \/* Descriptor Errors *\/$/;"	m	struct:e1000_rx_desc
errors	drivers/e1000-5.x/src/e1000_hw.h	/^    uint8_t errors;      \/* Descriptor Errors *\/$/;"	m	struct:e1000_rx_desc
errors	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t errors;      \/* Descriptor Errors *\/$/;"	m	struct:e1000_rx_desc
errpos1	apps/clicky/src/gathererror.hh	/^	int errpos1;$/;"	m	struct:GatherErrorHandler::Message
errpos2	apps/clicky/src/gathererror.hh	/^	int errpos2;$/;"	m	struct:GatherErrorHandler::Message
esp_iv	elements/ipsec/esp.hh	/^  uint8_t esp_iv[8];$/;"	m	struct:esp_new
esp_new	elements/ipsec/esp.hh	/^struct esp_new {$/;"	s
esp_rpl	elements/ipsec/esp.hh	/^  uint32_t esp_rpl;$/;"	m	struct:esp_new
esp_spi	elements/ipsec/esp.hh	/^  uint32_t esp_spi;$/;"	m	struct:esp_new
est_forward_delivery_rate	elements/grid/gridroutetable.cc	/^GridRouteTable::est_forward_delivery_rate(const IPAddress ip, double &rate)$/;"	f	class:GridRouteTable
est_reverse_delivery_rate	elements/grid/gridroutetable.cc	/^GridRouteTable::est_reverse_delivery_rate(const IPAddress ip, double &rate)$/;"	f	class:GridRouteTable
eth	elements/grid/linkstat.hh	/^    EtherAddress    eth;$/;"	m	struct:LinkStat::probe_list_t
eth	elements/grid/linkstat.hh	/^    struct EtherAddress eth;$/;"	m	struct:LinkStat::link_entry	typeref:struct:LinkStat::link_entry::EtherAddress
eth	elements/grid/updateroutes.hh	/^    EtherAddress eth;$/;"	m	class:UpdateGridRoutes::NbrEntry
eth_addr_equals	elements/local/OpenFlow/lib/packets.hh	/^static inline bool eth_addr_equals(const uint8_t a[ETH_ADDR_LEN],$/;"	f
eth_addr_from_uint64	elements/local/OpenFlow/lib/packets.hh	/^static inline void eth_addr_from_uint64(uint64_t x, uint8_t ea[ETH_ADDR_LEN])$/;"	f
eth_addr_is_broadcast	elements/local/OpenFlow/lib/packets.hh	/^static inline bool eth_addr_is_broadcast(const uint8_t ea[6])$/;"	f
eth_addr_is_local	elements/local/OpenFlow/lib/packets.hh	/^static inline bool eth_addr_is_local(const uint8_t ea[6]) $/;"	f
eth_addr_is_multicast	elements/local/OpenFlow/lib/packets.hh	/^static inline bool eth_addr_is_multicast(const uint8_t ea[6])$/;"	f
eth_addr_is_reserved	elements/local/OpenFlow/lib/packets.hh	/^static inline bool eth_addr_is_reserved(const uint8_t ea[ETH_ADDR_LEN])$/;"	f
eth_addr_is_zero	elements/local/OpenFlow/lib/packets.hh	/^static inline bool eth_addr_is_zero(const uint8_t ea[6]) $/;"	f
eth_addr_random	elements/local/OpenFlow/lib/packets.hh	/^static inline void eth_addr_random(uint8_t ea[ETH_ADDR_LEN])$/;"	f
eth_addr_to_uint64	elements/local/OpenFlow/lib/packets.hh	/^static inline uint64_t eth_addr_to_uint64(const uint8_t ea[ETH_ADDR_LEN])$/;"	f
eth_dest	drivers/e1000-4.x/src/ans.h	/^    u8     eth_dest[ETHERNET_ADDRESS_LENGTH];$/;"	m	struct:_eth_vlan_header_t
eth_dst	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t eth_dst[ETH_ADDR_LEN];$/;"	m	struct:eth_header
eth_header	elements/local/OpenFlow/lib/packets.hh	/^struct eth_header {$/;"	s
eth_src	drivers/e1000-4.x/src/ans.h	/^    u8     eth_src[ETHERNET_ADDRESS_LENGTH];$/;"	m	struct:_eth_vlan_header_t
eth_src	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t eth_src[ETH_ADDR_LEN];$/;"	m	struct:eth_header
eth_type	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t eth_type;$/;"	m	struct:eth_header
eth_typelen	drivers/e1000-4.x/src/ans.h	/^    u16      eth_typelen;$/;"	m	struct:_eth_vlan_header_t
eth_vlan_header_t	drivers/e1000-4.x/src/ans.h	/^} eth_vlan_header_t, *peth_vlan_header_t;$/;"	t	typeref:struct:_eth_vlan_header_t
ether	elements/analysis/fromdagdump.hh	/^	    DAGEthernetCell ether;$/;"	m	union:FromDAGDump::DAGCell::__anon270
ether_address	lib/ip6address.cc	/^IP6Address::ether_address(EtherAddress &mac) const$/;"	f	class:IP6Address
ether_address_data_handler	lib/element.cc	/^ether_address_data_handler(int op, String &str, Element *element, const Handler *h, ErrorHandler *errh)$/;"	f	file:
ether_dhost	elements/analysis/fromdagdump.hh	/^	uint8_t ether_dhost[6];$/;"	m	struct:FromDAGDump::DAGEthernetCell
ether_dhost	include/clicknet/ether.h	/^    uint8_t	ether_dhost[6];		\/* 0-5   Ethernet destination address *\/$/;"	m	struct:click_ether
ether_dhost	include/clicknet/ether.h	/^    uint8_t     ether_dhost[6];		\/* 0-5   Ethernet source address      *\/$/;"	m	struct:click_ether_vlan
ether_header	include/click/packet.hh	/^Packet::ether_header() const$/;"	f	class:Packet
ether_header	include/click/packet.hh	/^WritablePacket::ether_header() const$/;"	f	class:WritablePacket
ether_macctl_opcode	include/clicknet/ether.h	/^    uint16_t	ether_macctl_opcode;$/;"	m	struct:click_ether_macctl
ether_macctl_param	include/clicknet/ether.h	/^    uint16_t	ether_macctl_param;$/;"	m	struct:click_ether_macctl
ether_macctl_reserved	include/clicknet/ether.h	/^    uint8_t	ether_macctl_reserved[42];$/;"	m	struct:click_ether_macctl
ether_ptr_error_hook	lib/error.cc	/^ether_ptr_error_hook(int, VA_LIST_REF_T val)$/;"	f	file:
ether_shost	elements/analysis/fromdagdump.hh	/^	uint8_t ether_shost[6];$/;"	m	struct:FromDAGDump::DAGEthernetCell
ether_shost	include/clicknet/ether.h	/^    uint8_t	ether_shost[6];		\/* 6-11  Ethernet source address      *\/$/;"	m	struct:click_ether
ether_shost	include/clicknet/ether.h	/^    uint8_t     ether_shost[6];		\/* 6-11  Ethernet destination address *\/$/;"	m	struct:click_ether_vlan
ether_type	elements/analysis/fromdagdump.hh	/^	uint16_t ether_type;$/;"	m	struct:FromDAGDump::DAGEthernetCell
ether_type	include/clicknet/ether.h	/^    uint16_t	ether_type;		\/* 12-13 Ethernet protocol	      *\/$/;"	m	struct:click_ether
ether_type	include/clicknet/fddi.h	/^    uint16_t	ether_type;$/;"	m	struct:click_fddi_snap
ether_type	include/clicknet/llc.h	/^		uint16_t ether_type;$/;"	m	struct:click_llc::__anon481::__anon486
ether_type	include/clicknet/rfc1483.h	/^    uint16_t	ether_type;$/;"	m	struct:click_rfc1483
ether_vlan_encap_proto	include/clicknet/ether.h	/^    uint16_t    ether_vlan_encap_proto;	\/* 16-17 Ethernet protocol	      *\/$/;"	m	struct:click_ether_vlan
ether_vlan_proto	include/clicknet/ether.h	/^    uint16_t    ether_vlan_proto;	\/* 12-13 == ETHERTYPE_8021Q	      *\/$/;"	m	struct:click_ether_vlan
ether_vlan_tci	include/clicknet/ether.h	/^    uint16_t    ether_vlan_tci;		\/* 14-15 tag control information      *\/$/;"	m	struct:click_ether_vlan
ethernet_header_size	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^static uint16_t ethernet_header_size;$/;"	v	file:
ethtool_coalesce	drivers/e1000-5.x/src/kcompat.h	200;"	d
ethtool_coalesce	drivers/e1000-7.x/src/kcompat.h	348;"	d
ethtool_drvinfo	drivers/e1000-5.x/src/kcompat.h	94;"	d
ethtool_drvinfo	drivers/e1000-5.x/src/kcompat.h	95;"	d
ethtool_drvinfo	drivers/e1000-7.x/src/kcompat.h	238;"	d
ethtool_drvinfo	drivers/e1000-7.x/src/kcompat.h	239;"	d
ethtool_eeprom	drivers/e1000-5.x/src/kcompat.h	/^struct ethtool_eeprom {$/;"	s
ethtool_eeprom	drivers/e1000-7.x/src/kcompat.h	/^struct ethtool_eeprom {$/;"	s
ethtool_get_coalesce	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_coalesce(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_coalesce	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_coalesce(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_drvinfo	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_drvinfo(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_drvinfo	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_drvinfo(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_eeprom	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_eeprom(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_eeprom	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_eeprom(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_link	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_link(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_link	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_link(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_msglevel	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_msglevel(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_msglevel	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_msglevel(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_pauseparam	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_pauseparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_pauseparam	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_pauseparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_regs	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_regs(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_regs	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_regs(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_ringparam	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_ringparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_ringparam	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_ringparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_rx_csum	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_rx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_rx_csum	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_rx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_settings	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_settings(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_settings	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_settings(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_sg	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_sg(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_sg	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_sg(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_stats	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_stats(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_stats	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_stats(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_strings	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_strings(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_strings	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_strings(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_get_tso	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_tso(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_tso	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_tso(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_tx_csum	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_tx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_tx_csum	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_tx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_wol	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_get_wol(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_get_wol	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_get_wol(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_gstrings	drivers/e1000-5.x/src/kcompat.h	/^struct ethtool_gstrings {$/;"	s
ethtool_gstrings	drivers/e1000-7.x/src/kcompat.h	/^struct ethtool_gstrings {$/;"	s
ethtool_ioctl	drivers/e1000-5.x/src/kcompat_ethtool.c	/^int ethtool_ioctl(struct ifreq *ifr)$/;"	f
ethtool_ioctl	drivers/e1000-7.x/src/kcompat_ethtool.c	/^int ethtool_ioctl(struct ifreq *ifr)$/;"	f
ethtool_nway_reset	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_nway_reset(struct net_device *dev)$/;"	f	file:
ethtool_nway_reset	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_nway_reset(struct net_device *dev)$/;"	f	file:
ethtool_op_get_link	drivers/e1000-5.x/src/kcompat_ethtool.c	106;"	d	file:
ethtool_op_get_link	drivers/e1000-5.x/src/kcompat_ethtool.c	107;"	d	file:
ethtool_op_get_link	drivers/e1000-7.x/src/kcompat_ethtool.c	116;"	d	file:
ethtool_op_get_link	drivers/e1000-7.x/src/kcompat_ethtool.c	117;"	d	file:
ethtool_op_get_sg	drivers/e1000-5.x/src/kcompat_ethtool.c	138;"	d	file:
ethtool_op_get_sg	drivers/e1000-5.x/src/kcompat_ethtool.c	139;"	d	file:
ethtool_op_get_sg	drivers/e1000-7.x/src/kcompat_ethtool.c	148;"	d	file:
ethtool_op_get_sg	drivers/e1000-7.x/src/kcompat_ethtool.c	149;"	d	file:
ethtool_op_get_tso	drivers/e1000-5.x/src/kcompat_ethtool.c	163;"	d	file:
ethtool_op_get_tso	drivers/e1000-5.x/src/kcompat_ethtool.c	164;"	d	file:
ethtool_op_get_tso	drivers/e1000-7.x/src/kcompat_ethtool.c	173;"	d	file:
ethtool_op_get_tso	drivers/e1000-7.x/src/kcompat_ethtool.c	174;"	d	file:
ethtool_op_get_tx_csum	drivers/e1000-5.x/src/kcompat_ethtool.c	113;"	d	file:
ethtool_op_get_tx_csum	drivers/e1000-5.x/src/kcompat_ethtool.c	114;"	d	file:
ethtool_op_get_tx_csum	drivers/e1000-7.x/src/kcompat_ethtool.c	123;"	d	file:
ethtool_op_get_tx_csum	drivers/e1000-7.x/src/kcompat_ethtool.c	124;"	d	file:
ethtool_op_set_sg	drivers/e1000-5.x/src/kcompat_ethtool.c	149;"	d	file:
ethtool_op_set_sg	drivers/e1000-5.x/src/kcompat_ethtool.c	150;"	d	file:
ethtool_op_set_sg	drivers/e1000-7.x/src/kcompat_ethtool.c	159;"	d	file:
ethtool_op_set_sg	drivers/e1000-7.x/src/kcompat_ethtool.c	160;"	d	file:
ethtool_op_set_tso	drivers/e1000-5.x/src/kcompat_ethtool.c	174;"	d	file:
ethtool_op_set_tso	drivers/e1000-5.x/src/kcompat_ethtool.c	175;"	d	file:
ethtool_op_set_tso	drivers/e1000-7.x/src/kcompat_ethtool.c	184;"	d	file:
ethtool_op_set_tso	drivers/e1000-7.x/src/kcompat_ethtool.c	185;"	d	file:
ethtool_op_set_tx_csum	drivers/e1000-5.x/src/kcompat_ethtool.c	124;"	d	file:
ethtool_op_set_tx_csum	drivers/e1000-5.x/src/kcompat_ethtool.c	125;"	d	file:
ethtool_op_set_tx_csum	drivers/e1000-7.x/src/kcompat_ethtool.c	134;"	d	file:
ethtool_op_set_tx_csum	drivers/e1000-7.x/src/kcompat_ethtool.c	135;"	d	file:
ethtool_ops	drivers/e1000-5.x/src/kcompat_ethtool.c	/^} *ethtool_ops = NULL;$/;"	v	typeref:struct:_kc_ethtool_ops
ethtool_ops	drivers/e1000-5.x/src/kcompat_ethtool.c	57;"	d	file:
ethtool_ops	drivers/e1000-5.x/src/kcompat_ethtool.c	58;"	d	file:
ethtool_ops	drivers/e1000-7.x/src/kcompat_ethtool.c	/^} *ethtool_ops = NULL;$/;"	v	typeref:struct:_kc_ethtool_ops
ethtool_ops	drivers/e1000-7.x/src/kcompat_ethtool.c	67;"	d	file:
ethtool_ops	drivers/e1000-7.x/src/kcompat_ethtool.c	68;"	d	file:
ethtool_pauseparam	drivers/e1000-5.x/src/kcompat.h	330;"	d
ethtool_pauseparam	drivers/e1000-7.x/src/kcompat.h	480;"	d
ethtool_phys_id	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_phys_id(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_phys_id	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_phys_id(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_regs	drivers/e1000-5.x/src/kcompat.h	170;"	d
ethtool_regs	drivers/e1000-7.x/src/kcompat.h	317;"	d
ethtool_ringparam	drivers/e1000-5.x/src/kcompat.h	302;"	d
ethtool_ringparam	drivers/e1000-7.x/src/kcompat.h	451;"	d
ethtool_self_test	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_self_test(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_self_test	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_self_test(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_coalesce	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_set_coalesce(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_coalesce	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_set_coalesce(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_eeprom	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_set_eeprom(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_eeprom	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_set_eeprom(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_msglevel	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_set_msglevel(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_msglevel	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_set_msglevel(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_pauseparam	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_set_pauseparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_pauseparam	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_set_pauseparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_ringparam	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_set_ringparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_ringparam	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_set_ringparam(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_rx_csum	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_set_rx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_rx_csum	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_set_rx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_settings	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_set_settings(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_settings	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_set_settings(struct net_device *dev, void *useraddr)$/;"	f	file:
ethtool_set_sg	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_set_sg(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_sg	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_set_sg(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_tso	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_set_tso(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_tso	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_set_tso(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_tx_csum	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_set_tx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_tx_csum	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_set_tx_csum(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_wol	drivers/e1000-5.x/src/kcompat_ethtool.c	/^static int ethtool_set_wol(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_set_wol	drivers/e1000-7.x/src/kcompat_ethtool.c	/^static int ethtool_set_wol(struct net_device *dev, char *useraddr)$/;"	f	file:
ethtool_stats	drivers/e1000-5.x/src/kcompat.h	/^struct ethtool_stats {$/;"	s
ethtool_stats	drivers/e1000-7.x/src/kcompat.h	/^struct ethtool_stats {$/;"	s
ethtool_stringset	drivers/e1000-5.x/src/kcompat.h	/^enum ethtool_stringset {$/;"	g
ethtool_stringset	drivers/e1000-7.x/src/kcompat.h	/^enum ethtool_stringset {$/;"	g
ethtool_test	drivers/e1000-5.x/src/kcompat.h	/^struct ethtool_test {$/;"	s
ethtool_test	drivers/e1000-7.x/src/kcompat.h	/^struct ethtool_test {$/;"	s
ethtool_test_flags	drivers/e1000-5.x/src/kcompat.h	/^enum ethtool_test_flags {$/;"	g
ethtool_test_flags	drivers/e1000-7.x/src/kcompat.h	/^enum ethtool_test_flags {$/;"	g
ethtool_value	drivers/e1000-5.x/src/kcompat.h	/^struct ethtool_value {$/;"	s
ethtool_value	drivers/e1000-7.x/src/kcompat.h	/^struct ethtool_value {$/;"	s
etree_fill	apps/clicky/src/wmain.cc	/^void wmain::etree_fill() {$/;"	f	class:clicky::wmain
etype	tools/lib/routert.hh	/^RouterT::etype(int e) const$/;"	f	class:RouterT
etype_info	tools/click-devirtualize/specializer.cc	/^Specializer::etype_info(int eindex) const$/;"	f	class:Specializer
etype_info	tools/click-devirtualize/specializer.cc	/^Specializer::etype_info(int eindex)$/;"	f	class:Specializer
etype_name	tools/lib/routert.hh	/^RouterT::etype_name(int e) const$/;"	f	class:RouterT
event_	elements/ns/tosimtrace.hh	/^  String	event_;$/;"	m	class:ToSimTrace
event_entry	elements/grid/movesim.hh	/^  struct event_entry {$/;"	s	class:MovementSimulator
event_hook	elements/grid/movesim.cc	/^MovementSimulator::event_hook(Timer *, void *thunk)$/;"	f	class:MovementSimulator
eventheap_	ns/nsclick-test.cc	/^  SimBinHeap eventheap_;$/;"	m	class:Simulator	file:
events	elements/local/OpenFlow/lib/poll-loop.cc	/^    short int events;           \/* Events to wait for (POLLIN, POLLOUT). *\/$/;"	m	struct:poll_waiter	file:
events	include/click/selectset.hh	/^	int events;$/;"	m	struct:SelectSet::pollfd
ewma_type	elements/aqm/pi.hh	/^    typedef DirectEWMAX<StabilityEWMAXParameters<QUEUE_SCALE, uint64_t, int64_t> > ewma_type;$/;"	t	class:PI
ewma_type	elements/aqm/red.hh	/^    typedef DirectEWMAX<StabilityEWMAXParameters<QUEUE_SCALE, uint64_t, int64_t> > ewma_type;$/;"	t	class:RED
excessive_retries	elements/wifi/athdesc.h	/^	u_int32_t	excessive_retries:1;$/;"	m	struct:ar5212_desc
exclusive	include/click/handler.hh	/^    inline bool exclusive() const {$/;"	f	class:Handler
exec	linuxmodule/modulepriv.hh	/^    int exec;$/;"	m	struct:click_fsmode_t
exec_command	click-compile	/^exec_command () {$/;"	f
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	bsdmodule/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	doc/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	etc/libclick/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	linuxmodule/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	ns/Makefile	/^exec_prefix = ${prefix}$/;"	m
execute	elements/local/OpenFlow/lib/dp_act.cc	/^    void (*execute)(struct ofpbuf *buffer,$/;"	m	struct:openflow_action	file:
execute	lib/args.cc	/^Args::execute()$/;"	f	class:Args
execute_actions	elements/local/OpenFlow/lib/dp_act.cc	/^void execute_actions(class Datapath *dp, struct ofpbuf *buffer,$/;"	f
execute_ofpat	elements/local/OpenFlow/lib/dp_act.cc	/^execute_ofpat(struct ofpbuf *buffer, struct sw_flow_key *key, $/;"	f	file:
execute_test	test/testie	/^sub execute_test ($$) {$/;"	s
execute_vendor	elements/local/OpenFlow/lib/dp_act.cc	/^execute_vendor(struct ofpbuf *buffer UNUSED, const struct sw_flow_key *key UNUSED, $/;"	f	file:
exp10val	lib/args.cc	/^static uint32_t exp10val[] = { 1, 10, 100, 1000, 10000, 100000, 1000000,$/;"	v	file:
exp10val	lib/confparse.cc	/^static uint32_t exp10val[] = { 1, 10, 100, 1000, 10000, 100000, 1000000,$/;"	v	file:
expand	apps/clicky/src/rectangle.hh	/^    void expand(double d) {$/;"	f	struct:rectangle
expand	apps/clicky/src/rectangle.hh	/^    void expand(double dtop, double dright, double dbottom, double dleft) {$/;"	f	struct:rectangle
expand	elements/grid/region.cc	/^RectRegion::expand(double l)$/;"	f	class:RectRegion
expand	elements/ip/rangeiplookup.cc	/^RangeIPLookup::expand()$/;"	f	class:RangeIPLookup
expand	elements/standard/script.cc	/^Script::Expander::expand(const String &vname, String &out, int vartype, int) const$/;"	f	class:Script::Expander
expand	lib/lexer.cc	/^Lexer::TunnelEnd::expand(Lexer *lexer, Vector<Router::Port> &into)$/;"	f	class:Lexer::TunnelEnd
expand	lib/variableenv.cc	/^VariableEnvironment::expand(const String &var, String &expansion,$/;"	f	class:VariableEnvironment
expand	tools/click-pretty/click-pretty.cc	/^ElementsOutput::expand(const String &s, ElementT *e, int port, bool is_output)$/;"	f	class:ElementsOutput
expand_array_initializer	linuxmodule/fixincludes.pl	/^sub expand_array_initializer ($$$) {$/;"	s
expand_compound_element	lib/lexer.cc	/^Lexer::expand_compound_element(int which, VariableEnvironment &ve)$/;"	f	class:Lexer
expand_connection	lib/lexer.cc	/^Lexer::expand_connection(const Port &this_end, bool is_out, Vector<Port> &into)$/;"	f	class:Lexer
expand_element	tools/lib/eclasst.cc	/^ElementClassT::expand_element($/;"	f	class:ElementClassT
expand_filename	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::expand_filename(const Packet *pkt, ErrorHandler *errh) const$/;"	f	class:ToIPFlowDumps
expand_groups	tools/lib/lexert.hh	/^    void expand_groups(bool x)		{ _expand_groups = x; }$/;"	f	class:LexerT
expand_handler_elements	userlevel/click.cc	/^expand_handler_elements(const String& pattern, const String& handler_name,$/;"	f	file:
expand_imports	apps/clicky/src/dstyle.cc	/^String dcss_set::expand_imports(const String &text, const String &filename,$/;"	f	class:clicky::dcss_set
expand_initializer	linuxmodule/fixincludes.pl	/^sub expand_initializer ($$$) {$/;"	s
expand_into	lib/lexer.cc	/^Lexer::Compound::expand_into(Lexer *lexer, int which, VariableEnvironment &ve)$/;"	f	class:Lexer::Compound
expand_into	tools/lib/routert.cc	/^RouterT::expand_into(RouterT *tor, const String &prefix, VariableEnvironment &env, ErrorHandler *errh)$/;"	f	class:RouterT
expand_provisions	click-buildtool	/^expand_provisions () {$/;"	f
expand_tunnel	tools/lib/routert.cc	/^RouterT::expand_tunnel(Vector<PortT> *port_expansions,$/;"	f	class:RouterT
expect	lib/lexer.cc	/^Lexer::expect(int kind, bool no_error)$/;"	f	class:Lexer
expect	tools/lib/lexert.cc	/^LexerT::expect(int kind, bool no_error)$/;"	f	class:LexerT
expected_checksum	drivers/e1000-4.x/src/idiag_e1000.h	/^	uint32_t expected_checksum;$/;"	m	struct:idiag_e1000_diag_eeprom_test_param
expensive_push	lib/packet.cc	/^Packet::expensive_push(uint32_t nbytes)$/;"	f	class:Packet
expensive_put	lib/packet.cc	/^Packet::expensive_put(uint32_t nbytes)$/;"	f	class:Packet
expensive_uniqueify	lib/packet.cc	/^Packet::expensive_uniqueify(int32_t extra_headroom, int32_t extra_tailroom,$/;"	f	class:Packet
experiment_params_ok	elements/grid/linktester.cc	/^LinkTester::experiment_params_ok(ErrorHandler *errh)$/;"	f	class:LinkTester
expire	elements/etherswitch/bridgemessage.cc	/^bool BridgeMessage::expire(const Timestamp& cutoff) {$/;"	f	class:BridgeMessage
expire	elements/etherswitch/bridgemessage.cc	/^void BridgeMessage::expire() {$/;"	f	class:BridgeMessage
expire	elements/etherswitch/spantree.cc	/^EtherSpanTree::expire() {$/;"	f	class:EtherSpanTree
expire_hook	elements/ethernet/ip6ndsolicitor.cc	/^IP6NDSolicitor::expire_hook(Timer *, void *thunk)$/;"	f	class:IP6NDSolicitor
expire_hook	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::expire_hook(const IPAddress &ip)$/;"	f	class:DSDVRouteTable
expire_hook	elements/grid/floodinglocquerier.cc	/^FloodingLocQuerier::expire_hook(Timer *, void *thunk)$/;"	f	class:FloodingLocQuerier
expire_hook	elements/grid/gridroutetable.cc	/^GridRouteTable::expire_hook(Timer *, void *thunk)$/;"	f	class:GridRouteTable
expire_hook	elements/grid/locqueryresponder.cc	/^LocQueryResponder::expire_hook(Timer *, void *thunk)$/;"	f	class:LocQueryResponder
expire_hook	elements/grid/updateroutes.cc	/^UpdateGridRoutes::expire_hook(Timer *, void *thunk)$/;"	f	class:UpdateGridRoutes
expire_routes	elements/grid/gridroutetable.cc	/^GridRouteTable::expire_routes()$/;"	f	class:GridRouteTable
expire_routes	elements/grid/updateroutes.cc	/^UpdateGridRoutes::expire_routes()$/;"	f	class:UpdateGridRoutes
expire_timer	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^	Timer expire_timer;$/;"	m	class:PFMpeg2AdaptFW
expire_timer	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	Timer expire_timer;$/;"	m	class:PFShapeFW
expired	elements/ethernet/arptable.hh	/^	bool expired(click_jiffies_t now, uint32_t timeout_j) const {$/;"	f	struct:ARPTable::ARPEntry
expired	elements/ip/iprwmapping.hh	/^    bool expired(click_jiffies_t now_j) const {$/;"	f	class:IPRewriterFlow
expiry	elements/ip/iprwmapping.hh	/^    click_jiffies_t expiry() const {$/;"	f	class:IPRewriterFlow
expiry	include/click/gaprate.hh	/^GapRate::expiry() const$/;"	f	class:GapRate
expiry	include/click/timer.hh	/^    inline const Timestamp &expiry() const {$/;"	f	class:Timer
expiry	include/click/timerset.hh	/^	Timestamp expiry;$/;"	m	struct:TimerSet::heap_element
exponent_delta	include/click/args.hh	/^    int exponent_delta;$/;"	m	struct:DecimalFixedPointArg
exponent_delta	include/click/args.hh	/^    int exponent_delta;$/;"	m	struct:FixedPointArg
export_diagram	apps/clicky/src/wdiagram.cc	/^void wdiagram::export_diagram(const char *filename, bool eps)$/;"	f	class:clicky::wdiagram
export_matches	apps/clicky/src/crouter.cc	/^void crouter::reachable_match_t::export_matches(reachable_t &reach, ErrorHandler *debug_errh)$/;"	f	class:clicky::crouter::reachable_match_t
export_pdf	apps/clicky/src/wdiagram.cc	/^void cdiagram::export_pdf(const char *filename, bool eps,$/;"	f	class:clicky::cdiagram
export_pdf	apps/clicky/src/wdiagram.cc	/^void cdiagram::export_pdf(const char *filename, crouter *cr,$/;"	f	class:clicky::cdiagram
expose	apps/clicky/src/wdiagram.cc	/^void wdiagram::expose(const delt *e, rectangle *expose_rect)$/;"	f	class:clicky::wdiagram
ext_lab	conf/click-mkclgw.pl	/^sub ext_lab {$/;"	s
extend	include/click/straccum.hh	/^    inline char *extend(int nadjust, int nreserve = 0) {$/;"	f	class:StringAccum
extended_10bt_distance	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_10bt_ext_dist_enable extended_10bt_distance;$/;"	m	struct:e1000_phy_info
extended_10bt_distance	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_10bt_ext_dist_enable extended_10bt_distance;$/;"	m	struct:e1000_phy_info
extended_10bt_distance	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_10bt_ext_dist_enable extended_10bt_distance;$/;"	m	struct:e1000_phy_info
externalize	elements/grid/pep.cc	/^PEP::externalize(pep_fix *fp)$/;"	f	class:PEP
externalize	elements/grid/regionpep.cc	/^EstimateRouterRegion::externalize(pep_rgn_fix *fp)$/;"	f	class:EstimateRouterRegion
extra	elements/ip/iproutetable.hh	/^    int32_t extra;$/;"	m	struct:IPRoute
extra	elements/ipsec/ipsecroutetable.hh	/^    int32_t extra;$/;"	m	struct:IPsecRoute
extra	include/click/confparse.hh	/^    } extra;$/;"	m	struct:cp_value	typeref:union:cp_value::__anon478
extract	elements/analysis/ipsumdumpinfo.hh	/^    bool (*extract)(PacketDesc &, const FieldWriter *);$/;"	m	struct:IPSummaryDump::FieldWriter
extract	include/click/type_traits.hh	/^    static void extract(const Limb *x, V &value) {$/;"	f	struct:extract_integer_template
extract	lib/args.cc	/^    bool extract(V &value) {$/;"	f	struct:__anon505::fraction_accum
extract	lib/args.cc	/^    bool extract(uint32_t &value) {$/;"	f	struct:__anon505::fraction_accum
extract_headers	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^static int extract_headers( Packet* p, click_ether** e, click_ip** i, click_udp** u, struct bpadapt_header ** n )$/;"	f	file:
extract_integer	include/click/type_traits.hh	/^inline void extract_integer(const Limb *x, V &value) {$/;"	f
extract_integer_template	include/click/type_traits.hh	/^struct extract_integer_template {$/;"	s
extract_integer_template	include/click/type_traits.hh	/^struct extract_integer_template<1, Limb, V> {$/;"	s
extract_reply_route	elements/grid/dsrroutetable.cc	/^DSRRouteTable::extract_reply_route(const Packet *p)$/;"	f	class:DSRRouteTable
extract_request_route	elements/grid/dsrroutetable.cc	/^DSRRouteTable::extract_request_route(const Packet *p_in)$/;"	f	class:DSRRouteTable
extract_source_route	elements/grid/dsrroutetable.cc	/^DSRRouteTable::extract_source_route(const Packet *p_in, unsigned int offset)$/;"	f	class:DSRRouteTable
f	tools/lib/eclasst.cc	/^void ElementClassT::set_base_type_factory(ElementClassT *(*f)(const String &))$/;"	f	class:ElementClassT
facilities	elements/local/OpenFlow/lib/vlog.cc	/^static struct facility facilities[VLF_N_FACILITIES] = {$/;"	v	typeref:struct:facility	file:
facility	elements/local/OpenFlow/lib/vlog.cc	/^struct facility {$/;"	s	file:
factory	include/click/lexer.hh	/^	ElementFactory factory;$/;"	m	struct:Lexer::ElementType
fail	apps/ClickController/Util.java	/^    static public void fail(String msg) {$/;"	m	class:Util
failures	elements/ip/iprewriterbase.hh	/^    uint32_t failures;$/;"	m	struct:IPRewriterInput
fake	apps/clicky/src/dwidget.hh	/^    bool fake() const {$/;"	f	class:clicky::delt
fake_bpf_timeval	elements/userlevel/fakepcap.hh	/^struct fake_bpf_timeval {$/;"	s
fake_bpf_timeval_union	elements/userlevel/fakepcap.hh	/^union fake_bpf_timeval_union {$/;"	u
fake_bridge	elements/linuxmodule/anydevice.hh	/^    struct fake_bridge {$/;"	s	class:AnyDevice
fake_modified_pcap_pkthdr	elements/userlevel/fakepcap.hh	/^struct fake_modified_pcap_pkthdr {$/;"	s
fake_pcap_canonical_dlt	elements/userlevel/fakepcap.cc	/^fake_pcap_canonical_dlt(int dlt, bool)$/;"	f
fake_pcap_dlt_force_ipable	elements/userlevel/fakepcap.cc	/^fake_pcap_dlt_force_ipable(int dlt)$/;"	f
fake_pcap_file_header	elements/userlevel/fakepcap.hh	/^struct fake_pcap_file_header {$/;"	s
fake_pcap_force_ip	elements/userlevel/fakepcap.cc	/^fake_pcap_force_ip(Packet *&p, int dlt)$/;"	f
fake_pcap_force_ip	elements/userlevel/fakepcap.hh	/^fake_pcap_force_ip(WritablePacket*& p, int dlt)$/;"	f
fake_pcap_parse_dlt	elements/userlevel/fakepcap.cc	/^fake_pcap_parse_dlt(const String &str)$/;"	f
fake_pcap_pkthdr	elements/userlevel/fakepcap.hh	/^struct fake_pcap_pkthdr {$/;"	s
fake_pcap_unparse_dlt	elements/userlevel/fakepcap.cc	/^fake_pcap_unparse_dlt(int dlt)$/;"	f
false	include/click/cxxprotect.h	12;"	d
false	include/click/cxxunprotect.h	12;"	d
false_mask	include/click/notifier.hh	/^	true_mask = 1, false_mask = 2, overderived_mask = 4,$/;"	e	enum:NotifierSignal::__anon432
false_type	include/click/type_traits.hh	/^typedef integral_constant<bool, false> false_type;$/;"	t
family_policy	elements/local/OpenFlow/lib/netlink.cc	/^static struct nl_policy family_policy[CTRL_ATTR_MAX + 1]; \/* = { $/;"	v	typeref:struct:nl_policy	file:
far_entry	elements/grid/updateroutes.hh	/^    far_entry() : last_updated_jiffies(0) { }$/;"	f	struct:UpdateGridRoutes::far_entry
far_entry	elements/grid/updateroutes.hh	/^    far_entry(int j, grid_nbr_entry n) : last_updated_jiffies(j), sent_new(false), nbr(n)  { }$/;"	f	struct:UpdateGridRoutes::far_entry
far_entry	elements/grid/updateroutes.hh	/^  struct far_entry {$/;"	s	class:UpdateGridRoutes
fast_contains	include/click/tokenbucket.hh	/^    bool fast_contains(const rate_type &rate, token_type t) const {$/;"	f	class:TokenCounterX
fast_contains	include/click/tokenbucket.hh	/^    bool fast_contains(token_type t) const {$/;"	f	class:TokenBucketX
fast_half_integer	include/click/type_traits.hh	/^template <> struct fast_half_integer<uint64_t> : public make_fast_half_integer<uint64_t, unsigned int> {};$/;"	s
fast_half_integer	include/click/type_traits.hh	/^template<> struct fast_half_integer<unsigned long long> : public make_fast_half_integer<unsigned long long, unsigned int> {};$/;"	s
fast_half_integer	include/click/type_traits.hh	/^template<> struct fast_half_integer<unsigned long> : public make_fast_half_integer<unsigned long, unsigned int> {};$/;"	s
fast_half_integer	include/click/type_traits.hh	/^template<typename T> struct fast_half_integer : public make_fast_half_integer<T, T> {};$/;"	s
fast_remove	include/click/tokenbucket.hh	/^    void fast_remove(const rate_type &rate, token_type t) {$/;"	f	class:TokenCounterX
fast_remove	include/click/tokenbucket.hh	/^    void fast_remove(token_type t) {$/;"	f	class:TokenBucketX
fast_remove_if	include/click/tokenbucket.hh	/^    bool fast_remove_if(const rate_type &rate, token_type t) {$/;"	f	class:TokenCounterX
fast_remove_if	include/click/tokenbucket.hh	/^    bool fast_remove_if(token_type t) {$/;"	f	class:TokenBucketX
fast_reschedule	include/click/task.hh	/^Task::fast_reschedule()$/;"	f	class:Task
fast_schedule	include/click/task.hh	/^Task::fast_schedule()$/;"	f	class:Task
fatal	lib/error.cc	/^ErrorHandler::fatal(const char *fmt, ...)$/;"	f	class:ErrorHandler
fatal_signal_add_file_to_unlink	elements/local/OpenFlow/lib/fatal-signal.cc	/^fatal_signal_add_file_to_unlink(const char *file)$/;"	f
fatal_signal_add_hook	elements/local/OpenFlow/lib/fatal-signal.cc	/^fatal_signal_add_hook(void (*func)(void *aux), void *aux, bool run_at_exit)$/;"	f
fatal_signal_block	elements/local/OpenFlow/lib/fatal-signal.cc	/^fatal_signal_block(void)$/;"	f
fatal_signal_fork	elements/local/OpenFlow/lib/fatal-signal.cc	/^fatal_signal_fork(void)$/;"	f
fatal_signal_handler	elements/local/OpenFlow/lib/fatal-signal.cc	/^fatal_signal_handler(int sig_nr)$/;"	f
fatal_signal_remove_file_to_unlink	elements/local/OpenFlow/lib/fatal-signal.cc	/^fatal_signal_remove_file_to_unlink(const char *file)$/;"	f
fatal_signal_set	elements/local/OpenFlow/lib/fatal-signal.cc	/^static sigset_t fatal_signal_set;$/;"	v	file:
fatal_signal_unblock	elements/local/OpenFlow/lib/fatal-signal.cc	/^fatal_signal_unblock(void)$/;"	f
fatal_signals	elements/local/OpenFlow/lib/fatal-signal.cc	/^static const int fatal_signals[] = { SIGTERM, SIGINT, SIGHUP, SIGALRM };$/;"	v	file:
fc	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_fc_type fc;$/;"	m	struct:e1000_hw
fc	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_fc_type fc;$/;"	m	struct:e1000_hw
fc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t fc;$/;"	m	struct:e1000_hw
fc	include/clicknet/fddi.h	/^    uint8_t	fc;$/;"	m	struct:click_fddi
fc_autoneg	drivers/e1000-5.x/src/e1000.h	/^	uint8_t fc_autoneg;$/;"	m	struct:e1000_adapter
fc_autoneg	drivers/e1000-7.x/src/e1000.h	/^	uint8_t fc_autoneg;$/;"	m	struct:e1000_adapter
fc_high_water	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t fc_high_water;$/;"	m	struct:e1000_hw
fc_high_water	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t fc_high_water;$/;"	m	struct:e1000_hw
fc_high_water	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t fc_high_water;$/;"	m	struct:e1000_hw
fc_low_water	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t fc_low_water;$/;"	m	struct:e1000_hw
fc_low_water	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t fc_low_water;$/;"	m	struct:e1000_hw
fc_low_water	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t fc_low_water;$/;"	m	struct:e1000_hw
fc_pause_time	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t fc_pause_time;$/;"	m	struct:e1000_hw
fc_pause_time	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t fc_pause_time;$/;"	m	struct:e1000_hw
fc_pause_time	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t fc_pause_time;$/;"	m	struct:e1000_hw
fc_send_xon	drivers/e1000-4.x/src/e1000_hw.h	/^    boolean_t fc_send_xon;$/;"	m	struct:e1000_hw
fc_send_xon	drivers/e1000-5.x/src/e1000_hw.h	/^    boolean_t fc_send_xon;$/;"	m	struct:e1000_hw
fc_send_xon	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t fc_send_xon;$/;"	m	struct:e1000_hw
fc_strict_ieee	drivers/e1000-5.x/src/e1000_hw.h	/^    boolean_t fc_strict_ieee;$/;"	m	struct:e1000_hw
fc_strict_ieee	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t fc_strict_ieee;$/;"	m	struct:e1000_hw
fcruc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t fcruc;$/;"	m	struct:e1000_hw_stats
fcruc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t fcruc;$/;"	m	struct:e1000_hw_stats
fcruc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t fcruc;$/;"	m	struct:e1000_hw_stats
fd	elements/local/FlowNet/common/Flow.hh	/^	struct FlowDesc fd;$/;"	m	class:Flow	typeref:struct:Flow::FlowDesc
fd	elements/local/OpenFlow/lib/netlink.cc	/^    int fd;$/;"	m	struct:nl_sock	file:
fd	elements/local/OpenFlow/lib/poll-loop.cc	/^    int fd;                     \/* File descriptor. *\/$/;"	m	struct:poll_waiter	file:
fd	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    int fd;$/;"	m	struct:pssl_pvconn	file:
fd	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    int fd;$/;"	m	struct:ssl_vconn	file:
fd	elements/local/OpenFlow/lib/vconn-stream.cc	/^    int fd;$/;"	m	struct:pstream_pvconn	file:
fd	elements/local/OpenFlow/lib/vconn-stream.cc	/^    int fd;$/;"	m	struct:stream_vconn	file:
fd	elements/local/OpenFlow/lib/vlog-socket.cc	/^    int fd;$/;"	m	struct:vlog_client	file:
fd	elements/local/OpenFlow/lib/vlog-socket.cc	/^    int fd;$/;"	m	struct:vlog_server	file:
fd	elements/ns/fromsimdevice.hh	/^  int fd() const			{ return _fd; }$/;"	f	class:FromSimDevice
fd	elements/ns/tosimdevice.hh	/^  int fd() const				{ return _fd; }$/;"	f	class:ToSimDevice
fd	elements/userlevel/controlsocket.hh	/^	int fd;$/;"	m	struct:ControlSocket::connection
fd	elements/userlevel/fromdevice.hh	/^    inline int fd() const		{ return _fd; }$/;"	f	class:FromDevice
fd	elements/userlevel/fromhost.hh	/^    int fd() const			{ return _fd; }$/;"	f	class:FromHost
fd	elements/userlevel/todevice.hh	/^    int fd() const				{ return _fd; }$/;"	f	class:ToDevice
fd	include/click/selectset.hh	/^	int fd;$/;"	m	struct:SelectSet::pollfd
fence	include/click/selectset.hh	/^SelectSet::fence()$/;"	f	class:SelectSet
fence	include/click/timerset.hh	/^TimerSet::fence()$/;"	f	class:TimerSet
fetch_and_add	include/click/atomic.hh	/^atomic_uint32_t::fetch_and_add(uint32_t delta)$/;"	f	class:atomic_uint32_t
fetch_braces	elements/local/OpenFlow/lib/vlog.cc	/^fetch_braces(const char *p, const char *def, char *out, size_t out_size)$/;"	f	file:
fetch_handler	lib/router.cc	/^Router::fetch_handler(const Element* e, const String& name)$/;"	f	class:Router
ffe_config_state	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_ffe_config ffe_config_state;$/;"	m	struct:e1000_hw
ffe_config_state	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_ffe_config ffe_config_state;$/;"	m	struct:e1000_hw
ffs_lsb	include/click/integers.hh	/^inline int ffs_lsb(uint64_t x) {$/;"	f
ffs_lsb	include/click/integers.hh	/^inline int ffs_lsb(unsigned long long x) {$/;"	f
ffs_lsb	include/click/integers.hh	/^inline int ffs_lsb(unsigned long x) {$/;"	f
ffs_lsb	include/click/integers.hh	/^inline int ffs_lsb(unsigned x) {$/;"	f
ffs_lsb	lib/integers.cc	/^ffs_lsb(uint32_t x)$/;"	f
ffs_lsb	lib/integers.cc	/^ffs_lsb(uint64_t x)$/;"	f
ffs_lsb	lib/integers.cc	/^ffs_lsb(unsigned long long x)$/;"	f
ffs_lsb	lib/integers.cc	/^ffs_lsb(unsigned long x)$/;"	f
ffs_lsb_hilo	lib/integers.cc	131;"	d	file:
ffs_msb	include/click/integers.hh	/^inline int ffs_msb(uint64_t x) {$/;"	f
ffs_msb	include/click/integers.hh	/^inline int ffs_msb(unsigned long long x) {$/;"	f
ffs_msb	include/click/integers.hh	/^inline int ffs_msb(unsigned long x) {$/;"	f
ffs_msb	include/click/integers.hh	/^inline int ffs_msb(unsigned x) {$/;"	f
ffs_msb	lib/integers.cc	/^ffs_msb(uint64_t x)$/;"	f
ffs_msb	lib/integers.cc	/^ffs_msb(unsigned long long x)$/;"	f
ffs_msb	lib/integers.cc	/^ffs_msb(unsigned long x)$/;"	f
ffs_msb	lib/integers.cc	/^ffs_msb(unsigned x)$/;"	f
ffs_msb_hilo	lib/integers.cc	57;"	d	file:
fh	include/clicknet/wifi.h	/^	struct fh {$/;"	s	struct:wifi_information
fh	include/clicknet/wifi.h	/^	} fh;$/;"	m	struct:wifi_information	typeref:struct:wifi_information::fh
fid	elements/local/FlowNet/common/CongestionDetection.hh	/^	struct FlowID* fid;$/;"	m	struct:CongestionNotification	typeref:struct:CongestionNotification::FlowID
fid	elements/local/FlowNet/common/Flow.hh	/^	struct FlowID fid;$/;"	m	class:Flow	typeref:struct:Flow::FlowID
fid	include/click/simclick.h	/^    int fid;			\/* Simulator flow ID number for the packet *\/$/;"	m	struct:__anon467
field_add	elements/analysis/ipsumdumpinfo.cc	/^static void field_add(Vector<const void *> *&vec, const void *value)$/;"	f	file:
field_find	elements/analysis/ipsumdumpinfo.cc	/^static const void *field_find(Vector<const void *> *&vec, const String &name)$/;"	f	file:
field_missing	elements/analysis/ipsumdumpinfo.hh	/^inline bool field_missing(const PacketDesc &d, int proto, int l)$/;"	f	namespace:IPSummaryDump
field_missing_proto_name	elements/analysis/ipsumdumpinfo.cc	/^static const char *field_missing_proto_name(int proto)$/;"	f	namespace:IPSummaryDump
field_remove	elements/analysis/ipsumdumpinfo.cc	/^static void field_remove(Vector<const void *> *&vec, const void *value)$/;"	f	file:
fields	drivers/e1000-4.x/src/e1000_hw.h	/^        } fields;$/;"	m	union:e1000_context_desc::__anon60	typeref:struct:e1000_context_desc::__anon60::__anon61
fields	drivers/e1000-4.x/src/e1000_hw.h	/^        } fields;$/;"	m	union:e1000_data_desc::__anon64	typeref:struct:e1000_data_desc::__anon64::__anon65
fields	drivers/e1000-4.x/src/e1000_hw.h	/^        } fields;$/;"	m	union:e1000_tx_desc::__anon54	typeref:struct:e1000_tx_desc::__anon54::__anon55
fields	drivers/e1000-5.x/src/e1000_hw.h	/^        } fields;$/;"	m	union:e1000_context_desc::__anon157	typeref:struct:e1000_context_desc::__anon157::__anon158
fields	drivers/e1000-5.x/src/e1000_hw.h	/^        } fields;$/;"	m	union:e1000_data_desc::__anon161	typeref:struct:e1000_data_desc::__anon161::__anon162
fields	drivers/e1000-5.x/src/e1000_hw.h	/^        } fields;$/;"	m	union:e1000_tx_desc::__anon151	typeref:struct:e1000_tx_desc::__anon151::__anon152
fields	drivers/e1000-7.x/src/e1000_hw.h	/^        } fields;$/;"	m	union:e1000_context_desc::__anon114	typeref:struct:e1000_context_desc::__anon114::__anon115
fields	drivers/e1000-7.x/src/e1000_hw.h	/^        } fields;$/;"	m	union:e1000_data_desc::__anon118	typeref:struct:e1000_data_desc::__anon118::__anon119
fields	drivers/e1000-7.x/src/e1000_hw.h	/^        } fields;$/;"	m	union:e1000_tx_desc::__anon108	typeref:struct:e1000_tx_desc::__anon108::__anon109
fifo_underrun	elements/wifi/athdesc.h	/^	u_int32_t	fifo_underrun:1;$/;"	m	struct:ar5212_desc
file	include/clicknet/dhcp.h	/^	uint8_t  file[128];    \/* boot file name, null terminated string *\/$/;"	m	struct:click_dhcp
file_err	test/testie	/^sub file_err ($$;$) {$/;"	s
file_pos	include/click/fromfile.hh	/^    off_t file_pos() const		{ return _file_offset + _pos; }$/;"	f	class:FromFile
file_priv	elements/linuxmodule/touserdevice.hh	/^    struct file_priv {$/;"	s	class:ToUserDevice
file_refcnt	bsdmodule/clickfs_tree.hh	/^    int file_refcnt;$/;"	m	struct:clickfs_dirent
file_string	lib/userutils.cc	/^file_string(FILE *f, ErrorHandler *errh)$/;"	f
file_string	lib/userutils.cc	/^file_string(String filename, ErrorHandler *errh)$/;"	f
filecontents	click-mkelemmap	/^sub filecontents ($) {$/;"	s
filename	apps/clicky/src/cdriver.cc	/^String clickfs_cdriver::filename(const String &ename, const String &hname) const$/;"	f	class:clicky::clickfs_cdriver
filename	elements/analysis/toipflowdumps.hh	/^	String filename() const		{ return _filename; }$/;"	f	class:ToIPFlowDumps::Flow
filename	elements/analysis/toipsumdump.hh	/^    String filename() const		{ return _filename; }$/;"	f	class:ToIPSummaryDump
filename	include/click/fromfile.hh	/^    String &filename()			{ return _filename; }$/;"	f	class:FromFile
filename	include/click/fromfile.hh	/^    const String &filename() const	{ return _filename; }$/;"	f	class:FromFile
filename	include/click/router.hh	/^	String filename;$/;"	m	struct:Router::element_landmark_t
filename	lib/lexer.cc	/^    String filename;$/;"	m	struct:__anon511::ElementState	file:
filename	tools/lib/landmarkt.hh	/^	int filename;$/;"	m	struct:LandmarkSetT::LandmarkInfo
filename_handler	lib/fromfile.cc	/^FromFile::filename_handler(Element *e, void *thunk)$/;"	f	class:FromFile
filename_landmark	lib/userutils.cc	/^filename_landmark(const char *filename, bool file_is_expr)$/;"	f
fileno	bsdmodule/clickfs_tree.hh	/^    int fileno;				\/* aka inode number *\/$/;"	m	struct:clickfs_dirent
filepos_handler	lib/fromfile.cc	/^FromFile::filepos_handler(Element* e, void* thunk)$/;"	f	class:FromFile
filepos_write_handler	lib/fromfile.cc	/^FromFile::filepos_write_handler(const String& str, Element* e, void* thunk, ErrorHandler* errh)$/;"	f	class:FromFile
files	elements/local/OpenFlow/lib/fatal-signal.cc	/^static char **files;$/;"	v	file:
filesize_handler	lib/fromfile.cc	/^FromFile::filesize_handler(Element *e, void *thunk)$/;"	f	class:FromFile
fill_elements	apps/clicky/src/wmain.cc	/^void wmain::fill_elements(RouterT *r, const String &compound, bool only_primitive, const VariableEnvironment &scope, Vector<element_lister> &v)$/;"	f	class:clicky::wmain
fill_elements_tree_store	apps/clicky/src/wmain.cc	/^void wmain::fill_elements_tree_store(GtkTreeStore *store, RouterT *r)$/;"	f	class:clicky::wmain
fill_elements_tree_store_helper	apps/clicky/src/wmain.cc	/^Vector<wmain::element_lister>::iterator wmain::fill_elements_tree_store_helper(GtkTreeStore *store, GtkTreeIter *parent, Vector<element_lister>::iterator it, Vector<element_lister>::iterator end)$/;"	f	class:clicky::wmain
fill_flow_stats	elements/local/OpenFlow/datapath.cc	/^static void fill_flow_stats(struct ofpbuf *buffer, struct sw_flow *flow,$/;"	f	file:
fill_in	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::RTEntry::fill_in(grid_nbr_entry *nb) const$/;"	f	class:DSDVRouteTable::RTEntry
fill_in	elements/grid/gridroutetable.cc	/^GridRouteTable::RTEntry::fill_in(grid_nbr_entry *nb, LinkStat *ls)$/;"	f	class:GridRouteTable::RTEntry
fill_port_desc	elements/local/OpenFlow/datapath.cc	/^void Datapath::fill_port_desc(struct click_port *p, struct ofp_phy_port *desc, struct ofpbuf* buffer UNUSED)$/;"	f	class:Datapath
fill_queue_desc	elements/local/OpenFlow/datapath.cc	/^static void fill_queue_desc(struct ofpbuf *buffer, struct sw_queue *q,$/;"	f	file:
fill_tcm	elements/etherswitch/bridgemessage.cc	/^void BridgeMessage::fill_tcm(BridgeMessage::wire* msg) {$/;"	f	class:BridgeMessage
filldir	linuxmodule/clickfs.cc	/^    filldir_t filldir;$/;"	m	struct:my_filldir_container	file:
filldir_t	include/click/ino.hh	/^    typedef bool (*filldir_t)(const char *name, int name_len, ino_t ino, int dirtype, uint32_t f_pos, void *user_data);$/;"	t	class:ClickIno
filter	lib/elemfilter.cc	/^ElementFilter::filter(Vector<Element *> &es)$/;"	f	class:ElementFilter
filtered	elements/wifi/athdesc.h	/^	u_int32_t	filtered:1;$/;"	m	struct:ar5212_desc
filters	elements/analysis/aggregatefilter.hh	/^	uint8_t filters[NINGROUP];$/;"	m	struct:AggregateFilter::Group
fin_packet	elements/linuxmodule/fasttcpflows.hh	/^    Packet *fin_packet;$/;"	m	struct:FastTCPFlows::flow_t
final	elements/local/OpenFlow/lib/hash.cc	51;"	d	file:
final_ts_index	elements/wifi/athdesc.h	/^	u_int32_t	final_ts_index:2;$/;"	m	struct:ar5212_desc
find	apps/clicky/src/dstyle.cc	/^const dcss_property *dcss::find(PermString name) const$/;"	f	class:clicky::dcss
find	apps/clicky/src/dstyle.hh	/^inline dcss_property *dcss::find(PermString name)$/;"	f	class:clicky::dcss
find	apps/clicky/src/hvalues.hh	/^    handler_value *find(const String &hname) {$/;"	f	struct:clicky::handler_values
find	elements/analysis/ipsumdumpinfo.cc	/^const FieldReader *FieldReader::find(const String &name)$/;"	f	class:IPSummaryDump::FieldReader
find	elements/analysis/ipsumdumpinfo.cc	/^const FieldWriter *FieldWriter::find(const String &name)$/;"	f	class:IPSummaryDump::FieldWriter
find	elements/tcpudp/snooptcp.cc	/^SnoopTCP::find(unsigned s_ip, unsigned short s_port,$/;"	f	class:SnoopTCP
find	include/click/algorithm.hh	/^inline T *find(T *begin, T *end, const T &val)$/;"	f
find	include/click/algorithm.hh	/^inline const T *find(const T *begin, const T *end, const T &val)$/;"	f
find	include/click/archive.hh	/^    static ArchiveElement *find(Vector<ArchiveElement> &ar, const String &name) {$/;"	f	struct:ArchiveElement
find	include/click/archive.hh	/^    static const ArchiveElement *find(const Vector<ArchiveElement> &ar, const String &name) {$/;"	f	struct:ArchiveElement
find	include/click/hashcontainer.hh	/^HashContainer<T, A>::find(const key_type &key) const$/;"	f	class:HashContainer
find	include/click/hashcontainer.hh	/^HashContainer<T, A>::find(const key_type &key)$/;"	f	class:HashContainer
find	include/click/hashmap.hh	/^  T *find(const K &k) const { return reinterpret_cast<T *>(inherited::find(k)); }$/;"	f	class:HashMap
find	include/click/hashmap.hh	/^  T *find(const K &k, T *v) const { return reinterpret_cast<T *>(inherited::find(k, v)); }$/;"	f	class:HashMap
find	include/click/hashmap.hh	/^HashMap<K, V>::find(const K &key) const$/;"	f	class:HashMap
find	include/click/hashmap.hh	/^HashMap<K, V>::find(const K &key, const V &default_value) const$/;"	f	class:HashMap
find	include/click/hashmap.hh	/^HashMap<K, void *>::find(const K &key) const$/;"	f	class:HashMap
find	include/click/hashmap.hh	/^HashMap<K, void *>::find(const K &key, void *default_value) const$/;"	f	class:HashMap
find	include/click/hashtable.hh	/^    inline const_iterator find(const key_type &key) const {$/;"	f	class:HashTable
find	include/click/hashtable.hh	/^    inline iterator find(const key_type &key) {$/;"	f	class:HashTable
find	include/click/hashtable.hh	/^inline HashTable_const_iterator<T> HashTable<T>::find(key_const_reference key) const$/;"	f	class:HashTable
find	include/click/hashtable.hh	/^inline HashTable_iterator<T> HashTable<T>::find(key_const_reference key)$/;"	f	class:HashTable
find	include/click/router.hh	/^Router::find(const String& name, ErrorHandler *errh) const$/;"	f	class:Router
find	include/click/string.hh	/^inline const char *find(const String &s, char c) {$/;"	f
find	lib/args.cc	/^Args::find(const char *keyword, int flags, Slot *&slot_status)$/;"	f	class:Args
find	lib/nameinfo.cc	/^DynamicNameDB::find(const String &name, bool create)$/;"	f	class:DynamicNameDB
find	lib/router.cc	/^Router::find(const String &name, String context, ErrorHandler *errh) const$/;"	f	class:Router
find	lib/router.cc	/^Router::find(const String &name, const Element *context, ErrorHandler *errh) const$/;"	f	class:Router
find	tools/click-devirtualize/cxxclass.hh	/^CxxClass::find(const String &name)$/;"	f	class:CxxClass
findEntry	elements/grid/pep.cc	/^PEP::findEntry(unsigned id, bool create)$/;"	f	class:PEP
findEntry	elements/grid/regionpep.cc	/^EstimateRouterRegion::findEntry(unsigned id, bool create)$/;"	f	class:EstimateRouterRegion
find_aggregate	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::find_aggregate(uint32_t agg, const Packet *p)$/;"	f	class:ToIPFlowDumps
find_aggregate	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::find_aggregate(uint32_t agg, const Packet *p)$/;"	f	class:IPFlowRawSockets
find_all	apps/clicky/src/rectsearch.hh	/^void rect_search<T, CHUNK>::find_all(const rectangle &r, std::vector<T *> &result) const$/;"	f	class:rect_search
find_all	apps/clicky/src/rectsearch.hh	/^void rect_search<T, CHUNK>::find_all(double x, double y, std::vector<T *> &result) const$/;"	f	class:rect_search
find_bucket	elements/local/OpenFlow/lib/table-hash.cc	/^static struct sw_flow **find_bucket(struct sw_table *swt,$/;"	f	file:
find_class	tools/click-devirtualize/cxxclass.hh	/^CxxInfo::find_class(const String &name) const$/;"	f	class:CxxInfo
find_connection	apps/clicky/src/dwidget.cc	/^dconn *delt::find_connection(bool isoutput, int port)$/;"	f	class:clicky::delt
find_connection_vector_from	tools/lib/routert.hh	/^    inline void find_connection_vector_from(const ElementT *e, Vector<conn_iterator> &x) const {$/;"	f	class:RouterT
find_connection_vector_to	tools/lib/routert.hh	/^    inline void find_connection_vector_to(const ElementT *e, Vector<conn_iterator> &x) const {$/;"	f	class:RouterT
find_connection_vector_touching	tools/lib/routert.cc	/^RouterT::find_connection_vector_touching(const ElementT *e, bool isoutput, Vector<conn_iterator> &x) const$/;"	f	class:RouterT
find_connections_from	tools/lib/routert.hh	/^    inline void find_connections_from(const PortT &output, Vector<PortT> &v, bool clear = true) const {$/;"	f	class:RouterT
find_connections_from	tools/lib/routert.hh	/^inline RouterT::conn_iterator RouterT::find_connections_from(ElementT *e) const$/;"	f	class:RouterT
find_connections_from	tools/lib/routert.hh	/^inline RouterT::conn_iterator RouterT::find_connections_from(ElementT *e, int port) const$/;"	f	class:RouterT
find_connections_from	tools/lib/routert.hh	/^inline RouterT::conn_iterator RouterT::find_connections_from(const PortT &port) const$/;"	f	class:RouterT
find_connections_to	tools/lib/routert.hh	/^    void find_connections_to(const PortT &input, Vector<PortT> &v) const {$/;"	f	class:RouterT
find_connections_to	tools/lib/routert.hh	/^inline RouterT::conn_iterator RouterT::find_connections_to(ElementT *e) const$/;"	f	class:RouterT
find_connections_to	tools/lib/routert.hh	/^inline RouterT::conn_iterator RouterT::find_connections_to(ElementT *e, int port) const$/;"	f	class:RouterT
find_connections_to	tools/lib/routert.hh	/^inline RouterT::conn_iterator RouterT::find_connections_to(const PortT &port) const$/;"	f	class:RouterT
find_connections_touching	tools/lib/routert.cc	/^RouterT::find_connections_touching(const PortT &port, bool isoutput, Vector<PortT> &v, bool clear) const$/;"	f	class:RouterT
find_connections_touching	tools/lib/routert.cc	/^RouterT::find_connections_touching(int eindex, int port, bool isoutput) const$/;"	f	class:RouterT
find_connections_touching	tools/lib/routert.hh	/^inline RouterT::conn_iterator RouterT::find_connections_touching(ElementT *e, bool isoutput) const$/;"	f	class:RouterT
find_connections_touching	tools/lib/routert.hh	/^inline RouterT::conn_iterator RouterT::find_connections_touching(ElementT *e, int port, bool isoutput) const$/;"	f	class:RouterT
find_connections_touching	tools/lib/routert.hh	/^inline RouterT::conn_iterator RouterT::find_connections_touching(const PortT &port, bool isoutput) const$/;"	f	class:RouterT
find_device	elements/bsdmodule/anydevice.cc	/^AnyDevice::find_device(bool allow_nonexistent, AnyDeviceMap *adm,$/;"	f	class:AnyDevice
find_device_by_ether_address	elements/bsdmodule/anydevice.cc	/^find_device_by_ether_address(const String &name, Element *context)$/;"	f
find_ehandler	lib/router.cc	/^Router::find_ehandler(int eindex, const String &hname, bool allow_star) const$/;"	f	class:Router
find_entry	elements/grid/movesim.cc	/^MovementSimulator::find_entry(unsigned int t, event_entry **retval)$/;"	f	class:MovementSimulator
find_entry	elements/ip/directiplookup.cc	/^DirectIPLookup::Table::find_entry(uint32_t prefix, uint32_t plen) const$/;"	f	class:DirectIPLookup::Table
find_expr	tools/click-devirtualize/cxxclass.cc	/^CxxFunction::find_expr(const String &pattern) const$/;"	f	class:CxxFunction
find_expr	tools/click-devirtualize/cxxclass.cc	/^CxxFunction::find_expr(const String &pattern, int *pos1, int *pos2,$/;"	f	class:CxxFunction
find_flow	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::find_flow(uint32_t agg)$/;"	f	class:AggregatePacketCounter
find_flow_info	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::find_flow_info(Map &m, HostPairInfo *hpinfo, uint32_t ports, bool flipped, const Packet *p)$/;"	f	class:AggregateIPFlows
find_flow_split	apps/clicky/src/dwidget.hh	/^    const delt *find_flow_split(bool isoutput, int port) const {$/;"	f	class:clicky::delt
find_flow_split	apps/clicky/src/dwidget.hh	/^    delt *find_flow_split(bool isoutput, int port) {$/;"	f	class:clicky::delt
find_force	apps/clicky/src/hvalues.hh	/^    handler_value *find_force(const String &hname) {$/;"	f	struct:clicky::handler_values
find_force	include/click/hashmap.hh	/^  T *&find_force(const K &k) { return *reinterpret_cast<T **>(inherited::findp_force(k)); }$/;"	f	class:HashMap
find_force	include/click/hashmap.hh	/^  T *&find_force(const K &k, T *v) { return *reinterpret_cast<T **>(inherited::findp_force(k, v)); }$/;"	f	class:HashMap
find_force	include/click/hashmap.hh	/^  V &find_force(const K &k)	{ return *findp_force(k, _default_value); }$/;"	f	class:HashMap
find_force	include/click/hashmap.hh	/^  V &find_force(const K &k, const V &v) { return *findp_force(k, v); }$/;"	f	class:HashMap
find_force	include/click/hashmap.hh	/^  void *&find_force(const K &k)  { return *findp_force(k, _default_value); }$/;"	f	class:HashMap
find_force	include/click/hashmap.hh	/^  void *&find_force(const K &k, void *v) { return *findp_force(k, v); }$/;"	f	class:HashMap
find_fromdevice	elements/userlevel/todevice.cc	/^ToDevice::find_fromdevice() const$/;"	f	class:ToDevice
find_gadget	apps/clicky/src/dwidget.cc	/^int delt::find_gadget(wdiagram *d, double window_x, double window_y) const$/;"	f	class:clicky::delt
find_group	elements/analysis/aggregatefilter.cc	/^AggregateFilter::find_group(uint32_t aggregate)$/;"	f	class:AggregateFilter
find_hinfo	apps/clicky/src/whandler.hh	/^inline const whandler::hinfo *whandler::find_hinfo(const String &hname) const$/;"	f	class:clicky::whandler
find_hinfo	apps/clicky/src/whandler.hh	/^inline whandler::hinfo *whandler::find_hinfo(const String &hname)$/;"	f	class:clicky::whandler
find_hinfo	apps/clicky/src/whandler.hh	/^inline whandler::hinfo *whandler::find_hinfo(handler_value *hv)$/;"	f	class:clicky::whandler
find_insert	include/click/hashtable.hh	/^    inline iterator find_insert(const key_type &key) {$/;"	f	class:HashTable
find_insert	include/click/hashtable.hh	/^    inline iterator find_insert(const key_type &key, const mapped_type &value) {$/;"	f	class:HashTable
find_insert	include/click/hashtable.hh	/^HashTable_iterator<T> HashTable<T>::find_insert(const value_type &v)$/;"	f	class:HashTable
find_insert	include/click/hashtable.hh	/^HashTable_iterator<T> HashTable<T>::find_insert(key_const_reference key)$/;"	f	class:HashTable
find_label	elements/standard/script.cc	/^Script::find_label(const String &label) const$/;"	f	class:Script
find_left	lib/string.cc	/^String::find_left(char c, int start) const$/;"	f	class:String
find_left	lib/string.cc	/^String::find_left(const String &str, int start) const$/;"	f	class:String
find_linuxpath	configure	/^find_linuxpath () {$/;"	f
find_live_elements	tools/click-undead/click-undead.cc	/^find_live_elements(\/*const*\/ RouterT *r, const char *filename,$/;"	f	file:
find_long	lib/clp.c	/^find_long(Clp_Parser *clp, const char *arg)$/;"	f	file:
find_mport	elements/ip6/addresstranslator.cc	/^AddressTranslator::find_mport( )$/;"	f	class:AddressTranslator
find_node	elements/analysis/aggcounter.cc	/^AggregateCounter::find_node(uint32_t a, bool frozen)$/;"	f	class:AggregateCounter
find_node	elements/analysis/anonipaddr.cc	/^AnonymizeIPAddr::find_node(uint32_t a)$/;"	f	class:AnonymizeIPAddr
find_offset	apps/clicky/src/gathererror.cc	/^GatherErrorHandler::const_iterator GatherErrorHandler::find_offset(int offset) const$/;"	f	class:GatherErrorHandler
find_offset	apps/clicky/src/gathererror.cc	/^GatherErrorHandler::iterator GatherErrorHandler::find_offset(int offset)$/;"	f	class:GatherErrorHandler
find_pair	include/click/hashmap.cc	/^HashMap<K, V>::find_pair(const K &key) const$/;"	f	class:HashMap
find_pair	include/click/hashmap.cc	/^HashMap<K, void *>::find_pair(const K &key) const$/;"	f	class:HashMap
find_pair	include/click/hashmap.hh	/^  Pair *find_pair(const K &k) const { return reinterpret_cast<Pair *>(inherited::find_pair(k)); }$/;"	f	class:HashMap
find_pair_force	include/click/hashmap.cc	/^HashMap<K, V>::find_pair_force(const K &key, const V &default_value)$/;"	f	class:HashMap
find_pair_force	include/click/hashmap.cc	/^HashMap<K, void *>::find_pair_force(const K &key, void *default_value)$/;"	f	class:HashMap
find_pair_force	include/click/hashmap.hh	/^  Pair *find_pair_force(const K &k) { return find_pair_force(k, _default_value); }$/;"	f	class:HashMap
find_pair_force	include/click/hashmap.hh	/^  Pair *find_pair_force(const K &k) { return reinterpret_cast<Pair *>(inherited::find_pair_force(k)); }$/;"	f	class:HashMap
find_pair_force	include/click/hashmap.hh	/^  Pair *find_pair_force(const K &k, T *v) { return reinterpret_cast<Pair *>(inherited::find_pair_force(k, v)); }$/;"	f	class:HashMap
find_pixmap_file	apps/clicky/src/support.c	/^find_pixmap_file                       (const gchar     *filename)$/;"	f	file:
find_placeholder	apps/clicky/src/hvalues.hh	/^    handler_value *find_placeholder(const String &hname, int flags,$/;"	f	struct:clicky::handler_values
find_port_container	apps/clicky/src/dwidget.hh	/^    inline delt *find_port_container(bool isoutput, int port) {$/;"	f	class:clicky::delt
find_predecessors	elements/standard/classification.cc	/^DominatorOptimizer::find_predecessors(int state, Vector<int> &v) const$/;"	f	class:Classification::Wordwise::DominatorOptimizer
find_prefer	include/click/hashcontainer.hh	/^HashContainer<T, A>::find_prefer(const key_type &key)$/;"	f	class:HashContainer
find_prefer	include/click/hashtable.hh	/^    inline iterator find_prefer(const key_type &key) {$/;"	f	class:HashTable
find_prefer	include/click/hashtable.hh	/^inline HashTable_iterator<T> HashTable<T>::find_prefer(key_const_reference key)$/;"	f	class:HashTable
find_prefix_opt	lib/clp.c	/^find_prefix_opt(Clp_Parser *clp, const char *arg,$/;"	f	file:
find_producer	linuxmodule/skbmgr.cc	/^RecycledSkbPool::find_producer(int cpu, int bucket)$/;"	f	class:RecycledSkbPool
find_queue	elements/ip/ipreassembler.cc	/^IPReassembler::find_queue(Packet *p, WritablePacket ***store_pprev)$/;"	f	class:IPReassembler
find_rect_elts	apps/clicky/src/wdiagram.cc	/^void cdiagram::find_rect_elts(const rectangle &r,$/;"	f	class:clicky::cdiagram
find_right	lib/string.cc	/^String::find_right(char c, int start) const$/;"	f	class:String
find_short	lib/clp.c	/^find_short(Clp_Parser *clp, const char *text)$/;"	f	file:
find_should_rewrite	tools/click-devirtualize/cxxclass.cc	/^CxxClass::find_should_rewrite()$/;"	f	class:CxxClass
find_some	apps/clicky/src/rectsearch.hh	/^void rect_search<T, CHUNK>::find_some(const std::list<T *> &l, const rectangle &r, std::vector<T *> &result)$/;"	f	class:rect_search
find_some	apps/clicky/src/rectsearch.hh	/^void rect_search<T, CHUNK>::find_some(const std::list<T *> &l, double x, double y, std::vector<T *> &result)$/;"	f	class:rect_search
find_split	apps/clicky/src/dwidget.hh	/^    const delt *find_split(int split_type) const {$/;"	f	class:clicky::delt
find_split	apps/clicky/src/dwidget.hh	/^    delt *find_split(int split_type) {$/;"	f	class:clicky::delt
find_top	ns/CUT_BinHeap.h	/^  Pix find_top() const {$/;"	f	class:CUT_BinHeap
find_traits	tools/lib/eclasst.cc	/^ElementClassT::find_traits(ElementMap *emap) const$/;"	f	class:ElementClassT
find_traits	tools/lib/eclasst.cc	/^SynonymElementClassT::find_traits(ElementMap *emap) const$/;"	f	class:SynonymElementClassT
find_traits	tools/lib/eclasst.cc	/^TraitsElementClassT::find_traits(ElementMap *) const$/;"	f	class:__anon533::TraitsElementClassT
find_traits	tools/lib/routert.cc	/^RouterT::find_traits(ElementMap *emap) const$/;"	f	class:RouterT
find_tree	elements/etherswitch/spantree.cc	/^EtherSpanTree::find_tree() {$/;"	f	class:EtherSpanTree
find_tunnel	lib/lexer.cc	/^Lexer::find_tunnel(const Port &h, bool isoutput, bool insert)$/;"	f	class:Lexer
find_variable	elements/standard/script.cc	/^Script::find_variable(const String &name, bool add)$/;"	f	class:Script
findelem	click-buildtool	/^findelem () {$/;"	f
findelem_usage	click-buildtool	/^findelem_usage () {$/;"	f
findp	include/click/hashmap.hh	/^  T **findp(const K &k) const { return reinterpret_cast<T **>(inherited::findp(k)); }$/;"	f	class:HashMap
findp	include/click/hashmap.hh	/^HashMap<K, V>::findp(const K &key) const$/;"	f	class:HashMap
findp	include/click/hashmap.hh	/^HashMap<K, void *>::findp(const K &key) const$/;"	f	class:HashMap
findp_force	include/click/hashmap.hh	/^  T **findp_force(const K &k) { return reinterpret_cast<T **>(inherited::findp_force(k)); }$/;"	f	class:HashMap
findp_force	include/click/hashmap.hh	/^  T **findp_force(const K &k, T *v) { return reinterpret_cast<T **>(inherited::findp_force(k, v)); }$/;"	f	class:HashMap
findp_force	include/click/hashmap.hh	/^  V *findp_force(const K &k)	{ return findp_force(k, _default_value); }$/;"	f	class:HashMap
findp_force	include/click/hashmap.hh	/^  V *findp_force(const K &k, const V &v) { if (Pair *p = find_pair_force(k, v)) return &p->value; else return 0; }$/;"	f	class:HashMap
findp_force	include/click/hashmap.hh	/^  void **findp_force(const K &k) { return findp_force(k, _default_value); }$/;"	f	class:HashMap
findp_force	include/click/hashmap.hh	/^  void **findp_force(const K &k, void *v) { if (Pair *p = find_pair_force(k, v)) return &p->value; else return 0; }$/;"	f	class:HashMap
finish	lib/lexer.cc	/^Lexer::Compound::finish(Lexer *lexer, ErrorHandler *errh)$/;"	f	class:Lexer::Compound
finish	tools/click-fastclassifier/fc_ipclassifier.cc	/^finish(StringAccum &source, const StringAccum &program, int used)$/;"	f	file:
finish	tools/lib/lexert.cc	/^LexerT::finish(const VariableEnvironment &global_scope)$/;"	f	class:LexerT
finish_configure	elements/aqm/red.cc	/^RED::finish_configure(unsigned min_thresh, unsigned max_thresh, bool gentle,$/;"	f	class:RED
finish_copy_constructor	lib/bitvector.cc	/^Bitvector::finish_copy_constructor(const Bitvector &o)$/;"	f	class:Bitvector
finish_experiment	elements/grid/linktester.cc	/^LinkTester::finish_experiment()$/;"	f	class:LinkTester
finish_keyword_error	lib/confparse.cc	/^CpVaHelper::finish_keyword_error(const char *format, const char *bad_keywords, ErrorHandler *errh)$/;"	f	class:__anon517::CpVaHelper
finish_string_list	lib/clp.c	/^finish_string_list(Clp_Parser *clp, int val_type, int flags,$/;"	f
finish_subtree	elements/standard/classification.cc	/^Program::finish_subtree(Vector<int> &tree, Combiner combiner,$/;"	f	class:Classification::Wordwise::Program
finish_type	tools/lib/routert.cc	/^RouterT::finish_type(ErrorHandler *errh)$/;"	f	class:RouterT
fire	include/click/task.hh	/^Task::fire()$/;"	f	class:Task
first	elements/bsdmodule/fastudpsrc.hh	/^  click_jiffies_t first() { return _first; }$/;"	f	class:FastUDPSource
first	elements/linuxmodule/fasttcpflows.hh	/^  click_jiffies_t first() { return _first; }$/;"	f	class:FastTCPFlows
first	elements/linuxmodule/fastudpflows.hh	/^  click_jiffies_t first() { return _first; }$/;"	f	class:FastUDPFlows
first	elements/linuxmodule/fastudpsrc.hh	/^  click_jiffies_t first() { return _first; }$/;"	f	class:FastUDPSource
first	elements/linuxmodule/fastudpsrcip6.hh	/^  click_jiffies_t first() { return _first; }$/;"	f	class:FastUDPSourceIP6
first	elements/standard/averagecounter.hh	/^    uint32_t first() const			{ return _first; }$/;"	f	class:AverageCounter
first	include/click/pair.hh	/^    T first;$/;"	m	struct:Pair
first	ns/CUT_BinHeap.h	/^  Pix first() const {$/;"	f	class:CUT_BinHeap
first	tools/lib/runparse.hh	/^	ElementClassT *first;$/;"	m	struct:RouterUnparserT::Pair
firstController	apps/ClickController/ClickController.java	/^    private static ClickController firstController() {$/;"	m	class:ClickController	file:
firstInteger	apps/ClickController/StringUtils.java	/^    public static Pair firstInteger(String s) throws IllegalArgumentException {$/;"	m	class:StringUtils
firstWord	apps/ClickController/StringUtils.java	/^    public static Pair firstWord(String s) throws IllegalArgumentException {$/;"	m	class:StringUtils
first_argument_type	include/click/algorithm.hh	/^    typedef T first_argument_type;$/;"	t	struct:do_nothing
first_argument_type	include/click/algorithm.hh	/^    typedef T first_argument_type;$/;"	t	struct:less
first_bcast_time	elements/grid/linktester.cc	/^LinkTester::first_bcast_time(unsigned int iter, bool before)$/;"	f	class:LinkTester
first_bucket	include/click/hashcontainer.hh	/^    mutable size_t first_bucket;$/;"	m	class:HashContainer_rep
first_changed_port	elements/local/OpenFlow/lib/stp.cc	/^    struct stp_port *first_changed_port;$/;"	m	struct:stp	typeref:struct:stp::stp_port	file:
first_dropped	elements/local/OpenFlow/lib/vlog.hh	/^    time_t first_dropped;       \/* Time first message was dropped. *\/$/;"	m	struct:vlog_rate_limit
first_landmarkid	include/click/router.hh	/^	uint32_t first_landmarkid;$/;"	m	struct:Router::element_landmark_t
first_packet	elements/analysis/timefilter.cc	/^TimeFilter::first_packet(const Timestamp& tv)$/;"	f	class:TimeFilter
first_type	include/click/pair.hh	/^    typedef T first_type;$/;"	t	struct:Pair
first_unicast_time	elements/grid/linktester.cc	/^LinkTester::first_unicast_time(unsigned int iter)$/;"	f	class:LinkTester
firstmatch	include/click/args.hh	/^    static constexpr int firstmatch = 8; \/\/\/< read flag to take first matching argument$/;"	m	struct:Args
fix_dim	elements/grid/pep_proto.hh	/^  grid_location fix_dim;  \/\/ region's height and width, stored as lat\/lon respectively$/;"	m	struct:pep_rgn_fix
fix_elements	tools/click-devirtualize/specializer.cc	/^Specializer::fix_elements()$/;"	f	class:Specializer
fix_hops	elements/grid/pep_proto.hh	/^  int fix_hops;           \/\/ # of hops to fix_id.$/;"	m	struct:pep_fix
fix_hops	elements/grid/pep_proto.hh	/^  int fix_hops;           \/\/ # of hops to fix_id.$/;"	m	struct:pep_rgn_fix
fix_id	elements/grid/pep_proto.hh	/^  unsigned fix_id;        \/\/ IP address.$/;"	m	struct:pep_fix
fix_id	elements/grid/pep_proto.hh	/^  unsigned fix_id;        \/\/ IP address.$/;"	m	struct:pep_rgn_fix
fix_it	elements/ip/fixipsrc.cc	/^FixIPSrc::fix_it(Packet *p_in)$/;"	f	class:FixIPSrc
fix_loc	elements/grid/pep_proto.hh	/^  grid_location fix_loc;  \/\/ Location of node fix_id.$/;"	m	struct:pep_fix
fix_loc	elements/grid/pep_proto.hh	/^  grid_location fix_loc;  \/\/ location of region's lower left corner.$/;"	m	struct:pep_rgn_fix
fix_one_requires	doc/click-elem2man	/^sub fix_one_requires ($) {$/;"	s
fix_ports	conf/click-mkclgw.pl	/^sub fix_ports {$/;"	s
fix_requires	doc/click-elem2man	/^sub fix_requires () {$/;"	s
fix_seq	elements/grid/pep_proto.hh	/^  int fix_seq;            \/\/ fix's sequence number.$/;"	m	struct:pep_fix
fix_seq	elements/grid/pep_proto.hh	/^  int fix_seq;            \/\/ fix's sequence number.$/;"	m	struct:pep_rgn_fix
fixes	elements/grid/pep_proto.hh	/^  struct pep_fix fixes[pep_proto_fixes];$/;"	m	struct:pep_proto	typeref:struct:pep_proto::pep_fix
fixes	elements/grid/pep_proto.hh	/^  struct pep_rgn_fix fixes[pep_proto_fixes];$/;"	m	struct:pep_rgn_proto	typeref:struct:pep_rgn_proto::pep_rgn_fix
fl_close	elements/linuxmodule/fromhost.cc	/^fl_close(net_device *dev)$/;"	f	file:
fl_open	elements/linuxmodule/fromhost.cc	/^fl_open(net_device *dev)$/;"	f	file:
fl_stats	elements/linuxmodule/fromhost.cc	/^FromHost::fl_stats(net_device *dev)$/;"	f	class:FromHost
fl_tx	elements/linuxmodule/fromhost.cc	/^FromHost::fl_tx(struct sk_buff *skb, net_device *dev)$/;"	f	class:FromHost
fl_wakeup	elements/linuxmodule/fromhost.cc	/^fl_wakeup(Timer *, void *thunk)$/;"	f	file:
flag_value	lib/element.cc	/^Element::flag_value(int flag) const$/;"	f	class:Element
flag_value	tools/lib/etraits.hh	/^ElementTraits::flag_value(const String &str) const$/;"	f	class:ElementTraits
flags	apps/clicky/src/cdriver.hh	/^	int flags;$/;"	m	struct:clicky::csocket_cdriver::msg
flags	apps/clicky/src/dstyle.hh	/^    int flags;$/;"	m	struct:clicky::dhandler_style
flags	apps/clicky/src/hvalues.hh	/^    int flags() const {$/;"	f	class:clicky::handler_value
flags	drivers/e1000-4.x/src/ans.h	/^    } flags;$/;"	m	struct:_iANSsupport_t	typeref:union:_iANSsupport_t::__anon38
flags	drivers/e1000-4.x/src/e1000_hw.h	/^        } flags;$/;"	m	union:e1000_data_desc::__anon62	typeref:struct:e1000_data_desc::__anon62::__anon63
flags	drivers/e1000-4.x/src/e1000_hw.h	/^        } flags;$/;"	m	union:e1000_tx_desc::__anon52	typeref:struct:e1000_tx_desc::__anon52::__anon53
flags	drivers/e1000-5.x/src/e1000_hw.h	/^        } flags;$/;"	m	union:e1000_data_desc::__anon159	typeref:struct:e1000_data_desc::__anon159::__anon160
flags	drivers/e1000-5.x/src/e1000_hw.h	/^        } flags;$/;"	m	union:e1000_tx_desc::__anon149	typeref:struct:e1000_tx_desc::__anon149::__anon150
flags	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t flags;$/;"	m	struct:ethtool_test
flags	drivers/e1000-7.x/src/e1000.h	/^	unsigned long flags;$/;"	m	struct:e1000_adapter
flags	drivers/e1000-7.x/src/e1000_hw.h	/^        } flags;$/;"	m	union:e1000_data_desc::__anon116	typeref:struct:e1000_data_desc::__anon116::__anon117
flags	drivers/e1000-7.x/src/e1000_hw.h	/^        } flags;$/;"	m	union:e1000_tx_desc::__anon106	typeref:struct:e1000_tx_desc::__anon106::__anon107
flags	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t flags;$/;"	m	struct:ethtool_test
flags	elements/analysis/fromdagdump.hh	/^	uint8_t flags;$/;"	m	struct:FromDAGDump::DAGCell
flags	elements/analysis/timesortedsched.hh	/^    const char *flags() const		{ return "S0"; }$/;"	f	class:TimeSortedSched
flags	elements/analysis/toipsumdump.hh	/^    const char *flags() const		{ return "S2"; }$/;"	f	class:ToIPSummaryDump
flags	elements/bsdmodule/tohost.hh	/^    const char *flags() const		{ return "S2"; }$/;"	f	class:ToHost
flags	elements/ethernet/arpquerier.hh	/^    const char *flags() const			{ return "L2"; }$/;"	f	class:ARPQuerier
flags	elements/grid/gridproxy.hh	/^    const char *flags() const	   { return "A"; }$/;"	f	class:GridProxy
flags	elements/icmp/icmpipencap.hh	/^    const char *flags() const			{ return "A"; }$/;"	f	class:ICMPIPEncap
flags	elements/icmp/icmppingencap.hh	/^    const char *flags() const			{ return "A"; }$/;"	f	class:ICMPPingEncap
flags	elements/ip/checkipheader.hh	/^  const char *flags() const			{ return "A"; }$/;"	f	class:CheckIPHeader
flags	elements/ip/ipfilter.hh	/^    const char *flags() const			{ return ""; }$/;"	f	class:IPFilter
flags	elements/ip/ipinputcombo.hh	/^  const char *flags() const			{ return "A"; }$/;"	f	class:IPInputCombo
flags	elements/ipsec/ipsecencap.hh	/^  const char *flags() const			{ return "A"; }$/;"	f	class:IPsecEncap
flags	elements/linuxmodule/tohost.hh	/^    const char *flags() const		{ return "S2"; }$/;"	f	class:ToHost
flags	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t flags;               \/* One of OFPFF_*. *\/$/;"	m	struct:ofp_flow_mod
flags	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t flags;             \/* OFPC_* flags. *\/$/;"	m	struct:ofp_switch_config
flags	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t flags;             \/* OFPSF_REPLY_* flags. *\/$/;"	m	struct:ofp_stats_reply
flags	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t flags;             \/* OFPSF_REQ_* flags (none yet defined). *\/$/;"	m	struct:ofp_stats_request
flags	elements/local/OpenFlow/lib/stp.cc	/^    uint8_t flags;                 \/* STP_CONFIG_* flags. *\/$/;"	m	struct:stp_config_bpdu	file:
flags	elements/simple/simplepriosched.hh	/^    const char *flags() const		{ return "S0"; }$/;"	f	class:SimplePrioSched
flags	elements/simple/simplerrsched.hh	/^    const char *flags() const		{ return "S0"; }$/;"	f	class:SimpleRRSched
flags	elements/standard/classifier.hh	/^    const char *flags() const			{ return "A"; }$/;"	f	class:Classifier
flags	elements/standard/drr.hh	/^    const char *flags() const			{ return "S0"; }$/;"	f	class:DRRSched
flags	elements/standard/idle.hh	/^  const char *flags() const		{ return "S0"; }$/;"	f	class:Idle
flags	elements/standard/infinitesource.hh	/^  const char *flags() const			{ return "S1"; }$/;"	f	class:InfiniteSource
flags	elements/standard/priosched.hh	/^    const char *flags() const		{ return "S0"; }$/;"	f	class:PrioSched
flags	elements/standard/rrsched.hh	/^    const char *flags() const		{ return "S0"; }$/;"	f	class:RRSched
flags	elements/standard/stridesched.hh	/^    const char *flags() const			{ return "S0"; }$/;"	f	class:StrideSched
flags	elements/tcpudp/dynudpipencap.hh	/^  const char *flags() const		{ return "A"; }$/;"	f	class:DynamicUDPIPEncap
flags	elements/tcpudp/udpip6encap.hh	/^    const char *flags() const		{ return "A"; }$/;"	f	class:UDPIP6Encap
flags	elements/tcpudp/udpipencap.hh	/^    const char *flags() const		{ return "A"; }$/;"	f	class:UDPIPEncap
flags	elements/userlevel/kerneltun.hh	/^    const char *flags() const		{ return "S3"; }$/;"	f	class:KernelTun
flags	elements/userlevel/rawsocket.hh	/^  const char *flags() const		{ return "S3"; }$/;"	f	class:RawSocket
flags	elements/userlevel/socket.hh	/^  const char *flags() const		{ return "S3"; }$/;"	f	class:Socket
flags	elements/userlevel/todevice.hh	/^    const char *flags() const			{ return "S2"; }$/;"	f	class:ToDevice
flags	elements/userlevel/todump.hh	/^    const char *flags() const		{ return "S2"; }$/;"	f	class:ToDump
flags	include/click/clp.h	/^    int flags;			\/**< Option parsing flags. *\/$/;"	m	struct:Clp_Option
flags	include/click/confparse.hh	/^    int flags;$/;"	m	struct:cp_argtype
flags	include/click/handler.hh	/^    inline uint32_t flags() const {$/;"	f	class:Handler
flags	include/click/handlercall.hh	/^    int flags;$/;"	m	struct:HandlerCallArg
flags	include/click/ino.hh	/^	uint16_t flags;$/;"	m	struct:ClickIno::Entry
flags	include/click/llrpc.h	/^    int flags;$/;"	m	struct:click_llrpc_call_handler_st
flags	include/clicknet/dhcp.h	/^	uint16_t flags;$/;"	m	struct:click_dhcp
flags	include/clicknet/ether.h	/^    uint8_t flags; \/* bit 1: sender_is_router$/;"	m	struct:click_nd_adv
flags	include/clicknet/ether.h	/^    uint8_t flags; \/* bit 1: sender_is_router$/;"	m	struct:click_nd_adv2
flags	include/clicknet/wifi.h	/^  uint32_t flags;$/;"	m	struct:click_wifi_extra
flags	lib/clp.c	/^    int flags;$/;"	m	struct:__anon499	file:
flags	lib/element.cc	/^Element::flags() const$/;"	f	class:Element
flags	linuxmodule/clickfs.cc	/^    int flags;$/;"	m	struct:HandlerStringInfo	file:
flags	tools/lib/elementt.hh	/^    int flags;$/;"	m	struct:ElementT
flags	tools/lib/etraits.hh	/^    String flags;$/;"	m	struct:ElementTraits
flags_mask	apps/clicky/src/dstyle.hh	/^    int flags_mask;$/;"	m	struct:clicky::dhandler_style
flags_t	include/click/sync.hh	/^    typedef int flags_t;$/;"	t	class:SpinlockIRQ
flags_t	include/click/sync.hh	/^    typedef unsigned long flags_t;$/;"	t	class:SpinlockIRQ
flash_address	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t *flash_address;$/;"	m	struct:e1000_hw
flash_bank_size	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t flash_bank_size;$/;"	m	struct:e1000_hw
flash_base_addr	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t flash_base_addr;$/;"	m	struct:e1000_hw
flat_name	apps/clicky/src/dwidget.hh	/^    const String &flat_name() const {$/;"	f	class:clicky::delt
flat_name	apps/clicky/src/scopechain.cc	/^ScopeChain::flat_name(const String &ename) const$/;"	f	class:ScopeChain
flatten	tools/click2xml/xml2click.cc	/^static bool flatten = false;$/;"	v	file:
flatten	tools/lib/routert.cc	/^RouterT::flatten(ErrorHandler *errh, bool expand_vars)$/;"	f	class:RouterT
flcdone	drivers/e1000-7.x/src/e1000_hw.h	/^        uint16_t flcdone        :1;$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts
flcerr	drivers/e1000-7.x/src/e1000_hw.h	/^        uint16_t flcerr         :1;$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts
flcgo	drivers/e1000-7.x/src/e1000_hw.h	/^        uint16_t flcgo          :1;$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl
flcinprog	drivers/e1000-7.x/src/e1000_hw.h	/^        uint16_t flcinprog      :1;$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts
flcycle	drivers/e1000-7.x/src/e1000_hw.h	/^        uint16_t flcycle        :2;$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl
fldbcount	drivers/e1000-7.x/src/e1000_hw.h	/^        uint16_t fldbcount      :2;$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl
fldesvalid	drivers/e1000-7.x/src/e1000_hw.h	/^        uint16_t fldesvalid     :1;$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts
flip	elements/standard/classification.cc	/^Insn::flip()$/;"	f	class:Classification::Wordwise::Insn
flip_ports	elements/analysis/aggregateipflows.cc	/^flip_ports(uint32_t ports)$/;"	f	file:
flippable	elements/standard/classification.cc	/^Insn::flippable() const$/;"	f	class:Classification::Wordwise::Insn
flockdn	drivers/e1000-7.x/src/e1000_hw.h	/^        uint16_t flockdn        :1;$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts
flockdn	drivers/e1000-7.x/src/e1000_hw.h	/^        uint16_t flockdn        :6;$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl
flow	elements/ip/iprwmapping.hh	/^    IPRewriterFlow *flow() {$/;"	f	class:IPRewriterEntry
flow	elements/ip/iprwmapping.hh	/^    const IPRewriterFlow *flow() const {$/;"	f	class:IPRewriterEntry
flow	elements/local/FlowNet/common/Flow.hh	/^	struct Flow* flow;$/;"	m	struct:FlowDesc	typeref:struct:FlowDesc::Flow
flow	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	Flow*	flow;$/;"	m	struct:CORE
flow	elements/local/OpenFlow/lib/flow.hh	/^struct flow {$/;"	s
flow	elements/local/OpenFlow/lib/switch-flow.hh	/^    struct flow flow;           \/* Flow data (in network byte order). *\/$/;"	m	struct:sw_flow_key	typeref:struct:sw_flow_key::flow
flow_alloc	elements/local/OpenFlow/lib/switch-flow.cc	/^flow_alloc(size_t actions_len)$/;"	f
flow_code	elements/analysis/aggpktcounter.hh	/^    const char *flow_code() const	{ return "#\/#"; }$/;"	f	class:AggregatePacketCounter
flow_code	elements/ethernet/arpquerier.hh	/^    const char *flow_code() const		{ return "xy\/x"; }$/;"	f	class:ARPQuerier
flow_code	elements/ethernet/ip6ndsolicitor.hh	/^  const char *flow_code() const			{ return "xy\/x"; }$/;"	f	class:IP6NDSolicitor
flow_code	elements/etherswitch/etherswitch.hh	/^  const char *flow_code() const			{ return "#\/[^#]"; }$/;"	f	class:EtherSwitch
flow_code	elements/grid/ackresponder.hh	/^  const char *flow_code()  const { return "x\/xy"; }$/;"	f	class:ACKResponder
flow_code	elements/grid/ackresponder2.hh	/^  const char *flow_code()  const { return "x\/xy"; }$/;"	f	class:ACKResponder2
flow_code	elements/grid/ackretrysender.hh	/^  const char *flow_code()  const { return "xy\/xx"; }$/;"	f	class:ACKRetrySender
flow_code	elements/grid/ackretrysender2.hh	/^  const char *flow_code()  const { return "xy\/xx"; }$/;"	f	class:ACKRetrySender2
flow_code	elements/grid/dsdvroutetable.hh	/^  const char *flow_code() const                 { return "x\/y"; }$/;"	f	class:DSDVRouteTable
flow_code	elements/grid/dsrarptable.hh	/^  const char *flow_code() const		{ return "#\/#"; }$/;"	f	class:DSRArpTable
flow_code	elements/grid/gridroutetable.hh	/^  const char *flow_code() const                 { return "x\/y"; }$/;"	f	class:GridRouteTable
flow_code	elements/grid/gridsrforwarder.hh	/^  const char *flow_code() const { return "x\/x"; }$/;"	f	class:GridSRForwarder
flow_code	elements/grid/linkstat.hh	/^  const char *flow_code() const                 { return "x\/y"; }$/;"	f	class:LinkStat
flow_code	elements/grid/packetlogger2.hh	/^  const char *flow_code() const			{ return "#\/#"; }$/;"	f	class:PacketLogger2
flow_code	elements/simple/simpleidle.hh	/^    const char *flow_code() const	{ return "x\/y"; }$/;"	f	class:SimpleIdle
flow_code	elements/standard/hub.hh	/^    const char *flow_code() const		{ return "#\/[^#]"; }$/;"	f	class:Hub
flow_code	elements/standard/idle.hh	/^  const char *flow_code() const		{ return "x\/y"; }$/;"	f	class:Idle
flow_code	elements/standard/suppressor.hh	/^  const char *flow_code() const			{ return "#\/#"; }$/;"	f	class:Suppressor
flow_code	elements/tcpudp/snooptcp.hh	/^  const char *flow_code() const			{ return "xyz\/xy"; }$/;"	f	class:SnoopTCP
flow_code	elements/test/neighborhoodtest.hh	/^    const char *flow_code() const		{ return "x\/y"; }$/;"	f	class:NeighborhoodTest
flow_code	elements/userlevel/fromrawsocket.hh	/^  const char *flow_code() const		{ return "x\/y"; }$/;"	f	class:FromRawSocket
flow_code	elements/userlevel/fromsocket.hh	/^  const char *flow_code() const		{ return "x\/y"; }$/;"	f	class:FromSocket
flow_code	elements/userlevel/ipflowrawsockets.hh	/^    const char *flow_code() const	{ return "x\/y"; }$/;"	f	class:IPFlowRawSockets
flow_code	elements/userlevel/kerneltun.hh	/^    const char *flow_code() const	{ return "x\/y"; }$/;"	f	class:KernelTun
flow_code	elements/userlevel/rawsocket.hh	/^  const char *flow_code() const		{ return "x\/y"; }$/;"	f	class:RawSocket
flow_code	elements/userlevel/socket.hh	/^  const char *flow_code() const		{ return "x\/y"; }$/;"	f	class:Socket
flow_code	elements/userlevel/torawsocket.hh	/^  const char *flow_code() const		{ return "x\/y"; }$/;"	f	class:ToRawSocket
flow_code	elements/userlevel/tosocket.hh	/^  const char *flow_code() const		{ return "x\/y"; }$/;"	f	class:ToSocket
flow_code	elements/userlevel/umlswitch.hh	/^  const char *flow_code() const		{ return "x\/y"; }$/;"	f	class:UMLSwitch
flow_code	elements/wifi/autoratefallback.hh	/^  const char *flow_code() const			{ return "#\/#"; }$/;"	f	class:AutoRateFallback
flow_code	elements/wifi/madwifirate.hh	/^  const char *flow_code() const			{ return "#\/#"; }$/;"	f	class:MadwifiRate
flow_code	elements/wifi/packetstore.hh	/^  const char *flow_code() const			{ return "#\/#"; }$/;"	f	class:PacketStore
flow_code	elements/wifi/probetxrate.hh	/^  const char *flow_code() const			{ return "#\/#"; }$/;"	f	class:ProbeTXRate
flow_code	include/click/standard/errorelement.hh	/^    const char *flow_code() const		{ return "x\/y"; }$/;"	f	class:ErrorElement
flow_code	lib/element.cc	/^Element::flow_code() const$/;"	f	class:Element
flow_code	tools/lib/elementt.hh	/^ElementT::flow_code() const$/;"	f	class:ElementT
flow_code	tools/lib/elementt.hh	/^ElementT::flow_code(ElementMap *emap) const$/;"	f	class:ElementT
flow_code	tools/lib/etraits.hh	/^    String flow_code;$/;"	m	struct:ElementTraits
flow_code	tools/lib/processingt.hh	/^    const String &flow_code(ElementT *e) const {$/;"	f	class:ProcessingT
flow_code_override	include/click/router.hh	/^Router::flow_code_override(int eindex) const$/;"	f	class:Router
flow_compare	elements/local/OpenFlow/lib/flow.hh	/^flow_compare(const struct flow *a, const struct flow *b)$/;"	f
flow_count	elements/linuxmodule/fasttcpflows.hh	/^    int flow_count;$/;"	m	struct:FastTCPFlows::flow_t
flow_count	elements/linuxmodule/fastudpflows.hh	/^      int flow_count;$/;"	m	struct:FastUDPFlows::flow_t
flow_count	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t flow_count;      \/* Number of flows. *\/$/;"	m	struct:ofp_aggregate_stats_reply
flow_equal	elements/local/OpenFlow/lib/flow.hh	/^flow_equal(const struct flow *a, const struct flow *b)$/;"	f
flow_expiration_age	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^	int	flow_expiration_age;$/;"	m	class:PFMpeg2AdaptFW
flow_expire_interval	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^	int	flow_expire_interval;$/;"	m	class:PFMpeg2AdaptFW
flow_expire_timer	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	Timer flow_expire_timer;$/;"	m	class:PFSchedFW
flow_extract	elements/local/OpenFlow/lib/flow.cc	/^int flow_extract(struct ofpbuf *packet, uint16_t in_port, struct flow *flow)$/;"	f
flow_extract_match	elements/local/OpenFlow/lib/switch-flow.cc	/^flow_extract_match(struct sw_flow_key* to, const struct ofp_match* from)$/;"	f
flow_fields_match	elements/local/OpenFlow/lib/switch-flow.cc	/^flow_fields_match(const struct flow *a, const struct flow *b, uint32_t w,$/;"	f	file:
flow_fill_match	elements/local/OpenFlow/lib/flow.cc	/^void flow_fill_match(struct ofp_match *to, const struct flow *from,$/;"	f
flow_free	elements/local/OpenFlow/lib/switch-flow.cc	/^flow_free(struct sw_flow *flow)$/;"	f
flow_handler	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::flow_handler(uint32_t aggregate, FlowFunc func)$/;"	f	class:AggregatePacketCounter
flow_has_out_port	elements/local/OpenFlow/lib/switch-flow.cc	/^int flow_has_out_port(struct sw_flow *flow, uint16_t out_port)$/;"	f
flow_hash	elements/local/OpenFlow/lib/flow.hh	/^flow_hash(const struct flow *flow, uint32_t basis)$/;"	f
flow_id	elements/ip6/addresstranslator.hh	/^  const IP6FlowID &flow_id() const    {  return _mapto;        }$/;"	f	class:AddressTranslator::Mapping
flow_matches_1wild	elements/local/OpenFlow/lib/switch-flow.cc	/^flow_matches_1wild(const struct sw_flow_key *a, const struct sw_flow_key *b)$/;"	f
flow_matches_2desc	elements/local/OpenFlow/lib/switch-flow.cc	/^flow_matches_2desc(const struct sw_flow_key *t, const struct sw_flow_key *d,$/;"	f
flow_matches_2wild	elements/local/OpenFlow/lib/switch-flow.cc	/^flow_matches_2wild(const struct sw_flow_key *a, const struct sw_flow_key *b)$/;"	f
flow_matches_desc	elements/local/OpenFlow/lib/switch-flow.cc	/^flow_matches_desc(const struct sw_flow_key *t, const struct sw_flow_key *d, $/;"	f
flow_mod_fail	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t flow_mod_fail;$/;"	m	struct:ofpstat::__anon245
flow_print	elements/local/OpenFlow/lib/flow.cc	/^void flow_print(FILE *stream, const struct flow *flow) $/;"	f
flow_replace_acts	elements/local/OpenFlow/lib/switch-flow.cc	/^void flow_replace_acts(struct sw_flow *flow, $/;"	f
flow_setup_actions	elements/local/OpenFlow/lib/switch-flow.cc	/^flow_setup_actions(struct sw_flow *                    flow,$/;"	f
flow_split	apps/clicky/src/dstyle.hh	/^    String flow_split;$/;"	m	struct:clicky::delt_style
flow_split_char	apps/clicky/src/dwidget.cc	/^int delt::flow_split_char(bool isoutput, int port) const$/;"	f	class:clicky::delt
flow_stats_done	elements/local/OpenFlow/datapath.cc	/^static void flow_stats_done(void *state)$/;"	f	file:
flow_stats_dump	elements/local/OpenFlow/datapath.cc	/^static int flow_stats_dump(class Datapath *dp, void *state,$/;"	f	file:
flow_stats_dump_callback	elements/local/OpenFlow/datapath.cc	/^static int flow_stats_dump_callback(struct sw_flow *flow, void *Private)$/;"	f	file:
flow_stats_first	elements/local/OpenFlow/lib/vconn.cc	/^flow_stats_first(struct flow_stats_iterator *iter,$/;"	f
flow_stats_init	elements/local/OpenFlow/datapath.cc	/^static int flow_stats_init(const void *body, int body_len UNUSED, void **state)$/;"	f	file:
flow_stats_iterator	elements/local/OpenFlow/lib/vconn.hh	/^struct flow_stats_iterator {$/;"	s
flow_stats_next	elements/local/OpenFlow/lib/vconn.cc	/^flow_stats_next(struct flow_stats_iterator *iter)$/;"	f
flow_stats_state	elements/local/OpenFlow/datapath.cc	/^struct flow_stats_state {$/;"	s	file:
flow_t	elements/linuxmodule/fasttcpflows.hh	/^  struct flow_t {$/;"	s	class:FastTCPFlows
flow_t	elements/linuxmodule/fastudpflows.hh	/^  struct flow_t {$/;"	s	class:FastUDPFlows
flow_timeout	elements/local/OpenFlow/lib/switch-flow.cc	/^bool flow_timeout(struct sw_flow *flow)$/;"	f
flow_used	elements/local/OpenFlow/lib/switch-flow.cc	/^void flow_used(struct sw_flow *flow, struct ofpbuf *buffer)$/;"	f
flowid	elements/ip/iprwmapping.hh	/^    const IPFlowID &flowid() const {$/;"	f	class:IPRewriterEntry
flows	elements/local/OpenFlow/lib/table-linear.cc	/^    struct list flows;$/;"	m	struct:sw_table_linear	typeref:struct:sw_table_linear::list	file:
flowtable_timer	elements/local/OpenFlow/datapath.cc	/^void Datapath::flowtable_timer() $/;"	f	class:Datapath
flush	elements/ip/directiplookup.cc	/^DirectIPLookup::Table::flush()$/;"	f	class:DirectIPLookup::Table
flush	elements/userlevel/chattersocket.cc	/^ChatterSocket::flush()$/;"	f	class:ChatterSocket
flush	elements/userlevel/chattersocket.cc	/^ChatterSocket::flush(int fd)$/;"	f	class:ChatterSocket
flush_frame	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^	unsigned int flush_frame;$/;"	m	class:FlowMpeg2AdaptEncap
flush_frame_index	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^void FlowMpeg2AdaptDecapStat::flush_frame_index()$/;"	f	class:FlowMpeg2AdaptDecapStat
flush_frame_index	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^void FlowMpeg2AdaptEncapStat::flush_frame_index()$/;"	f	class:FlowMpeg2AdaptEncapStat
flush_handler	elements/analysis/toipsumdump.cc	/^ToIPSummaryDump::flush_handler(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:ToIPSummaryDump
flush_handler	elements/ip/directiplookup.cc	/^DirectIPLookup::flush_handler(const String &, Element *e, void *,$/;"	f	class:DirectIPLookup
flush_handler	elements/ip/rangeiplookup.cc	/^RangeIPLookup::flush_handler(const String &, Element *e, void *,$/;"	f	class:RangeIPLookup
flush_one_buffer	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^int FlowMpeg2AdaptDecap::flush_one_buffer(const Element* e, papmo* papmo)$/;"	f	class:FlowMpeg2AdaptDecap
flush_queue	elements/local/OpenFlow/lib/rconn.cc	/^flush_queue(struct rconn *rc)$/;"	f	file:
flush_scheduled_work	drivers/e1000-7.x/src/kcompat.h	844;"	d
flush_sendbuffer	elements/grid/dsrroutetable.cc	/^DSRRouteTable::flush_sendbuffer()$/;"	f	class:DSRRouteTable
flush_table	elements/ip/rangeiplookup.cc	/^RangeIPLookup::flush_table()$/;"	f	class:RangeIPLookup
flush_working	elements/local/OpenFlow/lib/private-msg.cc	/^flush_working(class Datapath *dp)$/;"	f	file:
flush_write	elements/userlevel/controlsocket.cc	/^ControlSocket::connection::flush_write(ControlSocket *cs, bool read_needs_processing)$/;"	f	class:ControlSocket::connection
fmf_all_tables_full	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t fmf_all_tables_full;$/;"	m	struct:ofpstat::__anon246
fmf_emerg	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t fmf_emerg;$/;"	m	struct:ofpstat::__anon246
fmf_eperm	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t fmf_eperm;$/;"	m	struct:ofpstat::__anon246
fmf_overlap	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t fmf_overlap;$/;"	m	struct:ofpstat::__anon246
fn	elements/grid/amoeba.cc	/^AmoebaTest::fn(double a[])$/;"	f	class:AmoebaTest
fn	elements/grid/pep.cc	/^PEPAmoeba::fn(double a[])$/;"	f	class:PEPAmoeba
fold	elements/ip/ipratemon.cc	/^IPRateMonitor::fold(int thresh)$/;"	f	class:IPRateMonitor
follow_connections	tools/lib/processingt.cc	/^ProcessingT::follow_connections(const Bitvector &source, bool source_isoutput,$/;"	f	class:ProcessingT
follow_connections	tools/lib/processingt.cc	/^ProcessingT::follow_connections(const PortT &source, bool source_isoutput,$/;"	f	class:ProcessingT
follow_flow	tools/lib/processingt.cc	/^ProcessingT::follow_flow(const Bitvector &source, bool source_isoutput,$/;"	f	class:ProcessingT
follow_reachable	tools/lib/processingt.cc	/^ProcessingT::follow_reachable(Bitvector &ports, bool isoutput, bool forward, ErrorHandler *errh, ErrorHandler *debug_errh) const$/;"	f	class:ProcessingT
font	apps/clicky/src/dstyle.hh	/^    String font;$/;"	m	struct:clicky::delt_style
font	apps/clicky/src/dstyle.hh	/^    String font;$/;"	m	struct:clicky::dport_style
force_attachment	lib/router.cc	/^Router::force_attachment(const String &name)$/;"	f	class:Router
force_bit	include/click/bitvector.hh	/^Bitvector::force_bit(int i)$/;"	f	class:Bitvector
force_element_type	lib/lexer.cc	/^Lexer::force_element_type(String name, bool report_error)$/;"	f	class:Lexer
force_element_type	tools/lib/lexert.cc	/^LexerT::force_element_type(const Lexeme &t)$/;"	f	class:LexerT
force_extra_length	elements/analysis/ipsumdumpinfo.hh	/^    bool force_extra_length;$/;"	m	struct:IPSummaryDump::PacketDesc
force_index_in	tools/lib/elementt.cc	/^PortT::force_index_in(Vector<PortT> &v, int start) const$/;"	f	class:PortT
force_media	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	unsigned int force_media : 1;	\/* is autoneg. disabled? *\/$/;"	m	struct:_kc_mii_if_info	file:
force_name_info	lib/router.cc	/^Router::force_name_info()$/;"	f	class:Router
force_traits	tools/lib/eclasst.cc	/^ElementClassT::force_traits(ElementMap *emap) const$/;"	f	class:ElementClassT
force_traits	tools/lib/eclasst.hh	/^ElementClassT::force_traits() const$/;"	f	class:ElementClassT
force_traits	tools/lib/elementmap.cc	/^ElementMap::force_traits(const String &class_name)$/;"	f	class:ElementMap
forced_fold	elements/ip/ipratemon.cc	/^IPRateMonitor::forced_fold()$/;"	f	class:IPRateMonitor
forced_speed_duplex	drivers/e1000-4.x/src/e1000_hw.h	/^    uint8_t forced_speed_duplex;$/;"	m	struct:e1000_hw
forced_speed_duplex	drivers/e1000-5.x/src/e1000_hw.h	/^    uint8_t forced_speed_duplex;$/;"	m	struct:e1000_hw
forced_speed_duplex	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t forced_speed_duplex;$/;"	m	struct:e1000_hw
foregroundproc	elements/userlevel/progressbar.cc	/^foregroundproc(int fd)$/;"	f	file:
formal_name	tools/lib/routert.hh	/^    const String &formal_name(int i) const { return _formals[i]; }$/;"	f	class:RouterT
formal_type	tools/lib/routert.hh	/^    const String &formal_type(int i) const { return _formal_types[i]; }$/;"	f	class:RouterT
format	lib/error.cc	/^ErrorHandler::format(const char *fmt, ...)$/;"	f	class:ErrorHandler
format_id	include/clicknet/llc.h	/^		uint8_t format_id;$/;"	m	struct:click_llc::__anon481::__anon482
format_log_message	elements/local/OpenFlow/lib/vlog.cc	/^format_log_message(enum vlog_module module, enum vlog_level level,$/;"	f	file:
forward	include/click/straccum.hh	/^inline void StringAccum::forward(int delta) {$/;"	f	class:StringAccum
forward_data	elements/grid/dsrroutetable.cc	/^DSRRouteTable::forward_data(Packet *p_in)$/;"	f	class:DSRRouteTable
forward_delay	elements/local/OpenFlow/lib/stp.cc	/^    int forward_delay;              \/* 8.5.3.6: Delay between state changes. *\/$/;"	m	struct:stp	file:
forward_delay	elements/local/OpenFlow/lib/stp.cc	/^    uint16_t forward_delay;        \/* 8.5.1.8: State progression delay. *\/$/;"	m	struct:stp_config_bpdu	file:
forward_delay_timer	elements/local/OpenFlow/lib/stp.cc	/^    struct stp_timer forward_delay_timer; \/* 8.5.6.2: State change timer. *\/$/;"	m	struct:stp_port	typeref:struct:stp_port::stp_timer	file:
forward_flow	tools/lib/processingt.hh	/^    int forward_flow(const PortT &port, Bitvector *x, ErrorHandler *errh = 0) {$/;"	f	class:ProcessingT
forward_flow	tools/lib/processingt.hh	/^    static int forward_flow(const String &code, int input_port, Bitvector *x, int noutputs, ErrorHandler *errh = 0) {$/;"	f	class:ProcessingT
forward_grid_packet	elements/grid/lookuplocalgridroute.cc	/^LookupLocalGridRoute::forward_grid_packet(Packet *xp, IPAddress dest_ip)$/;"	f	class:LookupLocalGridRoute
forward_grid_packet	elements/grid/lookuplocalgridroute2.cc	/^LookupLocalGridRoute2::forward_grid_packet(Packet *xp, IPAddress dest_ip)$/;"	f	class:LookupLocalGridRoute2
forward_mapping	elements/grid/gridproxy.cc	/^GridProxy::forward_mapping(Packet *p_in) {$/;"	f	class:GridProxy
forward_rerr	elements/grid/dsrroutetable.cc	/^DSRRouteTable::forward_rerr(Packet * p_in)$/;"	f	class:DSRRouteTable
forward_rrep	elements/grid/dsrroutetable.cc	/^DSRRouteTable::forward_rrep(Packet * p_in)$/;"	f	class:DSRRouteTable
forward_rreq	elements/grid/dsrroutetable.cc	/^DSRRouteTable::forward_rreq(Packet *p_in)$/;"	f	class:DSRRouteTable
forward_sr	elements/grid/dsrroutetable.cc	/^DSRRouteTable::forward_sr(Packet *p_in, unsigned int offset, int port)$/;"	f	class:DSRRouteTable
found_header_file	tools/click-devirtualize/specializer.hh	/^  String found_header_file;$/;"	m	struct:ElementTypeInfo
foutput	elements/ip/iprewriterbase.hh	/^    int foutput;$/;"	m	struct:IPRewriterInput
fp_trace	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	FILE* fp_trace;$/;"	m	struct:FlowMpeg2AdaptDecapStat
fraction	include/click/tokenbucket.hh	/^    token_type fraction() const {$/;"	f	class:TokenBucketX
fraction	include/click/tokenbucket.hh	/^    token_type fraction() const {$/;"	f	class:TokenCounterX
fraction_accum	lib/args.cc	/^    fraction_accum()$/;"	f	struct:__anon505::fraction_accum
fraction_accum	lib/args.cc	/^struct fraction_accum {$/;"	s	namespace:__anon505	file:
fraction_accum	lib/args.cc	/^struct fraction_accum<uint32_t, uint32_t> {$/;"	s	namespace:__anon505	file:
fraction_bits	include/click/args.hh	/^    int fraction_bits;$/;"	m	struct:FixedPointArg
fraction_digits	include/click/args.hh	/^    int fraction_digits;$/;"	m	struct:DecimalFixedPointArg
fraction_digits	include/click/args.hh	/^    int fraction_digits;$/;"	m	struct:SecondsArg
frag	elements/wifi/wifidupefilter.hh	/^    uint16_t frag;$/;"	m	class:WifiDupeFilter::DstInfo
fragment	elements/ip/ipfragmenter.cc	/^IPFragmenter::fragment(Packet *p_in)$/;"	f	class:IPFragmenter
fragment	elements/ip6/ip6fragmenter.cc	/^IP6Fragmenter::fragment(Packet *)$/;"	f	class:IP6Fragmenter
fragments	elements/ip/ipfragmenter.hh	/^  uint32_t fragments() const			{ return _fragments; }$/;"	f	class:IPFragmenter
fragments	elements/ip6/ip6fragmenter.hh	/^  int fragments() const				{ return _fragments; }$/;"	f	class:IP6Fragmenter
frameBufferHead	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	FrameReceivingBuffer* frameBufferHead;$/;"	m	class:FlowMpeg2AdaptDecap
frameBufferTail	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	FrameReceivingBuffer* frameBufferTail;$/;"	m	class:FlowMpeg2AdaptDecap
frame_drop_packet_loss	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int	frame_drop_packet_loss;$/;"	m	struct:FlowMpeg2AdaptDecapStat
frame_drop_unordered	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int	frame_drop_unordered;$/;"	m	struct:FlowMpeg2AdaptDecapStat
frame_len	elements/wifi/athdesc.h	/^	u_int32_t	frame_len:12;$/;"	m	struct:ar5212_desc
frame_type	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^	int frame_type;$/;"	m	struct:tspacket
frame_type	elements/wifi/athdesc.h	/^	u_int32_t	frame_type:4;$/;"	m	struct:ar5212_desc
frame_xmit_ok	elements/wifi/athdesc.h	/^	u_int32_t	frame_xmit_ok:1;$/;"	m	struct:ar5212_desc
frameindex	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^	unsigned int frameindex;$/;"	m	class:FlowMpeg2AdaptEncap
frameindex	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^	uint32_t frameindex;$/;"	m	struct:bpadapt_header
frameindex	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.hh	/^	uint32_t frameindex;$/;"	m	class:FrameReceivingBuffer
frameindex	elements/local/FlowNet/papmo/PaPMo.hh	/^	uint32_t frameindex;$/;"	m	struct:composed_trace
framenum	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^	int framenum;$/;"	m	class:FlowMpeg2AdaptEncap
frametype	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^	uint32_t frametype;$/;"	m	struct:bpadapt_header
frametype	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.hh	/^	uint32_t frametype;$/;"	m	class:FrameReceivingBuffer
frametype	elements/local/FlowNet/papmo/PaPMo.hh	/^	uint8_t frametype;$/;"	m	struct:composed_trace
free	elements/local/FlowNet/common/Flow.cc	/^void Flow::free(struct Flow* f)$/;"	f	class:Flow
free	include/click/bighashmap_arena.hh	/^HashMap_Arena::free(void *v)$/;"	f	class:HashMap_Arena
free_build_string	lib/clp.c	/^free_build_string(Clp_BuildString *bs)$/;"	f	file:
free_connection	tools/lib/routert.cc	/^RouterT::free_connection(ConnectionX *c)$/;"	f	class:RouterT
free_dead_elements	tools/lib/routert.cc	/^RouterT::free_dead_elements()$/;"	f	class:RouterT
free_element	tools/lib/routert.cc	/^RouterT::free_element(ElementT *e)$/;"	f	class:RouterT
free_handler_string	linuxmodule/clickfs.cc	/^free_handler_string(int hs)$/;"	f	file:
free_list	apps/clicky/src/ddecor.hh	/^    static void free_list(ddecor *&dd) {$/;"	f	class:clicky::ddecor
free_list	ns/CUT_BinHeap.h	/^  Node* free_list; \/\/ free list of Nodes;$/;"	m	class:CUT_BinHeap
free_netdev	drivers/e1000-5.x/src/kcompat.h	56;"	d
free_netdev	drivers/e1000-7.x/src/kcompat.h	145;"	d
free_next	elements/ip6/addresstranslator.hh	/^  Mapping *free_next() const		{ return _free_next; }$/;"	f	class:AddressTranslator::Mapping
free_node	elements/analysis/aggcounter.hh	/^AggregateCounter::free_node(Node *n)$/;"	f	class:AggregateCounter
free_node	elements/analysis/anonipaddr.hh	/^AnonymizeIPAddr::free_node(Node *n)$/;"	f	class:AnonymizeIPAddr
free_pid	elements/local/OpenFlow/lib/netlink.cc	/^free_pid(uint32_t pid)$/;"	f	file:
free_radix	elements/ip/radixiplookup.cc	/^RadixIPLookup::Radix::free_radix(Radix* r)$/;"	f	class:RadixIPLookup::Radix
free_radix	elements/ipsec/radixipseclookup.cc	/^RadixIPsecLookup::Radix::free_radix(Radix* r)$/;"	f	class:RadixIPsecLookup::Radix
free_vector	elements/grid/amoeba.cc	/^Amoeba::free_vector(double *v, int nl, int)$/;"	f	class:Amoeba
freebsd_includedir	bsdmodule/Makefile	/^freebsd_includedir = \/usr\/include$/;"	m
freebsd_srcdir	bsdmodule/Makefile	/^freebsd_srcdir = NONE$/;"	m
frmlen	include/clicknet/wifi.h	/^  p80211item_uint32_t frmlen;$/;"	m	struct:__anon498
frmr_cause	include/clicknet/llc.h	/^			uint8_t frmr_cause;$/;"	m	struct:click_llc::__anon481::__anon485::frmrinfo
frmr_control	include/clicknet/llc.h	/^			uint8_t frmr_control;$/;"	m	struct:click_llc::__anon481::__anon485::frmrinfo
frmr_control_ext	include/clicknet/llc.h	/^			uint8_t frmr_control_ext;$/;"	m	struct:click_llc::__anon481::__anon485::frmrinfo
frmrinfo	include/clicknet/llc.h	/^		struct frmrinfo {$/;"	s	struct:click_llc::__anon481::__anon485
frmrinfo	include/clicknet/llc.h	/^		} frmrinfo;$/;"	m	struct:click_llc::__anon481::__anon485	typeref:struct:click_llc::__anon481::__anon485::frmrinfo
frob_nested_routerlink	tools/click-combine/click-combine.cc	/^frob_nested_routerlink(ElementT *e)$/;"	f	file:
frob_nested_routerlinks	tools/click-combine/click-uncombine.cc	/^frob_nested_routerlinks(RouterT *r, const String &compname)$/;"	f	file:
from	apps/clicky/src/dwidget.hh	/^	delt *from;$/;"	m	struct:clicky::delt::delt_conn
from	tools/click2xml/xml2click.hh	/^    String from;$/;"	m	struct:CxConnection
from	tools/lib/elementt.hh	/^    const PortT &from() const		{ return end(end_from); }$/;"	f	class:ConnectionT
from_device_count	elements/bsdmodule/fromdevice.cc	/^static int from_device_count;$/;"	v	file:
from_device_map	elements/bsdmodule/fromdevice.cc	/^static AnyDeviceMap from_device_map;$/;"	v	file:
from_device_map	elements/linuxmodule/fromdevice.cc	/^static AnyDeviceMap from_device_map;$/;"	v	file:
from_eindex	tools/lib/elementt.hh	/^    int from_eindex() const		{ return eindex(end_from); }$/;"	f	class:ConnectionT
from_element	tools/lib/elementt.hh	/^    ElementT *from_element() const	{ return element(end_from); }$/;"	f	class:ConnectionT
from_elt	apps/clicky/src/dwidget.hh	/^    delt *from_elt() const {$/;"	f	class:clicky::dconn
from_ext_plumbing	conf/click-mkclgw.pl	/^sub from_ext_plumbing {$/;"	s
from_header_file	tools/click-devirtualize/cxxclass.hh	/^  bool from_header_file() const		{ return _from_header_file; }$/;"	f	class:CxxFunction
from_int_ip_classify	conf/click-mkclgw.pl	/^sub from_int_ip_classify {$/;"	s
from_int_plumbing	conf/click-mkclgw.pl	/^sub from_int_plumbing {$/;"	s
from_int_plumbing	conf/click-mkclgw.pl	/^sub from_int_plumbing {}$/;"	s
from_int_plumbing_generic	conf/click-mkclgw.pl	/^sub from_int_plumbing_generic {$/;"	s
from_int_src_classify	conf/click-mkclgw.pl	/^sub from_int_src_classify {$/;"	s
from_int_to_gw_plumbing	conf/click-mkclgw.pl	/^sub from_int_to_gw_plumbing {$/;"	s
from_int_to_gw_tcp_classify	conf/click-mkclgw.pl	/^sub from_int_to_gw_tcp_classify {$/;"	s
from_port	apps/clicky/src/dwidget.hh	/^	int from_port;$/;"	m	struct:clicky::delt::delt_conn
from_port	apps/clicky/src/dwidget.hh	/^    int from_port() const {$/;"	f	class:clicky::dconn
from_port	tools/lib/elementt.hh	/^    int from_port() const		{ return port(end_from); }$/;"	f	class:ConnectionT
from_wire	elements/etherswitch/bridgemessage.cc	/^BridgeMessage::from_wire(const BridgeMessage::wire* msg) {$/;"	f	class:BridgeMessage
fromdev_static_cleanup	elements/bsdmodule/fromdevice.cc	/^fromdev_static_cleanup()$/;"	f	file:
fromdev_static_initialize	elements/bsdmodule/fromdevice.cc	/^fromdev_static_initialize()$/;"	f	file:
fromhost_inet_setup	elements/linuxmodule/fromhost.cc	/^static void fromhost_inet_setup(struct net_device *dev)$/;"	f	file:
fromhost_map	elements/bsdmodule/fromhost.cc	/^static AnyDeviceMap fromhost_map;$/;"	v	file:
fromhost_netdev_ops	elements/linuxmodule/fromhost.cc	/^static struct net_device_ops fromhost_netdev_ops;$/;"	v	typeref:struct:net_device_ops	file:
fromlinux_map	elements/linuxmodule/fromhost.cc	/^static AnyDeviceMap fromlinux_map;$/;"	v	file:
fromport	tools/click2xml/xml2click.hh	/^    int fromport;$/;"	m	struct:CxConnection
front	elements/grid/qvec.hh	/^  T &front() { return at(0); }$/;"	f	class:QVec
front	include/click/dequeue.hh	/^  T &front()                            { return at(0); }$/;"	f	class:DEQueue
front	include/click/dequeue.hh	/^  const T &front() const                { return at(0); }$/;"	f	class:DEQueue
front	include/click/list.hh	/^    const_pointer front() const {$/;"	f	class:List
front	include/click/list.hh	/^    pointer front() {$/;"	f	class:List
front	include/click/straccum.hh	/^    char &front() {$/;"	f	class:StringAccum
front	include/click/straccum.hh	/^    char front() const {$/;"	f	class:StringAccum
front	include/click/string.hh	/^    inline char front() const {$/;"	f	class:String
front	include/click/vector.hh	/^    T& front()				{ return operator[](0); }$/;"	f	class:Vector
front	include/click/vector.hh	/^    T* front() const		{ return (T*)(Base::front()); }$/;"	f	class:Vector
front	include/click/vector.hh	/^    T*& front()			{ return (T*&)(Base::front()); }$/;"	f	class:Vector
front	include/click/vector.hh	/^    const T& front() const		{ return operator[](0); }$/;"	f	class:Vector
front	include/click/vector.hh	/^    void* front() const			{ return operator[](0); }$/;"	f	class:Vector
front	include/click/vector.hh	/^    void*& front()			{ return operator[](0); }$/;"	f	class:Vector
fs	elements/local/OpenFlow/datapath.hh	/^	struct func_stat fs;$/;"	m	class:Datapath	typeref:struct:Datapath::func_stat
fs	linuxmodule/proclikefs.c	/^    struct file_system_type fs;$/;"	m	struct:proclikefs_file_system	typeref:struct:proclikefs_file_system::file_system_type	file:
fs_list	linuxmodule/proclikefs.c	/^    struct list_head fs_list;$/;"	m	struct:proclikefs_file_system	typeref:struct:proclikefs_file_system::list_head	file:
fslist_lock	linuxmodule/proclikefs.c	/^static spinlock_t fslist_lock;$/;"	v	file:
fst	apps/ClickController/Pair.java	/^    public Object fst;$/;"	f	class:Pair
full	include/click/tokenbucket.hh	/^    bool full() const {$/;"	f	class:TokenBucketX
full	include/click/tokenbucket.hh	/^    bool full() const {$/;"	f	class:TokenCounterX
full_duplex	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	unsigned int full_duplex : 1;	\/* is full duplex? *\/$/;"	m	struct:_kc_mii_if_info	file:
fullness_pm	apps/clicky/src/dstyle.cc	/^static dcss_propmatch fullness_pm[] = {$/;"	m	namespace:clicky	file:
fullness_pmp	apps/clicky/src/dstyle.cc	/^static dcss_propmatch *fullness_pmp[num_fullness_pm];$/;"	m	namespace:clicky	file:
fullness_style	apps/clicky/src/dstyle.cc	/^ref_ptr<dfullness_style> dcss_set::fullness_style(PermString decor, crouter *cr, const delt *e)$/;"	f	class:clicky::dcss_set
func	drivers/e1000-4.x/src/e1000_proc.c	/^	char *(*func)(void *, size_t, char *);  \/* format data func *\/$/;"	m	struct:proc_list	file:
func	elements/local/OpenFlow/lib/fatal-signal.cc	/^    void (*func)(void *aux);$/;"	m	struct:hook	file:
func	lib/clp.c	/^    Clp_ValParseFunc func;$/;"	m	struct:__anon499	file:
func_stat	elements/local/OpenFlow/datapath.hh	/^struct func_stat {$/;"	s
function	elements/local/OpenFlow/lib/poll-loop.cc	/^    poll_fd_func *function;     \/* Callback function, if any, or null. *\/$/;"	m	struct:poll_waiter	file:
function	tools/click-devirtualize/cxxclass.hh	/^  CxxFunction &function(int i)		{ return _functions[i]; }$/;"	f	class:CxxClass
fw_version	drivers/e1000-5.x/src/kcompat.h	/^	char	 fw_version[32];$/;"	m	struct:k_ethtool_drvinfo
fw_version	drivers/e1000-7.x/src/kcompat.h	/^	char	 fw_version[32];$/;"	m	struct:k_ethtool_drvinfo
fwd_and_rev_rate	elements/ip/ipratemon.hh	/^    MyEWMA fwd_and_rev_rate;$/;"	m	struct:IPRateMonitor::Counter
fwd_control_input	elements/local/OpenFlow/datapath.cc	/^int Datapath::fwd_control_input(Packet* p)$/;"	f	class:Datapath
fwd_port_input	elements/local/OpenFlow/datapath.cc	/^void Datapath::fwd_port_input(struct ofpbuf *buffer, struct click_port *p)$/;"	f	class:Datapath
fwd_weight_read_handler	elements/standard/compblock.cc	/^CompareBlock::fwd_weight_read_handler(Element *e, void *)$/;"	f	class:CompareBlock
fwd_weight_write_handler	elements/standard/compblock.cc	/^CompareBlock::fwd_weight_write_handler(const String &conf, Element *e,$/;"	f	class:CompareBlock
g_click_to_utf8	apps/clicky/src/crouter.cc	/^String g_click_to_utf8(const String &str)$/;"	f	namespace:clicky
g_ofpt_name	elements/local/OpenFlow/datapath.cc	/^char g_ofpt_name[100][100];$/;"	v
gc_hook	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::gc_hook(Timer *t, void *thunk)$/;"	f	class:ToIPFlowDumps
gc_hook	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::gc_hook(Timer *t, void *thunk)$/;"	f	class:IPFlowRawSockets
gc_timer_hook	elements/ip/iprewriterbase.cc	/^IPRewriterBase::gc_timer_hook(Timer *t, void *user_data)$/;"	f	class:IPRewriterBase
gcd	tools/click-align/alignment.cc	/^gcd(int a, int b)$/;"	f	file:
geh_offset_search	apps/clicky/src/gathererror.cc	/^bool geh_offset_search(const GatherErrorHandler::Message &m, int o)$/;"	f	namespace:__anon28
gen_crc_table	lib/crc32.c	/^gen_crc_table(void)$/;"	f	file:
gen_cxxclass_names	tools/click-fastclassifier/click-fastclassifier.cc	/^static Vector<String> gen_cxxclass_names;$/;"	v	file:
gen_datapath_id	elements/local/OpenFlow/datapath.cc	/^static uint64_t gen_datapath_id(void)$/;"	f	file:
gen_eclass_names	tools/click-fastclassifier/click-fastclassifier.cc	/^static Vector<String> gen_eclass_names;$/;"	v	file:
generalizable_or_pair	elements/standard/classification.cc	/^Insn::generalizable_or_pair(const Insn &x) const$/;"	f	class:Classification::Wordwise::Insn
generate_packet	elements/etherswitch/spantree.cc	/^EtherSpanTree::generate_packet(int output)$/;"	f	class:EtherSpanTree
generate_router	tools/click2xml/click2xml.cc	/^generate_router(RouterT *r, FILE *f, String indent, ErrorHandler *errh)$/;"	f	file:
generate_type	tools/click2xml/click2xml.cc	/^generate_type(ElementClassT *c, FILE *f, String indent, ErrorHandler *errh)$/;"	f	file:
generation	apps/clicky/src/dwidget.hh	/^    unsigned generation;$/;"	m	struct:clicky::dcontext
generation	include/click/ino.hh	/^    uint32_t generation() const		{ return _generation; }$/;"	f	class:ClickIno
generic_decor	apps/clicky/src/dstyle.hh	/^    bool generic_decor() const {$/;"	f	class:clicky::dcss_selector
generic_elt	apps/clicky/src/dstyle.hh	/^    bool generic_elt() const {$/;"	f	class:clicky::dcss_selector
generic_handler	apps/clicky/src/dstyle.hh	/^    bool generic_handler() const {$/;"	f	class:clicky::dcss_selector
generic_mii_ioctl	drivers/e1000-7.x/src/kcompat_ethtool.c	889;"	d	file:
generic_mii_ioctl	drivers/e1000-7.x/src/kcompat_ethtool.c	890;"	d	file:
generic_port	apps/clicky/src/dstyle.hh	/^    bool generic_port() const {$/;"	f	class:clicky::dcss_selector
genlmsghdr	elements/local/OpenFlow/lib/netlink-protocol.hh	/^struct genlmsghdr {$/;"	s
get	apps/clicky/src/ref.hh	/^    T *get() const {$/;"	f	class:ref_ptr
get	include/click/hashcontainer.hh	/^    T *get() const {$/;"	f	class:HashContainer_const_iterator
get	include/click/hashcontainer.hh	/^inline T *HashContainer<T, A>::get(const key_type &key) const$/;"	f	class:HashContainer
get	include/click/hashtable.hh	/^    Pair<K, V> *get() const {$/;"	f	class:HashTable_iterator
get	include/click/hashtable.hh	/^    T *get() const {$/;"	f	class:HashTable_iterator
get	include/click/hashtable.hh	/^    const Pair<K, V> *get() const {$/;"	f	class:HashTable_const_iterator
get	include/click/hashtable.hh	/^    const T *get() const {$/;"	f	class:HashTable_const_iterator
get	include/click/hashtable.hh	/^    const mapped_type &get(const key_type &key) const {$/;"	f	class:HashTable
get	include/click/list.hh	/^	T *get() const {$/;"	f	class:List::iterator
get	include/click/list.hh	/^	const T *get() const {$/;"	f	class:List::const_iterator
get	tools/lib/routert.hh	/^    ElementT *get() const		{ return const_cast<ElementT *>(_e); }$/;"	f	class:RouterT::iterator
get	tools/lib/routert.hh	/^    ElementT *get() const		{ return const_cast<ElementT *>(_e); }$/;"	f	class:RouterT::type_iterator
get	tools/lib/routert.hh	/^    const ConnectionT *get() const		{ return _conn; }$/;"	f	class:RouterT::conn_iterator
get	tools/lib/routert.hh	/^    const ElementT *get() const		{ return _e; }$/;"	f	class:RouterT::const_iterator
get	tools/lib/routert.hh	/^    const ElementT *get() const		{ return _e; }$/;"	f	class:RouterT::const_type_iterator
get16	lib/string.cc	685;"	d	file:
get16	lib/string.cc	696;"	d	file:
get16	lib/string.cc	700;"	d	file:
get16	lib/string.cc	717;"	d	file:
getAt	elements/local/FlowNet/libtable/TableLinear.hh	/^int VcTableLinear<T>::getAt(int index, T** f)$/;"	f	class:VcTableLinear
getAt	elements/local/FlowNet/shaper/PFShapeFW.cc	/^FlowBWShaperable* PFShapeFW::getAt(int i)$/;"	f	class:PFShapeFW
getBWShapeInfo	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^inline BWShapeInfo* FlowBWShaperable::getBWShapeInfo()$/;"	f	class:FlowBWShaperable
getBWShapeStatus	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^inline uint32_t FlowBWShaperable::getBWShapeStatus()$/;"	f	class:FlowBWShaperable
getCDAlgorithm	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^inline VcCongestionDetection* PFSchedFW::getCDAlgorithm(const char *cdName)$/;"	f	class:PFSchedFW
getCDInfo	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^inline CDInfo* FlowSchedulable::getCDInfo(int32_t i)$/;"	f	class:FlowSchedulable
getConfigElementNames	apps/ClickController/ControlSocket.java	/^    public Vector getConfigElementNames() $/;"	m	class:ControlSocket
getConfigRequirements	apps/ClickController/ControlSocket.java	/^    public Vector getConfigRequirements()$/;"	m	class:ControlSocket
getDataLength	apps/ClickController/ControlSocket.java	/^    private int getDataLength(String s) {$/;"	m	class:ControlSocket	file:
getDescription	apps/ClickController/ControlSocket.java	/^	public String getDescription() {$/;"	m	class:ControlSocket.HandlerInfo
getElementHandlers	apps/ClickController/ControlSocket.java	/^    public Vector getElementHandlers(String elementName)$/;"	m	class:ControlSocket
getFlowByFlowID	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^inline Flow* PFSchedFW::getFlowByFlowID( const FlowID* fid )$/;"	f	class:PFSchedFW
getFlowID	elements/local/FlowNet/common/Flow.hh	/^	struct FlowID*	getFlowID() { return &fid; }$/;"	f	class:Flow
getFrame	apps/ClickController/ClickController.java	/^    public JFrame getFrame() {$/;"	m	class:ClickController
getHandlerId	apps/ClickController/ClickException.java	/^	public String getHandlerId() {$/;"	m	class:ClickException.HandlerException
getLowerLayerFlow	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^inline Flow* FlowBWShaperable::getLowerLayerFlow()$/;"	f	class:FlowBWShaperable
getPreferredSize	apps/ClickController/ClickController.java	/^    public Dimension getPreferredSize() {$/;"	m	class:ClickController
getResponseCode	apps/ClickController/ControlSocket.java	/^    private int getResponseCode(String s) {$/;"	m	class:ControlSocket	file:
getRouterClasses	apps/ClickController/ControlSocket.java	/^    public Vector getRouterClasses()$/;"	m	class:ControlSocket
getRouterConfig	apps/ClickController/ControlSocket.java	/^    public String getRouterConfig() $/;"	m	class:ControlSocket
getRouterFlatConfig	apps/ClickController/ControlSocket.java	/^    public String getRouterFlatConfig()$/;"	m	class:ControlSocket
getRouterPackages	apps/ClickController/ControlSocket.java	/^    public Vector getRouterPackages()$/;"	m	class:ControlSocket
getRouterVersion	apps/ClickController/ControlSocket.java	/^    public String getRouterVersion()$/;"	m	class:ControlSocket
getSchedInfo	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^inline SchedInfo* FlowSchedulable::getSchedInfo()$/;"	f	class:FlowSchedulable
getScheduleAlgorithm	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^inline VcSchedule* PFSchedFW::getScheduleAlgorithm()$/;"	f	class:PFSchedFW
getScheduleStatus	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^inline uint32_t FlowSchedulable::getScheduleStatus()$/;"	f	class:FlowSchedulable
getShaperAlgorithm	elements/local/FlowNet/shaper/PFShapeFW.hh	/^inline VcBWShape* PFShapeFW::getShaperAlgorithm()$/;"	f	class:PFShapeFW
getValue	elements/ipsec/sadatatuple.hh	/^	uint32_t getValue() const$/;"	f	class:SPI
get_activity	apps/clicky/src/ddecor.cc	/^double dactivity_decor::get_activity(double now)$/;"	f	class:clicky::dactivity_decor
get_aligned	lib/fromfile.cc	/^FromFile::get_aligned(size_t size, void *buffer, ErrorHandler *errh)$/;"	f	class:FromFile
get_all_entries	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::get_all_entries(Vector<RouteEntry> &vec)$/;"	f	class:DSDVRouteTable
get_all_entries	elements/grid/gridroutetable.cc	/^GridRouteTable::get_all_entries(Vector<RouteEntry> &vec)$/;"	f	class:GridRouteTable
get_arena	lib/bighashmap_arena.cc	/^HashMap_ArenaFactory::get_arena(uint32_t element_size, HashMap_ArenaFactory *factory)$/;"	f	class:HashMap_ArenaFactory
get_arena_func	lib/bighashmap_arena.cc	/^HashMap_ArenaFactory::get_arena_func(uint32_t element_size)$/;"	f	class:HashMap_ArenaFactory
get_arg	conf/make-dsdv-config.pl	/^sub get_arg() {$/;"	s
get_arg	conf/make-dsr-config.pl	/^sub get_arg() {$/;"	s
get_bcast_stat	elements/grid/linktracker.cc	/^LinkTracker::get_bcast_stat(IPAddress dst, double &delivery_rate, Timestamp &last_update)$/;"	f	class:LinkTracker
get_bpadapt_header_readonly	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^const struct bpadapt_header* FlowMpeg2AdaptEncap::get_bpadapt_header_readonly(const Packet* p)$/;"	f	class:FlowMpeg2AdaptEncap
get_by_ether_address	elements/linuxmodule/anydevice.cc	/^AnyDevice::get_by_ether_address(const String &name, Element *context)$/;"	f	class:AnyDevice
get_by_name	elements/linuxmodule/anydevice.hh	/^    static inline net_device *get_by_name(const char *name) {$/;"	f	class:AnyDevice
get_chain	elements/local/OpenFlow/datapath.hh	/^	struct sw_chain* get_chain() { return _chain; };$/;"	f	class:Datapath
get_coalesce	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*get_coalesce)(struct net_device *, struct ethtool_coalesce *);$/;"	m	struct:_kc_ethtool_ops	file:
get_coalesce	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*get_coalesce)(struct net_device *, struct ethtool_coalesce *);$/;"	m	struct:_kc_ethtool_ops	file:
get_config_el_names	apps/csclient/csclient.cc	/^ControlSocketClient::get_config_el_names(vector<string> &els)$/;"	f	class:ControlSocketClient
get_config_reqs	apps/csclient/csclient.hh	/^  err_t get_config_reqs(vector<string> &reqs)         { return get_string_vec("", "requirements", reqs); }$/;"	f	class:ControlSocketClient
get_current_location	elements/grid/gridlocationinfo.cc	/^GridLocationInfo::get_current_location(unsigned int *seq_no)$/;"	f	class:GridLocationInfo
get_current_location	elements/grid/gridlocationinfo2.cc	/^GridLocationInfo2::get_current_location(unsigned int *seq_no)$/;"	f	class:GridLocationInfo2
get_current_location	elements/grid/pep.cc	/^PEP::get_current_location()$/;"	f	class:PEP
get_current_location	elements/grid/regionpep.cc	/^EstimateRouterRegion::get_current_location()$/;"	f	class:EstimateRouterRegion
get_data	tools/click-fastclassifier/fc_ipclassifier.cc	/^get_data(StringAccum &data_sa, int &used, int offset)$/;"	f	file:
get_data_len	apps/csclient/csclient.cc	/^ControlSocketClient::get_data_len(string line)$/;"	f	class:ControlSocketClient
get_dest_loc	elements/grid/lookupgeogridroute.cc	/^LookupGeographicGridRoute::get_dest_loc(const Packet *p) const$/;"	f	class:LookupGeographicGridRoute
get_dp_desc	elements/local/OpenFlow/datapath.hh	/^	char* get_dp_desc() { return _dp_desc; };$/;"	f	class:Datapath
get_drvinfo	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	void	(*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *);$/;"	m	struct:_kc_ethtool_ops	file:
get_drvinfo	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	void	(*get_drvinfo)(struct net_device *, struct ethtool_drvinfo *);$/;"	m	struct:_kc_ethtool_ops	file:
get_eeprom	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *);$/;"	m	struct:_kc_ethtool_ops	file:
get_eeprom	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*get_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *);$/;"	m	struct:_kc_ethtool_ops	file:
get_eeprom_len	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*get_eeprom_len)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_eeprom_len	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*get_eeprom_len)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_el_handlers	apps/csclient/csclient.cc	/^ControlSocketClient::get_el_handlers(string el, vector<handler_info_t> &handlers)$/;"	f	class:ControlSocketClient
get_element	lib/lexer.cc	/^Lexer::get_element(String name, int etype, const String &conf,$/;"	f	class:Lexer
get_element	tools/lib/routert.cc	/^RouterT::get_element(const String &name, ElementClassT *type,$/;"	f	class:RouterT
get_entries	elements/grid/printgrid.cc	/^PrintGrid::get_entries(const grid_hello *gh) const$/;"	f	class:PrintGrid
get_entry	elements/icmp/icmppingrewriter.cc	/^ICMPPingRewriter::get_entry(int ip_p, const IPFlowID &xflowid, int input)$/;"	f	class:ICMPPingRewriter
get_entry	elements/ip/ipaddrpairrewriter.cc	/^IPAddrPairRewriter::get_entry(int, const IPFlowID &xflowid, int input)$/;"	f	class:IPAddrPairRewriter
get_entry	elements/ip/ipaddrrewriter.cc	/^IPAddrRewriter::get_entry(int, const IPFlowID &xflowid, int input)$/;"	f	class:IPAddrRewriter
get_entry	elements/ip/iprewriterbase.cc	/^IPRewriterBase::get_entry(int ip_p, const IPFlowID &flowid, int input)$/;"	f	class:IPRewriterBase
get_entry	elements/tcpudp/iprewriter.cc	/^IPRewriter::get_entry(int ip_p, const IPFlowID &flowid, int input)$/;"	f	class:IPRewriter
get_entry_check	elements/ip/iprewriterbase.hh	/^	get_entry_check = -1, get_entry_reply = -2$/;"	e	enum:IPRewriterBase::__anon329
get_entry_reply	elements/ip/iprewriterbase.hh	/^	get_entry_check = -1, get_entry_reply = -2$/;"	e	enum:IPRewriterBase::__anon329
get_ethtool_stats	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	void	(*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *);$/;"	m	struct:_kc_ethtool_ops	file:
get_ethtool_stats	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	void	(*get_ethtool_stats)(struct net_device *, struct ethtool_stats *, u64 *);$/;"	m	struct:_kc_ethtool_ops	file:
get_expected_playout_time	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^uint64_t FlowMpeg2AdaptDecap::get_expected_playout_time( int frameindex )$/;"	f	class:FlowMpeg2AdaptDecap
get_ext_ips	conf/click-mkclgw.pl	/^sub get_ext_ips {$/;"	s
get_ext_ips	conf/click-mkclgw.pl	/^sub get_ext_ips {}$/;"	s
get_first_packet_receive_time	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.hh	/^	struct timeval* get_first_packet_receive_time() { return &tv_first_packet_received; }$/;"	f	class:FrameReceivingBuffer
get_forward_rate	elements/grid/linkstat.cc	/^LinkStat::get_forward_rate(const EtherAddress &eth, unsigned int *r,$/;"	f	class:LinkStat
get_frameindex	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.hh	/^	uint32_t get_frameindex() { return frameindex; }$/;"	f	class:FrameReceivingBuffer
get_frametype	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.hh	/^	uint32_t get_frametype() { return frametype; }$/;"	f	class:FrameReceivingBuffer
get_host_metric_from_me	elements/wifi/linktable.cc	/^LinkTable::get_host_metric_from_me(IPAddress s)$/;"	f	class:LinkTable
get_host_metric_to_me	elements/wifi/linktable.cc	/^LinkTable::get_host_metric_to_me(IPAddress s)$/;"	f	class:LinkTable
get_hosts	elements/wifi/linktable.cc	/^LinkTable::get_hosts()$/;"	f	class:LinkTable
get_id	elements/local/OpenFlow/datapath.hh	/^	uint64_t get_id() { return _id; };$/;"	f	class:Datapath
get_inq_drops	elements/bsdmodule/fromdevice.cc	/^FromDevice::get_inq_drops()$/;"	f	class:FromDevice
get_int_ips	conf/click-mkclgw.pl	/^sub get_int_ips {$/;"	s
get_int_ips	conf/click-mkclgw.pl	/^sub get_int_ips {}$/;"	s
get_intern_src	conf/click-mkclgw.pl	/^sub get_intern_src { return undef; }$/;"	s
get_intern_src	conf/click-mkclgw.pl	/^sub get_intern_src {$/;"	s
get_link	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	u32	(*get_link)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_link	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	u32	(*get_link)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_link_age	elements/wifi/linktable.cc	/^LinkTable::get_link_age(IPAddress from, IPAddress to)$/;"	f	class:LinkTable
get_link_metric	elements/grid/bottleneckmetric.cc	/^BottleneckMetric::get_link_metric(const EtherAddress &e, bool data_sender) const$/;"	f	class:BottleneckMetric
get_link_metric	elements/grid/e2elossmetric.cc	/^E2ELossMetric::get_link_metric(const EtherAddress &e, bool data_sender) const$/;"	f	class:E2ELossMetric
get_link_metric	elements/grid/etx2metric.cc	/^ETX2Metric::get_link_metric(const EtherAddress &e, bool data_sender) const$/;"	f	class:ETX2Metric
get_link_metric	elements/grid/etxmetric.cc	/^ETXMetric::get_link_metric(const EtherAddress &e, bool) const$/;"	f	class:ETXMetric
get_link_metric	elements/grid/hopcountmetric.cc	/^HopcountMetric::get_link_metric(const EtherAddress &, bool) const$/;"	f	class:HopcountMetric
get_link_metric	elements/grid/lirmetric.cc	/^LIRMetric::get_link_metric(const EtherAddress &, bool) const$/;"	f	class:LIRMetric
get_link_metric	elements/grid/threshmetric.cc	/^ThresholdMetric::get_link_metric(const EtherAddress &e, bool data_sender) const$/;"	f	class:ThresholdMetric
get_link_metric	elements/grid/yarvismetric.cc	/^YarvisMetric::get_link_metric(const EtherAddress &e, bool data_sender) const$/;"	f	class:YarvisMetric
get_link_metric	elements/wifi/linktable.cc	/^LinkTable::get_link_metric(IPAddress from, IPAddress to)$/;"	f	class:LinkTable
get_link_seq	elements/wifi/linktable.cc	/^LinkTable::get_link_seq(IPAddress from, IPAddress to)$/;"	f	class:LinkTable
get_link_status	drivers/e1000-4.x/src/e1000_hw.h	/^    boolean_t get_link_status;$/;"	m	struct:e1000_hw
get_link_status	drivers/e1000-5.x/src/e1000_hw.h	/^    boolean_t get_link_status;$/;"	m	struct:e1000_hw
get_link_status	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t get_link_status;$/;"	m	struct:e1000_hw
get_local_port	elements/local/OpenFlow/datapath.hh	/^	struct click_port* get_local_port() { return _local_port; };$/;"	f	class:Datapath
get_location	elements/grid/loctable.cc	/^LocationTable::get_location(IPAddress ip, grid_location &loc, int &err_radius)$/;"	f	class:LocationTable
get_map	elements/ip/iprewriterbase.hh	/^    virtual HashContainer<IPRewriterEntry> *get_map(int mapid) {$/;"	f	class:IPRewriterBase
get_map	elements/tcpudp/iprewriter.hh	/^    HashContainer<IPRewriterEntry> *get_map(int mapid) {$/;"	f	class:IPRewriter
get_max_fds	elements/local/OpenFlow/lib/socket-util.cc	/^get_max_fds(void)$/;"	f
get_metric	elements/grid/dsrroutetable.cc	/^DSRRouteTable::get_metric(EtherAddress other)$/;"	f	class:DSRRouteTable
get_msglevel	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	u32	(*get_msglevel)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_msglevel	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	u32	(*get_msglevel)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_neighbors	elements/wifi/linktable.cc	/^LinkTable::get_neighbors(IPAddress ip)$/;"	f	class:LinkTable
get_next	elements/ip6/addresstranslator.hh	/^  Mapping * get_next()                { return _next; }$/;"	f	class:AddressTranslator::Mapping
get_next_geographic_hop	elements/grid/lookupgeogridroute.cc	/^LookupGeographicGridRoute::get_next_geographic_hop(grid_location dest_loc, EtherAddress *dest_eth,$/;"	f	class:LookupGeographicGridRoute
get_next_hop	elements/grid/lookuplocalgridroute.cc	/^LookupLocalGridRoute::get_next_hop(IPAddress dest_ip, EtherAddress *dest_eth,$/;"	f	class:LookupLocalGridRoute
get_node	ns/CUT_BinHeap.h	/^  Node* get_node(Key k, Data d) {$/;"	f	class:CUT_BinHeap
get_node	ns/nsclick-test.cc	/^TestClickSimulator::get_node(int nodenum) {$/;"	f	class:TestClickSimulator
get_node_loc	elements/grid/radiosim.cc	/^RadioSim::get_node_loc(int i)$/;"	f	class:RadioSim
get_noise	elements/grid/airoinfo.cc	/^AiroInfo::get_noise(int &, int &, int &)$/;"	f	class:AiroInfo
get_noise	elements/grid/airoinfo.cc	/^AiroInfo::get_noise(int &max_over_sec, int &avg_over_minute, int &max_over_minute)$/;"	f	class:AiroInfo
get_num_queues	elements/local/OpenFlow/datapath.hh	/^	uint16_t get_num_queues() { return _num_queues; };$/;"	f	class:Datapath
get_number_direct_neigbors	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::get_number_direct_neigbors()$/;"	f	class:DSDVRouteTable
get_number_direct_neigbors	elements/grid/gridgenericrt.hh	/^  virtual unsigned get_number_direct_neigbors() {$/;"	f	class:GridGenericRouteTable
get_oclass	lib/clp.c	/^get_oclass(Clp_Parser *clp, const char *text, int *ocharskip)$/;"	f	file:
get_one_entry	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::get_one_entry(const IPAddress &dest_ip, RouteEntry &entry)$/;"	f	class:DSDVRouteTable
get_one_entry	elements/grid/gridroutetable.cc	/^GridRouteTable::get_one_entry(const IPAddress &dest_ip, RouteEntry &entry)$/;"	f	class:GridRouteTable
get_packet	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows::get_packet()$/;"	f	class:FastTCPFlows
get_packet	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows::get_packet()$/;"	f	class:FastUDPFlows
get_packet	elements/wifi/fromhandler.cc	/^FromHandler::get_packet()$/;"	f	class:FromHandler
get_packet	lib/fromfile.cc	/^FromFile::get_packet(size_t size, uint32_t sec, uint32_t subsec, ErrorHandler *errh)$/;"	f	class:FromFile
get_packet_from_data	lib/fromfile.cc	/^FromFile::get_packet_from_data(const void *data_void, size_t data_size, size_t size, uint32_t sec, uint32_t subsec, ErrorHandler *errh)$/;"	f	class:FromFile
get_packet_pool	lib/packet.cc	/^get_packet_pool()$/;"	f	file:
get_pad_bytes	elements/grid/grid.hh	/^    static uint32_t get_pad_bytes(struct grid_hdr &gh)$/;"	f	struct:grid_hdr
get_pauseparam	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	void	(*get_pauseparam)(struct net_device *, struct ethtool_pauseparam*);$/;"	m	struct:_kc_ethtool_ops	file:
get_pauseparam	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	void	(*get_pauseparam)(struct net_device *, struct ethtool_pauseparam*);$/;"	m	struct:_kc_ethtool_ops	file:
get_pointer	include/click/hashtable.hh	/^    const mapped_type *get_pointer(const key_type &key) const {$/;"	f	class:HashTable
get_pointer	include/click/hashtable.hh	/^    mapped_type *get_pointer(const key_type &key) {$/;"	f	class:HashTable
get_port	elements/local/OpenFlow/datapath.hh	/^	struct click_port* get_port(int i) { return i < DP_MAX_PORTS && i >= 0 ? &_ports[i] : NULL; };$/;"	f	class:Datapath
get_port_description	elements/local/OpenFlow/datapath.cc	/^void Datapath::get_port_description(struct ofp_phy_port* desc, String ifname, int fd)$/;"	f	class:Datapath
get_port_list	elements/local/OpenFlow/datapath.hh	/^	struct list* get_port_list() { return &_port_list; };$/;"	f	class:Datapath
get_prev	elements/ip6/addresstranslator.hh	/^  Mapping * get_prev()                { return _prev; }$/;"	f	class:AddressTranslator::Mapping
get_probe_entries	elements/grid/printgrid.cc	/^PrintGrid::get_probe_entries(const grid_link_probe *lp) const$/;"	f	class:PrintGrid
get_probe_size	elements/grid/linkstat.hh	/^  unsigned get_probe_size() const { return _probe_size; }$/;"	f	class:LinkStat
get_proto_info	conf/make-dsdv-config.pl	/^sub get_proto_info($) {$/;"	s
get_rate	elements/local/FlowNet/shaper/PFShapeFW.cc	/^int PFShapeFW::get_rate()$/;"	f	class:PFShapeFW
get_rate	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeStaticMpeg2.cc	/^int VcBWShapeStaticMpeg2::get_rate()$/;"	f	class:VcBWShapeStaticMpeg2
get_rates	elements/wifi/printwifi.cc	/^Vector<int> get_rates(u_int8_t *ptr) {$/;"	f
get_rconn_stat	elements/local/OpenFlow/RConn.hh	/^	struct rconn_stat* get_rconn_stat() { return &rstat; };$/;"	f	class:RConn
get_regs	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	void	(*get_regs)(struct net_device *, struct ethtool_regs *, void *);$/;"	m	struct:_kc_ethtool_ops	file:
get_regs	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	void	(*get_regs)(struct net_device *, struct ethtool_regs *, void *);$/;"	m	struct:_kc_ethtool_ops	file:
get_regs_len	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*get_regs_len)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_regs_len	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*get_regs_len)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_resp_code	apps/csclient/csclient.cc	/^ControlSocketClient::get_resp_code(string line)$/;"	f	class:ControlSocketClient
get_reverse_rate	elements/grid/linkstat.cc	/^LinkStat::get_reverse_rate(const EtherAddress &eth, unsigned int *r,$/;"	f	class:LinkStat
get_ringparam	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	void	(*get_ringparam)(struct net_device *, struct ethtool_ringparam *);$/;"	m	struct:_kc_ethtool_ops	file:
get_ringparam	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	void	(*get_ringparam)(struct net_device *, struct ethtool_ringparam *);$/;"	m	struct:_kc_ethtool_ops	file:
get_route_metric	elements/wifi/linktable.cc	/^LinkTable::get_route_metric(const Vector<IPAddress> &route)$/;"	f	class:LinkTable
get_router_classes	apps/csclient/csclient.hh	/^  err_t get_router_classes(vector<string> &classes)   { return get_string_vec("", "classes", classes); }$/;"	f	class:ControlSocketClient
get_router_config	apps/csclient/csclient.hh	/^  err_t get_router_config(string &config)         { return read("", "config", config); }$/;"	f	class:ControlSocketClient
get_router_flat_config	apps/csclient/csclient.hh	/^  err_t get_router_flat_config(string &config)    { return read("", "flatconfig", config); }$/;"	f	class:ControlSocketClient
get_router_packages	apps/csclient/csclient.hh	/^  err_t get_router_packages(vector<string> &pkgs)  { return get_string_vec("", "packages", pkgs); }$/;"	f	class:ControlSocketClient
get_router_version	apps/csclient/csclient.hh	/^  err_t get_router_version(string &vers)  { err_t err = read("", "version", vers); vers = trim(vers); return err; }$/;"	f	class:ControlSocketClient
get_rtes	elements/grid/updateroutes.cc	/^UpdateGridRoutes::get_rtes(Vector<grid_nbr_entry> *retval)$/;"	f	class:UpdateGridRoutes
get_rx_csum	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	u32	(*get_rx_csum)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_rx_csum	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	u32	(*get_rx_csum)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_seed	apps/clicky/src/crouter.cc	/^bool crouter::reachable_match_t::get_seed(int eindex, int port) const$/;"	f	class:clicky::crouter::reachable_match_t
get_settings	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*get_settings)(struct net_device *, struct ethtool_cmd *);$/;"	m	struct:_kc_ethtool_ops	file:
get_settings	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*get_settings)(struct net_device *, struct ethtool_cmd *);$/;"	m	struct:_kc_ethtool_ops	file:
get_sg	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	u32	(*get_sg)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_sg	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	u32	(*get_sg)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_signal_info	elements/grid/airoinfo.cc	/^AiroInfo::get_signal_info(const EtherAddress &, int &, int &)$/;"	f	class:AiroInfo
get_signal_info	elements/grid/airoinfo.cc	/^AiroInfo::get_signal_info(const EtherAddress &e, int &dbm, int &quality)$/;"	f	class:AiroInfo
get_sim_packetinfo	include/click/packet.hh	/^    simclick_simpacketinfo *get_sim_packetinfo() {$/;"	f	class:Packet
get_socket_error	elements/local/OpenFlow/lib/socket-util.cc	/^get_socket_error(int fd) $/;"	f
get_ssid	elements/wifi/printwifi.cc	/^String get_ssid(u_int8_t *ptr) {$/;"	f
get_stat	elements/grid/linktracker.cc	/^LinkTracker::get_stat(IPAddress dst, int &sig, int &qual, Timestamp &last_update)$/;"	f	class:LinkTracker
get_stats_count	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*get_stats_count)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_stats_count	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*get_stats_count)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_string	lib/fromfile.cc	/^FromFile::get_string(size_t size, ErrorHandler *errh)$/;"	f	class:FromFile
get_string_vec	apps/csclient/csclient.cc	/^ControlSocketClient::get_string_vec(string el, string h, vector<string> &v)$/;"	f	class:ControlSocketClient
get_strings	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	void	(*get_strings)(struct net_device *, u32 stringset, u8 *);$/;"	m	struct:_kc_ethtool_ops	file:
get_strings	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	void	(*get_strings)(struct net_device *, u32 stringset, u8 *);$/;"	m	struct:_kc_ethtool_ops	file:
get_tso	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	u32	(*get_tso)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_tso	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	u32	(*get_tso)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_tx_csum	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	u32	(*get_tx_csum)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_tx_csum	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	u32	(*get_tx_csum)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
get_tx_stats	elements/grid/airoinfo.cc	/^AiroInfo::get_tx_stats(const EtherAddress &, int &, int &)$/;"	f	class:AiroInfo
get_tx_stats	elements/grid/airoinfo.cc	/^AiroInfo::get_tx_stats(const EtherAddress &e, int &num_successful, int &num_failed)$/;"	f	class:AiroInfo
get_unaligned	lib/fromfile.cc	/^FromFile::get_unaligned(size_t size, void *buffer, ErrorHandler *errh)$/;"	f	class:FromFile
get_unix_name_len	elements/local/OpenFlow/lib/socket-util.cc	/^get_unix_name_len(socklen_t sun_len)$/;"	f
get_value	elements/userlevel/progressbar.cc	/^ProgressBar::get_value(int first, int last, double *value)$/;"	f	class:ProgressBar
get_wol	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	void	(*get_wol)(struct net_device *, struct ethtool_wolinfo *);$/;"	m	struct:_kc_ethtool_ops	file:
get_wol	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	void	(*get_wol)(struct net_device *, struct ethtool_wolinfo *);$/;"	m	struct:_kc_ethtool_ops	file:
getdb	lib/nameinfo.cc	/^NameInfo::getdb(uint32_t type, const Element *e, size_t vsize, bool create)$/;"	f	class:NameInfo
gettext	apps/clicky/src/support.h	26;"	d
gettime	ns/nsclick-test.cc	/^  struct timeval gettime() { return cursimtime_; };$/;"	f	class:Simulator
getttywidth	elements/userlevel/progressbar.cc	/^getttywidth()$/;"	f	file:
ghi_read_handler	elements/grid/gridheaderinfo.cc	/^ghi_read_handler(Element *, void *v)$/;"	f	file:
giaddr	include/clicknet/dhcp.h	/^	uint32_t giaddr;       \/* should be zero in client's messages *\/$/;"	m	struct:click_dhcp
gid	include/click/archive.hh	/^    int gid;			\/\/\/< Group ID of member$/;"	m	struct:ArchiveElement
gid	linuxmodule/kernelversion.c	/^CLICK_INT_MODULE_PARAM(gid);$/;"	v
gid	linuxmodule/kernelversion.c	/^static int gid = 0;$/;"	v	file:
gid	linuxmodule/modulepriv.hh	/^    gid_t gid;$/;"	m	struct:click_fsmode_t
glade_set_atk_action_description	apps/clicky/src/support.c	/^glade_set_atk_action_description       (AtkAction       *action,$/;"	f
glob_match	lib/userutils.cc	/^glob_match(const String &str, const String &pattern)$/;"	f
global_packet_pool	lib/packet.cc	/^static PacketPool global_packet_pool;$/;"	v	file:
global_packet_pool_lock	lib/packet.cc	/^static volatile uint32_t global_packet_pool_lock;$/;"	v	file:
global_scope	include/click/lexer.hh	/^    VariableEnvironment &global_scope()	{ return _global_scope; }$/;"	f	class:Lexer
globalh	lib/router.cc	/^static Handler* globalh;$/;"	v	file:
globalh_cap	lib/router.cc	/^static int globalh_cap;$/;"	v	file:
gmrag	drivers/e1000-7.x/src/e1000_hw.h	/^        uint32_t gmrag          :8;$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc
gmwag	drivers/e1000-7.x/src/e1000_hw.h	/^        uint32_t gmwag          :8;$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc
go	ns/nsclick-test.cc	/^TestClickSimulator::PacketEvent::go(SimTime* when) {$/;"	f	class:TestClickSimulator::PacketEvent
go	ns/nsclick-test.cc	/^TestClickSimulator::ScheduledEvent::go(SimTime* when) {$/;"	f	class:TestClickSimulator::ScheduledEvent
good	elements/grid/dsdvroutetable.hh	/^    bool good()   const { check(); return num_hops() != 0; }$/;"	f	class:DSDVRouteTable::RTEntry
good	elements/grid/gridgenericmetric.hh	/^    bool     good() const { return _good; }$/;"	f	class:GridGenericMetric::metric_t
good	elements/grid/gridgenericrt.hh	/^    bool                 good()     const { return _num_hops != 0; }$/;"	f	struct:GridGenericRouteTable::RouteEntry
good_ip_header	elements/analysis/aggregateipflows.cc	/^good_ip_header(const Packet *p)$/;"	f	file:
gorch	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t gorch;$/;"	m	struct:e1000_hw_stats
gorch	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t gorch;$/;"	m	struct:e1000_hw_stats
gorch	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t gorch;$/;"	m	struct:e1000_hw_stats
gorcl	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t gorcl;$/;"	m	struct:e1000_hw_stats
gorcl	drivers/e1000-5.x/src/e1000.h	/^	uint32_t gorcl;$/;"	m	struct:e1000_adapter
gorcl	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t gorcl;$/;"	m	struct:e1000_hw_stats
gorcl	drivers/e1000-7.x/src/e1000.h	/^	uint32_t gorcl;$/;"	m	struct:e1000_adapter
gorcl	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t gorcl;$/;"	m	struct:e1000_hw_stats
gorcl_old	drivers/e1000-5.x/src/e1000.h	/^	uint64_t gorcl_old;$/;"	m	struct:e1000_adapter
gorcl_old	drivers/e1000-7.x/src/e1000.h	/^	uint64_t gorcl_old;$/;"	m	struct:e1000_adapter
got_char	elements/radio/bim.cc	/^BIM::got_char(int c)$/;"	f	class:BIM
got_skb	elements/linuxmodule/fromdevice.cc	/^FromDevice::got_skb(struct sk_buff *skb)$/;"	f	class:FromDevice
gotch	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t gotch;$/;"	m	struct:e1000_hw_stats
gotch	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t gotch;$/;"	m	struct:e1000_hw_stats
gotch	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t gotch;$/;"	m	struct:e1000_hw_stats
gotcl	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t gotcl;$/;"	m	struct:e1000_hw_stats
gotcl	drivers/e1000-5.x/src/e1000.h	/^	uint32_t gotcl;$/;"	m	struct:e1000_adapter
gotcl	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t gotcl;$/;"	m	struct:e1000_hw_stats
gotcl	drivers/e1000-7.x/src/e1000.h	/^	uint32_t gotcl;$/;"	m	struct:e1000_adapter
gotcl	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t gotcl;$/;"	m	struct:e1000_hw_stats
gotcl_old	drivers/e1000-5.x/src/e1000.h	/^	uint64_t gotcl_old;$/;"	m	struct:e1000_adapter
gotcl_old	drivers/e1000-7.x/src/e1000.h	/^	uint64_t gotcl_old;$/;"	m	struct:e1000_adapter
gport	lib/router.cc	/^Router::gport(bool isoutput, const Port &h) const$/;"	f	class:Router
gprc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t gprc;$/;"	m	struct:e1000_hw_stats
gprc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t gprc;$/;"	m	struct:e1000_hw_stats
gprc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t gprc;$/;"	m	struct:e1000_hw_stats
gptc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t gptc;$/;"	m	struct:e1000_hw_stats
gptc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t gptc;$/;"	m	struct:e1000_hw_stats
gptc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t gptc;$/;"	m	struct:e1000_hw_stats
greedy	include/click/routerthread.hh	/^    bool greedy() const			{ return _greedy; }$/;"	f	class:RouterThread
greedy	linuxmodule/kernelversion.c	/^CLICK_INT_MODULE_PARAM(greedy);$/;"	v
greedy	linuxmodule/kernelversion.c	/^static int greedy = 0;$/;"	v	file:
greedy_schedule_jiffies	lib/routerthread.cc	/^static unsigned long greedy_schedule_jiffies;$/;"	v	file:
grid_geocast	elements/grid/grid.hh	/^struct grid_geocast {$/;"	s
grid_hdr	elements/grid/grid.hh	/^  grid_hdr() : hdr_len(sizeof(grid_hdr)), cksum(0)$/;"	f	struct:grid_hdr
grid_hdr	elements/grid/grid.hh	/^struct grid_hdr {$/;"	s
grid_hello	elements/grid/grid.hh	/^  grid_hello() : num_nbrs(0), nbr_entry_sz(sizeof(grid_nbr_entry))$/;"	f	struct:grid_hello
grid_hello	elements/grid/grid.hh	/^struct grid_hello {$/;"	s
grid_link_entry	elements/grid/grid.hh	/^struct grid_link_entry {$/;"	s
grid_link_probe	elements/grid/grid.hh	/^struct grid_link_probe {$/;"	s
grid_loc_query	elements/grid/grid.hh	/^    grid_loc_query() { assert(sizeof(grid_loc_query) % 4 == 0); }$/;"	f	struct:grid_loc_query
grid_loc_query	elements/grid/grid.hh	/^struct grid_loc_query {$/;"	s
grid_location	elements/grid/grid.hh	/^    grid_location(int32_t lat, int32_t lon, int32_t h = 0)$/;"	f	struct:grid_location
grid_location	elements/grid/grid.hh	/^  grid_location() : _mslat(0), _mslon(0), _h(0) { };$/;"	f	struct:grid_location
grid_location	elements/grid/grid.hh	/^  grid_location(double lat, double lon, double h = 0)$/;"	f	struct:grid_location
grid_location	elements/grid/grid.hh	/^struct grid_location {$/;"	s
grid_nbr_encap	elements/grid/grid.hh	/^  grid_nbr_encap() { assert(sizeof(grid_nbr_encap) % 4 == 0); }$/;"	f	struct:grid_nbr_encap
grid_nbr_encap	elements/grid/grid.hh	/^struct grid_nbr_encap {$/;"	s
grid_nbr_entry	elements/grid/grid.hh	/^    grid_nbr_entry() : ip(0), next_hop_ip(0), num_hops(0), loc(0, 0, 0), seq_no(0)$/;"	f	struct:grid_nbr_entry
grid_nbr_entry	elements/grid/grid.hh	/^    grid_nbr_entry(uint32_t _ip, uint32_t _nhip, uint8_t h, uint32_t s)$/;"	f	struct:grid_nbr_entry
grid_nbr_entry	elements/grid/grid.hh	/^struct grid_nbr_entry {$/;"	s
grid_region	elements/grid/grid.hh	/^  grid_region() : _radius(0) { }$/;"	f	struct:grid_region
grid_region	elements/grid/grid.hh	/^  grid_region(const grid_location &c, unsigned long r)$/;"	f	struct:grid_region
grid_region	elements/grid/grid.hh	/^struct grid_region {$/;"	s
grid_route_probe	elements/grid/grid.hh	/^struct grid_route_probe {$/;"	s
grid_route_reply	elements/grid/grid.hh	/^struct grid_route_reply {$/;"	s
grid_swap	elements/grid/linkstat.hh	/^template <class T> void grid_swap(T &a, T &b) {$/;"	f
groupno	elements/analysis/aggregatefilter.hh	/^	uint32_t groupno;$/;"	m	struct:AggregateFilter::Group
grow	lib/ino.cc	/^ClickIno::grow(int min_size)$/;"	f	class:ClickIno
grow	lib/straccum.cc	/^StringAccum::grow(int want)$/;"	f	class:StringAccum
grow_build_string	lib/clp.c	/^grow_build_string(Clp_BuildString *bs, int want)$/;"	f	file:
grra	drivers/e1000-7.x/src/e1000_hw.h	/^        uint32_t grra           :8;$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc
grwa	drivers/e1000-7.x/src/e1000_hw.h	/^        uint32_t grwa           :8;$/;"	m	struct:ich8_hws_flash_regacc::ich8_flracc
gso_segs	drivers/e1000-7.x/src/kcompat.h	172;"	d
gso_size	drivers/e1000-7.x/src/kcompat.h	171;"	d
guaranteed	elements/ip/iprwmapping.hh	/^    bool guaranteed() const {$/;"	f	class:IPRewriterFlow
gw	elements/ip/directiplookup.hh	/^	IPAddress gw;$/;"	m	struct:DirectIPLookup::VirtualPort
gw	elements/ip/iproutetable.hh	/^    IPAddress gw;$/;"	m	struct:IPRoute
gw	elements/ipsec/ipsecroutetable.hh	/^    IPAddress gw;$/;"	m	struct:IPsecRoute
gw	include/click/iptable.hh	/^    IPAddress gw;$/;"	m	struct:IPTable::Entry
gw_read_handler	elements/grid/gridgatewayinfo.cc	/^gw_read_handler(Element *f, void *)$/;"	f	file:
h	elements/grid/grid.hh	/^  double h() const {$/;"	f	struct:grid_location
h	elements/grid/gridroutetable.cc	229;"	d	file:
h	elements/grid/region.hh	/^  double h() { return _h; };$/;"	f	class:RectRegion
h	include/click/handler.hh	/^	HandlerCallback h;$/;"	m	union:Handler::__anon469
h	include/click/handler.hh	/^	HandlerCallback h;$/;"	m	union:Handler::__anon470
h	include/click/packet.hh	/^	unsigned char *h;$/;"	m	struct:Packet::AllAnno
h	include/clicknet/fddi.h	/^    struct click_fddi h;$/;"	m	struct:click_fddi_8022_1	typeref:struct:click_fddi_8022_1::click_fddi
h	include/clicknet/fddi.h	/^    struct click_fddi h;$/;"	m	struct:click_fddi_8022_2	typeref:struct:click_fddi_8022_2::click_fddi
h	include/clicknet/fddi.h	/^    struct click_fddi h;$/;"	m	struct:click_fddi_snap	typeref:struct:click_fddi_snap::click_fddi
h0	elements/ipsec/sha1_impl.hh	/^  unsigned long h0, h1, h2, h3, h4;$/;"	m	struct:SHAstate_st
h1	elements/ipsec/sha1_impl.hh	/^  unsigned long h0, h1, h2, h3, h4;$/;"	m	struct:SHAstate_st
h2	elements/ipsec/sha1_impl.hh	/^  unsigned long h0, h1, h2, h3, h4;$/;"	m	struct:SHAstate_st
h3	elements/ipsec/sha1_impl.hh	/^  unsigned long h0, h1, h2, h3, h4;$/;"	m	struct:SHAstate_st
h4	elements/ipsec/sha1_impl.hh	/^  unsigned long h0, h1, h2, h3, h4;$/;"	m	struct:SHAstate_st
h_active	elements/ethernet/etherpausesource.hh	/^    enum { h_limit, h_active, h_src, h_dst, h_pausetime, h_reset_counts };$/;"	e	enum:EtherPauseSource::__anon234
h_active	elements/linuxmodule/fromdevice.hh	/^    enum { h_active, h_calls, h_reset_counts, h_length };$/;"	e	enum:FromDevice::__anon305
h_active	elements/standard/discard.hh	/^    enum { h_reset_counts = 0, h_active = 1 };$/;"	e	enum:Discard::__anon188
h_active	elements/standard/infinitesource.hh	/^	h_data, h_limit, h_burst, h_active, h_reset, h_count, h_length,$/;"	e	enum:InfiniteSource::__anon174
h_active	elements/standard/timedsource.hh	/^    enum { h_data, h_interval, h_active, h_reset, h_headroom };$/;"	e	enum:TimedSource::__anon189
h_active	elements/standard/unqueue.hh	/^	h_active, h_reset, h_burst, h_limit$/;"	e	enum:Unqueue::__anon175
h_assert_stop	linuxmodule/module.cc	/^    h_cycles, h_meminfo, h_packages, h_assert_stop$/;"	e	enum:__anon522	file:
h_best_effort	elements/ip/iprewriterbase.hh	/^	h_best_effort = 0, h_guarantee = 1$/;"	e	enum:IPRewriterHeap::__anon327
h_burst	elements/standard/infinitesource.hh	/^	h_data, h_limit, h_burst, h_active, h_reset, h_count, h_length,$/;"	e	enum:InfiniteSource::__anon174
h_burst	elements/standard/unqueue.hh	/^	h_active, h_reset, h_burst, h_limit$/;"	e	enum:Unqueue::__anon175
h_button	include/click/handler.hh	/^	h_button = 0x2000,	\/\/\/< @brief Write handler ignores data.$/;"	e	enum:Handler::Flags
h_calls	elements/linuxmodule/fromdevice.hh	/^    enum { h_active, h_calls, h_reset_counts, h_length };$/;"	e	enum:FromDevice::__anon305
h_calls	elements/standard/ratedunqueue.hh	/^    enum { h_calls, h_rate };$/;"	e	enum:RatedUnqueue::__anon191
h_calm	include/click/handler.hh	/^	h_calm = 0x0800,	\/\/\/< @brief Read handler value changes rarely.$/;"	e	enum:Handler::Flags
h_capacity	elements/ip/iprewriterbase.hh	/^	h_size = -4, h_capacity = -5, h_clear = -6$/;"	e	enum:IPRewriterBase::__anon331
h_checkbox	include/click/handler.hh	/^	h_checkbox = 0x4000,	\/\/\/< @brief Read\/write handler is boolean and$/;"	e	enum:Handler::Flags
h_clear	elements/ethernet/arpquerier.hh	/^    enum { h_table, h_table_xml, h_stats, h_insert, h_delete, h_clear,$/;"	e	enum:ARPQuerier::__anon236
h_clear	elements/ethernet/arptable.hh	/^	h_table, h_insert, h_delete, h_clear$/;"	e	enum:ARPTable::__anon240
h_clear	elements/ip/iprewriterbase.hh	/^	h_size = -4, h_capacity = -5, h_clear = -6$/;"	e	enum:IPRewriterBase::__anon331
h_config	elements/ethernet/ethervlanencap.hh	/^    enum { h_config, h_vlan_tci };$/;"	e	enum:EtherVLANEncap::__anon238
h_config	elements/ethernet/setvlananno.hh	/^    enum { h_config, h_vlan_tci };$/;"	e	enum:SetVLANAnno::__anon239
h_config	elements/ethernet/vlanencap.hh	/^    enum { h_config, h_vlan_tci };$/;"	e	enum:VLANEncap::__anon237
h_config	elements/standard/randomsample.hh	/^    enum { h_sample, h_drop, h_config };$/;"	e	enum:RandomSample::__anon187
h_count	elements/ethernet/arpquerier.hh	/^	   h_count, h_length };$/;"	e	enum:ARPQuerier::__anon236
h_count	elements/standard/infinitesource.hh	/^	h_data, h_limit, h_burst, h_active, h_reset, h_count, h_length,$/;"	e	enum:InfiniteSource::__anon174
h_cycles	linuxmodule/module.cc	/^    h_cycles, h_meminfo, h_packages, h_assert_stop$/;"	e	enum:__anon522	file:
h_data	elements/standard/infinitesource.hh	/^	h_data, h_limit, h_burst, h_active, h_reset, h_count, h_length,$/;"	e	enum:InfiniteSource::__anon174
h_data	elements/standard/timedsource.hh	/^    enum { h_data, h_interval, h_active, h_reset, h_headroom };$/;"	e	enum:TimedSource::__anon189
h_debug	elements/userlevel/todevice.hh	/^    enum { h_debug, h_signal, h_pulls, h_q };$/;"	e	enum:ToDevice::__anon208
h_delete	elements/ethernet/arpquerier.hh	/^    enum { h_table, h_table_xml, h_stats, h_insert, h_delete, h_clear,$/;"	e	enum:ARPQuerier::__anon236
h_delete	elements/ethernet/arptable.hh	/^	h_table, h_insert, h_delete, h_clear$/;"	e	enum:ARPTable::__anon240
h_deprecated	include/click/handler.hh	/^	h_deprecated = 0x0200,	\/\/\/< @brief Handler is deprecated and available$/;"	e	enum:Handler::Flags
h_driver_flag_0	include/click/handler.hh	/^	h_driver_flag_0 = 1 << h_driver_flag_shift,$/;"	e	enum:Handler::Flags
h_driver_flag_shift	include/click/handler.hh	/^	h_driver_flag_shift = 20,$/;"	e	enum:Handler::Flags
h_drop	elements/standard/randomsample.hh	/^    enum { h_sample, h_drop, h_config };$/;"	e	enum:RandomSample::__anon187
h_dst	elements/ethernet/etherpausesource.hh	/^    enum { h_limit, h_active, h_src, h_dst, h_pausetime, h_reset_counts };$/;"	e	enum:EtherPauseSource::__anon234
h_end	elements/analysis/timefilter.hh	/^	h_start, h_end, h_interval, h_extend_interval$/;"	e	enum:TimeFilter::__anon266
h_exclusive	include/click/handler.hh	/^	h_exclusive = 0,	\/\/\/< @brief Handler is exclusive (the default):$/;"	e	enum:Handler::Flags
h_expensive	include/click/handler.hh	/^	h_expensive = 0x1000,	\/\/\/< @brief Read handler is expensive to call.$/;"	e	enum:Handler::Flags
h_expiry	elements/test/timertest.hh	/^    enum { h_scheduled, h_expiry, h_schedule_after, h_unschedule };$/;"	e	enum:TimerTest::__anon407
h_extend_interval	elements/analysis/timefilter.hh	/^	h_start, h_end, h_interval, h_extend_interval$/;"	e	enum:TimeFilter::__anon266
h_guarantee	elements/ip/iprewriterbase.hh	/^	h_best_effort = 0, h_guarantee = 1$/;"	e	enum:IPRewriterHeap::__anon327
h_headroom	elements/standard/timedsource.hh	/^    enum { h_data, h_interval, h_active, h_reset, h_headroom };$/;"	e	enum:TimedSource::__anon189
h_insert	elements/ethernet/arpquerier.hh	/^    enum { h_table, h_table_xml, h_stats, h_insert, h_delete, h_clear,$/;"	e	enum:ARPQuerier::__anon236
h_insert	elements/ethernet/arptable.hh	/^	h_table, h_insert, h_delete, h_clear$/;"	e	enum:ARPTable::__anon240
h_interval	elements/analysis/timefilter.hh	/^	h_start, h_end, h_interval, h_extend_interval$/;"	e	enum:TimeFilter::__anon266
h_interval	elements/analysis/timerange.hh	/^	h_range, h_interval, h_reset$/;"	e	enum:TimeRange::__anon257
h_interval	elements/standard/timedsource.hh	/^    enum { h_data, h_interval, h_active, h_reset, h_headroom };$/;"	e	enum:TimedSource::__anon189
h_length	elements/ethernet/arpquerier.hh	/^	   h_count, h_length };$/;"	e	enum:ARPQuerier::__anon236
h_length	elements/linuxmodule/fromdevice.hh	/^    enum { h_active, h_calls, h_reset_counts, h_length };$/;"	e	enum:FromDevice::__anon305
h_length	elements/linuxmodule/fromhost.hh	/^    enum { h_length };$/;"	e	enum:FromHost::__anon312
h_length	elements/standard/infinitesource.hh	/^	h_data, h_limit, h_burst, h_active, h_reset, h_count, h_length,$/;"	e	enum:InfiniteSource::__anon174
h_limit	elements/ethernet/etherpausesource.hh	/^    enum { h_limit, h_active, h_src, h_dst, h_pausetime, h_reset_counts };$/;"	e	enum:EtherPauseSource::__anon234
h_limit	elements/standard/infinitesource.hh	/^	h_data, h_limit, h_burst, h_active, h_reset, h_count, h_length,$/;"	e	enum:InfiniteSource::__anon174
h_limit	elements/standard/unqueue.hh	/^	h_active, h_reset, h_burst, h_limit$/;"	e	enum:Unqueue::__anon175
h_mapping_failures	elements/ip/iprewriterbase.hh	/^	h_nmappings = -1, h_mapping_failures = -2, h_patterns = -3,$/;"	e	enum:IPRewriterBase::__anon331
h_meminfo	linuxmodule/module.cc	/^    h_cycles, h_meminfo, h_packages, h_assert_stop$/;"	e	enum:__anon522	file:
h_mm	elements/grid/grid.hh	/^    int32_t h_mm()   const { return ntohl(_h);   }$/;"	f	struct:grid_location
h_nmappings	elements/ip/iprewriterbase.hh	/^	h_nmappings = -1, h_mapping_failures = -2, h_patterns = -3,$/;"	e	enum:IPRewriterBase::__anon331
h_nonexclusive	include/click/handler.hh	/^	h_nonexclusive = 0x0020,\/\/\/< @brief Handler is nonexclusive: router$/;"	e	enum:Handler::Flags
h_notifier	elements/standard/infinitesource.hh	/^	h_notifier$/;"	e	enum:InfiniteSource::__anon174
h_packages	linuxmodule/module.cc	/^    h_cycles, h_meminfo, h_packages, h_assert_stop$/;"	e	enum:__anon522	file:
h_patterns	elements/ip/iprewriterbase.hh	/^	h_nmappings = -1, h_mapping_failures = -2, h_patterns = -3,$/;"	e	enum:IPRewriterBase::__anon331
h_pausetime	elements/ethernet/etherpausesource.hh	/^    enum { h_limit, h_active, h_src, h_dst, h_pausetime, h_reset_counts };$/;"	e	enum:EtherPauseSource::__anon234
h_preinitialize	include/click/handlercall.hh	/^	h_preinitialize = 4, h_unquote_param = 8$/;"	e	enum:HandlerCall::Flags
h_pulls	elements/userlevel/todevice.hh	/^    enum { h_debug, h_signal, h_pulls, h_q };$/;"	e	enum:ToDevice::__anon208
h_q	elements/userlevel/todevice.hh	/^    enum { h_debug, h_signal, h_pulls, h_q };$/;"	e	enum:ToDevice::__anon208
h_range	elements/analysis/timerange.hh	/^	h_range, h_interval, h_reset$/;"	e	enum:TimeRange::__anon257
h_rate	elements/standard/ratedunqueue.hh	/^    enum { h_calls, h_rate };$/;"	e	enum:RatedUnqueue::__anon191
h_raw	include/click/handler.hh	/^	h_raw = 0x0040,		\/\/\/< @brief Don't add newline to results.$/;"	e	enum:Handler::Flags
h_read	include/click/handler.hh	/^	h_read = 0x0001,	\/\/\/< @brief Handler supports read operations.$/;"	e	enum:Handler::Flags
h_read	include/click/handlercall.hh	/^	h_read = Handler::h_read,$/;"	e	enum:HandlerCall::Flags
h_read_comprehensive	include/click/handler.hh	/^	h_read_comprehensive = 0x0008,$/;"	e	enum:Handler::Flags
h_read_param	include/click/handler.hh	/^	h_read_param = 0x0004,	\/\/\/< @brief Read handler takes parameters.$/;"	e	enum:Handler::Flags
h_read_private	include/click/handler.hh	/^	h_read_private = 0x0080,\/\/\/< @brief Read handler private (invisible$/;"	e	enum:Handler::Flags
h_reset	elements/analysis/timerange.hh	/^	h_range, h_interval, h_reset$/;"	e	enum:TimeRange::__anon257
h_reset	elements/linuxmodule/touserdevice.hh	/^    enum { h_reset };$/;"	e	enum:ToUserDevice::__anon307
h_reset	elements/standard/infinitesource.hh	/^	h_data, h_limit, h_burst, h_active, h_reset, h_count, h_length,$/;"	e	enum:InfiniteSource::__anon174
h_reset	elements/standard/timedsource.hh	/^    enum { h_data, h_interval, h_active, h_reset, h_headroom };$/;"	e	enum:TimedSource::__anon189
h_reset	elements/standard/unqueue.hh	/^	h_active, h_reset, h_burst, h_limit$/;"	e	enum:Unqueue::__anon175
h_reset_counts	elements/ethernet/etherpausesource.hh	/^    enum { h_limit, h_active, h_src, h_dst, h_pausetime, h_reset_counts };$/;"	e	enum:EtherPauseSource::__anon234
h_reset_counts	elements/linuxmodule/fromdevice.hh	/^    enum { h_active, h_calls, h_reset_counts, h_length };$/;"	e	enum:FromDevice::__anon305
h_reset_counts	elements/standard/discard.hh	/^    enum { h_reset_counts = 0, h_active = 1 };$/;"	e	enum:Discard::__anon188
h_sample	elements/standard/randomsample.hh	/^    enum { h_sample, h_drop, h_config };$/;"	e	enum:RandomSample::__anon187
h_schedule_after	elements/test/timertest.hh	/^    enum { h_scheduled, h_expiry, h_schedule_after, h_unschedule };$/;"	e	enum:TimerTest::__anon407
h_scheduled	elements/test/timertest.hh	/^    enum { h_scheduled, h_expiry, h_schedule_after, h_unschedule };$/;"	e	enum:TimerTest::__anon407
h_signal	elements/userlevel/todevice.hh	/^    enum { h_debug, h_signal, h_pulls, h_q };$/;"	e	enum:ToDevice::__anon208
h_size	elements/ip/iprewriterbase.hh	/^	h_size = -4, h_capacity = -5, h_clear = -6$/;"	e	enum:IPRewriterBase::__anon331
h_special_flags	include/click/handler.hh	/^	h_special_flags = h_read | h_write | h_read_param | h_read_comprehensive | h_write_comprehensive$/;"	e	enum:Handler::Flags
h_src	elements/ethernet/etherpausesource.hh	/^    enum { h_limit, h_active, h_src, h_dst, h_pausetime, h_reset_counts };$/;"	e	enum:EtherPauseSource::__anon234
h_start	elements/analysis/timefilter.hh	/^	h_start, h_end, h_interval, h_extend_interval$/;"	e	enum:TimeFilter::__anon266
h_stats	elements/ethernet/arpquerier.hh	/^    enum { h_table, h_table_xml, h_stats, h_insert, h_delete, h_clear,$/;"	e	enum:ARPQuerier::__anon236
h_table	elements/ethernet/arpquerier.hh	/^    enum { h_table, h_table_xml, h_stats, h_insert, h_delete, h_clear,$/;"	e	enum:ARPQuerier::__anon236
h_table	elements/ethernet/arptable.hh	/^	h_table, h_insert, h_delete, h_clear$/;"	e	enum:ARPTable::__anon240
h_table_xml	elements/ethernet/arpquerier.hh	/^    enum { h_table, h_table_xml, h_stats, h_insert, h_delete, h_clear,$/;"	e	enum:ARPQuerier::__anon236
h_uncommon	include/click/handler.hh	/^	h_uncommon = 0x0400,	\/\/\/< @brief User interfaces should not display$/;"	e	enum:Handler::Flags
h_unquote_param	include/click/handlercall.hh	/^	h_preinitialize = 4, h_unquote_param = 8$/;"	e	enum:HandlerCall::Flags
h_unschedule	elements/test/timertest.hh	/^    enum { h_scheduled, h_expiry, h_schedule_after, h_unschedule };$/;"	e	enum:TimerTest::__anon407
h_user_flag_0	include/click/handler.hh	/^	h_user_flag_0 = 1 << h_user_flag_shift,$/;"	e	enum:Handler::Flags
h_user_flag_shift	include/click/handler.hh	/^	h_user_flag_shift = 25,$/;"	e	enum:Handler::Flags
h_vlan_id	elements/ethernet/ethervlanannoencap.hh	/^    enum { h_vlan_id, h_vlan_pcp };$/;"	e	enum:EtherVLANAnnoEncap::__anon235
h_vlan_pcp	elements/ethernet/ethervlanannoencap.hh	/^    enum { h_vlan_id, h_vlan_pcp };$/;"	e	enum:EtherVLANAnnoEncap::__anon235
h_vlan_tci	elements/ethernet/ethervlanencap.hh	/^    enum { h_config, h_vlan_tci };$/;"	e	enum:EtherVLANEncap::__anon238
h_vlan_tci	elements/ethernet/setvlananno.hh	/^    enum { h_config, h_vlan_tci };$/;"	e	enum:SetVLANAnno::__anon239
h_vlan_tci	elements/ethernet/vlanencap.hh	/^    enum { h_config, h_vlan_tci };$/;"	e	enum:VLANEncap::__anon237
h_write	include/click/handler.hh	/^	h_write = 0x0002,	\/\/\/< @brief Handler supports write operations.$/;"	e	enum:Handler::Flags
h_write	include/click/handlercall.hh	/^	h_write = Handler::h_write,$/;"	e	enum:HandlerCall::Flags
h_write_comprehensive	include/click/handler.hh	/^	h_write_comprehensive = 0x0010,$/;"	e	enum:Handler::Flags
h_write_private	include/click/handler.hh	/^	h_write_private = 0x0100,\/\/\/< @brief Write handler private (invisible$/;"	e	enum:Handler::Flags
half_bits	include/click/type_traits.hh	/^    static constexpr int half_bits = int(sizeof(type) * 4);$/;"	m	struct:make_fast_half_integer
half_limb_bits	include/click/bigint.hh	/^	half_limb_bits = sizeof(limb_type) * 4$/;"	e	enum:Bigint::__anon475
half_limb_type	include/click/bigint.hh	/^    typedef Lhalf half_limb_type;$/;"	t	class:Bigint
half_type	include/click/type_traits.hh	/^    typedef Thalf half_type;$/;"	t	struct:make_fast_half_integer
half_value	include/click/type_traits.hh	/^    static constexpr type half_value = type(1) << half_bits;$/;"	m	struct:make_fast_half_integer
handle	bsdmodule/clickfs_tree.hh	/^	    int handle;$/;"	m	struct:clickfs_dirent::__anon34::handle_struct
handle	bsdmodule/clickfs_tree.hh	/^	} handle;$/;"	m	union:clickfs_dirent::__anon34	typeref:struct:clickfs_dirent::__anon34::handle_struct
handle	elements/icmp/icmprewriter.cc	/^ICMPRewriter::handle(WritablePacket *p)$/;"	f	class:ICMPRewriter
handleErrCode	apps/ClickController/ControlSocket.java	/^    private void handleErrCode(int code, String elementName, $/;"	m	class:ControlSocket	file:
handleWriteResponse	apps/ClickController/ControlSocket.java	/^    private void handleWriteResponse(String elementName, String handlerName)$/;"	m	class:ControlSocket	file:
handle_drop	elements/aqm/pi.cc	/^PI::handle_drop(Packet *p)$/;"	f	class:PI
handle_drop	elements/aqm/red.cc	/^RED::handle_drop(Packet *p)$/;"	f	class:RED
handle_err_code	apps/csclient/csclient.cc	/^ControlSocketClient::handle_err_code(int code)$/;"	f	class:ControlSocketClient
handle_fragment	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::handle_fragment(Packet *p, HostPairInfo *hpinfo)$/;"	f	class:AggregateIPFlows
handle_host	elements/grid/gridsrforwarder.cc	/^GridSRForwarder::handle_host(Packet *p)$/;"	f	class:GridSRForwarder
handle_icmp	elements/analysis/anonipaddr.cc	/^AnonymizeIPAddr::handle_icmp(WritablePacket *q)$/;"	f	class:AnonymizeIPAddr
handle_inward	elements/ip6/addresstranslator.cc	/^AddressTranslator::handle_inward(Packet *p)$/;"	f	class:AddressTranslator
handle_ip	elements/ethernet/arpquerier.cc	/^ARPQuerier::handle_ip(Packet *p, bool response)$/;"	f	class:ARPQuerier
handle_ip4	elements/ip6/protocoltranslator46.cc	/^ProtocolTranslator46::handle_ip4(Packet *p)$/;"	f	class:ProtocolTranslator46
handle_ip6	elements/ethernet/ip6ndsolicitor.cc	/^IP6NDSolicitor::handle_ip6(Packet *p)$/;"	f	class:IP6NDSolicitor
handle_ip6	elements/ip6/protocoltranslator64.cc	/^ProtocolTranslator64::handle_ip6(Packet *p)$/;"	f	class:ProtocolTranslator64
handle_multipacket	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::handle_multipacket(Packet *p)$/;"	f	class:FromIPSummaryDump
handle_multipacket	elements/analysis/fromnetflowsumdump.cc	/^FromNetFlowSummaryDump::handle_multipacket(Packet *p)$/;"	f	class:FromNetFlowSummaryDump
handle_nbr_encap	elements/grid/floodinglocquerier.cc	/^FloodingLocQuerier::handle_nbr_encap(Packet *p)$/;"	f	class:FloodingLocQuerier
handle_options	elements/ip/ipgwoptions.cc	/^IPGWOptions::handle_options(Packet *p)$/;"	f	class:IPGWOptions
handle_outward	elements/ip6/addresstranslator.cc	/^AddressTranslator::handle_outward(Packet *p)$/;"	f	class:AddressTranslator
handle_packet	elements/analysis/aggregateip.cc	/^AggregateIP::handle_packet(Packet *p)$/;"	f	class:AggregateIP
handle_packet	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::handle_packet(Packet *p)$/;"	f	class:AggregateIPFlows
handle_packet	elements/analysis/aggregatelen.cc	/^AggregateLength::handle_packet(Packet *p)$/;"	f	class:AggregateLength
handle_packet	elements/tcpudp/snooptcp.cc	/^SnoopTCP::handle_packet(int port, Packet *p)$/;"	f	class:SnoopTCP
handle_packet_from_click	ns/nsclick-test.cc	/^TestClickSimulator::handle_packet_from_click(simclick_node_t *node,int ifid,$/;"	f	class:TestClickSimulator
handle_query	elements/grid/floodinglocquerier.cc	/^FloodingLocQuerier::handle_query(Packet *p)$/;"	f	class:FloodingLocQuerier
handle_remote	elements/local/OpenFlow/RConn.cc	/^void handle_remote(class RConn *rconnElement)$/;"	f
handle_reply	elements/grid/floodinglocquerier.cc	/^FloodingLocQuerier::handle_reply(Packet *p)$/;"	f	class:FloodingLocQuerier
handle_response	elements/ethernet/arpquerier.cc	/^ARPQuerier::handle_response(Packet *p)$/;"	f	class:ARPQuerier
handle_response	elements/ethernet/ip6ndsolicitor.cc	/^IP6NDSolicitor::handle_response(Packet *p)$/;"	f	class:IP6NDSolicitor
handle_router	tools/click-mkmindriver/click-mkmindriver.cc	/^handle_router(Mindriver& md, String filename_in, const ElementMap &default_map, ErrorHandler *errh)$/;"	f	file:
handle_schedule_from_click	ns/nsclick-test.cc	/^TestClickSimulator::handle_schedule_from_click(simclick_node_t *node,$/;"	f	class:TestClickSimulator
handle_special_argtype_for_keyword	lib/confparse.cc	/^handle_special_argtype_for_keyword(cp_value *val, const String &rest)$/;"	f	file:
handle_struct	bsdmodule/clickfs_tree.hh	/^	struct handle_struct {$/;"	s	union:clickfs_dirent::__anon34
handle_syn	elements/tcpudp/statelesstcpresp.cc	/^StatelessTCPResponder::handle_syn(Packet *p, const click_tcp *tcph)$/;"	f	class:StatelessTCPResponder
handle_timer_bcast	elements/grid/linktester.cc	/^LinkTester::handle_timer_bcast(const Timestamp &tv)$/;"	f	class:LinkTester
handle_timer_listening	elements/grid/linktester.cc	/^LinkTester::handle_timer_listening(const Timestamp &tv)$/;"	f	class:LinkTester
handle_timer_unicast	elements/grid/linktester.cc	/^LinkTester::handle_timer_unicast(const Timestamp &tv)$/;"	f	class:LinkTester
handle_timer_waiting	elements/grid/linktester.cc	/^LinkTester::handle_timer_waiting(const Timestamp &tv)$/;"	f	class:LinkTester
handle_update	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::handle_update(RTEntry new_r, const bool was_sender, const unsigned int jiff)$/;"	f	class:DSDVRouteTable
handler	apps/clicky/src/dstyle.hh	/^    String handler;$/;"	m	struct:clicky::dactivity_style
handler	elements/test/blockthread.cc	/^BlockThread::handler(int, String &str, Element *, const Handler *, ErrorHandler *errh)$/;"	f	class:BlockThread
handler	elements/test/neighborhoodtest.cc	/^NeighborhoodTest::handler(int, String &data, Element *element,$/;"	f	class:NeighborhoodTest
handler	include/click/handlercall.hh	/^    const Handler *handler() const {$/;"	f	class:HandlerCall
handler	include/click/master.hh	/^	String handler;$/;"	m	struct:Master::SignalInfo
handler	lib/router.cc	/^Router::handler(const Element* e, const String& hname)$/;"	f	class:Router
handler	lib/router.cc	/^Router::handler(const Router *router, int hindex)$/;"	f	class:Router
handlerName	apps/ClickController/ControlSocket.java	/^	String handlerName;$/;"	f	class:ControlSocket.HandlerInfo
handler_bad_format	apps/csclient/csclient.hh	/^    handler_bad_format, \/* bad format in calling handler *\/$/;"	e	enum:ControlSocketClient::err_t
handler_box	apps/clicky/src/whandler.hh	/^    GtkBox *handler_box() const {$/;"	f	struct:clicky::whandler
handler_do_write	linuxmodule/clickfs.cc	/^handler_do_write(struct file *filp, void *address_ptr)$/;"	f	file:
handler_err	apps/csclient/csclient.hh	/^    handler_err,        \/* handler returned an error *\/$/;"	e	enum:ControlSocketClient::err_t
handler_error	lib/handlercall.cc	/^handler_error(Element* e, const String &hname, bool write, ErrorHandler* errh)$/;"	f	file:
handler_flush	linuxmodule/clickfs.cc	/^handler_flush(struct file *filp$/;"	f	file:
handler_hook	elements/userlevel/khandlerproxy.cc	/^KernelHandlerProxy::handler_hook(int op, String& str, Element* e, const Handler* handler, ErrorHandler* errh)$/;"	f	class:KernelHandlerProxy
handler_info_array	elements/grid/gridheaderinfo.cc	/^handler_info_array[] = {$/;"	v	file:
handler_info_t	apps/csclient/csclient.hh	/^    handler_info_t() : can_read(false), can_write(false) { }$/;"	f	struct:ControlSocketClient::handler_info_t
handler_info_t	apps/csclient/csclient.hh	/^  struct handler_info_t {$/;"	s	class:ControlSocketClient
handler_interest	apps/clicky/src/dwidget.cc	/^handler_value *delt::handler_interest(crouter *cr, const String &hname,$/;"	f	class:clicky::delt
handler_ioctl	linuxmodule/clickfs.cc	/^handler_ioctl(struct inode *inode, struct file *filp,$/;"	f	file:
handler_name	apps/clicky/src/hvalues.hh	/^    String handler_name() const {$/;"	f	class:clicky::handler_value
handler_name	apps/csclient/csclient.hh	/^    string handler_name;$/;"	m	struct:ControlSocketClient::handler_info_t
handler_name_to_file_name	elements/userlevel/khandlerproxy.cc	/^KernelHandlerProxy::handler_name_to_file_name(const String &str)$/;"	f	class:KernelHandlerProxy
handler_names	tools/click-fastclassifier/click-fastclassifier.hh	/^    Vector<String> handler_names;$/;"	m	struct:Classifier_Program
handler_no_perm	apps/csclient/csclient.hh	/^    handler_no_perm,    \/* router denied access to the specified handler *\/$/;"	e	enum:ControlSocketClient::err_t
handler_open	linuxmodule/clickfs.cc	/^handler_open(struct inode *inode, struct file *filp)$/;"	f	file:
handler_pm	apps/clicky/src/dstyle.cc	/^static dcss_propmatch handler_pm[] = {$/;"	m	namespace:clicky	file:
handler_pmp	apps/clicky/src/dstyle.cc	/^static dcss_propmatch *handler_pmp[num_handler_pm];$/;"	m	namespace:clicky	file:
handler_read	linuxmodule/clickfs.cc	/^handler_read(struct file *filp, char *buffer, size_t count, loff_t *store_f_pos)$/;"	f	file:
handler_release	linuxmodule/clickfs.cc	/^handler_release(struct inode *, struct file *filp)$/;"	f	file:
handler_strings	linuxmodule/clickfs.cc	/^static String *handler_strings = 0;$/;"	v	file:
handler_strings_cap	linuxmodule/clickfs.cc	/^static int handler_strings_cap = 0;$/;"	v	file:
handler_strings_free	linuxmodule/clickfs.cc	/^static int handler_strings_free = -1;$/;"	v	file:
handler_strings_info	linuxmodule/clickfs.cc	/^static HandlerStringInfo *handler_strings_info = 0;$/;"	v	file:
handler_strings_lock	linuxmodule/clickfs.cc	/^static spinlock_t handler_strings_lock;$/;"	v	file:
handler_style	apps/clicky/src/dstyle.cc	/^ref_ptr<dhandler_style> dcss_set::handler_style(crouter *cr, const delt *e, const handler_value *hv)$/;"	f	class:clicky::dcss_set
handler_unlocked_ioctl	linuxmodule/clickfs.cc	/^handler_unlocked_ioctl(struct file *filp,$/;"	f	file:
handler_value	apps/clicky/src/hvalues.hh	/^    handler_value(const String &hname)$/;"	f	class:clicky::handler_value
handler_value	apps/clicky/src/hvalues.hh	/^class handler_value { public:$/;"	c	namespace:clicky
handler_value	tools/click-fastclassifier/click-fastclassifier.cc	/^Classifier_Program::handler_value(const String &name) const$/;"	f	class:Classifier_Program
handler_value_iterator	apps/clicky/src/hvalues.hh	/^    inline handler_value_iterator(handler_value *v)$/;"	f	struct:clicky::handler_value_iterator
handler_value_iterator	apps/clicky/src/hvalues.hh	/^struct handler_value_iterator {$/;"	s	namespace:clicky
handler_values	apps/clicky/src/hvalues.cc	/^handler_values::handler_values(crouter *cr)$/;"	f	class:clicky::handler_values
handler_values	apps/clicky/src/hvalues.hh	/^struct handler_values {$/;"	s	namespace:clicky
handler_values	tools/click-fastclassifier/click-fastclassifier.hh	/^    Vector<String> handler_values;$/;"	m	struct:Classifier_Program
handler_write	linuxmodule/clickfs.cc	/^handler_write(struct file *filp, const char *buffer, size_t count, loff_t *store_f_pos)$/;"	f	file:
handlers	apps/clicky/src/wmain.hh	/^    whandler *handlers() const {$/;"	f	class:clicky::wmain
handlers_ready	include/click/router.hh	/^Router::handlers_ready() const$/;"	f	class:Router
hang_under	ns/CUT_BinHeap.h	/^  void hang_under(Node *x, Node* y) {$/;"	f	class:CUT_BinHeap
hard_alloc	lib/bighashmap_arena.cc	/^HashMap_Arena::hard_alloc()$/;"	f	class:HashMap_Arena
hard_allocate	lib/hashallocator.cc	/^void *HashAllocator::hard_allocate()$/;"	f	class:HashAllocator
hard_assign_vm	lib/notifier.cc	/^NotifierSignal::hard_assign_vm(const NotifierSignal &x)$/;"	f	class:NotifierSignal
hard_change_relative_pixel	apps/clicky/src/dstyle.cc	/^bool dcss_property::hard_change_relative_pixel() const$/;"	f	class:clicky::dcss_property
hard_change_type	apps/clicky/src/dstyle.cc	/^bool dcss_property::hard_change_type(int t) const$/;"	f	class:clicky::dcss_property
hard_derive_one	lib/notifier.cc	/^NotifierSignal::hard_derive_one(atomic_uint32_t *value, uint32_t mask)$/;"	f	class:NotifierSignal
hard_equals	lib/notifier.cc	/^NotifierSignal::hard_equals(const vmpair *a, const vmpair *b)$/;"	f	class:NotifierSignal
hard_field_missing	elements/analysis/ipsumdumpinfo.cc	/^bool hard_field_missing(const PacketDesc &d, int proto, int l)$/;"	f	namespace:IPSummaryDump
hard_find_placeholder	apps/clicky/src/hvalues.cc	/^handler_value *handler_values::hard_find_placeholder(const String &hname,$/;"	f	class:clicky::handler_values
hard_flag_value	tools/lib/etraits.cc	/^ElementTraits::hard_flag_value(const String &str) const$/;"	f	class:ElementTraits
hard_flow_code_override	lib/router.cc	/^Router::hard_flow_code_override(int eindex) const$/;"	f	class:Router
hard_home_thread_id	lib/router.cc	/^Router::hard_home_thread_id(const Element *e) const$/;"	f	class:Router
hard_implies_short_ok	elements/standard/classification.cc	/^Insn::hard_implies_short_ok(bool direction, const Insn &x,$/;"	f	class:Classification::Wordwise::Insn
hard_lower	lib/string.cc	/^hard_lower(const String &s, int pos)$/;"	f	file:
hard_make_ip	elements/analysis/ipsumdumpinfo.cc	/^bool PacketOdesc::hard_make_ip()$/;"	f	class:IPSummaryDump::PacketOdesc
hard_make_transp	elements/analysis/ipsumdumpinfo.cc	/^bool PacketOdesc::hard_make_transp()$/;"	f	class:IPSummaryDump::PacketOdesc
hard_match_context	apps/clicky/src/dstyle.cc	/^bool dcss::hard_match_context(crouter *cr, const delt *e, int *sensitivity,$/;"	f	class:clicky::dcss
hard_port_position	apps/clicky/src/dwidget.cc	/^double delt::hard_port_position(bool isoutput, int port,$/;"	f	class:clicky::delt
hard_printable	lib/string.cc	/^hard_printable(const String &s, int pos)$/;"	f	file:
hard_timeout	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t hard_timeout;        \/* Max time before discarding (seconds). *\/$/;"	m	struct:ofp_flow_mod
hard_timeout	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t hard_timeout;    \/* Number of seconds before expiration. *\/$/;"	m	struct:ofp_flow_stats
hard_timeout	elements/local/OpenFlow/lib/switch-flow.hh	/^    uint16_t hard_timeout;      \/* Hard expiration time (seconds) *\/$/;"	m	struct:sw_flow
hard_upper	lib/string.cc	/^hard_upper(const String &s, int pos)$/;"	f	file:
has_ca_cert	elements/local/OpenFlow/lib/vconn-ssl.cc	/^static bool has_private_key, has_certificate, has_ca_cert;$/;"	v	file:
has_certificate	elements/local/OpenFlow/lib/vconn-ssl.cc	/^static bool has_private_key, has_certificate, has_ca_cert;$/;"	v	file:
has_conflict	elements/local/OpenFlow/lib/table.hh	/^    int (*has_conflict)(struct sw_table *table, const struct sw_flow_key *key,$/;"	m	struct:sw_table
has_connection	tools/lib/routert.cc	/^RouterT::has_connection(const PortT &hfrom, const PortT &hto) const$/;"	f	class:RouterT
has_context	apps/clicky/src/dstyle.hh	/^    bool has_context() const {$/;"	f	class:clicky::dcss
has_fast_int_multiply	include/click/integers.hh	/^struct has_fast_int_multiply : public false_type {};$/;"	s
has_fast_int_multiply	include/click/integers.hh	/^template<> struct has_fast_int_multiply<unsigned long long> : public true_type {};$/;"	s
has_fast_int_multiply	include/click/integers.hh	/^template<> struct has_fast_int_multiply<unsigned long> : public true_type {};$/;"	s
has_fast_int_multiply	include/click/integers.hh	/^template<> struct has_fast_int_multiply<unsigned> : public true_type {};$/;"	s
has_mac_header	include/click/packet.hh	/^Packet::has_mac_header() const$/;"	f	class:Packet
has_network_header	include/click/packet.hh	/^Packet::has_network_header() const$/;"	f	class:Packet
has_private_key	elements/local/OpenFlow/lib/vconn-ssl.cc	/^static bool has_private_key, has_certificate, has_ca_cert;$/;"	v	file:
has_route_opt	elements/ip6/icmp6error.cc	/^ICMP6Error::has_route_opt(const click_ip6 *)$/;"	f	class:ICMP6Error
has_traits	tools/lib/elementmap.hh	/^ElementMap::has_traits(const String &class_name) const$/;"	f	class:ElementMap
has_transp_proto	elements/ip/ipfilter.hh	/^IPFilter::Primitive::has_transp_proto() const$/;"	f	class:IPFilter::Primitive
has_transport_header	include/click/packet.hh	/^Packet::has_transport_header() const$/;"	f	class:Packet
has_trivial_copy	include/click/etheraddress.hh	/^template<> struct has_trivial_copy<EtherAddress> : public true_type {};$/;"	s
has_trivial_copy	include/click/ip6address.hh	/^template<> struct has_trivial_copy<IP6Address> : public true_type {};$/;"	s
has_trivial_copy	include/click/ipaddress.hh	/^template<> struct has_trivial_copy<IPAddress> : public true_type {};$/;"	s
has_trivial_copy	include/click/timestamp.hh	/^template<> struct has_trivial_copy<Timestamp> : public true_type {};$/;"	s
has_trivial_copy	include/click/type_traits.hh	/^template<> struct has_trivial_copy<char> : public true_type {};$/;"	s
has_trivial_copy	include/click/type_traits.hh	/^template<> struct has_trivial_copy<int> : public true_type {};$/;"	s
has_trivial_copy	include/click/type_traits.hh	/^template<> struct has_trivial_copy<long long> : public true_type {};$/;"	s
has_trivial_copy	include/click/type_traits.hh	/^template<> struct has_trivial_copy<long> : public true_type {};$/;"	s
has_trivial_copy	include/click/type_traits.hh	/^template<> struct has_trivial_copy<short> : public true_type {};$/;"	s
has_trivial_copy	include/click/type_traits.hh	/^template<> struct has_trivial_copy<signed char> : public true_type {};$/;"	s
has_trivial_copy	include/click/type_traits.hh	/^template<> struct has_trivial_copy<unsigned char> : public true_type {};$/;"	s
has_trivial_copy	include/click/type_traits.hh	/^template<> struct has_trivial_copy<unsigned long long> : public true_type {};$/;"	s
has_trivial_copy	include/click/type_traits.hh	/^template<> struct has_trivial_copy<unsigned long> : public true_type {};$/;"	s
has_trivial_copy	include/click/type_traits.hh	/^template<> struct has_trivial_copy<unsigned short> : public true_type {};$/;"	s
has_trivial_copy	include/click/type_traits.hh	/^template<> struct has_trivial_copy<unsigned> : public true_type {};$/;"	s
has_trivial_copy	include/click/type_traits.hh	/^template<typename T> struct has_trivial_copy : public false_type {};$/;"	s
has_trivial_copy	include/click/type_traits.hh	/^template<typename T> struct has_trivial_copy : public integral_constant<bool, __has_trivial_copy(T)> {};$/;"	s
has_trivial_copy	include/click/type_traits.hh	/^template<typename T> struct has_trivial_copy<T *> : public true_type {};$/;"	s
hash	elements/ip/siphmapper.hh	/^  unsigned short hash (K k) const { return tree->search (k)->val; }$/;"	f	class:chash_t
hash2ind	elements/ip/siphmapper.hh	/^  unsigned short hash2ind (K k) const { return tree->search (k)->index; }$/;"	f	class:chash_t
hash_bytes	elements/local/OpenFlow/lib/hash.cc	/^hash_bytes(const void *p_, size_t n, uint32_t basis)$/;"	f
hash_words	elements/local/OpenFlow/lib/hash.cc	/^hash_words(const uint32_t *p, size_t n, uint32_t basis)$/;"	f
hashcode	apps/clicky/src/permstr.hh	/^    inline hashcode_t hashcode() const {$/;"	f	class:PermString
hashcode	elements/analysis/aggregateipaddrpair.cc	/^AggregateIPAddrPair::HostPair::hashcode() const$/;"	f	class:AggregateIPAddrPair::HostPair
hashcode	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::HostPair::hashcode() const$/;"	f	class:AggregateIPFlows::HostPair
hashcode	elements/grid/dsrroutetable.hh	/^inline size_t DSRRouteTable::ForwardedReqKey::hashcode() const {$/;"	f	class:DSRRouteTable::ForwardedReqKey
hashcode	elements/grid/updateroutes.hh	/^    unsigned int hashcode() const { return *(unsigned int *)ip.data(); }$/;"	f	class:UpdateGridRoutes::NbrEntry
hashcode	elements/ipsec/sadatatuple.hh	/^inline hashcode_t SPI::hashcode() const$/;"	f	class:SPI
hashcode	elements/wifi/linktable.hh	/^    inline hashcode_t hashcode() const {$/;"	f	class:IPPair
hashcode	elements/wifi/path.hh	/^inline hashcode_t hashcode(const Path &p)$/;"	f
hashcode	include/click/etheraddress.hh	/^    inline size_t hashcode() const {$/;"	f	class:EtherAddress
hashcode	include/click/hashcode.hh	/^inline hashcode_t hashcode(T * const &x) {$/;"	f
hashcode	include/click/hashcode.hh	/^inline hashcode_t hashcode(T const &x) {$/;"	f
hashcode	include/click/hashcode.hh	/^inline hashcode_t hashcode(char const &x) {$/;"	f
hashcode	include/click/hashcode.hh	/^inline hashcode_t hashcode(int const &x) {$/;"	f
hashcode	include/click/hashcode.hh	/^inline hashcode_t hashcode(int64_t const &x) {$/;"	f
hashcode	include/click/hashcode.hh	/^inline hashcode_t hashcode(long const &x) {$/;"	f
hashcode	include/click/hashcode.hh	/^inline hashcode_t hashcode(long long const &x) {$/;"	f
hashcode	include/click/hashcode.hh	/^inline hashcode_t hashcode(short const &x) {$/;"	f
hashcode	include/click/hashcode.hh	/^inline hashcode_t hashcode(signed char const &x) {$/;"	f
hashcode	include/click/hashcode.hh	/^inline hashcode_t hashcode(uint64_t const &x) {$/;"	f
hashcode	include/click/hashcode.hh	/^inline hashcode_t hashcode(unsigned char const &x) {$/;"	f
hashcode	include/click/hashcode.hh	/^inline hashcode_t hashcode(unsigned const &x) {$/;"	f
hashcode	include/click/hashcode.hh	/^inline hashcode_t hashcode(unsigned long const &x) {$/;"	f
hashcode	include/click/hashcode.hh	/^inline hashcode_t hashcode(unsigned long long const &x) {$/;"	f
hashcode	include/click/hashcode.hh	/^inline hashcode_t hashcode(unsigned short const &x) {$/;"	f
hashcode	include/click/ip6address.hh	/^IP6Address::hashcode() const$/;"	f	class:IP6Address
hashcode	include/click/ip6flowid.hh	/^inline hashcode_t IP6FlowID::hashcode() const$/;"	f	class:IP6FlowID
hashcode	include/click/ipaddress.hh	/^IPAddress::hashcode() const$/;"	f	class:IPAddress
hashcode	include/click/ipflowid.hh	/^inline hashcode_t IPFlowID::hashcode() const$/;"	f	class:IPFlowID
hashcode	include/click/pair.hh	/^inline hashcode_t Pair<T, U>::hashcode() const$/;"	f	class:Pair
hashcode	include/click/string.hh	/^    inline uint32_t hashcode() const {$/;"	f	class:String
hashcode	include/click/string.hh	/^    static inline uint32_t hashcode(const unsigned char *begin,$/;"	f	class:String
hashcode	lib/string.cc	/^String::hashcode(const char *begin, const char *end)$/;"	f	class:String
hashcode	tools/lib/eclasst.hh	/^inline size_t hashcode(const ElementClassT * const &e) {$/;"	f
hashcode_t	include/click/hashcode.hh	/^typedef size_t hashcode_t;	\/\/\/< Typical type for a hashcode() value.$/;"	t
hashcontainer	include/click/hashcontainer.hh	/^    HashContainer<T, A> *hashcontainer() const {$/;"	f	class:HashContainer_iterator
hashcontainer	include/click/hashcontainer.hh	/^    const HashContainer<T, A> *hashcontainer() const {$/;"	f	class:HashContainer_const_iterator
hashkey	apps/clicky/src/hvalues.hh	/^    const String &hashkey() const {$/;"	f	class:clicky::handler_value
hashkey	elements/ethernet/arptable.hh	/^	key_const_reference hashkey() const {$/;"	f	struct:ARPTable::ARPEntry
hashkey	elements/ip/ipfragmentmap.hh	/^	key_const_reference hashkey() const {$/;"	f	struct:IPFragmentMap::Entry
hashkey	elements/ip/iprwmapping.hh	/^    key_const_reference hashkey() const {$/;"	f	class:IPRewriterEntry
hashkey	elements/test/hashtabletest.cc	/^    key_const_reference hashkey() const {$/;"	f	struct:MyHashContainerEntry
hashkey	include/click/hashcode.hh	/^inline typename T::key_const_reference hashkey(const T &x) {$/;"	f
hashkey	include/click/hashcontainer.hh	/^    static key_const_reference hashkey(const T *e) {$/;"	f	class:HashContainer_adapter
hashkey	include/click/hashtable.hh	/^	key_const_reference hashkey() const {$/;"	f	struct:HashTable::elt
hashkey	include/click/pair.hh	/^    inline const T &hashkey() const {$/;"	f	struct:Pair
hashkeyeq	include/click/hashcontainer.hh	/^    static bool hashkeyeq(const key_type &a, const key_type &b) {$/;"	f	class:HashContainer_adapter
hashnext	include/click/hashcontainer.hh	/^    static T *&hashnext(T *e) {$/;"	f	class:HashContainer_adapter
have_file	test/testie	/^sub have_file ($$) {$/;"	s
have_flow	tools/click-align/alignclass.cc	/^ARPQuerierAligner::have_flow(Vector<Alignment>::const_iterator ain, int nin, Vector<Alignment>::iterator aout, int nout, const String &)$/;"	f	class:ARPQuerierAligner
have_flow	tools/click-align/alignclass.cc	/^Aligner::have_flow(Vector<Alignment>::const_iterator ain, int nin, Vector<Alignment>::iterator aout, int nout, const String &flow_code)$/;"	f	class:Aligner
have_flow	tools/click-align/alignclass.cc	/^CombinedAligner::have_flow(Vector<Alignment>::const_iterator ain, int nin, Vector<Alignment>::iterator aout, int nout, const String &flow_code)$/;"	f	class:CombinedAligner
have_flow	tools/click-align/alignclass.cc	/^GeneratorAligner::have_flow(Vector<Alignment>::const_iterator, int, Vector<Alignment>::iterator aout, int nout, const String &)$/;"	f	class:GeneratorAligner
have_flow	tools/click-align/alignclass.cc	/^NullAligner::have_flow(Vector<Alignment>::const_iterator, int, Vector<Alignment>::iterator, int, const String &)$/;"	f	class:NullAligner
have_flow	tools/click-align/alignclass.cc	/^ShifterAligner::have_flow(Vector<Alignment>::const_iterator ain, int nin, Vector<Alignment>::iterator aout, int nout, const String &)$/;"	f	class:ShifterAligner
have_hvalue	apps/clicky/src/hvalues.hh	/^    bool have_hvalue() const {$/;"	f	class:clicky::handler_value
have_icmp_code	elements/analysis/ipsumdumpinfo.hh	/^    bool have_icmp_code : 1;$/;"	m	struct:IPSummaryDump::PacketOdesc
have_icmp_type	elements/analysis/ipsumdumpinfo.hh	/^    bool have_icmp_type : 1;$/;"	m	struct:IPSummaryDump::PacketOdesc
have_input	tools/click-align/click-align.cc	/^RouterAlign::have_input()$/;"	f	class:RouterAlign
have_msi	drivers/e1000-7.x/src/e1000.h	/^	boolean_t have_msi;$/;"	m	struct:e1000_adapter
have_output	tools/click-align/click-align.cc	/^RouterAlign::have_output()$/;"	f	class:RouterAlign
have_required_hparam	apps/clicky/src/hvalues.hh	/^    bool have_required_hparam() const {$/;"	f	class:clicky::handler_value
have_val	include/click/clp.h	/^    int have_val;		\/**< Whether the last option had a value. *\/$/;"	m	struct:Clp_Parser
hdlc	elements/analysis/fromdagdump.hh	/^	uint32_t hdlc;$/;"	m	struct:FromDAGDump::DAGPosCell
hdr	elements/userlevel/fakepcap.hh	/^	struct fake_pcap_pkthdr hdr;	\/* the regular header *\/$/;"	m	struct:fake_modified_pcap_pkthdr	typeref:struct:fake_modified_pcap_pkthdr::fake_pcap_pkthdr
hdr_len	drivers/e1000-4.x/src/e1000_hw.h	/^            uint8_t hdr_len;    \/* Header length *\/$/;"	m	struct:e1000_context_desc::__anon60::__anon61
hdr_len	drivers/e1000-5.x/src/e1000_hw.h	/^            uint8_t hdr_len;    \/* Header length *\/$/;"	m	struct:e1000_context_desc::__anon157::__anon158
hdr_len	drivers/e1000-7.x/src/e1000_hw.h	/^            uint8_t hdr_len;    \/* Header length *\/$/;"	m	struct:e1000_context_desc::__anon114::__anon115
hdr_len	elements/grid/grid.hh	/^    uint8_t hdr_len;		\/\/ sizeof(grid_hdr). Why do we need this? -- it was changing...$/;"	m	struct:grid_hdr
head	bsdmodule/clickfs_tree.hh	/^	    struct clickfs_dirent *head;	\/* Linked list of dir entries *\/$/;"	m	struct:clickfs_dirent::__anon34::dir_struct	typeref:struct:clickfs_dirent::__anon34::dir_struct::clickfs_dirent
head	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	int head;$/;"	m	struct:queue_QL
head	elements/local/OpenFlow/lib/queue.hh	/^    struct ofpbuf *head;        \/* First queued packet, null if n == 0. *\/$/;"	m	struct:ofp_queue	typeref:struct:ofp_queue::ofpbuf
head	elements/standard/drr.hh	/^	Packet *head;$/;"	m	struct:DRRSched::portinfo
head	include/click/standard/storage.hh	/^    index_type head() const		{ return _head; }$/;"	f	class:Storage
head_buf	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^        uint8_t head_buf[264];$/;"	m	class:FlowMpeg2AdaptEncap
header	elements/analysis/fromdagdump.hh	/^	uint32_t header;$/;"	m	struct:FromDAGDump::DAGAAL5Cell
header	elements/analysis/fromdagdump.hh	/^	uint32_t header;$/;"	m	struct:FromDAGDump::DAGATMCell
header	elements/local/FlowNet/papmo/PaPMo.hh	/^	uint8_t header[PAPMO_CAPTURE_HEAD_SIZE];$/;"	m	struct:composed_trace
header	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    struct nicira_header header;$/;"	m	struct:nx_act_config	typeref:struct:nx_act_config::nicira_header
header	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    struct nicira_header header;$/;"	m	struct:nx_flow_end	typeref:struct:nx_flow_end::nicira_header
header	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    struct nicira_header header;$/;"	m	struct:nx_flow_end_config	typeref:struct:nx_flow_end_config::nicira_header
header	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    struct ofp_header header;$/;"	m	struct:nicira_header	typeref:struct:nicira_header::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    struct ofp_extension_header header;$/;"	m	struct:openflow_ext_set_dp_desc	typeref:struct:openflow_ext_set_dp_desc::ofp_extension_header
header	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    struct ofp_extension_header header;$/;"	m	struct:openflow_queue_command_header	typeref:struct:openflow_queue_command_header::ofp_extension_header
header	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    struct ofp_header header;$/;"	m	struct:ofp_extension_header	typeref:struct:ofp_extension_header::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^	struct ofp_header header;$/;"	m	struct:netopen_rate_shape	typeref:struct:netopen_rate_shape::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_header header;   \/* Type OFPT_VENDOR. *\/$/;"	m	struct:ofp_vendor_header	typeref:struct:ofp_vendor_header::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_header header;$/;"	m	struct:ofp_error_msg	typeref:struct:ofp_error_msg::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_header header;$/;"	m	struct:ofp_flow_mod	typeref:struct:ofp_flow_mod::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_header header;$/;"	m	struct:ofp_flow_removed	typeref:struct:ofp_flow_removed::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_header header;$/;"	m	struct:ofp_hello	typeref:struct:ofp_hello::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_header header;$/;"	m	struct:ofp_packet_in	typeref:struct:ofp_packet_in::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_header header;$/;"	m	struct:ofp_packet_out	typeref:struct:ofp_packet_out::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_header header;$/;"	m	struct:ofp_port_mod	typeref:struct:ofp_port_mod::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_header header;$/;"	m	struct:ofp_port_status	typeref:struct:ofp_port_status::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_header header;$/;"	m	struct:ofp_queue_get_config_reply	typeref:struct:ofp_queue_get_config_reply::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_header header;$/;"	m	struct:ofp_queue_get_config_request	typeref:struct:ofp_queue_get_config_request::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_header header;$/;"	m	struct:ofp_stats_reply	typeref:struct:ofp_stats_reply::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_header header;$/;"	m	struct:ofp_stats_request	typeref:struct:ofp_stats_request::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_header header;$/;"	m	struct:ofp_switch_config	typeref:struct:ofp_switch_config::ofp_header
header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_header header;$/;"	m	struct:ofp_switch_features	typeref:struct:ofp_switch_features::ofp_header
header	elements/local/OpenFlow/lib/stp.cc	/^    struct stp_bpdu_header header; \/* Type STP_TYPE_CONFIG. *\/$/;"	m	struct:stp_config_bpdu	typeref:struct:stp_config_bpdu::stp_bpdu_header	file:
header	elements/local/OpenFlow/lib/stp.cc	/^    struct stp_bpdu_header header; \/* Type STP_TYPE_TCN. *\/$/;"	m	struct:stp_tcn_bpdu	typeref:struct:stp_tcn_bpdu::stp_bpdu_header	file:
header_file	tools/click-devirtualize/specializer.hh	/^  String header_file;$/;"	m	struct:ElementTypeInfo
header_file	tools/lib/etraits.hh	/^    String header_file;$/;"	m	struct:ElementTraits
header_status	drivers/e1000-7.x/src/e1000_hw.h	/^            uint16_t header_status;$/;"	m	struct:e1000_rx_desc_packet_split::__anon100::__anon105
header_text	tools/click-devirtualize/cxxclass.cc	/^CxxClass::header_text(StringAccum &sa) const$/;"	f	class:CxxClass
headroom	include/click/packet.hh	/^Packet::headroom() const$/;"	f	class:Packet
heap_element	include/click/timerset.hh	/^	heap_element(Timer *t_)$/;"	f	struct:TimerSet::heap_element
heap_element	include/click/timerset.hh	/^    struct heap_element {$/;"	s	class:TimerSet
heap_less	elements/analysis/timesortedsched.hh	/^    struct heap_less {$/;"	s	class:TimeSortedSched
heap_less	elements/ip/iprwmapping.hh	/^    struct heap_less {$/;"	s	class:IPRewriterFlow
heap_less	include/click/timerset.hh	/^    struct heap_less {$/;"	s	class:TimerSet
heap_place	elements/ip/iprwmapping.hh	/^    struct heap_place {$/;"	s	class:IPRewriterFlow
heap_place	include/click/timerset.hh	/^    struct heap_place {$/;"	s	class:TimerSet
heap_property	ns/CUT_BinHeap.h	/^  bool heap_property(Node *n) {$/;"	f	class:CUT_BinHeap
height	apps/clicky/src/rectangle.hh	/^    double height() const {$/;"	f	struct:rectangle
height_step	apps/clicky/src/dstyle.hh	/^    double height_step;$/;"	m	struct:clicky::delt_size_style
hello_fail	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t hello_fail;$/;"	m	struct:ofpstat::__anon245
hello_hook	elements/etherswitch/spantree.cc	/^EtherSpanTree::hello_hook(Timer *, void *thunk)$/;"	f	class:EtherSpanTree
hello_hook	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::hello_hook()$/;"	f	class:DSDVRouteTable
hello_hook	elements/grid/gridroutetable.cc	/^GridRouteTable::hello_hook(Timer *, void *thunk)$/;"	f	class:GridRouteTable
hello_hook	elements/grid/updateroutes.cc	/^UpdateGridRoutes::hello_hook(Timer *, void *thunk)$/;"	f	class:UpdateGridRoutes
hello_time	elements/local/OpenFlow/lib/stp.cc	/^    int hello_time;                 \/* 8.5.3.5: Time between sending BPDUs. *\/$/;"	m	struct:stp	file:
hello_time	elements/local/OpenFlow/lib/stp.cc	/^    uint16_t hello_time;           \/* 8.5.1.7: Time between BPDU generation. *\/$/;"	m	struct:stp_config_bpdu	file:
hello_timer	elements/local/OpenFlow/lib/stp.cc	/^    struct stp_timer hello_timer;   \/* 8.5.4.1: Hello timer. *\/$/;"	m	struct:stp	typeref:struct:stp::stp_timer	file:
help	click-mkelemmap	/^sub help () {$/;"	s
help	doc/click-elem2man	/^sub help () {$/;"	s
help	test/testie	/^sub help () {$/;"	s
hf_eperm	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t hf_eperm;$/;"	m	struct:ofpstat::__anon246
hf_incompat	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t hf_incompat;$/;"	m	struct:ofpstat::__anon246
hflag_always_notify_delt	apps/clicky/src/hvalues.hh	/^    hflag_always_notify_delt = 1 << 9,$/;"	e	enum:clicky::__anon29
hflag_autorefresh	apps/clicky/src/hvalues.hh	/^    hflag_autorefresh = 1 << 6,$/;"	e	enum:clicky::__anon29
hflag_button	apps/clicky/src/hvalues.hh	/^    hflag_button = 1 << 13,$/;"	e	enum:clicky::__anon29
hflag_calm	apps/clicky/src/hvalues.hh	/^    hflag_calm = 1 << 10,$/;"	e	enum:clicky::__anon29
hflag_checkbox	apps/clicky/src/hvalues.hh	/^    hflag_checkbox = 1 << 14,$/;"	e	enum:clicky::__anon29
hflag_collapse	apps/clicky/src/hvalues.hh	/^    hflag_collapse = 1 << 15,$/;"	e	enum:clicky::__anon29
hflag_dead	apps/clicky/src/hvalues.hh	/^    hflag_dead = 1 << 22,$/;"	e	enum:clicky::__anon29
hflag_default_driver_mask	apps/clicky/src/hvalues.hh	/^    hflag_default_driver_mask = hflag_mandatory_driver_mask$/;"	e	enum:clicky::__anon29
hflag_deprecated	apps/clicky/src/hvalues.hh	/^    hflag_deprecated = 1 << 18,$/;"	e	enum:clicky::__anon29
hflag_expensive	apps/clicky/src/hvalues.hh	/^    hflag_expensive = 1 << 11,$/;"	e	enum:clicky::__anon29
hflag_have_hvalue	apps/clicky/src/hvalues.hh	/^    hflag_have_hvalue = 1 << 5,$/;"	e	enum:clicky::__anon29
hflag_mandatory_driver_mask	apps/clicky/src/hvalues.hh	/^    hflag_mandatory_driver_mask = hflag_r | hflag_w | hflag_rparam | hflag_raw$/;"	e	enum:clicky::__anon29
hflag_multiline	apps/clicky/src/hvalues.hh	/^    hflag_multiline = 1 << 12,$/;"	e	enum:clicky::__anon29
hflag_notify_delt	apps/clicky/src/hvalues.hh	/^    hflag_notify_delt = 1 << 8,$/;"	e	enum:clicky::__anon29
hflag_notify_whandlers	apps/clicky/src/hvalues.hh	/^    hflag_notify_whandlers = 1 << 7,$/;"	e	enum:clicky::__anon29
hflag_outstanding	apps/clicky/src/hvalues.hh	/^    hflag_outstanding = 1 << 21,$/;"	e	enum:clicky::__anon29
hflag_preferences	apps/clicky/src/hvalues.hh	/^    hflag_preferences = 1 << 20,$/;"	e	enum:clicky::__anon29
hflag_private_mask	apps/clicky/src/hvalues.hh	/^    hflag_private_mask = hflag_outstanding$/;"	e	enum:clicky::__anon29
hflag_r	apps/clicky/src/hvalues.hh	/^    hflag_r = 1 << 0,$/;"	e	enum:clicky::__anon29
hflag_raw	apps/clicky/src/hvalues.hh	/^    hflag_raw = 1 << 3,$/;"	e	enum:clicky::__anon29
hflag_refresh	apps/clicky/src/hvalues.hh	/^    hflag_refresh = 1 << 17,$/;"	e	enum:clicky::__anon29
hflag_rparam	apps/clicky/src/hvalues.hh	/^    hflag_rparam = 1 << 2,$/;"	e	enum:clicky::__anon29
hflag_special	apps/clicky/src/hvalues.hh	/^    hflag_special = 1 << 4,$/;"	e	enum:clicky::__anon29
hflag_uncommon	apps/clicky/src/hvalues.hh	/^    hflag_uncommon = 1 << 19,$/;"	e	enum:clicky::__anon29
hflag_visible	apps/clicky/src/hvalues.hh	/^    hflag_visible = 1 << 16,$/;"	e	enum:clicky::__anon29
hflag_w	apps/clicky/src/hvalues.hh	/^    hflag_w = 1 << 1,$/;"	e	enum:clicky::__anon29
hi_dword	drivers/e1000-7.x/src/e1000_hw.h	/^            } hi_dword;$/;"	m	struct:e1000_rx_desc_extended::__anon94::__anon95	typeref:union:e1000_rx_desc_extended::__anon94::__anon95::__anon96
hi_dword	drivers/e1000-7.x/src/e1000_hw.h	/^            } hi_dword;$/;"	m	struct:e1000_rx_desc_packet_split::__anon100::__anon101	typeref:union:e1000_rx_desc_packet_split::__anon100::__anon101::__anon102
hide_actions	apps/clicky/src/whandler.cc	/^void whandler::hide_actions(const String &hname, bool restore)$/;"	f	class:clicky::whandler
high	drivers/e1000-4.x/src/e1000_hw.h	/^    volatile uint32_t high;     \/* receive address high *\/$/;"	m	struct:e1000_rar
high	drivers/e1000-5.x/src/e1000_hw.h	/^    volatile uint32_t high;     \/* receive address high *\/$/;"	m	struct:e1000_rar
high	drivers/e1000-7.x/src/e1000_hw.h	/^    volatile uint32_t high;     \/* receive address high *\/$/;"	m	struct:e1000_rar
high	include/click/bigint.hh	/^    static inline half_limb_type high(limb_type x) {$/;"	f	class:Bigint
high	include/click/type_traits.hh	/^    static half_type high(type x) {$/;"	f	struct:make_fast_half_integer
highlight	apps/clicky/src/dwidget.hh	/^    void highlight(int htype) {$/;"	f	class:clicky::delt
highlight	apps/clicky/src/wdiagram.cc	/^void wdiagram::highlight(delt *e, uint8_t htype,$/;"	f	class:clicky::wdiagram
highlighted	apps/clicky/src/dwidget.hh	/^    bool highlighted(int htype) const {$/;"	f	class:clicky::delt
highlights	apps/clicky/src/dwidget.hh	/^    int highlights() const {$/;"	f	class:clicky::delt
highwater_length	elements/standard/simplequeue.hh	/^    int highwater_length() const		{ return _highwater_length; }$/;"	f	class:SimpleQueue
hindex	lib/router.cc	/^Router::hindex(const Element *e, const String &hname)$/;"	f	class:Router
hinfo	apps/clicky/src/whandler.hh	/^	hinfo(handler_value *hv_)$/;"	f	struct:clicky::whandler::hinfo
hinfo	apps/clicky/src/whandler.hh	/^    struct hinfo {$/;"	s	struct:clicky::whandler
hlen	include/clicknet/dhcp.h	/^	uint8_t  hlen;         \/* hardware address length *\/$/;"	m	struct:click_dhcp
hmac_ctx_st	elements/ipsec/hmac.hh	/^typedef struct hmac_ctx_st$/;"	s
hname	apps/clicky/src/cdriver.hh	/^	String hname;$/;"	m	struct:clicky::csocket_cdriver::msg
hname	apps/clicky/src/hvalues.hh	/^    const String &hname() const {$/;"	f	class:clicky::handler_value
hname_element_displayed	apps/clicky/src/whandler.hh	/^inline bool whandler::hname_element_displayed(const String &hname) const$/;"	f	class:clicky::whandler
hold_timer	elements/local/OpenFlow/lib/stp.cc	/^    struct stp_timer hold_timer;        \/* 8.5.6.3: BPDU rate limit timer. *\/$/;"	m	struct:stp_port	typeref:struct:stp_port::stp_timer	file:
home_thread	lib/element.cc	/^Element::home_thread() const$/;"	f	class:Element
home_thread_id	include/click/router.hh	/^Router::home_thread_id(const Element *e) const$/;"	f	class:Router
home_thread_id	include/click/task.hh	/^	    int16_t home_thread_id;$/;"	m	struct:Task::Status::__anon456
home_thread_id	include/click/task.hh	/^Task::home_thread_id() const$/;"	f	class:Task
home_thread_id	lib/timer.cc	/^Timer::home_thread_id() const$/;"	f	class:Timer
hook	elements/local/OpenFlow/lib/fatal-signal.cc	/^struct hook {$/;"	s	file:
hook	elements/userlevel/handlerproxy.hh	/^	ErrorReceiverHook hook;$/;"	m	struct:HandlerProxy::ErrorReceiver
hook	include/click/task.hh	/^Task::hook() const$/;"	f	class:Task
hook	lib/error.cc	/^    ConversionFunction hook;$/;"	m	struct:ErrorHandler::Conversion	file:
hookLowerLayerQueueLen	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^inline void FlowBWShaperable::hookLowerLayerQueueLen()$/;"	f	class:FlowBWShaperable
hooks	elements/local/OpenFlow/lib/fatal-signal.cc	/^static struct hook hooks[MAX_HOOKS];$/;"	v	typeref:struct:hook	file:
hookup_error	lib/router.cc	/^Router::hookup_error(const Port &p, bool isoutput, const char *message,$/;"	f	class:Router
hops	include/clicknet/dhcp.h	/^	uint8_t  hops;         \/* should be zero in client's message *\/$/;"	m	struct:click_dhcp
hops_travelled	elements/grid/grid.hh	/^    uint8_t hops_travelled;$/;"	m	struct:grid_geocast
hops_travelled	elements/grid/grid.hh	/^  uint8_t hops_travelled;$/;"	m	struct:grid_nbr_encap
horizontal	apps/clicky/src/dwidget.hh	/^    bool horizontal() const {$/;"	f	class:clicky::delt
hostMacAddr	elements/local/OpenFlow/datapath.hh	/^	EtherAddress hostMacAddr;$/;"	m	class:Datapath
host_setup	conf/click-mkclgw.pl	/^sub host_setup {$/;"	s
host_to_net_order	include/click/integers.hh	/^inline char host_to_net_order(char x) {$/;"	f
host_to_net_order	include/click/integers.hh	/^inline int host_to_net_order(int x) {$/;"	f
host_to_net_order	include/click/integers.hh	/^inline int64_t host_to_net_order(int64_t x) {$/;"	f
host_to_net_order	include/click/integers.hh	/^inline long host_to_net_order(long x) {$/;"	f
host_to_net_order	include/click/integers.hh	/^inline long long host_to_net_order(long long x) {$/;"	f
host_to_net_order	include/click/integers.hh	/^inline short host_to_net_order(short x) {$/;"	f
host_to_net_order	include/click/integers.hh	/^inline signed char host_to_net_order(signed char x) {$/;"	f
host_to_net_order	include/click/integers.hh	/^inline uint64_t host_to_net_order(uint64_t x) {$/;"	f
host_to_net_order	include/click/integers.hh	/^inline unsigned char host_to_net_order(unsigned char x) {$/;"	f
host_to_net_order	include/click/integers.hh	/^inline unsigned host_to_net_order(unsigned x) {$/;"	f
host_to_net_order	include/click/integers.hh	/^inline unsigned long host_to_net_order(unsigned long x) {$/;"	f
host_to_net_order	include/click/integers.hh	/^inline unsigned long long host_to_net_order(unsigned long long x) {$/;"	f
host_to_net_order	include/click/integers.hh	/^inline unsigned short host_to_net_order(unsigned short x) {$/;"	f
hosttime	include/clicknet/wifi.h	/^  p80211item_uint32_t hosttime;$/;"	m	struct:__anon498
hotconfig_handler	userlevel/click.cc	/^hotconfig_handler(const String &text, Element *, void *, ErrorHandler *errh)$/;"	f	file:
hotswap_config	bsdmodule/config.cc	/^hotswap_config(const String &s)$/;"	f	file:
hotswap_config	linuxmodule/config.cc	/^hotswap_config(const String &s)$/;"	f	file:
hotswap_element	elements/userlevel/controlsocket.cc	/^ControlSocket::hotswap_element() const$/;"	f	class:ControlSocket
hotswap_element	elements/userlevel/fromdump.cc	/^FromDump::hotswap_element() const$/;"	f	class:FromDump
hotswap_element	elements/userlevel/todump.cc	/^ToDump::hotswap_element() const$/;"	f	class:ToDump
hotswap_element	lib/element.cc	/^Element::hotswap_element() const$/;"	f	class:Element
hotswap_hook	userlevel/click.cc	/^hotswap_hook(Task *, void *)$/;"	f	file:
hotswap_router	include/click/router.hh	/^Router::hotswap_router() const$/;"	f	class:Router
hotswap_router	userlevel/click.cc	/^static Router *hotswap_router;$/;"	v	file:
hotswap_thunk_router	userlevel/click.cc	/^static Router *hotswap_thunk_router;$/;"	v	file:
hparam	apps/clicky/src/hvalues.hh	/^    const String &hparam() const {$/;"	f	class:clicky::handler_value
hsf_ctrl	drivers/e1000-7.x/src/e1000_hw.h	/^    } hsf_ctrl;$/;"	m	union:ich8_hws_flash_ctrl	typeref:struct:ich8_hws_flash_ctrl::ich8_hsflctl
hsf_flregacc	drivers/e1000-7.x/src/e1000_hw.h	/^    } hsf_flregacc;$/;"	m	union:ich8_hws_flash_regacc	typeref:struct:ich8_hws_flash_regacc::ich8_flracc
hsf_status	drivers/e1000-7.x/src/e1000_hw.h	/^    } hsf_status;$/;"	m	union:ich8_hws_flash_status	typeref:struct:ich8_hws_flash_status::ich8_hsfsts
html_entities	tools/click-pretty/html.cc	/^static HashTable<String, String> html_entities;$/;"	v	file:
html_quote_attr	tools/click-pretty/html.cc	/^html_quote_attr(const String &what)$/;"	f
html_quote_text	tools/click-pretty/html.cc	/^html_quote_text(const String &what)$/;"	f
html_unquote	tools/click-pretty/html.cc	/^html_unquote(const char *x, const char *end)$/;"	f
html_unquote	tools/click-pretty/html.hh	/^html_unquote(const String &s)$/;"	f
hton	elements/grid/timeutils.hh	/^hton(const timeval &tv) {$/;"	f
htonll	elements/local/OpenFlow/lib/xtoxll.hh	/^htonll(uint64_t n)$/;"	f
htonq	include/click/integers.hh	/^inline uint64_t htonq(uint64_t x) {$/;"	f
htype	include/clicknet/dhcp.h	/^	uint8_t  htype;        \/* hardware address type *\/$/;"	m	struct:click_dhcp
hv	apps/clicky/src/hvalues.cc	/^    handler_value *hv;$/;"	m	struct:clicky::__anon22::autorefresher	file:
hv	apps/clicky/src/whandler.hh	/^	handler_value *hv;$/;"	m	struct:clicky::whandler::hinfo
hvalue	apps/clicky/src/hvalues.hh	/^    const String &hvalue() const {$/;"	f	class:clicky::handler_value
hvalues	apps/clicky/src/crouter.hh	/^    const handler_values &hvalues() const {$/;"	f	class:clicky::crouter
hvalues	apps/clicky/src/crouter.hh	/^    handler_values &hvalues() {$/;"	f	class:clicky::crouter
hw	drivers/e1000-4.x/src/e1000.h	/^	struct e1000_hw hw;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_hw
hw	drivers/e1000-5.x/src/e1000.h	/^	struct e1000_hw hw;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_hw
hw	drivers/e1000-7.x/src/e1000.h	/^	struct e1000_hw hw;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_hw
hw_addr	drivers/e1000-4.x/src/e1000_hw.h	/^    uint8_t *hw_addr;$/;"	m	struct:e1000_hw
hw_addr	drivers/e1000-5.x/src/e1000_hw.h	/^    uint8_t *hw_addr;$/;"	m	struct:e1000_hw
hw_addr	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t *hw_addr;$/;"	m	struct:e1000_hw
hw_addr	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t hw_addr[OFP_ETH_ALEN]; \/* The hardware address is not$/;"	m	struct:ofp_port_mod
hw_addr	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t hw_addr[OFP_ETH_ALEN];$/;"	m	struct:ofp_phy_port
hw_csum_err	drivers/e1000-4.x/src/e1000.h	/^	uint64_t hw_csum_err;$/;"	m	struct:e1000_adapter
hw_csum_err	drivers/e1000-5.x/src/e1000.h	/^	uint64_t hw_csum_err;$/;"	m	struct:e1000_adapter
hw_csum_err	drivers/e1000-7.x/src/e1000.h	/^	uint64_t hw_csum_err;$/;"	m	struct:e1000_adapter
hw_csum_good	drivers/e1000-4.x/src/e1000.h	/^	uint64_t hw_csum_good;$/;"	m	struct:e1000_adapter
hw_csum_good	drivers/e1000-5.x/src/e1000.h	/^	uint64_t hw_csum_good;$/;"	m	struct:e1000_adapter
hw_csum_good	drivers/e1000-7.x/src/e1000.h	/^	uint64_t hw_csum_good;$/;"	m	struct:e1000_adapter
hw_desc	elements/local/OpenFlow/include/openflow/openflow.hh	/^    char hw_desc[DESC_STR_LEN];        \/* Hardware description. *\/$/;"	m	struct:ofp_desc_stats
hw_fail	drivers/e1000-4.x/src/ans.h	/^    u32 *hw_fail;$/;"	m	struct:_iANSsupport_t
i	apps/clicky/src/dstyle.hh	/^	int i;$/;"	m	union:clicky::dcss_property::__anon20
i	drivers/e1000-4.x/src/e1000_param.c	/^			struct e1000_opt_list { int i; char *str; } *p;$/;"	m	struct:e1000_option::__anon67::__anon69::e1000_opt_list	file:
i	drivers/e1000-5.x/src/e1000_param.c	/^			struct e1000_opt_list { int i; char *str; } *p;$/;"	m	struct:e1000_option::__anon164::__anon166::e1000_opt_list	file:
i	drivers/e1000-7.x/src/e1000_param.c	/^			struct e1000_opt_list { int i; char *str; } *p;$/;"	m	struct:e1000_option::__anon122::__anon124::e1000_opt_list	file:
i	elements/ip/ipfilter.hh	/^	int32_t i;$/;"	m	union:IPFilter::PrimitiveData
i	include/click/clp.h	/^	int i;$/;"	m	union:Clp_Parser::__anon460
i	include/click/confparse.hh	/^	int i;$/;"	m	union:cp_value::__anon478
i	include/click/confparse.hh	/^	int i;$/;"	m	union:cp_value::__anon479
i2ip	conf/make-ip-conf.pl	/^sub i2ip {$/;"	s
i64	include/click/clp.h	/^	int64_t i64;$/;"	m	union:Clp_Parser::__anon460
iANSCommVersion	drivers/e1000-4.x/src/base_comm.h	/^    u32     iANSCommVersion;  \/* iANS supported comm. version *\/$/;"	m	struct:_IANS_BD_PARAM_IDENTIFY
iANSGetReceiveAttributeHeader	drivers/e1000-4.x/src/base_comm.h	582;"	d
iANSGetTransmitAttributeHeader	drivers/e1000-4.x/src/base_comm.h	584;"	d
iANSReserved	drivers/e1000-4.x/src/e1000.h	/^	void *iANSReserved;$/;"	m	struct:e1000_adapter
iANSSignature	drivers/e1000-4.x/src/base_comm.h	/^    u8      iANSSignature[IANS_SIGNATURE_LENGTH]; $/;"	m	struct:_IANS_BD_PARAM_IDENTIFY
iANS_Attribute_ID	drivers/e1000-4.x/src/base_comm.h	/^} iANS_Attribute_ID,  *piANS_Attribute_ID; $/;"	t	typeref:enum:_iANS_Attribute_ID
iANS_status	drivers/e1000-4.x/src/ans.h	/^    u32 iANS_status;         \/* communication to iANS UP\/DOWN*\/$/;"	m	struct:_iANSsupport_t
iANSdata	drivers/e1000-4.x/src/e1000.h	/^	piANSsupport_t iANSdata;$/;"	m	struct:e1000_adapter
iANSsupport_t	drivers/e1000-4.x/src/ans.h	/^} iANSsupport_t, *piANSsupport_t;$/;"	t	typeref:struct:_iANSsupport_t
i_addr1	include/clicknet/wifi.h	/^	uint8_t		i_addr1[WIFI_ADDR_LEN];$/;"	m	struct:click_wifi
i_addr2	include/clicknet/wifi.h	/^	uint8_t		i_addr2[WIFI_ADDR_LEN];$/;"	m	struct:click_wifi
i_addr3	include/clicknet/wifi.h	/^	uint8_t		i_addr3[WIFI_ADDR_LEN];$/;"	m	struct:click_wifi
i_ctx	elements/ipsec/hmac.hh	/^	SHA1_ctx i_ctx;$/;"	m	struct:hmac_ctx_st
i_drop	elements/ip/iprewriterbase.hh	/^	i_drop, i_nochange, i_keep, i_pattern, i_mapper$/;"	e	enum:IPRewriterInput::__anon324
i_dur	include/clicknet/wifi.h	/^	uint16_t	i_dur;$/;"	m	struct:click_wifi
i_fc	include/clicknet/wifi.h	/^	uint8_t		i_fc[2];$/;"	m	struct:click_wifi
i_keep	elements/ip/iprewriterbase.hh	/^	i_drop, i_nochange, i_keep, i_pattern, i_mapper$/;"	e	enum:IPRewriterInput::__anon324
i_mapper	elements/ip/iprewriterbase.hh	/^	i_drop, i_nochange, i_keep, i_pattern, i_mapper$/;"	e	enum:IPRewriterInput::__anon324
i_nochange	elements/ip/iprewriterbase.hh	/^	i_drop, i_nochange, i_keep, i_pattern, i_mapper$/;"	e	enum:IPRewriterInput::__anon324
i_pattern	elements/ip/iprewriterbase.hh	/^	i_drop, i_nochange, i_keep, i_pattern, i_mapper$/;"	e	enum:IPRewriterInput::__anon324
i_seq	include/clicknet/wifi.h	/^	uint16_t	i_seq;$/;"	m	struct:click_wifi
iac	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t iac;$/;"	m	struct:e1000_hw_stats
ialign	tools/click-align/click-align.cc	/^const Alignment &RouterAlign::ialign(const PortT &p) const$/;"	f	class:RouterAlign
ibss	include/clicknet/wifi.h	/^	struct ibss {$/;"	s	struct:wifi_information
ibss	include/clicknet/wifi.h	/^	} ibss;$/;"	m	struct:wifi_information	typeref:struct:wifi_information::ibss
ich8_flracc	drivers/e1000-7.x/src/e1000_hw.h	/^    struct ich8_flracc {$/;"	s	union:ich8_hws_flash_regacc
ich8_hsflctl	drivers/e1000-7.x/src/e1000_hw.h	/^    struct ich8_hsflctl {$/;"	s	union:ich8_hws_flash_ctrl
ich8_hsfsts	drivers/e1000-7.x/src/e1000_hw.h	/^    struct ich8_hsfsts {$/;"	s	union:ich8_hws_flash_status
ich8_hws_flash_ctrl	drivers/e1000-7.x/src/e1000_hw.h	/^union ich8_hws_flash_ctrl {$/;"	u
ich8_hws_flash_regacc	drivers/e1000-7.x/src/e1000_hw.h	/^union ich8_hws_flash_regacc {$/;"	u
ich8_hws_flash_status	drivers/e1000-7.x/src/e1000_hw.h	/^union ich8_hws_flash_status {$/;"	u
icmp6_cksum	include/clicknet/icmp6.h	/^    uint16_t icmp6_cksum;		\/* 16 1's comp csum *\/$/;"	m	struct:click_icmp6
icmp6_cksum	include/clicknet/icmp6.h	/^    uint16_t icmp6_cksum;		\/* 16 1's comp csum *\/$/;"	m	struct:click_icmp6_membership
icmp6_cksum	include/clicknet/icmp6.h	/^    uint16_t icmp6_cksum;		\/* 16 1's comp csum *\/$/;"	m	struct:click_icmp6_paramprob
icmp6_cksum	include/clicknet/icmp6.h	/^    uint16_t icmp6_cksum;		\/* 16 1's comp csum *\/$/;"	m	struct:click_icmp6_pkttoobig
icmp6_cksum	include/clicknet/icmp6.h	/^    uint16_t icmp6_cksum;		\/* 16 1's comp csum *\/$/;"	m	struct:click_icmp6_sequenced
icmp6_cksum	include/clicknet/icmp6.h	/^    uint16_t icmp6_cksum;$/;"	m	struct:click_icmp6_redirect
icmp6_code	include/clicknet/icmp6.h	/^    uint8_t icmp6_code;		\/* one of the ICMP6_CODE_*'s above *\/$/;"	m	struct:click_icmp6
icmp6_code	include/clicknet/icmp6.h	/^    uint8_t icmp6_code;		\/* one of the ICMP6_CODE_*'s above *\/$/;"	m	struct:click_icmp6_membership
icmp6_code	include/clicknet/icmp6.h	/^    uint8_t icmp6_code;		\/* one of the ICMP6_CODE_*'s above *\/$/;"	m	struct:click_icmp6_paramprob
icmp6_code	include/clicknet/icmp6.h	/^    uint8_t icmp6_code;		\/* one of the ICMP6_CODE_*'s above *\/$/;"	m	struct:click_icmp6_pkttoobig
icmp6_code	include/clicknet/icmp6.h	/^    uint8_t icmp6_code;		\/* one of the ICMP6_CODE_*'s above *\/$/;"	m	struct:click_icmp6_sequenced
icmp6_code	include/clicknet/icmp6.h	/^    uint8_t icmp6_code;$/;"	m	struct:click_icmp6_redirect
icmp6_dst	include/clicknet/icmp6.h	/^    struct click_in6_addr icmp6_dst;$/;"	m	struct:click_icmp6_redirect	typeref:struct:click_icmp6_redirect::click_in6_addr
icmp6_identifier	include/clicknet/icmp6.h	/^    uint16_t icmp6_identifier;$/;"	m	struct:click_icmp6_sequenced
icmp6_identifier	include/clicknet/icmp6.h	43;"	d
icmp6_maxdelay	include/clicknet/icmp6.h	/^    uint16_t icmp6_maxdelay;   \/* maximum response delay, in milliseconds *\/$/;"	m	struct:click_icmp6_membership
icmp6_maxdelay	include/clicknet/icmp6.h	46;"	d
icmp6_mtusize	include/clicknet/icmp6.h	/^    uint32_t icmp6_mtusize;			\/* maximum packet size *\/$/;"	m	struct:click_icmp6_pkttoobig
icmp6_pointer	include/clicknet/icmp6.h	/^    uint32_t icmp6_pointer;		\/* which octect in orig. IP6 pkt was a problem *\/$/;"	m	struct:click_icmp6_paramprob
icmp6_pointer	include/clicknet/icmp6.h	45;"	d
icmp6_sequence	include/clicknet/icmp6.h	/^    uint16_t icmp6_sequence;$/;"	m	struct:click_icmp6_sequenced
icmp6_sequence	include/clicknet/icmp6.h	44;"	d
icmp6_target	include/clicknet/icmp6.h	/^    struct click_in6_addr icmp6_target;$/;"	m	struct:click_icmp6_redirect	typeref:struct:click_icmp6_redirect::click_in6_addr
icmp6_type	include/clicknet/icmp6.h	/^    uint8_t icmp6_type;		\/* one of the ICMP6_TYPE_*'s above *\/$/;"	m	struct:click_icmp6
icmp6_type	include/clicknet/icmp6.h	/^    uint8_t icmp6_type;		\/* one of the ICMP6_TYPE_*'s above *\/$/;"	m	struct:click_icmp6_membership
icmp6_type	include/clicknet/icmp6.h	/^    uint8_t icmp6_type;		\/* one of the ICMP6_TYPE_*'s above *\/$/;"	m	struct:click_icmp6_pkttoobig
icmp6_type	include/clicknet/icmp6.h	/^    uint8_t icmp6_type;		\/* one of the ICMP6_TYPE_*'s above *\/$/;"	m	struct:click_icmp6_sequenced
icmp6_type	include/clicknet/icmp6.h	/^    uint8_t icmp6_type;		\/* one of the ICMP_TYPE_*'s above *\/$/;"	m	struct:click_icmp6_paramprob
icmp6_type	include/clicknet/icmp6.h	/^    uint8_t icmp6_type;$/;"	m	struct:click_icmp6_redirect
icmp_cksum	include/clicknet/icmp.h	/^    uint16_t	icmp_cksum;		\/* 2-3   checksum		     *\/$/;"	m	struct:click_icmp
icmp_cksum	include/clicknet/icmp.h	/^    uint16_t	icmp_cksum;		\/* 2-3   checksum		     *\/$/;"	m	struct:click_icmp_needfrag
icmp_cksum	include/clicknet/icmp.h	/^    uint16_t	icmp_cksum;		\/* 2-3   checksum		     *\/$/;"	m	struct:click_icmp_paramprob
icmp_cksum	include/clicknet/icmp.h	/^    uint16_t	icmp_cksum;		\/* 2-3   checksum		     *\/$/;"	m	struct:click_icmp_redirect
icmp_cksum	include/clicknet/icmp.h	/^    uint16_t	icmp_cksum;		\/* 2-3   checksum		     *\/$/;"	m	struct:click_icmp_sequenced
icmp_cksum	include/clicknet/icmp.h	/^    uint16_t	icmp_cksum;		\/* 2-3   checksum		     *\/$/;"	m	struct:click_icmp_tstamp
icmp_code	elements/local/OpenFlow/include/openflow/openflow.hh	560;"	d
icmp_code	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t icmp_code;$/;"	m	struct:icmp_header
icmp_code	include/clicknet/icmp.h	/^    uint8_t	icmp_code;		\/* 1     ICMP code (see below)	     *\/$/;"	m	struct:click_icmp
icmp_code	include/clicknet/icmp.h	/^    uint8_t	icmp_code;		\/* 1     ICMP code (see below)	     *\/$/;"	m	struct:click_icmp_paramprob
icmp_code	include/clicknet/icmp.h	/^    uint8_t	icmp_code;		\/* 1     ICMP code (see below)	     *\/$/;"	m	struct:click_icmp_redirect
icmp_code	include/clicknet/icmp.h	/^    uint8_t	icmp_code;		\/* 1     ICMP code (see below)	     *\/$/;"	m	struct:click_icmp_sequenced
icmp_code	include/clicknet/icmp.h	/^    uint8_t	icmp_code;		\/* 1     ICMP code (see below)	     *\/$/;"	m	struct:click_icmp_tstamp
icmp_code	include/clicknet/icmp.h	/^    uint8_t	icmp_code;		\/* 1     ICMP_UNREACH_NEEDFRAG	     *\/$/;"	m	struct:click_icmp_needfrag
icmp_csum	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t icmp_csum;$/;"	m	struct:icmp_header
icmp_encapsulated_header	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::icmp_encapsulated_header(const Packet *p)$/;"	f	class:AggregateIPFlows
icmp_extract	elements/analysis/ipsumdump_icmp.cc	/^static bool icmp_extract(PacketDesc& d, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
icmp_fields	elements/ip/ipfieldinfo.cc	/^static const StaticNameDB::Entry icmp_fields[] = {$/;"	v	file:
icmp_gateway	include/clicknet/icmp.h	/^    struct in_addr icmp_gateway;	\/* 4-7   address of gateway	     *\/$/;"	m	struct:click_icmp_redirect	typeref:struct:click_icmp_redirect::in_addr
icmp_header	elements/local/OpenFlow/lib/packets.hh	/^struct icmp_header {$/;"	s
icmp_header	include/click/packet.hh	/^Packet::icmp_header() const$/;"	f	class:Packet
icmp_header	include/click/packet.hh	/^WritablePacket::icmp_header() const$/;"	f	class:WritablePacket
icmp_identifier	include/clicknet/icmp.h	/^    uint16_t	icmp_identifier;	\/* 4-5   flow identifier	     *\/$/;"	m	struct:click_icmp_sequenced
icmp_identifier	include/clicknet/icmp.h	/^    uint16_t	icmp_identifier;	\/* 4-5   flow identifier	     *\/$/;"	m	struct:click_icmp_tstamp
icmp_ina	elements/analysis/ipsumdump_icmp.cc	/^static bool icmp_ina(PacketOdesc &d, const String &str, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
icmp_inject	elements/analysis/ipsumdump_icmp.cc	/^static void icmp_inject(PacketOdesc& d, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
icmp_line	elements/ip/ipprint.cc	/^IPPrint::icmp_line(StringAccum &sa, const Packet *p, int transport_length) const$/;"	f	class:IPPrint
icmp_nextmtu	include/clicknet/icmp.h	/^    uint16_t	icmp_nextmtu;		\/* 6-7   Next-Hop MTU		     *\/$/;"	m	struct:click_icmp_needfrag
icmp_originate	include/clicknet/icmp.h	/^    uint32_t	icmp_originate;		\/* 8-11  originate timestamp	     *\/$/;"	m	struct:click_icmp_tstamp
icmp_outa	elements/analysis/ipsumdump_icmp.cc	/^static void icmp_outa(const PacketDesc &d, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
icmp_paramprob_codes	elements/ip/ipnameinfo.cc	/^static const StaticNameDB::Entry icmp_paramprob_codes[] = {$/;"	v	file:
icmp_pointer	include/clicknet/icmp.h	/^    uint8_t	icmp_pointer;		\/* 4     parameter pointer	     *\/$/;"	m	struct:click_icmp_paramprob
icmp_readers	elements/analysis/ipsumdump_icmp.cc	/^static const FieldReader icmp_readers[] = {$/;"	m	namespace:IPSummaryDump	file:
icmp_receive	include/clicknet/icmp.h	/^    uint32_t	icmp_receive;		\/* 12-15 receive timestamp	     *\/$/;"	m	struct:click_icmp_tstamp
icmp_redirect_codes	elements/ip/ipnameinfo.cc	/^static const StaticNameDB::Entry icmp_redirect_codes[] = {$/;"	v	file:
icmp_sequence	include/clicknet/icmp.h	/^    uint16_t	icmp_sequence;		\/* 6-7   sequence number in flow     *\/$/;"	m	struct:click_icmp_sequenced
icmp_sequence	include/clicknet/icmp.h	/^    uint16_t	icmp_sequence;		\/* 6-7   sequence number in flow     *\/$/;"	m	struct:click_icmp_tstamp
icmp_timxceed_codes	elements/ip/ipnameinfo.cc	/^static const StaticNameDB::Entry icmp_timxceed_codes[] = {$/;"	v	file:
icmp_transmit	include/clicknet/icmp.h	/^    uint32_t	icmp_transmit;		\/* 16-19 transmit timestamp	     *\/$/;"	m	struct:click_icmp_tstamp
icmp_type	elements/local/OpenFlow/include/openflow/openflow.hh	559;"	d
icmp_type	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t icmp_type;$/;"	m	struct:icmp_header
icmp_type	include/clicknet/icmp.h	/^    uint8_t	icmp_type;		\/* 0     ICMP type (see below)	     *\/$/;"	m	struct:click_icmp
icmp_type	include/clicknet/icmp.h	/^    uint8_t	icmp_type;		\/* 0     ICMP type (see below)	     *\/$/;"	m	struct:click_icmp_paramprob
icmp_type	include/clicknet/icmp.h	/^    uint8_t	icmp_type;		\/* 0     ICMP type (see below)	     *\/$/;"	m	struct:click_icmp_sequenced
icmp_type	include/clicknet/icmp.h	/^    uint8_t	icmp_type;		\/* 0     ICMP type (see below)	     *\/$/;"	m	struct:click_icmp_tstamp
icmp_type	include/clicknet/icmp.h	/^    uint8_t	icmp_type;		\/* 0     ICMP_REDIRECT (see below)   *\/$/;"	m	struct:click_icmp_redirect
icmp_type	include/clicknet/icmp.h	/^    uint8_t	icmp_type;		\/* 0     ICMP_UNREACH (see below)    *\/$/;"	m	struct:click_icmp_needfrag
icmp_types	elements/ip/ipnameinfo.cc	/^static const StaticNameDB::Entry icmp_types[] = {$/;"	v	file:
icmp_unreach_codes	elements/ip/ipnameinfo.cc	/^static const StaticNameDB::Entry icmp_unreach_codes[] = {$/;"	v	file:
icmp_writers	elements/analysis/ipsumdump_icmp.cc	/^static const FieldWriter icmp_writers[] = {$/;"	m	namespace:IPSummaryDump	file:
icmph	elements/analysis/ipsumdumpinfo.hh	/^    const click_icmp *icmph;$/;"	m	struct:IPSummaryDump::PacketDesc
icr_gpi	drivers/e1000-4.x/src/e1000.h	/^	uint64_t icr_gpi;$/;"	m	struct:e1000_adapter
icr_gpi	drivers/e1000-5.x/src/e1000.h	/^	uint64_t icr_gpi;$/;"	m	struct:e1000_adapter
icr_gpi	drivers/e1000-7.x/src/e1000.h	/^	uint64_t icr_gpi;$/;"	m	struct:e1000_adapter
icr_lsc	drivers/e1000-4.x/src/e1000.h	/^	uint64_t icr_lsc;$/;"	m	struct:e1000_adapter
icr_lsc	drivers/e1000-5.x/src/e1000.h	/^	uint64_t icr_lsc;$/;"	m	struct:e1000_adapter
icr_lsc	drivers/e1000-7.x/src/e1000.h	/^	uint64_t icr_lsc;$/;"	m	struct:e1000_adapter
icr_mdac	drivers/e1000-4.x/src/e1000.h	/^	uint64_t icr_mdac;$/;"	m	struct:e1000_adapter
icr_mdac	drivers/e1000-5.x/src/e1000.h	/^	uint64_t icr_mdac;$/;"	m	struct:e1000_adapter
icr_mdac	drivers/e1000-7.x/src/e1000.h	/^	uint64_t icr_mdac;$/;"	m	struct:e1000_adapter
icr_rxcfg	drivers/e1000-4.x/src/e1000.h	/^	uint64_t icr_rxcfg;$/;"	m	struct:e1000_adapter
icr_rxcfg	drivers/e1000-5.x/src/e1000.h	/^	uint64_t icr_rxcfg;$/;"	m	struct:e1000_adapter
icr_rxcfg	drivers/e1000-7.x/src/e1000.h	/^	uint64_t icr_rxcfg;$/;"	m	struct:e1000_adapter
icr_rxdmt	drivers/e1000-4.x/src/e1000.h	/^	uint64_t icr_rxdmt;$/;"	m	struct:e1000_adapter
icr_rxdmt	drivers/e1000-5.x/src/e1000.h	/^	uint64_t icr_rxdmt;$/;"	m	struct:e1000_adapter
icr_rxdmt	drivers/e1000-7.x/src/e1000.h	/^	uint64_t icr_rxdmt;$/;"	m	struct:e1000_adapter
icr_rxo	drivers/e1000-4.x/src/e1000.h	/^	uint64_t icr_rxo;$/;"	m	struct:e1000_adapter
icr_rxo	drivers/e1000-5.x/src/e1000.h	/^	uint64_t icr_rxo;$/;"	m	struct:e1000_adapter
icr_rxo	drivers/e1000-7.x/src/e1000.h	/^	uint64_t icr_rxo;$/;"	m	struct:e1000_adapter
icr_rxseq	drivers/e1000-4.x/src/e1000.h	/^	uint64_t icr_rxseq;$/;"	m	struct:e1000_adapter
icr_rxseq	drivers/e1000-5.x/src/e1000.h	/^	uint64_t icr_rxseq;$/;"	m	struct:e1000_adapter
icr_rxseq	drivers/e1000-7.x/src/e1000.h	/^	uint64_t icr_rxseq;$/;"	m	struct:e1000_adapter
icr_rxt	drivers/e1000-4.x/src/e1000.h	/^	uint64_t icr_rxt;$/;"	m	struct:e1000_adapter
icr_rxt	drivers/e1000-5.x/src/e1000.h	/^	uint64_t icr_rxt;$/;"	m	struct:e1000_adapter
icr_rxt	drivers/e1000-7.x/src/e1000.h	/^	uint64_t icr_rxt;$/;"	m	struct:e1000_adapter
icr_txdw	drivers/e1000-4.x/src/e1000.h	/^	uint64_t icr_txdw;$/;"	m	struct:e1000_adapter
icr_txdw	drivers/e1000-5.x/src/e1000.h	/^	uint64_t icr_txdw;$/;"	m	struct:e1000_adapter
icr_txdw	drivers/e1000-7.x/src/e1000.h	/^	uint64_t icr_txdw;$/;"	m	struct:e1000_adapter
icr_txqe	drivers/e1000-4.x/src/e1000.h	/^	uint64_t icr_txqe;$/;"	m	struct:e1000_adapter
icr_txqe	drivers/e1000-5.x/src/e1000.h	/^	uint64_t icr_txqe;$/;"	m	struct:e1000_adapter
icr_txqe	drivers/e1000-7.x/src/e1000.h	/^	uint64_t icr_txqe;$/;"	m	struct:e1000_adapter
icrxatc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t icrxatc;$/;"	m	struct:e1000_hw_stats
icrxdmtc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t icrxdmtc;$/;"	m	struct:e1000_hw_stats
icrxoc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t icrxoc;$/;"	m	struct:e1000_hw_stats
icrxptc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t icrxptc;$/;"	m	struct:e1000_hw_stats
ictxatc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t ictxatc;$/;"	m	struct:e1000_hw_stats
ictxptc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t ictxptc;$/;"	m	struct:e1000_hw_stats
ictxqec	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t ictxqec;$/;"	m	struct:e1000_hw_stats
ictxqmtc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t ictxqmtc;$/;"	m	struct:e1000_hw_stats
id	elements/grid/pep_proto.hh	/^  unsigned id;            \/\/ The sender of this packet.$/;"	m	struct:pep_proto
id	elements/grid/pep_proto.hh	/^  unsigned id;$/;"	m	struct:pep_rgn_proto
id	elements/local/FlowNet/common/Flow.hh	/^	uint8_t id[MAX_FLOWID_LEN];$/;"	m	struct:FlowID
id	include/click/simclick.h	/^    int id;			\/* Simulator ID number for the packet *\/$/;"	m	struct:__anon467
id	lib/element.cc	/^Element::id() const$/;"	f	class:Element
id_string	drivers/e1000-4.x/src/e1000.h	/^	char *id_string;$/;"	m	struct:e1000_adapter
id_table	drivers/e1000-4.x/src/kcompat.h	/^	struct pci_device_id *id_table;$/;"	m	struct:_kc_pci_driver	typeref:struct:_kc_pci_driver::pci_device_id
idiag_e1000_diag_eeprom_test_param	drivers/e1000-4.x/src/idiag_e1000.h	/^struct idiag_e1000_diag_eeprom_test_param {$/;"	s
idiag_e1000_diag_intr_test_param	drivers/e1000-4.x/src/idiag_e1000.h	/^enum idiag_e1000_diag_intr_test_param {$/;"	g
idiag_e1000_diag_loopback_mode	drivers/e1000-4.x/src/idiag_e1000.h	/^enum idiag_e1000_diag_loopback_mode {$/;"	g
idiag_e1000_diag_loopback_result	drivers/e1000-4.x/src/idiag_e1000.h	/^enum idiag_e1000_diag_loopback_result {$/;"	g
idiag_e1000_diag_loopback_test_param	drivers/e1000-4.x/src/idiag_e1000.h	/^struct idiag_e1000_diag_loopback_test_param {$/;"	s
idiag_e1000_diag_reg_test_param	drivers/e1000-4.x/src/idiag_e1000.h	/^struct idiag_e1000_diag_reg_test_param {$/;"	s
idiag_pro_data	drivers/e1000-4.x/src/idiag_pro.h	/^struct idiag_pro_data {$/;"	s
idiag_pro_stat	drivers/e1000-4.x/src/idiag_pro.h	/^enum idiag_pro_stat {$/;"	g
idle	include/click/notifier.hh	/^NotifierSignal::idle() const$/;"	f	class:NotifierSignal
idle	include/click/tokenbucket.hh	/^    bool idle() const {$/;"	f	class:TokenBucketX
idle	include/click/tokenbucket.hh	/^    bool idle() const {$/;"	f	class:TokenRateX
idle_echo_xid	elements/local/OpenFlow/lib/rconn.cc	/^    uint32_t idle_echo_xid;$/;"	m	struct:rconn	file:
idle_errors	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t idle_errors;$/;"	m	struct:e1000_phy_stats
idle_errors	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t idle_errors;$/;"	m	struct:e1000_phy_stats
idle_errors	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t idle_errors;$/;"	m	struct:e1000_phy_stats
idle_signal	include/click/notifier.hh	/^NotifierSignal::idle_signal()$/;"	f	class:NotifierSignal
idle_timeout	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t idle_timeout;    \/* Idle time before discarding (seconds). *\/$/;"	m	struct:nx_flow_end
idle_timeout	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t idle_timeout;        \/* Idle time before discarding (seconds). *\/$/;"	m	struct:ofp_flow_mod
idle_timeout	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t idle_timeout;    \/* Idle timeout from original flow mod. *\/$/;"	m	struct:ofp_flow_removed
idle_timeout	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t idle_timeout;    \/* Number of seconds idle before expiration. *\/$/;"	m	struct:ofp_flow_stats
idle_timeout	elements/local/OpenFlow/lib/switch-flow.hh	/^    uint16_t idle_timeout;      \/* Idle time before discarding (seconds). *\/$/;"	m	struct:sw_flow
idlet	tools/click-undead/click-undead.cc	/^static ElementClassT *idlet;$/;"	v	file:
idx	include/click/dequeue.hh	/^  int idx(int i)    const               { return (i + _head) % _cap;  }$/;"	f	class:DEQueue
idx	include/click/router.hh	/^	int idx;$/;"	m	struct:Router::Port
ieee80211_radiotap_header	include/clicknet/radiotap.h	/^struct ieee80211_radiotap_header {$/;"	s
ieee80211_radiotap_type	include/clicknet/radiotap.h	/^enum ieee80211_radiotap_type {$/;"	g
if_mii	drivers/e1000-5.x/src/kcompat.h	622;"	d
if_mii	drivers/e1000-5.x/src/kcompat.h	623;"	d
if_mii	drivers/e1000-7.x/src/kcompat.h	891;"	d
if_mii	drivers/e1000-7.x/src/kcompat.h	892;"	d
ifid	ns/nsclick-test.cc	/^    int ifid;$/;"	m	struct:TestClickSimulator::netif	file:
ifid_	ns/nsclick-test.cc	/^    int ifid_;$/;"	m	class:TestClickSimulator::PacketEvent	file:
ifindex	elements/bsdmodule/anydevice.hh	/^    int ifindex() const			{ return _dev ? _dev->if_index : -1; }$/;"	f	class:AnyDevice
ifindex	elements/linuxmodule/anydevice.hh	/^    int ifindex() const			{ return _dev ? _dev->ifindex : -1; }$/;"	f	class:AnyDevice
ifindex	elements/userlevel/fakepcap.hh	/^	uint32_t ifindex;	\/* index, in *capturing* machine's list of$/;"	m	struct:fake_modified_pcap_pkthdr
ifname	elements/ns/fromsimdevice.hh	/^  String ifname() const			{ return _ifname; }$/;"	f	class:FromSimDevice
ifname	elements/ns/tosimdevice.hh	/^  String ifname() const				{ return _ifname; }$/;"	f	class:ToSimDevice
ifname	elements/userlevel/fromdevice.hh	/^    inline String ifname() const	{ return _ifname; }$/;"	f	class:FromDevice
ifname	elements/userlevel/todevice.hh	/^    String ifname() const			{ return _ifname; }$/;"	f	class:ToDevice
ifs_max_val	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t ifs_max_val;$/;"	m	struct:e1000_hw
ifs_max_val	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t ifs_max_val;$/;"	m	struct:e1000_hw
ifs_max_val	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t ifs_max_val;$/;"	m	struct:e1000_hw
ifs_min_val	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t ifs_min_val;$/;"	m	struct:e1000_hw
ifs_min_val	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t ifs_min_val;$/;"	m	struct:e1000_hw
ifs_min_val	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t ifs_min_val;$/;"	m	struct:e1000_hw
ifs_params_forced	drivers/e1000-4.x/src/e1000_hw.h	/^    boolean_t ifs_params_forced;$/;"	m	struct:e1000_hw
ifs_params_forced	drivers/e1000-5.x/src/e1000_hw.h	/^    boolean_t ifs_params_forced;$/;"	m	struct:e1000_hw
ifs_params_forced	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t ifs_params_forced;$/;"	m	struct:e1000_hw
ifs_ratio	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t ifs_ratio;$/;"	m	struct:e1000_hw
ifs_ratio	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t ifs_ratio;$/;"	m	struct:e1000_hw
ifs_ratio	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t ifs_ratio;$/;"	m	struct:e1000_hw
ifs_step_size	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t ifs_step_size;$/;"	m	struct:e1000_hw
ifs_step_size	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t ifs_step_size;$/;"	m	struct:e1000_hw
ifs_step_size	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t ifs_step_size;$/;"	m	struct:e1000_hw
ignore	elements/standard/averagecounter.hh	/^    uint32_t ignore() const			{ return _ignore; }$/;"	f	class:AverageCounter
ignore_line_directives	tools/lib/lexert.hh	/^    void ignore_line_directives(bool x)	{ _ignore_line_directives = x; }$/;"	f	class:LexerT
ignore_line_directives	tools/lib/toolutils.cc	/^bool ignore_line_directives = false;$/;"	v
ignore_newline	apps/clicky/src/cdriver.hh	/^	bool ignore_newline;$/;"	m	struct:clicky::csocket_cdriver::msg
ignore_rest	lib/confparse.cc	/^  bool ignore_rest;$/;"	m	struct:__anon517::CpVaHelper	file:
ignore_result	include/click/algorithm.hh	/^inline void ignore_result(T result)$/;"	f
iindex_eindex	tools/click-align/click-align.cc	/^RouterAlign::iindex_eindex(int ii) const$/;"	f	class:RouterAlign
iindex_port	tools/click-align/click-align.cc	/^RouterAlign::iindex_port(int ii) const$/;"	f	class:RouterAlign
ilong	lib/clp.c	/^    unsigned ilong : 1;$/;"	m	struct:__anon500	file:
ilongoff	lib/clp.c	/^    unsigned char ilongoff;$/;"	m	struct:__anon500	file:
imandatory	lib/clp.c	/^    unsigned imandatory : 1;$/;"	m	struct:__anon500	file:
implies	elements/standard/classification.cc	/^Insn::implies(const Insn &x, unsigned known_length) const$/;"	f	class:Classification::Wordwise::Insn
implies_not	elements/standard/classification.cc	/^Insn::implies_not(const Insn &x, unsigned known_length) const$/;"	f	class:Classification::Wordwise::Insn
implies_short_ok	elements/standard/classification.hh	/^    inline bool implies_short_ok(bool direction, const Insn &x, bool next_direction, unsigned known_length) const {$/;"	f	struct:Classification::Wordwise::Insn
in	elements/userlevel/socket.hh	/^  union { struct sockaddr_in in; struct sockaddr_un un; } _local;$/;"	m	union:Socket::__anon192	typeref:struct:Socket::__anon192::sockaddr_in
in	elements/userlevel/socket.hh	/^  union { struct sockaddr_in in; struct sockaddr_un un; } _remote;$/;"	m	union:Socket::__anon193	typeref:struct:Socket::__anon193::sockaddr_in
in6_addr	include/click/ip6address.hh	/^    click_in6_addr &in6_addr()			{ return _addr;	}$/;"	f	class:IP6Address
in6_addr	include/click/ip6address.hh	/^    const click_in6_addr &in6_addr() const	{ return _addr;	}$/;"	f	class:IP6Address
in6_cksum	lib/ip6address.cc	/^in6_cksum(const struct click_in6_addr *saddr,$/;"	f
in6_fast_cksum	lib/ip6address.cc	/^in6_fast_cksum(const struct click_in6_addr *saddr,$/;"	f
in6_u	include/clicknet/ip6.h	/^    } in6_u;$/;"	m	struct:click_in6_addr	typeref:union:click_in6_addr::__anon488
in_addr	include/click/ipaddress.hh	/^IPAddress::in_addr() const$/;"	f	class:IPAddress
in_closed	elements/userlevel/controlsocket.hh	/^	bool in_closed;$/;"	m	struct:ControlSocket::connection
in_header	tools/click-devirtualize/cxxclass.hh	/^  bool in_header() const		{ return _in_header; }$/;"	f	class:CxxFunction
in_ifs_mode	drivers/e1000-4.x/src/e1000_hw.h	/^    boolean_t in_ifs_mode;$/;"	m	struct:e1000_hw
in_ifs_mode	drivers/e1000-5.x/src/e1000_hw.h	/^    boolean_t in_ifs_mode;$/;"	m	struct:e1000_hw
in_ifs_mode	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t in_ifs_mode;$/;"	m	struct:e1000_hw
in_pat	conf/click-mkclgw.pl	/^sub in_pat {$/;"	s
in_port	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t in_port;             \/* Packet's input port (OFPP_NONE if none). *\/$/;"	m	struct:ofp_packet_out
in_port	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t in_port;          \/* Input switch port. *\/$/;"	m	struct:ofp_match
in_port	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t in_port;       \/* Port on which frame was received. *\/$/;"	m	struct:ofp_packet_in
in_port	elements/local/OpenFlow/lib/flow.hh	/^    uint16_t in_port;           \/* Input switch port. *\/$/;"	m	struct:flow
in_reset	drivers/e1000-4.x/src/ans.h	/^    u32 *in_reset;$/;"	m	struct:_iANSsupport_t
in_text	elements/userlevel/controlsocket.hh	/^	StringAccum in_text;$/;"	m	struct:ControlSocket::connection
ina	elements/analysis/ipsumdumpinfo.hh	/^    bool (*ina)(PacketOdesc &, const String &, const FieldReader *);$/;"	m	struct:IPSummaryDump::FieldReader
inb	elements/analysis/ipsumdumpinfo.cc	/^const uint8_t *inb(PacketOdesc& d, const uint8_t *s, const uint8_t *end, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
inb	elements/analysis/ipsumdumpinfo.hh	/^    const uint8_t *(*inb)(PacketOdesc &, const uint8_t *, const uint8_t *,$/;"	m	struct:IPSummaryDump::FieldReader
inc	include/click/atomic.hh	/^atomic_uint32_t::inc(volatile uint32_t &x)$/;"	f	class:atomic_uint32_t
inc_error_notification	elements/local/OpenFlow/lib/ofpstat.cc	/^inc_error_notification(struct ofpstat *ifps, struct ofp_header *hdr)$/;"	f	file:
inc_flow_manipulation	elements/local/OpenFlow/lib/ofpstat.cc	/^inc_flow_manipulation(struct ofpstat *ifps, struct ofp_header *hdr)$/;"	f	file:
inc_protocol_message	elements/local/OpenFlow/lib/ofpstat.cc	/^inc_protocol_message(struct ofpstat *ifps, struct ofp_header *hdr)$/;"	f	file:
incl_len	elements/linuxmodule/touserdevice.cc	/^    uint32_t incl_len;	     \/* number of octets of packet saved in file *\/$/;"	m	struct:pcaprec_hdr	file:
incl_len	elements/local/OpenFlow/lib/pcap.cc	/^    uint32_t incl_len;       \/* number of octets of packet saved in file *\/$/;"	m	struct:pcaprec_hdr	file:
includedir	Makefile	/^includedir = \/usr\/local\/include$/;"	m
includedir	linuxmodule/Makefile	/^includedir = \/usr\/local\/include$/;"	m
includedir	tools/lib/Makefile	/^includedir = \/usr\/local\/include$/;"	m
includes	tools/click-devirtualize/specializer.hh	/^  String includes;$/;"	m	struct:ElementTypeInfo
incoming_packet	elements/ns/fromsimdevice.cc	/^FromSimDevice::incoming_packet(int ifid,int ptype,const unsigned char* data,$/;"	f	class:FromSimDevice
incr_ports	elements/bsdmodule/fastudpsrc.cc	/^FastUDPSource::incr_ports()$/;"	f	class:FastUDPSource
incr_ports	elements/linuxmodule/fastudpsrc.cc	/^FastUDPSource::incr_ports()$/;"	f	class:FastUDPSource
incr_ports	elements/linuxmodule/fastudpsrcip6.cc	/^FastUDPSourceIP6::incr_ports()$/;"	f	class:FastUDPSourceIP6
incr_version	tools/lib/elementmap.hh	/^ElementMap::incr_version() const$/;"	f	class:ElementMap
increase_factor	elements/local/FlowNet/common/FlowNetGod.hh	/^	double increase_factor;$/;"	m	struct:paramset_sourceproxytable
increase_handler_strings	linuxmodule/clickfs.cc	/^increase_handler_strings()$/;"	f	file:
increase_size	include/click/hashallocator.hh	/^    inline void increase_size(size_t new_size) {$/;"	f	class:HashAllocator
increment_hops_travelled	elements/grid/lookupgeogridroute.cc	/^LookupGeographicGridRoute::increment_hops_travelled(WritablePacket *p) const$/;"	f	class:LookupGeographicGridRoute
index	elements/ip/siphmapper.hh	/^  unsigned short index;$/;"	m	class:chash_node_t
index	elements/local/FlowNet/common/Flow.hh	/^	int index;$/;"	m	struct:FlowStat
index	include/click/iptable.hh	/^    int index;$/;"	m	struct:IPTable::Entry
index	include/clicknet/wifi.h	/^		uint8_t 	index;$/;"	m	struct:wifi_information::fh
index1	elements/wifi/rc4.hh	/^	unsigned char	index1;$/;"	m	struct:rc4_state
index2	elements/wifi/rc4.hh	/^	unsigned char	index2;$/;"	m	struct:rc4_state
index2	test/testie	/^sub index2 ($$;$) {$/;"	s
index_in	tools/lib/elementt.cc	/^PortT::index_in(const Vector<PortT> &v, int start) const$/;"	f	class:PortT
index_of	elements/wifi/path.hh	/^inline int index_of(Path p, IPAddress ip) {$/;"	f
index_type	include/click/standard/storage.hh	/^    typedef uint32_t index_type;$/;"	t	class:Storage
ineg	lib/clp.c	/^    unsigned ineg : 1;$/;"	m	struct:__anon500	file:
info	lib/ino.cc	/^ClickIno::info() const$/;"	f	class:ClickIno
info	lib/master.cc	/^Master::info() const$/;"	f	class:Master
info_t	elements/grid/gridheaderinfo.hh	/^  struct info_t {$/;"	s	class:GridHeaderInfo
ingress_speed	elements/local/FlowNet/common/Flow.hh	/^	double ingress_speed;$/;"	m	struct:FlowStat
inherited	include/click/hashcontainer.hh	/^    typedef HashContainer_const_iterator<T, A> inherited;$/;"	t	class:HashContainer_iterator
inherited	include/click/hashmap.hh	/^    typedef HashMap<K, void *> inherited;$/;"	t	class:HashMap
inherited	include/click/hashmap.hh	/^    typedef _HashMap_const_iterator<K, void *> inherited;$/;"	t	class:_HashMap_const_iterator
inherited	include/click/hashmap.hh	/^  typedef _HashMap_const_iterator<K, T *> inherited;$/;"	t	class:_HashMap_iterator
inherited	include/click/hashmap.hh	/^  typedef _HashMap_const_iterator<K, V> inherited;$/;"	t	class:_HashMap_iterator
inherited	include/click/hashmap.hh	/^  typedef _HashMap_const_iterator<K, void *> inherited;$/;"	t	class:_HashMap_iterator
inherited	include/click/hashtable.hh	/^    typedef HashTable_const_iterator<Pair<K, V> > inherited;$/;"	t	class:HashTable_iterator
inherited	include/click/hashtable.hh	/^    typedef HashTable_const_iterator<T> inherited;$/;"	t	class:HashTable_iterator
init	elements/local/FlowNet/common/Flow.cc	/^int Flow::init(int max_queue_size)$/;"	f	class:Flow
init	elements/local/FlowNet/common/PacketQueue.hh	/^inline int PacketQueue::init(int size)$/;"	f	class:PacketQueue
init	elements/local/FlowNet/papmo/PaPMo.cc	/^int papmo::init(int papmo_bs, IPAddress ipaddr )$/;"	f	class:papmo
init	elements/local/OpenFlow/SynchronizedPacketQueue.hh	/^inline int SynchronizedPacketQueue::init(int size)$/;"	f	class:SynchronizedPacketQueue
init	elements/local/OpenFlow/datapath.cc	/^	int (*init)(const void *body, int body_len, void **state);$/;"	m	struct:stats_type	file:
init	ns/CUT_BinHeap.h	/^      void init(Key k, Data d) {$/;"	f	class:CUT_BinHeap::Node
init	tools/click-xform/adjacency.cc	/^AdjacencyMatrix::init(RouterT *r)$/;"	f	class:AdjacencyMatrix
init_MUTEX	drivers/e1000-4.x/src/kcompat.h	306;"	d
init_archive_element	lib/userutils.cc	/^init_archive_element(const String &name, int mode)$/;"	f
init_attr_len_range	elements/local/OpenFlow/lib/netlink.cc	/^void init_attr_len_range()$/;"	f
init_clickfs	linuxmodule/clickfs.cc	/^init_clickfs()$/;"	f
init_err	apps/csclient/csclient.hh	/^    init_err,           \/* tried to perform operation on an unconfigured ControlSocketClient *\/$/;"	e	enum:ControlSocketClient::err_t
init_metric	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::init_metric(RTEntry &r)$/;"	f	class:DSDVRouteTable
init_metric	elements/grid/gridroutetable.cc	/^GridRouteTable::init_metric(RTEntry &r)$/;"	f	class:GridRouteTable
init_module	bsdmodule/module.cc	/^init_module()$/;"	f
init_module	linuxmodule/module.cc	/^init_module()$/;"	f
init_module	linuxmodule/proclikefs.c	/^init_module(void)$/;"	f
init_module_func	lib/userutils.cc	/^typedef int (*init_module_func)(void);$/;"	t	file:
init_of_actions	elements/local/OpenFlow/lib/dp_act.cc	/^void init_of_actions()$/;"	f
init_openflow_multicast_policy	elements/local/OpenFlow/lib/dpif.cc	/^void init_openflow_multicast_policy()$/;"	f
init_openflow_policy	elements/local/OpenFlow/lib/dpif.cc	/^void init_openflow_policy() $/;"	f
init_pattern	tools/click-xform/adjacency.cc	/^AdjacencyMatrix::init_pattern() const$/;"	f	class:AdjacencyMatrix
init_random	elements/grid/linktester.cc	/^LinkTester::init_random()$/;"	f	class:LinkTester
init_router_element_procs	bsdmodule/clickfs_element.cc	/^init_router_element_procs()$/;"	f
init_routes	elements/ip/lookupiproutelinux.cc	/^LinuxIPLookup::init_routes(ErrorHandler *errh)$/;"	f	class:LinuxIPLookup
init_seq	elements/analysis/fromtcpdump.hh	/^	tcp_seq_t init_seq[2];$/;"	m	struct:FromTcpdump::FlowRecord
init_subtree	elements/standard/classification.cc	/^Program::init_subtree() const$/;"	f	class:Classification::Wordwise::Program
init_time	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint64_t init_time;       \/* Time flow started in milliseconds. *\/$/;"	m	struct:nx_flow_end
init_virtual_schedule_slot	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^void PFSchedFW::init_virtual_schedule_slot(uint32_t su)$/;"	f	class:PFSchedFW
inited	elements/local/OpenFlow/lib/timeval.cc	/^static bool inited;$/;"	v	file:
initial_bucket_count	include/click/hashcontainer.hh	/^	initial_bucket_count = 63$/;"	e	enum:HashContainer::__anon468
initial_home_thread_id	elements/threads/staticthreadsched.cc	/^StaticThreadSched::initial_home_thread_id(const Element *e)$/;"	f	class:StaticThreadSched
initial_home_thread_id	lib/router.cc	/^ThreadSched::initial_home_thread_id(const Element *)$/;"	f	class:ThreadSched
initial_processing	tools/lib/processingt.cc	/^ProcessingT::initial_processing(const String &compound_pcode, ErrorHandler *errh)$/;"	f	class:ProcessingT
initial_processing_for	tools/lib/processingt.cc	/^ProcessingT::initial_processing_for(int ei, const String &compound_pcode, ErrorHandler *errh)$/;"	f	class:ProcessingT
initialize	apps/clicky/src/permstr.cc	/^PermString::initialize(const char* s, int length)$/;"	f	class:PermString
initialize	apps/clicky/src/wdiagram.cc	/^void wdiagram::initialize()$/;"	f	class:clicky::wdiagram
initialize	elements/analysis/aggcounter.cc	/^AggregateCounter::initialize(ErrorHandler *errh)$/;"	f	class:AggregateCounter
initialize	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::initialize(ErrorHandler *)$/;"	f	class:AggregatePacketCounter
initialize	elements/analysis/aggregatefirst.cc	/^AggregateFirst::initialize(ErrorHandler *)$/;"	f	class:AggregateFirst
initialize	elements/analysis/aggregateipaddrpair.cc	/^AggregateIPAddrPair::initialize(ErrorHandler *)$/;"	f	class:AggregateIPAddrPair
initialize	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::initialize(ErrorHandler *errh)$/;"	f	class:AggregateIPFlows
initialize	elements/analysis/aggregatelast.cc	/^AggregateLast::initialize(ErrorHandler *)$/;"	f	class:AggregateLast
initialize	elements/analysis/anonipaddr.cc	/^AnonymizeIPAddr::initialize(ErrorHandler *errh)$/;"	f	class:AnonymizeIPAddr
initialize	elements/analysis/fromcapdump.cc	/^FromCapDump::initialize(ErrorHandler *errh)$/;"	f	class:FromCapDump
initialize	elements/analysis/fromdagdump.cc	/^FromDAGDump::initialize(ErrorHandler *errh)$/;"	f	class:FromDAGDump
initialize	elements/analysis/fromflandump.cc	/^FromFlanDump::initialize(ErrorHandler *errh)$/;"	f	class:FromFlanDump
initialize	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::initialize(ErrorHandler *errh)$/;"	f	class:FromIPSummaryDump
initialize	elements/analysis/fromnetflowsumdump.cc	/^FromNetFlowSummaryDump::initialize(ErrorHandler *errh)$/;"	f	class:FromNetFlowSummaryDump
initialize	elements/analysis/fromnlanrdump.cc	/^FromNLANRDump::initialize(ErrorHandler *errh)$/;"	f	class:FromNLANRDump
initialize	elements/analysis/fromtcpdump.cc	/^FromTcpdump::initialize(ErrorHandler *errh)$/;"	f	class:FromTcpdump
initialize	elements/analysis/timefilter.cc	/^TimeFilter::initialize(ErrorHandler *errh)$/;"	f	class:TimeFilter
initialize	elements/analysis/timesortedsched.cc	/^TimeSortedSched::initialize(ErrorHandler *errh)$/;"	f	class:TimeSortedSched
initialize	elements/analysis/timestampaccum.cc	/^TimestampAccum::initialize(ErrorHandler *)$/;"	f	class:TimestampAccum
initialize	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::initialize(ErrorHandler *errh)$/;"	f	class:ToIPFlowDumps
initialize	elements/analysis/toipsumdump.cc	/^ToIPSummaryDump::initialize(ErrorHandler *errh)$/;"	f	class:ToIPSummaryDump
initialize	elements/app/ftpportmapper.cc	/^FTPPortMapper::initialize(ErrorHandler *errh)$/;"	f	class:FTPPortMapper
initialize	elements/aqm/adaptivered.cc	/^AdaptiveRED::initialize(ErrorHandler *errh)$/;"	f	class:AdaptiveRED
initialize	elements/aqm/pi.cc	/^PI::initialize(ErrorHandler *errh)$/;"	f	class:PI
initialize	elements/aqm/red.cc	/^RED::initialize(ErrorHandler *errh)$/;"	f	class:RED
initialize	elements/bsdmodule/anydevice.cc	/^AnyDeviceMap::initialize()$/;"	f	class:AnyDeviceMap
initialize	elements/bsdmodule/fastudpsrc.cc	/^FastUDPSource::initialize(ErrorHandler *)$/;"	f	class:FastUDPSource
initialize	elements/bsdmodule/fromdevice.cc	/^FromDevice::initialize(ErrorHandler *errh)$/;"	f	class:FromDevice
initialize	elements/bsdmodule/fromhost.cc	/^FromHost::initialize(ErrorHandler *errh)$/;"	f	class:FromHost
initialize	elements/bsdmodule/todevice.cc	/^ToDevice::initialize(ErrorHandler *errh)$/;"	f	class:ToDevice
initialize	elements/bsdmodule/tohost.cc	/^ToHost::initialize(ErrorHandler *errh)$/;"	f	class:ToHost
initialize	elements/ethernet/arpfaker.cc	/^ARPFaker::initialize(ErrorHandler *)$/;"	f	class:ARPFaker
initialize	elements/ethernet/arpprint.cc	/^ARPPrint::initialize(ErrorHandler *errh)$/;"	f	class:ARPPrint
initialize	elements/ethernet/arpquerier.cc	/^ARPQuerier::initialize(ErrorHandler *)$/;"	f	class:ARPQuerier
initialize	elements/ethernet/etherpausesource.cc	/^EtherPauseSource::initialize(ErrorHandler *)$/;"	f	class:EtherPauseSource
initialize	elements/ethernet/ip6ndsolicitor.cc	/^IP6NDSolicitor::initialize(ErrorHandler *)$/;"	f	class:IP6NDSolicitor
initialize	elements/etherswitch/spantree.cc	/^EtherSpanTree::initialize(ErrorHandler *)$/;"	f	class:EtherSpanTree
initialize	elements/grid/ackretrysender.cc	/^ACKRetrySender::initialize(ErrorHandler *errh)$/;"	f	class:ACKRetrySender
initialize	elements/grid/ackretrysender2.cc	/^ACKRetrySender2::initialize(ErrorHandler *errh)$/;"	f	class:ACKRetrySender2
initialize	elements/grid/airoinfo.cc	/^AiroInfo::initialize(ErrorHandler *errh)$/;"	f	class:AiroInfo
initialize	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::initialize(ErrorHandler *)$/;"	f	class:DSDVRouteTable
initialize	elements/grid/dsrarptable.cc	/^DSRArpTable::initialize(ErrorHandler *)$/;"	f	class:DSRArpTable
initialize	elements/grid/dsrroutetable.cc	/^DSRRouteTable::initialize(ErrorHandler *)$/;"	f	class:DSRRouteTable
initialize	elements/grid/filterbyhops.cc	/^FilterByGridHops::initialize(ErrorHandler *)$/;"	f	class:FilterByGridHops
initialize	elements/grid/filterbyrange.cc	/^FilterByRange::initialize(ErrorHandler *errh)$/;"	f	class:FilterByRange
initialize	elements/grid/floodinglocquerier.cc	/^FloodingLocQuerier::initialize(ErrorHandler *)$/;"	f	class:FloodingLocQuerier
initialize	elements/grid/gridencap.cc	/^GridEncap::initialize(ErrorHandler *)$/;"	f	class:GridEncap
initialize	elements/grid/gridprobehandler.cc	/^GridProbeHandler::initialize(ErrorHandler *errh)$/;"	f	class:GridProbeHandler
initialize	elements/grid/gridprobereplyreceiver.cc	/^GridProbeReplyReceiver::initialize(ErrorHandler *)$/;"	f	class:GridProbeReplyReceiver
initialize	elements/grid/gridprobesender.cc	/^GridProbeSender::initialize(ErrorHandler *)$/;"	f	class:GridProbeSender
initialize	elements/grid/gridproxy.cc	/^GridProxy::initialize(ErrorHandler *)$/;"	f	class:GridProxy
initialize	elements/grid/gridroutetable.cc	/^GridRouteTable::initialize(ErrorHandler *)$/;"	f	class:GridRouteTable
initialize	elements/grid/gridsrforwarder.cc	/^GridSRForwarder::initialize(ErrorHandler *)$/;"	f	class:GridSRForwarder
initialize	elements/grid/gridtxerror.cc	/^GridTxError::initialize(ErrorHandler *)$/;"	f	class:GridTxError
initialize	elements/grid/hello.cc	/^SendGridHello::initialize(ErrorHandler *)$/;"	f	class:SendGridHello
initialize	elements/grid/incseqno.cc	/^IncrementSeqNo::initialize(ErrorHandler *)$/;"	f	class:IncrementSeqNo
initialize	elements/grid/linkstat.cc	/^LinkStat::initialize(ErrorHandler *errh)$/;"	f	class:LinkStat
initialize	elements/grid/linktester.cc	/^LinkTester::initialize(ErrorHandler *errh)$/;"	f	class:LinkTester
initialize	elements/grid/linktestreceiver.cc	/^LinkTestReceiver::initialize(ErrorHandler *)$/;"	f	class:LinkTestReceiver
initialize	elements/grid/linktracker.cc	/^LinkTracker::initialize(ErrorHandler *)$/;"	f	class:LinkTracker
initialize	elements/grid/locqueryresponder.cc	/^LocQueryResponder::initialize(ErrorHandler *)$/;"	f	class:LocQueryResponder
initialize	elements/grid/lookupgeogridroute.cc	/^LookupGeographicGridRoute::initialize(ErrorHandler *errh)$/;"	f	class:LookupGeographicGridRoute
initialize	elements/grid/lookuplocalgridroute.cc	/^LookupLocalGridRoute::initialize(ErrorHandler *errh)$/;"	f	class:LookupLocalGridRoute
initialize	elements/grid/lookuplocalgridroute2.cc	/^LookupLocalGridRoute2::initialize(ErrorHandler *errh)$/;"	f	class:LookupLocalGridRoute2
initialize	elements/grid/lrhello.cc	/^SendGridLRHello::initialize(ErrorHandler *errh)$/;"	f	class:SendGridLRHello
initialize	elements/grid/movesim.cc	/^MovementSimulator::initialize(ErrorHandler *)$/;"	f	class:MovementSimulator
initialize	elements/grid/pep.cc	/^PEP::initialize(ErrorHandler *)$/;"	f	class:PEP
initialize	elements/grid/pingpong.cc	/^PingPong::initialize(ErrorHandler *)$/;"	f	class:PingPong
initialize	elements/grid/radiosim.cc	/^RadioSim::initialize(ErrorHandler *errh)$/;"	f	class:RadioSim
initialize	elements/grid/regionpep.cc	/^EstimateRouterRegion::initialize(ErrorHandler *)$/;"	f	class:EstimateRouterRegion
initialize	elements/grid/simplelocquerier.cc	/^SimpleLocQuerier::initialize(ErrorHandler *)$/;"	f	class:SimpleLocQuerier
initialize	elements/grid/updateroutes.cc	/^UpdateGridRoutes::initialize(ErrorHandler *)$/;"	f	class:UpdateGridRoutes
initialize	elements/icmp/icmpsendpings.cc	/^ICMPPingSource::initialize(ErrorHandler *errh)$/;"	f	class:ICMPPingSource
initialize	elements/ip/directiplookup.cc	/^DirectIPLookup::Table::initialize()$/;"	f	class:DirectIPLookup::Table
initialize	elements/ip/ipencap.cc	/^IPEncap::initialize(ErrorHandler *)$/;"	f	class:IPEncap
initialize	elements/ip/ipprint.cc	/^IPPrint::initialize(ErrorHandler *errh)$/;"	f	class:IPPrint
initialize	elements/ip/ipratemon.cc	/^IPRateMonitor::initialize(ErrorHandler *errh)$/;"	f	class:IPRateMonitor
initialize	elements/ip/ipreassembler.cc	/^IPReassembler::initialize(ErrorHandler *)$/;"	f	class:IPReassembler
initialize	elements/ip/iprewriterbase.cc	/^IPRewriterBase::initialize(ErrorHandler *errh)$/;"	f	class:IPRewriterBase
initialize	elements/ip/iprwmapping.hh	/^    void initialize(const IPFlowID &flowid, uint32_t output, bool direction) {$/;"	f	class:IPRewriterEntry
initialize	elements/ip/lineariplookup.cc	/^LinearIPLookup::initialize(ErrorHandler *)$/;"	f	class:LinearIPLookup
initialize	elements/ip/lookupiproutelinux.cc	/^LinuxIPLookup::initialize(ErrorHandler *errh)$/;"	f	class:LinuxIPLookup
initialize	elements/ip/lookupiproutemp.cc	/^LookupIPRouteMP::initialize(ErrorHandler *)$/;"	f	class:LookupIPRouteMP
initialize	elements/ip/poundradixiplookup.cc	/^PoundRadixIPLookup::initialize(ErrorHandler *errh) {$/;"	f	class:PoundRadixIPLookup
initialize	elements/ip/rangeiplookup.cc	/^RangeIPLookup::initialize(ErrorHandler *)$/;"	f	class:RangeIPLookup
initialize	elements/ip/ripsend.cc	/^RIPSend::initialize(ErrorHandler *)$/;"	f	class:RIPSend
initialize	elements/ip6/addresstranslator.hh	/^  void initialize(const IP6FlowID & new_flow) { _mapto = new_flow;     }$/;"	f	class:AddressTranslator::Mapping
initialize	elements/ip6/icmp6error.cc	/^ICMP6Error::initialize(ErrorHandler *errh)$/;"	f	class:ICMP6Error
initialize	elements/ip6/lookupip6route.cc	/^LookupIP6Route::initialize(ErrorHandler *)$/;"	f	class:LookupIP6Route
initialize	elements/ipsec/aes.cc	/^Aes::initialize(ErrorHandler *)$/;"	f	class:Aes
initialize	elements/ipsec/des.cc	/^Des::initialize(ErrorHandler *)$/;"	f	class:Des
initialize	elements/ipsec/hmacsha1.cc	/^IPsecAuthHMACSHA1::initialize(ErrorHandler *)$/;"	f	class:IPsecAuthHMACSHA1
initialize	elements/ipsec/ipsecencap.cc	/^IPsecEncap::initialize(ErrorHandler *)$/;"	f	class:IPsecEncap
initialize	elements/ipsec/sha1.cc	/^IPsecAuthSHA1::initialize(ErrorHandler *)$/;"	f	class:IPsecAuthSHA1
initialize	elements/linuxmodule/anydevice.cc	/^AnyDeviceMap::initialize()$/;"	f	class:AnyDeviceMap
initialize	elements/linuxmodule/cpuqueue.cc	/^CPUQueue::initialize(ErrorHandler *errh)$/;"	f	class:CPUQueue
initialize	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows::initialize(ErrorHandler *)$/;"	f	class:FastTCPFlows
initialize	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows::initialize(ErrorHandler *)$/;"	f	class:FastUDPFlows
initialize	elements/linuxmodule/fastudpsrc.cc	/^FastUDPSource::initialize(ErrorHandler *)$/;"	f	class:FastUDPSource
initialize	elements/linuxmodule/fastudpsrcip6.cc	/^FastUDPSourceIP6::initialize(ErrorHandler *)$/;"	f	class:FastUDPSourceIP6
initialize	elements/linuxmodule/fromdevice.cc	/^FromDevice::initialize(ErrorHandler *errh)$/;"	f	class:FromDevice
initialize	elements/linuxmodule/fromhost.cc	/^FromHost::initialize(ErrorHandler *errh)$/;"	f	class:FromHost
initialize	elements/linuxmodule/perfcountaccum.cc	/^PerfCountAccum::initialize(ErrorHandler *errh)$/;"	f	class:PerfCountAccum
initialize	elements/linuxmodule/perfcountuser.cc	/^PerfCountUser::initialize(ErrorHandler *)$/;"	f	class:PerfCountUser
initialize	elements/linuxmodule/polldevice.cc	/^PollDevice::initialize(ErrorHandler *errh)$/;"	f	class:PollDevice
initialize	elements/linuxmodule/schedulelinux.cc	/^ScheduleLinux::initialize(ErrorHandler *errh)$/;"	f	class:ScheduleLinux
initialize	elements/linuxmodule/threadmonitor.cc	/^ThreadMonitor::initialize(ErrorHandler *)$/;"	f	class:ThreadMonitor
initialize	elements/linuxmodule/todevice.cc	/^ToDevice::initialize(ErrorHandler *errh)$/;"	f	class:ToDevice
initialize	elements/linuxmodule/tohost.cc	/^ToHost::initialize(ErrorHandler *errh)$/;"	f	class:ToHost
initialize	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::initialize(ErrorHandler *errh)$/;"	f	class:ToUserDevice
initialize	elements/local/FlowNet/common/FlowNetGod.cc	/^FlowNetGod::initialize(ErrorHandler*)$/;"	f	class:FlowNetGod
initialize	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.cc	/^int PFMpeg2AdaptFW::initialize(ErrorHandler*)$/;"	f	class:PFMpeg2AdaptFW
initialize	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^int PFSchedFW::initialize(ErrorHandler* )$/;"	f	class:PFSchedFW
initialize	elements/local/FlowNet/shaper/PFShapeFW.cc	/^int PFShapeFW::initialize(ErrorHandler*)$/;"	f	class:PFShapeFW
initialize	elements/local/OpenFlow/RConn.cc	/^int RConn::initialize(ErrorHandler*)$/;"	f	class:RConn
initialize	elements/local/OpenFlow/datapath.cc	/^int Datapath::initialize(ErrorHandler*)$/;"	f	class:Datapath
initialize	elements/ns/fromsimdevice.cc	/^FromSimDevice::initialize(ErrorHandler *errh)$/;"	f	class:FromSimDevice
initialize	elements/ns/tosimdevice.cc	/^ToSimDevice::initialize(ErrorHandler *errh)$/;"	f	class:ToSimDevice
initialize	elements/radio/b8b10.cc	/^B8B10::initialize(ErrorHandler *errh)$/;"	f	class:B8B10
initialize	elements/radio/bim.cc	/^BIM::initialize(ErrorHandler *errh)$/;"	f	class:BIM
initialize	elements/standard/annotationinfo.cc	/^AnnotationInfo::initialize(ErrorHandler *errh)$/;"	f	class:AnnotationInfo
initialize	elements/standard/averagecounter.cc	/^AverageCounter::initialize(ErrorHandler *)$/;"	f	class:AverageCounter
initialize	elements/standard/counter.cc	/^Counter::initialize(ErrorHandler *errh)$/;"	f	class:Counter
initialize	elements/standard/delayshaper.cc	/^DelayShaper::initialize(ErrorHandler *)$/;"	f	class:DelayShaper
initialize	elements/standard/delayunqueue.cc	/^DelayUnqueue::initialize(ErrorHandler *errh)$/;"	f	class:DelayUnqueue
initialize	elements/standard/discard.cc	/^Discard::initialize(ErrorHandler *errh)$/;"	f	class:Discard
initialize	elements/standard/discardnofree.cc	/^DiscardNoFree::initialize(ErrorHandler *errh)$/;"	f	class:DiscardNoFree
initialize	elements/standard/drr.cc	/^DRRSched::initialize(ErrorHandler *errh)$/;"	f	class:DRRSched
initialize	elements/standard/errorelement.cc	/^ErrorElement::initialize(ErrorHandler *)$/;"	f	class:ErrorElement
initialize	elements/standard/infinitesource.cc	/^InfiniteSource::initialize(ErrorHandler *errh)$/;"	f	class:InfiniteSource
initialize	elements/standard/linkunqueue.cc	/^LinkUnqueue::initialize(ErrorHandler *errh)$/;"	f	class:LinkUnqueue
initialize	elements/standard/pokehandlers.cc	/^PokeHandlers::initialize(ErrorHandler *)$/;"	f	class:PokeHandlers
initialize	elements/standard/priosched.cc	/^PrioSched::initialize(ErrorHandler *errh)$/;"	f	class:PrioSched
initialize	elements/standard/pullswitch.cc	/^PullSwitch::initialize(ErrorHandler *errh)$/;"	f	class:PullSwitch
initialize	elements/standard/quitwatcher.cc	/^QuitWatcher::initialize(ErrorHandler *errh)$/;"	f	class:QuitWatcher
initialize	elements/standard/randomsample.cc	/^RandomSample::initialize(ErrorHandler *)$/;"	f	class:RandomSample
initialize	elements/standard/ratedsource.cc	/^RatedSource::initialize(ErrorHandler *errh)$/;"	f	class:RatedSource
initialize	elements/standard/ratedunqueue.cc	/^RatedUnqueue::initialize(ErrorHandler *errh)$/;"	f	class:RatedUnqueue
initialize	elements/standard/rrsched.cc	/^RRSched::initialize(ErrorHandler *errh)$/;"	f	class:RRSched
initialize	elements/standard/script.cc	/^Script::initialize(ErrorHandler *errh)$/;"	f	class:Script
initialize	elements/standard/simplequeue.cc	/^SimpleQueue::initialize(ErrorHandler *errh)$/;"	f	class:SimpleQueue
initialize	elements/standard/stridesched.cc	/^StrideSched::initialize(ErrorHandler *)$/;"	f	class:StrideSched
initialize	elements/standard/timedsink.cc	/^TimedSink::initialize(ErrorHandler *)$/;"	f	class:TimedSink
initialize	elements/standard/timedsource.cc	/^TimedSource::initialize(ErrorHandler *)$/;"	f	class:TimedSource
initialize	elements/standard/timedunqueue.cc	/^TimedUnqueue::initialize(ErrorHandler *errh)$/;"	f	class:TimedUnqueue
initialize	elements/standard/unqueue.cc	/^Unqueue::initialize(ErrorHandler *errh)$/;"	f	class:Unqueue
initialize	elements/standard/unqueue2.cc	/^Unqueue2::initialize(ErrorHandler *errh)$/;"	f	class:Unqueue2
initialize	elements/tcpudp/snooptcp.cc	/^SnoopTCP::PCB::initialize(bool is_s, const click_tcp *tcph, int datalen)$/;"	f	class:SnoopTCP::PCB
initialize	elements/tcpudp/snooptcp.cc	/^SnoopTCP::initialize(ErrorHandler *errh)$/;"	f	class:SnoopTCP
initialize	elements/test/bhmtest.cc	/^BigHashMapTest::initialize(ErrorHandler *errh)$/;"	f	class:BigHashMapTest
initialize	elements/test/biginttest.cc	/^BigintTest::initialize(ErrorHandler *errh)$/;"	f	class:BigintTest
initialize	elements/test/clptest.cc	/^CLPTest::initialize(ErrorHandler *errh)$/;"	f	class:CLPTest
initialize	elements/test/comparepackets.cc	/^ComparePackets::initialize(ErrorHandler *)$/;"	f	class:ComparePackets
initialize	elements/test/confparsetest.cc	/^ConfParseTest::initialize(ErrorHandler *errh)$/;"	f	class:ConfParseTest
initialize	elements/test/errortest.cc	/^ErrorTest::initialize(ErrorHandler *init_errh)$/;"	f	class:ErrorTest
initialize	elements/test/functiontest.cc	/^FunctionTest::initialize(ErrorHandler *errh)$/;"	f	class:FunctionTest
initialize	elements/test/handlertask.cc	/^HandlerTask::initialize(ErrorHandler *errh)$/;"	f	class:HandlerTask
initialize	elements/test/hashtabletest.cc	/^HashTableTest::initialize(ErrorHandler *errh)$/;"	f	class:HashTableTest
initialize	elements/test/heaptest.cc	/^HeapTest::initialize(ErrorHandler *errh)$/;"	f	class:HeapTest
initialize	elements/test/listtest.cc	/^ListTest::initialize(ErrorHandler *errh)$/;"	f	class:ListTest
initialize	elements/test/notifierdebug.cc	/^NotifierDebug::initialize(ErrorHandler *)$/;"	f	class:NotifierDebug
initialize	elements/test/nulltask.cc	/^NullTask::initialize(ErrorHandler *errh)$/;"	f	class:NullTask
initialize	elements/test/packettest.cc	/^PacketTest::initialize(ErrorHandler *errh)$/;"	f	class:PacketTest
initialize	elements/test/queuethreadtest.cc	/^QueueThreadTest1::initialize(ErrorHandler *errh)$/;"	f	class:QueueThreadTest1
initialize	elements/test/queuethreadtest.cc	/^QueueThreadTest2::initialize(ErrorHandler *)$/;"	f	class:QueueThreadTest2
initialize	elements/test/queueyanktest.cc	/^QueueYankTest::initialize(ErrorHandler *)$/;"	f	class:QueueYankTest
initialize	elements/test/schedordertest.cc	/^SchedOrderTest::initialize(ErrorHandler* errh)$/;"	f	class:SchedOrderTest
initialize	elements/test/sorttest.cc	/^SortTest::initialize(ErrorHandler *errh)$/;"	f	class:SortTest
initialize	elements/test/timertest.cc	/^TimerTest::initialize(ErrorHandler *)$/;"	f	class:TimerTest
initialize	elements/test/tokenbuckettest.cc	/^TokenBucketTest::initialize(ErrorHandler *errh)$/;"	f	class:TokenBucketTest
initialize	elements/test/vectortest.cc	/^VectorTest::initialize(ErrorHandler *errh)$/;"	f	class:VectorTest
initialize	elements/threads/balancedthreadsched.cc	/^BalancedThreadSched::initialize(ErrorHandler *)$/;"	f	class:BalancedThreadSched
initialize	elements/userlevel/changeuid.cc	/^ChangeUID::initialize(ErrorHandler *errh)$/;"	f	class:ChangeUID
initialize	elements/userlevel/chattersocket.cc	/^ChatterSocket::initialize(ErrorHandler *errh)$/;"	f	class:ChatterSocket
initialize	elements/userlevel/controlsocket.cc	/^ControlSocket::initialize(ErrorHandler *errh)$/;"	f	class:ControlSocket
initialize	elements/userlevel/fromdevice.cc	/^FromDevice::initialize(ErrorHandler *errh)$/;"	f	class:FromDevice
initialize	elements/userlevel/fromdump.cc	/^FromDump::initialize(ErrorHandler *errh)$/;"	f	class:FromDump
initialize	elements/userlevel/fromhost.cc	/^FromHost::initialize(ErrorHandler *errh)$/;"	f	class:FromHost
initialize	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::Flow::initialize(ErrorHandler *errh, int snaplen, bool usepcap)$/;"	f	class:IPFlowRawSockets::Flow
initialize	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::initialize(ErrorHandler *errh)$/;"	f	class:IPFlowRawSockets
initialize	elements/userlevel/kernelfilter.cc	/^KernelFilter::initialize(ErrorHandler *errh)$/;"	f	class:KernelFilter
initialize	elements/userlevel/kerneltun.cc	/^KernelTun::initialize(ErrorHandler *errh)$/;"	f	class:KernelTun
initialize	elements/userlevel/progressbar.cc	/^ProgressBar::initialize(ErrorHandler *errh)$/;"	f	class:ProgressBar
initialize	elements/userlevel/rawsocket.cc	/^RawSocket::initialize(ErrorHandler *errh)$/;"	f	class:RawSocket
initialize	elements/userlevel/socket.cc	/^Socket::initialize(ErrorHandler *errh)$/;"	f	class:Socket
initialize	elements/userlevel/todevice.cc	/^ToDevice::initialize(ErrorHandler *errh)$/;"	f	class:ToDevice
initialize	elements/userlevel/todump.cc	/^ToDump::initialize(ErrorHandler *errh)$/;"	f	class:ToDump
initialize	elements/userlevel/tohost.cc	/^ToHost::initialize(ErrorHandler *errh)$/;"	f	class:ToHost
initialize	elements/userlevel/umlswitch.cc	/^UMLSwitch::initialize(ErrorHandler *errh)$/;"	f	class:UMLSwitch
initialize	elements/wifi/ap/beaconsource.cc	/^BeaconSource::initialize (ErrorHandler *)$/;"	f	class:BeaconSource
initialize	elements/wifi/fromhandler.cc	/^FromHandler::initialize(ErrorHandler *errh)$/;"	f	class:FromHandler
initialize	elements/wifi/linktable.cc	/^LinkTable::initialize (ErrorHandler *)$/;"	f	class:LinkTable
initialize	elements/wifi/madwifirate.cc	/^MadwifiRate::initialize(ErrorHandler *)$/;"	f	class:MadwifiRate
initialize	elements/wifi/packetstore.cc	/^PacketStore::initialize(ErrorHandler *errh)$/;"	f	class:PacketStore
initialize	etc/samplepackage/sampleelt.cc	/^SamplePackageElement::initialize(ErrorHandler *errh)$/;"	f	class:SamplePackageElement
initialize	include/click/hashmap.cc	/^HashMap<K, V>::initialize(HashMap_ArenaFactory *factory, size_t initial_nbuckets)$/;"	f	class:HashMap
initialize	include/click/hashmap.cc	/^HashMap<K, void *>::initialize(HashMap_ArenaFactory *factory, size_t initial_nbuckets)$/;"	f	class:HashMap
initialize	include/click/packet.hh	/^WritablePacket::initialize()$/;"	f	class:WritablePacket
initialize	lib/args.cc	/^Args::initialize(const Vector<String> *conf)$/;"	f	class:Args
initialize	lib/element.cc	/^Element::initialize(ErrorHandler *errh)$/;"	f	class:Element
initialize	lib/fromfile.cc	/^FromFile::initialize(ErrorHandler *errh, bool allow_nonexistent)$/;"	f	class:FromFile
initialize	lib/handlercall.cc	/^HandlerCall::initialize(int flags, const Element* context, ErrorHandler* errh)$/;"	f	class:HandlerCall
initialize	lib/ino.cc	/^ClickIno::initialize()$/;"	f	class:ClickIno
initialize	lib/notifier.cc	/^Notifier::initialize(const char *name, Router *r)$/;"	f	class:Notifier
initialize	lib/router.cc	/^Router::initialize(ErrorHandler *errh)$/;"	f	class:Router
initialize	lib/selectset.cc	/^SelectSet::initialize()$/;"	f	class:SelectSet
initialize	lib/task.cc	/^Task::initialize(Element *owner, bool schedule)$/;"	f	class:Task
initialize	lib/task.cc	/^Task::initialize(Router *router, bool schedule)$/;"	f	class:Task
initialize	lib/timer.cc	/^Timer::initialize(Element *owner, bool quiet)$/;"	f	class:Timer
initialize	lib/timer.cc	/^Timer::initialize(Router *router)$/;"	f	class:Timer
initialize	linuxmodule/skbmgr.cc	/^RecycledSkbBucket::initialize()$/;"	f	class:RecycledSkbBucket
initialize	linuxmodule/skbmgr.cc	/^RecycledSkbPool::initialize()$/;"	f	class:RecycledSkbPool
initialize_connection	elements/userlevel/controlsocket.cc	/^ControlSocket::initialize_connection(int fd)$/;"	f	class:ControlSocket
initialize_handlers	lib/router.cc	/^Router::initialize_handlers(bool defaults, bool specifics)$/;"	f	class:Router
initialize_hw_bits_disable	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t initialize_hw_bits_disable;$/;"	m	struct:e1000_hw
initialize_keywords	elements/linuxmodule/anydevice.cc	/^AnyDevice::initialize_keywords(ErrorHandler *errh)$/;"	f	class:AnyDevice
initialize_ns	lib/master.cc	/^Master::initialize_ns(simclick_node_t *simnode)$/;"	f	class:Master
initialize_ports	lib/element.cc	/^Element::initialize_ports(const int *in_v, const int *out_v)$/;"	f	class:Element
initialize_rate	include/click/gaprate.hh	/^GapRate::initialize_rate(unsigned r)$/;"	f	class:GapRate
initialize_read	include/click/handlercall.hh	/^HandlerCall::initialize_read(const Element* context, ErrorHandler* errh)$/;"	f	class:HandlerCall
initialize_socket	elements/userlevel/chattersocket.cc	/^ChatterSocket::initialize_socket(ErrorHandler *errh)$/;"	f	class:ChatterSocket
initialize_socket	elements/userlevel/controlsocket.cc	/^ControlSocket::initialize_socket(ErrorHandler *errh)$/;"	f	class:ControlSocket
initialize_socket_error	elements/userlevel/chattersocket.cc	/^ChatterSocket::initialize_socket_error(ErrorHandler *errh, const char *syscall)$/;"	f	class:ChatterSocket
initialize_socket_error	elements/userlevel/controlsocket.cc	/^ControlSocket::initialize_socket_error(ErrorHandler *errh, const char *syscall)$/;"	f	class:ControlSocket
initialize_socket_error	elements/userlevel/rawsocket.cc	/^RawSocket::initialize_socket_error(ErrorHandler *errh, const char *syscall)$/;"	f	class:RawSocket
initialize_socket_error	elements/userlevel/socket.cc	/^Socket::initialize_socket_error(ErrorHandler *errh, const char *syscall)$/;"	f	class:Socket
initialize_task	elements/standard/scheduleinfo.cc	/^ScheduleInfo::initialize_task(Element *e, Task *task, bool schedule,$/;"	f	class:ScheduleInfo
initialize_task	include/click/standard/scheduleinfo.hh	/^ScheduleInfo::initialize_task(Element* e, Task* t, ErrorHandler* errh)$/;"	f	class:ScheduleInfo
initialize_vec	elements/test/sorttest.cc	/^SortTest::initialize_vec(ErrorHandler *)$/;"	f	class:SortTest
initialize_write	include/click/handlercall.hh	/^HandlerCall::initialize_write(const Element* context, ErrorHandler* errh)$/;"	f	class:HandlerCall
initialized	include/click/fromfile.hh	/^    bool initialized() const		{ return _fd >= 0; }$/;"	f	class:FromFile
initialized	include/click/handlercall.hh	/^    bool initialized() const {$/;"	f	class:HandlerCall
initialized	include/click/notifier.hh	/^    inline bool initialized() const {$/;"	f	class:Notifier
initialized	include/click/notifier.hh	/^NotifierSignal::initialized() const$/;"	f	class:NotifierSignal
initialized	include/click/router.hh	/^Router::initialized() const$/;"	f	class:Router
initialized	include/click/task.hh	/^Task::initialized() const$/;"	f	class:Task
initialized	include/click/timer.hh	/^    inline bool initialized() const {$/;"	f	class:Timer
initializer	apps/clicky/src/permstr.cc	/^static PermString::Initializer initializer;$/;"	v	file:
inject	elements/analysis/ipsumdumpinfo.hh	/^    void (*inject)(PacketOdesc &, const FieldReader *);$/;"	m	struct:IPSummaryDump::FieldReader
inode_out_of_date	linuxmodule/clickfs.cc	/^inode_out_of_date(struct inode *inode, int subdir_error)$/;"	f	file:
inpos	elements/userlevel/controlsocket.hh	/^	int inpos;$/;"	m	struct:ControlSocket::connection
input	elements/analysis/anonipaddr.hh	/^	uint32_t input;$/;"	m	struct:AnonymizeIPAddr::Node
input	elements/analysis/timesortedsched.hh	/^	int input;		\/\/ for space, consider using annotation?$/;"	m	struct:TimeSortedSched::packet_s
input	include/click/element.hh	/^Element::input(int port) const$/;"	f	class:Element
input_is_pull	include/click/element.hh	/^Element::input_is_pull(int port) const$/;"	f	class:Element
input_is_pull	tools/lib/processingt.hh	/^ProcessingT::input_is_pull(int i, int p) const$/;"	f	class:ProcessingT
input_is_push	include/click/element.hh	/^Element::input_is_push(int port) const$/;"	f	class:Element
input_pidx	tools/lib/processingt.hh	/^    int input_pidx(const ConnectionT &conn) const {$/;"	f	class:ProcessingT
input_pidx	tools/lib/processingt.hh	/^    int input_pidx(const PortT &port) const {$/;"	f	class:ProcessingT
input_pidx	tools/lib/processingt.hh	/^    int input_pidx(int eindex, int port = 0) const {$/;"	f	class:ProcessingT
input_port	tools/lib/processingt.hh	/^    PortT input_port(int pidx) const {$/;"	f	class:ProcessingT
input_position	apps/clicky/src/dwidget.cc	/^point delt::input_position(int port, dport_style *dps, bool here) const$/;"	f	class:clicky::delt
input_processing	tools/lib/processingt.hh	/^ProcessingT::input_processing(const PortT &h) const$/;"	f	class:ProcessingT
input_processing	tools/lib/processingt.hh	/^ProcessingT::input_processing(int i, int p) const$/;"	f	class:ProcessingT
input_s	elements/analysis/timesortedsched.hh	/^    struct input_s {$/;"	s	class:TimeSortedSched
insert	apps/clicky/src/dwidget.cc	/^void delt::insert(rect_search<dwidget> &rects, crouter *cr,$/;"	f	class:clicky::delt
insert	apps/clicky/src/rectsearch.hh	/^void rect_search<T, CHUNK>::insert(T *v)$/;"	f	class:rect_search
insert	elements/bsdmodule/anydevice.cc	/^AnyDeviceMap::insert(AnyDevice *d)$/;"	f	class:AnyDeviceMap
insert	elements/ethernet/arptable.cc	/^ARPTable::insert(IPAddress ip, const EtherAddress &eth, Packet **head)$/;"	f	class:ARPTable
insert	elements/ipsec/satable.cc	/^SATable::insert(SPI spi , SADataTuple SA_data)$/;"	f	class:SATable
insert	elements/linuxmodule/anydevice.cc	/^AnyDeviceMap::insert(AnyDevice *d, bool locked)$/;"	f	class:AnyDeviceMap
insert	elements/local/FlowNet/papmo/PaPMo.cc	/^int lfc_buffer::insert( void* i )$/;"	f	class:lfc_buffer
insert	elements/local/OpenFlow/lib/table.hh	/^    int (*insert)(struct sw_table *table, struct sw_flow *flow);$/;"	m	struct:sw_table
insert	elements/standard/stridesched.hh	/^	void insert(Client **list) {$/;"	f	struct:StrideSched::Client
insert	elements/wifi/availablerates.cc	/^AvailableRates::insert(EtherAddress eth, Vector<int> rates)$/;"	f	class:AvailableRates
insert	include/click/hashmap.cc	/^HashMap<K, V>::insert(const K &key, const V &value)$/;"	f	class:HashMap
insert	include/click/hashmap.cc	/^HashMap<K, void *>::insert(const K &key, void *value)$/;"	f	class:HashMap
insert	include/click/hashmap.hh	/^  bool insert(const K &k, T *v)		{ return inherited::insert(k, v); }$/;"	f	class:HashMap
insert	include/click/list.hh	/^    iterator insert(iterator it, pointer x) {$/;"	f	class:List
insert	include/click/list.hh	/^    void insert(iterator it, InputIterator first, InputIterator last) {$/;"	f	class:List
insert	include/click/list.hh	/^    void insert(pointer pos, pointer x) {$/;"	f	class:List
insert	include/click/routervisitor.hh	/^    void insert(Element *e) {$/;"	f	class:ElementTracker
insert	include/click/vector.cc	/^Vector<T>::insert(iterator it, const T &x)$/;"	f	class:Vector
insert	include/click/vector.hh	/^    iterator insert(iterator it, T* x) { return (iterator)Base::insert((void**)it, (void*)x); }$/;"	f	class:Vector
insert	lib/vectorv.cc	/^Vector<void*>::insert(iterator i, void* e)$/;"	f	class:Vector
insert	ns/CUT_BinHeap.h	/^  Pix insert(Key k, Data d) {$/;"	f	class:CUT_BinHeap
insert_after	tools/lib/routert.cc	/^RouterT::insert_after(const PortT &inserter, const PortT &h)$/;"	f	class:RouterT
insert_after	tools/lib/routert.hh	/^RouterT::insert_after(ElementT *e, const PortT &h)$/;"	f	class:RouterT
insert_all	apps/clicky/src/dwidget.cc	/^void delt::insert_all(rect_search<dwidget> &rects)$/;"	f	class:clicky::delt
insert_at	include/click/hashcontainer.hh	/^inline void HashContainer<T, A>::insert_at(iterator &it, T *element)$/;"	f	class:HashContainer
insert_before	tools/lib/routert.cc	/^RouterT::insert_before(const PortT &inserter, const PortT &h)$/;"	f	class:RouterT
insert_before	tools/lib/routert.hh	/^RouterT::insert_before(ElementT *e, const PortT &h)$/;"	f	class:RouterT
insert_route	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::insert_route(const RTEntry &r, const GridGenericLogger::reason_t why)$/;"	f	class:DSDVRouteTable
insert_section	doc/click-elem2man	/^sub insert_section (\\@\\@\\@$$$$) {$/;"	s
insert_section2	doc/click-elem2man	/^sub insert_section2 (\\@\\@\\@$$$\\%@) {$/;"	s
insn	elements/standard/classification.hh	/^    Insn &insn(int state) const {$/;"	f	class:Classification::Wordwise::DominatorOptimizer
insn	elements/standard/classification.hh	/^    const Insn &insn(int i) const {$/;"	f	class:Classification::Wordwise::Program
insn_end	elements/standard/script.hh	/^	insn_exit = -1, insn_end = -2, insn_stop = -3, insn_error = -4,$/;"	e	enum:Script::Insn
insn_error	elements/standard/script.hh	/^	insn_exit = -1, insn_end = -2, insn_stop = -3, insn_error = -4,$/;"	e	enum:Script::Insn
insn_errorq	elements/standard/script.hh	/^	insn_errorq = -5$/;"	e	enum:Script::Insn
insn_exit	elements/standard/script.hh	/^	insn_exit = -1, insn_end = -2, insn_stop = -3, insn_error = -4,$/;"	e	enum:Script::Insn
insn_export	elements/standard/script.hh	/^	INSN_SET, insn_setq, insn_init, insn_initq, insn_export, insn_exportq,$/;"	e	enum:Script::Insn
insn_exportq	elements/standard/script.hh	/^	INSN_SET, insn_setq, insn_init, insn_initq, insn_export, insn_exportq,$/;"	e	enum:Script::Insn
insn_init	elements/standard/script.hh	/^	INSN_SET, insn_setq, insn_init, insn_initq, insn_export, insn_exportq,$/;"	e	enum:Script::Insn
insn_initq	elements/standard/script.hh	/^	INSN_SET, insn_setq, insn_init, insn_initq, insn_export, insn_exportq,$/;"	e	enum:Script::Insn
insn_permute_compare	elements/standard/classification.cc	/^insn_permute_compare(const void *ap, const void *bp, void *user_data)$/;"	f	namespace:Classification::Wordwise
insn_returnq	elements/standard/script.hh	/^	INSN_LABEL, INSN_GOTO, INSN_RETURN, insn_returnq,$/;"	e	enum:Script::Insn
insn_setq	elements/standard/script.hh	/^	INSN_SET, insn_setq, insn_init, insn_initq, insn_export, insn_exportq,$/;"	e	enum:Script::Insn
insn_stop	elements/standard/script.hh	/^	insn_exit = -1, insn_end = -2, insn_stop = -3, insn_error = -4,$/;"	e	enum:Script::Insn
installDisplayHandlerListener	apps/ClickController/RouterTreeModel.java	/^  public void installDisplayHandlerListener(DisplayHandlerListener l) {$/;"	m	class:RouterTreeModel
install_dynamic_sentinel	include/click/nameinfo.hh	/^    inline NameDB *install_dynamic_sentinel() { return (NameDB *) this; }$/;"	f	class:NameInfo
install_module	tools/click-install/click-install.cc	/^install_module(const String &filename, const String &options,$/;"	f	file:
install_required_packages	tools/click-install/click-install.cc	/^install_required_packages(RouterT *r, HashTable<String, int> &packages,$/;"	f	file:
install_router	bsdmodule/config.cc	/^install_router(const String &config, Router *r)$/;"	f	file:
install_router	linuxmodule/config.cc	/^install_router(const String &config, Router *r)$/;"	f	file:
installdb	lib/nameinfo.cc	/^NameInfo::installdb(NameDB *db, const Element *prefix)$/;"	f	class:NameInfo
instruction_entries	elements/standard/script.cc	/^static const StaticNameDB::Entry instruction_entries[] = {$/;"	v	file:
int_data	include/click/string.hh	/^    static const char int_data[20];$/;"	m	class:String
int_data	lib/string.cc	/^const char String::int_data[] = "0\\0001\\0002\\0003\\0004\\0005\\0006\\0007\\0008\\0009";$/;"	m	class:String	file:
int_divide	include/click/integers.hh	/^inline int32_t int_divide(int32_t a, uint32_t b) {$/;"	f
int_divide	include/click/integers.hh	/^inline int32_t int_divide(int32_t a, uint32_t b, int32_t &quot) {$/;"	f
int_divide	include/click/integers.hh	/^inline int64_t int_divide(int64_t a, uint32_t b) {$/;"	f
int_divide	include/click/integers.hh	/^inline uint32_t int_divide(int64_t a, uint32_t b, int64_t &quot) {$/;"	f
int_divide	include/click/integers.hh	/^inline uint32_t int_divide(uint32_t a, uint32_t b) {$/;"	f
int_divide	include/click/integers.hh	/^inline uint32_t int_divide(uint32_t a, uint32_t b, uint32_t &quot) {$/;"	f
int_divide	include/click/integers.hh	/^inline uint32_t int_divide(uint64_t a, uint32_t b, uint64_t &quot) {$/;"	f
int_divide	include/click/integers.hh	/^inline uint64_t int_divide(uint64_t a, uint32_t b) {$/;"	f
int_lab	conf/click-mkclgw.pl	/^sub int_lab {$/;"	s
int_large_t	include/click/string.hh	/^    typedef int64_t int_large_t;$/;"	t	class:String
int_large_t	include/click/string.hh	/^    typedef long int_large_t;$/;"	t	class:String
int_large_t	include/click/string.hh	/^    typedef long long int_large_t;$/;"	t	class:String
int_match_string	apps/clicky/src/dstyle.cc	/^inline bool int_match_string(const char *begin, const char *end, int x,$/;"	f	namespace:clicky
int_multiply	include/click/integers.hh	/^inline void int_multiply(unsigned a, unsigned b, unsigned &xlow, unsigned &xhigh)$/;"	f
int_multiply	include/click/integers.hh	/^inline void int_multiply(unsigned long a, unsigned long b, unsigned long &xlow, unsigned long &xhigh)$/;"	f
int_multiply	include/click/integers.hh	/^inline void int_multiply(unsigned long long a, unsigned long long b, unsigned long long &xlow, unsigned long long &xhigh)$/;"	f
int_multiply	include/click/integers.hh	/^void int_multiply(T a, T b, T &xlow, T &xhigh)$/;"	f
int_sqrt	lib/integers.cc	/^int_sqrt(uint32_t x)$/;"	f
int_sqrt	lib/integers.cc	/^int_sqrt(uint64_t x)$/;"	f
integer_align	apps/clicky/src/rectangle.hh	/^    void integer_align() {$/;"	f	struct:rectangle
integer_data_handler	lib/element.cc	/^integer_data_handler(int op, String &str, Element *element, const Handler *h, ErrorHandler *errh)$/;"	f	file:
integer_traits	include/click/type_traits.hh	/^struct integer_traits {$/;"	s
integer_traits	include/click/type_traits.hh	/^struct integer_traits<char> : public integer_traits<signed char> {$/;"	s
integer_traits	include/click/type_traits.hh	/^struct integer_traits<char> : public integer_traits<unsigned char> {$/;"	s
integer_traits	include/click/type_traits.hh	/^struct integer_traits<int64_t> {$/;"	s
integer_traits	include/click/type_traits.hh	/^struct integer_traits<int> {$/;"	s
integer_traits	include/click/type_traits.hh	/^struct integer_traits<long long> {$/;"	s
integer_traits	include/click/type_traits.hh	/^struct integer_traits<long> {$/;"	s
integer_traits	include/click/type_traits.hh	/^struct integer_traits<short> {$/;"	s
integer_traits	include/click/type_traits.hh	/^struct integer_traits<signed char> {$/;"	s
integer_traits	include/click/type_traits.hh	/^struct integer_traits<uint64_t> {$/;"	s
integer_traits	include/click/type_traits.hh	/^struct integer_traits<unsigned char> {$/;"	s
integer_traits	include/click/type_traits.hh	/^struct integer_traits<unsigned int> {$/;"	s
integer_traits	include/click/type_traits.hh	/^struct integer_traits<unsigned long long> {$/;"	s
integer_traits	include/click/type_traits.hh	/^struct integer_traits<unsigned long> {$/;"	s
integer_traits	include/click/type_traits.hh	/^struct integer_traits<unsigned short> {$/;"	s
integral_constant	include/click/type_traits.hh	/^struct integral_constant {$/;"	s
inter_pull_call_count	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	uint32_t inter_pull_call_count;$/;"	m	struct:PFSchedFWStat
inter_pull_call_interval_total	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	uint32_t inter_pull_call_interval_total; $/;"	m	struct:PFSchedFWStat
inter_pull_stalled	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	uint32_t inter_pull_stalled;$/;"	m	struct:PFSchedFWStat
inter_req	elements/wifi/athdesc.h	/^	u_int32_t	inter_req:1;$/;"	m	struct:ar5212_desc
interesting_handler_names	tools/click-fastclassifier/click-fastclassifier.cc	/^static Vector<String> interesting_handler_names;$/;"	v	file:
interface_ver	drivers/e1000-4.x/src/idiag_pro.h	/^	uint32_t interface_ver;$/;"	m	struct:idiag_pro_data
internal	include/click/clp.h	/^    struct Clp_Internal *internal;$/;"	m	struct:Clp_Parser	typeref:struct:Clp_Parser::Clp_Internal
internal	include/click/confparse.hh	/^    int internal;$/;"	m	struct:cp_argtype
internalize	elements/grid/pep.cc	/^PEP::internalize(pep_fix *fp)$/;"	f	class:PEP
internalize	elements/grid/regionpep.cc	/^EstimateRouterRegion::internalize(pep_rgn_fix *fp)$/;"	f	class:EstimateRouterRegion
interpret_ssl_error	elements/local/OpenFlow/lib/vconn-ssl.cc	/^interpret_ssl_error(const char *function, int ret, int error,$/;"	f	file:
intersect	apps/clicky/src/rectangle.hh	/^    rectangle intersect(const rectangle &o) const {$/;"	f	struct:rectangle
intersect	elements/grid/region.cc	/^RectRegion::intersect(RectRegion &r)$/;"	f	class:RectRegion
intersect_lists	elements/standard/classification.cc	/^DominatorOptimizer::intersect_lists(const Vector<int> &in, const Vector<int> &start, const Vector<int> &end, int pos1, int pos2, Vector<int> &out)$/;"	f	class:Classification::Wordwise::DominatorOptimizer
interval	elements/grid/locfromfile.hh	/^    double interval;$/;"	m	struct:LocFromFile::delta
interval_data_handler	lib/element.cc	/^interval_data_handler(int op, String &str, Element *element, const Handler *h, ErrorHandler *errh)$/;"	f	file:
intptr_t	include/click/config-linuxmodule.h	/^typedef ptrdiff_t intptr_t;$/;"	t
intptr_t	include/click/config-userlevel.h	/^typedef long intptr_t;		\/* XXX? *\/$/;"	t
intr_reschedule	elements/bsdmodule/anydevice.hh	/^AnyDevice::intr_reschedule(void)$/;"	f	class:AnyDevice
invalidate	elements/grid/dsdvroutetable.hh	/^    void invalidate(unsigned int jiff) {$/;"	f	class:DSDVRouteTable::RTEntry
invalidate	elements/grid/gridroutetable.hh	/^    void invalidate() {$/;"	f	class:GridRouteTable::RTEntry
invariant	ns/CUT_BinHeap.h	/^  void invariant() {$/;"	f	class:CUT_BinHeap
inverse	include/click/bigint.hh	/^    static limb_type inverse(limb_type x) {$/;"	f	class:Bigint
io_base	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t io_base;$/;"	m	struct:e1000_hw
io_base	drivers/e1000-5.x/src/e1000_hw.h	/^    unsigned long io_base;$/;"	m	struct:e1000_hw
io_base	drivers/e1000-7.x/src/e1000_hw.h	/^    unsigned long io_base;$/;"	m	struct:e1000_hw
iopt	lib/clp.c	/^    Clp_InternOption *iopt;$/;"	m	struct:Clp_Internal	file:
iopt	lib/clp.c	/^    Clp_InternOption *iopt;$/;"	m	struct:Clp_StringList	file:
ioptional	lib/clp.c	/^    unsigned ioptional : 1;$/;"	m	struct:__anon500	file:
ip	elements/grid/dsdvroutetable.hh	/^    unsigned int ip;$/;"	m	struct:DSDVRouteTable::HookPair
ip	elements/grid/dsr.hh	/^  IPAddress ip() const { return IPAddress(_ip); }$/;"	f	struct:DSRHop
ip	elements/grid/floodinglocquerier.hh	/^    IPAddress ip;$/;"	m	struct:FloodingLocQuerier::LocEntry
ip	elements/grid/grid.hh	/^    uint32_t ip;			\/\/ Sender's IP address.$/;"	m	struct:grid_hdr
ip	elements/grid/grid.hh	/^    uint32_t ip;$/;"	m	struct:grid_nbr_entry
ip	elements/grid/grid.hh	/^  uint8_t ip;            \/\/ last byte of IP address$/;"	m	struct:grid_link_entry
ip	elements/grid/updateroutes.hh	/^    IPAddress ip;$/;"	m	class:UpdateGridRoutes::NbrEntry
ip	elements/local/OpenFlow/lib/vconn-provider.hh	/^    uint32_t ip;$/;"	m	struct:vconn
ip2i	conf/make-ip-conf.pl	/^sub ip2i {$/;"	s
ip4	elements/ip/ipfilter.hh	/^	struct in_addr ip4;$/;"	m	union:IPFilter::PrimitiveData	typeref:struct:IPFilter::PrimitiveData::in_addr
ip4_address	lib/ip6address.cc	/^IP6Address::ip4_address(IPAddress &ip4) const$/;"	f	class:IP6Address
ip6	elements/ethernet/ip6ndsolicitor.hh	/^    IP6Address ip6;$/;"	m	struct:IP6NDSolicitor::NDEntry
ip6_ctlun	include/clicknet/ip6.h	/^    } ip6_ctlun;$/;"	m	struct:click_ip6	typeref:union:click_ip6::__anon489
ip6_dst	include/clicknet/ip6.h	/^    struct click_in6_addr ip6_dst;	\/* 24-39 dest address *\/$/;"	m	struct:click_ip6	typeref:struct:click_ip6::click_in6_addr
ip6_flow	include/clicknet/ip6.h	63;"	d
ip6_header	include/click/packet.hh	/^Packet::ip6_header() const$/;"	f	class:Packet
ip6_header	include/click/packet.hh	/^WritablePacket::ip6_header() const$/;"	f	class:WritablePacket
ip6_header_length	include/click/packet.hh	/^Packet::ip6_header_length() const$/;"	f	class:Packet
ip6_header_offset	include/click/packet.hh	/^Packet::ip6_header_offset() const$/;"	f	class:Packet
ip6_hlim	include/clicknet/ip6.h	66;"	d
ip6_nxt	include/clicknet/ip6.h	65;"	d
ip6_plen	include/clicknet/ip6.h	64;"	d
ip6_src	include/clicknet/ip6.h	/^    struct click_in6_addr ip6_src;	\/* 8-23	 source address *\/$/;"	m	struct:click_ip6	typeref:struct:click_ip6::click_in6_addr
ip6_un1	include/clicknet/ip6.h	/^	} ip6_un1;$/;"	m	union:click_ip6::__anon489	typeref:struct:click_ip6::__anon489::__anon490
ip6_un1_flow	include/clicknet/ip6.h	/^	    uint32_t ip6_un1_flow;	\/* 0-3	 bits 0-3: version == 6	     *\/$/;"	m	struct:click_ip6::__anon489::__anon490
ip6_un1_hlim	include/clicknet/ip6.h	/^	    uint8_t ip6_un1_hlim;	\/* 7	 hop limit		     *\/$/;"	m	struct:click_ip6::__anon489::__anon490
ip6_un1_nxt	include/clicknet/ip6.h	/^	    uint8_t ip6_un1_nxt;	\/* 6	 next header		     *\/$/;"	m	struct:click_ip6::__anon489::__anon490
ip6_un1_plen	include/clicknet/ip6.h	/^	    uint16_t ip6_un1_plen;	\/* 4-5	 payload length		     *\/$/;"	m	struct:click_ip6::__anon489::__anon490
ip6_un2_vfc	include/clicknet/ip6.h	/^	uint8_t ip6_un2_vfc;		\/* 0	 bits 0-3: version == 6	     *\/$/;"	m	union:click_ip6::__anon489
ip6_un3	include/clicknet/ip6.h	/^	} ip6_un3;$/;"	m	union:click_ip6::__anon489	typeref:struct:click_ip6::__anon489::__anon491
ip6_un3_fc	include/clicknet/ip6.h	/^	    unsigned ip6_un3_fc : 4;	\/*	 header length		     *\/$/;"	m	struct:click_ip6::__anon489::__anon491
ip6_un3_v	include/clicknet/ip6.h	/^	    unsigned ip6_un3_v : 4;	\/* 0	 version == 6		     *\/$/;"	m	struct:click_ip6::__anon489::__anon491
ip6_v	include/clicknet/ip6.h	61;"	d
ip6_vfc	include/clicknet/ip6.h	62;"	d
ip_addr_end	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint32_t ip_addr_end;$/;"	m	struct:nx_snat_config
ip_addr_start	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint32_t ip_addr_start; $/;"	m	struct:nx_snat_config
ip_address_data_handler	lib/element.cc	/^ip_address_data_handler(int op, String &str, Element *element, const Handler *h, ErrorHandler *errh)$/;"	f	file:
ip_address_variation	elements/ip/iprwpattern.cc	/^ip_address_variation(const String &str, IPAddress *addr, int32_t *variation,$/;"	f	namespace:__anon345
ip_config	drivers/e1000-4.x/src/e1000_hw.h	/^        uint32_t ip_config;$/;"	m	union:e1000_context_desc::__anon56
ip_config	drivers/e1000-5.x/src/e1000_hw.h	/^        uint32_t ip_config;$/;"	m	union:e1000_context_desc::__anon153
ip_config	drivers/e1000-7.x/src/e1000_hw.h	/^        uint32_t ip_config;$/;"	m	union:e1000_context_desc::__anon110
ip_csum	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t ip_csum;$/;"	m	struct:ip_header
ip_dst	elements/analysis/fromnlanrdump.hh	/^	uint32_t ip_dst;$/;"	m	struct:FromNLANRDump::FRCell
ip_dst	elements/local/OpenFlow/lib/packets.hh	/^    uint32_t ip_dst;$/;"	m	struct:ip_header
ip_dst	include/clicknet/ip.h	/^    struct in_addr ip_dst;		\/* 16-19 destination address	     *\/$/;"	m	struct:click_ip	typeref:struct:click_ip::in_addr
ip_extract	elements/analysis/ipsumdump_ip.cc	/^static bool ip_extract(PacketDesc& d, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
ip_fields	drivers/e1000-4.x/src/e1000_hw.h	/^        } ip_fields;$/;"	m	union:e1000_context_desc::__anon56	typeref:struct:e1000_context_desc::__anon56::__anon57
ip_fields	drivers/e1000-5.x/src/e1000_hw.h	/^        } ip_fields;$/;"	m	union:e1000_context_desc::__anon153	typeref:struct:e1000_context_desc::__anon153::__anon154
ip_fields	drivers/e1000-7.x/src/e1000_hw.h	/^        } ip_fields;$/;"	m	union:e1000_context_desc::__anon110	typeref:struct:e1000_context_desc::__anon110::__anon111
ip_fields	elements/ip/ipfieldinfo.cc	/^static const StaticNameDB::Entry ip_fields[] = {$/;"	v	file:
ip_frag_off	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t ip_frag_off;$/;"	m	struct:ip_header
ip_from_extern_classify	conf/click-mkclgw.pl	/^sub ip_from_extern_classify { return undef; }$/;"	s
ip_from_extern_classify	conf/click-mkclgw.pl	/^sub ip_from_extern_classify {$/;"	s
ip_header	elements/local/OpenFlow/lib/packets.hh	/^struct ip_header {$/;"	s
ip_header	include/click/packet.hh	/^Packet::ip_header() const$/;"	f	class:Packet
ip_header	include/click/packet.hh	/^WritablePacket::ip_header() const$/;"	f	class:WritablePacket
ip_header_length	include/click/packet.hh	/^Packet::ip_header_length() const$/;"	f	class:Packet
ip_header_offset	include/click/packet.hh	/^Packet::ip_header_offset() const$/;"	f	class:Packet
ip_hl	include/clicknet/ip.h	/^    unsigned	ip_hl : 4;		\/*       header length		     *\/$/;"	m	struct:click_ip
ip_id	drivers/e1000-7.x/src/e1000_hw.h	/^                    uint16_t ip_id;    \/* IP id *\/$/;"	m	struct:e1000_rx_desc_extended::__anon94::__anon95::__anon96::__anon97
ip_id	drivers/e1000-7.x/src/e1000_hw.h	/^                    uint16_t ip_id;    \/* IP id *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon100::__anon101::__anon102::__anon103
ip_id	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t ip_id;$/;"	m	struct:ip_header
ip_id	include/clicknet/ip.h	/^    uint16_t	ip_id;			\/* 4-5   identification		     *\/$/;"	m	struct:click_ip
ip_ihl_ver	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t ip_ihl_ver;$/;"	m	struct:ip_header
ip_ina	elements/analysis/ipsumdump_ip.cc	/^static bool ip_ina(PacketOdesc& d, const String &s, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
ip_inb	elements/analysis/ipsumdump_ip.cc	/^static const uint8_t* ip_inb(PacketOdesc& d, const uint8_t *s, const uint8_t *ends, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
ip_inject	elements/analysis/ipsumdump_ip.cc	/^static void ip_inject(PacketOdesc& d, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
ip_len	elements/analysis/fromnlanrdump.hh	/^	uint16_t ip_len;$/;"	m	struct:FromNLANRDump::FRCell
ip_len	include/clicknet/ip.h	/^    uint16_t	ip_len;			\/* 2-3   total length		     *\/$/;"	m	struct:click_ip
ip_off	include/clicknet/ip.h	/^    uint16_t	ip_off;			\/* 6-7   fragment offset field	     *\/$/;"	m	struct:click_ip
ip_opt_ina	elements/analysis/ipsumdump_ip.cc	/^static bool ip_opt_ina(PacketOdesc &d, const String &str, const FieldReader *)$/;"	f	namespace:IPSummaryDump
ip_opt_mask_mapping	elements/analysis/ipsumdump_ip.cc	/^static int ip_opt_mask_mapping[] = {$/;"	m	namespace:IPSummaryDump	file:
ip_outa	elements/analysis/ipsumdump_ip.cc	/^static void ip_outa(const PacketDesc& d, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
ip_outb	elements/analysis/ipsumdump_ip.cc	/^static void ip_outb(const PacketDesc& d, bool ok, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
ip_p	elements/analysis/fromnlanrdump.hh	/^	uint8_t ip_p;$/;"	m	struct:FromNLANRDump::FRCell
ip_p	elements/ip/iprwmapping.hh	/^    uint8_t ip_p() const {$/;"	f	class:IPRewriterFlow
ip_p	include/click/ipaddress.hh	/^    int ip_p;$/;"	m	struct:IPPortArg
ip_p	include/clicknet/ip.h	/^    uint8_t	ip_p;			\/* 9     protocol		     *\/$/;"	m	struct:click_ip
ip_prepare	elements/analysis/ipsumdumpinfo.cc	/^void ip_prepare(PacketDesc &d, const FieldWriter *)$/;"	f	namespace:IPSummaryDump
ip_proto	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t ip_proto;$/;"	m	struct:ip_header
ip_proto_has_udp_ports	elements/analysis/ipsumdump_ip.cc	/^static inline bool ip_proto_has_udp_ports(int ip_p)$/;"	f	namespace:IPSummaryDump
ip_protos	elements/ip/ipnameinfo.cc	/^static const StaticNameDB::Entry ip_protos[] = {$/;"	v	file:
ip_ptr_error_hook	lib/error.cc	/^ip_ptr_error_hook(int, VA_LIST_REF_T val)$/;"	f	file:
ip_readers	elements/analysis/ipsumdump_ip.cc	/^static const FieldReader ip_readers[] = {$/;"	m	namespace:IPSummaryDump	file:
ip_rewriter	conf/click-mkclgw.pl	/^sub ip_rewriter { return undef; }$/;"	s
ip_rewriter	conf/click-mkclgw.pl	/^sub ip_rewriter {$/;"	s
ip_src	elements/analysis/fromnlanrdump.hh	/^	uint32_t ip_src;$/;"	m	struct:FromNLANRDump::FRCell
ip_src	elements/local/OpenFlow/lib/packets.hh	/^    uint32_t ip_src;$/;"	m	struct:ip_header
ip_src	include/clicknet/ip.h	/^    struct in_addr ip_src;		\/* 12-15 source address		     *\/$/;"	m	struct:click_ip	typeref:struct:click_ip::in_addr
ip_sum	include/clicknet/ip.h	/^    uint16_t	ip_sum;			\/* 10-11 checksum		     *\/$/;"	m	struct:click_ip
ip_synonyms	elements/analysis/ipsumdump_ip.cc	/^static const FieldSynonym ip_synonyms[] = {$/;"	m	namespace:IPSummaryDump	file:
ip_tos	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint8_t ip_tos;           \/* IP TOS value. *\/$/;"	m	struct:nx_flow_end
ip_tos	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t ip_tos;$/;"	m	struct:ip_header
ip_tos	include/clicknet/ip.h	/^    uint8_t	ip_tos;			\/* 1     type of service	     *\/$/;"	m	struct:click_ip
ip_tot_len	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t ip_tot_len;$/;"	m	struct:ip_header
ip_ttl	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t ip_ttl;$/;"	m	struct:ip_header
ip_ttl	include/clicknet/ip.h	/^    uint8_t	ip_ttl;			\/* 8     time to live		     *\/$/;"	m	struct:click_ip
ip_v	include/clicknet/ip.h	/^    unsigned	ip_v : 4;		\/* 0     version == 4		     *\/$/;"	m	struct:click_ip
ip_writers	elements/analysis/ipsumdump_ip.cc	/^static const FieldWriter ip_writers[] = {$/;"	m	namespace:IPSummaryDump	file:
ipaddr	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	IPAddress ipaddr;$/;"	m	struct:NexthopInfo
ipaddr_sorter	elements/wifi/linktable.cc	/^static int ipaddr_sorter(const void *va, const void *vb, void *) {$/;"	f	file:
ipcse	drivers/e1000-4.x/src/e1000_hw.h	/^            uint16_t ipcse;     \/* IP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon56::__anon57
ipcse	drivers/e1000-5.x/src/e1000_hw.h	/^            uint16_t ipcse;     \/* IP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon153::__anon154
ipcse	drivers/e1000-7.x/src/e1000_hw.h	/^            uint16_t ipcse;     \/* IP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon110::__anon111
ipcso	drivers/e1000-4.x/src/e1000_hw.h	/^            uint8_t ipcso;      \/* IP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon56::__anon57
ipcso	drivers/e1000-5.x/src/e1000_hw.h	/^            uint8_t ipcso;      \/* IP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon153::__anon154
ipcso	drivers/e1000-7.x/src/e1000_hw.h	/^            uint8_t ipcso;      \/* IP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon110::__anon111
ipcss	drivers/e1000-4.x/src/e1000_hw.h	/^            uint8_t ipcss;      \/* IP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon56::__anon57
ipcss	drivers/e1000-5.x/src/e1000_hw.h	/^            uint8_t ipcss;      \/* IP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon153::__anon154
ipcss	drivers/e1000-7.x/src/e1000_hw.h	/^            uint8_t ipcss;      \/* IP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon110::__anon111
iph	elements/analysis/fromnlanrdump.hh	/^	click_ip iph;$/;"	m	struct:FromNLANRDump::FRPlusCell
iph	elements/analysis/fromnlanrdump.hh	/^	click_ip iph;$/;"	m	struct:FromNLANRDump::TSHCell
iph	elements/analysis/ipsumdumpinfo.hh	/^    const click_ip *iph;$/;"	m	struct:IPSummaryDump::PacketDesc
ipos	lib/clp.c	/^    unsigned ipos : 1;$/;"	m	struct:__anon500	file:
iprefmatch	lib/clp.c	/^    unsigned iprefmatch : 1;$/;"	m	struct:__anon500	file:
ipv4_addr	drivers/e1000-4.x/src/e1000_hw.h	/^    volatile uint32_t ipv4_addr;        \/* IP Address (RW) *\/$/;"	m	struct:e1000_ipv4_at_entry
ipv4_addr	drivers/e1000-5.x/src/e1000_hw.h	/^    volatile uint32_t ipv4_addr;        \/* IP Address (RW) *\/$/;"	m	struct:e1000_ipv4_at_entry
ipv4_addr	drivers/e1000-7.x/src/e1000_hw.h	/^    volatile uint32_t ipv4_addr;        \/* IP Address (RW) *\/$/;"	m	struct:e1000_ipv4_at_entry
ipv6_addr	drivers/e1000-4.x/src/e1000_hw.h	/^    volatile uint8_t ipv6_addr[16];$/;"	m	struct:e1000_ipv6_at_entry
ipv6_addr	drivers/e1000-5.x/src/e1000_hw.h	/^    volatile uint8_t ipv6_addr[16];$/;"	m	struct:e1000_ipv6_at_entry
ipv6_addr	drivers/e1000-7.x/src/e1000_hw.h	/^    volatile uint8_t ipv6_addr[16];$/;"	m	struct:e1000_ipv6_at_entry
irq_handler_t	drivers/e1000-7.x/src/kcompat.h	/^typedef irqreturn_t (*irq_handler_t)(int, void*, struct pt_regs *);$/;"	t
irq_sem	drivers/e1000-4.x/src/e1000.h	/^	atomic_t irq_sem;$/;"	m	struct:e1000_adapter
irq_sem	drivers/e1000-5.x/src/e1000.h	/^	atomic_t irq_sem;$/;"	m	struct:e1000_adapter
irq_sem	drivers/e1000-7.x/src/e1000.h	/^	atomic_t irq_sem;$/;"	m	struct:e1000_adapter
irqreturn_t	drivers/e1000-5.x/src/kcompat.h	46;"	d
irqreturn_t	drivers/e1000-7.x/src/kcompat.h	135;"	d
is	include/click/clp.h	/^	int is[Clp_ValIntSize];$/;"	m	union:Clp_Parser::__anon460
is	include/click/confparse.hh	/^	int is[4];$/;"	m	union:cp_value::__anon479
is	include/click/lexer.hh	/^    bool is(int k) const		{ return _kind == k; }$/;"	f	class:Lexeme
is	tools/lib/lexert.hh	/^    bool is(int k) const		{ return _kind == k; }$/;"	f	class:Lexeme
isApplet	apps/ClickController/ClickController.java	/^    public boolean isApplet() {$/;"	m	class:ClickController
isInitialFrameBufferReady	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^bool FlowMpeg2AdaptDecap::isInitialFrameBufferReady()$/;"	f	class:FlowMpeg2AdaptDecap
isThisAlgorithm	elements/local/FlowNet/common/Algorithm.hh	/^inline bool Algorithm::isThisAlgorithm(const char* sn) const$/;"	f	class:Algorithm
isThisFrameReady	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^bool FlowMpeg2AdaptDecap::isThisFrameReady( FrameReceivingBuffer* buffer)$/;"	f	class:FlowMpeg2AdaptDecap
is_admitted_msg	elements/local/OpenFlow/lib/rconn.cc	/^is_admitted_msg(const struct ofpbuf *b)$/;"	f	file:
is_b_rate	include/clicknet/wifi.h	399;"	d
is_back	tools/lib/routert.hh	/^RouterT::conn_iterator::is_back() const$/;"	f	class:RouterT::conn_iterator
is_bandwidth	elements/standard/ratedsplitter.hh	/^    bool is_bandwidth() const		{ return class_name()[0] == 'B'; }$/;"	f	class:RatedSplitter
is_bandwidth	elements/standard/ratedunqueue.hh	/^    bool is_bandwidth() const		{ return class_name()[0] == 'B'; }$/;"	f	class:RatedUnqueue
is_bandwidth	elements/standard/shaper.hh	/^    bool is_bandwidth() const		{ return class_name()[0] == 'B'; }$/;"	f	class:Shaper
is_base	elements/linuxmodule/perfcountuser.hh	/^  bool is_base() const		{ return _metric0 > -2; }$/;"	f	class:PerfCountUser
is_broadcast	include/click/etheraddress.hh	/^    inline bool is_broadcast() const {$/;"	f	class:EtherAddress
is_connected_state	elements/local/OpenFlow/lib/rconn.cc	/^is_connected_state(enum state state) $/;"	f	file:
is_empty	elements/local/FlowNet/papmo/PaPMo.cc	/^bool lfc_buffer::is_empty()$/;"	f	class:lfc_buffer
is_error_type	elements/icmp/icmperror.cc	/^ICMPError::is_error_type(int type)$/;"	f	class:ICMPError
is_error_type	elements/ip6/icmp6error.cc	/^ICMP6Error::is_error_type(int type)$/;"	f	class:ICMP6Error
is_external_iface	conf/click-mkclgw.pl	/^sub is_external_iface {$/;"	s
is_full	elements/local/FlowNet/papmo/PaPMo.cc	/^bool lfc_buffer::is_full()$/;"	f	class:lfc_buffer
is_gateway	elements/grid/dsdvroutetable.hh	/^    bool                is_gateway;$/;"	m	class:DSDVRouteTable::RTEntry
is_gateway	elements/grid/grid.hh	/^    uint8_t \/* bool *\/ is_gateway;$/;"	m	struct:grid_nbr_entry
is_gateway	elements/grid/grid.hh	/^    uint8_t \/*bool*\/ is_gateway; \/\/ is the hello's transmitter also a gateway?$/;"	m	struct:grid_hello
is_gateway	elements/grid/gridgatewayinfo.cc	/^GridGatewayInfo::is_gateway()$/;"	f	class:GridGatewayInfo
is_gateway	elements/grid/gridroutetable.hh	/^    bool is_gateway;$/;"	m	class:GridRouteTable::RTEntry
is_group	include/click/etheraddress.hh	/^    inline bool is_group() const {$/;"	f	class:EtherAddress
is_gw	elements/grid/lookuplocalgridroute.cc	/^LookupLocalGridRoute::is_gw()$/;"	f	class:LookupLocalGridRoute
is_ich	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t is_ich;$/;"	m	struct:e1000_hw
is_integer	include/click/type_traits.hh	/^    static constexpr bool is_integer = false;$/;"	m	struct:integer_traits
is_integer	include/click/type_traits.hh	/^    static constexpr bool is_integer = true;$/;"	m	struct:integer_traits
is_integer	include/click/type_traits.hh	/^template<typename T> constexpr bool integer_traits<T>::is_integer;$/;"	m	class:integer_traits
is_internal_dns	conf/click-mkclgw.pl	/^sub is_internal_dns {$/;"	s
is_ip	conf/click-mkclgw.pl	/^sub is_ip { return 0; }$/;"	s
is_ip	conf/click-mkclgw.pl	/^sub is_ip { return 1; }$/;"	s
is_ip	elements/analysis/ipsumdumpinfo.hh	/^    bool is_ip;$/;"	m	struct:IPSummaryDump::PacketOdesc
is_local	include/click/etheraddress.hh	/^    inline bool is_local() const {$/;"	f	class:EtherAddress
is_multicast	include/click/ipaddress.hh	/^    inline bool is_multicast() const {$/;"	f	class:IPAddress
is_napt	conf/click-mkclgw.pl	/^sub is_napt { return 0; }$/;"	s
is_negative	include/click/timestamp.hh	/^    inline bool is_negative() const {$/;"	f	class:Timestamp
is_numeric	include/click/type_traits.hh	/^    static constexpr bool is_numeric = false;$/;"	m	struct:integer_traits
is_numeric	include/click/type_traits.hh	/^    static constexpr bool is_numeric = true;$/;"	m	struct:integer_traits
is_numeric	include/click/type_traits.hh	/^template<typename T> constexpr bool integer_traits<T>::is_numeric;$/;"	m	class:integer_traits
is_redirect_type	elements/ip6/icmp6error.cc	/^ICMP6Error::is_redirect_type(int type)$/;"	f	class:ICMP6Error
is_same_frameindex	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.cc	/^int FrameReceivingBuffer::is_same_frameindex(Packet* p)$/;"	f	class:FrameReceivingBuffer
is_scheduled	include/click/task.hh	/^	    uint8_t is_scheduled;$/;"	m	struct:Task::Status::__anon456
is_server_adapter	drivers/e1000-4.x/src/ans.h	/^	u32 is_server_adapter;$/;"	m	union:_iANSsupport_t::__anon38
is_short	lib/clp.c	/^    unsigned char is_short;$/;"	m	struct:Clp_Internal	file:
is_short	lib/clp.c	/^    unsigned char is_short;$/;"	m	struct:Clp_ParserState	file:
is_signed	include/click/timestamp.hh	/^    bool is_signed;$/;"	m	struct:TimestampArg
is_signed	include/click/type_traits.hh	/^    static constexpr bool is_signed = false;$/;"	m	struct:integer_traits
is_signed	include/click/type_traits.hh	/^    static constexpr bool is_signed = true;$/;"	m	struct:integer_traits
is_strong_unscheduled	include/click/task.hh	/^	    uint8_t is_strong_unscheduled;$/;"	m	struct:Task::Status::__anon456
is_valid_ether_addr	drivers/e1000-4.x/src/kcompat.h	352;"	d
is_valid_ether_addr	drivers/e1000-5.x/src/kcompat.h	422;"	d
is_valid_ether_addr	drivers/e1000-7.x/src/kcompat.h	577;"	d
is_zero	lib/args.cc	/^    bool is_zero() const {$/;"	f	struct:__anon505::fraction_accum
isalnum	include/click/glue.hh	279;"	d
iscluster	conf/click-mkclgw.pl	/^sub iscluster { return 0; }$/;"	s
iscluster	conf/click-mkclgw.pl	/^sub iscluster { return 1; }$/;"	s
ishort	lib/clp.c	/^    unsigned ishort : 1;$/;"	m	struct:__anon500	file:
isolated	include/click/list.hh	/^    bool isolated(const_pointer x) {$/;"	f	class:List
isoutput	lib/lexer.cc	/^  bool isoutput() const			{ return _isoutput; }$/;"	f	class:Lexer::TunnelEnd
issue_rerr	elements/grid/dsrroutetable.cc	/^DSRRouteTable::issue_rerr(IPAddress bad_src, IPAddress bad_dst, IPAddress src,$/;"	f	class:DSRRouteTable
issue_rrep	elements/grid/dsrroutetable.cc	/^DSRRouteTable::issue_rrep(IPAddress src, IPAddress dst,$/;"	f	class:DSRRouteTable
issue_rreq	elements/grid/dsrroutetable.cc	/^DSRRouteTable::issue_rreq(IPAddress dst, unsigned int ttl, bool unicast)$/;"	f	class:DSRRouteTable
istx	include/clicknet/wifi.h	/^  p80211item_uint32_t istx;$/;"	m	struct:__anon498
it_len	include/clicknet/radiotap.h	/^	u_int16_t       it_len;         \/* length of the whole$/;"	m	struct:ieee80211_radiotap_header
it_pad	include/clicknet/radiotap.h	/^	u_int8_t	it_pad;$/;"	m	struct:ieee80211_radiotap_header
it_present	include/clicknet/radiotap.h	/^	u_int32_t       it_present;     \/* A bitmap telling which$/;"	m	struct:ieee80211_radiotap_header
it_version	include/clicknet/radiotap.h	/^	u_int8_t	it_version;	\/* Version 0. Only increases$/;"	m	struct:ieee80211_radiotap_header
item_compar	tools/click-pretty/click-pretty.cc	/^item_compar(const void *v1, const void *v2)$/;"	f	file:
item_index	tools/click-pretty/click-pretty.cc	/^OutputItem::item_index() const$/;"	f	class:OutputItem
items	lib/clp.c	/^    Clp_Option *items;$/;"	m	struct:Clp_StringList	file:
items	tools/click-pretty/click-pretty.cc	/^static Vector<OutputItem> items;$/;"	v	file:
items_prepared	tools/click-pretty/click-pretty.cc	/^static bool items_prepared;$/;"	v	file:
iter_flows	elements/local/OpenFlow/lib/table-linear.cc	/^    struct list iter_flows;$/;"	m	struct:sw_table_linear	typeref:struct:sw_table_linear::list	file:
iter_node	elements/local/OpenFlow/lib/switch-flow.hh	/^    struct list iter_node;$/;"	m	struct:sw_flow	typeref:struct:sw_flow::list
iterate	elements/local/OpenFlow/lib/table.hh	/^    int (*iterate)(struct sw_table *table,$/;"	m	struct:sw_table
iteration	elements/grid/linktester.hh	/^    unsigned int iteration;$/;"	m	struct:LinkTester::payload_t
iterator	apps/clicky/src/dwidget.hh	/^	iterator()$/;"	f	class:clicky::delt::iterator
iterator	apps/clicky/src/dwidget.hh	/^	iterator(const delt *parent)$/;"	f	class:clicky::delt::iterator
iterator	apps/clicky/src/dwidget.hh	/^    class iterator {$/;"	c	class:clicky::delt
iterator	apps/clicky/src/gathererror.hh	/^    typedef Vector<Message>::iterator iterator;$/;"	t	class:GatherErrorHandler
iterator	apps/clicky/src/hvalues.hh	/^    typedef handler_value_iterator iterator;$/;"	t	struct:clicky::handler_values
iterator	include/click/dequeue.hh	/^	iterator(DEQueue<T> &q, int p) : const_iterator(q, p) { }$/;"	f	struct:DEQueue::iterator
iterator	include/click/dequeue.hh	/^	iterator(const iterator &i) : const_iterator(i._q, i._pos) { }$/;"	f	struct:DEQueue::iterator
iterator	include/click/dequeue.hh	/^    struct iterator : public const_iterator {$/;"	s	class:DEQueue
iterator	include/click/hashcontainer.hh	/^    typedef HashContainer_iterator<T, A> iterator;$/;"	t	class:HashContainer
iterator	include/click/hashmap.hh	/^  typedef _HashMap_iterator<K, T *> iterator;$/;"	t	class:HashMap
iterator	include/click/hashmap.hh	/^  typedef _HashMap_iterator<K, V> iterator;$/;"	t	class:HashMap
iterator	include/click/hashmap.hh	/^  typedef _HashMap_iterator<K, void *> iterator;$/;"	t	class:HashMap
iterator	include/click/hashtable.hh	/^    typedef HashTable_iterator<T> iterator;$/;"	t	class:HashTable
iterator	include/click/hashtable.hh	/^    typedef HashTable_iterator<value_type> iterator;$/;"	t	class:HashTable
iterator	include/click/list.hh	/^	iterator()$/;"	f	class:List::iterator
iterator	include/click/list.hh	/^	iterator(List<T, member> *list)$/;"	f	class:List::iterator
iterator	include/click/list.hh	/^	iterator(T *x)$/;"	f	class:List::iterator
iterator	include/click/list.hh	/^	iterator(T *x, List<T, member> *list)$/;"	f	class:List::iterator
iterator	include/click/list.hh	/^    class iterator : public const_iterator { public:$/;"	c	class:List
iterator	include/click/straccum.hh	/^    typedef char *iterator;$/;"	t	class:StringAccum
iterator	include/click/string.hh	/^    typedef const_iterator iterator;$/;"	t	class:String
iterator	include/click/vector.hh	/^    typedef T* iterator;$/;"	t	class:Vector
iterator	include/click/vector.hh	/^    typedef T** iterator;$/;"	t	class:Vector
iterator	include/click/vector.hh	/^    typedef void** iterator;$/;"	t	class:Vector
iterator	tools/lib/routert.hh	/^    iterator()				: const_iterator() { }$/;"	f	class:RouterT::iterator
iterator	tools/lib/routert.hh	/^    iterator(RouterT *r, int ei)	: const_iterator(r, ei) { }$/;"	f	class:RouterT::iterator
iterator	tools/lib/routert.hh	/^class RouterT::iterator : public RouterT::const_iterator { public:$/;"	c	class:RouterT
ith	conf/click-mkclgw.pl	/^sub ith { return undef; }$/;"	s
ith	conf/click-mkclgw.pl	/^sub ith {$/;"	s
itr	drivers/e1000-5.x/src/e1000.h	/^	uint32_t itr;$/;"	m	struct:e1000_adapter
itr	drivers/e1000-7.x/src/e1000.h	/^	uint32_t itr;$/;"	m	struct:e1000_adapter
itr_setting	drivers/e1000-7.x/src/e1000.h	/^	uint32_t itr_setting;$/;"	m	struct:e1000_adapter
iv	elements/wifi/wepdecap.hh	/^  u_int32_t iv;$/;"	m	class:WepDecap
iv	elements/wifi/wepencap.hh	/^  u_int32_t iv;$/;"	m	class:WepEncap
j	elements/standard/classification.hh	/^    int32_t j[2];$/;"	m	struct:Classification::Wordwise::Insn
j	tools/click-fastclassifier/click-fastclassifier.hh	/^    int j[2];$/;"	m	struct:Classifier_Insn
j_failure	elements/standard/classification.hh	/^    j_failure,			\/\/ Parse-time output for fail branch.$/;"	e	enum:Classification::Jumps
j_never	elements/standard/classification.hh	/^    j_never = -2147483647,	\/\/ Output means "drop packet."$/;"	e	enum:Classification::Jumps
j_success	elements/standard/classification.hh	/^    j_success			\/\/ Parse-time output for success branch.$/;"	e	enum:Classification::Jumps
jiff_diff_as_msec	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::jiff_diff_as_msec(unsigned int j1, unsigned int j2, bool &neg)$/;"	f	class:DSDVRouteTable
jiff_diff_string	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::jiff_diff_string(unsigned int j1, unsigned int j2) {$/;"	f	class:DSDVRouteTable
jiff_to_msec	elements/grid/dsdvroutetable.hh	/^  static unsigned int jiff_to_msec(unsigned int j)$/;"	f	class:DSDVRouteTable
jiff_to_msec	elements/grid/gridroutetable.hh	/^  static int jiff_to_msec(int j)$/;"	f	class:GridRouteTable
jiffies	include/click/timestamp.hh	/^Timestamp::jiffies() const$/;"	f	class:Timestamp
join_scheduler	include/click/standard/scheduleinfo.hh	/^ScheduleInfo::join_scheduler(Element* e, Task* t, ErrorHandler* errh)$/;"	f	class:ScheduleInfo
jvcomp	elements/ip/siphmapper.hh	/^jvcomp (const void *a, const void *b, void *)$/;"	f
jvtree_t	elements/ip/siphmapper.hh	/^  jvtree_t (int sz, C *arr)$/;"	f	class:jvtree_t
jvtree_t	elements/ip/siphmapper.hh	/^class jvtree_t$/;"	c
k_ethtool_drvinfo	drivers/e1000-5.x/src/kcompat.h	/^struct k_ethtool_drvinfo {$/;"	s
k_ethtool_drvinfo	drivers/e1000-7.x/src/kcompat.h	/^struct k_ethtool_drvinfo {$/;"	s
kbuild	click-buildtool	/^kbuild () {$/;"	f
kbuild_usage	click-buildtool	/^kbuild_usage () {$/;"	f
kernel_drops	elements/userlevel/fromdevice.cc	/^FromDevice::kernel_drops(bool& known, int& max_drops) const$/;"	f	class:FromDevice
kevent_compare	lib/selectset.cc	/^kevent_compare(const void *ap, const void *bp, void *)$/;"	f	file:
key	elements/ip/ipfragmentmap.hh	/^	IPFlowID key;		\/\/ sport is ip_id, dport is ip_p$/;"	m	struct:IPFragmentMap::Entry
key	elements/ip/radixiplookup.cc	/^	int key;$/;"	m	struct:RadixIPLookup::Radix::Child	file:
key	elements/ip/siphmapper.hh	/^  K key;$/;"	m	class:chash_node_t
key	elements/ipsec/hmac.hh	/^	unsigned char key[HMAC_MAX_MD_CBLOCK];$/;"	m	struct:hmac_ctx_st
key	elements/ipsec/radixipseclookup.hh	/^	int key;$/;"	m	struct:RadixIPsecLookup::Radix::Child
key	elements/local/OpenFlow/lib/switch-flow.hh	/^    struct sw_flow_key key;$/;"	m	struct:sw_flow	typeref:struct:sw_flow::sw_flow_key
key	include/click/hashmap.hh	/^    K key;$/;"	m	struct:HashMap::Pair
key	include/click/hashmap.hh	/^    const K &key() const	{ return _i.key(); }$/;"	f	class:_HashMap_const_iterator
key	include/click/hashmap.hh	/^  const K &key() const			{ return _elt->key; }$/;"	f	class:_HashMap_const_iterator
key	include/click/hashtable.hh	/^    const K &key() const {$/;"	f	class:HashTable_const_iterator
key	include/click/hashtable.hh	/^    typename HashTable<T>::key_const_reference key() const {$/;"	f	class:HashTable_const_iterator
key	ns/CUT_BinHeap.h	/^      Key key;$/;"	m	class:CUT_BinHeap::Node
key	ns/CUT_BinHeap.h	/^  const Key&  key(Pix xx) const {$/;"	f	class:CUT_BinHeap
key_const_reference	apps/clicky/src/hvalues.hh	/^    typedef const String &key_const_reference;$/;"	t	class:clicky::handler_value
key_const_reference	elements/ethernet/arptable.hh	/^	typedef IPAddress key_const_reference;$/;"	t	struct:ARPTable::ARPEntry
key_const_reference	elements/ip/ipfragmentmap.hh	/^	typedef const IPFlowID &key_const_reference;$/;"	t	struct:IPFragmentMap::Entry
key_const_reference	elements/ip/iprwmapping.hh	/^    typedef const IPFlowID &key_const_reference;$/;"	t	class:IPRewriterEntry
key_const_reference	elements/test/hashtabletest.cc	/^    typedef int key_const_reference;$/;"	t	struct:MyHashContainerEntry	file:
key_const_reference	include/click/hashcontainer.hh	/^    typedef typename T::key_const_reference key_const_reference;$/;"	t	class:HashContainer_adapter
key_const_reference	include/click/hashtable.hh	/^	typedef typename T::key_const_reference key_const_reference;$/;"	t	struct:HashTable::elt
key_const_reference	include/click/hashtable.hh	/^    typedef const K &key_const_reference;$/;"	t	class:HashTable
key_const_reference	include/click/hashtable.hh	/^    typedef typename T::key_const_reference key_const_reference;$/;"	t	class:HashTable
key_const_reference	include/click/pair.hh	/^    typedef const T &key_const_reference;$/;"	t	struct:Pair
key_for	elements/ip/radixiplookup.cc	/^    int &key_for(int i) {$/;"	f	class:RadixIPLookup::Radix	file:
key_length	elements/ipsec/hmac.hh	/^	unsigned int key_length;$/;"	m	struct:hmac_ctx_st
key_priority	elements/ipsec/radixipseclookup.hh	/^	uint32_t key_priority;$/;"	m	struct:RadixIPsecLookup::Radix::Child
key_type	apps/clicky/src/hvalues.hh	/^    typedef String key_type;$/;"	t	class:clicky::handler_value
key_type	elements/ethernet/arptable.hh	/^	typedef IPAddress key_type;$/;"	t	struct:ARPTable::ARPEntry
key_type	elements/ip/ipfragmentmap.hh	/^	typedef IPFlowID key_type;$/;"	t	struct:IPFragmentMap::Entry
key_type	elements/ip/iprwmapping.hh	/^    typedef IPFlowID key_type;$/;"	t	class:IPRewriterEntry
key_type	elements/test/hashtabletest.cc	/^    typedef int key_type;$/;"	t	struct:MyHashContainerEntry	file:
key_type	include/click/hashcontainer.hh	/^    typedef typename A::key_type key_type;$/;"	t	class:HashContainer
key_type	include/click/hashcontainer.hh	/^    typedef typename T::key_type key_type;$/;"	t	class:HashContainer_adapter
key_type	include/click/hashmap.hh	/^    typedef K key_type;$/;"	t	class:HashMap
key_type	include/click/hashtable.hh	/^	typedef typename T::key_type key_type;$/;"	t	struct:HashTable::elt
key_type	include/click/hashtable.hh	/^    typedef K key_type;$/;"	t	class:HashTable
key_type	include/click/hashtable.hh	/^    typedef typename T::key_type key_type;$/;"	t	class:HashTable
key_type	include/click/pair.hh	/^    typedef T key_type;$/;"	t	struct:Pair
keys	include/click/llrpc.h	/^    uint32_t keys[CLICK_LLRPC_COUNTS_SIZE];$/;"	m	struct:click_llrpc_counts_st
keyword	include/click/confparse.hh	/^    const char* keyword;$/;"	m	struct:cp_value
keywords_only	lib/confparse.cc	/^  bool keywords_only;$/;"	m	struct:__anon517::CpVaHelper	file:
kid1	ns/CUT_BinHeap.h	/^      Node* kid1;      \/\/ a child$/;"	m	class:CUT_BinHeap::Node
kid2	ns/CUT_BinHeap.h	/^      Node* kid2;      \/\/ a child$/;"	m	class:CUT_BinHeap::Node
kill	elements/analysis/timefilter.cc	/^TimeFilter::kill(Packet *p)$/;"	f	class:TimeFilter
kill	elements/ip/iproutetable.hh	/^    inline void kill()		{ addr = 0; mask = 0xFFFFFFFFU; port = -0x80000000; }$/;"	f	struct:IPRoute
kill	elements/ipsec/ipsecroutetable.hh	/^    inline void kill()		{ addr = 0; mask = 0xFFFFFFFFU; port = -0x80000000; }$/;"	f	struct:IPsecRoute
kill	include/click/archive.hh	/^    void kill() {$/;"	f	struct:ArchiveElement
kill	include/click/packet.hh	/^Packet::kill()$/;"	f	class:Packet
kill	tools/click-devirtualize/cxxclass.hh	/^  void kill()				{ _alive = false; }$/;"	f	class:CxxFunction
kill	tools/lib/elementt.cc	/^ElementT::kill()$/;"	f	class:ElementT
kill_bad_connections	tools/lib/routert.cc	/^RouterT::kill_bad_connections()$/;"	f	class:RouterT
kill_current_configuration	tools/click-install/common.cc	/^kill_current_configuration(ErrorHandler *errh)$/;"	f	file:
kill_driver	apps/clicky/src/crouter.cc	/^void crouter::kill_driver()$/;"	f	class:clicky::crouter
kill_router	bsdmodule/config.cc	/^kill_router()$/;"	f	file:
kill_router	lib/master.cc	/^Master::kill_router(Router *router)$/;"	f	class:Master
kill_router	lib/routerthread.cc	/^RouterThread::kill_router(Router *r)$/;"	f	class:RouterThread
kill_router	lib/selectset.cc	/^SelectSet::kill_router(Router *router)$/;"	f	class:SelectSet
kill_router	lib/timerset.cc	/^TimerSet::kill_router(Router *router)$/;"	f	class:TimerSet
kill_router	linuxmodule/config.cc	/^kill_router()$/;"	f	file:
kill_router_threads	bsdmodule/sched.cc	/^kill_router_threads()$/;"	f	file:
kill_router_threads	linuxmodule/sched.cc	/^kill_router_threads()$/;"	f	file:
kill_with_dialog	apps/clicky/src/cdriver.cc	/^gboolean csocket_cdriver::kill_with_dialog(GatherErrorHandler *gerrh, int begin_pos, const char *format, ...)$/;"	f	class:clicky::csocket_cdriver
killed_buffer	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int killed_buffer;$/;"	m	class:FlowMpeg2AdaptDecap
killed_pkt	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	uint16_t killed_pkt[MAX_KILLED_PKT_SIZE];$/;"	m	class:FlowMpeg2AdaptDecap
kind	elements/ip/iprewriterbase.hh	/^    int kind;$/;"	m	struct:IPRewriterInput
kind	elements/standard/randomerror.hh	/^  int kind() const				{ return _kind; }$/;"	f	class:RandomBitErrors
kind	include/click/lexer.hh	/^    int kind() const			{ return _kind; }$/;"	f	class:Lexeme
kind	tools/lib/lexert.hh	/^    int kind() const			{ return _kind; }$/;"	f	class:Lexeme
klasses	apps/clicky/src/dstyle.hh	/^    const Vector<String> &klasses() const {$/;"	f	class:clicky::dcss_selector
kmrn_lock_loss_workaround_disabled	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t kmrn_lock_loss_workaround_disabled;$/;"	m	struct:e1000_hw
known	elements/ethernet/arptable.hh	/^	bool known(click_jiffies_t now, uint32_t timeout_j) const {$/;"	f	struct:ARPTable::ARPEntry
known_ports	elements/ip/ipnameinfo.cc	/^static const StaticNameDB::Entry known_ports[] = {$/;"	v	file:
ks	elements/ipsec/des.hh	/^  } ks;$/;"	m	struct:des_ks_struct	typeref:union:des_ks_struct::__anon217
ksyms	click-buildtool	/^ksyms () {$/;"	f
ksyms_usage	click-buildtool	/^ksyms_usage () {$/;"	f
ktime	include/click/timestamp.hh	/^	ktime_t ktime;$/;"	m	union:Timestamp::rep_t
kversion	click-buildtool	/^kversion () {$/;"	f
kversion_usage	click-buildtool	/^kversion_usage () {$/;"	f
kwDupKeyword	lib/confparse.cc	/^    kwDupKeyword = -1,$/;"	e	enum:__anon515	file:
kwMissingKeyword	lib/confparse.cc	/^    kwMissingKeyword = -4$/;"	e	enum:__anon515	file:
kwNoKeyword	lib/confparse.cc	/^    kwNoKeyword = -2,$/;"	e	enum:__anon515	file:
kwSuccess	lib/confparse.cc	/^    kwSuccess = 0,$/;"	e	enum:__anon515	file:
kwUnkKeyword	lib/confparse.cc	/^    kwUnkKeyword = -3,$/;"	e	enum:__anon515	file:
kzalloc	drivers/e1000-7.x/src/kcompat.h	1032;"	d
l	drivers/e1000-4.x/src/e1000_param.c	/^		} l;$/;"	m	union:e1000_option::__anon67	typeref:struct:e1000_option::__anon67::__anon69	file:
l	drivers/e1000-5.x/src/e1000_param.c	/^		} l;$/;"	m	union:e1000_option::__anon164	typeref:struct:e1000_option::__anon164::__anon166	file:
l	drivers/e1000-7.x/src/e1000_param.c	/^		} l;$/;"	m	union:e1000_option::__anon122	typeref:struct:e1000_option::__anon122::__anon124	file:
l2	elements/local/OpenFlow/lib/ofpbuf.hh	/^    void *l2;                   \/* Link-level header. *\/$/;"	m	struct:ofpbuf
l2_mapping	elements/local/FlowNet/scheduler/sched_algorithms/SchedBackpressure.cc	/^int VcScheduleBackpressure::l2_mapping(Flow* flow_in, uint8_t* l2_index)$/;"	f	class:VcScheduleBackpressure
l2_mapping	elements/local/FlowNet/scheduler/sched_algorithms/SchedHorizon.cc	/^int VcScheduleHorizon::l2_mapping(Flow *, uint8_t* l2_index)$/;"	f	class:VcScheduleHorizon
l2_mapping	elements/local/FlowNet/scheduler/sched_algorithms/SchedLogWeight.cc	/^int VcScheduleLogWeight::l2_mapping(Flow* flow_in, uint8_t* l2_index)$/;"	f	class:VcScheduleLogWeight
l2_mapping	elements/local/FlowNet/scheduler/sched_algorithms/SchedNoSchedule.cc	/^int VcScheduleNoSchedule::l2_mapping(Flow* , uint8_t* l2_index)$/;"	f	class:VcScheduleNoSchedule
l2_mapping	elements/local/FlowNet/scheduler/sched_algorithms/SchedWBS.cc	/^int VcScheduleWBS::l2_mapping(Flow* flow_in, uint8_t* l2_index)$/;"	f	class:VcScheduleWBS
l2c	elements/ipsec/des.cc	133;"	d	file:
l2c	elements/ipsec/sha1_impl.cc	153;"	d	file:
l2c	elements/ipsec/sha1_impl.cc	154;"	d	file:
l3	elements/local/OpenFlow/lib/ofpbuf.hh	/^    void *l3;                   \/* Network-level header. *\/$/;"	m	struct:ofpbuf
l4	elements/local/OpenFlow/lib/ofpbuf.hh	/^    void *l4;                   \/* Transport-level header. *\/$/;"	m	struct:ofpbuf
l7	elements/local/OpenFlow/lib/ofpbuf.hh	/^    void *l7;                   \/* Application data. *\/$/;"	m	struct:ofpbuf
laa_is_present	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t laa_is_present;$/;"	m	struct:e1000_hw
labelstr	conf/click-mkclgw.pl	/^sub labelstr { $/;"	s
labelstr_gw_override	conf/click-mkclgw.pl	/^sub labelstr_gw_override { $/;"	s
labelstr_gw_override	conf/click-mkclgw.pl	/^sub labelstr_gw_override {$/;"	s
landmark	apps/clicky/src/crouter.hh	/^    String landmark() const {$/;"	f	class:clicky::crouter
landmark	include/click/fromfile.hh	/^    String landmark() const		{ return landmark(_landmark_pattern); }$/;"	f	class:FromFile
landmark	lib/element.cc	/^Element::landmark() const$/;"	f	class:Element
landmark	lib/fromfile.cc	/^FromFile::landmark(const String &landmark_pattern) const$/;"	f	class:FromFile
landmark	lib/lexer.cc	/^  const String &landmark() const	{ return _landmark; }$/;"	f	class:Lexer::Compound
landmark	lib/lexer.cc	/^Lexer::FileState::landmark() const$/;"	f	class:Lexer::FileState
landmark	tools/click2xml/xml2click.hh	/^    String landmark;$/;"	m	struct:CxElement
landmark	tools/lib/eclasst.hh	/^    virtual String landmark() const	{ return String(); }$/;"	f	class:ElementClassT
landmark	tools/lib/elementt.hh	/^    String landmark() const		{ return _landmark.str(); }$/;"	f	class:ConnectionT
landmark	tools/lib/elementt.hh	/^    String landmark() const		{ return _landmark.str(); }$/;"	f	struct:ElementT
landmark	tools/lib/lexert.cc	/^LexerT::FileState::landmark() const$/;"	f	class:LexerT::FileState
landmark	tools/lib/routert.hh	/^    String landmark() const		{ return _type_landmark.str(); }$/;"	f	class:RouterT
landmark_string	lib/lexer.cc	/^    static String landmark_string(const String &filename, unsigned lineno) {$/;"	f	class:Lexer::Compound
landmarkt	tools/lib/elementt.hh	/^    const LandmarkT &landmarkt() const	{ return _landmark; }$/;"	f	class:ConnectionT
landmarkt	tools/lib/elementt.hh	/^    const LandmarkT &landmarkt() const	{ return _landmark; }$/;"	f	struct:ElementT
landmarkt	tools/lib/lexert.hh	/^	LandmarkT landmarkt(const char *pos1, const char *pos2) const {$/;"	f	struct:LexerT::FileState
landmarkt	tools/lib/lexert.hh	/^LexerT::landmarkt(const char *pos1, const char *pos2) const$/;"	f	class:LexerT
lanidtonetif_	ns/nsclick-test.cc	/^    map< int,vector<netif> > lanidtonetif_;$/;"	m	class:TestClickSimulator	file:
last	elements/bsdmodule/fastudpsrc.hh	/^  click_jiffies_t last() { return _last; }$/;"	f	class:FastUDPSource
last	elements/linuxmodule/fasttcpflows.hh	/^  click_jiffies_t last() { return _last; }$/;"	f	class:FastTCPFlows
last	elements/linuxmodule/fastudpflows.hh	/^  click_jiffies_t last() { return _last; }$/;"	f	class:FastUDPFlows
last	elements/linuxmodule/fastudpsrc.hh	/^  click_jiffies_t last() { return _last; }$/;"	f	class:FastUDPSource
last	elements/linuxmodule/fastudpsrcip6.hh	/^  click_jiffies_t last() { return _last; }$/;"	f	class:FastUDPSourceIP6
last	elements/standard/averagecounter.hh	/^    uint32_t last() const			{ return _last; }$/;"	f	class:AverageCounter
last_admitted	elements/local/OpenFlow/lib/rconn.cc	/^    time_t last_admitted;$/;"	m	struct:rconn	file:
last_adv_metric	elements/grid/dsdvroutetable.hh	/^    metric_t            last_adv_metric;       \/\/ last metric we advertised$/;"	m	class:DSDVRouteTable::RTEntry
last_bcast	elements/grid/grid.hh	/^    struct timeval last_bcast;$/;"	m	struct:grid_nbr_encap	typeref:struct:grid_nbr_encap::timeval
last_bcast	elements/grid/grid.hh	/^    struct timeval last_bcast;$/;"	m	struct:grid_nbr_entry	typeref:struct:grid_nbr_entry::timeval
last_bcast	elements/grid/linktracker.hh	/^    Timestamp last_bcast;$/;"	m	struct:LinkTracker::bcast_t
last_bcast_time	elements/grid/linktester.cc	/^LinkTester::last_bcast_time(unsigned int iter, bool before)$/;"	f	class:LinkTester
last_common_state_in_lists	elements/standard/classification.cc	/^DominatorOptimizer::last_common_state_in_lists(const Vector<int> &in, const Vector<int> &start, const Vector<int> &end)$/;"	f	class:Classification::Wordwise::DominatorOptimizer
last_connected	elements/local/OpenFlow/lib/rconn.cc	/^    time_t last_connected;$/;"	m	struct:rconn	file:
last_data	elements/grid/linktracker.hh	/^    Timestamp last_data; \/\/ when last data was generated by other end of link (other node's time)$/;"	m	struct:LinkTracker::stat_t
last_expired_jiffies	elements/grid/dsdvroutetable.hh	/^    unsigned int        last_expired_jiffies;  \/\/ when the route was expired (if broken)$/;"	m	class:DSDVRouteTable::RTEntry
last_fill	elements/local/OpenFlow/lib/vlog.hh	/^    time_t last_fill;           \/* Last time tokens added. *\/$/;"	m	struct:vlog_rate_limit
last_forwarder_eth	elements/grid/dsrroutetable.cc	/^DSRRouteTable::last_forwarder_eth(Packet *p)$/;"	f	class:DSRRouteTable
last_frame_index	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int last_frame_index;$/;"	m	class:FlowMpeg2AdaptDecap
last_hop_ip	elements/grid/dsrarptable.cc	/^DSRArpTable::last_hop_ip(Packet *p)$/;"	f	class:DSRArpTable
last_jiffies	elements/grid/locqueryresponder.hh	/^    unsigned int last_jiffies;$/;"	m	struct:LocQueryResponder::seq_t
last_pos	elements/ip/ipfilter.hh	/^	    int last_pos;$/;"	m	struct:IPFilter::Parser::parse_state
last_questioned	elements/local/OpenFlow/lib/rconn.cc	/^    time_t last_questioned;$/;"	m	struct:rconn	file:
last_received	elements/local/OpenFlow/lib/rconn.cc	/^    time_t last_received;$/;"	m	struct:rconn	file:
last_receiving_frametype	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^	int last_receiving_frametype;$/;"	m	class:FlowMpeg2AdaptEncap
last_record	elements/analysis/fromflandump.hh	/^FromFlanDump::FlanFile::last_record() const$/;"	f	class:FromFlanDump::FlanFile
last_response_jiffies	elements/ethernet/ip6ndsolicitor.hh	/^    click_jiffies_t last_response_jiffies;$/;"	m	struct:IP6NDSolicitor::NDEntry
last_response_jiffies	elements/grid/floodinglocquerier.hh	/^    unsigned int last_response_jiffies;$/;"	m	struct:FloodingLocQuerier::LocEntry
last_response_jiffies	elements/grid/floodinglocquerier.hh	/^    unsigned int last_response_jiffies;$/;"	m	struct:FloodingLocQuerier::seq_t
last_savefile	apps/clicky/src/wmain.cc	/^String wmain::last_savefile;$/;"	m	class:clicky::wmain	file:
last_savefile	apps/clicky/src/wmain.hh	/^    static String last_savefile;$/;"	m	class:clicky::wmain
last_seen_jiffies	elements/grid/dsdvroutetable.hh	/^    unsigned int        last_seen_jiffies;     \/\/ last time this dest said it `saw' us (advertised a route to us)$/;"	m	class:DSDVRouteTable::RTEntry
last_seq	elements/analysis/fromtcpdump.hh	/^	tcp_seq_t last_seq[2];$/;"	m	struct:FromTcpdump::FlowRecord
last_seq_jiffies	elements/grid/dsdvroutetable.hh	/^    unsigned int        last_seq_jiffies;      \/\/ last time the seq_no changed$/;"	m	class:DSDVRouteTable::RTEntry
last_timestamp	elements/analysis/aggregateipaddrpair.hh	/^	Timestamp last_timestamp;$/;"	m	struct:AggregateIPAddrPair::FlowInfo
last_tx_tso	drivers/e1000-7.x/src/e1000.h	/^	boolean_t last_tx_tso;$/;"	m	struct:e1000_tx_ring
last_unicast_time	elements/grid/linktester.cc	/^LinkTester::last_unicast_time(unsigned int iter)$/;"	f	class:LinkTester
last_update	elements/grid/linktracker.hh	/^    Timestamp last_update; \/\/ when we last updated the data (our time)$/;"	m	struct:LinkTracker::stat_t
last_update	elements/grid/linktracker.hh	/^    Timestamp last_update;$/;"	m	struct:LinkTracker::bcast_t
last_update_time	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	struct	timeval last_update_time;$/;"	m	struct:FlowMpeg2AdaptDecapStat	typeref:struct:FlowMpeg2AdaptDecapStat::timeval
last_updated_jiffies	elements/grid/dsdvroutetable.hh	/^    unsigned int        last_updated_jiffies;  \/\/ last time this entry was updated$/;"	m	class:DSDVRouteTable::RTEntry
last_updated_jiffies	elements/grid/gridroutetable.hh	/^    int last_updated_jiffies; \/\/ last time this entry was updated$/;"	m	class:GridRouteTable::RTEntry
last_updated_jiffies	elements/grid/updateroutes.hh	/^    unsigned int last_updated_jiffies;$/;"	m	class:UpdateGridRoutes::NbrEntry
last_updated_jiffies	elements/grid/updateroutes.hh	/^    unsigned int last_updated_jiffies;$/;"	m	struct:UpdateGridRoutes::far_entry
lastoff	elements/ip/ipreassembler.hh	/^	uint16_t lastoff;$/;"	m	struct:IPReassembler::ChunkLink
lastseq	elements/ipsec/sadatatuple.hh	/^    uint32_t lastseq;	\/* in host order *\/$/;"	m	class:SADataTuple
lat	elements/grid/grid.hh	/^  double lat() const {$/;"	f	struct:grid_location
lat	elements/grid/locfromfile.hh	/^    double lat;$/;"	m	struct:LocFromFile::delta
lat_ms	elements/grid/grid.hh	/^    int32_t lat_ms() const { return ntohl(_mslat); }$/;"	f	struct:grid_location
latecol	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t latecol;$/;"	m	struct:e1000_hw_stats
latecol	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t latecol;$/;"	m	struct:e1000_hw_stats
latecol	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t latecol;$/;"	m	struct:e1000_hw_stats
latency_invalid	drivers/e1000-7.x/src/e1000_main.c	/^	latency_invalid = 255$/;"	e	enum:latency_range	file:
latency_range	drivers/e1000-7.x/src/e1000_main.c	/^enum latency_range {$/;"	g	file:
layout	apps/clicky/src/dwidget.cc	/^bool dconn::layout()$/;"	f	class:clicky::dconn
layout	apps/clicky/src/dwidget.cc	/^void delt::layout(dcontext &dcx)$/;"	f	class:clicky::delt
layout_complete	apps/clicky/src/dwidget.cc	/^void delt::layout_complete(dcontext &dcx, double dx, double dy)$/;"	f	class:clicky::delt
layout_compound_ports	apps/clicky/src/dwidget.cc	/^void delt::layout_compound_ports(crouter *cr)$/;"	f	class:clicky::delt
layout_compound_ports_copy	apps/clicky/src/dwidget.cc	/^void delt::layout_compound_ports_copy(delt *compound, bool isoutput)$/;"	f	class:clicky::delt
layout_contents	apps/clicky/src/dwidget.cc	/^void delt::layout_contents(dcontext &dcx)$/;"	f	class:clicky::delt
layout_main	apps/clicky/src/dwidget.cc	/^void delt::layout_main(dcontext &dcx)$/;"	f	class:clicky::delt
layout_ports	apps/clicky/src/dwidget.cc	/^void delt::layout_ports(dcontext &dcx)$/;"	f	class:clicky::delt
layout_recompute_bounds	apps/clicky/src/dwidget.cc	/^void delt::layout_recompute_bounds()$/;"	f	class:clicky::delt
layout_recompute_bounds	apps/clicky/src/wdiagram.cc	/^void cdiagram::layout_recompute_bounds()$/;"	f	class:clicky::cdiagram
lb_mapper	conf/click-mkclgw.pl	/^sub lb_mapper { return undef; }$/;"	s
lb_mapper	conf/click-mkclgw.pl	/^sub lb_mapper {$/;"	s
lb_mappers	conf/click-mkclgw.pl	/^sub lb_mappers ()$/;"	s
lctr	elements/analysis/fromdagdump.hh	/^	uint16_t lctr;$/;"	m	struct:FromDAGDump::DAGCell
ldebug	lib/error.cc	/^ErrorHandler::ldebug(const String &landmark, const char *fmt, ...)$/;"	f	class:ErrorHandler
le16_to_cpu	include/click/glue.hh	550;"	d
le32_to_cpu	include/click/glue.hh	552;"	d
leak_checker_claim	elements/local/OpenFlow/lib/leak-checker.cc	/^leak_checker_claim(const void *p UNUSED)$/;"	f
leak_checker_set_limit	elements/local/OpenFlow/lib/leak-checker.cc	/^leak_checker_set_limit(off_t max_size UNUSED)$/;"	f
leak_checker_start	elements/local/OpenFlow/lib/leak-checker.cc	/^leak_checker_start(const char *file_name UNUSED)$/;"	f
leak_checker_usage	elements/local/OpenFlow/lib/leak-checker.cc	/^leak_checker_usage(void)$/;"	f
leave_av_bit_off	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t leave_av_bit_off;$/;"	m	struct:e1000_hw
led_status	drivers/e1000-4.x/src/e1000.h	/^	unsigned long led_status;$/;"	m	struct:e1000_adapter
led_status	drivers/e1000-5.x/src/e1000.h	/^	unsigned long led_status;$/;"	m	struct:e1000_adapter
led_status	drivers/e1000-7.x/src/e1000.h	/^	unsigned long led_status;$/;"	m	struct:e1000_adapter
ledctl_default	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t ledctl_default;$/;"	m	struct:e1000_hw
ledctl_default	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t ledctl_default;$/;"	m	struct:e1000_hw
ledctl_default	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t ledctl_default;$/;"	m	struct:e1000_hw
ledctl_mode1	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t ledctl_mode1;$/;"	m	struct:e1000_hw
ledctl_mode1	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t ledctl_mode1;$/;"	m	struct:e1000_hw
ledctl_mode1	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t ledctl_mode1;$/;"	m	struct:e1000_hw
ledctl_mode2	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t ledctl_mode2;$/;"	m	struct:e1000_hw
ledctl_mode2	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t ledctl_mode2;$/;"	m	struct:e1000_hw
ledctl_mode2	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t ledctl_mode2;$/;"	m	struct:e1000_hw
left	elements/grid/packetlogger2.cc	/^PacketLogger2::left(Element *e, void *)$/;"	f	class:PacketLogger2
len	drivers/e1000-4.x/src/e1000_proc.c	/^	size_t len;				\/* sizeof data *\/$/;"	m	struct:proc_list	file:
len	drivers/e1000-5.x/src/kcompat.h	/^	u32	len; \/* bytes *\/$/;"	m	struct:_kc_ethtool_regs
len	drivers/e1000-5.x/src/kcompat.h	/^	u32     len;            \/* number of strings in the string set *\/$/;"	m	struct:ethtool_gstrings
len	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t len;$/;"	m	struct:ethtool_eeprom
len	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t len;$/;"	m	struct:ethtool_test
len	drivers/e1000-7.x/src/kcompat.h	/^	u32	len; \/* bytes *\/$/;"	m	struct:_kc_ethtool_regs
len	drivers/e1000-7.x/src/kcompat.h	/^	u32     len;            \/* number of strings in the string set *\/$/;"	m	struct:ethtool_gstrings
len	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t len;$/;"	m	struct:ethtool_eeprom
len	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t len;$/;"	m	struct:ethtool_test
len	elements/grid/airoinfo.cc	/^  unsigned short len;		\/\/ Len of data$/;"	m	struct:aironet_ioctl_t	file:
len	elements/local/FlowNet/common/Flow.hh	/^	uint32_t len;$/;"	m	struct:FlowID
len	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t len;                   \/* Length is 8. *\/$/;"	m	struct:nx_action_header
len	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t len;                   \/* Length is 8. *\/$/;"	m	struct:nx_action_snat
len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t len;                   \/* Length is 16. *\/$/;"	m	struct:ofp_action_dl_addr
len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t len;                   \/* Length is 8. *\/$/;"	m	struct:ofp_action_nw_addr
len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t len;                   \/* Length is 8. *\/$/;"	m	struct:ofp_action_nw_tos
len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t len;                   \/* Length is 8. *\/$/;"	m	struct:ofp_action_output
len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t len;                   \/* Length is 8. *\/$/;"	m	struct:ofp_action_tp_port
len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t len;                   \/* Length is 8. *\/$/;"	m	struct:ofp_action_vlan_pcp
len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t len;                   \/* Length is 8. *\/$/;"	m	struct:ofp_action_vlan_vid
len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t len;                   \/* Length is a multiple of 8. *\/$/;"	m	struct:ofp_action_vendor_header
len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t len;                   \/* Length of action, including this$/;"	m	struct:ofp_action_header
len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t len;             \/* Len is 16. *\/$/;"	m	struct:ofp_action_enqueue
len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t len;          \/* Length in bytes of this queue desc. *\/$/;"	m	struct:ofp_packet_queue
len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t len;         \/* Length of property, including this header. *\/$/;"	m	struct:ofp_queue_prop_header
len	elements/userlevel/fakepcap.hh	/^	uint32_t len;		\/* length this packet (off wire) *\/$/;"	m	struct:fake_pcap_pkthdr
len	elements/wifi/packetstore.hh	/^	  int len;$/;"	m	class:PacketStore::store
len	include/clicknet/wifi.h	/^		uint8_t		len;$/;"	m	struct:wifi_information::challenge
len	include/clicknet/wifi.h	/^  uint16_t len;$/;"	m	struct:__anon497
len	include/clicknet/wifi.h	/^  uint16_t len;$/;"	m	struct:click_wifi_extra
len_	ns/nsclick-test.cc	/^    int len_;$/;"	m	class:TestClickSimulator::PacketEvent	file:
length	apps/clicky/src/dstyle.cc	/^    int length;$/;"	m	struct:clicky::colordef	file:
length	apps/clicky/src/dstyle.hh	/^    String length;$/;"	m	struct:clicky::dfullness_style
length	apps/clicky/src/dstyle.hh	/^    double length;$/;"	m	struct:clicky::dport_style
length	apps/clicky/src/permstr.hh	/^	int length;$/;"	m	struct:PermString::Doodad
length	apps/clicky/src/permstr.hh	/^inline int PermString::length() const$/;"	f	class:PermString
length	apps/clicky/src/rectangle.hh	/^    double length() const {$/;"	f	struct:point
length	drivers/e1000-4.x/src/e1000.h	/^	unsigned long length;$/;"	m	struct:e1000_buffer
length	drivers/e1000-4.x/src/e1000_hw.h	/^            uint16_t length;    \/* Data buffer length *\/$/;"	m	struct:e1000_data_desc::__anon62::__anon63
length	drivers/e1000-4.x/src/e1000_hw.h	/^            uint16_t length;    \/* Data buffer length *\/$/;"	m	struct:e1000_tx_desc::__anon52::__anon53
length	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t length;     \/* Length of data DMAed into data buffer *\/$/;"	m	struct:e1000_rx_desc
length	drivers/e1000-4.x/src/e1000_hw.h	/^    volatile uint32_t length;   \/* Flexible Filter Length (RW) *\/$/;"	m	struct:e1000_fflt_entry
length	drivers/e1000-5.x/src/e1000.h	/^	uint16_t length;$/;"	m	struct:e1000_buffer
length	drivers/e1000-5.x/src/e1000_hw.h	/^            uint16_t length;    \/* Data buffer length *\/$/;"	m	struct:e1000_data_desc::__anon159::__anon160
length	drivers/e1000-5.x/src/e1000_hw.h	/^            uint16_t length;    \/* Data buffer length *\/$/;"	m	struct:e1000_tx_desc::__anon149::__anon150
length	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t length;     \/* Length of data DMAed into data buffer *\/$/;"	m	struct:e1000_rx_desc
length	drivers/e1000-5.x/src/e1000_hw.h	/^    volatile uint32_t length;   \/* Flexible Filter Length (RW) *\/$/;"	m	struct:e1000_fflt_entry
length	drivers/e1000-7.x/src/e1000.h	/^	uint16_t length;$/;"	m	struct:e1000_buffer
length	drivers/e1000-7.x/src/e1000_hw.h	/^            uint16_t length;    \/* Data buffer length *\/$/;"	m	struct:e1000_data_desc::__anon116::__anon117
length	drivers/e1000-7.x/src/e1000_hw.h	/^            uint16_t length;    \/* Data buffer length *\/$/;"	m	struct:e1000_tx_desc::__anon106::__anon107
length	drivers/e1000-7.x/src/e1000_hw.h	/^            uint16_t length;$/;"	m	struct:e1000_rx_desc_extended::__anon94::__anon98
length	drivers/e1000-7.x/src/e1000_hw.h	/^            uint16_t length[3];        \/* length of buffers 1-3 *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon100::__anon105
length	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t length;     \/* Length of data DMAed into data buffer *\/$/;"	m	struct:e1000_rx_desc
length	drivers/e1000-7.x/src/e1000_hw.h	/^    volatile uint32_t length;   \/* Flexible Filter Length (RW) *\/$/;"	m	struct:e1000_fflt_entry
length	elements/analysis/ipsumdumpinfo.hh	/^    uint32_t length() const {$/;"	f	struct:IPSummaryDump::PacketDesc
length	elements/ethernet/arptable.hh	/^    uint32_t length() const {$/;"	f	class:ARPTable
length	elements/grid/dsr.hh	/^  unsigned int length() const { return (dsr_len + 2); }$/;"	f	struct:click_dsr_rreq
length	elements/grid/dsr.hh	/^  unsigned int length() const { return (dsr_len + 2); }$/;"	f	struct:click_dsr_source
length	elements/grid/dsr.hh	/^  unsigned int length() const { return (dsr_len + 3); }$/;"	f	struct:click_dsr_rrep
length	elements/grid/dsr.hh	/^  unsigned int length() const {$/;"	f	struct:click_dsr_rerr
length	elements/grid/packetlogger2.hh	/^    unsigned length;$/;"	m	struct:PacketLogger2::log_entry
length	elements/local/FlowNet/common/PacketQueue.hh	/^	inline int length() { return (_h-_t)>=0?(_h - _t) : (_h-_t+_size); };$/;"	f	struct:PacketQueue
length	elements/local/OpenFlow/SynchronizedPacketQueue.hh	/^	inline int length() { return (_h-_t)>=0?(_h - _t) : (_h-_t+_size); };$/;"	f	struct:SynchronizedPacketQueue
length	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t length;          \/* Length of this entry. *\/$/;"	m	struct:ofp_flow_stats
length	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t length;    \/* Length including this ofp_header. *\/$/;"	m	struct:ofp_header
length	elements/local/OpenFlow/lib/dynamic-string.hh	/^    size_t length;      \/* Bytes used, not including null terminator. *\/$/;"	m	struct:ds
length	include/click/packet.hh	/^Packet::length() const$/;"	f	class:Packet
length	include/click/straccum.hh	/^    int length() const {$/;"	f	class:StringAccum
length	include/click/string.hh	/^	int length;$/;"	m	struct:String::rep_t
length	include/click/string.hh	/^    inline int length() const {$/;"	f	class:String
length0	drivers/e1000-7.x/src/e1000_hw.h	/^            uint16_t length0;          \/* length of buffer 0 *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon100::__anon104
length_checked_match	elements/ip/ipfilter.cc	/^IPFilter::length_checked_match(const IPFilterProgram &zprog, const Packet *p,$/;"	f	class:IPFilter
length_checked_match	elements/standard/classification.cc	/^Program::length_checked_match(const Packet *p)$/;"	f	class:Classification::Wordwise::Program
lerror	lib/error.cc	/^ErrorHandler::lerror(const String &landmark, const char *fmt, ...)$/;"	f	class:ErrorHandler
lerror	lib/lexer.cc	/^Lexer::lerror(const char *format, ...)$/;"	f	class:Lexer
lerror	tools/lib/lexert.cc	/^LexerT::lerror(const Lexeme &t, const char *format, ...)$/;"	f	class:LexerT
lerror	tools/lib/lexert.cc	/^LexerT::lerror(const char *pos1, const char *pos2, const char *format, ...)$/;"	f	class:LexerT
less	elements/ip/ipfragmentmap.hh	/^	less() {$/;"	f	struct:IPFragmentMap::less
less	elements/ip/ipfragmentmap.hh	/^    struct less {$/;"	s	class:IPFragmentMap
less	include/click/algorithm.hh	/^struct less {$/;"	s
level	apps/clicky/src/gathererror.hh	/^	int level;$/;"	m	struct:GatherErrorHandler::Message
level_names	elements/local/OpenFlow/lib/vlog.cc	/^static const char *level_names[VLL_N_LEVELS] = {$/;"	v	file:
levels	elements/local/OpenFlow/lib/vlog.cc	/^static int levels[VLM_N_MODULES][VLF_N_FACILITIES];$/;"	v	file:
lex	include/click/lexer.hh	/^    Lexeme lex() {$/;"	f	class:Lexer
lex	tools/lib/lexert.hh	/^    Lexeme lex() {$/;"	f	class:LexerT
lex2Arrow	include/click/lexer.hh	/^    lex2Arrow,$/;"	e	enum:Lexemes
lex2Arrow	tools/lib/lexert.hh	/^    lex2Arrow,$/;"	e	enum:__anon524
lex2Bar	include/click/lexer.hh	/^    lex2Bar,$/;"	e	enum:Lexemes
lex2Bar	tools/lib/lexert.hh	/^    lex2Bar,$/;"	e	enum:__anon524
lex2Colon	include/click/lexer.hh	/^    lex2Colon,$/;"	e	enum:Lexemes
lex2Colon	tools/lib/lexert.hh	/^    lex2Colon,$/;"	e	enum:__anon524
lex3Dot	include/click/lexer.hh	/^    lex3Dot,$/;"	e	enum:Lexemes
lex3Dot	tools/lib/lexert.hh	/^    lex3Dot,$/;"	e	enum:__anon524
lexArrow	include/click/lexer.hh	/^    lexArrow,$/;"	e	enum:Lexemes
lexArrow	tools/lib/lexert.hh	/^    lexArrow,$/;"	e	enum:__anon524
lexConfig	tools/lib/lexert.hh	/^    lexConfig,$/;"	e	enum:__anon524
lexDefine	include/click/lexer.hh	/^    lexDefine$/;"	e	enum:Lexemes
lexDefine	tools/lib/lexert.hh	/^    lexDefine$/;"	e	enum:__anon524
lexEOF	include/click/lexer.hh	/^    lexEOF = 0,$/;"	e	enum:Lexemes
lexEOF	tools/lib/lexert.hh	/^    lexEOF = 0,$/;"	e	enum:__anon524
lexElementclass	include/click/lexer.hh	/^    lexElementclass,$/;"	e	enum:Lexemes
lexElementclass	tools/lib/lexert.hh	/^    lexElementclass,$/;"	e	enum:__anon524
lexIdent	include/click/lexer.hh	/^    lexIdent = 256,		\/\/ see also Lexer::lexeme_string$/;"	e	enum:Lexemes
lexIdent	tools/lib/lexert.hh	/^    lexIdent = 256,		\/\/ see also LexerT::lexeme_string$/;"	e	enum:__anon524
lexProvide	include/click/lexer.hh	/^    lexProvide,$/;"	e	enum:Lexemes
lexProvide	tools/lib/lexert.hh	/^    lexProvide,$/;"	e	enum:__anon524
lexRequire	include/click/lexer.hh	/^    lexRequire,$/;"	e	enum:Lexemes
lexRequire	tools/lib/lexert.hh	/^    lexRequire,$/;"	e	enum:__anon524
lexVariable	include/click/lexer.hh	/^    lexVariable,$/;"	e	enum:Lexemes
lexVariable	tools/lib/lexert.hh	/^    lexVariable,$/;"	e	enum:__anon524
lex_config	include/click/lexer.hh	/^    String lex_config() {$/;"	f	class:Lexer
lex_config	lib/lexer.cc	/^Lexer::FileState::lex_config(Lexer *lexer)$/;"	f	class:Lexer::FileState
lex_config	tools/lib/lexert.cc	/^LexerT::FileState::lex_config(LexerT *lexer)$/;"	f	class:LexerT::FileState
lex_config	tools/lib/lexert.hh	/^    Lexeme lex_config() {$/;"	f	class:LexerT
lexeme_string	lib/lexer.cc	/^Lexer::lexeme_string(int kind)$/;"	f	class:Lexer
lexeme_string	tools/lib/lexert.cc	/^LexerT::lexeme_string(int kind)$/;"	f	class:LexerT
lexer	bsdmodule/config.cc	/^static Lexer *lexer = 0;$/;"	v	file:
lexer	linuxmodule/config.cc	/^static Lexer *lexer = 0;$/;"	v	file:
lexical_scoping_in	lib/lexer.cc	/^Lexer::lexical_scoping_in() const$/;"	f	class:Lexer
lexical_scoping_out	lib/lexer.cc	/^Lexer::lexical_scoping_out(int last)$/;"	f	class:Lexer
lfatal	lib/error.cc	/^ErrorHandler::lfatal(const String &landmark, const char *fmt, ...)$/;"	f	class:ErrorHandler
lfc_buffer	elements/local/FlowNet/papmo/PaPMo.hh	/^struct lfc_buffer {$/;"	s
lgq	elements/linuxmodule/fromhost.hh	/^	Packet * volatile *lgq;$/;"	m	union:FromHost::__anon311
li_searcher	tools/lib/landmarkt.cc	/^static bool li_searcher(const LandmarkSetT::LandmarkInfo &li, unsigned offset)$/;"	f	file:
lib_libopenflow_a_SOURCES	elements/local/OpenFlow/lib/automake.mk	/^lib_libopenflow_a_SOURCES = \\$/;"	m
libdir	bsdmodule/Makefile	/^libdir = \/usr\/local\/lib$/;"	m
libdir	linuxmodule/Makefile	/^libdir = \/usr\/local\/lib$/;"	m
libdir	ns/Makefile	/^libdir = \/usr\/local\/lib$/;"	m
libdir	tools/lib/Makefile	/^libdir = \/usr\/local\/lib$/;"	m
libdir	userlevel/Makefile	/^libdir = \/usr\/local\/lib$/;"	m
libs	tools/lib/etraits.hh	/^    String libs;$/;"	m	struct:ElementTraits
lifo_enq	elements/standard/simplequeue.hh	/^SimpleQueue::lifo_enq(Packet *p)$/;"	f	class:SimpleQueue
likely	drivers/e1000-5.x/src/kcompat.h	79;"	d
likely	drivers/e1000-7.x/src/kcompat.h	215;"	d
likely	include/click/config-bsdmodule.h	56;"	d
likely	include/click/config-userlevel.h	289;"	d
likely	include/click/config-userlevel.h	292;"	d
limb_bits	include/click/bigint.hh	/^	limb_bits = sizeof(limb_type) * 8,$/;"	e	enum:Bigint::__anon475
limb_half	include/click/bigint.hh	/^	limb_half = limb_type(1) << half_limb_bits,$/;"	e	enum:Bigint::__anon476
limb_high_bit	include/click/bigint.hh	/^	limb_high_bit = limb_type(1) << (limb_bits - 1),$/;"	e	enum:Bigint::__anon476
limb_low_mask	include/click/bigint.hh	/^	limb_low_mask = limb_half - 1,$/;"	e	enum:Bigint::__anon476
limb_type	include/click/args.hh	/^    typedef uint32_t limb_type;$/;"	t	struct:IntArg
limb_type	include/click/bigint.hh	/^    typedef L limb_type;$/;"	t	class:Bigint
limb_zero	include/click/bigint.hh	/^	limb_zero = limb_type(0)$/;"	e	enum:Bigint::__anon476
limbs	lib/args.cc	/^    L limbs[nlimb];$/;"	m	struct:__anon505::fraction_accum	file:
line_speed	drivers/e1000-4.x/src/ans.h	/^    u32 *line_speed;$/;"	m	struct:_iANSsupport_t
lineno	include/click/fromfile.hh	/^    int lineno() const			{ return _lineno; }$/;"	f	class:FromFile
lineno	lib/lexer.cc	/^    unsigned lineno;$/;"	m	struct:__anon511::ElementState	file:
lineno	tools/lib/landmarkt.hh	/^	unsigned lineno;$/;"	m	struct:LandmarkSetT::LandmarkInfo
link	elements/test/listtest.cc	/^    List_member<stringlistentry> link;$/;"	m	struct:__anon403::stringlistentry	file:
link	include/click/hashallocator.hh	/^    struct link {$/;"	s	class:HashAllocator
link_class_decl	tools/click-pretty/click-pretty.cc	/^link_class_decl(ElementClassT *type)$/;"	f	file:
link_duplex	drivers/e1000-4.x/src/e1000.h	/^	uint16_t link_duplex;$/;"	m	struct:e1000_adapter
link_duplex	drivers/e1000-5.x/src/e1000.h	/^	uint16_t link_duplex;$/;"	m	struct:e1000_adapter
link_duplex	drivers/e1000-7.x/src/e1000.h	/^	uint16_t link_duplex;$/;"	m	struct:e1000_adapter
link_element_decl	tools/click-pretty/click-pretty.cc	/^link_element_decl(ElementT *e)$/;"	f	file:
link_entry	elements/grid/linkstat.cc	/^LinkStat::link_entry::link_entry(const unsigned char *d)$/;"	f	class:LinkStat::link_entry
link_entry	elements/grid/linkstat.hh	/^    link_entry() : num_rx(0) { }$/;"	f	struct:LinkStat::link_entry
link_entry	elements/grid/linkstat.hh	/^    link_entry(const EtherAddress &e, unsigned short n) : eth(e), num_rx(n) { }$/;"	f	struct:LinkStat::link_entry
link_entry	elements/grid/linkstat.hh	/^  struct link_entry {$/;"	s	class:LinkStat
link_extract	elements/analysis/ipsumdump_link.cc	/^static bool link_extract(PacketDesc& d, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
link_filter	elements/grid/dsrroutetable.hh	/^    link_filter(IPAddress a, IPAddress b) : _a(a), _b(b) { }$/;"	f	struct:DSRRouteTable::link_filter
link_filter	elements/grid/dsrroutetable.hh	/^  struct link_filter {$/;"	s	class:DSRRouteTable
link_id	tools/click-combine/click-combine.cc	/^static Vector<int> link_id;$/;"	v	file:
link_ina	elements/analysis/ipsumdump_link.cc	/^static bool link_ina(PacketOdesc& d, const String &str, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
link_inject	elements/analysis/ipsumdump_link.cc	/^static void link_inject(PacketOdesc& d, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
link_outa	elements/analysis/ipsumdump_link.cc	/^static void link_outa(const PacketDesc& d, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
link_probe	elements/grid/linkstat.cc	/^LinkStat::link_probe::link_probe(const unsigned char *d)$/;"	f	class:LinkStat::link_probe
link_probe	elements/grid/linkstat.hh	/^    link_probe() : seq_no(0), period(0), num_links(0), tau(0), cksum(0), psz(0) { }$/;"	f	struct:LinkStat::link_probe
link_probe	elements/grid/linkstat.hh	/^    link_probe(unsigned s, unsigned p, unsigned n, unsigned t, unsigned short sz)$/;"	f	struct:LinkStat::link_probe
link_probe	elements/grid/linkstat.hh	/^  struct link_probe {$/;"	s	class:LinkStat
link_qual	elements/grid/grid.hh	/^    int32_t link_qual;$/;"	m	struct:grid_nbr_encap
link_qual	elements/grid/grid.hh	/^    int32_t link_qual;$/;"	m	struct:grid_nbr_entry
link_readers	elements/analysis/ipsumdump_link.cc	/^static const FieldReader link_readers[] = {$/;"	m	namespace:IPSummaryDump	file:
link_sig	elements/grid/grid.hh	/^    int32_t link_sig;$/;"	m	struct:grid_nbr_encap
link_sig	elements/grid/grid.hh	/^    int32_t link_sig;$/;"	m	struct:grid_nbr_entry
link_speed	drivers/e1000-4.x/src/e1000.h	/^	uint16_t link_speed;$/;"	m	struct:e1000_adapter
link_speed	drivers/e1000-5.x/src/e1000.h	/^	uint16_t link_speed;$/;"	m	struct:e1000_adapter
link_speed	drivers/e1000-7.x/src/e1000.h	/^	uint16_t link_speed;$/;"	m	struct:e1000_adapter
link_status	drivers/e1000-4.x/src/ans.h	/^    u32 *link_status;            $/;"	m	struct:_iANSsupport_t
link_synonyms	elements/analysis/ipsumdump_link.cc	/^static const FieldSynonym link_synonyms[] = {$/;"	m	namespace:IPSummaryDump	file:
link_writers	elements/analysis/ipsumdump_link.cc	/^static const FieldWriter link_writers[] = {$/;"	m	namespace:IPSummaryDump	file:
links_from	tools/click-combine/click-combine.cc	/^static Vector<RouterPortT> links_from;$/;"	v	file:
links_to	tools/click-combine/click-combine.cc	/^static Vector<RouterPortT> links_to;$/;"	v	file:
linktype	elements/userlevel/fakepcap.hh	/^	uint32_t linktype;	\/* data link type (DLT_*) *\/$/;"	m	struct:fake_pcap_file_header
linux_builddir	linuxmodule/Makefile	/^linux_builddir = NONE$/;"	m
linux_fd	elements/local/OpenFlow/datapath.hh	/^	int linux_fd;$/;"	m	struct:click_port
linux_fd	elements/userlevel/fromdevice.hh	/^    int linux_fd() const		{ return _capture == CAPTURE_LINUX ? _fd : -1; }$/;"	f	class:FromDevice
linux_makeargs	linuxmodule/Makefile	/^linux_makeargs = $/;"	m
linux_srcdir	linuxmodule/Makefile	/^linux_srcdir = NONE$/;"	m
list	drivers/e1000-4.x/src/e1000_proc.c	/^	struct list_head list;                  \/* link list *\/$/;"	m	struct:proc_list	typeref:struct:proc_list::list_head	file:
list	elements/local/OpenFlow/lib/list.hh	/^struct list$/;"	s
list_add_tail	drivers/e1000-4.x/src/kcompat.h	298;"	d
list_back	elements/local/OpenFlow/lib/list.cc	/^list_back(struct list *list)$/;"	f
list_for_each	drivers/e1000-4.x/src/kcompat.h	293;"	d
list_for_each_safe	drivers/e1000-7.x/src/kcompat.h	672;"	d
list_front	elements/local/OpenFlow/lib/list.cc	/^list_front(struct list *list)$/;"	f
list_init	elements/local/OpenFlow/lib/list.cc	/^list_init(struct list *list)$/;"	f
list_insert	elements/local/OpenFlow/lib/list.cc	/^list_insert(struct list *before, struct list *elem)$/;"	f
list_is_empty	elements/local/OpenFlow/lib/list.cc	/^list_is_empty(const struct list *list)$/;"	f
list_option	drivers/e1000-4.x/src/e1000_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:e1000_option::__anon66	file:
list_option	drivers/e1000-5.x/src/e1000_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:e1000_option::__anon163	file:
list_option	drivers/e1000-7.x/src/e1000_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:e1000_option::__anon121	file:
list_pop_back	elements/local/OpenFlow/lib/list.cc	/^list_pop_back(struct list *list)$/;"	f
list_pop_front	elements/local/OpenFlow/lib/list.cc	/^list_pop_front(struct list *list)$/;"	f
list_push_back	elements/local/OpenFlow/lib/list.cc	/^list_push_back(struct list *list, struct list *elem)$/;"	f
list_push_front	elements/local/OpenFlow/lib/list.cc	/^list_push_front(struct list *list, struct list *elem)$/;"	f
list_remove	elements/local/OpenFlow/lib/list.cc	/^list_remove(struct list *elem)$/;"	f
list_replace	elements/local/OpenFlow/lib/list.cc	/^list_replace(struct list *element, const struct list *position)$/;"	f
list_size	elements/local/OpenFlow/lib/list.cc	/^list_size(const struct list *list)$/;"	f
list_splice	elements/local/OpenFlow/lib/list.cc	/^list_splice(struct list *before, struct list *first, struct list *last)$/;"	f
listen	elements/local/OpenFlow/lib/vconn-provider.hh	/^    int (*listen)(const char *name, char *suffix, struct pvconn **pvconnp);$/;"	m	struct:pvconn_class
listen_promisc	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^void PFSchedFW::listen_promisc( Packet* p )$/;"	f	class:PFSchedFW
listen_promisc	elements/local/FlowNet/scheduler/sched_algorithms/SchedBackpressure.cc	/^int VcScheduleBackpressure::listen_promisc(Flow* flow_in)$/;"	f	class:VcScheduleBackpressure
listen_promisc	elements/local/FlowNet/scheduler/sched_algorithms/SchedHorizon.cc	/^int VcScheduleHorizon::listen_promisc(Flow* flow_in)$/;"	f	class:VcScheduleHorizon
listen_promisc	elements/local/FlowNet/scheduler/sched_algorithms/SchedLogWeight.cc	/^int VcScheduleLogWeight::listen_promisc(Flow* flow_in)$/;"	f	class:VcScheduleLogWeight
listen_promisc	elements/local/FlowNet/scheduler/sched_algorithms/SchedNoSchedule.cc	/^int VcScheduleNoSchedule::listen_promisc(Flow* )$/;"	f	class:VcScheduleNoSchedule
listen_promisc	elements/local/FlowNet/scheduler/sched_algorithms/SchedWBS.cc	/^int VcScheduleWBS::listen_promisc(Flow* flow_in)$/;"	f	class:VcScheduleWBS
listener_change	lib/notifier.cc	/^ActiveNotifier::listener_change(void *what, int where, bool add)$/;"	f	class:ActiveNotifier
listeners	elements/local/OpenFlow/RConn.hh	/^        struct pvconn **listeners;$/;"	m	class:RConn	typeref:struct:RConn::pvconn
listeners	lib/notifier.cc	/^ActiveNotifier::listeners(Vector<Task*>& v) const$/;"	f	class:ActiveNotifier
live	include/click/archive.hh	/^    bool live() const {$/;"	f	struct:ArchiveElement
live	include/click/hashcontainer.hh	/^    inline bool live() const {$/;"	f	class:HashContainer_const_iterator
live	include/click/hashmap.hh	/^    bool live() const		{ return _i.live(); }$/;"	f	class:_HashMap_const_iterator
live	include/click/hashmap.hh	/^  bool live() const			{ return _elt; }$/;"	f	class:_HashMap_const_iterator
live	include/click/hashtable.hh	/^    bool live() const {$/;"	f	class:HashTable_const_iterator
live	include/click/list.hh	/^	bool live() const {$/;"	f	class:List::const_iterator
live	linuxmodule/proclikefs.c	/^    int live;$/;"	m	struct:proclikefs_file_system	file:
live	tools/lib/elementt.hh	/^    bool live() const			{ return _end[end_from].live(); }$/;"	f	class:ConnectionT
live	tools/lib/elementt.hh	/^    bool live() const			{ return _type; }$/;"	f	struct:ElementT
live	tools/lib/elementt.hh	/^    bool live() const			{ return element != 0; }$/;"	f	struct:PortT
live_memo_bytes	include/click/string.hh	/^    static uint64_t live_memo_bytes[55];$/;"	m	class:String
live_memo_bytes	lib/string.cc	/^uint64_t String::live_memo_bytes[55];$/;"	m	class:String	file:
live_memo_count	include/click/string.hh	/^    static uint64_t live_memo_count;$/;"	m	class:String
live_memo_count	lib/string.cc	/^uint64_t String::live_memo_count;$/;"	m	class:String	file:
live_memo_sizes	include/click/string.hh	/^    static uint64_t live_memo_sizes[55];$/;"	m	class:String
live_memo_sizes	lib/string.cc	/^uint64_t String::live_memo_sizes[55];$/;"	m	class:String	file:
live_memos	include/click/string.hh	/^    static memo_t *live_memos[55];$/;"	m	class:String
live_memos	lib/string.cc	/^String::memo_t *String::live_memos[55];$/;"	m	class:String	file:
live_reconfigure	elements/aqm/pi.cc	/^PI::live_reconfigure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:PI
live_reconfigure	elements/ethernet/arpquerier.cc	/^ARPQuerier::live_reconfigure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ARPQuerier
live_reconfigure	elements/standard/frontdropqueue.cc	/^FrontDropQueue::live_reconfigure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FrontDropQueue
live_reconfigure	elements/standard/fullnotequeue.cc	/^FullNoteQueue::live_reconfigure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:FullNoteQueue
live_reconfigure	elements/standard/simplequeue.cc	/^SimpleQueue::live_reconfigure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:SimpleQueue
live_reconfigure	elements/standard/threadsafequeue.cc	/^ThreadSafeQueue::live_reconfigure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:ThreadSafeQueue
live_reconfigure	lib/element.cc	/^Element::live_reconfigure(Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:Element
liveness	elements/local/OpenFlow/RConn.hh	/^        bool liveness;$/;"	m	struct:rnc_param
liveness	elements/local/OpenFlow/datapath.hh	/^	bool liveness;$/;"	m	struct:onc_param
ll_next	elements/ip/directiplookup.hh	/^	int ll_next;$/;"	m	struct:DirectIPLookup::CleartextEntry
ll_next	elements/ip/directiplookup.hh	/^	int16_t ll_next;$/;"	m	struct:DirectIPLookup::VirtualPort
ll_prev	elements/ip/directiplookup.hh	/^	int ll_prev;$/;"	m	struct:DirectIPLookup::CleartextEntry
ll_prev	elements/ip/directiplookup.hh	/^	int16_t ll_prev;$/;"	m	struct:DirectIPLookup::VirtualPort
llc	elements/local/OpenFlow/lib/packets.hh	/^    struct llc_header llc;$/;"	m	struct:llc_snap_header	typeref:struct:llc_snap_header::llc_header
llc_class	include/clicknet/llc.h	97;"	d
llc_cntl	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t llc_cntl;$/;"	m	struct:llc_header
llc_control	include/clicknet/llc.h	94;"	d
llc_control_ext	include/clicknet/llc.h	95;"	d
llc_dsap	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t llc_dsap;$/;"	m	struct:llc_header
llc_dsap	include/clicknet/llc.h	/^	uint8_t	llc_dsap;$/;"	m	struct:click_llc
llc_fid	include/clicknet/llc.h	96;"	d
llc_frmr_cause	include/clicknet/llc.h	104;"	d
llc_frmr_control	include/clicknet/llc.h	102;"	d
llc_frmr_control_ext	include/clicknet/llc.h	103;"	d
llc_frmr_pdu0	include/clicknet/llc.h	100;"	d
llc_frmr_pdu1	include/clicknet/llc.h	101;"	d
llc_frmrinfo	include/clicknet/llc.h	99;"	d
llc_header	elements/local/OpenFlow/lib/packets.hh	/^struct llc_header {$/;"	s
llc_snap_header	elements/local/OpenFlow/lib/packets.hh	/^struct llc_snap_header {$/;"	s
llc_ssap	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t llc_ssap;$/;"	m	struct:llc_header
llc_ssap	include/clicknet/llc.h	/^	uint8_t	llc_ssap;$/;"	m	struct:click_llc
llc_un	include/clicknet/llc.h	/^	} llc_un;$/;"	m	struct:click_llc	typeref:union:click_llc::__anon481
llc_window	include/clicknet/llc.h	98;"	d
llrpc	elements/analysis/anonipaddr.cc	/^AnonymizeIPAddr::llrpc(unsigned command, void *data)$/;"	f	class:AnonymizeIPAddr
llrpc	elements/ip/ipratemon.cc	/^IPRateMonitor::llrpc(unsigned command, void *data)$/;"	f	class:IPRateMonitor
llrpc	elements/ip/iprewriterbase.cc	/^IPRewriterBase::llrpc(unsigned command, void *data)$/;"	f	class:IPRewriterBase
llrpc	elements/simple/simplepullswitch.cc	/^SimplePullSwitch::llrpc(unsigned command, void *data)$/;"	f	class:SimplePullSwitch
llrpc	elements/standard/counter.cc	/^Counter::llrpc(unsigned command, void *data)$/;"	f	class:Counter
llrpc	elements/standard/switch.cc	/^Switch::llrpc(unsigned command, void *data)$/;"	f	class:Switch
llrpc	elements/userlevel/khandlerproxy.cc	/^KernelHandlerProxy::llrpc(unsigned command, void *data)$/;"	f	class:KernelHandlerProxy
llrpc	lib/element.cc	/^Element::llrpc(unsigned command, void *data)$/;"	f	class:Element
llrpc_command	elements/userlevel/controlsocket.cc	/^ControlSocket::llrpc_command(connection &conn, const String &llrpcname, String data)$/;"	f	class:ControlSocket
lmessage	lib/error.cc	/^ErrorHandler::lmessage(const String &landmark, const char *fmt, ...)$/;"	f	class:ErrorHandler
lmmneg	lib/clp.c	/^    int lmmneg;$/;"	m	struct:__anon500	file:
lmmneg_short	lib/clp.c	/^    unsigned lmmneg_short : 1;$/;"	m	struct:__anon500	file:
lmmpos	lib/clp.c	/^    int lmmpos;$/;"	m	struct:__anon500	file:
lmmpos_short	lib/clp.c	/^    unsigned lmmpos_short : 1;$/;"	m	struct:__anon500	file:
loaded	lib/driver.cc	/^    bool loaded : 1;$/;"	m	struct:ClickProvision	file:
loc	elements/grid/floodinglocquerier.hh	/^    grid_location loc;$/;"	m	struct:FloodingLocQuerier::LocEntry
loc	elements/grid/grid.hh	/^    struct grid_location loc;		\/\/ Sender's location, set by FixSrcLoc.$/;"	m	struct:grid_hdr	typeref:struct:grid_hdr::grid_location
loc	elements/grid/grid.hh	/^    struct grid_location loc;$/;"	m	struct:grid_nbr_entry	typeref:struct:grid_nbr_entry::grid_location
loc	elements/grid/gridroutetable.hh	/^    struct grid_location loc; \/\/ location of dest, as contained in its route ads$/;"	m	class:GridRouteTable::RTEntry	typeref:struct:GridRouteTable::RTEntry::grid_location
loc	elements/grid/loctable.hh	/^    grid_location loc;$/;"	m	struct:LocationTable::entry
loc_el	elements/grid/movesim.hh	/^    GridLocationInfo *loc_el;$/;"	m	struct:MovementSimulator::node_event
loc_err	elements/grid/floodinglocquerier.hh	/^    unsigned short loc_err;$/;"	m	struct:FloodingLocQuerier::LocEntry
loc_err	elements/grid/grid.hh	/^    uint16_t loc_err;			\/\/ Error radius of position, in metres.$/;"	m	struct:grid_hdr
loc_err	elements/grid/grid.hh	/^    uint16_t loc_err;$/;"	m	struct:grid_nbr_entry
loc_err	elements/grid/gridgenericrt.hh	/^    unsigned short       loc_err;      \/\/ error in metres$/;"	m	struct:GridGenericRouteTable::RouteEntry
loc_err	elements/grid/gridlocationinfo.hh	/^  unsigned short loc_err() { return _loc_err; }$/;"	f	class:GridLocationInfo
loc_err	elements/grid/gridlocationinfo2.hh	/^  unsigned short loc_err() { return _loc_err; }$/;"	f	class:GridLocationInfo2
loc_err	elements/grid/gridroutetable.hh	/^    unsigned short loc_err;$/;"	m	class:GridRouteTable::RTEntry
loc_good	elements/grid/floodinglocquerier.hh	/^    bool loc_good;$/;"	m	struct:FloodingLocQuerier::LocEntry
loc_good	elements/grid/grid.hh	/^    uint8_t \/* bool *\/ loc_good;$/;"	m	struct:grid_nbr_entry
loc_good	elements/grid/grid.hh	/^    uint8_t \/*bool*\/ loc_good;		\/\/ If false, don't believe loc$/;"	m	struct:grid_hdr
loc_good	elements/grid/gridgenericrt.hh	/^    bool                 loc_good;     \/\/ is location any good?$/;"	m	struct:GridGenericRouteTable::RouteEntry
loc_good	elements/grid/gridlocationinfo.hh	/^  bool loc_good() { return _loc_good; }$/;"	f	class:GridLocationInfo
loc_good	elements/grid/gridlocationinfo2.hh	/^  bool loc_good() { return _loc_good; }$/;"	f	class:GridLocationInfo2
loc_good	elements/grid/gridroutetable.hh	/^    bool loc_good;$/;"	m	class:GridRouteTable::RTEntry
loc_read_handler	elements/grid/gridlocationinfo.cc	/^loc_read_handler(Element *f, void *)$/;"	f	file:
loc_read_handler	elements/grid/gridlocationinfo2.cc	/^loc_read_handler(Element *f, void *)$/;"	f	file:
loc_seq_no	elements/grid/floodinglocquerier.hh	/^    unsigned int loc_seq_no;;$/;"	m	struct:FloodingLocQuerier::LocEntry
loc_seq_no	elements/grid/grid.hh	/^    uint32_t loc_seq_no;$/;"	m	struct:grid_hdr
loc_write_handler	elements/grid/gridlocationinfo.cc	/^loc_write_handler(const String &arg, Element *element,$/;"	f	file:
loc_write_handler	elements/grid/gridlocationinfo2.cc	/^loc_write_handler(const String &arg, Element *element,$/;"	f	file:
loc_write_handler	elements/grid/loctable.cc	/^loc_write_handler(const String &arg, Element *element,$/;"	f	file:
local_llrpc	lib/element.cc	/^Element::local_llrpc(unsigned command, void *data)$/;"	f	class:Element
local_rx	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_1000t_rx_status local_rx;$/;"	m	struct:e1000_phy_info
local_rx	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_1000t_rx_status local_rx;$/;"	m	struct:e1000_phy_info
local_rx	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_1000t_rx_status local_rx;$/;"	m	struct:e1000_phy_info
locally_declared_type	tools/lib/routert.cc	/^RouterT::locally_declared_type(const String &name) const$/;"	f	class:RouterT
locate_header_file	tools/click-devirtualize/specializer.cc	/^ElementTypeInfo::locate_header_file(RouterT *for_archive, ErrorHandler *errh)$/;"	f	class:ElementTypeInfo
lock	elements/linuxmodule/anydevice.hh	/^AnyDeviceMap::lock(bool write, unsigned long &flags)$/;"	f	class:AnyDeviceMap
lock	include/click/selectset.hh	/^SelectSet::lock()$/;"	f	class:SelectSet
lock	linuxmodule/proclikefs.c	/^    spinlock_t lock;$/;"	m	struct:proclikefs_file_system	file:
lock	linuxmodule/skbmgr.cc	/^RecycledSkbPool::lock()$/;"	f	class:RecycledSkbPool
lock_config	linuxmodule/clickfs.cc	/^lock_config(const char *file, int line, int iswrite)$/;"	f	file:
lock_kernel	elements/bsdmodule/anydevice.cc	/^lock_kernel()$/;"	f	file:
lock_master	include/click/master.hh	/^Master::lock_master()$/;"	f	class:Master
lock_t	include/click/sync.hh	/^    struct lock_t {$/;"	s	class:ReadWriteLock
lock_tasks	include/click/routerthread.hh	/^RouterThread::lock_tasks()$/;"	f	class:RouterThread
lock_threads	linuxmodule/clickfs.cc	/^lock_threads()$/;"	f	file:
lock_timers	include/click/timerset.hh	/^TimerSet::lock_timers()$/;"	f	class:TimerSet
locmap	elements/grid/simplelocquerier.hh	/^  typedef HashMap<IPAddress, grid_location> locmap;$/;"	t	class:SimpleLocQuerier
log_added_route	elements/grid/gridlogger.hh	/^  void log_added_route(reason_t why, const GridGenericRouteTable::RouteEntry &r) {$/;"	f	class:GridLogger
log_added_route	elements/grid/gridlogger.hh	/^  void log_added_route(reason_t why, const GridGenericRouteTable::RouteEntry &r, const unsigned extra) {$/;"	f	class:GridLogger
log_ca_cert	elements/local/OpenFlow/lib/vconn-ssl.cc	/^log_ca_cert(const char *file_name, X509 *cert)$/;"	f	file:
log_dump_hook	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::log_dump_hook(bool reschedule)$/;"	f	class:DSDVRouteTable
log_end_expire_handler	elements/grid/gridlogger.hh	/^  void log_end_expire_handler() {$/;"	f	class:GridLogger
log_end_recv_advertisement	elements/grid/gridlogger.hh	/^  void log_end_recv_advertisement() {$/;"	f	class:GridLogger
log_entry	elements/grid/packetlogger.hh	/^  struct log_entry {$/;"	s	class:PacketLogger
log_entry	elements/grid/packetlogger2.hh	/^  struct log_entry {$/;"	s	class:PacketLogger2
log_expired_route	elements/grid/gridlogger.hh	/^  void log_expired_route(reason_t why, unsigned ip) {$/;"	f	class:GridLogger
log_file	elements/local/OpenFlow/lib/vlog.cc	/^static FILE *log_file;$/;"	v	file:
log_file_name	elements/local/OpenFlow/lib/vlog.cc	/^static char *log_file_name;$/;"	v	file:
log_is_open	elements/grid/gridlogger.hh	/^  bool log_is_open() { return _fd >= 0; }$/;"	f	class:GridLogger
log_line	bsdmodule/module.cc	/^KernelErrorHandler::log_line(const char *begin, const char *end)$/;"	f	class:KernelErrorHandler
log_line	linuxmodule/module.cc	/^KernelErrorHandler::log_line(String landmark, const char *begin, const char *end)$/;"	f	class:KernelErrorHandler
log_nlmsg	elements/local/OpenFlow/lib/netlink.cc	/^log_nlmsg(const char *function, int error,$/;"	f	file:
log_no_route	elements/grid/gridlogger.hh	/^  void log_no_route(const Packet *p, const Timestamp &when) {$/;"	f	class:GridLogger
log_pkt	elements/grid/gridlogger.hh	/^  void log_pkt(struct click_ether *eh) {$/;"	f	class:GridLogger
log_route_dump	elements/grid/gridlogger.hh	/^  void log_route_dump(const Vector<GridGenericRouteTable::RouteEntry> &rt, const Timestamp &when) {$/;"	f	class:GridLogger
log_route_table	elements/grid/gridroutetable.cc	/^GridRouteTable::log_route_table ()$/;"	f	class:GridRouteTable
log_sent_advertisement	elements/grid/gridlogger.hh	/^  void log_sent_advertisement(unsigned seq_no, const Timestamp &when) {$/;"	f	class:GridLogger
log_special_pkt	elements/grid/gridlogger.hh	/^  void log_special_pkt(struct click_ip *ip) {$/;"	f	class:GridLogger
log_start_expire_handler	elements/grid/gridlogger.hh	/^  void log_start_expire_handler(const Timestamp &when) {$/;"	f	class:GridLogger
log_start_recv_advertisement	elements/grid/gridlogger.hh	/^  void log_start_recv_advertisement(unsigned seq_no, unsigned ip, const Timestamp &when) {$/;"	f	class:GridLogger
log_triggered_route	elements/grid/gridlogger.hh	/^  void log_triggered_route(unsigned ip) {$/;"	f	class:GridLogger
log_tx_err	elements/grid/gridlogger.hh	/^  void log_tx_err(const Packet *p, int err, const Timestamp &when) {$/;"	f	class:GridLogger
log_wakeup	elements/local/OpenFlow/lib/poll-loop.cc	/^log_wakeup(const struct backtrace *backtrace, const char *format, ...)$/;"	f
logbuf_siz	linuxmodule/modulepriv.hh	/^    enum { logbuf_siz = 4096 };$/;"	e	enum:KernelErrorHandler::__anon520
logging_hook	elements/grid/gridlocationinfo.cc	/^GridLocationInfo::logging_hook(Timer *, void *thunk) {$/;"	f	class:GridLocationInfo
lon	elements/grid/grid.hh	/^  double lon() const {$/;"	f	struct:grid_location
lon	elements/grid/locfromfile.hh	/^    double lon;$/;"	m	struct:LocFromFile::delta
lon_ms	elements/grid/grid.hh	/^    int32_t lon_ms() const { return ntohl(_mslon); }$/;"	f	struct:grid_location
long1neg	lib/clp.c	/^    int long1neg;$/;"	m	struct:Clp_Internal	file:
long1pos	lib/clp.c	/^    int long1pos;$/;"	m	struct:Clp_Internal	file:
long_as_short	lib/clp.c	/^long_as_short(const Clp_Internal *cli, const Clp_Option *o,$/;"	f	file:
long_name	include/click/clp.h	/^    const char *long_name;	\/**< Name of long option, or NULL if the option$/;"	m	struct:Clp_Option
long_option_match	click-mkelemmap	/^sub long_option_match ($$$) {$/;"	s
look_read_handler	elements/ip/ipratemon.cc	/^IPRateMonitor::look_read_handler(Element *e, void *)$/;"	f	class:IPRateMonitor
lookup	elements/bsdmodule/anydevice.hh	/^AnyDeviceMap::lookup(struct ifnet *dev)$/;"	f	class:AnyDeviceMap
lookup	elements/ethernet/arpresponder.hh	/^    bool lookup(IPAddress addr, EtherAddress &result) const {$/;"	f	class:ARPResponder
lookup	elements/ethernet/arpresponder.hh	/^    const EtherAddress *lookup(IPAddress addr) const {$/;"	f	class:ARPResponder
lookup	elements/ethernet/arptable.hh	/^ARPTable::lookup(IPAddress ip)$/;"	f	class:ARPTable
lookup	elements/ethernet/arptable.hh	/^ARPTable::lookup(IPAddress ip, EtherAddress *eth, uint32_t poll_timeout_j)$/;"	f	class:ARPTable
lookup	elements/ethernet/ip6ndadvertiser.cc	/^IP6NDAdvertiser::lookup(const IP6Address &a, EtherAddress &ena) const$/;"	f	class:IP6NDAdvertiser
lookup	elements/ip/ipfilter.cc	/^IPFilter::lookup(String word, int type, int proto, uint32_t &data,$/;"	f	class:IPFilter
lookup	elements/ip/lookupiproutelinux.cc	/^LinuxIPLookup::lookup(IPAddress a, IPAddress &gw, int &ifi)$/;"	f	class:LinuxIPLookup
lookup	elements/ip/radixiplookup.cc	/^    static inline int lookup(const Radix *r, int cur, uint32_t addr) {$/;"	f	class:RadixIPLookup::Radix
lookup	elements/ip6/addresstranslator.cc	/^AddressTranslator::lookup(IP6Address &iai, unsigned short &ipi, IP6Address &mai, unsigned short &mpi, IP6Address &ea, unsigned short &ep, bool lookup_direction)$/;"	f	class:AddressTranslator
lookup	elements/ipsec/radixipseclookup.hh	/^RadixIPsecLookup::Radix::lookup(const Radix* r, int cur, uint32_t addr)$/;"	f	class:RadixIPsecLookup::Radix
lookup	elements/ipsec/satable.cc	/^SATable::lookup(SPI this_spi)$/;"	f	class:SATable
lookup	elements/linuxmodule/anydevice.hh	/^AnyDeviceMap::lookup(net_device *dev, AnyDevice *last) const$/;"	f	class:AnyDeviceMap
lookup	elements/local/FlowNet/libtable/TableLinear.hh	/^int VcTableLinear<T>::lookup(const FlowID* fid, T** f)$/;"	f	class:VcTableLinear
lookup	elements/local/OpenFlow/lib/table.hh	/^    struct sw_flow *(*lookup)(struct sw_table *table,$/;"	m	struct:sw_table	typeref:struct:sw_table::lookup
lookup	elements/wifi/availablerates.cc	/^AvailableRates::lookup(EtherAddress eth)$/;"	f	class:AvailableRates
lookup	lib/ino.cc	/^ClickIno::lookup(ino_t ino, const String &component)$/;"	f	class:ClickIno
lookup	lib/ip6table.cc	/^IP6Table::lookup(const IP6Address &dst, IP6Address &gw, int &index) const$/;"	f	class:IP6Table
lookup	lib/iptable.cc	/^IPTable::lookup(IPAddress dst, IPAddress &gw, int &index) const$/;"	f	class:IPTable
lookup_all	elements/linuxmodule/anydevice.cc	/^AnyDeviceMap::lookup_all(net_device *dev, bool known, AnyDevice **dev_store,$/;"	f	class:AnyDeviceMap
lookup_arp	elements/grid/dsrarptable.cc	/^DSRArpTable::lookup_arp(Packet *p_in)$/;"	f	class:DSRArpTable
lookup_count	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t lookup_count;   \/* Number of packets looked up in table. *\/$/;"	m	struct:ofp_table_stats
lookup_delivery_rate	elements/grid/delivery_rate_table.hh	/^lookup_delivery_rate(unsigned r1, unsigned r2, unsigned sz)$/;"	f
lookup_device	elements/linuxmodule/anydevice.cc	/^AnyDevice::lookup_device(ErrorHandler *errh)$/;"	f	class:AnyDevice
lookup_entry	elements/ip/lineariplookup.cc	/^LinearIPLookup::lookup_entry(IPAddress a) const$/;"	f	class:LinearIPLookup
lookup_entry	elements/ip/sortediplookup.cc	/^SortedIPLookup::lookup_entry(IPAddress a) const$/;"	f	class:SortedIPLookup
lookup_error_code	elements/local/OpenFlow/lib/ofp-print.cc	/^lookup_error_code(int type, int code)$/;"	f	file:
lookup_error_type	elements/local/OpenFlow/lib/ofp-print.cc	/^lookup_error_type(int type)$/;"	f	file:
lookup_handler	elements/ethernet/arpresponder.cc	/^ARPResponder::lookup_handler(int, String &str, Element *e, const Handler *, ErrorHandler *errh)$/;"	f	class:ARPResponder
lookup_handler	elements/ip/iproutetable.cc	/^IPRouteTable::lookup_handler(int, String& s, Element* e, const Handler*, ErrorHandler* errh)$/;"	f	class:IPRouteTable
lookup_handler	elements/ipsec/ipsecroutetable.cc	/^IPsecRouteTable::lookup_handler(int, String& s, Element* e, const Handler*, ErrorHandler* errh)$/;"	f	class:IPsecRouteTable
lookup_ip	elements/grid/dsrarptable.cc	/^DSRArpTable::lookup_ip(IPAddress ip)$/;"	f	class:DSRArpTable
lookup_ip	elements/local/OpenFlow/lib/socket-util.cc	/^lookup_ip(const char *host_name, struct in_addr *addr) $/;"	f
lookup_openflow_multicast_group	elements/local/OpenFlow/lib/dpif.cc	/^lookup_openflow_multicast_group(int dp_idx, int *multicast_group)$/;"	f	file:
lookup_route	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::lookup_route(const IPAddress &dest_ip, RTEntry &entry)$/;"	f	class:DSDVRouteTable
lookup_route	elements/ip/directiplookup.cc	/^DirectIPLookup::lookup_route(IPAddress dest, IPAddress &gw) const$/;"	f	class:DirectIPLookup
lookup_route	elements/ip/iproutetable.cc	/^IPRouteTable::lookup_route(IPAddress, IPAddress&) const$/;"	f	class:IPRouteTable
lookup_route	elements/ip/lineariplookup.cc	/^LinearIPLookup::lookup_route(IPAddress a, IPAddress &gw) const$/;"	f	class:LinearIPLookup
lookup_route	elements/ip/radixiplookup.cc	/^RadixIPLookup::lookup_route(IPAddress addr, IPAddress &gw) const$/;"	f	class:RadixIPLookup
lookup_route	elements/ip/rangeiplookup.cc	/^RangeIPLookup::lookup_route(IPAddress dest, IPAddress &gw) const$/;"	f	class:RangeIPLookup
lookup_route	elements/ipsec/ipsecroutetable.cc	/^IPsecRouteTable::lookup_route(IPAddress, IPAddress &, unsigned int&, SADataTuple*&) const$/;"	f	class:IPsecRouteTable
lookup_route	elements/ipsec/radixipseclookup.cc	/^RadixIPsecLookup::lookup_route(IPAddress addr, IPAddress &gw, unsigned int &spi, SADataTuple* &sa_data) const$/;"	f	class:RadixIPsecLookup
lookup_unknown	elements/bsdmodule/anydevice.cc	/^AnyDeviceMap::lookup_unknown(struct ifnet *dev)$/;"	f	class:AnyDeviceMap
lookup_unknown	elements/linuxmodule/anydevice.cc	/^AnyDeviceMap::lookup_unknown(net_device *dev, AnyDevice *last) const$/;"	f	class:AnyDeviceMap
lookup_widget	apps/clicky/src/support.c	/^lookup_widget                          (GtkWidget       *widget,$/;"	f
lookupflow	elements/local/FlowNet/shaper/PFShapeFW.cc	/^FlowBWShaperable* PFShapeFW::lookupflow( const Packet* p )$/;"	f	class:PFShapeFW
lookupflow	elements/local/FlowNet/shaper/PFShapeFW.cc	/^FlowBWShaperable* PFShapeFW::lookupflow( struct FlowID* fid )$/;"	f	class:PFShapeFW
loop	apps/clicky/src/dialogs.cc	/^    GMainLoop *loop;$/;"	m	struct:clicky::open_socket_helper	file:
loss_count_threshold	elements/local/FlowNet/common/FlowNetGod.hh	/^	int loss_count_threshold;$/;"	m	struct:paramset_mpeg2_shapertable
loss_threshold	elements/local/FlowNet/common/FlowNetGod.hh	/^	double loss_threshold;$/;"	m	struct:paramset_mpeg2_shapertable
low	drivers/e1000-4.x/src/e1000_hw.h	/^    volatile uint32_t low;      \/* receive address low *\/$/;"	m	struct:e1000_rar
low	drivers/e1000-5.x/src/e1000_hw.h	/^    volatile uint32_t low;      \/* receive address low *\/$/;"	m	struct:e1000_rar
low	drivers/e1000-7.x/src/e1000_hw.h	/^    volatile uint32_t low;      \/* receive address low *\/$/;"	m	struct:e1000_rar
low	include/click/bigint.hh	/^    static inline half_limb_type low(limb_type x) {$/;"	f	class:Bigint
low	include/click/type_traits.hh	/^    static half_type low(type x) {$/;"	f	struct:make_fast_half_integer
low_latency	drivers/e1000-7.x/src/e1000_main.c	/^	low_latency = 1,$/;"	e	enum:latency_range	file:
lower	drivers/e1000-4.x/src/e1000_hw.h	/^    } lower;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon62
lower	drivers/e1000-4.x/src/e1000_hw.h	/^    } lower;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon52
lower	drivers/e1000-5.x/src/e1000_hw.h	/^    } lower;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon159
lower	drivers/e1000-5.x/src/e1000_hw.h	/^    } lower;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon149
lower	drivers/e1000-7.x/src/e1000_hw.h	/^        } lower;$/;"	m	struct:e1000_rx_desc_extended::__anon94	typeref:struct:e1000_rx_desc_extended::__anon94::__anon95
lower	drivers/e1000-7.x/src/e1000_hw.h	/^        } lower;$/;"	m	struct:e1000_rx_desc_packet_split::__anon100	typeref:struct:e1000_rx_desc_packet_split::__anon100::__anon101
lower	drivers/e1000-7.x/src/e1000_hw.h	/^    } lower;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon116
lower	drivers/e1000-7.x/src/e1000_hw.h	/^    } lower;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon106
lower	lib/string.cc	/^String::lower() const$/;"	f	class:String
lower_layer_flow	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^	Flow* lower_layer_flow;$/;"	m	class:FlowBWShaperable
lower_setup	drivers/e1000-4.x/src/e1000_hw.h	/^    } lower_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon56
lower_setup	drivers/e1000-5.x/src/e1000_hw.h	/^    } lower_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon153
lower_setup	drivers/e1000-7.x/src/e1000_hw.h	/^    } lower_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon110
lowest_latency	drivers/e1000-7.x/src/e1000_main.c	/^	lowest_latency = 0,$/;"	e	enum:latency_range	file:
lr	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	LinearRegression lr;$/;"	m	struct:CORE
lr_size	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	int lr_size;$/;"	m	struct:CORE
lwarning	lib/error.cc	/^ErrorHandler::lwarning(const String &landmark, const char *fmt, ...)$/;"	f	class:ErrorHandler
m	include/click/packet.hh	/^    const struct mbuf *m() const	{ return (const struct mbuf *)_m; }$/;"	f	class:Packet
m	include/click/packet.hh	/^    struct mbuf *m()			{ return _m; }$/;"	f	class:Packet
mac	include/click/packet.hh	/^	unsigned char *mac;$/;"	m	struct:Packet::AllAnno
mac_addr	drivers/e1000-4.x/src/e1000_hw.h	/^    uint8_t mac_addr[NODE_ADDRESS_SIZE];$/;"	m	struct:e1000_hw
mac_addr	drivers/e1000-5.x/src/e1000_hw.h	/^    uint8_t mac_addr[NODE_ADDRESS_SIZE];$/;"	m	struct:e1000_hw
mac_addr	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t mac_addr[NODE_ADDRESS_SIZE];$/;"	m	struct:e1000_hw
mac_addr	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint8_t mac_addr[OFP_ETH_ALEN];$/;"	m	struct:nx_snat_config
mac_addr_from_dev	conf/wifi/gen_config_safe.pl	/^sub mac_addr_from_dev($) {$/;"	s
mac_addr_to_ip	conf/wifi/gen_config_safe.pl	/^sub mac_addr_to_ip($) {$/;"	s
mac_header	include/click/packet.hh	/^Packet::mac_header() const$/;"	f	class:Packet
mac_header	include/click/packet.hh	/^WritablePacket::mac_header() const$/;"	f	class:WritablePacket
mac_header_length	include/click/packet.hh	/^Packet::mac_header_length() const$/;"	f	class:Packet
mac_header_offset	include/click/packet.hh	/^Packet::mac_header_offset() const$/;"	f	class:Packet
mac_length	include/click/packet.hh	/^Packet::mac_length() const$/;"	f	class:Packet
mac_timeout	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t mac_timeout;   \/* Time to cache MAC addresses of SNAT'd hosts$/;"	m	struct:nx_snat_config
mac_type	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_mac_type mac_type;$/;"	m	struct:e1000_hw
mac_type	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_mac_type mac_type;$/;"	m	struct:e1000_hw
mac_type	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_mac_type mac_type;$/;"	m	struct:e1000_hw
macaddr	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	uint8_t macaddr[WIFI_ADDR_LEN];$/;"	m	struct:NexthopInfo
macaddr	elements/local/OpenFlow/datapath.hh	/^	uint8_t macaddr[ETH_ADDR_LEN];$/;"	m	struct:click_port
mactime	include/clicknet/wifi.h	/^  p80211item_uint32_t mactime;$/;"	m	struct:__anon498
magic	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t magic;$/;"	m	struct:ethtool_eeprom
magic	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t magic;$/;"	m	struct:ethtool_eeprom
magic	elements/linuxmodule/anydevice.hh	/^	int magic;$/;"	m	struct:AnyDevice::fake_bridge
magic	elements/userlevel/fakepcap.hh	/^	uint32_t magic;$/;"	m	struct:fake_pcap_file_header
magic	elements/userlevel/umlswitch.hh	/^	uint32_t magic;$/;"	m	struct:request_v3
magic	include/clicknet/dhcp.h	/^	uint32_t magic;        \/* magic cookie *\/$/;"	m	struct:click_dhcp
magic	include/clicknet/wifi.h	/^  uint32_t magic;$/;"	m	struct:click_wifi_extra
magic	lib/glue.cc	/^    uint32_t magic;$/;"	m	struct:Chunk	file:
magicHeader	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^	uint32_t magicHeader;$/;"	m	struct:bpadapt_header
magicHeader_initiated	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	uint32_t magicHeader_initiated;	$/;"	m	struct:CORE
magic_number	elements/linuxmodule/touserdevice.cc	/^    uint32_t magic_number;   \/* magic number *\/$/;"	m	struct:pcap_hdr	file:
magic_number	elements/local/OpenFlow/lib/pcap.cc	/^    uint32_t magic_number;   \/* magic number *\/$/;"	m	struct:pcap_hdr	file:
main	apps/ClickController/ClickController.java	/^    public static void main(String argv[]) {$/;"	m	class:ClickController
main	apps/ClickController/ControlSocket.java	/^    public static void main(String args[]) {$/;"	m	class:ControlSocket
main	apps/clicky/src/clicky.cc	/^main(int argc, char *argv[])$/;"	f
main	apps/clicky/src/crouter.hh	/^	Bitvector main;$/;"	m	struct:clicky::crouter::reachable_t
main	apps/clicky/src/wdiagram.hh	/^    wmain *main() const {$/;"	f	class:clicky::wdiagram
main	apps/clicky/src/whandler.hh	/^    wmain *main() const {$/;"	f	struct:clicky::whandler
main	apps/csclient/csclient.cc	/^main(int argc, char **argv)$/;"	f
main	config.guess	/^		main()$/;"	f
main	config.guess	/^	main ()$/;"	f
main	config.guess	/^main ()$/;"	f
main	drivers/e1000-4.x/src/idiag_test.c	/^main(int argc, char **argv)$/;"	f
main	etc/samplellrpc/click-readcounter.c	/^main(int argc, const char *argv[])$/;"	f
main	ns/nsclick-test.cc	/^int main(int,char**) {$/;"	f
main	test/testie	/^package main;$/;"	p
main	tools/click-align/click-align.cc	/^main(int argc, char **argv)$/;"	f
main	tools/click-check/click-check.cc	/^main(int argc, char **argv)$/;"	f
main	tools/click-combine/click-combine.cc	/^main(int argc, char **argv)$/;"	f
main	tools/click-combine/click-uncombine.cc	/^main(int argc, char **argv)$/;"	f
main	tools/click-devirtualize/click-devirtualize.cc	/^main(int argc, char **argv)$/;"	f
main	tools/click-fastclassifier/click-fastclassifier.cc	/^main(int argc, char **argv)$/;"	f
main	tools/click-flatten/click-flatten.cc	/^main(int argc, char **argv)$/;"	f
main	tools/click-install/click-install.cc	/^main(int argc, char **argv)$/;"	f
main	tools/click-install/click-uninstall.cc	/^main(int argc, char **argv)$/;"	f
main	tools/click-mkmindriver/click-mkmindriver.cc	/^main(int argc, char **argv)$/;"	f
main	tools/click-pretty/click-pretty.cc	/^main(int argc, char **argv)$/;"	f
main	tools/click-undead/click-undead.cc	/^main(int argc, char **argv)$/;"	f
main	tools/click-xform/click-xform.cc	/^main(int argc, char **argv)$/;"	f
main	tools/click2xml/click2xml.cc	/^main(int argc, char **argv)$/;"	f
main	tools/click2xml/xml2click.cc	/^main(int argc, char **argv)$/;"	f
main	userlevel/click.cc	/^main(int argc, char **argv)$/;"	f
main_element_map	tools/lib/elementmap.cc	/^static ElementMap main_element_map;$/;"	v	file:
make	apps/clicky/src/dwidget.hh	/^inline dconn *dconn::make(delt *fe, int fp, delt *te, int tp)$/;"	f	class:clicky::dconn
make	include/click/packet.hh	/^Packet::make(const void *data, uint32_t length)$/;"	f	class:Packet
make	include/click/packet.hh	/^Packet::make(struct mbuf *m)$/;"	f	class:Packet
make	include/click/packet.hh	/^Packet::make(struct sk_buff *skb)$/;"	f	class:Packet
make	include/click/packet.hh	/^Packet::make(uint32_t length)$/;"	f	class:Packet
make	lib/packet.cc	/^Packet::make(uint32_t headroom, const void *data,$/;"	f	class:Packet
make	lib/packet.cc	/^Packet::make(unsigned char *data, uint32_t length,$/;"	f	class:Packet
make	tools/lib/etraits.cc	/^ElementTraits::make(int component, ...)$/;"	f	class:ElementTraits
make_PEP	elements/grid/pep.cc	/^PEP::make_PEP()$/;"	f	class:PEP
make_PEP	elements/grid/regionpep.cc	/^EstimateRouterRegion::make_PEP()$/;"	f	class:EstimateRouterRegion
make_actions	apps/clicky/src/whandler.cc	/^void whandler::make_actions(int which)$/;"	f	class:clicky::whandler
make_add_flow	elements/local/OpenFlow/lib/vconn.cc	/^make_add_flow(const struct flow *flow, uint32_t buffer_id,$/;"	f
make_add_simple_flow	elements/local/OpenFlow/lib/vconn.cc	/^make_add_simple_flow(const struct flow *flow,$/;"	f
make_anno	lib/error.cc	/^ErrorHandler::make_anno(const char *name, const String &value)$/;"	f	class:ErrorHandler
make_anon_element	tools/lib/lexert.cc	/^LexerT::make_anon_element(const Lexeme &what, const char *decl_pos2,$/;"	f	class:LexerT
make_bad	tools/click-align/alignment.hh	/^    static inline Alignment make_bad() {$/;"	f	class:Alignment
make_barrier_reply	elements/local/OpenFlow/RConn.cc	/^static struct ofpbuf * make_barrier_reply(const struct ofp_header *req)$/;"	f	file:
make_broadcast	include/click/etheraddress.hh	/^    static EtherAddress make_broadcast() {$/;"	f	class:EtherAddress
make_broadcast	include/click/ipaddress.hh	/^    static inline IPAddress make_broadcast() {$/;"	f	class:IPAddress
make_buffered_packet_out	elements/local/OpenFlow/lib/vconn.cc	/^make_buffered_packet_out(uint32_t buffer_id,$/;"	f
make_checksum	elements/bsdmodule/fastudpsrc.hh	/^FastUDPSource::make_checksum(click_udp *udp)$/;"	f	class:FastUDPSource
make_claim	lib/string.cc	/^String::make_claim(char *str, int len, int capacity)$/;"	f	class:String
make_class	tools/click-devirtualize/cxxclass.cc	/^CxxInfo::make_class(const String &name)$/;"	f	class:CxxInfo
make_compressed	elements/ip/rfc2507c.cc	/^RFC2507c::make_compressed(int cid, Packet *p)$/;"	f	class:RFC2507c
make_counter	elements/ip/ipratemon.cc	/^IPRateMonitor::make_counter(Stats *s, unsigned char index, MyEWMA *rate)$/;"	f	class:IPRateMonitor
make_del_flow	elements/local/OpenFlow/lib/vconn.cc	/^make_del_flow(const struct flow *flow)$/;"	f
make_echo_reply	elements/local/OpenFlow/lib/vconn.cc	/^make_echo_reply(const struct ofp_header *rq)$/;"	f
make_echo_request	elements/local/OpenFlow/lib/vconn.cc	/^make_echo_request(void)$/;"	f
make_element	tools/lib/lexert.cc	/^LexerT::make_element(String name, const Lexeme &location, const char *decl_pos2,$/;"	f	class:LexerT
make_empty	include/click/string.hh	/^    static inline const String &make_empty() {$/;"	f	class:String
make_fast_half_integer	include/click/type_traits.hh	/^struct make_fast_half_integer {$/;"	s
make_flow_mod	elements/local/OpenFlow/lib/vconn.cc	/^make_flow_mod(uint16_t command, const struct flow *flow, size_t actions_len)$/;"	f
make_full	elements/ip/rfc2507c.cc	/^RFC2507c::make_full(int cid, Packet *p)$/;"	f	class:RFC2507c
make_garbage	lib/string.cc	/^String::make_garbage(int len)$/;"	f	class:String
make_generic_rte	elements/grid/dsdvroutetable.hh	/^  class RouteEntry make_generic_rte(const RTEntry &rte) { return rte; }$/;"	f	class:DSDVRouteTable
make_generic_rte	elements/grid/gridroutetable.hh	/^  RouteEntry make_generic_rte(const RTEntry &rte) {$/;"	f	class:GridRouteTable
make_gports	lib/router.cc	/^Router::make_gports()$/;"	f	class:Router
make_hello	elements/grid/hello.cc	/^SendGridHello::make_hello()$/;"	f	class:SendGridHello
make_hello	elements/grid/lrhello.cc	/^SendGridLRHello::make_hello()$/;"	f	class:SendGridLRHello
make_icmp_translate46	elements/ip6/protocoltranslator46.cc	/^ProtocolTranslator46::make_icmp_translate46(IP6Address ip6_src,$/;"	f	class:ProtocolTranslator46
make_icmp_translate64	elements/ip6/protocoltranslator64.cc	/^ProtocolTranslator64::make_icmp_translate64(unsigned char *a,$/;"	f	class:ProtocolTranslator64
make_inverted_prefix	lib/ip6address.cc	/^IP6Address::make_inverted_prefix(int prefix_len)$/;"	f	class:IP6Address
make_ip	elements/analysis/ipsumdumpinfo.hh	/^inline bool PacketOdesc::make_ip(int ip_p)$/;"	f	class:IPSummaryDump::PacketOdesc
make_jiffies	include/click/timestamp.hh	/^Timestamp::make_jiffies(click_jiffies_difference_t jiffies)$/;"	f	class:Timestamp
make_jiffies	include/click/timestamp.hh	/^Timestamp::make_jiffies(click_jiffies_t jiffies)$/;"	f	class:Timestamp
make_key	elements/ip/rfc2507c.cc	/^RFC2507c::make_key(const struct tcpip &from, struct tcpip &to)$/;"	f	class:RFC2507c
make_landmark_anno	include/click/error.hh	/^    static String make_landmark_anno(const String &x) {$/;"	f	class:ErrorHandler
make_link	tools/click-combine/click-combine.cc	/^make_link(const Vector<RouterPortT> &from, const Vector<RouterPortT> &to,$/;"	f	file:
make_msec	include/click/timestamp.hh	/^    static inline Timestamp make_msec(seconds_type sec, uint32_t msec) {$/;"	f	class:Timestamp
make_msec	include/click/timestamp.hh	/^    static inline Timestamp make_msec(value_type msec) {$/;"	f	class:Timestamp
make_nonblocking	apps/clicky/src/cdriver.cc	/^int csocket_cdriver::make_nonblocking(int fd, ErrorHandler *errh)$/;"	f	class:clicky::csocket_cdriver
make_nsec	include/click/timestamp.hh	/^    static inline Timestamp make_nsec(seconds_type sec, uint32_t nsec) {$/;"	f	class:Timestamp
make_nsec	include/click/timestamp.hh	/^    static inline Timestamp make_nsec(value_type nsec) {$/;"	f	class:Timestamp
make_numeric	lib/string.cc	/^String::make_numeric(int_large_t num, int base, bool uppercase)$/;"	f	class:String
make_numeric	lib/string.cc	/^String::make_numeric(uint_large_t num, int base, bool uppercase)$/;"	f	class:String
make_nw_mask	elements/local/OpenFlow/lib/switch-flow.cc	/^static uint32_t make_nw_mask(int n_wild_bits)$/;"	f	file:
make_openflow	elements/local/OpenFlow/lib/vconn.cc	/^make_openflow(size_t openflow_len, uint8_t type, struct ofpbuf **bufferp)$/;"	f
make_openflow_reply	elements/local/OpenFlow/RConn.cc	/^static void *make_openflow_reply(size_t openflow_len, uint8_t type,$/;"	f	file:
make_openflow_reply	elements/local/OpenFlow/datapath.cc	/^static void * make_openflow_reply(size_t openflow_len, uint8_t type,$/;"	f	file:
make_openflow_xid	elements/local/OpenFlow/lib/vconn.cc	/^make_openflow_xid(size_t openflow_len, uint8_t type, uint32_t xid,$/;"	f
make_other	elements/ip/rfc2507c.cc	/^RFC2507c::make_other(Packet *p)$/;"	f	class:RFC2507c
make_out_of_memory	include/click/string.hh	/^    static inline const String &make_out_of_memory() {$/;"	f	class:String
make_output	elements/analysis/anonipaddr.cc	/^AnonymizeIPAddr::make_output(uint32_t old_output, int swivel) const$/;"	f	class:AnonymizeIPAddr
make_packet	elements/icmp/icmpsendpings.cc	/^ICMPPingSource::make_packet()$/;"	f	class:ICMPPingSource
make_packet	elements/standard/randomsource.cc	/^RandomSource::make_packet()$/;"	f	class:RandomSource
make_packet	elements/tcpudp/tcpipsend.cc	/^TCPIPSend::make_packet(unsigned int saddr, unsigned int daddr,$/;"	f	class:TCPIPSend
make_pair	include/click/pair.hh	/^inline Pair<T, U> make_pair(T t, U u)$/;"	f
make_peer	elements/analysis/aggcounter.cc	/^AggregateCounter::make_peer(uint32_t a, Node *n, bool frozen)$/;"	f	class:AggregateCounter
make_peer	elements/analysis/anonipaddr.cc	/^AnonymizeIPAddr::make_peer(uint32_t a, Node *n)$/;"	f	class:AnonymizeIPAddr
make_prefix	lib/ip6address.cc	/^IP6Address::make_prefix(int prefix_len)$/;"	f	class:IP6Address
make_prefix	lib/ipaddress.cc	/^IPAddress::make_prefix(int prefix_len)$/;"	f	class:IPAddress
make_queue	elements/ip/ipreassembler.cc	/^IPReassembler::make_queue(Packet *p, WritablePacket **q_pprev)$/;"	f	class:IPReassembler
make_radix	elements/ip/radixiplookup.cc	/^RadixIPLookup::Radix::make_radix(int bitshift, int n)$/;"	f	class:RadixIPLookup::Radix
make_radix	elements/ipsec/radixipseclookup.cc	/^RadixIPsecLookup::Radix::make_radix(int bitshift, int n)$/;"	f	class:RadixIPsecLookup::Radix
make_response	elements/ethernet/arpresponder.cc	/^ARPResponder::make_response(const uint8_t target_eth[6], \/* them *\/$/;"	f	class:ARPResponder
make_response	elements/ethernet/ip6ndadvertiser.cc	/^IP6NDAdvertiser::make_response(u_char dha[6],   \/*  des eth address *\/$/;"	f	class:IP6NDAdvertiser
make_response2	elements/ethernet/ip6ndadvertiser.cc	/^IP6NDAdvertiser::make_response2(u_char dha[6],   \/*  des eth address *\/$/;"	f	class:IP6NDAdvertiser
make_sec	include/click/timestamp.hh	/^    static inline Timestamp make_sec(seconds_type sec) {$/;"	f	class:Timestamp
make_signed	include/click/type_traits.hh	/^struct make_signed {$/;"	s
make_sockaddr_un	elements/local/OpenFlow/lib/socket-util.cc	/^make_sockaddr_un(const char *name, struct sockaddr_un* un, socklen_t *un_len)$/;"	f	file:
make_stable	include/click/string.hh	/^    static inline String make_stable(const char *begin, const char *end) {$/;"	f	class:String
make_stable	lib/string.cc	/^String::make_stable(const char *s, int len)$/;"	f	class:String
make_timestamp	elements/userlevel/fakepcap.hh	/^fake_bpf_timeval_union::make_timestamp(const fake_bpf_timeval_union *x)$/;"	f	class:fake_bpf_timeval_union
make_timeval	include/click/glue.hh	/^make_timeval(int sec, int usec)$/;"	f
make_translate46	elements/ip6/protocoltranslator46.cc	/^ProtocolTranslator46::make_translate46(IP6Address src,$/;"	f	class:ProtocolTranslator46
make_translate64	elements/ip6/protocoltranslator64.cc	/^ProtocolTranslator64::make_translate64(IPAddress src,$/;"	f	class:ProtocolTranslator64
make_transp	elements/analysis/ipsumdumpinfo.hh	/^inline bool PacketOdesc::make_transp()$/;"	f	class:IPSummaryDump::PacketOdesc
make_unbuffered_packet_out	elements/local/OpenFlow/lib/vconn.cc	/^make_unbuffered_packet_out(const struct ofpbuf *packet,$/;"	f
make_universal	tools/click-align/alignment.hh	/^    static inline Alignment make_universal() {$/;"	f	class:Alignment
make_unix_socket	elements/local/OpenFlow/lib/socket-util.cc	/^int make_unix_socket(int style, bool nonblock, bool passcred UNUSED,$/;"	f
make_unsigned	include/click/type_traits.hh	/^struct make_unsigned {$/;"	s
make_usec	include/click/timestamp.hh	/^    static inline Timestamp make_usec(seconds_type sec, uint32_t usec) {$/;"	f	class:Timestamp
make_usec	include/click/timestamp.hh	/^    static inline Timestamp make_usec(value_type usec) {$/;"	f	class:Timestamp
makepackage	click-buildtool	/^makepackage () {$/;"	f
makepackage_usage	click-buildtool	/^makepackage_usage () {$/;"	f
mandatory	include/click/args.hh	/^    static constexpr int mandatory = 1;  \/\/\/< read flag for mandatory arguments$/;"	m	struct:Args
mandir	doc/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mapid_default	elements/ip/iprewriterbase.hh	/^	mapid_default = 0, mapid_iprewriter_udp = 1$/;"	e	enum:IPRewriterInput::__anon326
mapid_iprewriter_udp	elements/ip/iprewriterbase.hh	/^	mapid_default = 0, mapid_iprewriter_udp = 1$/;"	e	enum:IPRewriterInput::__anon326
mapped_label	conf/click-mkclgw.pl	/^sub mapped_label {$/;"	s
mapped_type	include/click/hashmap.hh	/^    typedef T *mapped_type;$/;"	t	class:HashMap
mapped_type	include/click/hashmap.hh	/^    typedef V mapped_type;$/;"	t	class:HashMap
mapped_type	include/click/hashmap.hh	/^    typedef void *mapped_type;$/;"	t	class:HashMap
mapped_type	include/click/hashtable.hh	/^    typedef V mapped_type;$/;"	t	class:HashTable
mapper	elements/ip/iprewriterbase.hh	/^	IPMapper *mapper;$/;"	m	union:IPRewriterInput::__anon325
mapping	apps/clicky/src/transform.cc	/^affine::mapping(const point &from1, const point &to1,$/;"	f	class:affine
mapping_freed	elements/ip6/addresstranslator.cc	/^AddressTranslator::mapping_freed(Mapping *m, bool major_map)$/;"	f	class:AddressTranslator
margin	apps/clicky/src/dstyle.hh	/^    double margin[4];$/;"	m	struct:clicky::delt_size_style
margin	apps/clicky/src/dstyle.hh	/^    double margin[4];$/;"	m	struct:clicky::dport_style
mark_change	apps/clicky/src/dstyle.cc	/^void dcss_set::mark_change()$/;"	f	class:clicky::dcss_set
mark_component	tools/click-combine/click-uncombine.cc	/^mark_component(RouterT *r, String compname, Vector<int> &live)$/;"	f	file:
mask	drivers/e1000-4.x/src/e1000_hw.h	/^    volatile uint32_t mask;     \/* Flexible Filter Mask (RW) *\/$/;"	m	struct:e1000_ffmt_entry
mask	drivers/e1000-5.x/src/e1000_hw.h	/^    volatile uint32_t mask;     \/* Flexible Filter Mask (RW) *\/$/;"	m	struct:e1000_ffmt_entry
mask	drivers/e1000-7.x/src/e1000_hw.h	/^    volatile uint32_t mask;     \/* Flexible Filter Mask (RW) *\/$/;"	m	struct:e1000_ffmt_entry
mask	elements/ethernet/arpresponder.hh	/^	IPAddress mask;$/;"	m	struct:ARPResponder::Entry
mask	elements/ethernet/ip6ndadvertiser.hh	/^    IP6Address mask;$/;"	m	struct:IP6NDAdvertiser::Entry
mask	elements/ip/iproutetable.hh	/^    IPAddress mask;$/;"	m	struct:IPRoute
mask	elements/ipsec/ipsecroutetable.hh	/^    IPAddress mask;$/;"	m	struct:IPsecRoute
mask	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t mask;          \/* Bitmap of OFPPC_* flags to be changed. *\/$/;"	m	struct:ofp_port_mod
mask	elements/standard/classification.hh	/^    } mask;$/;"	m	struct:Classification::Wordwise::Insn	typeref:union:Classification::Wordwise::Insn::__anon180
mask	include/click/iptable.hh	/^    IPAddress mask;$/;"	m	struct:IPTable::Entry
mask	include/click/notifier.hh	/^	uint32_t mask;$/;"	m	struct:NotifierSignal::vmpair
mask	tools/click-fastclassifier/click-fastclassifier.hh	/^    } mask;$/;"	m	struct:Classifier_Insn	typeref:union:Classifier_Insn::__anon544
mask_as_specific	elements/ip/iproutetable.hh	/^IPRoute::mask_as_specific(IPAddress m) const$/;"	f	class:IPRoute
mask_as_specific	elements/ip/iproutetable.hh	/^IPRoute::mask_as_specific(const IPRoute& r) const$/;"	f	class:IPRoute
mask_as_specific	elements/ipsec/ipsecroutetable.hh	/^IPsecRoute::mask_as_specific(IPAddress m) const$/;"	f	class:IPsecRoute
mask_as_specific	elements/ipsec/ipsecroutetable.hh	/^IPsecRoute::mask_as_specific(const IPsecRoute& r) const$/;"	f	class:IPsecRoute
mask_as_specific	include/click/ip6address.hh	/^IP6Address::mask_as_specific(const IP6Address &mask) const$/;"	f	class:IP6Address
mask_as_specific	include/click/ipaddress.hh	/^IPAddress::mask_as_specific(IPAddress mask) const$/;"	f	class:IPAddress
mask_more_specific	include/click/ipaddress.hh	/^IPAddress::mask_more_specific(IPAddress mask) const$/;"	f	class:IPAddress
mask_to_prefix_len	lib/ip6address.cc	/^IP6Address::mask_to_prefix_len() const$/;"	f	class:IP6Address
mask_to_prefix_len	lib/ipaddress.cc	/^IPAddress::mask_to_prefix_len() const$/;"	f	class:IPAddress
master	include/click/master.hh	/^Element::master() const$/;"	f	class:Element
master	include/click/router.hh	/^Router::master() const$/;"	f	class:Router
master	include/click/routerthread.hh	/^RouterThread::master() const$/;"	f	class:RouterThread
master	lib/task.cc	/^Task::master() const$/;"	f	class:Task
master_slave	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_ms_type master_slave;$/;"	m	struct:e1000_hw
master_slave	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_ms_type master_slave;$/;"	m	struct:e1000_hw
match	apps/clicky/src/dstyle.cc	/^bool dcss_selector::match(const handler_value *hv) const$/;"	f	class:clicky::dcss_selector
match	apps/clicky/src/dstyle.cc	/^bool dcss_selector::match(crouter *cr, const delt *e, int *sensitivity) const$/;"	f	class:clicky::dcss_selector
match	elements/ip/ipfilter.hh	/^IPFilter::match(const IPFilterProgram &zprog, const Packet *p)$/;"	f	class:IPFilter
match	elements/ip/iproutetable.hh	/^IPRoute::match(const IPRoute& r) const$/;"	f	class:IPRoute
match	elements/ipsec/ipsecroutetable.hh	/^IPsecRoute::match(const IPsecRoute& r) const$/;"	f	class:IPsecRoute
match	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    struct ofp_match match;   \/* Description of fields. *\/$/;"	m	struct:nx_flow_end	typeref:struct:nx_flow_end::ofp_match
match	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_match match;      \/* Fields to match *\/$/;"	m	struct:ofp_flow_mod	typeref:struct:ofp_flow_mod::ofp_match
match	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_match match;   \/* Description of fields. *\/$/;"	m	struct:ofp_flow_removed	typeref:struct:ofp_flow_removed::ofp_match
match	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_match match;   \/* Description of fields. *\/$/;"	m	struct:ofp_flow_stats	typeref:struct:ofp_flow_stats::ofp_match
match	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_match match;   \/* Fields to match. *\/$/;"	m	struct:ofp_aggregate_stats_request	typeref:struct:ofp_aggregate_stats_request::ofp_match
match	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_match match;   \/* Fields to match. *\/$/;"	m	struct:ofp_flow_stats_request	typeref:struct:ofp_flow_stats_request::ofp_match
match	elements/standard/classification.hh	/^Program::match(const Packet *p)$/;"	f	class:Classification::Wordwise::Program
match_body	tools/click-fastclassifier/click-fastclassifier.cc	/^    void (*match_body)(const Classifier_Program &, StringAccum &);$/;"	m	struct:FastClassifier_Cid	file:
match_body	tools/click-fastclassifier/fc_classifier.cc	/^match_body(const Classifier_Program &c, StringAccum &source)$/;"	f	file:
match_body	tools/click-fastclassifier/fc_ipclassifier.cc	/^match_body(const Classifier_Program &c, StringAccum &source)$/;"	f	file:
match_config	tools/click-xform/click-xform.cc	/^match_config(const String &pat, const String &conf,$/;"	f
match_context	apps/clicky/src/dstyle.hh	/^    bool match_context(crouter *cr, const delt *e, int *sensitivity = 0) const {$/;"	f	class:clicky::dcss
match_decor	apps/clicky/src/dstyle.hh	/^    bool match_decor(PermString decor) const {$/;"	f	class:clicky::dcss_selector
match_port	apps/clicky/src/dstyle.cc	/^bool dcss_selector::match_port(bool isoutput, int port, int processing) const$/;"	f	class:clicky::dcss_selector
matched_count	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t matched_count;  \/* Number of packets that hit table. *\/$/;"	m	struct:ofp_table_stats
matches_prefix	include/click/ip6address.hh	/^IP6Address::matches_prefix(const IP6Address &addr, const IP6Address &mask) const$/;"	f	class:IP6Address
matches_prefix	include/click/ipaddress.hh	/^IPAddress::matches_prefix(IPAddress addr, IPAddress mask) const$/;"	f	class:IPAddress
max	drivers/e1000-4.x/src/e1000_param.c	/^			int max;$/;"	m	struct:e1000_option::__anon67::__anon68	file:
max	drivers/e1000-4.x/src/kcompat.h	408;"	d
max	drivers/e1000-4.x/src/kcompat.h	409;"	d
max	drivers/e1000-5.x/src/e1000_param.c	/^			int max;$/;"	m	struct:e1000_option::__anon164::__anon165	file:
max	drivers/e1000-5.x/src/kcompat.h	491;"	d
max	drivers/e1000-5.x/src/kcompat.h	492;"	d
max	drivers/e1000-7.x/src/e1000_param.c	/^			int max;$/;"	m	struct:e1000_option::__anon122::__anon123	file:
max	drivers/e1000-7.x/src/kcompat.h	664;"	d
max	drivers/e1000-7.x/src/kcompat.h	665;"	d
max	elements/grid/region.cc	/^max(double a, double b)$/;"	f	file:
max_age	elements/local/OpenFlow/lib/stp.cc	/^    int max_age;                    \/* 8.5.3.4: Time to drop received data. *\/$/;"	m	struct:stp	file:
max_age	elements/local/OpenFlow/lib/stp.cc	/^    uint16_t max_age;              \/* 8.5.1.6: Timeout for received data. *\/$/;"	m	struct:stp_config_bpdu	file:
max_backoff	elements/local/OpenFlow/lib/rconn.cc	/^    int max_backoff;$/;"	m	struct:rconn	file:
max_bar_length	elements/userlevel/progressbar.cc	/^static const int max_bar_length = 240;$/;"	v	file:
max_body	elements/local/OpenFlow/datapath.cc	/^	size_t min_body, max_body;$/;"	m	struct:stats_type	file:
max_bucket_count	include/click/hashcontainer.hh	/^	max_bucket_count = 4194303,$/;"	e	enum:HashContainer::__anon468
max_buffer_size	include/click/hashallocator.hh	/^	max_buffer_size = 16384,$/;"	e	enum:HashAllocator::__anon437
max_click_frac	bsdmodule/sched.cc	/^static unsigned min_click_frac = 5, max_click_frac = 800;$/;"	v	file:
max_click_frac	linuxmodule/sched.cc	/^static unsigned min_click_frac = 5, max_click_frac = 800;$/;"	v	file:
max_cpu_share	include/click/routerthread.hh	/^    unsigned max_cpu_share() const	{ return _max_click_share; }$/;"	f	class:RouterThread
max_data_per_txd	drivers/e1000-4.x/src/e1000.h	/^	int max_data_per_txd;$/;"	m	struct:e1000_adapter
max_entries	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t max_entries;    \/* Max number of entries supported. *\/$/;"	m	struct:ofp_table_stats
max_files	elements/local/OpenFlow/lib/fatal-signal.cc	/^static size_t n_files, max_files;$/;"	v	file:
max_flows	elements/local/OpenFlow/lib/table-linear.cc	/^    unsigned int max_flows;$/;"	m	struct:sw_table_linear	file:
max_flows	elements/local/OpenFlow/lib/table.hh	/^    unsigned int max_flows;      \/* Flow capacity. *\/$/;"	m	struct:sw_table_stats
max_frame_size	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t max_frame_size;$/;"	m	struct:e1000_hw
max_frame_size	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t max_frame_size;$/;"	m	struct:e1000_hw
max_frame_size	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t max_frame_size;$/;"	m	struct:e1000_hw
max_jumps	elements/standard/script.hh	/^	max_jumps = 1000, STEP_NORMAL = 0, STEP_ROUTER, STEP_TIMER, STEP_JUMP$/;"	e	enum:Script::__anon177
max_len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t max_len;               \/* Max length to send to controller. *\/$/;"	m	struct:ofp_action_output
max_len	elements/local/OpenFlow/lib/netlink.hh	/^    size_t min_len, max_len;$/;"	m	struct:nl_policy
max_qlen	elements/local/FlowNet/common/FlowNetGod.hh	/^	int	max_qlen;	$/;"	m	struct:paramset_flowtable
max_qlen	elements/local/FlowNet/common/FlowNetGod.hh	/^	int max_qlen;$/;"	m	struct:paramset_mpeg2_streamingproxytable
max_qlen	elements/local/FlowNet/common/FlowNetGod.hh	/^	int max_qlen;$/;"	m	struct:paramset_sourceproxytable
max_queue_length	elements/local/FlowNet/common/Flow.hh	/^	uint16_t	max_queue_length() const { return (uint16_t) q.max_size(); }$/;"	f	class:Flow
max_rtes_per_ad	elements/grid/dsdvroutetable.hh	/^  int max_rtes_per_ad() const {$/;"	f	class:DSDVRouteTable
max_seconds	include/click/timestamp.hh	/^	max_seconds = (seconds_type) 2147483647U,$/;"	e	enum:Timestamp::__anon416
max_size	elements/local/FlowNet/common/PacketQueue.hh	/^	inline int max_size() const { return _size; };$/;"	f	struct:PacketQueue
max_size	elements/local/OpenFlow/SynchronizedPacketQueue.hh	/^	inline int max_size() const { return _size; };$/;"	f	struct:SynchronizedPacketQueue
max_size	elements/local/OpenFlow/lib/dp_act.cc	/^    size_t max_size;$/;"	m	struct:openflow_action	file:
max_timer_stride	include/click/timerset.hh	/^    unsigned max_timer_stride() const		{ return _max_timer_stride; }$/;"	f	class:TimerSet
max_tokens	include/click/tokenbucket.hh	/^	max_tokens = (token_type) -1$/;"	e	enum:TokenRateX::__anon425
max_tokens	include/click/tokenbucket.hh	/^	max_tokens = R::max_tokens$/;"	e	enum:TokenCounterX::__anon426
max_tokens	include/click/tokenbucket.hh	/^	max_tokens = rate_type::max_tokens$/;"	e	enum:TokenBucketX::__anon427
max_tries	include/clicknet/wifi.h	/^  uint8_t max_tries;$/;"	m	struct:click_wifi_extra
max_tries1	include/clicknet/wifi.h	/^  uint8_t max_tries1;$/;"	m	struct:click_wifi_extra
max_tries2	include/clicknet/wifi.h	/^  uint8_t max_tries2;$/;"	m	struct:click_wifi_extra
max_tries3	include/clicknet/wifi.h	/^  uint8_t max_tries3;$/;"	m	struct:click_wifi_extra
max_txc	elements/grid/ackretrysender2.hh	/^  unsigned max_txc, min_txc;$/;"	m	class:ACKRetrySender2
max_value	apps/clicky/src/dstyle.hh	/^    double max_value;$/;"	m	struct:clicky::dactivity_style
max_value	include/click/args.hh	/^    int max_value;$/;"	m	struct:BoundedIntArg
max_vlan_ID_supported	drivers/e1000-4.x/src/ans.h	/^    u32 max_vlan_ID_supported;    \/* max Vlan ID supported by base-driver*\/$/;"	m	struct:_iANSsupport_t
max_word	include/click/bitvector.hh	/^    int max_word() const {$/;"	f	class:Bitvector
maxdur	include/clicknet/wifi.h	/^		uint8_t		maxdur[2];$/;"	m	struct:wifi_information::cf
maxpos	include/click/hashallocator.hh	/^	size_t maxpos;$/;"	m	struct:HashAllocator::buffer
mc_filter_type	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t mc_filter_type;$/;"	m	struct:e1000_hw
mc_filter_type	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t mc_filter_type;$/;"	m	struct:e1000_hw
mc_filter_type	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t mc_filter_type;$/;"	m	struct:e1000_hw
mcc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t mcc;$/;"	m	struct:e1000_hw_stats
mcc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t mcc;$/;"	m	struct:e1000_hw_stats
mcc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t mcc;$/;"	m	struct:e1000_hw_stats
md5_append	include/click/md5.h	/^static inline void md5_append(md5_state_t *pms, const unsigned char *data, int nbytes) {$/;"	f
md5_append	lib/md5.cc	/^md5_append(md5_state_t *pms, const md5_byte_t *data, int nbytes)$/;"	f
md5_byte_t	include/click/md5.h	/^typedef unsigned char md5_byte_t; \/* 8-bit byte *\/$/;"	t
md5_finish	include/click/md5.h	/^static inline void md5_finish(md5_state_t *pms, const unsigned char digest[16]) {$/;"	f
md5_finish	lib/md5.cc	/^md5_finish(md5_state_t *pms, md5_byte_t digest[16])$/;"	f
md5_finish_text	lib/md5.cc	/^md5_finish_text(md5_state_t *pms, char *buf, int allow_at)$/;"	f
md5_free	include/click/md5.h	/^static inline void md5_free(md5_state_t *pms) {$/;"	f
md5_free	include/click/md5.h	138;"	d
md5_init	include/click/md5.h	/^static inline void md5_init(md5_state_t *pms) {$/;"	f
md5_init	lib/md5.cc	/^md5_init(md5_state_t *pms)$/;"	f
md5_process	lib/md5.cc	/^md5_process(md5_state_t *pms, const md5_byte_t *data \/*[64]*\/)$/;"	f	file:
md5_state_s	include/click/md5.h	/^typedef struct md5_state_s {$/;"	s
md5_state_t	include/click/md5.h	/^typedef struct crypto_tfm *md5_state_t;$/;"	t	typeref:struct:crypto_tfm
md5_state_t	include/click/md5.h	/^} md5_state_t;$/;"	t	typeref:struct:md5_state_s
md5_word_t	include/click/md5.h	/^typedef uint32_t md5_word_t; \/* 32-bit word *\/$/;"	t
md_ctx	elements/ipsec/hmac.hh	/^	SHA1_ctx md_ctx;$/;"	m	struct:hmac_ctx_st
mdio_read	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int (*mdio_read) (struct net_device *dev, int phy_id, int location);$/;"	m	struct:_kc_mii_if_info	file:
mdio_write	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	void (*mdio_write) (struct net_device *dev, int phy_id, int location, int val);$/;"	m	struct:_kc_mii_if_info	file:
mdix	drivers/e1000-4.x/src/e1000_hw.h	/^    uint8_t mdix;$/;"	m	struct:e1000_hw
mdix	drivers/e1000-5.x/src/e1000_hw.h	/^    uint8_t mdix;$/;"	m	struct:e1000_hw
mdix	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t mdix;$/;"	m	struct:e1000_hw
mdix_mode	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_auto_x_mode mdix_mode;$/;"	m	struct:e1000_phy_info
mdix_mode	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_auto_x_mode mdix_mode;$/;"	m	struct:e1000_phy_info
mdix_mode	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_auto_x_mode mdix_mode;$/;"	m	struct:e1000_phy_info
me	conf/make-dsdv-config.pl	/^		     me:eth, me:ip, $/;"	l
me	elements/grid/dsrroutetable.hh	/^  IPAddress *me;$/;"	m	class:DSRRouteTable
measurement_time	elements/grid/grid.hh	/^    struct timeval measurement_time;$/;"	m	struct:grid_nbr_encap	typeref:struct:grid_nbr_encap::timeval
measurement_time	elements/grid/grid.hh	/^    struct timeval measurement_time;$/;"	m	struct:grid_nbr_entry	typeref:struct:grid_nbr_entry::timeval
media	apps/clicky/src/dstyle.hh	/^    const String &media() const {$/;"	f	class:clicky::dcss_set
media_type	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_media_type media_type;$/;"	m	struct:e1000_hw
media_type	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_media_type media_type;$/;"	m	struct:e1000_hw
media_type	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_media_type media_type;$/;"	m	struct:e1000_hw
memmax_write_handler	elements/ip/ipratemon.cc	/^IPRateMonitor::memmax_write_handler$/;"	f	class:IPRateMonitor
memmove	lib/glue.cc	/^memmove(void *dest, const void *src, size_t n)$/;"	f
memo	include/click/string.hh	/^	memo_t *memo;$/;"	m	struct:String::rep_t
memo_sizes	include/click/string.hh	/^    static uint64_t memo_sizes[55];$/;"	m	class:String
memo_sizes	lib/string.cc	/^uint64_t String::memo_sizes[55];$/;"	m	class:String	file:
memo_t	include/click/string.hh	/^    struct memo_t {$/;"	s	class:String
message	apps/clicky/src/gathererror.hh	/^	String message;$/;"	m	struct:GatherErrorHandler::Message
message	elements/userlevel/controlsocket.cc	/^ControlSocket::connection::message(int code, const String &msg, bool continuation)$/;"	f	class:ControlSocket::connection
message	lib/args.cc	/^ArgContext::message(const char *fmt, ...) const$/;"	f	class:ArgContext
message	lib/error.cc	/^ErrorHandler::message(const char *fmt, ...)$/;"	f	class:ErrorHandler
message	test/testie	/^sub message ($@) {$/;"	s
message_age	elements/local/OpenFlow/lib/stp.cc	/^    uint16_t message_age;          \/* 8.5.1.5: Age of BPDU at tx time. *\/$/;"	m	struct:stp_config_bpdu	file:
message_age_timer	elements/local/OpenFlow/lib/stp.cc	/^    struct stp_timer message_age_timer; \/* 8.5.6.1: Age of received info. *\/$/;"	m	struct:stp_port	typeref:struct:stp_port::stp_timer	file:
message_string	apps/clicky/src/gathererror.cc	/^String GatherErrorHandler::message_string(const_iterator begin, const_iterator end)$/;"	f	class:GatherErrorHandler
messages	elements/userlevel/controlsocket.cc	/^    const Vector<String> &messages() const {$/;"	f	struct:ControlSocketErrorHandler
messagevector	apps/clicky/src/crouter.hh	/^typedef Vector<Pair<String, String> > messagevector;$/;"	t	namespace:clicky
meters_read_handler	elements/standard/bandwidthmeter.cc	/^BandwidthMeter::meters_read_handler(Element *f, void *)$/;"	f	class:BandwidthMeter
method_devbpf	elements/userlevel/todevice.hh	/^    enum { method_linux, method_pcap, method_devbpf, method_pcapfd };$/;"	e	enum:ToDevice::__anon207
method_linux	elements/userlevel/todevice.hh	/^    enum { method_linux, method_pcap, method_devbpf, method_pcapfd };$/;"	e	enum:ToDevice::__anon207
method_pcap	elements/userlevel/todevice.hh	/^    enum { method_linux, method_pcap, method_devbpf, method_pcapfd };$/;"	e	enum:ToDevice::__anon207
method_pcapfd	elements/userlevel/todevice.hh	/^    enum { method_linux, method_pcap, method_devbpf, method_pcapfd };$/;"	e	enum:ToDevice::__anon207
methods	tools/lib/etraits.hh	/^    String methods;$/;"	m	struct:ElementTraits
metric	apps/clicky/src/ddecor.hh	/^	double metric;$/;"	m	struct:clicky::dactivity_decor::sample
metric	elements/grid/dsdvroutetable.hh	/^    metric_t            metric;$/;"	m	class:DSDVRouteTable::RTEntry
metric	elements/grid/grid.hh	/^    uint32_t metric;$/;"	m	struct:grid_nbr_entry
metric	elements/grid/gridroutetable.hh	/^    unsigned int metric; \/\/ generic metric -- routing code must interpret this as neccessary$/;"	m	class:GridRouteTable::RTEntry
metric_is_preferable	elements/grid/gridroutetable.cc	/^GridRouteTable::metric_is_preferable(const RTEntry &r1, const RTEntry &r2)$/;"	f	class:GridRouteTable
metric_preferable	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::metric_preferable(const RTEntry &r1, const RTEntry &r2)$/;"	f	class:DSDVRouteTable
metric_preferable	elements/grid/dsrroutetable.cc	/^DSRRouteTable::metric_preferable(unsigned short a, unsigned short b)$/;"	f	class:DSRRouteTable
metric_t	elements/grid/dsdvroutetable.hh	/^  typedef GridGenericMetric::metric_t metric_t;$/;"	t	class:DSDVRouteTable
metric_t	elements/grid/gridgenericmetric.hh	/^    metric_t() : _good(false), _val(77777) { }$/;"	f	class:GridGenericMetric::metric_t
metric_t	elements/grid/gridgenericmetric.hh	/^    metric_t(unsigned v, bool g = true) : _good(g), _val(v) { }$/;"	f	class:GridGenericMetric::metric_t
metric_t	elements/grid/gridgenericmetric.hh	/^  class metric_t {$/;"	c	class:GridGenericMetric
metric_type_to_string	elements/grid/gridroutetable.cc	/^GridRouteTable::metric_type_to_string(MetricType t)$/;"	f	class:GridRouteTable
metric_val_lt	elements/grid/bottleneckmetric.cc	/^BottleneckMetric::metric_val_lt(const metric_t &m1, const metric_t &m2) const$/;"	f	class:BottleneckMetric
metric_val_lt	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::metric_val_lt(const metric_t &m1, const metric_t &m2)$/;"	f	class:DSDVRouteTable
metric_val_lt	elements/grid/e2elossmetric.cc	/^E2ELossMetric::metric_val_lt(const metric_t &m1, const metric_t &m2) const$/;"	f	class:E2ELossMetric
metric_val_lt	elements/grid/etx2metric.cc	/^ETX2Metric::metric_val_lt(const metric_t &m1, const metric_t &m2) const$/;"	f	class:ETX2Metric
metric_val_lt	elements/grid/etxmetric.cc	/^ETXMetric::metric_val_lt(const metric_t &m1, const metric_t &m2) const$/;"	f	class:ETXMetric
metric_val_lt	elements/grid/hopcountmetric.cc	/^HopcountMetric::metric_val_lt(const metric_t &m1, const metric_t &m2) const$/;"	f	class:HopcountMetric
metric_val_lt	elements/grid/lirmetric.cc	/^LIRMetric::metric_val_lt(const metric_t &m1, const metric_t &m2) const$/;"	f	class:LIRMetric
metric_val_lt	elements/grid/threshmetric.cc	/^ThresholdMetric::metric_val_lt(const metric_t &m1, const metric_t &m2) const$/;"	f	class:ThresholdMetric
metric_val_lt	elements/grid/yarvismetric.cc	/^YarvisMetric::metric_val_lt(const metric_t &m1, const metric_t &m2) const$/;"	f	class:YarvisMetric
metric_valid	elements/grid/grid.hh	/^    uint8_t \/* bool *\/ metric_valid;$/;"	m	struct:grid_nbr_entry
metric_valid	elements/grid/gridroutetable.hh	/^    bool metric_valid;   \/* metrics are invalid until updated to$/;"	m	class:GridRouteTable::RTEntry
metrics_differ	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::metrics_differ(const metric_t &m1, const metric_t &m2)$/;"	f	class:DSDVRouteTable
mfr_desc	elements/local/OpenFlow/include/openflow/openflow.hh	/^    char mfr_desc[DESC_STR_LEN];       \/* Manufacturer description. *\/$/;"	m	struct:ofp_desc_stats
mgpdc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t mgpdc;$/;"	m	struct:e1000_hw_stats
mgpdc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t mgpdc;$/;"	m	struct:e1000_hw_stats
mgpdc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t mgpdc;$/;"	m	struct:e1000_hw_stats
mgprc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t mgprc;$/;"	m	struct:e1000_hw_stats
mgprc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t mgprc;$/;"	m	struct:e1000_hw_stats
mgprc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t mgprc;$/;"	m	struct:e1000_hw_stats
mgptc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t mgptc;$/;"	m	struct:e1000_hw_stats
mgptc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t mgptc;$/;"	m	struct:e1000_hw_stats
mgptc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t mgptc;$/;"	m	struct:e1000_hw_stats
mh_ack	elements/tcpudp/snooptcp.cc	/^SnoopTCP::PCB::mh_ack(Packet *p, const click_tcp *tcph, int datalen)$/;"	f	class:SnoopTCP::PCB
mh_data	elements/tcpudp/snooptcp.cc	/^SnoopTCP::PCB::mh_data(Packet *, const click_tcp *tcph, int datalen)$/;"	f	class:SnoopTCP::PCB
mh_dup_ack	elements/tcpudp/snooptcp.cc	/^SnoopTCP::PCB::mh_dup_ack(Packet *p, const click_tcp *tcph, unsigned ack)$/;"	f	class:SnoopTCP::PCB
mh_new_ack	elements/tcpudp/snooptcp.cc	/^SnoopTCP::PCB::mh_new_ack(unsigned ack)$/;"	f	class:SnoopTCP::PCB
middle	drivers/e1000-7.x/src/e1000_hw.h	/^        } middle;$/;"	m	struct:e1000_rx_desc_packet_split::__anon100	typeref:struct:e1000_rx_desc_packet_split::__anon100::__anon104
mii_check_link	drivers/e1000-7.x/src/kcompat_ethtool.c	887;"	d	file:
mii_check_link	drivers/e1000-7.x/src/kcompat_ethtool.c	888;"	d	file:
mii_ethtool_gset	drivers/e1000-7.x/src/kcompat_ethtool.c	883;"	d	file:
mii_ethtool_gset	drivers/e1000-7.x/src/kcompat_ethtool.c	884;"	d	file:
mii_ethtool_sset	drivers/e1000-7.x/src/kcompat_ethtool.c	885;"	d	file:
mii_ethtool_sset	drivers/e1000-7.x/src/kcompat_ethtool.c	886;"	d	file:
mii_if_info	drivers/e1000-7.x/src/kcompat_ethtool.c	861;"	d	file:
mii_link_ok	drivers/e1000-7.x/src/kcompat_ethtool.c	879;"	d	file:
mii_link_ok	drivers/e1000-7.x/src/kcompat_ethtool.c	880;"	d	file:
mii_nway_restart	drivers/e1000-7.x/src/kcompat_ethtool.c	881;"	d	file:
mii_nway_restart	drivers/e1000-7.x/src/kcompat_ethtool.c	882;"	d	file:
min	drivers/e1000-4.x/src/e1000_param.c	/^			int min;$/;"	m	struct:e1000_option::__anon67::__anon68	file:
min	drivers/e1000-4.x/src/kcompat.h	401;"	d
min	drivers/e1000-4.x/src/kcompat.h	402;"	d
min	drivers/e1000-5.x/src/e1000_param.c	/^			int min;$/;"	m	struct:e1000_option::__anon164::__anon165	file:
min	drivers/e1000-5.x/src/kcompat.h	484;"	d
min	drivers/e1000-5.x/src/kcompat.h	485;"	d
min	drivers/e1000-7.x/src/e1000_param.c	/^			int min;$/;"	m	struct:e1000_option::__anon122::__anon123	file:
min	drivers/e1000-7.x/src/kcompat.h	657;"	d
min	drivers/e1000-7.x/src/kcompat.h	658;"	d
min	elements/grid/region.cc	/^min(double a, double b)$/;"	f	file:
min	test/testie	/^sub min (@) {$/;"	s
min_body	elements/local/OpenFlow/datapath.cc	/^	size_t min_body, max_body;$/;"	m	struct:stats_type	file:
min_buffer_length	include/click/packet.hh	/^	min_buffer_length = 64		\/\/\/< Minimum buffer_length() for$/;"	e	enum:Packet::__anon461
min_buffer_size	include/click/hashallocator.hh	/^	min_buffer_size = 1024,$/;"	e	enum:HashAllocator::__anon437
min_click_frac	bsdmodule/sched.cc	/^static unsigned min_click_frac = 5, max_click_frac = 800;$/;"	v	file:
min_click_frac	linuxmodule/sched.cc	/^static unsigned min_click_frac = 5, max_click_frac = 800;$/;"	v	file:
min_cpu_share	include/click/routerthread.hh	/^    unsigned min_cpu_share() const	{ return _min_click_share; }$/;"	f	class:RouterThread
min_different_chars	lib/clp.c	/^min_different_chars(const char *s, const char *t)$/;"	f	file:
min_frame_size	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t min_frame_size;$/;"	m	struct:e1000_hw
min_frame_size	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t min_frame_size;$/;"	m	struct:e1000_hw
min_frame_size	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t min_frame_size;$/;"	m	struct:e1000_hw
min_height	apps/clicky/src/dstyle.hh	/^    double min_height;$/;"	m	struct:clicky::delt_size_style
min_height	apps/clicky/src/dwidget.cc	/^double delt::min_height() const$/;"	f	class:clicky::delt
min_large	lib/bighashmap_arena.cc	/^static const uint32_t min_large = 256;$/;"	v	file:
min_len	elements/local/OpenFlow/lib/netlink.hh	/^    size_t min_len, max_len;$/;"	m	struct:nl_policy
min_length	apps/clicky/src/dstyle.hh	/^    double min_length;$/;"	m	struct:clicky::delt_size_style
min_nelements	include/click/hashallocator.hh	/^	min_nelements = 8$/;"	e	enum:HashAllocator::__anon437
min_rate	elements/local/OpenFlow/datapath.hh	/^	uint16_t min_rate;$/;"	m	struct:sw_queue
min_seconds	include/click/timestamp.hh	/^	min_seconds = (seconds_type) -2147483648U$/;"	e	enum:Timestamp::__anon416
min_size	elements/local/OpenFlow/lib/dp_act.cc	/^    size_t min_size;$/;"	m	struct:openflow_action	file:
min_size	elements/local/OpenFlow/lib/ofp-print.cc	/^    size_t min_size;$/;"	m	struct:openflow_packet	file:
min_txc	elements/grid/ackretrysender2.hh	/^  unsigned max_txc, min_txc;$/;"	m	class:ACKRetrySender2
min_value	apps/clicky/src/dstyle.hh	/^    double min_value;$/;"	m	struct:clicky::dactivity_style
min_value	include/click/args.hh	/^    int min_value;$/;"	m	struct:BoundedIntArg
min_version	elements/local/OpenFlow/lib/vconn-provider.hh	/^    int min_version;$/;"	m	struct:vconn
min_vlog_levels	elements/local/OpenFlow/lib/vlog.cc	/^enum vlog_level min_vlog_levels[VLM_N_MODULES];$/;"	v	typeref:enum:vlog_level
min_width	apps/clicky/src/dstyle.hh	/^    double min_width;$/;"	m	struct:clicky::delt_size_style
min_width	apps/clicky/src/dwidget.cc	/^double delt::min_width() const$/;"	f	class:clicky::delt
minimize	elements/grid/amoeba.cc	/^Amoeba::minimize(double res[])$/;"	f	class:Amoeba
minor_version	elements/analysis/ipsumdumpinfo.hh	/^    int minor_version;$/;"	m	struct:IPSummaryDump::PacketOdesc
miss_send_len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t miss_send_len;     \/* Max bytes of new flow that datapath should$/;"	m	struct:ofp_switch_config
missing_packets_count	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.cc	/^int FrameReceivingBuffer::missing_packets_count()$/;"	f	class:FrameReceivingBuffer
mix	elements/local/OpenFlow/lib/hash.cc	41;"	d	file:
mkinstalldirs	Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	bsdmodule/Makefile	/^mkinstalldirs = ..\/mkinstalldirs$/;"	m
mkinstalldirs	doc/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	etc/libclick/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	linuxmodule/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	ns/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	tools/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	tools/click-align/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	tools/click-check/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	tools/click-combine/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	tools/click-devirtualize/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	tools/click-fastclassifier/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	tools/click-flatten/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	tools/click-install/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	tools/click-mkmindriver/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	tools/click-pretty/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	tools/click-undead/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	tools/click-xform/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	tools/click2xml/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	tools/lib/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mkinstalldirs	userlevel/Makefile	/^mkinstalldirs = $(conf_auxdir)\/mkinstalldirs$/;"	m
mmiowb	drivers/e1000-7.x/src/kcompat.h	128;"	d
mmiowb	drivers/e1000-7.x/src/kcompat.h	130;"	d
mng_cookie	drivers/e1000-7.x/src/e1000_hw.h	/^    struct e1000_host_mng_dhcp_cookie mng_cookie;$/;"	m	struct:e1000_hw	typeref:struct:e1000_hw::e1000_host_mng_dhcp_cookie
mng_reg_access_disabled	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t mng_reg_access_disabled;$/;"	m	struct:e1000_hw
mng_vlan_id	drivers/e1000-7.x/src/e1000.h	/^	uint16_t mng_vlan_id;$/;"	m	struct:e1000_adapter
mod_flow	elements/local/OpenFlow/datapath.cc	/^int Datapath::mod_flow(struct rconn_remote *rconn_sender, uint32_t xid UNUSED, const struct ofp_flow_mod *ofm)$/;"	f	class:Datapath
mode	drivers/e1000-4.x/src/idiag_e1000.h	/^	enum idiag_e1000_diag_loopback_mode mode;$/;"	m	struct:idiag_e1000_diag_loopback_test_param	typeref:enum:idiag_e1000_diag_loopback_test_param::idiag_e1000_diag_loopback_mode
mode	include/click/archive.hh	/^    int mode;			\/\/\/< File mode$/;"	m	struct:ArchiveElement
modified	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t   modified;$/;"	m	struct:e1000_shadow_ram
modify	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t modify;$/;"	m	struct:ofpstat::__anon247
modify	elements/local/OpenFlow/lib/table.hh	/^    int (*modify)(struct sw_table *table, const struct sw_flow_key *key,$/;"	m	struct:sw_table
modify_strict	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t modify_strict;$/;"	m	struct:ofpstat::__anon247
modify_vlan_tci	elements/local/OpenFlow/lib/dp_act.cc	/^modify_vlan_tci(struct ofpbuf *buffer, struct sw_flow_key *key,$/;"	f	file:
module	include/click/lexer.hh	/^	struct module *module;$/;"	m	struct:Lexer::ElementType	typeref:struct:Lexer::ElementType::module
module_exit	drivers/e1000-4.x/src/kcompat.h	78;"	d
module_init	drivers/e1000-4.x/src/kcompat.h	74;"	d
module_names	elements/local/OpenFlow/lib/vlog.cc	/^static const char *module_names[VLM_N_MODULES] = { $/;"	v	file:
module_param	drivers/e1000-5.x/src/kcompat.h	73;"	d
module_param	drivers/e1000-7.x/src/kcompat.h	111;"	d
module_param_array_named	drivers/e1000-5.x/src/kcompat.h	685;"	d
module_param_array_named	drivers/e1000-5.x/src/kcompat.h	686;"	d
module_param_array_named	drivers/e1000-7.x/src/kcompat.h	988;"	d
module_param_array_named	drivers/e1000-7.x/src/kcompat.h	989;"	d
modulus	tools/click-align/alignment.hh	/^    int modulus() const {$/;"	f	class:Alignment
monitoring_interval	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	int monitoring_interval;$/;"	m	struct:CORE
monitoring_interval_count	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	int monitoring_interval_count;$/;"	m	struct:CORE
monitors	elements/local/OpenFlow/lib/rconn.cc	/^    struct vconn *monitors[8];$/;"	m	struct:rconn	typeref:struct:rconn::vconn	file:
more	elements/wifi/athdesc.h	/^	u_int32_t	more:1;$/;"	m	struct:ar5212_desc
more	elements/wifi/athdesc.h	/^	u_int32_t more:1;$/;"	m	struct:ar5212_rx_status
more	tools/click-fastclassifier/click-fastclassifier.cc	/^    void (*more)(const Classifier_Program &, const String &, StringAccum &, StringAccum &);$/;"	m	struct:FastClassifier_Cid	file:
more	tools/click-fastclassifier/fc_classifier.cc	/^more(const Classifier_Program &c, const String &type_name,$/;"	f	file:
more	tools/click-fastclassifier/fc_ipclassifier.cc	/^more(const Classifier_Program &c, const String &type_name,$/;"	f	file:
move_thread	lib/task.cc	/^Task::move_thread(int new_thread_id)$/;"	f	class:Task
move_thread_second_half	lib/task.cc	/^Task::move_thread_second_half()$/;"	f	class:Task
mpc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t mpc;$/;"	m	struct:e1000_hw_stats
mpc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t mpc;$/;"	m	struct:e1000_hw_stats
mpc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t mpc;$/;"	m	struct:e1000_hw_stats
mpeg2Name	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^	String mpeg2Name;$/;"	m	class:PFMpeg2AdaptFW
mpeg2pes	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^struct mpeg2pes {$/;"	s	file:
mpeg2pes_optional	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^struct mpeg2pes_optional {$/;"	s	file:
mpeg2psi	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^struct mpeg2psi {$/;"	s	file:
mpeg2psi_pat	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^struct mpeg2psi_pat {$/;"	s	file:
mpeg2psi_pat_loop	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^struct mpeg2psi_pat_loop {$/;"	s	file:
mpeg2psi_pmt	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^struct mpeg2psi_pmt {$/;"	s	file:
mpeg2psi_pmt_loop	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^struct mpeg2psi_pmt_loop { $/;"	s	file:
mpeg2ts	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^struct mpeg2ts {$/;"	s	file:
mpeg2ts_adapt	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^struct mpeg2ts_adapt {$/;"	s	file:
mprc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t mprc;$/;"	m	struct:e1000_hw_stats
mprc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t mprc;$/;"	m	struct:e1000_hw_stats
mprc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t mprc;$/;"	m	struct:e1000_hw_stats
mptc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t mptc;$/;"	m	struct:e1000_hw_stats
mptc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t mptc;$/;"	m	struct:e1000_hw_stats
mptc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t mptc;$/;"	m	struct:e1000_hw_stats
mrq	drivers/e1000-7.x/src/e1000_hw.h	/^            uint32_t mrq;              \/* Multiple Rx Queues *\/$/;"	m	struct:e1000_rx_desc_extended::__anon94::__anon95
mrq	drivers/e1000-7.x/src/e1000_hw.h	/^            uint32_t mrq;              \/* Multiple Rx Queues *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon100::__anon101
ms_to_timer	elements/local/OpenFlow/lib/stp.cc	/^ms_to_timer(int ms)$/;"	f	file:
ms_to_timer_remainder	elements/local/OpenFlow/lib/stp.cc	/^ms_to_timer_remainder(int ms)$/;"	f	file:
msec	include/click/timestamp.hh	/^Timestamp::msec() const$/;"	f	class:Timestamp
msec1	include/click/timestamp.hh	/^Timestamp::msec1() const$/;"	f	class:Timestamp
msec_delay	drivers/e1000-4.x/src/e1000_osdep.h	46;"	d
msec_delay	drivers/e1000-4.x/src/kcompat.h	309;"	d
msec_delay	drivers/e1000-5.x/src/e1000_osdep.h	47;"	d
msec_delay	drivers/e1000-7.x/src/e1000_osdep.h	47;"	d
msec_delay_irq	drivers/e1000-5.x/src/e1000_osdep.h	54;"	d
msec_delay_irq	drivers/e1000-7.x/src/e1000_osdep.h	59;"	d
msec_per_sec	include/click/timestamp.hh	/^	msec_per_sec = 1000,$/;"	e	enum:Timestamp::__anon417
msec_to_jiff	elements/grid/dsdvroutetable.hh	/^  static unsigned int msec_to_jiff(unsigned int m)$/;"	f	class:DSDVRouteTable
msec_to_jiff	elements/grid/gridroutetable.hh	/^  static int msec_to_jiff(int m)$/;"	f	class:GridRouteTable
msec_to_subsec	include/click/timestamp.hh	/^    inline static uint32_t msec_to_subsec(uint32_t msec) {$/;"	f	class:Timestamp
msecval	include/click/timestamp.hh	/^    inline value_type msecval() const {$/;"	f	class:Timestamp
msg	apps/clicky/src/cdriver.hh	/^	msg(crouter *cr_, const String &hname_, const String &command_, int command_datalen_, int type_, int flags_)$/;"	f	struct:clicky::csocket_cdriver::msg
msg	apps/clicky/src/cdriver.hh	/^    struct msg {$/;"	s	class:clicky::csocket_cdriver
msg	elements/etherswitch/spantree.hh	/^    BridgeMessage msg;$/;"	m	struct:EtherSpanTree::PortInfo
msg	elements/local/OpenFlow/lib/netlink-protocol.hh	/^        struct nlmsghdr msg;$/;"	m	struct:nlmsgerr	typeref:struct:nlmsgerr::nlmsghdr
msg_enable	drivers/e1000-5.x/src/e1000.h	/^	int msg_enable;$/;"	m	struct:e1000_adapter
msg_enable	drivers/e1000-7.x/src/e1000.h	/^	int msg_enable;$/;"	m	struct:e1000_adapter
msg_parse	apps/clicky/src/cdriver.cc	/^bool csocket_cdriver::msg_parse(msg *m, GatherErrorHandler *gerrh, int gerrh_pos)$/;"	f	class:clicky::csocket_cdriver
msgcode	include/clicknet/wifi.h	/^  uint32_t msgcode;$/;"	m	struct:__anon498
msglen	include/clicknet/wifi.h	/^  uint32_t msglen;$/;"	m	struct:__anon498
msleep	drivers/e1000-5.x/src/kcompat.h	631;"	d
msleep	drivers/e1000-7.x/src/kcompat.h	901;"	d
msleep_interruptible	drivers/e1000-5.x/src/kcompat.h	641;"	d
msleep_interruptible	drivers/e1000-7.x/src/kcompat.h	934;"	d
mss	drivers/e1000-4.x/src/e1000_hw.h	/^            uint16_t mss;       \/* Maximum segment size *\/$/;"	m	struct:e1000_context_desc::__anon60::__anon61
mss	drivers/e1000-5.x/src/e1000_hw.h	/^            uint16_t mss;       \/* Maximum segment size *\/$/;"	m	struct:e1000_context_desc::__anon157::__anon158
mss	drivers/e1000-7.x/src/e1000_hw.h	/^            uint16_t mss;       \/* Maximum segment size *\/$/;"	m	struct:e1000_context_desc::__anon114::__anon115
multiply	include/click/bigint.hh	/^    static limb_type multiply(limb_type *x, const limb_type *a, int n,$/;"	f	class:Bigint
multiply	include/click/bigint.hh	/^    static void multiply(limb_type &x1, limb_type &x0,$/;"	f	class:Bigint
multiply_add	include/click/bigint.hh	/^    static limb_type multiply_add(limb_type *x, const limb_type *a, int n,$/;"	f	class:Bigint
multiply_factor	lib/args.cc	/^multiply_factor(uint32_t ix, uint32_t fx, uint32_t factor, int &status)$/;"	f	file:
multiply_half	include/click/bigint.hh	/^    static limb_type multiply_half(limb_type *x, const limb_type *a, int n,$/;"	f	class:Bigint
multiply_half	include/click/bigint.hh	/^    static void multiply_half(limb_type &x1, limb_type &x0,$/;"	f	class:Bigint
multithread_name	tools/lib/etraits.cc	/^Driver::multithread_name(int d)$/;"	f	class:Driver
munmap_destructor	lib/fromfile.cc	/^munmap_destructor(unsigned char *data, size_t amount)$/;"	f	file:
mutable_c_str	lib/string.cc	/^String::mutable_c_str()$/;"	f	class:String
mutable_data	lib/string.cc	/^String::mutable_data()$/;"	f	class:String
mutex	elements/local/OpenFlow/SynchronizedPacketQueue.hh	/^        sem_t mutex;$/;"	m	struct:SynchronizedPacketQueue
mutex_rconn	elements/local/OpenFlow/RConn.hh	/^	sem_t mutex_rconn;$/;"	m	class:RConn
myEther	elements/local/FlowNet/common/FlowNetGod.hh	/^	EtherAddress myEther;$/;"	m	struct:paramset_device
myEther	elements/local/FlowNet/scheduler/WBSEtherFilter.hh	/^	EtherAddress myEther;		$/;"	m	class:WBSEtherFilter
myIP	elements/local/FlowNet/common/FlowNetGod.hh	/^	IPAddress myIP;$/;"	m	struct:paramset_device
myWirelessIfname	elements/local/FlowNet/common/FlowNetGod.hh	/^	String myWirelessIfname;$/;"	m	struct:paramset_device
my_filldir	linuxmodule/clickfs.cc	/^my_filldir(const char *name, int namelen, ino_t ino, int dirtype, uint32_t f_pos, void *thunk)$/;"	f	file:
my_filldir_container	linuxmodule/clickfs.cc	/^struct my_filldir_container {$/;"	s	file:
my_net_count	drivers/e1000-4.x/src/kcompat.c	/^static int my_net_count = 0;$/;"	v	file:
my_net_devices	drivers/e1000-4.x/src/kcompat.c	/^static struct _kc_net_dev_ext my_net_devices[_KC_MAX_NET_DEV];$/;"	v	typeref:struct:_kc_net_dev_ext	file:
my_pci_count	drivers/e1000-4.x/src/kcompat.c	/^static int my_pci_count = 0;$/;"	v	file:
my_pci_devices	drivers/e1000-4.x/src/kcompat.c	/^static struct _kc_pci_dev_ext my_pci_devices[_KC_MAX_PCI_DEV];$/;"	v	typeref:struct:_kc_pci_dev_ext	file:
n	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	long n;             \/\/ number of data points input so far$/;"	m	struct:LinearRegression
n	elements/local/OpenFlow/lib/queue.hh	/^    int n;                      \/* Number of queued packets. *\/$/;"	m	struct:ofp_queue
n	elements/local/OpenFlow/lib/svec.hh	/^    size_t n;$/;"	m	struct:svec
n	include/click/llrpc.h	/^    uint32_t n;$/;"	m	struct:click_llrpc_counts_st
n_attempted_connections	elements/local/OpenFlow/lib/rconn.cc	/^    unsigned int n_attempted_connections, n_successful_connections;$/;"	m	struct:rconn	file:
n_buffers	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t n_buffers;     \/* Max packets buffered at once. *\/$/;"	m	struct:ofp_switch_features
n_dropped	elements/local/OpenFlow/lib/vlog.hh	/^    unsigned int n_dropped;     \/* Number of messages dropped. *\/$/;"	m	struct:vlog_rate_limit
n_files	elements/local/OpenFlow/lib/fatal-signal.cc	/^static size_t n_files, max_files;$/;"	v	file:
n_fixes	elements/grid/pep_proto.hh	/^  int n_fixes;$/;"	m	struct:pep_proto
n_fixes	elements/grid/pep_proto.hh	/^  int n_fixes;$/;"	m	struct:pep_rgn_proto
n_flows	elements/local/OpenFlow/lib/table-hash.cc	/^	unsigned int n_flows;$/;"	m	struct:sw_table_hash	file:
n_flows	elements/local/OpenFlow/lib/table-linear.cc	/^    unsigned int n_flows;$/;"	m	struct:sw_table_linear	file:
n_flows	elements/local/OpenFlow/lib/table.hh	/^    unsigned int n_flows;        \/* Number of active flows. *\/$/;"	m	struct:sw_table_stats
n_hooks	elements/local/OpenFlow/lib/fatal-signal.cc	/^static size_t n_hooks;$/;"	v	file:
n_listeners	elements/local/OpenFlow/RConn.hh	/^        size_t n_listeners;$/;"	m	class:RConn
n_live_elements	tools/lib/routert.hh	/^    int n_live_elements() const		{ return _n_live_elements; }$/;"	f	class:RouterT
n_lookup	elements/local/OpenFlow/lib/table.hh	/^    unsigned long int n_lookup;  \/* Number of packets looked up. *\/$/;"	m	struct:sw_table_stats
n_lookup	elements/local/OpenFlow/lib/table.hh	/^    unsigned long long n_lookup;$/;"	m	struct:sw_table
n_matched	elements/local/OpenFlow/lib/table.hh	/^    unsigned long int n_matched; \/* Number of packets that have hit. *\/$/;"	m	struct:sw_table_stats
n_matched	elements/local/OpenFlow/lib/table.hh	/^    unsigned long long n_matched;$/;"	m	struct:sw_table
n_monitors	elements/local/OpenFlow/lib/rconn.cc	/^    size_t n_monitors;$/;"	m	struct:rconn	file:
n_stats	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t n_stats;$/;"	m	struct:ethtool_stats
n_stats	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t n_stats;$/;"	m	struct:k_ethtool_drvinfo
n_stats	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t n_stats;$/;"	m	struct:ethtool_stats
n_stats	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t n_stats;$/;"	m	struct:k_ethtool_drvinfo
n_successful_connections	elements/local/OpenFlow/lib/rconn.cc	/^    unsigned int n_attempted_connections, n_successful_connections;$/;"	m	struct:rconn	file:
n_tables	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t n_tables;       \/* Number of tables supported by datapath. *\/$/;"	m	struct:ofp_switch_features
n_tables	elements/local/OpenFlow/lib/chain.hh	/^    int n_tables;                \/* Number of working tables, not includes$/;"	m	struct:sw_chain
n_txq	elements/local/OpenFlow/RConn.hh	/^        int n_txq;                  \/* Number of packets queued for tx on rconn. *\/$/;"	m	struct:rconn_remote
n_unix_sockets	elements/local/OpenFlow/lib/vconn-unix.cc	/^static int n_unix_sockets;$/;"	v	file:
n_waiters	elements/local/OpenFlow/lib/poll-loop.cc	/^static size_t n_waiters;$/;"	v	file:
name	apps/clicky/src/dstyle.cc	/^    const char *name;$/;"	m	struct:clicky::colordef	file:
name	apps/clicky/src/dstyle.hh	/^    PermString name() const {$/;"	f	struct:clicky::dcss_property
name	apps/clicky/src/dstyle.hh	/^    PermString name;$/;"	m	struct:clicky::dcss_propmatch
name	apps/clicky/src/dstyle.hh	/^    const String &name() const {$/;"	f	class:clicky::dcss_selector
name	apps/clicky/src/dwidget.hh	/^    const String &name() const {$/;"	f	class:clicky::delt
name	apps/clicky/src/wmain.hh	/^	String name;$/;"	m	struct:clicky::wmain::element_lister
name	apps/csclient/csclient.hh	/^  const string name() { assert(_init); return _name; }$/;"	f	class:ControlSocketClient
name	bsdmodule/clickfs_tree.hh	/^	    char name[CLICKFS_DIRENT_NAMLEN];$/;"	m	struct:clickfs_dirent::__anon34::symlink_struct
name	bsdmodule/clickfs_tree.hh	/^    char name[CLICKFS_DIRENT_NAMLEN];$/;"	m	struct:clickfs_dirent
name	drivers/e1000-4.x/src/e1000_param.c	/^	char *name;$/;"	m	struct:e1000_option	file:
name	drivers/e1000-4.x/src/kcompat.h	/^	char *name;$/;"	m	struct:_kc_pci_driver
name	drivers/e1000-5.x/src/e1000_param.c	/^	char *name;$/;"	m	struct:e1000_option	file:
name	drivers/e1000-7.x/src/e1000_param.c	/^	char *name;$/;"	m	struct:e1000_option	file:
name	elements/analysis/ipsumdumpinfo.hh	/^    const char *name;		\/\/ must come first$/;"	m	struct:IPSummaryDump::FieldReader
name	elements/analysis/ipsumdumpinfo.hh	/^    const char *name;		\/\/ must come first$/;"	m	struct:IPSummaryDump::FieldSynonym
name	elements/analysis/ipsumdumpinfo.hh	/^    const char *name;		\/\/ must come first$/;"	m	struct:IPSummaryDump::FieldWriter
name	elements/grid/gridheaderinfo.hh	/^    char name[100];$/;"	m	struct:GridHeaderInfo::info_t
name	elements/local/FlowNet/common/Algorithm.hh	/^inline const char* Algorithm::name() const$/;"	f	class:Algorithm
name	elements/local/OpenFlow/include/openflow/openflow.hh	/^    char name[OFP_MAX_PORT_NAME_LEN]; \/* Null-terminated *\/$/;"	m	struct:ofp_phy_port
name	elements/local/OpenFlow/include/openflow/openflow.hh	/^    char name[OFP_MAX_TABLE_NAME_LEN];$/;"	m	struct:ofp_table_stats
name	elements/local/OpenFlow/lib/ofp-print.cc	/^    const char *name;$/;"	m	struct:error_type	file:
name	elements/local/OpenFlow/lib/ofp-print.cc	/^    const char *name;$/;"	m	struct:openflow_packet	file:
name	elements/local/OpenFlow/lib/rconn.cc	/^    char *name;$/;"	m	struct:rconn	file:
name	elements/local/OpenFlow/lib/stp.cc	/^    char *name;                     \/* Human-readable name for log messages. *\/$/;"	m	struct:stp	file:
name	elements/local/OpenFlow/lib/table.hh	/^    const char *name;            \/* Human-readable name. *\/$/;"	m	struct:sw_table_stats
name	elements/local/OpenFlow/lib/vconn-provider.hh	/^    char *name;$/;"	m	struct:pvconn
name	elements/local/OpenFlow/lib/vconn-provider.hh	/^    char *name;$/;"	m	struct:vconn
name	elements/local/OpenFlow/lib/vconn-provider.hh	/^    const char *name;$/;"	m	struct:pvconn_class
name	elements/local/OpenFlow/lib/vconn-provider.hh	/^    const char *name;$/;"	m	struct:vconn_class
name	elements/local/OpenFlow/lib/vlog.cc	/^    const char *name;           \/* Name. *\/$/;"	m	struct:facility	file:
name	elements/userlevel/fakepcap.cc	/^    const char* name;$/;"	m	struct:dlt_name	file:
name	include/click/archive.hh	/^    String name;		\/\/\/< Member name (no slashes allowed)$/;"	m	struct:ArchiveElement
name	include/click/confparse.hh	/^    const char* name;$/;"	m	struct:cp_argtype
name	include/click/handler.hh	/^    inline const String &name() const {$/;"	f	class:Handler
name	include/click/ino.hh	/^	String name;$/;"	m	struct:ClickIno::Entry
name	include/click/lexer.hh	/^	String name;$/;"	m	struct:Lexer::ElementType
name	include/click/nameinfo.hh	/^	const char *name;$/;"	m	struct:StaticNameDB::Entry
name	include/click/router.hh	/^	String name;$/;"	m	struct:Router::notifier_signals_t
name	include/click/variableenv.hh	/^    const String &name(int i) const	{ return _names[i]; }$/;"	f	class:VariableEnvironment
name	lib/driver.cc	/^    CLICK_NAME(String) name;$/;"	m	struct:ClickProvision	file:
name	lib/element.cc	/^Element::name() const$/;"	f	class:Element
name	lib/error.cc	/^    String name;$/;"	m	struct:ErrorHandler::Conversion	file:
name	lib/lexer.cc	/^    String name;$/;"	m	struct:__anon511::ElementState	file:
name	lib/lexer.cc	/^  const String &name() const		{ return _name; }$/;"	f	class:Lexer::Compound
name	linuxmodule/proclikefs.c	/^    char name[1];$/;"	m	struct:proclikefs_file_system	file:
name	tools/click-devirtualize/cxxclass.hh	/^  String name() const			{ return _name; }$/;"	f	class:CxxFunction
name	tools/click-devirtualize/cxxclass.hh	/^  const String &name() const		{ return _name; }$/;"	f	class:CxxClass
name	tools/click-fastclassifier/click-fastclassifier.cc	/^    String name;$/;"	m	struct:FastClassifier_Cid	file:
name	tools/click2xml/xml2click.hh	/^    String name;$/;"	m	struct:CxElement
name	tools/lib/eclasst.hh	/^    const String &name() const		{ return _name; }$/;"	f	class:ElementClassT
name	tools/lib/elementt.hh	/^    const String &name() const		{ return _name; }$/;"	f	struct:ElementT
name	tools/lib/etraits.cc	/^Driver::name(int d)$/;"	f	class:Driver
name	tools/lib/etraits.hh	/^    String name;$/;"	m	struct:ElementTraits
name	tools/lib/lexert.cc	/^    String name;$/;"	m	struct:__anon534::ElementState	file:
name	tools/lib/routert.hh	/^	const String &name() const	{ return type->name(); }$/;"	f	struct:RouterT::ElementType
name_c_str	tools/lib/elementt.hh	/^    const char *name_c_str() const	{ return _name.c_str(); }$/;"	f	struct:ElementT
name_info	include/click/router.hh	/^Router::name_info() const$/;"	f	class:Router
name_next	tools/lib/etraits.hh	/^    int name_next;$/;"	m	struct:ElementTraits
name_ok	tools/lib/elementt.cc	/^ElementT::name_ok(const String &name, bool allow_anon_names)$/;"	f	class:ElementT
name_search	lib/ino.cc	/^ClickIno::name_search(const String &n, int first_xi, int last_xi, int name_offset) const$/;"	f	class:ClickIno
name_unassigned	tools/lib/elementt.hh	/^    bool name_unassigned() const	{ return _name && _name[0] == ';'; }$/;"	f	struct:ElementT
namedb	lib/nameinfo.cc	/^NameInfo::namedb(uint32_t type, size_t vsize, const String &prefix, NameDB *install)$/;"	f	class:NameInfo
namelist_sort_compar	lib/nameinfo.cc	/^namelist_sort_compar(const void *athunk, const void *bthunk, void *othunk)$/;"	f	file:
names	elements/local/OpenFlow/lib/svec.hh	/^    char **names;$/;"	m	struct:svec
namespace	include/click/cxxprotect.h	11;"	d
namespace	include/click/cxxunprotect.h	11;"	d
narchive	tools/lib/routert.hh	/^    int narchive() const			{ return _archive.size(); }$/;"	f	class:RouterT
nbr	elements/grid/updateroutes.hh	/^    grid_nbr_entry nbr;$/;"	m	struct:UpdateGridRoutes::far_entry
nbr_entry_sz	elements/grid/grid.hh	/^    uint8_t nbr_entry_sz;$/;"	m	struct:grid_hello
nbuckets	include/click/hashcontainer.hh	/^    size_t nbuckets;$/;"	m	class:HashContainer_rep
nbuckets	include/click/hashmap.hh	/^  size_t nbuckets() const		{ return _nbuckets; }$/;"	f	class:HashMap
nchatter_sockets	elements/userlevel/chattersocket.cc	/^    int nchatter_sockets() const	{ return _chatter_sockets.size(); }$/;"	f	struct:ChatterSocketErrorHandler
nclasses	elements/test/sorttest.cc	/^const size_t nclasses = sizeof(unsorted_classes) \/ sizeof(unsorted_classes[0]);$/;"	v
nclients	elements/standard/stridesched.hh	/^    int nclients() const {$/;"	f	class:StrideSched
ncursors	apps/clicky/src/wdiagram.hh	/^    enum { c_element = 0, c_main = 9, c_hand = 10, ncursors = 11 };$/;"	e	enum:clicky::wdiagram::__anon2
nd_sha	include/clicknet/ether.h	/^    uint8_t nd_sha[6];    \/*source link-layer address *\/$/;"	m	struct:click_nd_sol
nd_tha	include/clicknet/ether.h	/^    uint8_t nd_tha[6];     \/* source link-layer address *\/$/;"	m	struct:click_nd_adv
nd_tpa	include/clicknet/ether.h	/^    uint8_t nd_tpa[16];$/;"	m	struct:click_nd_adv
nd_tpa	include/clicknet/ether.h	/^    uint8_t nd_tpa[16];$/;"	m	struct:click_nd_adv2
nd_tpa	include/clicknet/ether.h	/^    uint8_t nd_tpa[16];$/;"	m	struct:click_nd_sol
nduplicate	elements/icmp/icmpsendpings.hh	/^	int nduplicate;$/;"	m	struct:ICMPPingSource::ReceiverInfo
need_metric_ad	elements/grid/dsdvroutetable.hh	/^    bool                need_metric_ad;$/;"	m	class:DSDVRouteTable::RTEntry
need_resolve	tools/lib/eclasst.cc	/^ElementClassT::need_resolve() const$/;"	f	class:ElementClassT
need_resolve	tools/lib/eclasst.cc	/^SynonymElementClassT::need_resolve() const$/;"	f	class:SynonymElementClassT
need_resolve	tools/lib/routert.cc	/^RouterT::need_resolve() const$/;"	f	class:RouterT
need_seq_ad	elements/grid/dsdvroutetable.hh	/^    bool                need_seq_ad;$/;"	m	class:DSDVRouteTable::RTEntry
need_update	include/click/gaprate.hh	/^GapRate::need_update(const Timestamp &now)$/;"	f	class:GapRate
needs_tca	elements/etherswitch/spantree.hh	/^    bool needs_tca;$/;"	m	struct:EtherSpanTree::PortInfo
negate	lib/bitvector.cc	/^Bitvector::negate()$/;"	f	class:Bitvector
negate_subtree	elements/standard/classification.cc	/^Program::negate_subtree(Vector<int> &tree, bool flip_short)$/;"	f	class:Classification::Wordwise::Program
negated	include/click/clp.h	/^    int negated;		\/**< Whether the last option was negated. *\/$/;"	m	struct:Clp_Parser
negated_by_no	lib/clp.c	/^    unsigned char negated_by_no;$/;"	m	struct:Clp_Internal	file:
negated_by_no	lib/clp.c	/^    unsigned char negated_by_no;$/;"	m	struct:Clp_ParserState	file:
negation_is_simple	elements/ip/ipfilter.hh	/^IPFilter::Primitive::negation_is_simple() const$/;"	f	class:IPFilter::Primitive
negative	include/click/type_traits.hh	/^    static bool negative(type x) { return x < 0; }$/;"	f	struct:integer_traits
negative	include/click/type_traits.hh	/^    static bool negative(type) { return false; }$/;"	f	struct:integer_traits
nelem	elements/test/clptest.cc	176;"	d	file:
nelements	include/click/router.hh	/^Router::nelements() const$/;"	f	class:Router
nelements	tools/lib/processingt.hh	/^    int nelements() const {$/;"	f	class:ProcessingT
nelements	tools/lib/routert.hh	/^    int nelements() const		{ return _elements.size(); }$/;"	f	class:RouterT
nelements_allocated	include/click/element.hh	/^    static int nelements_allocated;$/;"	m	class:Element
nelements_allocated	lib/element.cc	/^int Element::nelements_allocated = 0;$/;"	m	class:Element	file:
nerrors	include/click/error.hh	/^    int nerrors() const {$/;"	f	class:ErrorHandler
nested	include/click/sync.hh	/^Spinlock::nested() const$/;"	f	class:Spinlock
net_device	drivers/e1000-4.x/src/kcompat.h	220;"	d
net_device	include/click/glue.hh	/^typedef struct device net_device;$/;"	t	typeref:struct:device
net_device	include/click/glue.hh	/^typedef struct ifnet net_device;$/;"	t	typeref:struct:ifnet
net_lab	conf/click-mkclgw.pl	/^sub net_lab {$/;"	s
net_stats	drivers/e1000-4.x/src/e1000.h	/^	struct net_device_stats net_stats;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::net_device_stats
net_stats	drivers/e1000-5.x/src/e1000.h	/^	struct net_device_stats net_stats;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::net_device_stats
net_stats	drivers/e1000-7.x/src/e1000.h	/^	struct net_device_stats net_stats;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::net_device_stats
net_to_host_order	include/click/integers.hh	/^inline char net_to_host_order(char x) {$/;"	f
net_to_host_order	include/click/integers.hh	/^inline int net_to_host_order(int x) {$/;"	f
net_to_host_order	include/click/integers.hh	/^inline int64_t net_to_host_order(int64_t x) {$/;"	f
net_to_host_order	include/click/integers.hh	/^inline long long net_to_host_order(long long x) {$/;"	f
net_to_host_order	include/click/integers.hh	/^inline long net_to_host_order(long x) {$/;"	f
net_to_host_order	include/click/integers.hh	/^inline short net_to_host_order(short x) {$/;"	f
net_to_host_order	include/click/integers.hh	/^inline signed char net_to_host_order(signed char x) {$/;"	f
net_to_host_order	include/click/integers.hh	/^inline uint64_t net_to_host_order(uint64_t x) {$/;"	f
net_to_host_order	include/click/integers.hh	/^inline unsigned char net_to_host_order(unsigned char x) {$/;"	f
net_to_host_order	include/click/integers.hh	/^inline unsigned long long net_to_host_order(unsigned long long x) {$/;"	f
net_to_host_order	include/click/integers.hh	/^inline unsigned long net_to_host_order(unsigned long x) {$/;"	f
net_to_host_order	include/click/integers.hh	/^inline unsigned net_to_host_order(unsigned x) {$/;"	f
net_to_host_order	include/click/integers.hh	/^inline unsigned short net_to_host_order(unsigned short x) {$/;"	f
netdev	drivers/e1000-4.x/src/e1000.h	/^	struct net_device *netdev;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::net_device
netdev	drivers/e1000-5.x/src/e1000.h	/^	struct net_device *netdev;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::net_device
netdev	drivers/e1000-7.x/src/e1000.h	/^	struct net_device *netdev;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::net_device
netdev_alloc_skb	drivers/e1000-7.x/src/kcompat.h	1064;"	d
netdev_op	elements/linuxmodule/fromhost.cc	80;"	d	file:
netdev_op	elements/linuxmodule/fromhost.cc	82;"	d	file:
netdev_priv	drivers/e1000-7.x/src/kcompat.h	822;"	d
netif	ns/nsclick-test.cc	/^    netif(simclick_node_t *n,int i) { node=n,ifid=i; }$/;"	f	struct:TestClickSimulator::netif
netif	ns/nsclick-test.cc	/^  struct netif {$/;"	s	class:TestClickSimulator	file:
netif_carrier_off	drivers/e1000-4.x/src/kcompat.h	268;"	d
netif_carrier_ok	drivers/e1000-4.x/src/kcompat.h	273;"	d
netif_carrier_on	drivers/e1000-4.x/src/kcompat.h	263;"	d
netif_device_attach	drivers/e1000-4.x/src/kcompat.h	253;"	d
netif_device_detach	drivers/e1000-4.x/src/kcompat.h	258;"	d
netif_msg_init	drivers/e1000-7.x/src/kcompat.h	804;"	d
netif_poll_disable	drivers/e1000-5.x/src/kcompat.h	552;"	d
netif_poll_disable	drivers/e1000-7.x/src/kcompat.h	762;"	d
netif_poll_enable	drivers/e1000-5.x/src/kcompat.h	564;"	d
netif_poll_enable	drivers/e1000-7.x/src/kcompat.h	774;"	d
netif_queue_stopped	drivers/e1000-4.x/src/kcompat.h	249;"	d
netif_receive_skb	drivers/e1000-5.x/src/e1000_main.c	100;"	d	file:
netif_receive_skb	drivers/e1000-7.x/src/e1000_main.c	56;"	d	file:
netif_running	drivers/e1000-4.x/src/kcompat.h	232;"	d
netif_start_queue	drivers/e1000-4.x/src/kcompat.h	236;"	d
netif_stop_queue	drivers/e1000-4.x/src/kcompat.h	240;"	d
netif_wake_queue	drivers/e1000-4.x/src/kcompat.h	244;"	d
netiftolanid_	ns/nsclick-test.cc	/^    map<netif,int> netiftolanid_;$/;"	m	class:TestClickSimulator	file:
netincludedir	Makefile	/^netincludedir = $(includedir)\/clicknet$/;"	m
netlink_close	elements/local/OpenFlow/lib/vconn-netlink.cc	/^netlink_close(struct vconn *vconn) $/;"	f	file:
netlink_open	elements/local/OpenFlow/lib/vconn-netlink.cc	/^netlink_open(const char *name, char *suffix, struct vconn **vconnp)$/;"	f	file:
netlink_recv	elements/local/OpenFlow/lib/vconn-netlink.cc	/^netlink_recv(struct vconn *vconn, struct ofpbuf **bufferp)$/;"	f	file:
netlink_send	elements/local/OpenFlow/lib/vconn-netlink.cc	/^netlink_send(struct vconn *vconn, struct ofpbuf *buffer) $/;"	f	file:
netlink_vconn	elements/local/OpenFlow/lib/vconn-netlink.cc	/^struct netlink_vconn$/;"	s	file:
netlink_vconn_cast	elements/local/OpenFlow/lib/vconn-netlink.cc	/^netlink_vconn_cast(struct vconn *vconn) $/;"	f	file:
netlink_vconn_class	elements/local/OpenFlow/lib/vconn-netlink.cc	/^struct vconn_class netlink_vconn_class = {$/;"	v	typeref:struct:vconn_class
netlink_wait	elements/local/OpenFlow/lib/vconn-netlink.cc	/^netlink_wait(struct vconn *vconn, enum vconn_wait_type wait) $/;"	f	file:
netopen_rate_shape	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct netopen_rate_shape {$/;"	s
network	elements/linuxmodule/touserdevice.cc	/^    uint32_t network;	     \/* data link type *\/$/;"	m	struct:pcap_hdr	file:
network	elements/local/OpenFlow/lib/pcap.cc	/^    uint32_t network;        \/* data link type *\/$/;"	m	struct:pcap_hdr	file:
network_header	include/click/packet.hh	/^Packet::network_header() const$/;"	f	class:Packet
network_header	include/click/packet.hh	/^WritablePacket::network_header() const$/;"	f	class:WritablePacket
network_header_length	include/click/packet.hh	/^Packet::network_header_length() const$/;"	f	class:Packet
network_header_offset	include/click/packet.hh	/^Packet::network_header_offset() const$/;"	f	class:Packet
network_header_size	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^static uint16_t network_header_size;$/;"	v	file:
network_length	elements/analysis/ipsumdumpinfo.hh	/^    uint32_t network_length() const {$/;"	f	struct:IPSummaryDump::PacketDesc
network_length	include/click/packet.hh	/^Packet::network_length() const$/;"	f	class:Packet
new	conf/click-mkclgw.pl	/^sub new {$/;"	s
new	include/click/cxxprotect.h	2;"	d
new	include/click/cxxunprotect.h	2;"	d
new	test/testie	/^sub new ($) {$/;"	s
new	test/testie	/^sub new () {$/;"	s
new	test/testie	/^sub new (;$) {$/;"	s
newWindow	apps/ClickController/ClickController.java	/^    public static ClickController newWindow() {$/;"	m	class:ClickController
new_ack	elements/tcpudp/tcprewriter.hh	/^TCPRewriter::TCPFlow::new_ack(bool direction, tcp_seq_t ackno) const$/;"	f	class:TCPRewriter::TCPFlow
new_build_string	lib/clp.c	/^new_build_string(void)$/;"	f	file:
new_device	elements/linuxmodule/fromhost.cc	/^FromHost::new_device(const char *name)$/;"	f	class:FromHost
new_handler_t	drivers/e1000-7.x/src/kcompat.h	/^typedef irqreturn_t (*new_handler_t)(int, void*);$/;"	t
new_line	tools/lib/landmarkt.cc	/^LandmarkSetT::new_line(unsigned offset, const String &filename, unsigned lineno)$/;"	f	class:LandmarkSetT
new_node	elements/analysis/aggcounter.hh	/^AggregateCounter::new_node()$/;"	f	class:AggregateCounter
new_node	elements/analysis/anonipaddr.hh	/^AnonymizeIPAddr::new_node()$/;"	f	class:AnonymizeIPAddr
new_node_block	elements/analysis/aggcounter.cc	/^AggregateCounter::new_node_block()$/;"	f	class:AggregateCounter
new_node_block	elements/analysis/anonipaddr.cc	/^AnonymizeIPAddr::new_node_block()$/;"	f	class:AnonymizeIPAddr
new_notifier_signal	lib/router.cc	/^Router::new_notifier_signal(const char *name, NotifierSignal &signal)$/;"	f	class:Router
new_port	elements/local/OpenFlow/datapath.cc	/^int Datapath::new_port(struct click_port *port, uint16_t port_no,$/;"	f	class:Datapath
new_pstream_pvconn	elements/local/OpenFlow/lib/vconn-stream.cc	/^new_pstream_pvconn(const char *name, int fd,$/;"	f
new_seq	elements/tcpudp/tcprewriter.hh	/^TCPRewriter::TCPFlow::new_seq(bool direction, tcp_seq_t seqno) const$/;"	f	class:TCPRewriter::TCPFlow
new_ssl_vconn	elements/local/OpenFlow/lib/vconn-ssl.cc	/^new_ssl_vconn(const char *name, int fd, enum session_type type,$/;"	f	file:
new_stream_vconn	elements/local/OpenFlow/lib/vconn-stream.cc	/^new_stream_vconn(const char *name, int fd, int connect_status,$/;"	f
new_tcp_vconn	elements/local/OpenFlow/lib/vconn-tcp.cc	/^new_tcp_vconn(const char *name, int fd, int connect_status,$/;"	f	file:
new_waiter	elements/local/OpenFlow/lib/poll-loop.cc	/^new_waiter(int fd, short int events)$/;"	f	file:
next	apps/clicky/src/permstr.hh	/^	Doodad *next;$/;"	m	struct:PermString::Doodad
next	bsdmodule/clickfs_tree.hh	/^    struct clickfs_dirent *next;$/;"	m	struct:clickfs_dirent	typeref:struct:clickfs_dirent::clickfs_dirent
next	elements/analysis/aggpktcounter.hh	/^	Flow *next() const		{ return _next; }$/;"	f	class:AggregatePacketCounter::Flow
next	elements/analysis/aggregatefilter.hh	/^	Group *next;$/;"	m	struct:AggregateFilter::Group
next	elements/analysis/toipflowdumps.hh	/^	Flow *next() const		{ return _next; }$/;"	f	class:ToIPFlowDumps::Flow
next	elements/bsdmodule/anydevice.hh	/^    AnyDevice *next() const		{ return _next; }$/;"	f	class:AnyDevice
next	elements/ethernet/ip6ndsolicitor.hh	/^    struct NDEntry *next;$/;"	m	struct:IP6NDSolicitor::NDEntry	typeref:struct:IP6NDSolicitor::NDEntry::NDEntry
next	elements/grid/movesim.hh	/^    event_entry *next;$/;"	m	struct:MovementSimulator::event_entry
next	elements/local/OpenFlow/lib/list.hh	/^    struct list *next;     \/* Next list element. *\/$/;"	m	struct:list	typeref:struct:list::list
next	elements/local/OpenFlow/lib/ofpbuf.hh	/^    struct ofpbuf *next;        \/* Next in a list of ofpbufs. *\/$/;"	m	struct:ofpbuf	typeref:struct:ofpbuf::ofpbuf
next	elements/userlevel/ipflowrawsockets.hh	/^	Flow *next() const		{ return _next; }$/;"	f	class:IPFlowRawSockets::Flow
next	include/click/bighashmap_arena.hh	/^	Link *next;$/;"	m	struct:HashMap_Arena::Link
next	include/click/confparse.hh	/^    cp_argtype* next;$/;"	m	struct:cp_argtype
next	include/click/hashallocator.hh	/^	buffer *next;$/;"	m	struct:HashAllocator::buffer
next	include/click/hashallocator.hh	/^	link *next;$/;"	m	struct:HashAllocator::link
next	include/click/hashmap.hh	/^	Elt *next;$/;"	m	struct:HashMap::Elt
next	include/click/lexer.hh	/^	int next;$/;"	m	struct:Lexer::ElementType
next	include/click/list.hh	/^    T *next() {$/;"	f	class:List_member
next	include/click/list.hh	/^    const T *next() const {$/;"	f	class:List_member
next	include/click/master.hh	/^	SignalInfo *next;$/;"	m	struct:Master::SignalInfo
next	include/click/packet.hh	/^	Packet *next;$/;"	m	struct:Packet::AllAnno
next	include/click/packet.hh	/^Packet::next() const$/;"	f	class:Packet
next	include/click/packet.hh	/^Packet::next()$/;"	f	class:Packet
next	include/click/router.hh	/^	notifier_signals_t *next;$/;"	m	struct:Router::notifier_signals_t
next	include/click/string.hh	/^	memo_t *next;$/;"	m	struct:String::memo_t
next	lib/error.cc	/^    Conversion *next;$/;"	m	struct:ErrorHandler::Conversion	file:
next	lib/glue.cc	/^    Chunk *next;$/;"	m	struct:Chunk	file:
next	lib/lexer.cc	/^    ElementState *next;$/;"	m	struct:__anon511::ElementState	file:
next	lib/lexer.cc	/^  TunnelEnd *next() const		{ return _next; }$/;"	f	class:Lexer::TunnelEnd
next	lib/packet.cc	/^    PacketData *next;$/;"	m	struct:__anon510::PacketData	file:
next	linuxmodule/clickfs.cc	/^    int next;$/;"	m	struct:HandlerStringInfo	file:
next	ns/CUT_BinHeap.h	/^      Node* next;          \/\/ used to link all used items $/;"	m	class:CUT_BinHeap::Node
next	ns/CUT_BinHeap.h	/^  void next(Pix& pp) {$/;"	f	class:CUT_BinHeap
next	tools/lib/lexert.cc	/^    ElementState *next;$/;"	m	struct:__anon534::ElementState	file:
next	tools/lib/routert.hh	/^	ConnectionSet *next;$/;"	m	struct:RouterT::ConnectionSet
next2pow	elements/ip/siphmapper.hh	/^  int next2pow (int i)$/;"	f	class:jvtree_t
next_argument	lib/clp.c	/^next_argument(Clp_Parser *clp, int want_argument)$/;"	f	file:
next_chunk	elements/ip/ipreassembler.cc	/^IPReassembler::next_chunk(WritablePacket *q, ChunkLink *chunk)$/;"	f	class:IPReassembler
next_flow_code	lib/element.cc	/^next_flow_code(const char*& p, int port, Bitvector& code, ErrorHandler* errh, const Element* e)$/;"	f	file:
next_flow_code	tools/lib/processingt.cc	/^next_flow_code(const char *&p, const char *last,$/;"	f	file:
next_frag	elements/wifi/wifidefrag.hh	/^    uint16_t next_frag;$/;"	m	struct:WifiDefrag::PacketInfo
next_from	tools/lib/routert.hh	/^	ConnectionX *next_from() const {$/;"	f	struct:RouterT::ConnectionX
next_handler_string	linuxmodule/clickfs.cc	/^next_handler_string(const Handler *h)$/;"	f	file:
next_hop	elements/grid/dsrroutetable.cc	/^DSRRouteTable::next_hop(Packet *p)$/;"	f	class:DSRRouteTable
next_hop_eth	elements/grid/gridgenericrt.hh	/^    class EtherAddress   next_hop_eth; \/\/ hardware address of next hop$/;"	m	struct:GridGenericRouteTable::RouteEntry	typeref:class:GridGenericRouteTable::RouteEntry::EtherAddress
next_hop_eth	elements/grid/gridroutetable.hh	/^    EtherAddress next_hop_eth; \/\/ hardware address of next hop$/;"	m	class:GridRouteTable::RTEntry
next_hop_interface	elements/grid/gridgenericrt.hh	/^    unsigned char        next_hop_interface; \/\/ interface of next hop$/;"	m	struct:GridGenericRouteTable::RouteEntry
next_hop_ip	elements/grid/grid.hh	/^    uint32_t next_hop_ip;$/;"	m	struct:grid_nbr_entry
next_hop_ip	elements/grid/gridgenericrt.hh	/^    class IPAddress      next_hop_ip;  \/\/ IP address of next hop$/;"	m	struct:GridGenericRouteTable::RouteEntry	typeref:class:GridGenericRouteTable::RouteEntry::IPAddress
next_hop_ip	elements/grid/gridroutetable.hh	/^    IPAddress next_hop_ip; \/\/ IP address of next hop for this destination$/;"	m	class:GridRouteTable::RTEntry
next_i	elements/linuxmodule/cpuqueue.hh	/^  int next_i(int i) const { return (i!=_capacity ? i+1 : 0); }$/;"	f	class:CPUQueue
next_i	elements/tcpudp/snooptcp.hh	/^  int next_i(int i) const	{ return (i+1) % S_CACHE_SIZE; }$/;"	f	struct:SnoopTCP::PCB
next_i	include/click/dequeue.hh	/^  int next_i(int i) const               { return (i != _cap - 1 ? i + 1 : 0); }$/;"	f	class:DEQueue
next_i	include/click/standard/storage.hh	/^    index_type next_i(index_type i) const {$/;"	f	class:Storage
next_i	linuxmodule/skbmgr.cc	/^  static int next_i(int i)	{ return (i == SIZE - 1 ? 0 : i + 1); }$/;"	f	class:RecycledSkbBucket	file:
next_level	elements/ip/ipratemon.hh	/^    Stats *next_level;$/;"	m	struct:IPRateMonitor::Counter
next_lexeme	include/click/lexer.hh	/^    Lexeme next_lexeme() {$/;"	f	class:Lexer
next_lexeme	lib/lexer.cc	/^Lexer::FileState::next_lexeme(Lexer *lexer)$/;"	f	class:Lexer::FileState
next_lexeme	tools/lib/lexert.cc	/^LexerT::FileState::next_lexeme(LexerT *lexer)$/;"	f	class:LexerT::FileState
next_lexeme	tools/lib/lexert.hh	/^    Lexeme next_lexeme() {$/;"	f	class:LexerT
next_match	tools/click-xform/click-xform.cc	/^Matcher::next_match()$/;"	f	class:Matcher
next_option	elements/grid/dsr.hh	/^  char *next_option() const { return ((char *)this + length()); }$/;"	f	struct:click_dsr_rerr
next_option	elements/grid/dsr.hh	/^  char *next_option() const { return ((char *)this + length()); }$/;"	f	struct:click_dsr_rrep
next_option	elements/grid/dsr.hh	/^  char *next_option() const { return ((char *)this + length()); }$/;"	f	struct:click_dsr_rreq
next_option	elements/grid/dsr.hh	/^  char *next_option() const { return ((char *)this + length()); }$/;"	f	struct:click_dsr_source
next_packet	elements/analysis/fromnetflowsumdump.cc	/^FromNetFlowSummaryDump::next_packet()$/;"	f	class:FromNetFlowSummaryDump
next_phase	tools/click-devirtualize/signature.cc	/^Signatures::next_phase(int phase, int eid, Vector<int> &new_sigid,$/;"	f	class:Signatures
next_pos	tools/lib/lexert.hh	/^    const char *next_pos() const {$/;"	f	class:LexerT
next_processing_code	lib/element.cc	/^Element::next_processing_code(const char*& p, ErrorHandler* errh)$/;"	f	class:Element
next_seq	elements/grid/incseqno.cc	/^IncrementSeqNo::next_seq(Element *e, void *)$/;"	f	class:IncrementSeqNo
next_seq	elements/local/OpenFlow/lib/netlink.cc	/^static uint32_t next_seq;$/;"	v	file:
next_serial	elements/local/OpenFlow/lib/table-linear.cc	/^    unsigned long int next_serial;$/;"	m	struct:sw_table_linear	file:
next_split	apps/clicky/src/dwidget.hh	/^    delt *next_split(delt *base) const {$/;"	f	class:clicky::delt
next_sr_hop	elements/grid/dsrroutetable.cc	/^DSRRouteTable::next_sr_hop(Packet *p_in, unsigned int offset)$/;"	f	class:DSRRouteTable
next_subgraph_isomorphism	tools/click-xform/adjacency.cc	/^AdjacencyMatrix::next_subgraph_isomorphism(const AdjacencyMatrix *input,$/;"	f	class:AdjacencyMatrix
next_timer	include/click/timerset.hh	/^TimerSet::next_timer()$/;"	f	class:TimerSet
next_timer_delay	include/click/master.hh	/^TimerSet::next_timer_delay(bool more_tasks, Timestamp &t) const$/;"	f	class:TimerSet
next_timer_expiry	include/click/timerset.hh	/^    Timestamp next_timer_expiry() const		{ return _timer_expiry; }$/;"	f	class:TimerSet
next_timer_expiry_adjusted	include/click/timerset.hh	/^TimerSet::next_timer_expiry_adjusted() const$/;"	f	class:TimerSet
next_to	tools/lib/routert.hh	/^	ConnectionX *next_to() const {$/;"	f	struct:RouterT::ConnectionX
next_to_clean	drivers/e1000-4.x/src/e1000.h	/^	unsigned int next_to_clean;$/;"	m	struct:e1000_desc_ring
next_to_clean	drivers/e1000-5.x/src/e1000.h	/^	unsigned int next_to_clean;$/;"	m	struct:e1000_desc_ring
next_to_clean	drivers/e1000-7.x/src/e1000.h	/^	unsigned int next_to_clean;$/;"	m	struct:e1000_rx_ring
next_to_clean	drivers/e1000-7.x/src/e1000.h	/^	unsigned int next_to_clean;$/;"	m	struct:e1000_tx_ring
next_to_use	drivers/e1000-4.x/src/e1000.h	/^	unsigned int next_to_use;$/;"	m	struct:e1000_desc_ring
next_to_use	drivers/e1000-5.x/src/e1000.h	/^	unsigned int next_to_use;$/;"	m	struct:e1000_desc_ring
next_to_use	drivers/e1000-7.x/src/e1000.h	/^	unsigned int next_to_use;$/;"	m	struct:e1000_rx_ring
next_to_use	drivers/e1000-7.x/src/e1000.h	/^	unsigned int next_to_use;$/;"	m	struct:e1000_tx_ring
next_to_watch	drivers/e1000-5.x/src/e1000.h	/^	uint16_t next_to_watch;$/;"	m	struct:e1000_buffer
next_to_watch	drivers/e1000-7.x/src/e1000.h	/^	uint16_t next_to_watch;$/;"	m	struct:e1000_buffer
next_xindex	include/click/ino.hh	/^ClickIno::next_xindex(int elementno) const$/;"	f	class:ClickIno
nextevent	ns/nsclick-test.cc	/^Simulator::nextevent() {$/;"	f	class:Simulator
nformals	lib/lexer.cc	/^  int nformals() const			{ return _nformals; }$/;"	f	class:Lexer::Compound
nformals	tools/lib/routert.hh	/^    int nformals() const		{ return _formals.size(); }$/;"	f	class:RouterT
nfunctions	tools/click-devirtualize/cxxclass.hh	/^  int nfunctions() const		{ return _functions.size(); }$/;"	f	class:CxxClass
ng_ether_input_orphan_p	bsdmodule/module.cc	/^extern "C" void (*ng_ether_input_orphan_p)(struct ifnet *, struct mbuf **);$/;"	v
ng_ether_input_p	bsdmodule/module.cc	/^extern "C" void (*ng_ether_input_p)(struct ifnet *, struct mbuf **);$/;"	v
ng_ether_link_state_p	bsdmodule/module.cc	/^extern "C" void (*ng_ether_link_state_p)(struct ifnet *, int);$/;"	v
ng_ether_output_p	bsdmodule/module.cc	/^extern "C" void (*ng_ether_output_p)(struct ifnet *, struct mbuf **);$/;"	v
nglobalh	lib/router.cc	/^static int nglobalh;$/;"	v	file:
ngports	include/click/router.hh	/^    inline int ngports(bool isout) const {$/;"	f	class:Router
nh	include/click/packet.hh	/^	unsigned char *nh;$/;"	m	struct:Packet::AllAnno
ni	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	struct NexthopInfo ni;$/;"	m	struct:SchedInfo	typeref:struct:SchedInfo::NexthopInfo
nicira_header	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^struct nicira_header {$/;"	s
nicira_type	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^enum nicira_type {$/;"	g
ninput_pidx	tools/lib/processingt.hh	/^    int ninput_pidx() const {$/;"	f	class:ProcessingT
ninputs	apps/clicky/src/dwidget.hh	/^    int ninputs() const {$/;"	f	class:clicky::delt
ninputs	include/click/element.hh	/^Element::ninputs() const$/;"	f	class:Element
ninputs	tools/click2xml/xml2click.hh	/^    int ninputs;$/;"	m	struct:CxElement
ninputs	tools/lib/elementt.hh	/^    int ninputs() const			{ return _ninputs; }$/;"	f	struct:ElementT
ninputs	tools/lib/routert.hh	/^    int ninputs() const			{ return _ninputs; }$/;"	f	class:RouterT
ninsn	elements/standard/classification.hh	/^    int ninsn() const {$/;"	f	class:Classification::Wordwise::DominatorOptimizer
ninsn	elements/standard/classification.hh	/^    int ninsn() const {$/;"	f	class:Classification::Wordwise::Program
nitems	lib/clp.c	/^    int nitems;$/;"	m	struct:Clp_StringList	file:
nitems_invalid_report	lib/clp.c	/^    int nitems_invalid_report;$/;"	m	struct:Clp_StringList	file:
nl2c	elements/ipsec/sha1_impl.cc	107;"	d	file:
nl2c	elements/ipsec/sha1_impl.cc	108;"	d	file:
nl_attr_get	elements/local/OpenFlow/lib/netlink.cc	/^nl_attr_get(const struct nlattr *nla) $/;"	f
nl_attr_get_flag	elements/local/OpenFlow/lib/netlink.cc	/^nl_attr_get_flag(const struct nlattr *nla) $/;"	f
nl_attr_get_size	elements/local/OpenFlow/lib/netlink.cc	/^nl_attr_get_size(const struct nlattr *nla) $/;"	f
nl_attr_get_string	elements/local/OpenFlow/lib/netlink.cc	/^nl_attr_get_string(const struct nlattr *nla) $/;"	f
nl_attr_get_u16	elements/local/OpenFlow/lib/netlink.cc	/^nl_attr_get_u16(const struct nlattr *nla) $/;"	f
nl_attr_get_u32	elements/local/OpenFlow/lib/netlink.cc	/^nl_attr_get_u32(const struct nlattr *nla) $/;"	f
nl_attr_get_u64	elements/local/OpenFlow/lib/netlink.cc	/^nl_attr_get_u64(const struct nlattr *nla) $/;"	f
nl_attr_get_u8	elements/local/OpenFlow/lib/netlink.cc	/^nl_attr_get_u8(const struct nlattr *nla) $/;"	f
nl_attr_get_unspec	elements/local/OpenFlow/lib/netlink.cc	/^nl_attr_get_unspec(const struct nlattr *nla, size_t size) $/;"	f
nl_attr_type	elements/local/OpenFlow/lib/netlink.hh	/^enum nl_attr_type$/;"	g
nl_family	elements/local/OpenFlow/lib/netlink-protocol.hh	/^    sa_family_t nl_family;$/;"	m	struct:sockaddr_nl
nl_groups	elements/local/OpenFlow/lib/netlink-protocol.hh	/^    uint32_t nl_groups;$/;"	m	struct:sockaddr_nl
nl_lookup_genl_family	elements/local/OpenFlow/lib/netlink.cc	/^nl_lookup_genl_family(const char *name, int *number) $/;"	f
nl_msg_genlmsghdr	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_genlmsghdr(const struct ofpbuf *msg) $/;"	f
nl_msg_nlmsgerr	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_nlmsgerr(const struct ofpbuf *msg, int *errorp) $/;"	f
nl_msg_nlmsghdr	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_nlmsghdr(const struct ofpbuf *msg) $/;"	f
nl_msg_put	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_put(struct ofpbuf *msg, const void *data, size_t size) $/;"	f
nl_msg_put_flag	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_put_flag(struct ofpbuf *msg, uint16_t type) $/;"	f
nl_msg_put_genlmsghdr	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_put_genlmsghdr(struct ofpbuf *msg, struct nl_sock *sock,$/;"	f
nl_msg_put_nested	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_put_nested(struct ofpbuf *msg,$/;"	f
nl_msg_put_nlmsghdr	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_put_nlmsghdr(struct ofpbuf *msg, struct nl_sock *sock,$/;"	f
nl_msg_put_string	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_put_string(struct ofpbuf *msg, uint16_t type, const char *value)$/;"	f
nl_msg_put_u16	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_put_u16(struct ofpbuf *msg, uint16_t type, uint16_t value)$/;"	f
nl_msg_put_u32	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_put_u32(struct ofpbuf *msg, uint16_t type, uint32_t value)$/;"	f
nl_msg_put_u64	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_put_u64(struct ofpbuf *msg, uint16_t type, uint64_t value)$/;"	f
nl_msg_put_u8	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_put_u8(struct ofpbuf *msg, uint16_t type, uint8_t value) $/;"	f
nl_msg_put_uninit	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_put_uninit(struct ofpbuf *msg, size_t size) $/;"	f
nl_msg_put_unspec	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_put_unspec(struct ofpbuf *msg, uint16_t type,$/;"	f
nl_msg_put_unspec_uninit	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_put_unspec_uninit(struct ofpbuf *msg, uint16_t type, size_t size) $/;"	f
nl_msg_reserve	elements/local/OpenFlow/lib/netlink.cc	/^nl_msg_reserve(struct ofpbuf *msg, size_t size) $/;"	f
nl_pad	elements/local/OpenFlow/lib/netlink-protocol.hh	/^    unsigned short int nl_pad;$/;"	m	struct:sockaddr_nl
nl_pid	elements/local/OpenFlow/lib/netlink-protocol.hh	/^    uint32_t nl_pid;$/;"	m	struct:sockaddr_nl
nl_policy	elements/local/OpenFlow/lib/netlink.hh	/^struct nl_policy$/;"	s
nl_policy_parse	elements/local/OpenFlow/lib/netlink.cc	/^nl_policy_parse(const struct ofpbuf *msg, size_t nla_offset,$/;"	f
nl_sock	elements/local/OpenFlow/lib/netlink.cc	/^struct nl_sock$/;"	s	file:
nl_sock_create	elements/local/OpenFlow/lib/netlink.cc	/^nl_sock_create(int protocol, int multicast_group,$/;"	f
nl_sock_destroy	elements/local/OpenFlow/lib/netlink.cc	/^nl_sock_destroy(struct nl_sock *sock) $/;"	f
nl_sock_recv	elements/local/OpenFlow/lib/netlink.cc	/^nl_sock_recv(struct nl_sock *sock, struct ofpbuf **bufp, bool wait) $/;"	f
nl_sock_send	elements/local/OpenFlow/lib/netlink.cc	/^nl_sock_send(struct nl_sock *sock, const struct ofpbuf *msg, bool wait) $/;"	f
nl_sock_sendv	elements/local/OpenFlow/lib/netlink.cc	/^nl_sock_sendv(struct nl_sock *sock, const struct iovec iov[], size_t n_iov,$/;"	f
nl_sock_transact	elements/local/OpenFlow/lib/netlink.cc	/^nl_sock_transact(struct nl_sock *sock,$/;"	f
nl_sock_wait	elements/local/OpenFlow/lib/netlink.cc	/^nl_sock_wait(const struct nl_sock *sock, short int events)$/;"	f
nla_len	elements/local/OpenFlow/lib/netlink-protocol.hh	/^    uint16_t nla_len;$/;"	m	struct:nlattr
nla_type	elements/local/OpenFlow/lib/netlink-protocol.hh	/^    uint16_t nla_type;$/;"	m	struct:nlattr
nlattr	elements/local/OpenFlow/lib/netlink-protocol.hh	/^struct nlattr {$/;"	s
nlimb	lib/args.cc	/^    enum { nlimb = (sizeof(V) \/ sizeof(L)) + 1 };$/;"	e	enum:__anon505::fraction_accum::__anon506	file:
nlink	lib/ino.cc	/^ClickIno::nlink(ino_t ino)$/;"	f	class:ClickIno
nlmsg_flags	elements/local/OpenFlow/lib/netlink-protocol.hh	/^    uint16_t nlmsg_flags;$/;"	m	struct:nlmsghdr
nlmsg_len	elements/local/OpenFlow/lib/netlink-protocol.hh	/^    uint32_t nlmsg_len;$/;"	m	struct:nlmsghdr
nlmsg_pid	elements/local/OpenFlow/lib/netlink-protocol.hh	/^    uint32_t nlmsg_pid;$/;"	m	struct:nlmsghdr
nlmsg_seq	elements/local/OpenFlow/lib/netlink-protocol.hh	/^    uint32_t nlmsg_seq;$/;"	m	struct:nlmsghdr
nlmsg_to_string	elements/local/OpenFlow/lib/netlink.cc	/^nlmsg_to_string(const struct ofpbuf *buffer)$/;"	f	file:
nlmsg_type	elements/local/OpenFlow/lib/netlink-protocol.hh	/^    uint16_t nlmsg_type;$/;"	m	struct:nlmsghdr
nlmsgerr	elements/local/OpenFlow/lib/netlink-protocol.hh	/^struct nlmsgerr$/;"	s
nlmsghdr	elements/local/OpenFlow/lib/netlink-protocol.hh	/^struct nlmsghdr {$/;"	s
nlmsghdr_to_string	elements/local/OpenFlow/lib/netlink.cc	/^nlmsghdr_to_string(const struct nlmsghdr *h, struct ds *ds)$/;"	f	file:
nnodes	elements/grid/radiosim.hh	/^  int nnodes() { return(_nodes.size()); }$/;"	f	class:RadioSim
no	elements/standard/classification.hh	/^    int32_t &no()			{ return j[0]; }$/;"	f	struct:Classification::Wordwise::Insn
no	elements/standard/classification.hh	/^    int32_t no() const			{ return j[0]; }$/;"	f	struct:Classification::Wordwise::Insn
no_ack	elements/wifi/athdesc.h	/^	u_int32_t	no_ack:1;$/;"	m	struct:ar5212_desc
no_element	apps/csclient/csclient.hh	/^    no_element,         \/* specified element does not exist *\/$/;"	e	enum:ControlSocketClient::err_t
no_err	apps/csclient/csclient.hh	/^    no_err = 0,$/;"	e	enum:ControlSocketClient::err_t
no_handler	apps/csclient/csclient.hh	/^    no_handler,         \/* specified handler does not exist *\/$/;"	e	enum:ControlSocketClient::err_t
no_hvalue_string	apps/clicky/src/hvalues.cc	/^const String handler_value::no_hvalue_string = String::make_stable("???", 3);$/;"	m	class:clicky::handler_value	file:
no_hvalue_string	apps/clicky/src/hvalues.hh	/^    static const String no_hvalue_string;$/;"	m	class:clicky::handler_value
no_loss_count_threshold	elements/local/FlowNet/common/FlowNetGod.hh	/^	int no_loss_count_threshold;$/;"	m	struct:paramset_mpeg2_shapertable
noclass	lib/clp.c	/^    int noclass;$/;"	m	struct:Clp_Internal	file:
nocongest_detected	elements/local/FlowNet/common/CongestionDetection.hh	/^	void (*nocongest_detected)(struct CongestionNotification*);$/;"	m	class:VcCongestionDetection
nocongestion_action	elements/local/FlowNet/common/BWShape.cc	/^void VcBWShape::nocongestion_action(struct FlowID *, const Packet *)$/;"	f	class:VcBWShape
nocongestion_action	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.cc	/^void VcBWShapeByCD::nocongestion_action(struct FlowID *fid, const Packet *p)$/;"	f	class:VcBWShapeByCD
nocongestion_action	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.cc	/^void VcBWShapeByCD_CFB::nocongestion_action(struct FlowID* fid, const Packet *p)$/;"	f	class:VcBWShapeByCD_CFB
nocongestion_action	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeSimple.cc	/^void VcBWShapeSimple::nocongestion_action(struct FlowID *fid, const Packet *p)$/;"	f	class:VcBWShapeSimple
node	elements/local/OpenFlow/RConn.hh	/^        struct list node;$/;"	m	struct:rconn_remote	typeref:struct:rconn_remote::list
node	elements/local/OpenFlow/datapath.hh	/^	struct list node; \/* Element in datapath.ports. *\/$/;"	m	struct:click_port	typeref:struct:click_port::list
node	elements/local/OpenFlow/datapath.hh	/^	struct list node; \/* element in port.queues *\/$/;"	m	struct:sw_queue	typeref:struct:sw_queue::list
node	elements/local/OpenFlow/lib/poll-loop.cc	/^    struct list node;           \/* Element in global waiters list. *\/$/;"	m	struct:poll_waiter	typeref:struct:poll_waiter::list	file:
node	elements/local/OpenFlow/lib/switch-flow.hh	/^    struct list node;$/;"	m	struct:sw_flow	typeref:struct:sw_flow::list
node	ns/nsclick-test.cc	/^    simclick_node_t *node;$/;"	m	struct:TestClickSimulator::netif	file:
node_count	ns/CUT_BinHeap.h	/^  int node_count;  \/\/ number of Nodes$/;"	m	class:CUT_BinHeap
node_event	elements/grid/movesim.hh	/^    node_event() : loc_el(0) { }$/;"	f	struct:MovementSimulator::node_event
node_event	elements/grid/movesim.hh	/^    node_event(GridLocationInfo *el, double vlat, double vlon) :$/;"	f	struct:MovementSimulator::node_event
node_event	elements/grid/movesim.hh	/^  struct node_event {$/;"	s	class:MovementSimulator
node_list	ns/CUT_BinHeap.h	/^  Node* node_list; \/\/ List of all Nodes (for iteration)$/;"	m	class:CUT_BinHeap
nodes	elements/grid/movesim.hh	/^    Vector<node_event> nodes;$/;"	m	struct:MovementSimulator::event_entry
nodist_lib_libopenflow_a_SOURCES	elements/local/OpenFlow/lib/automake.mk	/^nodist_lib_libopenflow_a_SOURCES = lib\/dhparams.c$/;"	m
noexport	tools/lib/etraits.hh	/^    String noexport;$/;"	m	struct:ElementTraits
noffset	tools/lib/landmarkt.hh	/^    enum { noffset = (unsigned) -1 };$/;"	e	enum:LandmarkT::__anon537
noise	include/clicknet/wifi.h	/^  p80211item_uint32_t noise;$/;"	m	struct:__anon498
nonce	elements/grid/grid.hh	/^    uint32_t nonce;$/;"	m	struct:grid_route_probe
nonce	elements/grid/grid.hh	/^    uint32_t nonce;$/;"	m	struct:grid_route_reply
nonclasses	elements/test/bhmtest.cc	/^static const char * const nonclasses[] = {$/;"	v	file:
nonclasses	elements/test/hashtabletest.cc	/^static const char * const nonclasses[] = {$/;"	v	file:
none_extract	elements/analysis/ipsumdumpinfo.cc	/^static bool none_extract(PacketDesc &, const FieldWriter *)$/;"	f	namespace:IPSummaryDump
nonunique_push	include/click/packet.hh	/^Packet::nonunique_push(uint32_t len)$/;"	f	class:Packet
nonunique_put	include/click/packet.hh	/^Packet::nonunique_put(uint32_t len)$/;"	f	class:Packet
nonzero_intersection	lib/bitvector.cc	/^Bitvector::nonzero_intersection(const Bitvector &o) const$/;"	f	class:Bitvector
nopt	lib/clp.c	/^    int nopt;$/;"	m	struct:Clp_Internal	file:
normalize	apps/clicky/src/rectangle.hh	/^    rectangle normalize() const {$/;"	f	struct:rectangle
normalize	elements/ethernet/arpresponder.cc	/^ARPResponder::normalize(Vector<Entry> &v, bool warn, ErrorHandler *errh)$/;"	f	class:ARPResponder
not_implies	elements/standard/classification.cc	/^Insn::not_implies(const Insn &x, unsigned known_length) const$/;"	f	class:Classification::Wordwise::Insn
not_implies_not	elements/standard/classification.cc	/^Insn::not_implies_not(const Insn &x, unsigned known_length) const$/;"	f	class:Classification::Wordwise::Insn
notifier_signal_name	lib/router.cc	/^Router::notifier_signal_name(const atomic_uint32_t *signal) const$/;"	f	class:Router
notifier_signals_t	include/click/router.hh	/^	notifier_signals_t(const String &n, notifier_signals_t *nx)$/;"	f	struct:Router::notifier_signals_t
notifier_signals_t	include/click/router.hh	/^    struct notifier_signals_t {$/;"	s	class:Router
notify	apps/clicky/src/ddecor.cc	/^void dactivity_decor::notify(crouter *cr, delt *e, handler_value *hv)$/;"	f	class:clicky::dactivity_decor
notify	apps/clicky/src/ddecor.cc	/^void ddecor::notify(crouter *, delt *, handler_value *)$/;"	f	class:clicky::ddecor
notify	apps/clicky/src/ddecor.cc	/^void dfullness_decor::notify(crouter *cr, delt *e, handler_value *hv)$/;"	f	class:clicky::dfullness_decor
notify	drivers/e1000-4.x/src/base_comm.h	/^    void *notify;$/;"	m	struct:_IANS_BD_ANS_SET_CB
notify	elements/analysis/aggregatenotifier.hh	/^AggregateNotifier::notify(uint32_t agg, AggregateListener::AggregateEvent e, const Packet *p) const$/;"	f	class:AggregateNotifier
notify_active_port_stats	apps/clicky/src/wdiagram.cc	/^void wdiagram::notify_active_port_stats(String value)$/;"	f	class:clicky::wdiagram
notify_active_ports	apps/clicky/src/wdiagram.cc	/^void wdiagram::notify_active_ports(String value)$/;"	f	class:clicky::wdiagram
notify_class_declaration	tools/click-pretty/click-pretty.cc	/^    void notify_class_declaration(ElementClassT *ec, bool anonymous, const char *decl_pos1, const char *name_pos1, const char *) {$/;"	f	class:PrettyLexerTInfo
notify_class_declaration	tools/lib/lexertinfo.cc	/^LexerTInfo::notify_class_declaration(ElementClassT *, bool, const char *, const char *, const char *)$/;"	f	class:LexerTInfo
notify_class_extension	tools/click-pretty/click-pretty.cc	/^    void notify_class_extension(ElementClassT *ec, const char *pos1, const char *pos2) {$/;"	f	class:PrettyLexerTInfo
notify_class_extension	tools/lib/lexertinfo.cc	/^LexerTInfo::notify_class_extension(ElementClassT *, const char *, const char *)$/;"	f	class:LexerTInfo
notify_class_reference	tools/click-pretty/click-pretty.cc	/^    void notify_class_reference(ElementClassT *ec, const char *pos1, const char *pos2) {$/;"	f	class:PrettyLexerTInfo
notify_class_reference	tools/lib/lexertinfo.cc	/^LexerTInfo::notify_class_reference(ElementClassT *, const char *, const char *)$/;"	f	class:LexerTInfo
notify_comment	apps/clicky/src/wmain.cc	/^    void notify_comment(const char *pos1, const char *pos2) {$/;"	f	class:clicky::ClickyLexerTInfo
notify_comment	tools/click-pretty/click-pretty.cc	/^    void notify_comment(const char *pos1, const char *pos2) {$/;"	f	class:PrettyLexerTInfo
notify_comment	tools/lib/lexertinfo.cc	/^LexerTInfo::notify_comment(const char *, const char *)$/;"	f	class:LexerTInfo
notify_config_string	tools/click-pretty/click-pretty.cc	/^    void notify_config_string(const char *pos1, const char *pos2) {$/;"	f	class:PrettyLexerTInfo
notify_config_string	tools/lib/lexertinfo.cc	/^LexerTInfo::notify_config_string(const char *, const char *)$/;"	f	class:LexerTInfo
notify_delt	apps/clicky/src/hvalues.hh	/^    bool notify_delt() const {$/;"	f	class:clicky::handler_value
notify_delt	apps/clicky/src/hvalues.hh	/^    bool notify_delt(bool changed) const {$/;"	f	class:clicky::handler_value
notify_element_declaration	tools/click-pretty/click-pretty.cc	/^    void notify_element_declaration(ElementT *e, const char *pos1, const char *pos2, const char *decl_pos2) {$/;"	f	class:PrettyLexerTInfo
notify_element_declaration	tools/lib/lexertinfo.cc	/^LexerTInfo::notify_element_declaration(ElementT *, const char *, const char *, const char *)$/;"	f	class:LexerTInfo
notify_element_reference	tools/click-pretty/click-pretty.cc	/^    void notify_element_reference(ElementT *e, const char *pos1, const char *pos2) {$/;"	f	class:PrettyLexerTInfo
notify_element_reference	tools/lib/lexertinfo.cc	/^LexerTInfo::notify_element_reference(ElementT *, const char *, const char *)$/;"	f	class:LexerTInfo
notify_error	apps/clicky/src/wmain.cc	/^    void notify_error(const String &, const char *pos1, const char *pos2) {$/;"	f	class:clicky::ClickyLexerTInfo
notify_error	tools/click-pretty/click-pretty.cc	/^    void notify_error(const String &what, const char *pos1, const char *pos2) {$/;"	f	class:PrettyLexerTInfo
notify_error	tools/lib/lexertinfo.cc	/^LexerTInfo::notify_error(const String &, const char *, const char *)$/;"	f	class:LexerTInfo
notify_keyword	apps/clicky/src/wmain.cc	/^    void notify_keyword(const String &, const char *pos1, const char *pos2) {$/;"	f	class:clicky::ClickyLexerTInfo
notify_keyword	tools/click-pretty/click-pretty.cc	/^    void notify_keyword(const String &, const char *pos1, const char *pos2) {$/;"	f	class:PrettyLexerTInfo
notify_keyword	tools/lib/lexertinfo.cc	/^LexerTInfo::notify_keyword(const String &, const char *, const char *)$/;"	f	class:LexerTInfo
notify_line_directive	tools/lib/lexertinfo.cc	/^LexerTInfo::notify_line_directive(const char *, const char *)$/;"	f	class:LexerTInfo
notify_list	apps/clicky/src/ddecor.hh	/^    static void notify_list(ddecor *dd, crouter *cr, delt *e, handler_value *hv) {$/;"	f	class:clicky::ddecor
notify_nports	lib/element.cc	/^Element::notify_nports(int ninputs, int noutputs, ErrorHandler *errh)$/;"	f	class:Element
notify_nports_pair	lib/element.cc	/^notify_nports_pair(const char *&s, const char *ends, int &lo, int &hi)$/;"	f	file:
notify_nports_pair	tools/lib/processingt.cc	/^notify_nports_pair(const char *&s, const char *ends, int &lo, int &hi)$/;"	f	file:
notify_read	apps/clicky/src/dwidget.cc	/^void delt::notify_read(wdiagram *d, handler_value *hv)$/;"	f	class:clicky::delt
notify_read	apps/clicky/src/wdiagram.cc	/^void wdiagram::notify_read(handler_value *hv)$/;"	f	class:clicky::wdiagram
notify_read	apps/clicky/src/whandler.cc	/^void whandler::notify_read(handler_value *hv)$/;"	f	class:clicky::whandler
notify_rewriter	elements/ip/iprewriterbase.cc	/^IPMapper::notify_rewriter(IPRewriterBase *, ErrorHandler *)$/;"	f	class:IPMapper
notify_rewriter	elements/ip/rripmapper.cc	/^RoundRobinIPMapper::notify_rewriter(IPRewriterBase *rw, ErrorHandler *errh)$/;"	f	class:RoundRobinIPMapper
notify_rewriter	elements/ip/siphmapper.cc	/^SourceIPHashMapper::notify_rewriter(IPRewriterBase *rw, ErrorHandler *errh)$/;"	f	class:SourceIPHashMapper
notify_route_cbs	elements/grid/gridroutecb.hh	/^  void notify_route_cbs(Packet *p, unsigned int dest_ip, GridRouteActionCallback::Action a,$/;"	f	class:GridRouteActor
notify_whandlers	apps/clicky/src/hvalues.hh	/^    bool notify_whandlers() const {$/;"	f	class:clicky::handler_value
notify_write	apps/clicky/src/whandler.cc	/^void whandler::notify_write(const String &hname, const String &, int status)$/;"	f	class:clicky::whandler
noutput_pidx	tools/lib/processingt.hh	/^    int noutput_pidx() const {$/;"	f	class:ProcessingT
noutputs	apps/clicky/src/dwidget.hh	/^    int noutputs() const {$/;"	f	class:clicky::delt
noutputs	include/click/element.hh	/^Element::noutputs() const$/;"	f	class:Element
noutputs	tools/click-fastclassifier/click-fastclassifier.hh	/^    int noutputs;$/;"	m	struct:Classifier_Program
noutputs	tools/click2xml/xml2click.hh	/^    int noutputs;$/;"	m	struct:CxElement
noutputs	tools/lib/elementt.hh	/^    int noutputs() const		{ return _noutputs; }$/;"	f	struct:ElementT
noutputs	tools/lib/routert.hh	/^    int noutputs() const		{ return _noutputs; }$/;"	f	class:RouterT
now	elements/grid/gridlocationinfo.cc	/^GridLocationInfo::now()$/;"	f	class:GridLocationInfo
now	elements/local/OpenFlow/datapath.cc	/^	uint64_t now;                  \/* Current time in milliseconds *\/$/;"	m	struct:flow_stats_state	file:
now	elements/local/OpenFlow/lib/timeval.cc	/^static struct timeval now;$/;"	v	typeref:struct:timeval	file:
now	include/click/timestamp.hh	/^Timestamp::now()$/;"	f	class:Timestamp
now_real_time	include/click/timestamp.hh	/^Timestamp::now_real_time()$/;"	f	class:Timestamp
npackets	elements/analysis/toipflowdumps.hh	/^	uint32_t npackets() const	{ return _packet_count; }$/;"	f	class:ToIPFlowDumps::Flow
npackets	include/click/element.hh	/^	unsigned npackets() const	{ return _packets; }$/;"	f	class:Element::Port
nparents	tools/click-devirtualize/cxxclass.hh	/^  int nparents() const			{ return _parents.size(); }$/;"	f	class:CxxClass
npidx	tools/lib/processingt.hh	/^    int npidx(bool isoutput) const {$/;"	f	class:ProcessingT
nports	include/click/element.hh	/^Element::nports(bool isoutput) const$/;"	f	class:Element
nports	tools/lib/elementt.hh	/^    int nports(bool isoutput) const	{ return isoutput ? _noutputs : _ninputs; }$/;"	f	struct:ElementT
npositional	lib/confparse.cc	/^  int npositional;$/;"	m	struct:__anon517::CpVaHelper	file:
nprovisions	lib/driver.cc	/^static int nprovisions;$/;"	v	file:
nr	drivers/e1000-4.x/src/e1000_param.c	/^			int nr;$/;"	m	struct:e1000_option::__anon67::__anon69	file:
nr	drivers/e1000-5.x/src/e1000_param.c	/^			int nr;$/;"	m	struct:e1000_option::__anon164::__anon166	file:
nr	drivers/e1000-7.x/src/e1000_param.c	/^			int nr;$/;"	m	struct:e1000_option::__anon122::__anon124	file:
nreceived	elements/icmp/icmpsendpings.hh	/^	int nreceived;$/;"	m	struct:ICMPPingSource::ReceiverInfo
nrequired	lib/confparse.cc	/^  int nrequired;$/;"	m	struct:__anon517::CpVaHelper	file:
nrerror	elements/grid/amoeba.cc	/^Amoeba::nrerror(const char *error_text)$/;"	f	class:Amoeba
nroff_do_section	doc/click-elem2man	/^sub nroff_do_section ($$$) {$/;"	s
nroff_filename_func	doc/click-elem2man	/^sub nroff_filename_func ($$) {$/;"	s
nroff_fixfP	doc/click-elem2man	/^sub nroff_fixfP ($$) {$/;"	s
nroff_manref	doc/click-elem2man	/^sub nroff_manref ($$$$) {$/;"	s
nroff_quote	doc/click-elem2man	/^sub nroff_quote ($) {$/;"	s
nroff_unentity	doc/click-elem2man	/^sub nroff_unentity ($) {$/;"	s
nroffize	doc/click-elem2man	/^sub nroffize ($) {$/;"	s
nroffize_text	doc/click-elem2man	/^sub nroffize_text ($) {$/;"	s
nsec	include/click/timestamp.hh	/^Timestamp::nsec() const$/;"	f	class:Timestamp
nsec1	include/click/timestamp.hh	/^Timestamp::nsec1() const$/;"	f	class:Timestamp
nsec_per_msec	include/click/timestamp.hh	/^	nsec_per_msec = 1000000,$/;"	e	enum:Timestamp::__anon417
nsec_per_sec	include/click/timestamp.hh	/^	nsec_per_sec = 1000000000,$/;"	e	enum:Timestamp::__anon417
nsec_per_usec	include/click/timestamp.hh	/^	nsec_per_usec = 1000,$/;"	e	enum:Timestamp::__anon417
nsec_to_subsec	include/click/timestamp.hh	/^    inline static uint32_t nsec_to_subsec(uint32_t nsec) {$/;"	f	class:Timestamp
nsecval	include/click/timestamp.hh	/^    inline value_type nsecval() const {$/;"	f	class:Timestamp
nsig	include/click/router.hh	/^	int nsig;$/;"	m	struct:Router::notifier_signals_t
nsignatures	tools/click-devirtualize/signature.hh	/^  int nsignatures() const			{ return _sigs.size(); }$/;"	f	class:Signatures
nspecials	tools/click-devirtualize/specializer.hh	/^  int nspecials() const				{ return _specials.size(); }$/;"	f	class:Specializer
nsuper	linuxmodule/proclikefs.c	/^    atomic_t nsuper;$/;"	m	struct:proclikefs_file_system	file:
nthreads	include/click/master.hh	/^Master::nthreads() const$/;"	f	class:Master
nthreads	userlevel/click.cc	/^static int nthreads = 1;$/;"	v	file:
ntoh	elements/grid/timeutils.hh	/^ntoh(const timeval &tv) {$/;"	f
ntohll	elements/local/OpenFlow/lib/xtoxll.hh	/^ntohll(uint64_t n)$/;"	f
ntohq	include/click/integers.hh	/^inline uint64_t ntohq(uint64_t x) {$/;"	f
null	apps/clicky/src/transform.hh	/^    bool null() const			{ return _null; }$/;"	f	class:affine
null_data	include/click/string.hh	/^    static const char null_data;$/;"	m	class:String
null_data	lib/string.cc	/^const char String::null_data = '\\0';$/;"	m	class:String	file:
null_port	tools/lib/elementt.cc	/^const PortT PortT::null_port;$/;"	m	class:PortT	file:
null_port	tools/lib/elementt.hh	/^    static const PortT null_port;$/;"	m	struct:PortT
null_property	apps/clicky/src/dstyle.hh	/^    static const dcss_property null_property;$/;"	m	struct:clicky::dcss_property
null_reader	elements/analysis/ipsumdumpinfo.cc	/^const FieldReader null_reader = {$/;"	m	namespace:IPSummaryDump	file:
null_string_rep	include/click/string.hh	/^    static const rep_t null_string_rep;$/;"	m	class:String
null_string_rep	lib/string.cc	/^const String::rep_t String::null_string_rep = {$/;"	m	class:String	file:
null_traits	tools/lib/etraits.hh	/^    static const ElementTraits &null_traits()	{ return the_null_traits; }$/;"	f	struct:ElementTraits
null_writer	elements/analysis/ipsumdumpinfo.cc	/^const FieldWriter null_writer = {$/;"	m	namespace:IPSummaryDump	file:
num	elements/ip/siphmapper.hh	/^  int num;$/;"	m	class:jvtree_t
num	elements/ipsec/sha1_impl.hh	/^  int num;$/;"	m	struct:SHAstate_st
num_activity_pm	apps/clicky/src/dstyle.cc	/^    num_activity_pm = sizeof(activity_pm) \/ sizeof(activity_pm[0]),$/;"	e	enum:clicky::__anon9	file:
num_addrs	elements/grid/dsr.hh	/^  unsigned int num_addrs() const {$/;"	f	struct:click_dsr_rrep
num_addrs	elements/grid/dsr.hh	/^  unsigned int num_addrs() const {$/;"	f	struct:click_dsr_rreq
num_addrs	elements/grid/dsr.hh	/^  unsigned int num_addrs() const {$/;"	f	struct:click_dsr_source
num_elt_pm	apps/clicky/src/dstyle.cc	/^    num_elt_pm = sizeof(elt_pm) \/ sizeof(elt_pm[0]),$/;"	e	enum:clicky::__anon9	file:
num_elt_size_pm	apps/clicky/src/dstyle.cc	/^    num_elt_size_pm = sizeof(elt_size_pm) \/ sizeof(elt_size_pm[0]),$/;"	e	enum:clicky::__anon9	file:
num_expected	elements/grid/grid.hh	/^    uint8_t num_expected;$/;"	m	struct:grid_nbr_encap
num_expected	elements/grid/grid.hh	/^    uint8_t num_expected;$/;"	m	struct:grid_nbr_entry
num_fail	elements/grid/ackretrysender2.hh	/^  unsigned num_fail;$/;"	m	class:ACKRetrySender2
num_fullness_pm	apps/clicky/src/dstyle.cc	/^    num_fullness_pm = sizeof(fullness_pm) \/ sizeof(fullness_pm[0]),$/;"	e	enum:clicky::__anon9	file:
num_handler_pm	apps/clicky/src/dstyle.cc	/^    num_handler_pm = sizeof(handler_pm) \/ sizeof(handler_pm[0]),$/;"	e	enum:clicky::__anon9	file:
num_hops	elements/grid/grid.hh	/^    uint8_t num_hops;$/;"	m	struct:grid_nbr_entry
num_hops	elements/grid/gridgenericrt.hh	/^    unsigned char        num_hops() const { return _num_hops; }$/;"	f	struct:GridGenericRouteTable::RouteEntry
num_hops	elements/grid/gridroutetable.hh	/^    unsigned char num_hops() const { check(); return _num_hops; }$/;"	f	class:GridRouteTable::RTEntry
num_ina	elements/analysis/ipsumdumpinfo.cc	/^bool num_ina(PacketOdesc& d, const String &s, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
num_links	elements/grid/grid.hh	/^  uint32_t num_links;   \/\/ number of grid_link_entry entries following$/;"	m	struct:grid_link_probe
num_links	elements/grid/linkstat.hh	/^    unsigned int num_links;   \/\/ number of grid_link_entry entries following$/;"	m	struct:LinkStat::link_probe
num_main_windows	apps/clicky/src/wmain.cc	/^static int num_main_windows = 0;$/;"	m	namespace:clicky	file:
num_mc_addrs	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t num_mc_addrs;$/;"	m	struct:e1000_hw
num_mc_addrs	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t num_mc_addrs;$/;"	m	struct:e1000_hw
num_mc_addrs	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t num_mc_addrs;$/;"	m	struct:e1000_hw
num_nbrs	elements/grid/grid.hh	/^    uint8_t num_nbrs;$/;"	m	struct:grid_hello
num_nodes	elements/ip/siphmapper.hh	/^  size_t num_servers, num_nodes;$/;"	m	class:chash_t
num_outa	elements/analysis/ipsumdumpinfo.cc	/^void num_outa(const PacketDesc& d, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
num_pkts	elements/grid/ackretrysender2.hh	/^  unsigned num_pkts;$/;"	m	class:ACKRetrySender2
num_port_pm	apps/clicky/src/dstyle.cc	/^    num_port_pm = sizeof(port_pm) \/ sizeof(port_pm[0]),$/;"	e	enum:clicky::__anon9	file:
num_possible_cpus	include/click/sync.hh	12;"	d
num_queues	elements/local/OpenFlow/datapath.hh	/^	uint16_t num_queues;$/;"	m	struct:click_port
num_rcv_x2	include/clicknet/llc.h	/^		uint8_t num_rcv_x2;$/;"	m	struct:click_llc::__anon481::__anon483
num_rcv_x2	include/clicknet/llc.h	/^		uint8_t num_rcv_x2;$/;"	m	struct:click_llc::__anon481::__anon484
num_rx	elements/grid/grid.hh	/^    uint8_t num_rx;$/;"	m	struct:grid_nbr_encap
num_rx	elements/grid/grid.hh	/^    uint8_t num_rx;$/;"	m	struct:grid_nbr_entry
num_rx	elements/grid/grid.hh	/^  uint8_t num_rx;$/;"	m	struct:grid_link_entry
num_rx	elements/grid/linkstat.hh	/^    unsigned short num_rx;    \/\/ number of probe bcasts received from node during last tau msecs$/;"	m	struct:LinkStat::link_entry
num_rx_queues	drivers/e1000-7.x/src/e1000.h	/^	int num_rx_queues;$/;"	m	struct:e1000_adapter
num_rxmit	elements/tcpudp/snooptcp.hh	/^    int num_rxmit;$/;"	m	struct:SnoopTCP::SCacheEntry
num_servers	elements/ip/siphmapper.hh	/^  size_t num_servers, num_nodes;$/;"	m	class:chash_t
num_snd_x2	include/clicknet/llc.h	/^		uint8_t num_snd_x2;$/;"	m	struct:click_llc::__anon481::__anon483
num_tx	elements/grid/ackretrysender.hh	/^    unsigned num_tx;$/;"	m	struct:ACKRetrySender::tx_result_t
num_tx	elements/grid/ackretrysender2.hh	/^    unsigned num_tx;$/;"	m	struct:ACKRetrySender2::tx_result_t
num_tx_queues	drivers/e1000-7.x/src/e1000.h	/^	int num_tx_queues;$/;"	m	struct:e1000_adapter
num_vlan_filter	drivers/e1000-4.x/src/ans.h	/^    u32 num_vlan_filter;     \/* number of vlans to filter *\/$/;"	m	struct:_iANSsupport_t
nvaltype	lib/clp.c	/^    int nvaltype;$/;"	m	struct:Clp_Internal	file:
nvalues	lib/confparse.cc	/^  int nvalues;$/;"	m	struct:__anon517::CpVaHelper	file:
nw_addr	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t nw_addr;               \/* IP address. *\/$/;"	m	struct:ofp_action_nw_addr
nw_dst	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t nw_dst;           \/* IP destination address. *\/$/;"	m	struct:ofp_match
nw_dst	elements/local/OpenFlow/lib/flow.hh	/^    uint32_t nw_dst;            \/* IP destination address. *\/$/;"	m	struct:flow
nw_dst_mask	elements/local/OpenFlow/lib/switch-flow.hh	/^    uint32_t nw_dst_mask;       \/* 1-bit in each significant nw_dst bit. *\/$/;"	m	struct:sw_flow_key
nw_proto	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t nw_proto;          \/* IP protocol or lower 8 bits of$/;"	m	struct:ofp_match
nw_proto	elements/local/OpenFlow/lib/flow.hh	/^    uint8_t nw_proto;           \/* IP protocol. *\/$/;"	m	struct:flow
nw_src	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t nw_src;           \/* IP source address. *\/$/;"	m	struct:ofp_match
nw_src	elements/local/OpenFlow/lib/flow.hh	/^    uint32_t nw_src;            \/* IP source address. *\/$/;"	m	struct:flow
nw_src_mask	elements/local/OpenFlow/lib/switch-flow.hh	/^    uint32_t nw_src_mask;       \/* 1-bit in each significant nw_src bit. *\/$/;"	m	struct:sw_flow_key
nw_tos	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t nw_tos;                 \/* IP ToS (DSCP field, 6 bits). *\/$/;"	m	struct:ofp_action_nw_tos
nw_tos	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t nw_tos;            \/* IP ToS (actually DSCP field, 6 bits). *\/$/;"	m	struct:ofp_match
nw_tos	elements/local/OpenFlow/lib/flow.hh	/^    uint8_t nw_tos;             \/* IPv4 DSCP. *\/$/;"	m	struct:flow
nwarnings	apps/clicky/src/gathererror.hh	/^    int nwarnings() const {$/;"	f	class:GatherErrorHandler
nwarnings	elements/userlevel/controlsocket.cc	/^    int nwarnings() const {$/;"	f	struct:ControlSocketErrorHandler
nway_reset	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*nway_reset)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
nway_reset	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*nway_reset)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
nx_act_config	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^struct nx_act_config {$/;"	s
nx_action_header	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^struct nx_action_header {$/;"	s
nx_action_snat	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^struct nx_action_snat {$/;"	s
nx_action_subtype	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^enum nx_action_subtype {$/;"	g
nx_command_reply	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^struct nx_command_reply {$/;"	s
nx_flow_end	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^struct nx_flow_end {$/;"	s
nx_flow_end_config	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^struct nx_flow_end_config {$/;"	s
nx_flow_end_reason	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^enum nx_flow_end_reason {$/;"	g
nx_snat_command	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^enum nx_snat_command {$/;"	g
nx_snat_config	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^struct nx_snat_config {$/;"	s
nxh	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    struct nicira_header nxh;$/;"	m	struct:nx_command_reply	typeref:struct:nx_command_reply::nicira_header
nxtln	conf/click-mkclgw.pl	/^sub nxtln {$/;"	s
o_ctx	elements/ipsec/hmac.hh	/^	SHA1_ctx o_ctx;$/;"	m	struct:hmac_ctx_st
oalign	tools/click-align/click-align.cc	/^const Alignment &RouterAlign::oalign(const PortT &p) const$/;"	f	class:RouterAlign
obj	elements/grid/dsdvroutetable.hh	/^    DSDVRouteTable *obj;$/;"	m	struct:DSDVRouteTable::HookPair
object	elements/local/FlowNet/common/CongestionDetection.hh	/^	void* object;$/;"	m	struct:CongestionNotification
observe	elements/local/FlowNet/common/PacketQueue.hh	/^inline Packet* PacketQueue::observe()$/;"	f	class:PacketQueue
oclass	lib/clp.c	/^    Clp_Oclass oclass[Clp_OclassSize];$/;"	m	struct:Clp_Internal	file:
of	elements/local/OpenFlow/datapath.hh	/^	Datapath *of;$/;"	m	struct:onc_param
of_actions	elements/local/OpenFlow/lib/dp_act.cc	/^static struct openflow_action of_actions[OFPAT_ENQUEUE+1] = {$/;"	v	typeref:struct:openflow_action	file:
of_ext_recv_msg	elements/local/OpenFlow/lib/of_ext_msg.cc	/^int of_ext_recv_msg(class Datapath *dp, const struct rconn_sender *sender,$/;"	f
off	elements/ip/ipreassembler.hh	/^	uint16_t off;$/;"	m	struct:IPReassembler::ChunkLink
offset	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t offset;$/;"	m	struct:ethtool_eeprom
offset	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t offset;$/;"	m	struct:ethtool_eeprom
offset	elements/analysis/fromdagdump.hh	/^	uint8_t offset;$/;"	m	struct:FromDAGDump::DAGEthernetCell
offset	elements/standard/classification.hh	/^    uint16_t offset;$/;"	m	struct:Classification::Wordwise::Insn
offset	tools/click-align/alignment.hh	/^    int offset() const {$/;"	f	class:Alignment
offset	tools/click-fastclassifier/click-fastclassifier.hh	/^    int offset;$/;"	m	struct:Classifier_Insn
offset	tools/lib/lexert.hh	/^	unsigned offset(const char *s) const {$/;"	f	struct:LexerT::FileState
offset1	apps/clicky/src/gathererror.hh	/^	int offset1;$/;"	m	struct:GatherErrorHandler::Message
offset1	tools/lib/landmarkt.hh	/^    unsigned offset1() const		{ return _offset1; }$/;"	f	class:LandmarkT
offset2	apps/clicky/src/gathererror.hh	/^	int offset2;$/;"	m	struct:GatherErrorHandler::Message
offset2	tools/lib/landmarkt.hh	/^    unsigned offset2() const		{ return _offset2; }$/;"	f	class:LandmarkT
offset_ip_dst	elements/ip/getipaddress.hh	/^	offset_ip_dst = -2$/;"	e	enum:GetIPAddress::__anon319
offset_ip_src	elements/ip/getipaddress.hh	/^	offset_ip_src = -1,$/;"	e	enum:GetIPAddress::__anon319
offset_mac	elements/ip/ipfilter.hh	/^	offset_mac = 0,$/;"	e	enum:IPFilter::__anon351
offset_net	elements/ip/ipfilter.hh	/^	offset_net = 64,$/;"	e	enum:IPFilter::__anon351
offset_or	lib/bitvector.cc	/^Bitvector::offset_or(const Bitvector &o, int offset)$/;"	f	class:Bitvector
offset_to_decorated_string	tools/lib/landmarkt.cc	/^LandmarkSetT::offset_to_decorated_string(unsigned offset1, unsigned offset2) const$/;"	f	class:LandmarkSetT
offset_to_string	tools/lib/landmarkt.cc	/^LandmarkSetT::offset_to_string(unsigned offset) const$/;"	f	class:LandmarkSetT
offset_transp	elements/ip/ipfilter.hh	/^	offset_transp = 128$/;"	e	enum:IPFilter::__anon351
offsets	lib/bighashmap_arena.cc	/^static const int offsets[2] = { (1 << shifts[0]) - 1, (1 << shifts[1]) - 1 };$/;"	v	file:
ofp_action_dl_addr	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_action_dl_addr {$/;"	s
ofp_action_enqueue	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_action_enqueue {$/;"	s
ofp_action_header	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_action_header {$/;"	s
ofp_action_nw_addr	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_action_nw_addr {$/;"	s
ofp_action_nw_tos	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_action_nw_tos {$/;"	s
ofp_action_output	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_action_output {$/;"	s
ofp_action_tp_port	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_action_tp_port {$/;"	s
ofp_action_type	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_action_type {$/;"	g
ofp_action_vendor_header	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_action_vendor_header {$/;"	s
ofp_action_vlan_pcp	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_action_vlan_pcp {$/;"	s
ofp_action_vlan_vid	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_action_vlan_vid {$/;"	s
ofp_aggregate_stats_reply	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_aggregate_stats_reply {$/;"	s
ofp_aggregate_stats_reply	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_aggregate_stats_reply(struct ds *string, const void *body_,$/;"	f	file:
ofp_aggregate_stats_request	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_aggregate_stats_request {$/;"	s
ofp_aggregate_stats_request	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_aggregate_stats_request(struct ds *string, const void *oh,$/;"	f	file:
ofp_bad_action_code	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_bad_action_code {$/;"	g
ofp_bad_request_code	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_bad_request_code {$/;"	g
ofp_capabilities	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_capabilities {$/;"	g
ofp_config_flags	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_config_flags {$/;"	g
ofp_desc_stats	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_desc_stats {$/;"	s
ofp_desc_stats_reply	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_desc_stats_reply(struct ds *string, const void *body, size_t len UNUSED,$/;"	f	file:
ofp_echo	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_echo(struct ds *string, const void *oh, size_t len, int verbosity)$/;"	f	file:
ofp_error	elements/local/OpenFlow/lib/util.cc	/^ofp_error(int err_no, const char *format, ...)$/;"	f
ofp_error_msg	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_error_msg {$/;"	s
ofp_error_type	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_error_type {$/;"	g
ofp_extension_commands	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^enum ofp_extension_commands { \/* Queue configuration commands *\/$/;"	g
ofp_extension_header	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^struct ofp_extension_header {$/;"	s
ofp_fatal	elements/local/OpenFlow/lib/util.cc	/^ofp_fatal(int err_no, const char *format, ...)$/;"	f
ofp_flow_mod	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_flow_mod {$/;"	s
ofp_flow_mod_command	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_flow_mod_command {$/;"	g
ofp_flow_mod_failed_code	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_flow_mod_failed_code {$/;"	g
ofp_flow_mod_flags	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_flow_mod_flags {$/;"	g
ofp_flow_removed	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_flow_removed {$/;"	s
ofp_flow_removed_reason	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_flow_removed_reason {$/;"	g
ofp_flow_stats	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_flow_stats {$/;"	s
ofp_flow_stats_reply	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_flow_stats_reply(struct ds *string, const void *body_, size_t len,$/;"	f	file:
ofp_flow_stats_request	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_flow_stats_request {$/;"	s
ofp_flow_stats_request	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_flow_stats_request(struct ds *string, const void *oh, size_t len UNUSED,$/;"	f	file:
ofp_flow_wildcards	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_flow_wildcards {$/;"	g
ofp_hdr	elements/local/OpenFlow/include/openflow/private-ext.hh	/^	struct ofp_header ofp_hdr;	\/* protocol header *\/$/;"	m	struct:private_vxhdr	typeref:struct:private_vxhdr::ofp_header
ofp_header	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_header {$/;"	s
ofp_hello	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_hello {$/;"	s
ofp_hello_failed_code	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_hello_failed_code {$/;"	g
ofp_hex_dump	elements/local/OpenFlow/lib/util.cc	/^ofp_hex_dump(FILE *stream, const void *buf_, size_t size,$/;"	f
ofp_match	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_match {$/;"	s
ofp_match_to_string	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_match_to_string(const struct ofp_match *om, int verbosity)$/;"	f
ofp_message_type_to_string	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_message_type_to_string(uint8_t type)$/;"	f
ofp_packet_in	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_packet_in {$/;"	s
ofp_packet_in	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_packet_in(struct ds *string, const void *oh, size_t len, int verbosity)$/;"	f	file:
ofp_packet_in_reason	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_packet_in_reason {$/;"	g
ofp_packet_out	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_packet_out {$/;"	s
ofp_packet_out	elements/local/OpenFlow/lib/ofp-print.cc	/^static void ofp_packet_out(struct ds *string, const void *oh, size_t len,$/;"	f	file:
ofp_packet_queue	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_packet_queue {$/;"	s
ofp_packet_to_string	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_packet_to_string(const void *data, size_t len, size_t total_len UNUSED)$/;"	f
ofp_phy_port	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_phy_port {$/;"	s
ofp_port	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_port {$/;"	g
ofp_port_config	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_port_config {$/;"	g
ofp_port_features	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_port_features {$/;"	g
ofp_port_mod	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_port_mod {$/;"	s
ofp_port_mod_failed_code	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_port_mod_failed_code {$/;"	g
ofp_port_reason	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_port_reason {$/;"	g
ofp_port_state	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_port_state {$/;"	g
ofp_port_stats	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_port_stats {$/;"	s
ofp_port_stats_reply	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_port_stats_reply(struct ds *string, const void *body, size_t len,$/;"	f	file:
ofp_port_stats_request	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_port_stats_request {$/;"	s
ofp_port_status	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_port_status {$/;"	s
ofp_print	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_print(FILE *stream, const void *oh, size_t len, int verbosity)$/;"	f
ofp_print_action	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_print_action(struct ds *string, const struct ofp_action_header *ah, $/;"	f	file:
ofp_print_actions	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_print_actions(struct ds *string, const struct ofp_action_header *action,$/;"	f	file:
ofp_print_error_msg	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_print_error_msg(struct ds *string, const void *oh, size_t len, $/;"	f	file:
ofp_print_flow_mod	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_print_flow_mod(struct ds *string, const void *oh, size_t len, $/;"	f	file:
ofp_print_flow_removed	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_print_flow_removed(struct ds *string, const void *oh, size_t len UNUSED, $/;"	f	file:
ofp_print_match	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_print_match(struct ds *f, const struct ofp_match *om, int verbosity)$/;"	f	file:
ofp_print_packet	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_print_packet(FILE *stream, const void *data, size_t len, size_t total_len)$/;"	f
ofp_print_phy_port	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_print_phy_port(struct ds *string, const struct ofp_phy_port *port)$/;"	f	file:
ofp_print_port_features	elements/local/OpenFlow/lib/ofp-print.cc	/^static void ofp_print_port_features(struct ds *string, uint32_t features)$/;"	f	file:
ofp_print_port_mod	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_print_port_mod(struct ds *string, const void *oh, size_t len UNUSED,$/;"	f	file:
ofp_print_port_name	elements/local/OpenFlow/lib/ofp-print.cc	/^static void ofp_print_port_name(struct ds *string, uint16_t port) $/;"	f	file:
ofp_print_port_status	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_print_port_status(struct ds *string, const void *oh, size_t len UNUSED,$/;"	f	file:
ofp_print_rate_shaping	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_print_rate_shaping(struct ds *string, const void *oh, size_t len UNUSED, int verbosity UNUSED)$/;"	f	file:
ofp_print_switch_config	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_print_switch_config(struct ds *string, const void *oh, size_t len UNUSED,$/;"	f	file:
ofp_print_switch_features	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_print_switch_features(struct ds *string, const void *oh, size_t len,$/;"	f	file:
ofp_queue	elements/local/OpenFlow/lib/queue.hh	/^struct ofp_queue {$/;"	s
ofp_queue_get_config_reply	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_queue_get_config_reply {$/;"	s
ofp_queue_get_config_request	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_queue_get_config_request {$/;"	s
ofp_queue_op_failed_code	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_queue_op_failed_code {$/;"	g
ofp_queue_prop_header	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_queue_prop_header {$/;"	s
ofp_queue_prop_min_rate	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_queue_prop_min_rate {$/;"	s
ofp_queue_properties	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_queue_properties {$/;"	g
ofp_queue_stats	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_queue_stats {$/;"	s
ofp_queue_stats_reply	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_queue_stats_reply(struct ds *string, const void *body, size_t len,$/;"	f	file:
ofp_queue_stats_request	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_queue_stats_request {$/;"	s
ofp_stats_reply	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_stats_reply {$/;"	s
ofp_stats_reply	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_stats_reply(struct ds *string, const void *oh, size_t len, int verbosity)$/;"	f	file:
ofp_stats_reply_flags	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_stats_reply_flags {$/;"	g
ofp_stats_request	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_stats_request {$/;"	s
ofp_stats_request	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_stats_request(struct ds *string, const void *oh, size_t len, int verbosity)$/;"	f	file:
ofp_stats_types	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_stats_types {$/;"	g
ofp_switch_config	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_switch_config {$/;"	s
ofp_switch_features	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_switch_features {$/;"	s
ofp_table_stats	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_table_stats {$/;"	s
ofp_table_stats_reply	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_table_stats_reply(struct ds *string, const void *body, size_t len,$/;"	f	file:
ofp_to_string	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_to_string(const void *oh_, size_t len, int verbosity)$/;"	f
ofp_type	elements/local/OpenFlow/include/openflow/openflow.hh	/^enum ofp_type {$/;"	g
ofp_vendor	elements/local/OpenFlow/lib/ofp-print.cc	/^ofp_vendor(struct ds *string UNUSED, const void *oh, size_t len UNUSED, int verbosity UNUSED)$/;"	f	file:
ofp_vendor_header	elements/local/OpenFlow/include/openflow/openflow.hh	/^struct ofp_vendor_header {$/;"	s
ofp_vxid	elements/local/OpenFlow/include/openflow/private-ext.hh	/^	uint32_t ofp_vxid;	\/* vendor extenion ID *\/$/;"	m	struct:private_vxhdr
ofpbuf	elements/local/OpenFlow/lib/ofpbuf.hh	/^struct ofpbuf {$/;"	s
ofpbuf_at	elements/local/OpenFlow/lib/ofpbuf.cc	/^void *ofpbuf_at(const struct ofpbuf *b, size_t offset, size_t size) $/;"	f
ofpbuf_at_assert	elements/local/OpenFlow/lib/ofpbuf.cc	/^void *ofpbuf_at_assert(const struct ofpbuf *b, size_t offset, size_t size) $/;"	f
ofpbuf_clear	elements/local/OpenFlow/lib/ofpbuf.cc	/^void ofpbuf_clear(struct ofpbuf *b) $/;"	f
ofpbuf_clone	elements/local/OpenFlow/lib/ofpbuf.cc	/^struct ofpbuf *ofpbuf_clone(const struct ofpbuf *buffer)$/;"	f
ofpbuf_clone_data	elements/local/OpenFlow/lib/ofpbuf.cc	/^struct ofpbuf * ofpbuf_clone_data(const void *data, size_t size)$/;"	f
ofpbuf_delete	elements/local/OpenFlow/lib/ofpbuf.cc	/^void ofpbuf_delete(struct ofpbuf *b) $/;"	f
ofpbuf_end	elements/local/OpenFlow/lib/ofpbuf.cc	/^void *ofpbuf_end(const struct ofpbuf *b) $/;"	f
ofpbuf_from_packet	elements/local/OpenFlow/lib/ofpbuf.cc	/^struct ofpbuf* ofpbuf_from_packet(Packet* p)$/;"	f
ofpbuf_headroom	elements/local/OpenFlow/lib/ofpbuf.cc	/^size_t ofpbuf_headroom(struct ofpbuf *b) $/;"	f
ofpbuf_init	elements/local/OpenFlow/lib/ofpbuf.cc	/^ofpbuf_init(struct ofpbuf *b, size_t size)$/;"	f
ofpbuf_new	elements/local/OpenFlow/lib/ofpbuf.cc	/^struct ofpbuf *ofpbuf_new(size_t size)$/;"	f
ofpbuf_prealloc_headroom	elements/local/OpenFlow/lib/ofpbuf.cc	/^void ofpbuf_prealloc_headroom(struct ofpbuf *b, size_t size) $/;"	f
ofpbuf_prealloc_tailroom	elements/local/OpenFlow/lib/ofpbuf.cc	/^void ofpbuf_prealloc_tailroom(struct ofpbuf *b, size_t size) $/;"	f
ofpbuf_pull	elements/local/OpenFlow/lib/ofpbuf.cc	/^void *ofpbuf_pull(struct ofpbuf *b, size_t size) $/;"	f
ofpbuf_push	elements/local/OpenFlow/lib/ofpbuf.cc	/^void *ofpbuf_push(struct ofpbuf *b, const void *p, size_t size) $/;"	f
ofpbuf_push_uninit	elements/local/OpenFlow/lib/ofpbuf.cc	/^void *ofpbuf_push_uninit(struct ofpbuf *b, size_t size) $/;"	f
ofpbuf_put	elements/local/OpenFlow/lib/ofpbuf.cc	/^void *ofpbuf_put(struct ofpbuf *b, const void *p, size_t size) $/;"	f
ofpbuf_put_uninit	elements/local/OpenFlow/lib/ofpbuf.cc	/^void *ofpbuf_put_uninit(struct ofpbuf *b, size_t size) $/;"	f
ofpbuf_put_zeros	elements/local/OpenFlow/lib/ofpbuf.cc	/^void *ofpbuf_put_zeros(struct ofpbuf *b, size_t size)$/;"	f
ofpbuf_reinit	elements/local/OpenFlow/lib/ofpbuf.cc	/^void ofpbuf_reinit(struct ofpbuf *b, size_t size)$/;"	f
ofpbuf_reserve	elements/local/OpenFlow/lib/ofpbuf.cc	/^void ofpbuf_reserve(struct ofpbuf *b, size_t size) $/;"	f
ofpbuf_tail	elements/local/OpenFlow/lib/ofpbuf.cc	/^void *ofpbuf_tail(const struct ofpbuf *b) $/;"	f
ofpbuf_tailroom	elements/local/OpenFlow/lib/ofpbuf.cc	/^size_t ofpbuf_tailroom(struct ofpbuf *b) $/;"	f
ofpbuf_to_packet	elements/local/OpenFlow/lib/ofpbuf.cc	/^Packet* ofpbuf_to_packet(struct ofpbuf* b)$/;"	f
ofpbuf_try_pull	elements/local/OpenFlow/lib/ofpbuf.cc	/^void *ofpbuf_try_pull(struct ofpbuf *b, size_t size) $/;"	f
ofpbuf_uninit	elements/local/OpenFlow/lib/ofpbuf.cc	/^ofpbuf_uninit(struct ofpbuf *b) $/;"	f
ofpbuf_use	elements/local/OpenFlow/lib/ofpbuf.cc	/^ofpbuf_use(struct ofpbuf *b, void *base, size_t allocated)$/;"	f
ofps_barrier_reply	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_barrier_reply;$/;"	m	struct:ofpstat
ofps_barrier_request	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_barrier_request;$/;"	m	struct:ofpstat
ofps_echo_reply	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_echo_reply;$/;"	m	struct:ofpstat
ofps_echo_request	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_echo_request;$/;"	m	struct:ofpstat
ofps_error	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_error;$/;"	m	struct:ofpstat
ofps_error_code	elements/local/OpenFlow/lib/ofpstat.hh	/^	} ofps_error_code;$/;"	m	struct:ofpstat	typeref:struct:ofpstat::__anon246
ofps_error_type	elements/local/OpenFlow/lib/ofpstat.hh	/^	} ofps_error_type;$/;"	m	struct:ofpstat	typeref:struct:ofpstat::__anon245
ofps_feats_reply	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_feats_reply;$/;"	m	struct:ofpstat
ofps_feats_request	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_feats_request;$/;"	m	struct:ofpstat
ofps_flow_mod	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_flow_mod;$/;"	m	struct:ofpstat
ofps_flow_mod_ops	elements/local/OpenFlow/lib/ofpstat.hh	/^	} ofps_flow_mod_ops;$/;"	m	struct:ofpstat	typeref:struct:ofpstat::__anon247
ofps_flow_removed	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_flow_removed;$/;"	m	struct:ofpstat
ofps_get_config_reply	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_get_config_reply;$/;"	m	struct:ofpstat
ofps_get_config_request	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_get_config_request;$/;"	m	struct:ofpstat
ofps_hello	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_hello;$/;"	m	struct:ofpstat
ofps_packet_in	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_packet_in;$/;"	m	struct:ofpstat
ofps_packet_out	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_packet_out;$/;"	m	struct:ofpstat
ofps_port_mod	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_port_mod;$/;"	m	struct:ofpstat
ofps_port_status	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_port_status;$/;"	m	struct:ofpstat
ofps_rcvd	elements/local/OpenFlow/lib/rconn.cc	/^    struct ofpstat ofps_rcvd;$/;"	m	struct:rconn	typeref:struct:rconn::ofpstat	file:
ofps_rcvd	elements/local/OpenFlow/lib/vconn-provider.hh	/^    struct ofpstat ofps_rcvd;$/;"	m	struct:vconn	typeref:struct:vconn::ofpstat
ofps_sent	elements/local/OpenFlow/lib/rconn.cc	/^    struct ofpstat ofps_sent;$/;"	m	struct:rconn	typeref:struct:rconn::ofpstat	file:
ofps_sent	elements/local/OpenFlow/lib/vconn-provider.hh	/^    struct ofpstat ofps_sent;$/;"	m	struct:vconn	typeref:struct:vconn::ofpstat
ofps_set_config	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_set_config;$/;"	m	struct:ofpstat
ofps_stats_reply	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_stats_reply;$/;"	m	struct:ofpstat
ofps_stats_request	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_stats_request;$/;"	m	struct:ofpstat
ofps_total	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_total;$/;"	m	struct:ofpstat
ofps_unknown	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_unknown;$/;"	m	struct:ofpstat
ofps_vendor	elements/local/OpenFlow/lib/ofpstat.hh	/^	uint64_t ofps_vendor;$/;"	m	struct:ofpstat
ofpstat	elements/local/OpenFlow/lib/ofpstat.hh	/^struct ofpstat {$/;"	s
ofpstat_inc_protocol_stat	elements/local/OpenFlow/lib/ofpstat.cc	/^ofpstat_inc_protocol_stat(struct ofpstat *ifps, struct ofp_header *hdr)$/;"	f
ofq_error_string	elements/local/OpenFlow/include/openflow/openflow-ext.hh	91;"	d
oindex_eindex	tools/click-align/click-align.cc	/^RouterAlign::oindex_eindex(int oi) const$/;"	f	class:RouterAlign
oindex_port	tools/click-align/click-align.cc	/^RouterAlign::oindex_port(int oi) const$/;"	f	class:RouterAlign
ok	apps/ClickController/NewConnectionDialog.java	/^	boolean ok;$/;"	f	class:NewConnectionDialog.DoneAction
ok	apps/csclient/csclient.cc	508;"	d	file:
ok	elements/ethernet/ip6ndsolicitor.hh	/^    unsigned ok: 1;$/;"	m	struct:IP6NDSolicitor::NDEntry
ok	elements/ip/ipfieldinfo.hh	/^    inline bool ok() const	{ return _val >= 0; }$/;"	f	class:IPField
ok	tools/click-pretty/click-pretty.cc	/^    bool ok() const {$/;"	f	struct:PrettyRouter
ok_result	include/click/error.hh	/^    static const int ok_result;		\/\/\/< Equals 0, used for error levels$/;"	m	class:ErrorHandler
ok_result	lib/error.cc	/^const int ErrorHandler::ok_result = 0;$/;"	m	class:ErrorHandler	file:
old_click_name	tools/click-devirtualize/specializer.hh	/^  String old_click_name;$/;"	m	struct:SpecializedClass
old_configurations	tools/click-fastclassifier/click-fastclassifier.cc	/^static Vector<String> old_configurations;$/;"	v	file:
old_direction	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	int old_direction;$/;"	m	struct:CORE
old_qlen	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	int old_qlen;$/;"	m	struct:CORE
on	elements/standard/randomerror.hh	/^  bool on() const				{ return _on; }$/;"	f	class:RandomBitErrors
on_about1_activate	apps/clicky/src/xcallbacks.c	/^on_about1_activate                     (GtkMenuItem     *menuitem,$/;"	f
on_activity_decay	apps/clicky/src/ddecor.cc	/^static gboolean on_activity_decay(gpointer user_data)$/;"	f	file:
on_autorefresh	apps/clicky/src/hvalues.cc	/^gboolean handler_value::on_autorefresh(crouter *cr, int period)$/;"	f	class:clicky::handler_value
on_autorefresh	apps/clicky/src/hvalues.cc	/^static gboolean on_autorefresh(gpointer user_data)$/;"	f	file:
on_ccss_changed	apps/clicky/src/crouter.hh	/^    virtual void on_ccss_changed() {$/;"	f	class:clicky::crouter
on_ccss_changed	apps/clicky/src/wdiagram.cc	/^void wdiagram::on_ccss_changed()$/;"	f	class:clicky::wdiagram
on_ccss_changed	apps/clicky/src/wmain.cc	/^void wmain::on_ccss_changed()$/;"	f	class:clicky::wmain
on_check_activate	apps/clicky/src/dialogs.cc	/^static void on_check_activate(GtkMenuItem *, gpointer user_data)$/;"	f	file:
on_clear1_activate	apps/clicky/src/xcallbacks.c	/^on_clear1_activate                     (GtkMenuItem     *menuitem,$/;"	f
on_config_bsdmodule_activate	apps/clicky/src/dialogs.cc	/^static void on_config_bsdmodule_activate(GtkMenuItem *m, gpointer user_data)$/;"	f	file:
on_config_changed	apps/clicky/src/crouter.hh	/^    virtual void on_config_changed(bool replace, LexerTInfo *linfo) {$/;"	f	class:clicky::crouter
on_config_changed	apps/clicky/src/tmain.cc	/^void tmain::on_config_changed(bool, LexerTInfo *)$/;"	f	class:clicky::tmain
on_config_changed	apps/clicky/src/wmain.cc	/^void wmain::on_config_changed()$/;"	f	class:clicky::wmain
on_config_changed	apps/clicky/src/wmain.cc	/^void wmain::on_config_changed(bool replace, LexerTInfo *linfo)$/;"	f	class:clicky::wmain
on_config_changed_prepare	apps/clicky/src/crouter.hh	/^    virtual LexerTInfo *on_config_changed_prepare() {$/;"	f	class:clicky::crouter
on_config_changed_prepare	apps/clicky/src/wmain.cc	/^LexerTInfo *wmain::on_config_changed_prepare()$/;"	f	class:clicky::wmain
on_config_linuxmodule_activate	apps/clicky/src/dialogs.cc	/^static void on_config_linuxmodule_activate(GtkMenuItem *m, gpointer user_data)$/;"	f	file:
on_config_ns_activate	apps/clicky/src/dialogs.cc	/^static void on_config_ns_activate(GtkMenuItem *m, gpointer user_data)$/;"	f	file:
on_config_userlevel_activate	apps/clicky/src/dialogs.cc	/^static void on_config_userlevel_activate(GtkMenuItem *m, gpointer user_data)$/;"	f	file:
on_copy1_activate	apps/clicky/src/xcallbacks.c	/^on_copy1_activate                      (GtkMenuItem     *menuitem,$/;"	f
on_cut1_activate	apps/clicky/src/xcallbacks.c	/^on_cut1_activate                       (GtkMenuItem     *menuitem,$/;"	f
on_decay	apps/clicky/src/ddecor.cc	/^gboolean dactivity_decor::on_decay()$/;"	f	class:clicky::dactivity_decor
on_diagram_event	apps/clicky/src/wdiagram.cc	/^static gboolean on_diagram_event(GtkWidget *, GdkEvent *event, gpointer user_data)$/;"	f	file:
on_diagram_size_allocate	apps/clicky/src/wdiagram.cc	/^static void on_diagram_size_allocate(GtkWidget *, GtkAllocation *, gpointer user_data)$/;"	f	file:
on_drag_complete	apps/clicky/src/wdiagram.cc	/^void wdiagram::on_drag_complete()$/;"	f	class:clicky::wdiagram
on_drag_hand_motion	apps/clicky/src/wdiagram.cc	/^void wdiagram::on_drag_hand_motion(double x_root, double y_root)$/;"	f	class:clicky::wdiagram
on_drag_motion	apps/clicky/src/wdiagram.cc	/^void wdiagram::on_drag_motion(const point &p)$/;"	f	class:clicky::wdiagram
on_drag_rect_complete	apps/clicky/src/wdiagram.cc	/^void wdiagram::on_drag_rect_complete()$/;"	f	class:clicky::wdiagram
on_drag_rect_motion	apps/clicky/src/wdiagram.cc	/^void wdiagram::on_drag_rect_motion(const point &p)$/;"	f	class:clicky::wdiagram
on_driver_changed	apps/clicky/src/crouter.hh	/^    virtual void on_driver_changed() {$/;"	f	class:clicky::crouter
on_driver_changed	apps/clicky/src/wmain.cc	/^void wmain::on_driver_changed()$/;"	f	class:clicky::wmain
on_driver_connected	apps/clicky/src/crouter.cc	/^void crouter::on_driver_connected()$/;"	f	class:clicky::crouter
on_elementtree_row_activated	apps/clicky/src/wmain.cc	/^static void on_elementtree_row_activated(GtkTreeView *treeview, GtkTreePath *path, GtkTreeViewColumn *, gpointer user_data)$/;"	f	file:
on_elementtree_select	apps/clicky/src/wmain.cc	/^static void on_elementtree_select(GtkTreeSelection *selection, gpointer user_data)$/;"	f	file:
on_error	apps/clicky/src/crouter.hh	/^    virtual void on_error(bool replace, const String &dialog) {$/;"	f	class:clicky::crouter
on_error	apps/clicky/src/tmain.cc	/^void tmain::on_error(bool, const String &)$/;"	f	class:clicky::tmain
on_error	apps/clicky/src/wmain.cc	/^void wmain::on_error(bool replace, const String &dialog)$/;"	f	class:clicky::wmain
on_error_scroll_timeout	apps/clicky/src/wmain.cc	/^static gboolean on_error_scroll_timeout(gpointer user_data)$/;"	f	file:
on_error_scroll_timeout	apps/clicky/src/wmain.cc	/^void wmain::on_error_scroll_timeout()$/;"	f	class:clicky::wmain
on_error_view_event	apps/clicky/src/wmain.cc	/^static gboolean on_error_view_event(GtkWidget *, GdkEvent *event, gpointer user_data)$/;"	f	file:
on_event	apps/clicky/src/wdiagram.cc	/^gboolean wdiagram::on_event(GdkEvent *event)$/;"	f	class:clicky::wdiagram
on_eview_classexpander_expanded	apps/clicky/src/wmain.cc	/^static void on_eview_classexpander_expanded(GObject *object, GParamSpec *, gpointer)$/;"	f	file:
on_eview_close_clicked	apps/clicky/src/wmain.cc	/^static void on_eview_close_clicked(GtkButton *button, gpointer)$/;"	f	file:
on_eview_refresh_clicked	apps/clicky/src/wmain.cc	/^static void on_eview_refresh_clicked(GtkButton *, gpointer user_data)$/;"	f	file:
on_export_diagram	apps/clicky/src/dialogs.cc	/^void wmain::on_export_diagram()$/;"	f	class:clicky::wmain
on_export_diagram_activate	apps/clicky/src/dialogs.cc	/^static void on_export_diagram_activate(GtkMenuItem *, gpointer user_data)$/;"	f	file:
on_expose	apps/clicky/src/wdiagram.cc	/^void wdiagram::on_expose(const GdkRectangle *area)$/;"	f	class:clicky::wdiagram
on_handler_action_apply_clicked	apps/clicky/src/whandler.cc	/^static void on_handler_action_apply_clicked(GtkButton *button, gpointer user_data)$/;"	f	file:
on_handler_action_cancel_clicked	apps/clicky/src/whandler.cc	/^static void on_handler_action_cancel_clicked(GtkButton *, gpointer user_data)$/;"	f	file:
on_handler_check_button_toggled	apps/clicky/src/whandler.cc	/^static void on_handler_check_button_toggled(GtkToggleButton *tb, gpointer user_data)$/;"	f	file:
on_handler_check_write	apps/clicky/src/crouter.cc	/^void crouter::on_handler_check_write(const String &hname,$/;"	f	class:clicky::crouter
on_handler_check_write	apps/clicky/src/wmain.cc	/^void wmain::on_handler_check_write(const String &hname,$/;"	f	class:clicky::wmain
on_handler_create	apps/clicky/src/crouter.hh	/^    virtual void on_handler_create(handler_value *hv, bool was_empty) {$/;"	f	class:clicky::crouter
on_handler_create	apps/clicky/src/wmain.cc	/^void wmain::on_handler_create(handler_value *hv, bool was_empty)$/;"	f	class:clicky::wmain
on_handler_entry_changed	apps/clicky/src/whandler.cc	/^static void on_handler_entry_changed(GObject *obj, GParamSpec *, gpointer user_data)$/;"	f	file:
on_handler_event	apps/clicky/src/whandler.cc	/^static gboolean on_handler_event(GtkWidget *w, GdkEvent *event, gpointer user_data)$/;"	f	file:
on_handler_read	apps/clicky/src/crouter.cc	/^void crouter::on_handler_read(const String &hname, const String &hparam,$/;"	f	class:clicky::crouter
on_handler_read	apps/clicky/src/crouter.hh	/^    virtual void on_handler_read(handler_value *hv, bool changed) {$/;"	f	class:clicky::crouter
on_handler_read	apps/clicky/src/wmain.cc	/^void wmain::on_handler_read(handler_value *hv, bool changed)$/;"	f	class:clicky::wmain
on_handler_read_notify	apps/clicky/src/whandler.cc	/^static void on_handler_read_notify(GObject *obj, GParamSpec *, gpointer user_data)$/;"	f	file:
on_handler_text_buffer_changed	apps/clicky/src/whandler.cc	/^static void on_handler_text_buffer_changed(GtkTextBuffer *buffer, gpointer user_data)$/;"	f	file:
on_handler_write	apps/clicky/src/crouter.cc	/^void crouter::on_handler_write(const String &hname, const String &hvalue,$/;"	f	class:clicky::crouter
on_handler_write	apps/clicky/src/wmain.cc	/^void wmain::on_handler_write(const String &hname, const String &hvalue,$/;"	f	class:clicky::wmain
on_hpref_autorefresh_toggled	apps/clicky/src/whandler.cc	/^static void on_hpref_autorefresh_toggled(GtkToggleButton *button, gpointer user_data)$/;"	f	file:
on_hpref_autorefresh_value_changed	apps/clicky/src/whandler.cc	/^static void on_hpref_autorefresh_value_changed(GtkSpinButton *button, gpointer user_data)$/;"	f	file:
on_hpref_cancel_clicked	apps/clicky/src/whandler.cc	/^static void on_hpref_cancel_clicked(GtkButton *, gpointer user_data)$/;"	f	file:
on_hpref_ok_clicked	apps/clicky/src/whandler.cc	/^static void on_hpref_ok_clicked(GtkButton *, gpointer user_data)$/;"	f	file:
on_hpref_preferences_clicked	apps/clicky/src/whandler.cc	/^static void on_hpref_preferences_clicked(GtkButton *, gpointer user_data)$/;"	f	file:
on_hpref_refreshable_toggled	apps/clicky/src/whandler.cc	/^static void on_hpref_refreshable_toggled(GtkToggleButton *button, gpointer user_data)$/;"	f	file:
on_hpref_visible_toggled	apps/clicky/src/whandler.cc	/^static void on_hpref_visible_toggled(GtkToggleButton *button, gpointer user_data)$/;"	f	file:
on_install_activate	apps/clicky/src/dialogs.cc	/^static void on_install_activate(GtkMenuItem *, gpointer user_data)$/;"	f	file:
on_landmark_changed	apps/clicky/src/crouter.hh	/^    virtual void on_landmark_changed() {$/;"	f	class:clicky::crouter
on_landmark_changed	apps/clicky/src/wmain.cc	/^void wmain::on_landmark_changed()$/;"	f	class:clicky::wmain
on_new_window_activate	apps/clicky/src/dialogs.cc	/^static void on_new_window_activate(GtkMenuItem *, gpointer user_data)$/;"	f	file:
on_normal_size_activate	apps/clicky/src/dialogs.cc	/^static void on_normal_size_activate(GtkMenuItem *, gpointer user_data)$/;"	f	file:
on_open_file	apps/clicky/src/dialogs.cc	/^void wmain::on_open_file()$/;"	f	class:clicky::wmain
on_open_file_activate	apps/clicky/src/dialogs.cc	/^static void on_open_file_activate(GtkMenuItem *, gpointer user_data)$/;"	f	file:
on_open_kernel	apps/clicky/src/dialogs.cc	/^void wmain::on_open_kernel()$/;"	f	class:clicky::wmain
on_open_kernel_activate	apps/clicky/src/dialogs.cc	/^static void on_open_kernel_activate(GtkMenuItem *, gpointer user_data)$/;"	f	file:
on_open_socket	apps/clicky/src/dialogs.cc	/^void wmain::on_open_socket()$/;"	f	class:clicky::wmain
on_open_socket_activate	apps/clicky/src/dialogs.cc	/^static void on_open_socket_activate(GtkMenuItem *, gpointer user_data)$/;"	f	file:
on_paste1_activate	apps/clicky/src/xcallbacks.c	/^on_paste1_activate                     (GtkMenuItem     *menuitem,$/;"	f
on_pending_list	include/click/task.hh	/^    inline bool on_pending_list() const {$/;"	f	class:Task
on_preferences	apps/clicky/src/whandler.cc	/^void whandler::on_preferences(int action)$/;"	f	class:clicky::whandler
on_preferences1_activate	apps/clicky/src/xcallbacks.c	/^on_preferences1_activate               (GtkMenuItem     *menuitem,$/;"	f
on_properties1_activate	apps/clicky/src/xcallbacks.c	/^on_properties1_activate                (GtkMenuItem     *menuitem,$/;"	f
on_quit_activate	apps/clicky/src/dialogs.cc	/^static void on_quit_activate(GtkMenuItem *, gpointer)$/;"	f	file:
on_save_activate	apps/clicky/src/dialogs.cc	/^static void on_save_activate(GtkMenuItem *, gpointer user_data)$/;"	f	file:
on_save_as_activate	apps/clicky/src/dialogs.cc	/^static void on_save_as_activate(GtkMenuItem *, gpointer user_data)$/;"	f	file:
on_save_file	apps/clicky/src/dialogs.cc	/^void wmain::on_save_file(bool save_as)$/;"	f	class:clicky::wmain
on_scheduled_list	include/click/task.hh	/^Task::on_scheduled_list() const$/;"	f	class:Task
on_throbber_changed	apps/clicky/src/crouter.hh	/^    virtual void on_throbber_changed(bool show) {$/;"	f	class:clicky::crouter
on_throbber_changed	apps/clicky/src/wmain.cc	/^void wmain::on_throbber_changed(bool show)$/;"	f	class:clicky::wmain
on_toolbar_configuration_activate	apps/clicky/src/dialogs.cc	/^static void on_toolbar_configuration_activate(GtkToolButton *, gpointer user_data)$/;"	f	file:
on_toolbar_diagram_activate	apps/clicky/src/dialogs.cc	/^static void on_toolbar_diagram_activate(GtkToolButton *, gpointer user_data)$/;"	f	file:
on_toolbar_run_activate	apps/clicky/src/dialogs.cc	/^static void on_toolbar_run_activate(GtkToolButton *, gpointer user_data)$/;"	f	file:
on_toolbar_stop_activate	apps/clicky/src/dialogs.cc	/^static void on_toolbar_stop_activate(GtkToolButton *, gpointer user_data)$/;"	f	file:
on_view_configuration_toggled	apps/clicky/src/dialogs.cc	/^static void on_view_configuration_toggled(GtkCheckMenuItem *check, gpointer user_data)$/;"	f	file:
on_view_diagram_toggled	apps/clicky/src/dialogs.cc	/^static void on_view_diagram_toggled(GtkCheckMenuItem *check, gpointer user_data)$/;"	f	file:
on_view_element_toggled	apps/clicky/src/dialogs.cc	/^static void on_view_element_toggled(GtkCheckMenuItem *check, gpointer user_data)$/;"	f	file:
on_view_list_toggled	apps/clicky/src/dialogs.cc	/^static void on_view_list_toggled(GtkCheckMenuItem *check, gpointer user_data)$/;"	f	file:
on_view_toolbar_toggled	apps/clicky/src/dialogs.cc	/^static void on_view_toolbar_toggled(GtkCheckMenuItem *check, gpointer user_data)$/;"	f	file:
on_zoom_fit_activate	apps/clicky/src/dialogs.cc	/^static void on_zoom_fit_activate(GtkMenuItem *, gpointer user_data)$/;"	f	file:
on_zoom_in_activate	apps/clicky/src/dialogs.cc	/^static void on_zoom_in_activate(GtkMenuItem *, gpointer user_data)$/;"	f	file:
on_zoom_out_activate	apps/clicky/src/dialogs.cc	/^static void on_zoom_out_activate(GtkMenuItem *, gpointer user_data)$/;"	f	file:
onc	elements/local/OpenFlow/datapath.hh	/^	struct onc_param onc;$/;"	m	class:Datapath	typeref:struct:Datapath::onc_param
onc_param	elements/local/OpenFlow/datapath.hh	/^struct onc_param {$/;"	s
one_char_doodad	apps/clicky/src/permstr.cc	/^PermString::Doodad PermString::one_char_doodad[256];$/;"	m	class:PermString	file:
one_char_doodad	apps/clicky/src/permstr.hh	/^    static Doodad zero_char_doodad, one_char_doodad[256], *buckets[NHASH];$/;"	m	class:PermString
one_elementlist	doc/click-elem2man	/^sub one_elementlist ($@) {$/;"	s
one_includeroot	linuxmodule/fixincludes.pl	/^sub one_includeroot ($$) {$/;"	s
one_profile_report	lib/string.cc	/^String::one_profile_report(StringAccum &sa, int i, int examples)$/;"	f	class:String
one_selected	elements/userlevel/kerneltun.cc	/^KernelTun::one_selected(const Timestamp &now)$/;"	f	class:KernelTun
one_summary	doc/click-elem2man	/^sub one_summary ($@) {$/;"	s
onezero	etc/samplepackage/configure	/^onezero () {$/;"	f
onpref_initial	apps/clicky/src/whandler.hh	/^    enum { onpref_initial, onpref_showpref, onpref_prefok, onpref_prefcancel };$/;"	e	enum:clicky::whandler::__anon23
onpref_prefcancel	apps/clicky/src/whandler.hh	/^    enum { onpref_initial, onpref_showpref, onpref_prefok, onpref_prefcancel };$/;"	e	enum:clicky::whandler::__anon23
onpref_prefok	apps/clicky/src/whandler.hh	/^    enum { onpref_initial, onpref_showpref, onpref_prefok, onpref_prefcancel };$/;"	e	enum:clicky::whandler::__anon23
onpref_showpref	apps/clicky/src/whandler.hh	/^    enum { onpref_initial, onpref_showpref, onpref_prefok, onpref_prefcancel };$/;"	e	enum:clicky::whandler::__anon23
oom_data	include/click/string.hh	/^    static const char oom_data;$/;"	m	class:String
oom_data	lib/string.cc	/^const char String::oom_data = '\\0';$/;"	m	class:String	file:
oom_string_rep	include/click/string.hh	/^    static const rep_t oom_string_rep;$/;"	m	class:String
oom_string_rep	lib/string.cc	/^const String::rep_t String::oom_string_rep = {$/;"	m	class:String	file:
ooowin	elements/ipsec/sadatatuple.hh	/^    uint8_t  ooowin;	\/* out-of-order window size *\/$/;"	m	class:SADataTuple
op	include/clicknet/dhcp.h	/^	uint8_t  op;           \/* message type *\/$/;"	m	struct:click_dhcp
opParseMode	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^	uint32_t opParseMode;$/;"	m	class:PFMpeg2AdaptFW
opcode_bits	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t opcode_bits;$/;"	m	struct:e1000_eeprom_info
opcode_bits	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t opcode_bits;$/;"	m	struct:e1000_eeprom_info
open	elements/analysis/fromflandump.cc	/^FromFlanDump::FlanFile::open(const String &basename, const String &filename, int record_size, ErrorHandler *errh)$/;"	f	class:FromFlanDump::FlanFile
open	elements/local/OpenFlow/lib/vconn-provider.hh	/^    int (*open)(const char *name, char *suffix, struct vconn **vconnp);$/;"	m	struct:vconn_class
open_compress_pipe	lib/userutils.cc	/^open_compress_pipe(const String &filename, ErrorHandler *errh)$/;"	f
open_log	elements/grid/gridlogger.cc	/^GridLogger::open_log(const String &filename)$/;"	f	class:GridLogger
open_output_file	tools/click-pretty/click-pretty.cc	/^open_output_file(const char *outfile, ErrorHandler *errh)$/;"	f	file:
open_output_file	tools/click2xml/click2xml.cc	/^open_output_file(const char *outfile, ErrorHandler *errh)$/;"	f	file:
open_packet_socket	elements/userlevel/fromdevice.cc	/^FromDevice::open_packet_socket(String ifname, ErrorHandler *errh)$/;"	f	class:FromDevice
open_pcap	elements/userlevel/fromdevice.cc	/^FromDevice::open_pcap(String ifname, int snaplen, bool promisc,$/;"	f	class:FromDevice
open_socket_helper	apps/clicky/src/dialogs.cc	/^struct open_socket_helper {$/;"	s	file:
open_socket_timeout_helper	apps/clicky/src/dialogs.cc	/^static gboolean open_socket_timeout_helper(gpointer user_data)$/;"	f	file:
open_socket_writable_helper	apps/clicky/src/dialogs.cc	/^static gboolean open_socket_writable_helper(GIOChannel *, GIOCondition, gpointer user_data)$/;"	f	file:
open_uncompress_pipe	lib/userutils.cc	/^open_uncompress_pipe(const String &filename, const unsigned char *buf, int len, ErrorHandler *errh)$/;"	f
openflow_action	elements/local/OpenFlow/lib/dp_act.cc	/^struct openflow_action {$/;"	s	file:
openflow_ext_set_dp_desc	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^struct openflow_ext_set_dp_desc {$/;"	s
openflow_family	elements/local/OpenFlow/lib/dpif.cc	/^static int openflow_family;$/;"	v	file:
openflow_multicast_policy	elements/local/OpenFlow/lib/dpif.cc	/^static struct nl_policy openflow_multicast_policy[DP_GENL_A_DP_NAME+1];$/;"	v	typeref:struct:nl_policy	file:
openflow_packet	elements/local/OpenFlow/lib/ofp-print.cc	/^struct openflow_packet {$/;"	s	file:
openflow_policy	elements/local/OpenFlow/lib/dpif.cc	/^static struct nl_policy openflow_policy[DP_GENL_A_OPENFLOW+1];$/;"	v	typeref:struct:nl_policy	file:
openflow_queue_command_header	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^struct openflow_queue_command_header {$/;"	s
openflow_queue_error_code	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^enum openflow_queue_error_code {$/;"	g
operator !	apps/clicky/src/dwidget.hh	/^	bool operator!() const {$/;"	f	class:clicky::delt::iterator
operator !	apps/clicky/src/permstr.hh	/^inline bool PermString::operator!() const$/;"	f	class:PermString
operator !	apps/clicky/src/rectangle.hh	/^    bool operator!() const {$/;"	f	struct:point
operator !	apps/clicky/src/ref.hh	/^    bool operator!() const {$/;"	f	class:ref_ptr
operator !	include/click/straccum.hh	/^    bool operator!() const {$/;"	f	class:StringAccum
operator !	include/click/string.hh	/^    inline bool operator!() const {$/;"	f	class:String
operator !=	apps/clicky/src/dwidget.hh	/^	bool operator!=(const iterator &x) const {$/;"	f	class:clicky::delt::iterator
operator !=	apps/clicky/src/hvalues.hh	/^inline bool operator!=(handler_value_iterator a, handler_value_iterator b) {$/;"	f	namespace:clicky
operator !=	apps/clicky/src/permstr.hh	/^inline bool operator!=(PermString a, PermString b)$/;"	f
operator !=	apps/clicky/src/permstr.hh	/^inline bool operator!=(PermString a, const String &b)$/;"	f
operator !=	apps/clicky/src/permstr.hh	/^inline bool operator!=(PermString a, const char *b)$/;"	f
operator !=	apps/clicky/src/permstr.hh	/^inline bool operator!=(const String &a, PermString b)$/;"	f
operator !=	apps/clicky/src/permstr.hh	/^inline bool operator!=(const char *a, PermString b)$/;"	f
operator !=	apps/clicky/src/rectangle.hh	/^inline bool operator!=(const point &a, const point &b) {$/;"	f
operator !=	apps/clicky/src/ref.hh	/^inline bool operator!=(const ref_ptr<T> &a, const ref_ptr<U> &b)$/;"	f
operator !=	elements/ipsec/sadatatuple.hh	/^	operator!=(SPI b)$/;"	f	class:SPI
operator !=	elements/wifi/path.hh	/^operator!=(const Path &p1, const Path &p2)$/;"	f
operator !=	include/click/atomic.hh	/^operator!=(const atomic_uint32_t &a, const atomic_uint32_t &b)$/;"	f
operator !=	include/click/bitvector.hh	/^    bool operator!=(const Bitvector &x) const {$/;"	f	class:Bitvector
operator !=	include/click/dequeue.hh	/^	bool operator!=(const const_iterator &i) const { return _pos != i._pos || _q._l != i._q._l;  }$/;"	f	struct:DEQueue::const_iterator
operator !=	include/click/etheraddress.hh	/^operator!=(const EtherAddress &a, const EtherAddress &b)$/;"	f
operator !=	include/click/glue.hh	/^operator!=(const struct timeval &a, const struct timeval &b)$/;"	f
operator !=	include/click/hashcontainer.hh	/^operator!=(const HashContainer_const_iterator<T, A> &a, const HashContainer_const_iterator<T, A> &b)$/;"	f
operator !=	include/click/hashmap.hh	/^operator!=(const _HashMap_const_iterator<K, V> &a, const _HashMap_const_iterator<K, V> &b)$/;"	f
operator !=	include/click/hashtable.hh	/^inline bool operator!=(const HashTable_const_iterator<T> &a, const HashTable_const_iterator<T> &b)$/;"	f
operator !=	include/click/ip6address.hh	/^operator!=(const IP6Address &a, const IP6Address &b)$/;"	f
operator !=	include/click/ipaddress.hh	/^operator!=(IPAddress a, IPAddress b)$/;"	f
operator !=	include/click/ipaddress.hh	/^operator!=(IPAddress a, uint32_t b)$/;"	f
operator !=	include/click/ipflowid.hh	/^inline bool operator!=(const IPFlowID &a, const IPFlowID &b)$/;"	f
operator !=	include/click/list.hh	/^	bool operator!=(const_iterator x) const {$/;"	f	class:List::const_iterator
operator !=	include/click/notifier.hh	/^operator!=(const NotifierSignal& a, const NotifierSignal& b)$/;"	f
operator !=	include/click/pair.hh	/^inline bool operator!=(const Pair<T, U> &a, const Pair<T, U> &b)$/;"	f
operator !=	include/click/router.hh	/^	bool operator!=(const Port &x) const {$/;"	f	struct:Router::Port
operator !=	include/click/string.hh	/^inline bool operator!=(const String &a, const String &b) {$/;"	f
operator !=	include/click/string.hh	/^inline bool operator!=(const String &a, const char *b) {$/;"	f
operator !=	include/click/string.hh	/^inline bool operator!=(const char *a, const String &b) {$/;"	f
operator !=	include/click/timestamp.hh	/^operator!=(const Timestamp &a, const Timestamp &b)$/;"	f
operator !=	tools/click-align/alignment.hh	/^Alignment::operator!=(const Alignment &x) const$/;"	f	class:Alignment
operator !=	tools/click-fastclassifier/click-fastclassifier.cc	/^operator!=(const Classifier_Insn &s1, const Classifier_Insn &s2)$/;"	f
operator !=	tools/click-fastclassifier/click-fastclassifier.cc	/^operator!=(const Classifier_Program &c1, const Classifier_Program &c2)$/;"	f
operator !=	tools/lib/elementt.hh	/^operator!=(const PortT &h1, const PortT &h2)$/;"	f
operator !=	tools/lib/routert.hh	/^operator!=(const RouterT::conn_iterator &i, const RouterT::conn_iterator &j)$/;"	f
operator !=	tools/lib/routert.hh	/^operator!=(const RouterT::const_iterator &i, const RouterT::const_iterator &j)$/;"	f
operator !=	tools/lib/routert.hh	/^operator!=(const RouterT::const_type_iterator &i, const RouterT::const_iterator &j)$/;"	f
operator !=	tools/lib/routert.hh	/^operator!=(const RouterT::const_type_iterator &i, const RouterT::const_type_iterator &j)$/;"	f
operator &	apps/clicky/src/rectangle.hh	/^    bool operator&(const rectangle &o) const {$/;"	f	struct:rectangle
operator &	include/click/bitvector.hh	/^Bitvector::operator&(const Bitvector &o) const$/;"	f	class:Bitvector
operator &	include/click/ip6address.hh	/^operator&(const IP6Address &a, const IP6Address &b)$/;"	f
operator &	include/click/ip6address.hh	/^operator&(const click_in6_addr &a, const IP6Address &b)$/;"	f
operator &	include/click/ipaddress.hh	/^operator&(IPAddress a, IPAddress b)$/;"	f
operator &	tools/click-align/alignment.hh	/^operator&(Alignment a, const Alignment &b)$/;"	f
operator &=	include/click/atomic.hh	/^atomic_uint32_t::operator&=(uint32_t mask)$/;"	f	class:atomic_uint32_t
operator &=	include/click/bitvector.hh	/^    Bit &operator&=(bool x) {$/;"	f	class:Bitvector::Bit
operator &=	include/click/ip6address.hh	/^IP6Address::operator&=(const IP6Address &x)$/;"	f	class:IP6Address
operator &=	include/click/ip6address.hh	/^IP6Address::operator&=(const click_in6_addr &x)$/;"	f	class:IP6Address
operator &=	include/click/ipaddress.hh	/^IPAddress::operator&=(IPAddress a)$/;"	f	class:IPAddress
operator &=	lib/bitvector.cc	/^Bitvector::operator&=(const Bitvector &o)$/;"	f	class:Bitvector
operator &=	tools/click-align/alignment.cc	/^Alignment::operator&=(const Alignment &x)$/;"	f	class:Alignment
operator ()	apps/clicky/src/crouter.hh	/^	bool operator()(const String &context, int eindex) const {$/;"	f	struct:clicky::crouter::reachable_t
operator ()	elements/analysis/timesortedsched.hh	/^	inline bool operator()(packet_s &a, packet_s &b) {$/;"	f	struct:TimeSortedSched::heap_less
operator ()	elements/grid/dsrroutetable.hh	/^    bool operator()(const Packet *p) {$/;"	f	struct:DSRRouteTable::link_filter
operator ()	elements/ip/ipfragmentmap.hh	/^	bool operator()(Entry *a, Entry *b) {$/;"	f	struct:IPFragmentMap::less
operator ()	elements/ip/ipfragmentmap.hh	/^	void operator()(Entry **it) {$/;"	f	struct:IPFragmentMap::place
operator ()	elements/ip/iprwmapping.hh	/^	inline bool operator()(IPRewriterFlow *a, IPRewriterFlow *b) {$/;"	f	struct:IPRewriterFlow::heap_less
operator ()	elements/ip/iprwmapping.hh	/^	inline void operator()(IPRewriterFlow **begin, IPRewriterFlow **it) {$/;"	f	struct:IPRewriterFlow::heap_place
operator ()	elements/test/heaptest.cc	/^    void operator()(Pair<int, int> *begin, Pair<int, int> *x) {$/;"	f	struct:__anon408::place_intpair
operator ()	elements/test/queueyanktest.cc	/^    bool operator()(const Packet *p) {$/;"	f	struct:__anon402::Foo
operator ()	include/click/algorithm.hh	/^    bool operator()(const T &x, const T &y) {$/;"	f	struct:less
operator ()	include/click/algorithm.hh	/^    void operator()(const T &) {$/;"	f	struct:do_nothing
operator ()	include/click/algorithm.hh	/^    void operator()(const T &, const U &) {$/;"	f	struct:do_nothing
operator ()	include/click/timerset.hh	/^	inline bool operator()(const heap_element &a, const heap_element &b) {$/;"	f	struct:TimerSet::heap_less
operator ()	include/click/timerset.hh	/^	inline void operator()(heap_element *begin, heap_element *t) {$/;"	f	struct:TimerSet::heap_place
operator ()	ns/CUT_BinHeap.h	/^  Data&  operator()(Pix xx) const {$/;"	f	class:CUT_BinHeap
operator *	apps/clicky/src/dwidget.hh	/^	delt &operator*() const {$/;"	f	class:clicky::delt::iterator
operator *	apps/clicky/src/hvalues.hh	/^    inline handler_value &operator*() const {$/;"	f	struct:clicky::handler_value_iterator
operator *	apps/clicky/src/permstr.hh	/^    inline char operator*() const {$/;"	f	class:PermString
operator *	apps/clicky/src/rectangle.hh	/^inline point operator*(const point &a, const point &b) {$/;"	f
operator *	apps/clicky/src/rectangle.hh	/^inline point operator*(const point &a, double b) {$/;"	f
operator *	apps/clicky/src/rectangle.hh	/^inline point operator*(double a, const point &b) {$/;"	f
operator *	apps/clicky/src/ref.hh	/^    T &operator*() const {$/;"	f	class:ref_ptr
operator *	apps/clicky/src/transform.hh	/^operator*(affine t, double scale)$/;"	f
operator *	apps/clicky/src/transform.hh	/^operator*(const affine &t, const affine &tt)$/;"	f
operator *	apps/clicky/src/transform.hh	/^operator*(const affine &t, const point &p)$/;"	f
operator *	include/click/dequeue.hh	/^	T &operator*() const { return const_cast<T &>(const_iterator::operator*()); }$/;"	f	struct:DEQueue::iterator
operator *	include/click/dequeue.hh	/^	const T &operator*()  const { return _q[_pos];  }$/;"	f	struct:DEQueue::const_iterator
operator *	include/click/hashcontainer.hh	/^    T &operator*() const {$/;"	f	class:HashContainer_const_iterator
operator *	include/click/hashtable.hh	/^    const Pair<K, V> &operator*() const {$/;"	f	class:HashTable_const_iterator
operator *	include/click/hashtable.hh	/^    const T &operator*() const {$/;"	f	class:HashTable_const_iterator
operator *	include/click/hashtable.hh	/^    inline Pair<K, V> &operator*() const {$/;"	f	class:HashTable_iterator
operator *	include/click/hashtable.hh	/^    inline T &operator*() const {$/;"	f	class:HashTable_iterator
operator *	include/click/list.hh	/^	T &operator*() const {$/;"	f	class:List::iterator
operator *	include/click/list.hh	/^	const T &operator*() const {$/;"	f	class:List::const_iterator
operator *	include/click/timestamp.hh	/^operator*(const Timestamp &a, double b)$/;"	f
operator *	include/click/timestamp.hh	/^operator*(const Timestamp &a, int b)$/;"	f
operator *	include/click/timestamp.hh	/^operator*(const Timestamp &a, unsigned b)$/;"	f
operator *	include/click/timestamp.hh	/^operator*(double a, const Timestamp &b)$/;"	f
operator *	include/click/timestamp.hh	/^operator*(int a, const Timestamp &b)$/;"	f
operator *	include/click/timestamp.hh	/^operator*(unsigned a, const Timestamp &b)$/;"	f
operator *	tools/lib/routert.hh	/^    ElementT &operator*() const		{ return const_cast<ElementT &>(*_e); }$/;"	f	class:RouterT::iterator
operator *	tools/lib/routert.hh	/^    ElementT &operator*() const		{ return const_cast<ElementT &>(*_e); }$/;"	f	class:RouterT::type_iterator
operator *	tools/lib/routert.hh	/^    const ConnectionT &operator*() const	{ return *_conn; }$/;"	f	class:RouterT::conn_iterator
operator *	tools/lib/routert.hh	/^    const ElementT &operator*() const	{ return *_e; }$/;"	f	class:RouterT::const_iterator
operator *	tools/lib/routert.hh	/^    const ElementT &operator*() const	{ return *_e; }$/;"	f	class:RouterT::const_type_iterator
operator *=	apps/clicky/src/transform.hh	/^operator*=(affine &t, const affine &tt)$/;"	f
operator *=	apps/clicky/src/transform.hh	/^operator*=(affine &t, double scale)$/;"	f
operator *=	apps/clicky/src/transform.hh	/^operator*=(point &p, const affine &t)$/;"	f
operator +	apps/clicky/src/permstr.cc	/^PermString operator+(PermString p1, PermString p2)$/;"	f
operator +	apps/clicky/src/rectangle.hh	/^inline point operator+(const point &a, const point &b) {$/;"	f
operator +	apps/clicky/src/transform.hh	/^operator+(affine t, const point &p)$/;"	f
operator +	include/click/atomic.hh	/^operator+(const atomic_uint32_t &a, const atomic_uint32_t &b)$/;"	f
operator +	include/click/glue.hh	/^operator+(struct timeval a, const struct timeval &b)$/;"	f
operator +	include/click/list.hh	/^	const_iterator operator+(int x) const {$/;"	f	class:List::const_iterator
operator +	include/click/list.hh	/^	iterator operator+(int x) const {$/;"	f	class:List::iterator
operator +	include/click/notifier.hh	/^operator+(NotifierSignal a, const NotifierSignal& b)$/;"	f
operator +	include/click/string.hh	/^inline String operator+(String a, char b) {$/;"	f
operator +	include/click/string.hh	/^inline String operator+(String a, const String &b) {$/;"	f
operator +	include/click/string.hh	/^inline String operator+(String a, const char *b) {$/;"	f
operator +	include/click/string.hh	/^inline String operator+(const char *a, const String &b) {$/;"	f
operator +	include/click/timestamp.hh	/^operator+(Timestamp a, const Timestamp &b)$/;"	f
operator +	ns/nsclick-test.cc	/^    SimTime operator+(SimTime rhs) const {$/;"	f	class:Simulator::SimTime
operator +	tools/click-align/alignment.hh	/^operator+(Alignment a, int offset)$/;"	f
operator +	tools/lib/routert.hh	/^operator+(RouterT::conn_iterator it, int x)$/;"	f
operator ++	apps/clicky/src/dwidget.hh	/^	void operator++() {$/;"	f	class:clicky::delt::iterator
operator ++	apps/clicky/src/hvalues.hh	/^    inline void operator++() {$/;"	f	struct:clicky::handler_value_iterator
operator ++	apps/clicky/src/hvalues.hh	/^    inline void operator++(int) {$/;"	f	struct:clicky::handler_value_iterator
operator ++	include/click/atomic.hh	/^atomic_uint32_t::operator++()$/;"	f	class:atomic_uint32_t
operator ++	include/click/atomic.hh	/^atomic_uint32_t::operator++(int)$/;"	f	class:atomic_uint32_t
operator ++	include/click/dequeue.hh	/^	const_iterator &operator++() { _pos++; return *this; }$/;"	f	struct:DEQueue::const_iterator
operator ++	include/click/dequeue.hh	/^	const_iterator operator++(int) { const_iterator t = *this; ++*this; return t; }$/;"	f	struct:DEQueue::const_iterator
operator ++	include/click/hashcontainer.hh	/^    void operator++() {$/;"	f	class:HashContainer_const_iterator
operator ++	include/click/hashcontainer.hh	/^    void operator++(int) {$/;"	f	class:HashContainer_const_iterator
operator ++	include/click/hashmap.cc	/^_HashMap_const_iterator<K, V>::operator++(int)$/;"	f	class:_HashMap_const_iterator
operator ++	include/click/hashmap.cc	/^_HashMap_const_iterator<K, void *>::operator++(int)$/;"	f	class:_HashMap_const_iterator
operator ++	include/click/hashmap.hh	/^    void operator++()		{ _i.operator++(); }$/;"	f	class:_HashMap_const_iterator
operator ++	include/click/hashmap.hh	/^    void operator++(int)	{ _i.operator++(0); }$/;"	f	class:_HashMap_const_iterator
operator ++	include/click/hashmap.hh	/^  void operator++()			{ (*this)++; }$/;"	f	class:_HashMap_const_iterator
operator ++	include/click/hashtable.hh	/^    void operator++() {$/;"	f	class:HashTable_const_iterator
operator ++	include/click/hashtable.hh	/^    void operator++(int) {$/;"	f	class:HashTable_const_iterator
operator ++	include/click/list.hh	/^	void operator++() {$/;"	f	class:List::const_iterator
operator ++	include/click/list.hh	/^	void operator++(int) {$/;"	f	class:List::const_iterator
operator ++	tools/lib/elementmap.cc	/^ElementMap::TraitsIterator::operator++(int)$/;"	f	class:ElementMap::TraitsIterator
operator ++	tools/lib/routert.hh	/^    void operator++()			{ if (_e) step(_e->router(), eindex()+1);}$/;"	f	class:RouterT::const_iterator
operator ++	tools/lib/routert.hh	/^    void operator++(int)		{ ++(*this); }$/;"	f	class:RouterT::const_iterator
operator ++	tools/lib/routert.hh	/^RouterT::conn_iterator::operator++()$/;"	f	class:RouterT::conn_iterator
operator ++	tools/lib/routert.hh	/^RouterT::conn_iterator::operator++(int)$/;"	f	class:RouterT::conn_iterator
operator ++	tools/lib/routert.hh	/^RouterT::const_type_iterator::operator++()$/;"	f	class:RouterT::const_type_iterator
operator ++	tools/lib/routert.hh	/^RouterT::const_type_iterator::operator++(int)$/;"	f	class:RouterT::const_type_iterator
operator +=	apps/clicky/src/transform.hh	/^operator+=(affine &t, const point &p)$/;"	f
operator +=	include/click/atomic.hh	/^atomic_uint32_t::operator+=(int32_t delta)$/;"	f	class:atomic_uint32_t
operator +=	include/click/dequeue.hh	/^	const_iterator &operator+=(int n) { _pos += n; return *this; }$/;"	f	struct:DEQueue::const_iterator
operator +=	include/click/glue.hh	/^operator+=(struct timeval &a, const struct timeval &b)$/;"	f
operator +=	include/click/list.hh	/^	const_iterator &operator+=(int x) {$/;"	f	class:List::const_iterator
operator +=	include/click/list.hh	/^	iterator &operator+=(int x) {$/;"	f	class:List::iterator
operator +=	include/click/string.hh	/^    inline String &operator+=(char c) {$/;"	f	class:String
operator +=	include/click/string.hh	/^    inline String &operator+=(const String &x) {$/;"	f	class:String
operator +=	include/click/string.hh	/^    inline String &operator+=(const char *cstr) {$/;"	f	class:String
operator +=	include/click/timestamp.hh	/^operator+=(Timestamp &a, const Timestamp &b)$/;"	f
operator +=	lib/notifier.cc	/^NotifierSignal::operator+=(const NotifierSignal &x)$/;"	f	class:NotifierSignal
operator +=	tools/click-align/alignment.cc	/^Alignment::operator+=(int delta)$/;"	f	class:Alignment
operator -	apps/clicky/src/rectangle.hh	/^inline point operator-(const point &a, const point &b) {$/;"	f
operator -	include/click/atomic.hh	/^operator-(const atomic_uint32_t &a, const atomic_uint32_t &b)$/;"	f
operator -	include/click/bitvector.hh	/^Bitvector::operator-(const Bitvector &o) const$/;"	f	class:Bitvector
operator -	include/click/glue.hh	/^operator-(struct timeval a, const struct timeval &b)$/;"	f
operator -	include/click/list.hh	/^	const_iterator operator-(int x) const {$/;"	f	class:List::const_iterator
operator -	include/click/list.hh	/^	iterator operator-(int x) const {$/;"	f	class:List::iterator
operator -	include/click/timestamp.hh	/^operator-(Timestamp a, const Timestamp &b)$/;"	f
operator -	include/click/timestamp.hh	/^operator-(const Timestamp &a)$/;"	f
operator -	tools/click-align/alignment.hh	/^operator-(Alignment a, int offset)$/;"	f
operator --	include/click/atomic.hh	/^atomic_uint32_t::operator--()$/;"	f	class:atomic_uint32_t
operator --	include/click/atomic.hh	/^atomic_uint32_t::operator--(int)$/;"	f	class:atomic_uint32_t
operator --	include/click/dequeue.hh	/^	const_iterator &operator--() { _pos--; return *this; }$/;"	f	struct:DEQueue::const_iterator
operator --	include/click/dequeue.hh	/^	const_iterator operator--(int) { const_iterator t = *this; --*this; return t; }$/;"	f	struct:DEQueue::const_iterator
operator --	include/click/list.hh	/^	void operator--() {$/;"	f	class:List::const_iterator
operator --	include/click/list.hh	/^	void operator--(int) {$/;"	f	class:List::const_iterator
operator -=	include/click/atomic.hh	/^atomic_uint32_t::operator-=(int32_t delta)$/;"	f	class:atomic_uint32_t
operator -=	include/click/bitvector.hh	/^    Bit &operator-=(bool x) {$/;"	f	class:Bitvector::Bit
operator -=	include/click/bitvector.hh	/^Bitvector::operator-=(const Bitvector &o)$/;"	f	class:Bitvector
operator -=	include/click/dequeue.hh	/^	const_iterator &operator-=(int n) { _pos -= n; return *this; }$/;"	f	struct:DEQueue::const_iterator
operator -=	include/click/glue.hh	/^operator-=(struct timeval &a, const struct timeval &b)$/;"	f
operator -=	include/click/list.hh	/^	const_iterator &operator-=(int x) {$/;"	f	class:List::const_iterator
operator -=	include/click/list.hh	/^	iterator &operator-=(int x) {$/;"	f	class:List::iterator
operator -=	include/click/timestamp.hh	/^operator-=(Timestamp &a, const Timestamp &b)$/;"	f
operator -=	tools/click-align/alignment.hh	/^Alignment::operator-=(int offset)$/;"	f	class:Alignment
operator ->	apps/clicky/src/dwidget.hh	/^	delt *operator->() const {$/;"	f	class:clicky::delt::iterator
operator ->	apps/clicky/src/hvalues.hh	/^    inline handler_value *operator->() const {$/;"	f	struct:clicky::handler_value_iterator
operator ->	apps/clicky/src/ref.hh	/^    T *operator->() const {$/;"	f	class:ref_ptr
operator ->	include/click/dequeue.hh	/^	T *operator->() const { return const_cast<T *>(const_iterator::operator->()); }$/;"	f	struct:DEQueue::iterator
operator ->	include/click/dequeue.hh	/^	const T *operator->() const { return &_q[_pos]; }$/;"	f	struct:DEQueue::const_iterator
operator ->	include/click/hashcontainer.hh	/^    T *operator->() const {$/;"	f	class:HashContainer_const_iterator
operator ->	include/click/hashtable.hh	/^    const Pair<K, V> *operator->() const {$/;"	f	class:HashTable_const_iterator
operator ->	include/click/hashtable.hh	/^    const T *operator->() const {$/;"	f	class:HashTable_const_iterator
operator ->	include/click/hashtable.hh	/^    inline Pair<K, V> *operator->() const {$/;"	f	class:HashTable_iterator
operator ->	include/click/hashtable.hh	/^    inline T *operator->() const {$/;"	f	class:HashTable_iterator
operator ->	include/click/list.hh	/^	T *operator->() const {$/;"	f	class:List::iterator
operator ->	include/click/list.hh	/^	const T *operator->() const {$/;"	f	class:List::const_iterator
operator ->	tools/lib/routert.hh	/^    ElementT *operator->() const	{ return const_cast<ElementT *>(_e); }$/;"	f	class:RouterT::iterator
operator ->	tools/lib/routert.hh	/^    ElementT *operator->() const	{ return const_cast<ElementT *>(_e); }$/;"	f	class:RouterT::type_iterator
operator ->	tools/lib/routert.hh	/^    const ConnectionT *operator->() const	{ return _conn; }$/;"	f	class:RouterT::conn_iterator
operator ->	tools/lib/routert.hh	/^    const ElementT *operator->() const	{ return _e; }$/;"	f	class:RouterT::const_iterator
operator ->	tools/lib/routert.hh	/^    const ElementT *operator->() const	{ return _e; }$/;"	f	class:RouterT::const_type_iterator
operator /	apps/clicky/src/rectangle.hh	/^inline point operator\/(const point &a, const point &b) {$/;"	f
operator /	apps/clicky/src/rectangle.hh	/^inline point operator\/(const point &a, double b) {$/;"	f
operator /	include/click/timestamp.hh	/^operator\/(const Timestamp &a, const Timestamp &b)$/;"	f
operator /	include/click/timestamp.hh	/^operator\/(const Timestamp &a, double b)$/;"	f
operator /	include/click/timestamp.hh	/^operator\/(const Timestamp &a, int b)$/;"	f
operator /	include/click/timestamp.hh	/^operator\/(const Timestamp &a, unsigned b)$/;"	f
operator <	apps/clicky/src/dstyle.cc	/^static bool operator<(const dcss_property &a, const dcss_property &b)$/;"	f	namespace:clicky
operator <	apps/clicky/src/dstyle.hh	/^inline bool operator<(const dcss &a, const dcss &b)$/;"	f	namespace:clicky
operator <	apps/clicky/src/permstr.hh	/^inline bool operator<(PermString a, PermString b)$/;"	f
operator <	include/click/atomic.hh	/^operator<(const atomic_uint32_t &a, const atomic_uint32_t &b)$/;"	f
operator <	include/click/glue.hh	/^operator<(const struct timeval &a, const struct timeval &b)$/;"	f
operator <	include/click/pair.hh	/^inline bool operator<(const Pair<T, U> &a, const Pair<T, U> &b)$/;"	f
operator <	include/click/router.hh	/^	bool operator<(const Connection &x) const {$/;"	f	struct:Router::Connection
operator <	include/click/router.hh	/^	bool operator<(const Port &x) const {$/;"	f	struct:Router::Port
operator <	include/click/string.hh	/^inline bool operator<(const String &a, const String &b) {$/;"	f
operator <	include/click/timestamp.hh	/^operator<(const Timestamp &a, const Timestamp &b)$/;"	f
operator <	include/click/timestamp.hh	/^operator<(const Timestamp &a, int b)$/;"	f
operator <	ns/nsclick-test.cc	/^      bool operator<(const netif& rhs) const {$/;"	f	struct:TestClickSimulator::netif
operator <	ns/nsclick-test.cc	/^    bool operator<(const struct timeval& tv) const {$/;"	f	class:Simulator::SimTime
operator <	tools/lib/elementt.hh	/^operator<(const PortT &h1, const PortT &h2)$/;"	f
operator <<	apps/clicky/src/permstr.cc	/^StringAccum &operator<<(StringAccum &sa, PermString x)$/;"	f
operator <<	elements/ip/iproutetable.hh	/^operator<<(StringAccum& sa, const IPRoute& route)$/;"	f
operator <<	elements/ipsec/ipsecroutetable.hh	/^operator<<(StringAccum& sa, const IPsecRoute& route)$/;"	f
operator <<	elements/standard/classification.cc	/^operator<<(StringAccum &sa, const Insn &e)$/;"	f	namespace:Classification::Wordwise
operator <<	include/click/ip6address.hh	/^operator<<(StringAccum &sa, const IP6Address &a) {$/;"	f
operator <<	include/click/straccum.hh	/^operator<<(StringAccum &sa, PermString s)$/;"	f
operator <<	include/click/straccum.hh	/^operator<<(StringAccum &sa, bool b)$/;"	f
operator <<	include/click/straccum.hh	/^operator<<(StringAccum &sa, char c)$/;"	f
operator <<	include/click/straccum.hh	/^operator<<(StringAccum &sa, const String &str)$/;"	f
operator <<	include/click/straccum.hh	/^operator<<(StringAccum &sa, const StringAccum &sb)$/;"	f
operator <<	include/click/straccum.hh	/^operator<<(StringAccum &sa, const char *cstr)$/;"	f
operator <<	include/click/straccum.hh	/^operator<<(StringAccum &sa, int i)$/;"	f
operator <<	include/click/straccum.hh	/^operator<<(StringAccum &sa, int64_t q)$/;"	f
operator <<	include/click/straccum.hh	/^operator<<(StringAccum &sa, long long q)$/;"	f
operator <<	include/click/straccum.hh	/^operator<<(StringAccum &sa, short i)$/;"	f
operator <<	include/click/straccum.hh	/^operator<<(StringAccum &sa, uint64_t q)$/;"	f
operator <<	include/click/straccum.hh	/^operator<<(StringAccum &sa, unsigned char c)$/;"	f
operator <<	include/click/straccum.hh	/^operator<<(StringAccum &sa, unsigned long long q)$/;"	f
operator <<	include/click/straccum.hh	/^operator<<(StringAccum &sa, unsigned short u)$/;"	f
operator <<	include/click/straccum.hh	/^operator<<(StringAccum &sa, unsigned u)$/;"	f
operator <<	lib/etheraddress.cc	/^operator<<(StringAccum &sa, const EtherAddress &ea)$/;"	f
operator <<	lib/ipaddress.cc	/^operator<<(StringAccum &sa, IPAddress ipa)$/;"	f
operator <<	lib/ipflowid.cc	/^operator<<(StringAccum &sa, const IPFlowID &flow_id)$/;"	f
operator <<	lib/straccum.cc	/^operator<<(StringAccum &sa, double d)$/;"	f
operator <<	lib/straccum.cc	/^operator<<(StringAccum &sa, long i)$/;"	f
operator <<	lib/straccum.cc	/^operator<<(StringAccum &sa, unsigned long u)$/;"	f
operator <<	lib/straccum.cc	/^operator<<(StringAccum &sa, void *ptr)$/;"	f
operator <<	lib/timestamp.cc	/^operator<<(StringAccum &sa, const Timestamp& ts)$/;"	f
operator <<	lib/timestamp.cc	/^operator<<(StringAccum &sa, const struct timeval &tv)$/;"	f
operator <=	include/click/atomic.hh	/^operator<=(const atomic_uint32_t &a, const atomic_uint32_t &b)$/;"	f
operator <=	include/click/glue.hh	/^operator<=(const struct timeval &a, const struct timeval &b)$/;"	f
operator <=	include/click/router.hh	/^	bool operator<=(const Port &x) const {$/;"	f	struct:Router::Port
operator <=	include/click/string.hh	/^inline bool operator<=(const String &a, const String &b) {$/;"	f
operator <=	include/click/timestamp.hh	/^operator<=(const Timestamp &a, const Timestamp &b)$/;"	f
operator <=	include/click/timestamp.hh	/^operator<=(const Timestamp &a, int b)$/;"	f
operator <=	ns/nsclick-test.cc	/^    bool operator<=(const struct timeval& tv) const {$/;"	f	class:Simulator::SimTime
operator <=	tools/click-align/alignment.cc	/^Alignment::operator<=(const Alignment &x) const$/;"	f	class:Alignment
operator <=	tools/lib/elementt.hh	/^operator<=(const PortT &h1, const PortT &h2)$/;"	f
operator =	apps/clicky/src/ref.hh	/^    ref_ptr<T> &operator=(const ref_ptr<T> &r) {$/;"	f	class:ref_ptr
operator =	apps/clicky/src/ref.hh	/^    template <typename U> ref_ptr<T> &operator=(const ref_ptr<U> &r) {$/;"	f	class:ref_ptr
operator =	include/click/atomic.hh	/^atomic_uint32_t::operator=(uint32_t x)$/;"	f	class:atomic_uint32_t
operator =	include/click/bitvector.hh	/^    Bit &operator=(bool x) {$/;"	f	class:Bitvector::Bit
operator =	include/click/bitvector.hh	/^    Bit &operator=(const Bit &x) {$/;"	f	class:Bitvector::Bit
operator =	include/click/dequeue.cc	/^DEQueue<T>::operator=(const DEQueue<T> &o)$/;"	f	class:DEQueue
operator =	include/click/hashmap.cc	/^HashMap<K, V>::operator=(const HashMap<K, V> &o)$/;"	f	class:HashMap
operator =	include/click/hashmap.cc	/^HashMap<K, void *>::operator=(const HashMap<K, void *> &o)$/;"	f	class:HashMap
operator =	include/click/hashmap.hh	/^  HashMap<K, T *> &operator=(const HashMap<K, T *> &o) { return static_cast<HashMap<K, T *> &>(inherited::operator=(o)); }$/;"	f	class:HashMap
operator =	include/click/hashtable.hh	/^    HashTable<K, V> &operator=(const HashTable<K, V> &x) {$/;"	f	class:HashTable
operator =	include/click/hashtable.hh	/^HashTable<T> &HashTable<T>::operator=(const HashTable<T> &o)$/;"	f	class:HashTable
operator =	include/click/ip6address.hh	/^IP6Address::operator=(const click_in6_addr &a)$/;"	f	class:IP6Address
operator =	include/click/notifier.hh	/^NotifierSignal::operator=(const NotifierSignal &x)$/;"	f	class:NotifierSignal
operator =	include/click/pair.hh	/^    Pair<T, U> &operator=(const Pair<V, W> &p) {$/;"	f	struct:Pair
operator =	include/click/straccum.hh	/^    StringAccum &operator=(const StringAccum &x) {$/;"	f	class:StringAccum
operator =	include/click/string.hh	/^    inline String &operator=(const String &x) {$/;"	f	class:String
operator =	include/click/string.hh	/^    inline String &operator=(const char *cstr) {$/;"	f	class:String
operator =	include/click/vector.cc	/^Vector<T>::operator=(const Vector<T> &o)$/;"	f	class:Vector
operator =	include/click/vector.hh	/^    Vector<T*>& operator=(const Vector<T*>& x)$/;"	f	class:Vector
operator =	lib/args.cc	/^Args::operator=(const Args &x)$/;"	f	class:Args
operator =	lib/bitvector.cc	/^Bitvector::operator=(const Bitvector &o)$/;"	f	class:Bitvector
operator =	lib/vectorv.cc	/^Vector<void*>::operator=(const Vector<void*> &o)$/;"	f	class:Vector
operator =	tools/lib/landmarkt.hh	/^LandmarkT::operator=(const LandmarkT &lm)$/;"	f	class:LandmarkT
operator =	tools/lib/lexert.cc	/^LexerT::FileState::operator=(const FileState &x)$/;"	f	class:LexerT::FileState
operator ==	apps/clicky/src/dwidget.hh	/^	bool operator==(const iterator &x) const {$/;"	f	class:clicky::delt::iterator
operator ==	apps/clicky/src/hvalues.hh	/^inline bool operator==(handler_value_iterator a, handler_value_iterator b) {$/;"	f	namespace:clicky
operator ==	apps/clicky/src/permstr.hh	/^inline bool operator==(PermString a, PermString b)$/;"	f
operator ==	apps/clicky/src/permstr.hh	/^inline bool operator==(PermString a, const String &b)$/;"	f
operator ==	apps/clicky/src/permstr.hh	/^inline bool operator==(PermString a, const char *b)$/;"	f
operator ==	apps/clicky/src/permstr.hh	/^inline bool operator==(const String &a, PermString b)$/;"	f
operator ==	apps/clicky/src/permstr.hh	/^inline bool operator==(const char *a, PermString b)$/;"	f
operator ==	apps/clicky/src/rectangle.hh	/^inline bool operator==(const point &a, const point &b) {$/;"	f
operator ==	apps/clicky/src/ref.hh	/^inline bool operator==(const ref_ptr<T> &a, const ref_ptr<U> &b)$/;"	f
operator ==	elements/analysis/aggregateipaddrpair.cc	/^operator==(const AggregateIPAddrPair::HostPair &a, const AggregateIPAddrPair::HostPair &b)$/;"	f	file:
operator ==	elements/analysis/aggregateipflows.cc	/^operator==(const AggregateIPFlows::HostPair &a, const AggregateIPFlows::HostPair &b)$/;"	f	file:
operator ==	elements/grid/dsrroutetable.hh	/^    bool operator==(const ForwardedReqKey &f1) {$/;"	f	class:DSRRouteTable::ForwardedReqKey
operator ==	elements/ipsec/sadatatuple.hh	/^	operator==(SPI b)$/;"	f	class:SPI
operator ==	elements/wifi/linktable.hh	/^    inline bool operator==(IPPair other) const {$/;"	f	class:IPPair
operator ==	elements/wifi/path.hh	/^operator==(const Path &p1, const Path &p2)$/;"	f
operator ==	include/click/atomic.hh	/^operator==(const atomic_uint32_t &a, const atomic_uint32_t &b)$/;"	f
operator ==	include/click/bitvector.hh	/^    bool operator==(const Bitvector &x) const {$/;"	f	class:Bitvector
operator ==	include/click/dequeue.hh	/^	bool operator==(const const_iterator &i) const { return _pos == i._pos && _q._l == i._q._l;  }$/;"	f	struct:DEQueue::const_iterator
operator ==	include/click/etheraddress.hh	/^operator==(const EtherAddress &a, const EtherAddress &b)$/;"	f
operator ==	include/click/glue.hh	/^operator==(const struct timeval &a, const struct timeval &b)$/;"	f
operator ==	include/click/hashcontainer.hh	/^operator==(const HashContainer_const_iterator<T, A> &a, const HashContainer_const_iterator<T, A> &b)$/;"	f
operator ==	include/click/hashmap.hh	/^operator==(const _HashMap_const_iterator<K, V> &a, const _HashMap_const_iterator<K, V> &b)$/;"	f
operator ==	include/click/hashtable.hh	/^inline bool operator==(const HashTable_const_iterator<T> &a, const HashTable_const_iterator<T> &b)$/;"	f
operator ==	include/click/ip6address.hh	/^operator==(const IP6Address &a, const IP6Address &b)$/;"	f
operator ==	include/click/ip6flowid.hh	/^operator==(const IP6FlowID &a, const IP6FlowID &b)$/;"	f
operator ==	include/click/ipaddress.hh	/^operator==(IPAddress a, IPAddress b)$/;"	f
operator ==	include/click/ipaddress.hh	/^operator==(IPAddress a, uint32_t b)$/;"	f
operator ==	include/click/ipflowid.hh	/^inline bool operator==(const IPFlowID &a, const IPFlowID &b)$/;"	f
operator ==	include/click/list.hh	/^	bool operator==(const_iterator x) const {$/;"	f	class:List::const_iterator
operator ==	include/click/notifier.hh	/^operator==(const NotifierSignal& a, const NotifierSignal& b)$/;"	f
operator ==	include/click/pair.hh	/^inline bool operator==(const Pair<T, U> &a, const Pair<T, U> &b)$/;"	f
operator ==	include/click/router.hh	/^	bool operator==(const Connection &x) const {$/;"	f	struct:Router::Connection
operator ==	include/click/router.hh	/^	bool operator==(const Port &x) const {$/;"	f	struct:Router::Port
operator ==	include/click/string.hh	/^inline bool operator==(const String &a, const String &b) {$/;"	f
operator ==	include/click/string.hh	/^inline bool operator==(const String &a, const char *b) {$/;"	f
operator ==	include/click/string.hh	/^inline bool operator==(const char *a, const String &b) {$/;"	f
operator ==	include/click/timestamp.hh	/^operator==(const Timestamp &a, const Timestamp &b)$/;"	f
operator ==	ns/nsclick-test.cc	/^    bool operator==(const netif& rhs) const {$/;"	f	struct:TestClickSimulator::netif
operator ==	ns/nsclick-test.cc	/^    bool operator==(const struct timeval& tv) const {$/;"	f	class:Simulator::SimTime
operator ==	tools/click-align/alignment.hh	/^Alignment::operator==(const Alignment &x) const$/;"	f	class:Alignment
operator ==	tools/click-fastclassifier/click-fastclassifier.cc	/^operator==(const Classifier_Insn &s1, const Classifier_Insn &s2)$/;"	f
operator ==	tools/click-fastclassifier/click-fastclassifier.cc	/^operator==(const Classifier_Program &c1, const Classifier_Program &c2)$/;"	f
operator ==	tools/lib/elementt.hh	/^operator==(const PortT &h1, const PortT &h2)$/;"	f
operator ==	tools/lib/routert.hh	/^operator==(const RouterT::conn_iterator &i, const RouterT::conn_iterator &j)$/;"	f
operator ==	tools/lib/routert.hh	/^operator==(const RouterT::const_iterator &i, const RouterT::const_iterator &j)$/;"	f
operator ==	tools/lib/routert.hh	/^operator==(const RouterT::const_type_iterator &i, const RouterT::const_iterator &j)$/;"	f
operator ==	tools/lib/routert.hh	/^operator==(const RouterT::const_type_iterator &i, const RouterT::const_type_iterator &j)$/;"	f
operator >	include/click/atomic.hh	/^operator>(const atomic_uint32_t &a, const atomic_uint32_t &b)$/;"	f
operator >	include/click/glue.hh	/^operator>(const struct timeval &a, const struct timeval &b)$/;"	f
operator >	include/click/string.hh	/^inline bool operator>(const String &a, const String &b) {$/;"	f
operator >	include/click/timestamp.hh	/^operator>(const Timestamp &a, const Timestamp &b)$/;"	f
operator >	include/click/timestamp.hh	/^operator>(const Timestamp &a, int b)$/;"	f
operator >	ns/nsclick-test.cc	/^    bool operator>(const struct timeval& tv) const {$/;"	f	class:Simulator::SimTime
operator >	tools/lib/elementt.hh	/^operator>(const PortT &h1, const PortT &h2)$/;"	f
operator >=	include/click/atomic.hh	/^operator>=(const atomic_uint32_t &a, const atomic_uint32_t &b)$/;"	f
operator >=	include/click/glue.hh	/^operator>=(const struct timeval &a, const struct timeval &b)$/;"	f
operator >=	include/click/string.hh	/^inline bool operator>=(const String &a, const String &b) {$/;"	f
operator >=	include/click/timestamp.hh	/^operator>=(const Timestamp &a, const Timestamp &b)$/;"	f
operator >=	include/click/timestamp.hh	/^operator>=(const Timestamp &a, int b)$/;"	f
operator >=	tools/lib/elementt.hh	/^operator>=(const PortT &h1, const PortT &h2)$/;"	f
operator IPFlowID	elements/ip/rfc2507c.cc	/^RFC2507c::tcpip::operator IPFlowID() const$/;"	f	class:RFC2507c::tcpip
operator PangoLayout *	apps/clicky/src/dwidget.hh	/^    operator PangoLayout *() const {$/;"	f	struct:clicky::dcontext
operator String	apps/clicky/src/permstr.hh	/^    inline operator String() const {$/;"	f	class:PermString
operator String	include/click/etheraddress.hh	/^EtherAddress::operator String() const$/;"	f	class:EtherAddress
operator String	include/click/ip6address.hh	/^IP6Address::operator String() const$/;"	f	class:IP6Address
operator String	include/click/ip6flowid.hh	/^  operator String() const		{ return unparse(); }$/;"	f	class:IP6FlowID
operator String	include/click/ipaddress.hh	/^IPAddress::operator String() const$/;"	f	class:IPAddress
operator String	include/click/ipflowid.hh	/^inline IPFlowID::operator String() const$/;"	f	class:IPFlowID
operator String	tools/lib/landmarkt.hh	/^LandmarkT::operator String() const$/;"	f	class:LandmarkT
operator []	apps/clicky/src/permstr.hh	/^inline char PermString::operator[](int i) const$/;"	f	class:PermString
operator []	apps/clicky/src/transform.hh	/^    double operator[](int i) const	{ assert(i>=0&&i<6); return _m[i]; }$/;"	f	class:affine
operator []	include/click/bitvector.hh	/^Bitvector::operator[](int i) const$/;"	f	class:Bitvector
operator []	include/click/bitvector.hh	/^Bitvector::operator[](int i)$/;"	f	class:Bitvector
operator []	include/click/dequeue.hh	/^	T &operator[](int n) const { return const_cast<T &>(const_iterator::operator[](n)); }$/;"	f	struct:DEQueue::iterator
operator []	include/click/dequeue.hh	/^	const T &operator[](int n) const { return _q[_pos + n]; }$/;"	f	struct:DEQueue::const_iterator
operator []	include/click/dequeue.hh	/^  T &operator[](int i)			{ return at(i); }$/;"	f	class:DEQueue
operator []	include/click/dequeue.hh	/^  const T &operator[](int i) const	{ return at(i); }$/;"	f	class:DEQueue
operator []	include/click/hashmap.hh	/^  T *operator[](const K &k) const { return reinterpret_cast<T *>(inherited::operator[](k)); }$/;"	f	class:HashMap
operator []	include/click/hashmap.hh	/^HashMap<K, V>::operator[](const K &key) const$/;"	f	class:HashMap
operator []	include/click/hashmap.hh	/^HashMap<K, void *>::operator[](const K &key) const$/;"	f	class:HashMap
operator []	include/click/hashtable.hh	/^    const mapped_type &operator[](const key_type &key) const {$/;"	f	class:HashTable
operator []	include/click/hashtable.hh	/^HashTable<T>::operator[](key_const_reference key)$/;"	f	class:HashTable
operator []	include/click/hashtable.hh	/^inline typename HashTable<K, V>::mapped_type &HashTable<K, V>::operator[](const key_type &key)$/;"	f	class:HashTable
operator []	include/click/router.hh	/^	Port &operator[](int i) {$/;"	f	struct:Router::Connection
operator []	include/click/router.hh	/^	const Port &operator[](int i) const {$/;"	f	struct:Router::Connection
operator []	include/click/routervisitor.hh	/^    Element *operator[](int i) const {$/;"	f	class:ElementTracker
operator []	include/click/straccum.hh	/^    char &operator[](int i) {$/;"	f	class:StringAccum
operator []	include/click/straccum.hh	/^    char operator[](int i) const {$/;"	f	class:StringAccum
operator []	include/click/string.hh	/^    inline char operator[](int i) const {$/;"	f	class:String
operator []	include/click/vector.hh	/^    T &operator[](size_type i) {$/;"	f	class:Vector
operator []	include/click/vector.hh	/^    T* operator[](size_type i) const { return (T*)(Base::operator[](i)); }$/;"	f	class:Vector
operator []	include/click/vector.hh	/^    T*& operator[](size_type i)	{ return (T*&)(Base::at(i)); }$/;"	f	class:Vector
operator []	include/click/vector.hh	/^    const T &operator[](size_type i) const {$/;"	f	class:Vector
operator []	include/click/vector.hh	/^    void* operator[](size_type i) const	{ assert(i>=0 && i<_n); return _l[i]; }$/;"	f	class:Vector
operator []	include/click/vector.hh	/^    void*& operator[](size_type i)	{ assert(i>=0 && i<_n); return _l[i]; }$/;"	f	class:Vector
operator []	tools/lib/routert.hh	/^	ConnectionX *&operator[](int i) { assert(i >= 0 && i <= 1); return end[i]; }$/;"	f	struct:RouterT::Pair
operator []	tools/lib/routert.hh	/^	ConnectionX *operator[](int i) const { assert(i >= 0 && i <= 1); return end[i]; }$/;"	f	struct:RouterT::Pair
operator ^	include/click/bitvector.hh	/^Bitvector::operator^(const Bitvector &o) const$/;"	f	class:Bitvector
operator ^	include/click/ipaddress.hh	/^operator^(IPAddress a, IPAddress b)$/;"	f
operator ^=	include/click/bitvector.hh	/^    Bit &operator^=(bool x) {$/;"	f	class:Bitvector::Bit
operator ^=	include/click/ipaddress.hh	/^IPAddress::operator^=(IPAddress a)$/;"	f	class:IPAddress
operator ^=	lib/bitvector.cc	/^Bitvector::operator^=(const Bitvector &o)$/;"	f	class:Bitvector
operator bool	elements/grid/updateroutes.hh	/^    operator bool() const { return _init; }$/;"	f	class:UpdateGridRoutes::NbrEntry
operator bool	elements/ip/iprwpattern.hh	/^    operator bool() const {$/;"	f	class:IPRewriterPattern
operator bool	elements/ip/rfc2507c.hh	/^    operator bool() const { return(_ip.ip_src.s_addr != 0); }$/;"	f	struct:RFC2507c::tcpip
operator bool	elements/ip/rfc2507d.hh	/^    operator bool() const { return(_ip.ip_src.s_addr != 0); }$/;"	f	struct:RFC2507d::tcpip
operator bool	elements/ipsec/sadatatuple.hh	/^	inline operator bool() const$/;"	f	class:SPI
operator bool	elements/ipsec/sadatatuple.hh	/^     operator bool() const$/;"	f	class:SADataTuple
operator bool	include/click/standard/storage.hh	/^    operator bool() const		{ return _head != _tail; }$/;"	f	class:Storage
operator bool	tools/lib/elementmap.hh	/^    operator bool()			{ return _index < _emap->size(); }$/;"	f	class:ElementMap::TraitsIterator
operator bool	tools/lib/lexert.hh	/^    operator bool() const		{ return _kind != lexEOF; }$/;"	f	class:Lexeme
operator cairo_t *	apps/clicky/src/dwidget.hh	/^    operator cairo_t *() const {$/;"	f	struct:clicky::dcontext
operator click_in6_addr &	include/click/ip6address.hh	/^    operator click_in6_addr &()			{ return _addr; }$/;"	f	class:IP6Address
operator const click_in6_addr &	include/click/ip6address.hh	/^    operator const click_in6_addr &() const	{ return _addr; }$/;"	f	class:IP6Address
operator delete	lib/glue.cc	/^operator delete(void *addr)$/;"	f
operator delete[]	lib/glue.cc	/^operator delete[](void *addr)$/;"	f
operator new	include/click/config-bsdmodule.h	/^inline void *operator new(size_t, void *v) throw () { return v; }$/;"	f
operator new	include/click/config-linuxmodule.h	/^inline void *operator new(size_t, void *v) { return v; }$/;"	f
operator new	include/click/config-userlevel.h	/^inline void *operator new(size_t, void *v) { return v; }$/;"	f
operator new	lib/glue.cc	/^operator new(size_t sz) throw ()$/;"	f
operator new[]	lib/glue.cc	/^operator new[](size_t sz) throw ()$/;"	f
operator struct in_addr	include/click/ipaddress.hh	/^IPAddress::operator struct in_addr() const$/;"	f	class:IPAddress
operator uint32_t	include/click/atomic.hh	/^atomic_uint32_t::operator uint32_t() const$/;"	f	class:atomic_uint32_t
operator uint32_t	include/click/ipaddress.hh	/^    inline operator uint32_t() const {$/;"	f	class:IPAddress
operator unspecified_bool_type	apps/clicky/src/dwidget.hh	/^	operator unspecified_bool_type() const {$/;"	f	class:clicky::delt::iterator
operator unspecified_bool_type	apps/clicky/src/permstr.hh	/^inline PermString::operator unspecified_bool_type() const$/;"	f	class:PermString
operator unspecified_bool_type	apps/clicky/src/rectangle.hh	/^    operator unspecified_bool_type() const {$/;"	f	struct:point
operator unspecified_bool_type	apps/clicky/src/rectangle.hh	/^    operator unspecified_bool_type() const {$/;"	f	struct:rectangle
operator unspecified_bool_type	apps/clicky/src/ref.hh	/^    operator unspecified_bool_type() const {$/;"	f	class:ref_ptr
operator unspecified_bool_type	include/click/bitvector.hh	/^    inline operator unspecified_bool_type() const {$/;"	f	class:Bitvector::Bit
operator unspecified_bool_type	include/click/bitvector.hh	/^    operator unspecified_bool_type() const {$/;"	f	class:Bitvector
operator unspecified_bool_type	include/click/etheraddress.hh	/^    inline operator unspecified_bool_type() const {$/;"	f	class:EtherAddress
operator unspecified_bool_type	include/click/handlercall.hh	/^    operator unspecified_bool_type() const {$/;"	f	class:HandlerCall
operator unspecified_bool_type	include/click/hashcontainer.hh	/^    inline operator unspecified_bool_type() const {$/;"	f	class:HashContainer_const_iterator
operator unspecified_bool_type	include/click/hashmap.hh	/^_HashMap_const_iterator<K, T *>::operator unspecified_bool_type() const$/;"	f	class:_HashMap_const_iterator
operator unspecified_bool_type	include/click/hashmap.hh	/^_HashMap_const_iterator<K, V>::operator unspecified_bool_type() const$/;"	f	class:_HashMap_const_iterator
operator unspecified_bool_type	include/click/hashmap.hh	/^_HashMap_const_iterator<K, void *>::operator unspecified_bool_type() const$/;"	f	class:_HashMap_const_iterator
operator unspecified_bool_type	include/click/hashtable.hh	/^    inline operator unspecified_bool_type() const {$/;"	f	class:HashTable_const_iterator
operator unspecified_bool_type	include/click/ip6address.hh	/^IP6Address::operator unspecified_bool_type() const$/;"	f	class:IP6Address
operator unspecified_bool_type	include/click/ip6flowid.hh	/^IP6FlowID::operator unspecified_bool_type() const$/;"	f	class:IP6FlowID
operator unspecified_bool_type	include/click/ipflowid.hh	/^    operator unspecified_bool_type() const {$/;"	f	class:IPFlowID
operator unspecified_bool_type	include/click/list.hh	/^	operator unspecified_bool_type() const {$/;"	f	class:List::const_iterator
operator unspecified_bool_type	include/click/notifier.hh	/^NotifierSignal::operator unspecified_bool_type() const$/;"	f	class:NotifierSignal
operator unspecified_bool_type	include/click/pair.hh	/^    inline operator unspecified_bool_type() const {$/;"	f	struct:Pair
operator unspecified_bool_type	include/click/straccum.hh	/^    operator unspecified_bool_type() const {$/;"	f	class:StringAccum
operator unspecified_bool_type	include/click/string.hh	/^    inline operator unspecified_bool_type() const {$/;"	f	class:String
operator unspecified_bool_type	include/click/timestamp.hh	/^Timestamp::operator unspecified_bool_type() const$/;"	f	class:Timestamp
operator unspecified_bool_type	tools/lib/elementt.hh	/^    operator unspecified_bool_type() const {$/;"	f	struct:PortT
operator unspecified_bool_type	tools/lib/elementt.hh	/^ConnectionT::operator unspecified_bool_type() const$/;"	f	class:ConnectionT
operator unspecified_bool_type	tools/lib/landmarkt.hh	/^LandmarkT::operator unspecified_bool_type() const$/;"	f	class:LandmarkT
operator unspecified_bool_type	tools/lib/routert.hh	/^    operator unspecified_bool_type() const	{ return _conn ? &conn_iterator::empty : 0; }$/;"	f	class:RouterT::conn_iterator
operator unspecified_bool_type	tools/lib/routert.hh	/^    operator unspecified_bool_type() const { return _e ? &const_iterator::eindex : 0; }$/;"	f	class:RouterT::const_iterator
operator unspecified_bool_type	tools/lib/routert.hh	/^    operator unspecified_bool_type() const { return _e ? &const_type_iterator::eindex : 0; }$/;"	f	class:RouterT::const_type_iterator
operator |	include/click/bitvector.hh	/^Bitvector::operator|(const Bitvector &o) const$/;"	f	class:Bitvector
operator |	include/click/ip6address.hh	/^operator|(const IP6Address &a, const IP6Address &b)$/;"	f
operator |	include/click/ipaddress.hh	/^operator|(IPAddress a, IPAddress b)$/;"	f
operator |	tools/click-align/alignment.hh	/^operator|(Alignment a, const Alignment &b)$/;"	f
operator |=	apps/clicky/src/rectangle.hh	/^    rectangle &operator|=(const point &p) {$/;"	f	struct:rectangle
operator |=	apps/clicky/src/rectangle.hh	/^    rectangle &operator|=(const rectangle &o) {$/;"	f	struct:rectangle
operator |=	include/click/atomic.hh	/^atomic_uint32_t::operator|=(uint32_t mask)$/;"	f	class:atomic_uint32_t
operator |=	include/click/bitvector.hh	/^    Bit &operator|=(bool x) {$/;"	f	class:Bitvector::Bit
operator |=	include/click/ip6address.hh	/^IP6Address::operator|=(const IP6Address &x)$/;"	f	class:IP6Address
operator |=	include/click/ip6address.hh	/^IP6Address::operator|=(const click_in6_addr &x)$/;"	f	class:IP6Address
operator |=	include/click/ipaddress.hh	/^IPAddress::operator|=(IPAddress a)$/;"	f	class:IPAddress
operator |=	lib/bitvector.cc	/^Bitvector::operator|=(const Bitvector &o)$/;"	f	class:Bitvector
operator |=	tools/click-align/alignment.cc	/^Alignment::operator|=(const Alignment &x)$/;"	f	class:Alignment
operator ~	include/click/bitvector.hh	/^Bitvector::operator~() const$/;"	f	class:Bitvector
operator ~	include/click/ip6address.hh	/^operator~(const IP6Address &x)$/;"	f
operator ~	include/click/ipaddress.hh	/^operator~(IPAddress a)$/;"	f
opt	lib/clp.c	/^    const Clp_Option *opt;$/;"	m	struct:Clp_Internal	file:
opt_generation	lib/clp.c	/^    unsigned opt_generation;$/;"	m	struct:Clp_Internal	file:
opt_generation	lib/clp.c	/^    unsigned opt_generation;$/;"	m	struct:Clp_ParserState	file:
optcopy	elements/ip/ipfragmenter.cc	/^IPFragmenter::optcopy(const click_ip *ip1, click_ip *ip2)$/;"	f	class:IPFragmenter
optimize	elements/standard/classification.cc	/^Program::optimize(unsigned sort_stopper)$/;"	f	class:Classification::Wordwise::Program
option_chars	lib/clp.c	/^    char option_chars[Clp_OptionCharsSize];$/;"	m	struct:Clp_Internal	file:
option_chars	lib/clp.c	/^    char option_chars[Clp_OptionCharsSize];$/;"	m	struct:Clp_ParserState	file:
option_id	include/click/clp.h	/^    int option_id;		\/**< User-specified ID defining option,$/;"	m	struct:Clp_Option
option_length	include/clicknet/ether.h	/^    uint8_t option_length;  \/* option length: 1 (in units of 8 octets) *\/$/;"	m	struct:click_nd_adv
option_length	include/clicknet/ether.h	/^    uint8_t option_length; \/*option length: 1 (in units of 8 octets) *\/$/;"	m	struct:click_nd_sol
option_processing	lib/clp.c	/^    int option_processing;$/;"	m	struct:Clp_Internal	file:
option_processing	lib/clp.c	/^    int option_processing;$/;"	m	struct:Clp_ParserState	file:
option_type	include/clicknet/ether.h	/^    uint8_t option_type;    \/* option type: 2 (target link-layer add) *\/$/;"	m	struct:click_nd_adv
option_type	include/clicknet/ether.h	/^    uint8_t option_type;   \/*option type: 1 (source link-layer add) *\/$/;"	m	struct:click_nd_sol
optional	elements/local/OpenFlow/lib/netlink.hh	/^    bool optional;$/;"	m	struct:nl_policy
options	apps/clicky/src/clicky.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	include/clicknet/dhcp.h	/^	uint8_t  options[312]; \/* message options *\/$/;"	m	struct:click_dhcp
options	tools/click-align/click-align.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	tools/click-check/click-check.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	tools/click-combine/click-combine.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	tools/click-combine/click-uncombine.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	tools/click-devirtualize/click-devirtualize.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	tools/click-fastclassifier/click-fastclassifier.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	tools/click-flatten/click-flatten.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	tools/click-install/click-install.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	tools/click-install/click-uninstall.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	tools/click-mkmindriver/click-mkmindriver.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	tools/click-pretty/click-pretty.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	tools/click-undead/click-undead.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	tools/click-xform/click-xform.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	tools/click2xml/click2xml.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	tools/click2xml/xml2click.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options	userlevel/click.cc	/^static const Clp_Option options[] = {$/;"	v	file:
options_x1	elements/test/clptest.cc	/^static const Clp_Option options_x1[] = {$/;"	v	file:
options_x2	elements/test/clptest.cc	/^static const Clp_Option options_x2[] = {$/;"	v	file:
options_x3	elements/test/clptest.cc	/^static const Clp_Option options_x3[] = {$/;"	v	file:
options_x4	elements/test/clptest.cc	/^static const Clp_Option options_x4[] = {$/;"	v	file:
options_x5	elements/test/clptest.cc	/^static const Clp_Option options_x5[] = {$/;"	v	file:
options_x6	elements/test/clptest.cc	/^static const Clp_Option options_x6[] = {$/;"	v	file:
options_x7	elements/test/clptest.cc	/^static const Clp_Option options_x7[] = {$/;"	v	file:
options_x8	elements/test/clptest.cc	/^static const Clp_Option options_x8[] = {$/;"	v	file:
or_with_difference	lib/bitvector.cc	/^Bitvector::or_with_difference(const Bitvector &o, Bitvector &diff)$/;"	f	class:Bitvector
order	elements/analysis/ipsumdumpinfo.hh	/^    int order;$/;"	m	struct:IPSummaryDump::FieldReader
order_anno	elements/analysis/ipsumdumpinfo.hh	/^    order_anno = 100,$/;"	e	enum:IPSummaryDump::__anon262
order_link	elements/analysis/ipsumdumpinfo.hh	/^    order_link = 200,$/;"	e	enum:IPSummaryDump::__anon262
order_net	elements/analysis/ipsumdumpinfo.hh	/^    order_net = 300,$/;"	e	enum:IPSummaryDump::__anon262
order_offset	elements/analysis/ipsumdumpinfo.hh	/^    order_offset = 50$/;"	e	enum:IPSummaryDump::__anon262
order_payload	elements/analysis/ipsumdumpinfo.hh	/^    order_payload = 500,$/;"	e	enum:IPSummaryDump::__anon262
order_transp	elements/analysis/ipsumdumpinfo.hh	/^    order_transp = 400,$/;"	e	enum:IPSummaryDump::__anon262
org_code	include/clicknet/llc.h	/^		uint8_t org_code[3];$/;"	m	struct:click_llc::__anon481::__anon486
orgcode	include/clicknet/rfc1483.h	/^    uint8_t	orgcode[3];$/;"	m	struct:click_rfc1483
orientation	apps/clicky/src/dstyle.hh	/^    int orientation;$/;"	m	struct:clicky::delt_size_style
orientation	apps/clicky/src/dwidget.hh	/^    int orientation() const {$/;"	f	class:clicky::delt
orig_len	elements/linuxmodule/touserdevice.cc	/^    uint32_t orig_len;	     \/* actual length of packet *\/$/;"	m	struct:pcaprec_hdr	file:
orig_len	elements/local/OpenFlow/lib/pcap.cc	/^    uint32_t orig_len;       \/* actual length of packet *\/$/;"	m	struct:pcaprec_hdr	file:
origin	apps/clicky/src/rectangle.hh	/^    point origin() const {$/;"	f	struct:rectangle
original_fc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t original_fc;$/;"	m	struct:e1000_hw
original_fc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t original_fc;$/;"	m	struct:e1000_hw
original_fc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t original_fc;$/;"	m	struct:e1000_hw
original_master_slave	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_ms_type original_master_slave;$/;"	m	struct:e1000_hw
original_master_slave	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_ms_type original_master_slave;$/;"	m	struct:e1000_hw
other	elements/wifi/linktable.hh	/^    bool other(IPAddress foo) const {$/;"	f	class:IPPair
other	lib/lexer.cc	/^  TunnelEnd *other() const		{ return _other; }$/;"	f	class:Lexer::TunnelEnd
other	tools/click-pretty/click-pretty.cc	/^OutputItem::other() const$/;"	f	class:OutputItem
other_index	tools/click-pretty/click-pretty.cc	/^    int other_index() const		{ return _other; }$/;"	f	struct:OutputItem
oui	include/clicknet/fddi.h	/^    uint8_t	oui[3];$/;"	m	struct:click_fddi_snap
out_closed	elements/userlevel/controlsocket.hh	/^	bool out_closed;$/;"	m	struct:ControlSocket::connection
out_of_memory	elements/local/OpenFlow/lib/util.cc	/^out_of_memory(void) $/;"	f
out_of_memory	include/click/straccum.hh	/^    bool out_of_memory() const {$/;"	f	class:StringAccum
out_of_memory	include/click/string.hh	/^    inline bool out_of_memory() const {$/;"	f	class:String
out_of_memory_data	include/click/string.hh	/^    static inline const char *out_of_memory_data() {$/;"	f	class:String
out_pat	conf/click-mkclgw.pl	/^sub out_pat {$/;"	s
out_port	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t out_port;            \/* For OFPFC_DELETE* commands, require$/;"	m	struct:ofp_flow_mod
out_port	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t out_port;        \/* Require matching entries to include this$/;"	m	struct:ofp_aggregate_stats_request
out_port	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t out_port;        \/* Require matching entries to include this$/;"	m	struct:ofp_flow_stats_request
out_script_fn_to_fn	test/testie	/^sub out_script_fn_to_fn ($) {$/;"	s
out_text	elements/userlevel/controlsocket.hh	/^	StringAccum out_text;$/;"	m	struct:ControlSocket::connection
outa	elements/analysis/ipsumdumpinfo.hh	/^    void (*outa)(const PacketDesc &, const FieldWriter *);$/;"	m	struct:IPSummaryDump::FieldWriter
outb	elements/analysis/ipsumdumpinfo.cc	/^void outb(const PacketDesc& d, bool, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
outb	elements/analysis/ipsumdumpinfo.hh	/^    void (*outb)(const PacketDesc &, bool ok, const FieldWriter *);$/;"	m	struct:IPSummaryDump::FieldWriter
outer_loop_timer	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	Timer outer_loop_timer;$/;"	m	class:PFSchedFW
outf	tools/click-pretty/click-pretty.cc	/^    FILE *outf;$/;"	m	struct:PrettyRouter	file:
outgoing_link_entry_t	elements/grid/linkstat.hh	/^    outgoing_link_entry_t() { memset(this, 0, sizeof(*this)); }$/;"	f	struct:LinkStat::outgoing_link_entry_t
outgoing_link_entry_t	elements/grid/linkstat.hh	/^    outgoing_link_entry_t(const link_entry &l, const Timestamp &now, unsigned int t)$/;"	f	struct:LinkStat::outgoing_link_entry_t
outgoing_link_entry_t	elements/grid/linkstat.hh	/^    outgoing_link_entry_t(const unsigned char *d, const Timestamp &now, unsigned int t)$/;"	f	struct:LinkStat::outgoing_link_entry_t
outgoing_link_entry_t	elements/grid/linkstat.hh	/^  struct outgoing_link_entry_t : public link_entry {$/;"	s	class:LinkStat
outpos	elements/userlevel/controlsocket.hh	/^	int outpos;$/;"	m	struct:ControlSocket::connection
output	elements/analysis/anonipaddr.hh	/^	uint32_t output;$/;"	m	struct:AnonymizeIPAddr::Node
output	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::Flow::output(ErrorHandler *errh)$/;"	f	class:ToIPFlowDumps::Flow
output	elements/ip/iprwmapping.hh	/^    int output() const {$/;"	f	class:IPRewriterEntry
output	include/click/element.hh	/^Element::output(int port) const$/;"	f	class:Element
output	tools/click-devirtualize/specializer.cc	/^Specializer::output(StringAccum& out_header, StringAccum& out)$/;"	f	class:Specializer
output_all	elements/local/OpenFlow/datapath.cc	/^int Datapath::output_all(struct ofpbuf *buffer, int in_port, int flood)$/;"	f	class:Datapath
output_binary	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::Flow::output_binary(StringAccum &sa)$/;"	f	class:ToIPFlowDumps::Flow
output_classifier_program	tools/click-fastclassifier/click-fastclassifier.cc	/^output_classifier_program(int which,$/;"	f	file:
output_config	tools/click-pretty/click-pretty.cc	/^output_config(String r_config, FILE *outf)$/;"	f	file:
output_count	elements/analysis/toipsumdump.hh	/^    uint32_t output_count() const	{ return _output_count; }$/;"	f	class:ToIPSummaryDump
output_error	test/testie	/^sub output_error ($$$$) {$/;"	s
output_everything	elements/standard/classification.hh	/^    int output_everything() const {$/;"	f	class:Classification::Wordwise::CompressedProgram
output_everything	elements/standard/classification.hh	/^    int output_everything() const {$/;"	f	class:Classification::Wordwise::Program
output_everything	tools/click-fastclassifier/click-fastclassifier.hh	/^    int output_everything;$/;"	m	struct:Classifier_Program
output_includes	tools/click-devirtualize/specializer.cc	/^Specializer::output_includes(ElementTypeInfo &eti, StringAccum &out)$/;"	f	class:Specializer
output_is_pull	include/click/element.hh	/^Element::output_is_pull(int port) const$/;"	f	class:Element
output_is_push	include/click/element.hh	/^Element::output_is_push(int port) const$/;"	f	class:Element
output_is_push	tools/lib/processingt.hh	/^ProcessingT::output_is_push(int i, int p) const$/;"	f	class:ProcessingT
output_map	tools/click-install/click-install.cc	/^static bool output_map;$/;"	v	file:
output_new_elementmap	tools/click-devirtualize/specializer.cc	/^Specializer::output_new_elementmap(const ElementMap &full_em, ElementMap &em,$/;"	f	class:Specializer
output_package	tools/click-devirtualize/specializer.cc	/^Specializer::output_package(const String &package_name, const String &suffix, StringAccum &out, ErrorHandler* errh)$/;"	f	class:Specializer
output_packet	elements/local/OpenFlow/datapath.cc	/^void Datapath::output_packet(struct ofpbuf *buffer, uint16_t out_port, uint32_t queue_id)$/;"	f	class:Datapath
output_packet	elements/local/OpenFlow/datapath.hh	/^	uint32_t output_packet;$/;"	m	struct:func_stat
output_path	conf/click-mkclgw.pl	/^sub output_path {$/;"	s
output_pattern	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::output_pattern() const$/;"	f	class:ToIPFlowDumps
output_pidx	tools/lib/processingt.hh	/^    int output_pidx(const ConnectionT &conn) const {$/;"	f	class:ProcessingT
output_pidx	tools/lib/processingt.hh	/^    int output_pidx(const PortT &port) const {$/;"	f	class:ProcessingT
output_pidx	tools/lib/processingt.hh	/^    int output_pidx(int eindex, int port = 0) const {$/;"	f	class:ProcessingT
output_port	tools/lib/processingt.hh	/^    PortT output_port(int pidx) const {$/;"	f	class:ProcessingT
output_position	apps/clicky/src/dwidget.cc	/^point delt::output_position(int port, dport_style *dps, bool here) const$/;"	f	class:clicky::delt
output_processing	tools/lib/processingt.hh	/^ProcessingT::output_processing(const PortT &h) const$/;"	f	class:ProcessingT
output_processing	tools/lib/processingt.hh	/^ProcessingT::output_processing(int i, int p) const$/;"	f	class:ProcessingT
output_sorted_one_per_line	tools/click-flatten/click-flatten.cc	/^output_sorted_one_per_line(Vector<String> &v, FILE *out)$/;"	f	file:
output_template_until_tag	tools/click-pretty/html.cc	/^output_template_until_tag(const char *templ, FILE *outf,$/;"	f
output_template_until_tag	tools/click-pretty/html.cc	/^output_template_until_tag(const char *templ, StringAccum &sa,$/;"	f
overderived	include/click/notifier.hh	/^NotifierSignal::overderived() const$/;"	f	class:NotifierSignal
overderived_mask	include/click/notifier.hh	/^	true_mask = 1, false_mask = 2, overderived_mask = 4,$/;"	e	enum:NotifierSignal::__anon432
overderived_signal	include/click/notifier.hh	/^NotifierSignal::overderived_signal()$/;"	f	class:NotifierSignal
overload_compound	lib/lexer.cc	/^Lexer::Compound::overload_compound(Lexer *lexer) const$/;"	f	class:Lexer::Compound
overload_type	tools/lib/eclasst.cc	/^ElementClassT::overload_type() const$/;"	f	class:ElementClassT
overload_type	tools/lib/eclasst.hh	/^    ElementClassT *overload_type() const { return _eclass; }$/;"	f	class:SynonymElementClassT
overload_type	tools/lib/routert.hh	/^    ElementClassT *overload_type() const { return _overload_type; }$/;"	f	class:RouterT
overloaded	tools/lib/eclasst.hh	/^    bool overloaded() const		{ return _eclass->overloaded(); }$/;"	f	class:SynonymElementClassT
overloaded	tools/lib/eclasst.hh	/^    virtual bool overloaded() const	{ return false; }$/;"	f	class:ElementClassT
overloaded	tools/lib/routert.cc	/^RouterT::overloaded() const$/;"	f	class:RouterT
owner	elements/ip/iprwmapping.hh	/^    IPRewriterBase *owner() const {$/;"	f	class:IPRewriterFlow
owner_input	elements/ip/iprwmapping.hh	/^    int owner_input() const {$/;"	f	class:IPRewriterFlow
p	drivers/e1000-4.x/src/e1000_param.c	/^			struct e1000_opt_list { int i; char *str; } *p;$/;"	m	struct:e1000_option::__anon67::__anon69	typeref:struct:e1000_option::__anon67::__anon69::e1000_opt_list	file:
p	drivers/e1000-5.x/src/e1000_param.c	/^			struct e1000_opt_list { int i; char *str; } *p;$/;"	m	struct:e1000_option::__anon164::__anon166	typeref:struct:e1000_option::__anon164::__anon166::e1000_opt_list	file:
p	drivers/e1000-7.x/src/e1000_param.c	/^			struct e1000_opt_list { int i; char *str; } *p;$/;"	m	struct:e1000_option::__anon122::__anon124	typeref:struct:e1000_option::__anon122::__anon124::e1000_opt_list	file:
p	elements/analysis/ipsumdumpinfo.hh	/^    WritablePacket* p;$/;"	m	struct:IPSummaryDump::PacketOdesc
p	elements/analysis/ipsumdumpinfo.hh	/^    const Packet *p;$/;"	m	struct:IPSummaryDump::PacketDesc
p	elements/analysis/timesortedsched.hh	/^	Packet *p;$/;"	m	struct:TimeSortedSched::packet_s
p	elements/ethernet/ip6ndsolicitor.hh	/^    Packet *p;$/;"	m	struct:IP6NDSolicitor::NDEntry
p	elements/grid/dsrroutetable.hh	/^    Packet *p;$/;"	m	class:DSRRouteTable::ForwardedReqVal
p	elements/grid/floodinglocquerier.hh	/^    Packet *p;$/;"	m	struct:FloodingLocQuerier::LocEntry
p	elements/linuxmodule/touserdevice.hh	/^        Packet *p;$/;"	m	struct:ToUserDevice::file_priv
p	elements/wifi/wifidefrag.hh	/^    Packet *p;$/;"	m	struct:WifiDefrag::PacketInfo
p	include/click/confparse.hh	/^	void *p;$/;"	m	union:cp_value::__anon478
p	include/click/confparse.hh	/^	void *p;$/;"	m	union:cp_value::__anon479
p	include/click/router.hh	/^	Port p[2];$/;"	m	struct:Router::Connection
p	include/clicknet/wifi.h	/^		uint8_t 	*p;$/;"	m	struct:wifi_information::challenge
p	include/clicknet/wifi.h	/^		uint8_t 	*p;$/;"	m	struct:wifi_information::rates
p	lib/packet.cc	/^    WritablePacket *p;$/;"	m	struct:__anon510::PacketPool	file:
p80211item_uint32_t	include/clicknet/wifi.h	/^} p80211item_uint32_t;$/;"	t	typeref:struct:__anon497
p8021Q_tag_t	drivers/e1000-4.x/src/ans.h	/^} x8021Q_tag_t, *p8021Q_tag_t;$/;"	t	typeref:struct:_x8021Q_tag_t
pFirstTLV	drivers/e1000-4.x/src/base_comm.h	/^    pPer_Frame_Attribute_Header         pFirstTLV;              \/* NULL if not attributed *\/$/;"	m	struct:_IANS_ATTR_HEADER
pHead	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.hh	/^	Packet* pHead;$/;"	m	class:FrameReceivingBuffer
pLast_Attribute	drivers/e1000-4.x/src/base_comm.h	/^} Last_Attribute, *pLast_Attribute ;$/;"	t	typeref:struct:_Last_Attribute
pNext	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.hh	/^	FrameReceivingBuffer* pNext;$/;"	m	class:FrameReceivingBuffer
pPer_Frame_Attribute_Header	drivers/e1000-4.x/src/base_comm.h	/^} Per_Frame_Attribute_Header, *pPer_Frame_Attribute_Header;$/;"	t	typeref:struct:_Per_Frame_Attribute_Header
pPrev	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.hh	/^	FrameReceivingBuffer* pPrev;$/;"	m	class:FrameReceivingBuffer
pUntagged_Attribute	drivers/e1000-4.x/src/base_comm.h	/^} Untagged_Attribute  , *pUntagged_Attribute ;$/;"	t	typeref:struct:_Untagged_Attribute
pVLAN_ID_Per_Frame_Info	drivers/e1000-4.x/src/base_comm.h	/^} VLAN_ID_Per_Frame_Info  , *pVLAN_ID_Per_Frame_Info ;$/;"	t	typeref:struct:_VLAN_ID_Per_Frame_Info
p_bit_error	elements/standard/randomerror.hh	/^  unsigned p_bit_error() const			{ return _p_bit_error; }$/;"	f	class:RandomBitErrors
p_buffer	elements/local/FlowNet/papmo/PaPMo.hh	/^	struct lfc_buffer* p_buffer;$/;"	m	struct:papmo_thread_arg	typeref:struct:papmo_thread_arg::lfc_buffer
p_c2l	elements/ipsec/sha1_impl.cc	119;"	d	file:
p_c2l	elements/ipsec/sha1_impl.cc	120;"	d	file:
p_c2l_p	elements/ipsec/sha1_impl.cc	141;"	d	file:
p_c2l_p	elements/ipsec/sha1_impl.cc	142;"	d	file:
p_c2nl	elements/ipsec/sha1_impl.cc	73;"	d	file:
p_c2nl	elements/ipsec/sha1_impl.cc	74;"	d	file:
p_c2nl_p	elements/ipsec/sha1_impl.cc	95;"	d	file:
p_c2nl_p	elements/ipsec/sha1_impl.cc	96;"	d	file:
p_thread_liveness	elements/local/FlowNet/papmo/PaPMo.hh	/^	int* p_thread_liveness;$/;"	m	struct:papmo_thread_arg
package	tools/lib/eclasst.cc	/^ElementClassT::package() const$/;"	f	class:ElementClassT
package	tools/lib/elementmap.hh	/^	String package;$/;"	m	struct:ElementMap::Globals
package	tools/lib/elementmap.hh	/^ElementMap::package(const ElementTraits& t) const$/;"	f	class:ElementMap
package	tools/lib/elementmap.hh	/^ElementMap::package(const String& name) const$/;"	f	class:ElementMap
package_hrefs	tools/click-pretty/click-pretty.cc	/^static HashTable<String, String> package_hrefs;$/;"	v	file:
packagesrcdir	etc/pkg-bsdmodule.mk	/^packagesrcdir ?= $(srcdir)$/;"	m
packagesrcdir	etc/pkg-linuxmodule-26.mk	/^packagesrcdir ?= $(srcdir)$/;"	m
packagesrcdir	etc/pkg-linuxmodule.mk	/^packagesrcdir ?= $(srcdir)$/;"	m
packagesrcdir	etc/pkg-userlevel.mk	/^packagesrcdir ?= $(srcdir)$/;"	m
packet	elements/linuxmodule/fastudpflows.hh	/^      Packet *packet;$/;"	m	struct:FastUDPFlows::flow_t
packet	elements/local/FlowNet/common/CongestionDetection.hh	/^	const Packet* packet;$/;"	m	struct:CongestionNotification
packet	elements/standard/simplequeue.hh	/^    Packet* packet(int i) const			{ return _q[i]; }$/;"	f	class:SimpleQueue
packet	elements/tcpudp/snooptcp.hh	/^    Packet *packet;$/;"	m	struct:SnoopTCP::SCacheEntry
packetQueue	elements/local/OpenFlow/RConn.hh	/^	struct SynchronizedPacketQueue packetQueue;	$/;"	m	class:RConn	typeref:struct:RConn::SynchronizedPacketQueue
packet_count	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint64_t packet_count;$/;"	m	struct:nx_flow_end
packet_count	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t packet_count;    \/* Number of packets in flow. *\/$/;"	m	struct:ofp_flow_stats
packet_count	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t packet_count;    \/* Number of packets in flows. *\/$/;"	m	struct:ofp_aggregate_stats_reply
packet_count	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t packet_count;$/;"	m	struct:ofp_flow_removed
packet_count	elements/local/OpenFlow/lib/switch-flow.hh	/^    uint64_t packet_count;      \/* Number of packets seen. *\/$/;"	m	struct:sw_flow
packet_emit_hook	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::packet_emit_hook(const Packet *p, const click_ip *iph, FlowInfo *finfo)$/;"	f	class:AggregateIPFlows
packet_enter	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^int VcCDCORE::packet_enter(Flow* flow_in, const Packet*)$/;"	f	class:VcCDCORE
packet_enter	elements/local/FlowNet/scheduler/CD_algorithms/CD_QueueLoss.cc	/^int VcCDQueueLoss::packet_enter(Flow* flow_in, const Packet* p)$/;"	f	class:VcCDQueueLoss
packet_enter	elements/local/FlowNet/scheduler/CD_algorithms/CD_Threshold.cc	/^int VcCDThreshold::packet_enter(Flow* flow_in, const Packet* p)$/;"	f	class:VcCDThreshold
packet_in_ofpbuf	elements/local/OpenFlow/lib/ofpbuf.cc	/^Packet* packet_in_ofpbuf(struct ofpbuf* b)$/;"	f
packet_leave	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^int VcCDCORE::packet_leave(Flow* flow_in, const Packet*)$/;"	f	class:VcCDCORE
packet_leave	elements/local/FlowNet/scheduler/CD_algorithms/CD_QueueLoss.cc	/^int VcCDQueueLoss::packet_leave(Flow*, const Packet*)$/;"	f	class:VcCDQueueLoss
packet_leave	elements/local/FlowNet/scheduler/CD_algorithms/CD_Threshold.cc	/^int VcCDThreshold::packet_leave(Flow *flow_in, const Packet *p)$/;"	f	class:VcCDThreshold
packet_memory_barrier	include/click/standard/storage.hh	/^Storage::packet_memory_barrier(Packet * volatile &packet, volatile index_type &index)$/;"	f	class:Storage
packet_notifier	elements/linuxmodule/fromdevice.cc	/^static struct notifier_block packet_notifier;$/;"	v	typeref:struct:notifier_block	file:
packet_notifier_hook	elements/linuxmodule/fromdevice.cc	/^packet_notifier_hook(struct notifier_block *nb, unsigned long backlog_len, void *v)$/;"	f	file:
packet_s	elements/analysis/timesortedsched.hh	/^    struct packet_s {$/;"	s	class:TimeSortedSched
packet_to_ofpbuf	elements/local/OpenFlow/lib/ofpbuf.cc	/^struct ofpbuf* packet_to_ofpbuf( Packet* p)$/;"	f
packet_to_ofpbuf_with_headroom	elements/local/OpenFlow/lib/ofpbuf.cc	/^struct ofpbuf* packet_to_ofpbuf_with_headroom( Packet* p, int head_room )$/;"	f
packet_to_ts	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^int FlowMpeg2AdaptEncap::packet_to_ts( struct tspacket_table *ts_table, Packet* p, int vervose )$/;"	f	class:FlowMpeg2AdaptEncap
packet_type_anno	include/click/packet.hh	/^Packet::packet_type_anno() const$/;"	f	class:Packet
packetbuffer	elements/local/OpenFlow/datapath.hh	/^	DatapathPacketBuffer packetbuffer;$/;"	m	class:Datapath
packetctr_t	elements/analysis/aggpktcounter.hh	/^    typedef int64_t packetctr_t;$/;"	t	class:AggregatePacketCounter
packetctr_t	elements/analysis/aggpktcounter.hh	/^    typedef uint64_t packetctr_t;$/;"	t	class:AggregatePacketCounter
packets	elements/local/OpenFlow/lib/ofp-print.cc	/^static const struct openflow_packet packets[] = {$/;"	v	typeref:struct:openflow_packet	file:
packets_received	elements/local/OpenFlow/lib/rconn.cc	/^    unsigned int packets_received;$/;"	m	struct:rconn	file:
packets_sent	elements/local/OpenFlow/lib/rconn.cc	/^    unsigned int packets_sent;$/;"	m	struct:rconn	file:
packno2seqno	elements/analysis/fromcapdump.cc	/^FromCapDump::packno2seqno(uint32_t p)$/;"	f	class:FromCapDump
packno2seqno	elements/analysis/fromcapdump.cc	/^FromCapDump::packno2seqno(uint32_t p, int len)$/;"	f	class:FromCapDump
pad	drivers/e1000-4.x/src/idiag_e1000.h	/^	uint16_t pad;$/;"	m	struct:idiag_e1000_diag_reg_test_param
pad	elements/grid/grid.hh	/^    uint8_t pad;$/;"	m	struct:grid_geocast
pad	elements/ip/lookupiproutemp.hh	/^    int pad[2];$/;"	m	struct:LookupIPRouteMP::cache_entry
pad	elements/ipsec/des.hh	/^    unsigned long pad[2];$/;"	m	union:des_ks_struct::__anon217
pad	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint8_t pad[2];$/;"	m	struct:nx_act_config
pad	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint8_t pad[3];$/;"	m	struct:nx_flow_end_config
pad	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint8_t pad[3];$/;"	m	struct:nx_snat_config
pad	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint8_t pad[4];$/;"	m	struct:nx_action_snat
pad	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint8_t pad[6];$/;"	m	struct:nx_action_header
pad	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    uint8_t pad[6];             \/* Align to 64-bits *\/$/;"	m	struct:openflow_queue_command_header
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad;              \/* Align to 32 bits. *\/$/;"	m	struct:ofp_aggregate_stats_request
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad;              \/* Align to 32 bits. *\/$/;"	m	struct:ofp_flow_stats_request
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad;$/;"	m	struct:ofp_flow_stats
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad;$/;"	m	struct:ofp_packet_in
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[1];           \/* Align to 32-bits. *\/$/;"	m	struct:ofp_flow_removed
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[2];          \/* Align to 32-bits. *\/$/;"	m	struct:ofp_queue_stats
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[2];          \/* Align to 32-bits. *\/$/;"	m	struct:ofp_queue_stats_request
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[2];        \/* 32-bit alignment. *\/$/;"	m	struct:ofp_queue_get_config_request
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[2];        \/* 64-bit alignment. *\/$/;"	m	struct:ofp_packet_queue
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[2];$/;"	m	struct:ofp_action_tp_port
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[2];$/;"	m	struct:ofp_action_vlan_vid
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[3];          \/* Align to 32-bits. *\/$/;"	m	struct:ofp_table_stats
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[3];         \/* Align to 64-bits. *\/$/;"	m	struct:ofp_switch_features
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[3];$/;"	m	struct:ofp_action_nw_tos
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[3];$/;"	m	struct:ofp_action_vlan_pcp
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[4];           \/* Align to 64 bits. *\/$/;"	m	struct:ofp_aggregate_stats_reply
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[4];         \/* Pad to 64-bits. *\/$/;"	m	struct:ofp_port_mod
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[4];       \/* 64-bit alignemnt. *\/$/;"	m	struct:ofp_queue_prop_header
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[4];$/;"	m	struct:ofp_action_header
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[6];           \/* Pad for 64-bit alignment. *\/$/;"	m	struct:ofp_action_enqueue
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[6];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp_port_stats
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[6];       \/* 64-bit alignment *\/$/;"	m	struct:ofp_queue_prop_min_rate
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[6];$/;"	m	struct:ofp_action_dl_addr
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[6];$/;"	m	struct:ofp_port_stats_request
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[6];$/;"	m	struct:ofp_queue_get_config_reply
pad	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad[7];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp_port_status
pad	elements/local/OpenFlow/lib/flow.hh	/^    uint8_t pad[3];$/;"	m	struct:flow
pad	elements/userlevel/fakepcap.hh	/^	uint8_t pad;		\/* pad to a 4-byte boundary *\/$/;"	m	struct:fake_modified_pcap_pkthdr
pad	include/clicknet/wifi.h	/^  uint8_t pad;$/;"	m	struct:click_wifi_extra
pad1	elements/grid/grid.hh	/^    uint8_t pad1, pad2;$/;"	m	struct:grid_hdr
pad1	elements/grid/grid.hh	/^  uint8_t pad1, pad2, pad3;$/;"	m	struct:grid_nbr_encap
pad1	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad1[1];           \/* Align to 64-bits *\/$/;"	m	struct:ofp_match
pad2	elements/grid/grid.hh	/^    uint8_t pad1, pad2;$/;"	m	struct:grid_hdr
pad2	elements/grid/grid.hh	/^  uint8_t pad1, pad2, pad3;$/;"	m	struct:grid_nbr_encap
pad2	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint8_t pad2[2];$/;"	m	struct:nx_snat_config
pad2	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad2[2];           \/* Align to 64-bits *\/$/;"	m	struct:ofp_match
pad2	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad2[2];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp_flow_removed
pad2	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t pad2[6];          \/* Align to 64-bits. *\/$/;"	m	struct:ofp_flow_stats
pad3	elements/grid/grid.hh	/^    uint8_t pad3;			\/\/ assume bool is char aligned$/;"	m	struct:grid_hdr
pad3	elements/grid/grid.hh	/^  uint8_t pad1, pad2, pad3;$/;"	m	struct:grid_nbr_encap
pad4	elements/grid/grid.hh	/^    uint8_t pad4;$/;"	m	struct:grid_hdr
padding	apps/clicky/src/dstyle.hh	/^    double padding[4];$/;"	m	struct:clicky::delt_size_style
padding	elements/analysis/fromdagdump.hh	/^	uint8_t padding;$/;"	m	struct:FromDAGDump::DAGEthernetCell
padding	elements/ip/directiplookup.hh	/^	int16_t padding;$/;"	m	struct:DirectIPLookup::VirtualPort
padding	elements/standard/classification.hh	/^    uint8_t padding;$/;"	m	struct:Classification::Wordwise::Insn
padding	include/click/timerset.hh	/^	uint32_t padding; \/* the structure should have size 16 *\/$/;"	m	struct:TimerSet::heap_element
padding	include/clicknet/icmp.h	/^    uint16_t	padding;		\/* 4-5   should be zero		     *\/$/;"	m	struct:click_icmp_needfrag
padding	include/clicknet/icmp.h	/^    uint32_t	padding;		\/* 4-7   should be zero		     *\/$/;"	m	struct:click_icmp
padding	include/clicknet/icmp.h	/^    uint8_t	padding[3];		\/* 5-7   should be zero		     *\/$/;"	m	struct:click_icmp_paramprob
padding	include/clicknet/icmp6.h	/^    uint16_t padding;$/;"	m	struct:click_icmp6_membership
padding	include/clicknet/icmp6.h	/^    uint32_t padding;			\/* should be zero *\/$/;"	m	struct:click_icmp6
padding	include/clicknet/icmp6.h	/^    uint32_t padding;$/;"	m	struct:click_icmp6_redirect
page_size	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t page_size;$/;"	m	struct:e1000_eeprom_info
page_size	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t page_size;$/;"	m	struct:e1000_eeprom_info
pagnostic	tools/lib/processingt.hh	/^	ppush = 1, ppull = 2, pagnostic = 4, perror = 8$/;"	e	enum:ProcessingT::ProcessingCode
pair	include/click/hashmap.hh	/^    const Pair *pair() const { return reinterpret_cast<const Pair *>(_i.pair()); }$/;"	f	class:_HashMap_const_iterator
pair	include/click/hashmap.hh	/^  Pair *pair() const	{ return const_cast<Pair *>(inherited::pair()); }$/;"	f	class:_HashMap_iterator
pair	include/click/hashmap.hh	/^  const Pair *pair() const		{ return _elt; }$/;"	f	class:_HashMap_const_iterator
pair_with	lib/lexer.cc	/^  void pair_with(TunnelEnd *d) {$/;"	f	class:Lexer::TunnelEnd
papmo	elements/local/FlowNet/common/FlowNetGod.hh	/^	struct papmo papmo;$/;"	m	class:FlowNetGod	typeref:struct:FlowNetGod::papmo
papmo	elements/local/FlowNet/papmo/PaPMo.cc	/^papmo::papmo()$/;"	f	class:papmo
papmo	elements/local/FlowNet/papmo/PaPMo.hh	/^class papmo {$/;"	c
papmo_thread_arg	elements/local/FlowNet/papmo/PaPMo.hh	/^struct papmo_thread_arg {$/;"	s
parameter_type	include/click/etheraddress.hh	/^    typedef const EtherAddress &parameter_type;$/;"	t	class:EtherAddress
parameter_type	include/click/ip6address.hh	/^    typedef const IP6Address &parameter_type;$/;"	t	class:IP6Address
parameter_type	include/click/ipaddress.hh	/^    typedef IPAddress parameter_type;$/;"	t	class:IPAddress
parameter_type	include/click/tokenbucket.hh	/^    typedef P parameter_type;$/;"	t	class:TokenBucketX
parameter_type	include/click/tokenbucket.hh	/^    typedef P parameter_type;$/;"	t	class:TokenRateX
paramset_device	elements/local/FlowNet/common/FlowNetGod.hh	/^struct paramset_device {$/;"	s
paramset_flowtable	elements/local/FlowNet/common/FlowNetGod.hh	/^struct paramset_flowtable {$/;"	s
paramset_mpeg2_shapertable	elements/local/FlowNet/common/FlowNetGod.hh	/^struct paramset_mpeg2_shapertable {$/;"	s
paramset_mpeg2_streamingproxytable	elements/local/FlowNet/common/FlowNetGod.hh	/^struct paramset_mpeg2_streamingproxytable {$/;"	s
paramset_sourceproxytable	elements/local/FlowNet/common/FlowNetGod.hh	/^struct paramset_sourceproxytable {$/;"	s
parent	apps/clicky/src/dwidget.hh	/^    delt *parent() const {$/;"	f	class:clicky::delt
parent	bsdmodule/clickfs_tree.hh	/^	    struct clickfs_dirent *parent;	\/* Parent dir *\/$/;"	m	struct:clickfs_dirent::__anon34::dir_struct	typeref:struct:clickfs_dirent::__anon34::dir_struct::clickfs_dirent
parent	ns/CUT_BinHeap.h	/^      Node* parent;$/;"	m	class:CUT_BinHeap::Node
parent	tools/click-devirtualize/cxxclass.hh	/^  CxxClass *parent(int i) const		{ return _parents[i]; }$/;"	f	class:CxxClass
parent_of	lib/variableenv.cc	/^VariableEnvironment::parent_of(int depth) const$/;"	f	class:VariableEnvironment
parent_property	ns/CUT_BinHeap.h	/^  void parent_property(Node *n) {$/;"	f	class:CUT_BinHeap
parents_flags	click-mkelemmap	/^sub parents_flags ($) {$/;"	s
parents_flow_code	click-mkelemmap	/^sub parents_flow_code ($) {$/;"	s
parents_port_count	click-mkelemmap	/^sub parents_port_count ($) {$/;"	s
parents_processing	click-mkelemmap	/^sub parents_processing ($) {$/;"	s
parse	apps/clicky/src/dstyle.cc	/^const char *dcss::parse(const String &str, const String &media, const char *s)$/;"	f	class:clicky::dcss
parse	apps/clicky/src/dstyle.cc	/^const char *dcss_selector::parse(const String &str, const char *s)$/;"	f	class:clicky::dcss_selector
parse	apps/clicky/src/dstyle.cc	/^void dcss_set::parse(const String &str)$/;"	f	class:clicky::dcss_set
parse	elements/ip/checkipheader.cc	/^CheckIPHeader::InterfacesArg::parse(const String &str,$/;"	f	class:CheckIPHeader::InterfacesArg
parse	elements/ip/checkipheader.cc	/^CheckIPHeader::OldBadSrcArg::parse(const String &str, Vector<IPAddress> &result, Args &args)$/;"	f	class:CheckIPHeader::OldBadSrcArg
parse	elements/ip/ipfieldinfo.cc	/^IPField::parse(const char *begin, const char *end, int proto, IPField *result, ErrorHandler *errh, Element *elt)$/;"	f	class:IPField
parse	elements/ip/iprwpattern.cc	/^IPRewriterPattern::parse(const Vector<String> &words,$/;"	f	class:IPRewriterPattern
parse	include/click/args.hh	/^    bool parse(const String &str, V &result, const ArgContext &args = blank_args) {$/;"	f	struct:BoundedIntArg
parse	include/click/args.hh	/^    bool parse(const String &str, V &result, const ArgContext &args = blank_args) {$/;"	f	struct:IntArg
parse	include/click/args.hh	/^    bool parse(const String &str, V &result, const ArgContext &args = blank_args) {$/;"	f	struct:SaturatingIntArg
parse	include/click/args.hh	/^    static bool parse(const String &, const ArgContext & = blank_args) {$/;"	f	struct:AnyArg
parse	include/click/args.hh	/^    static bool parse(const String &str, String &result, const ArgContext & = blank_args) {$/;"	f	struct:AnyArg
parse	include/click/args.hh	/^    static bool parse(const String &str, String &result, const ArgContext & = blank_args) {$/;"	f	struct:KeywordArg
parse	include/click/args.hh	/^    static bool parse(const String &str, String &result, const ArgContext & = blank_args) {$/;"	f	struct:StringArg
parse	include/click/args.hh	/^    static bool parse(const String &str, String &result, const ArgContext & = blank_args) {$/;"	f	struct:WordArg
parse	include/click/args.hh	/^    static bool parse(const String &str, const ArgContext &, Vector<String> &result) {$/;"	f	struct:AnyArg
parse	include/click/args.hh	/^    template<typename T> bool parse(const String &str, T *&result, const ArgContext &args) {$/;"	f	struct:ElementCastArg
parse	include/click/confparse.hh	/^    cp_parsefunc parse;$/;"	m	struct:cp_argtype
parse	include/click/etheraddress.hh	/^    static bool parse(const String &str, unsigned char *value, const ArgContext &args = blank_args) {$/;"	f	struct:EtherAddressArg
parse	include/click/ipaddress.hh	/^    bool parse(const String &str,$/;"	f	struct:IPPrefixArg
parse	include/click/ipaddress.hh	/^    static bool parse(const String &str, struct in_addr &result,$/;"	f	struct:IPAddressArg
parse	include/click/nameinfo.hh	/^    bool parse(const String &str, int &value, const ArgContext &args) {$/;"	f	struct:NamedIntArg
parse	include/click/timestamp.hh	/^    bool parse(const String &str, Timestamp &value, const ArgContext &args = blank_args) {$/;"	f	struct:TimestampArg
parse	lib/archive.cc	/^ArchiveElement::parse(const String &str, Vector<ArchiveElement> &ar,$/;"	f	class:ArchiveElement
parse	lib/args.cc	/^AnnoArg::parse(const String &str, int &result, const ArgContext &args)$/;"	f	class:AnnoArg
parse	lib/args.cc	/^BandwidthArg::parse(const String &str, uint32_t &result, const ArgContext &args)$/;"	f	class:BandwidthArg
parse	lib/args.cc	/^BoolArg::parse(const String &str, bool &result, const ArgContext &)$/;"	f	class:BoolArg
parse	lib/args.cc	/^DecimalFixedPointArg::parse(const String &str, int32_t &result,$/;"	f	class:DecimalFixedPointArg
parse	lib/args.cc	/^DecimalFixedPointArg::parse(const String &str, uint32_t &iresult,$/;"	f	class:DecimalFixedPointArg
parse	lib/args.cc	/^DecimalFixedPointArg::parse(const String &str, uint32_t &result,$/;"	f	class:DecimalFixedPointArg
parse	lib/args.cc	/^DoubleArg::parse(const String &str, double &result, const ArgContext &args)$/;"	f	class:DoubleArg
parse	lib/args.cc	/^ElementArg::parse(const String &str, Element *&result, const ArgContext &args)$/;"	f	class:ElementArg
parse	lib/args.cc	/^ElementCastArg::parse(const String &str, Element *&result, const ArgContext &args)$/;"	f	class:ElementCastArg
parse	lib/args.cc	/^FilenameArg::parse(const String &str, String &result, const ArgContext &)$/;"	f	class:FilenameArg
parse	lib/args.cc	/^FixedPointArg::parse(const String &str, int32_t &result, const ArgContext &args)$/;"	f	class:FixedPointArg
parse	lib/args.cc	/^FixedPointArg::parse(const String &str, uint32_t &result, const ArgContext &args)$/;"	f	class:FixedPointArg
parse	lib/args.cc	/^IntArg::parse(const char *begin, const char *end, bool is_signed, int size,$/;"	f	class:IntArg
parse	lib/args.cc	/^SecondsArg::parse(const String &str, double &result, const ArgContext &)$/;"	f	class:SecondsArg
parse	lib/args.cc	/^SecondsArg::parse(const String &str, uint32_t &result, const ArgContext &args)$/;"	f	class:SecondsArg
parse	lib/args.cc	/^UnitArg::parse(const char *begin, const char *end, int &power, int &factor) const$/;"	f	class:UnitArg
parse	lib/etheraddress.cc	/^EtherAddressArg::parse(const String &str, Args &args, unsigned char *value)$/;"	f	class:EtherAddressArg
parse	lib/etheraddress.cc	/^EtherAddressArg::parse(const String &str, EtherAddress &value, const ArgContext &args)$/;"	f	class:EtherAddressArg
parse	lib/handlercall.cc	/^HandlerCallArg::parse(const String &str, HandlerCall &result, const ArgContext &args)$/;"	f	class:HandlerCallArg
parse	lib/ip6address.cc	/^IP6AddressArg::parse(const String &str, IP6Address &result, const ArgContext &args)$/;"	f	class:IP6AddressArg
parse	lib/ip6address.cc	/^IP6PrefixArg::parse(const String &str,$/;"	f	class:IP6PrefixArg
parse	lib/ipaddress.cc	/^IPAddressArg::parse(const String &str, IPAddress &result, const ArgContext &args)$/;"	f	class:IPAddressArg
parse	lib/ipaddress.cc	/^IPAddressArg::parse(const String &str, Vector<IPAddress> &result, const ArgContext &args)$/;"	f	class:IPAddressArg
parse	lib/ipaddress.cc	/^IPPortArg::parse(const String &str, uint16_t &result, const ArgContext &args) const$/;"	f	class:IPPortArg
parse	lib/ipaddress.cc	/^IPPrefixArg::parse(const String &str,$/;"	f	class:IPPrefixArg
parse	test/testie	/^sub parse ($) {$/;"	s
parse	tools/lib/elementmap.cc	/^ElementMap::parse(const String &str, ErrorHandler *errh)$/;"	f	class:ElementMap
parse	tools/lib/elementmap.cc	/^ElementMap::parse(const String &str, const String &package_name, ErrorHandler *errh)$/;"	f	class:ElementMap
parse_addr	conf/click-mkclgw.pl	/^sub parse_addr {$/;"	s
parse_alignment	tools/click-align/alignclass.cc	/^parse_alignment(ElementT *e, const String &config, bool spacevec, ErrorHandler *errh)$/;"	f	file:
parse_all_files	tools/lib/elementmap.cc	/^ElementMap::parse_all_files(RouterT *r, const String &default_path, ErrorHandler *errh)$/;"	f	class:ElementMap
parse_and_insert	elements/wifi/availablerates.cc	/^AvailableRates::parse_and_insert(String s, ErrorHandler *errh)$/;"	f	class:AvailableRates
parse_anno	lib/error.cc	/^ErrorHandler::parse_anno(const String &str, const char *begin, const char *end,$/;"	f	class:ErrorHandler
parse_arguments	lib/confparse.cc	/^CpVaHelper::parse_arguments(const char *argname,$/;"	f	class:__anon517::CpVaHelper
parse_attribute_value	tools/lib/elementmap.cc	/^parse_attribute_value(String *result,$/;"	f	file:
parse_autorefresh	apps/clicky/src/dstyle.cc	/^static int parse_autorefresh(String str, const char *medium, int *period)$/;"	f	namespace:clicky
parse_background	apps/clicky/src/dstyle.cc	/^void dcss::parse_background(const String &str, const char *s, const char *send)$/;"	f	class:clicky::dcss
parse_bool	lib/clp.c	/^parse_bool(Clp_Parser *clp, const char *arg, int complain, void *user_data)$/;"	f	file:
parse_border	apps/clicky/src/dstyle.cc	/^void dcss::parse_border(const String &str, const char *s, const char *send,$/;"	f	class:clicky::dcss
parse_box	apps/clicky/src/dstyle.cc	/^void dcss::parse_box(const String &str, const char *s, const char *send, const String &prefix)$/;"	f	class:clicky::dcss
parse_brackets	elements/ip/ipfilter.cc	/^parse_brackets(IPFilter::Primitive& prim, const Vector<String>& words, int pos,$/;"	f	file:
parse_class	tools/click-devirtualize/cxxclass.cc	/^CxxInfo::parse_class(const String &text, int p, const String &original,$/;"	f	class:CxxInfo
parse_class_definition	tools/click-devirtualize/cxxclass.cc	/^CxxInfo::parse_class_definition(const String &text, int p,$/;"	f	class:CxxInfo
parse_cluster_label	conf/click-mkclgw.pl	/^sub parse_cluster_label {$/;"	s
parse_columns	tools/click-pretty/click-pretty.cc	/^parse_columns(const String &s, int &which, int &count)$/;"	f	file:
parse_command	elements/userlevel/controlsocket.cc	/^ControlSocket::parse_command(connection &conn, const String &line)$/;"	f	class:ControlSocket
parse_component	tools/lib/etraits.cc	/^ElementTraits::parse_component(const String &s)$/;"	f	class:ElementTraits
parse_configuration	userlevel/click.cc	/^parse_configuration(const String &text, bool text_is_expr, bool hotswap,$/;"	f	file:
parse_connection_dot	apps/clicky/src/dwidget.cc	/^const char *delt::parse_connection_dot(delt *e1, const HashTable<int, delt *> &z_index_lookup, const char *s, const char *end)$/;"	f	class:clicky::delt
parse_control_input	elements/local/OpenFlow/RConn.cc	/^int RConn::parse_control_input(struct rconn_remote *sender, uint32_t xid, const void *msg_in, size_t length)$/;"	f	class:RConn
parse_decimal_fraction	lib/args.cc	/^parse_decimal_fraction(const char *begin, const char *end,$/;"	f	namespace:__anon505
parse_default_file	tools/lib/elementmap.cc	/^ElementMap::parse_default_file(const String &default_path, ErrorHandler *errh)$/;"	f	class:ElementMap
parse_double	lib/clp.c	/^parse_double(Clp_Parser *clp, const char *arg, int complain, void *user_data)$/;"	f	file:
parse_error	conf/click-mkclgw.pl	/^sub parse_error {$/;"	s
parse_expr_iterative	elements/ip/ipfilter.cc	/^IPFilter::Parser::parse_expr_iterative(int pos)$/;"	f	class:IPFilter::Parser
parse_file	tools/click-devirtualize/cxxclass.cc	/^CxxInfo::parse_file(const String &original_text, bool header,$/;"	f	class:CxxInfo
parse_flow_info	tools/lib/processingt.cc	/^ProcessingT::parse_flow_info(ElementT *e, ErrorHandler *)$/;"	f	class:ProcessingT
parse_flow_split	apps/clicky/src/dstyle.cc	/^static String parse_flow_split(const char *begin, const char *end)$/;"	f	namespace:clicky
parse_fraction	lib/args.cc	/^parse_fraction(const char *begin, const char *end,$/;"	f	namespace:__anon505
parse_function_definition	tools/click-devirtualize/cxxclass.cc	/^CxxInfo::parse_function_definition(const String &text, int fn_start_p,$/;"	f	class:CxxInfo
parse_handler	elements/userlevel/controlsocket.cc	/^ControlSocket::parse_handler(connection &conn, const String &full_name, Element **es)$/;"	f	class:ControlSocket
parse_input_spec	elements/ip/iprewriterbase.cc	/^IPRewriterBase::parse_input_spec(const String &line, IPRewriterInput &is,$/;"	f	class:IPRewriterBase
parse_instruction	tools/click-devirtualize/click-devirtualize.cc	/^parse_instruction(const String &text, Signatures &sigs,$/;"	f	file:
parse_instruction_file	tools/click-devirtualize/click-devirtualize.cc	/^parse_instruction_file(const char *filename, Signatures &sigs,$/;"	f	file:
parse_int	lib/clp.c	/^parse_int(Clp_Parser *clp, const char *arg, int complain, void *user_data)$/;"	f	file:
parse_integer_portion	lib/args.cc	/^parse_integer_portion(const char *s, const char *end, int integer_digits,$/;"	f	namespace:__anon505
parse_level	lib/error.cc	/^parse_level(const char *begin, const char *end, int *result)$/;"	f	file:
parse_link	tools/click-combine/click-combine.cc	/^parse_link(String text, ErrorHandler *errh)$/;"	f	file:
parse_markup	apps/clicky/src/dwidget.cc	/^String delt::parse_markup(const String &text, crouter *cr,$/;"	f	class:clicky::delt
parse_packet	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^int FlowMpeg2AdaptEncap::parse_packet( Packet* p_in, WritablePacket** p_out, int* p_out_len, int parsemode ) $/;"	f	class:FlowMpeg2AdaptEncap
parse_port	apps/clicky/src/crouter.cc	/^static const char *parse_port(const char *s, const char *end, int &port)$/;"	f	namespace:clicky
parse_port	apps/clicky/src/crouter.cc	/^static void parse_port(const String &str, String &name, int &port)$/;"	f	namespace:clicky
parse_ports	elements/ip/iprwpattern.cc	/^IPRewriterPattern::parse_ports(const Vector<String> &words,$/;"	f	class:IPRewriterPattern
parse_program	elements/ip/ipfilter.cc	/^IPFilter::parse_program(Classification::Wordwise::CompressedProgram &zprog,$/;"	f	class:IPFilter
parse_program	elements/standard/classifier.cc	/^Classifier::parse_program(Classification::Wordwise::Program &prog,$/;"	f	class:Classifier
parse_requirement_files	tools/lib/elementmap.cc	/^ElementMap::parse_requirement_files(RouterT *r, const String &default_path, ErrorHandler *errh, String *not_found_store)$/;"	f	class:ElementMap
parse_router	bsdmodule/config.cc	/^parse_router(String s)$/;"	f	file:
parse_router	linuxmodule/config.cc	/^parse_router(String s)$/;"	f	file:
parse_rule	conf/click-mkclgw.pl	/^sub parse_rule {$/;"	s
parse_rule_group	conf/click-mkclgw.pl	/^sub parse_rule_group {$/;"	s
parse_saturating	include/click/args.hh	/^    bool parse_saturating(const String &str, V &result, const ArgContext &args = blank_args) {$/;"	f	struct:IntArg
parse_saturating	include/click/args.hh	/^DecimalFixedPointArg::parse_saturating(const String &str, uint32_t &result, const ArgContext &)$/;"	f	class:DecimalFixedPointArg
parse_saturating	include/click/args.hh	/^FixedPointArg::parse_saturating(const String &str, uint32_t &result, const ArgContext &)$/;"	f	class:FixedPointArg
parse_saturating	lib/args.cc	/^DecimalFixedPointArg::parse_saturating(const String &str, int32_t &result,$/;"	f	class:DecimalFixedPointArg
parse_saturating	lib/args.cc	/^DecimalFixedPointArg::parse_saturating(const String &str, uint32_t &iresult,$/;"	f	class:DecimalFixedPointArg
parse_saturating	lib/args.cc	/^FixedPointArg::parse_saturating(const String &str, int32_t &result, const ArgContext &)$/;"	f	class:FixedPointArg
parse_saturating	lib/args.cc	/^SecondsArg::parse_saturating(const String &str, uint32_t &result, const ArgContext &)$/;"	f	class:SecondsArg
parse_server	elements/ip/siphmapper.cc	/^SourceIPHashMapper::parse_server(const String &conf, IPRewriterInput *input,$/;"	f	class:SourceIPHashMapper
parse_shadow	apps/clicky/src/dstyle.cc	/^void dcss::parse_shadow(const String &str, const char *s, const char *send)$/;"	f	class:clicky::dcss
parse_source_file	tools/click-devirtualize/specializer.cc	/^Specializer::parse_source_file(ElementTypeInfo &etinfo,$/;"	f	class:Specializer
parse_split	apps/clicky/src/dstyle.cc	/^void dcss::parse_split(const String &str, const char *s, const char *send)$/;"	f	class:clicky::dcss
parse_state	elements/ip/ipfilter.hh	/^	    parse_state(int s)$/;"	f	struct:IPFilter::Parser::parse_state
parse_state	elements/ip/ipfilter.hh	/^	struct parse_state {$/;"	s	struct:IPFilter::Parser
parse_string	lib/clp.c	/^parse_string(Clp_Parser *clp, const char *arg, int complain, void *user_data)$/;"	f	file:
parse_string_list	lib/clp.c	/^parse_string_list(Clp_Parser *clp, const char *arg, int complain, void *user_data)$/;"	f	file:
parse_tabbed_lines	lib/userutils.cc	/^parse_tabbed_lines(const String &str, Vector<String> *fields1, ...)$/;"	f
parse_test	elements/ip/ipfilter.cc	/^IPFilter::Parser::parse_test(int pos, bool negated)$/;"	f	class:IPFilter::Parser
parse_type	elements/standard/setpackettype.cc	/^SetPacketType::parse_type(const String &s)$/;"	f	class:SetPacketType
parse_with_ports	elements/ip/iprwpattern.cc	/^IPRewriterPattern::parse_with_ports(const String &conf, IPRewriterInput *input,$/;"	f	class:IPRewriterPattern
parse_xml	tools/lib/elementmap.cc	/^ElementMap::parse_xml(const String &str, const String &package_name, ErrorHandler *errh)$/;"	f	class:ElementMap
parse_xml_attrs	tools/lib/elementmap.cc	/^parse_xml_attrs(HashTable<String, String> &attrs,$/;"	f	file:
parsing_header_file	tools/click-devirtualize/cxxclass.cc	/^bool CxxFunction::parsing_header_file;$/;"	m	class:CxxFunction	file:
parsing_header_file	tools/click-devirtualize/cxxclass.hh	/^  static bool parsing_header_file;$/;"	m	class:CxxFunction
part_num	drivers/e1000-4.x/src/e1000.h	/^	uint32_t part_num;$/;"	m	struct:e1000_adapter
part_num	drivers/e1000-5.x/src/e1000.h	/^	uint32_t part_num;$/;"	m	struct:e1000_adapter
partial_uncomment	lib/confparse.cc	/^partial_uncomment(const String &str, int i, int *comma_pos)$/;"	f	file:
pass	include/click/routerthread.hh	/^	unsigned pass;$/;"	m	struct:RouterThread::Client
pass	include/click/routerthread.hh	/^	unsigned pass;$/;"	m	struct:RouterThread::task_heap_element
pass	include/click/routerthread.hh	/^    inline unsigned pass() const {$/;"	f	class:RouterThread
passthrough	apps/clicky/src/dwidget.hh	/^    bool passthrough() const {$/;"	f	class:clicky::delt
pat_high_PID	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t pat_high_PID : 5,$/;"	m	struct:mpeg2psi_pat_loop	file:
pat_high_section_length	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t 	pat_high_section_length : 4,$/;"	m	struct:mpeg2psi_pat	file:
pat_ind_current_next	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pat_ind_current_next : 1,$/;"	m	struct:mpeg2psi_pat	file:
pat_ind_section_syntax	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pat_ind_section_syntax : 1;$/;"	m	struct:mpeg2psi_pat	file:
pat_last_section	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pat_last_section;$/;"	m	struct:mpeg2psi_pat	file:
pat_low_PID	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t pat_low_PID;$/;"	m	struct:mpeg2psi_pat_loop	file:
pat_low_section_length	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pat_low_section_length;$/;"	m	struct:mpeg2psi_pat	file:
pat_name	conf/click-mkclgw.pl	/^sub pat_name { return "dns_pat" ; }$/;"	s
pat_names	tools/click-xform/click-xform.cc	/^static Vector<String> pat_names;$/;"	v	file:
pat_program_number	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint16_t pat_program_number;$/;"	m	struct:mpeg2psi_pat_loop	file:
pat_reserved	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pat_reserved : 2,$/;"	m	struct:mpeg2psi_pat	file:
pat_reserved	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^		pat_reserved : 3;$/;"	m	struct:mpeg2psi_pat_loop	file:
pat_reserved2	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pat_reserved2 : 2;$/;"	m	struct:mpeg2psi_pat	file:
pat_section	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pat_section;$/;"	m	struct:mpeg2psi_pat	file:
pat_table_id	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pat_table_id;$/;"	m	struct:mpeg2psi_pat	file:
pat_ts_id	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint16_t	pat_ts_id;$/;"	m	struct:mpeg2psi_pat	file:
pat_version	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pat_version : 5,$/;"	m	struct:mpeg2psi_pat	file:
pat_zero	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pat_zero : 1,$/;"	m	struct:mpeg2psi_pat	file:
path	elements/local/OpenFlow/lib/vlog-socket.cc	/^    char *path;$/;"	m	struct:vlog_server	file:
path_allows_default_path	lib/userutils.cc	/^path_allows_default_path(String path)$/;"	f
path_cost	elements/local/OpenFlow/lib/stp.cc	/^    int path_cost;                  \/* 8.5.5.3: Cost of tx\/rx on this port. *\/$/;"	m	struct:stp_port	file:
path_find_file_2	lib/userutils.cc	/^path_find_file_2(const String &filename, const String &path,$/;"	f	file:
path_to_string	elements/wifi/path.hh	/^inline String path_to_string(const Path &p)$/;"	f
pattern	elements/ip/iprewriterbase.hh	/^	IPRewriterPattern *pattern;$/;"	m	union:IPRewriterInput::__anon325
pattern	elements/local/OpenFlow/lib/vlog.cc	/^    char *pattern;              \/* Current pattern. *\/$/;"	m	struct:facility	file:
pattern	elements/radio/scramble.cc	/^static unsigned char pattern[] = {$/;"	v	file:
pattern	include/clicknet/wifi.h	/^		uint8_t 	pattern;$/;"	m	struct:wifi_information::fh
pattern_error	elements/ip/iprwpattern.cc	/^pattern_error(int what, ErrorHandler* errh)$/;"	f	namespace:__anon345
pattern_write_handler	elements/ip/iprewriterbase.cc	/^IPRewriterBase::pattern_write_handler(const String &str, Element *e, void *user_data, ErrorHandler *errh)$/;"	f	class:IPRewriterBase
patterns	tools/click-xform/click-xform.cc	/^static Vector<RouterT *> patterns;$/;"	v	file:
patterns_attempted	tools/click-xform/click-xform.cc	/^static int patterns_attempted;$/;"	v	file:
pause	lib/master.cc	/^Master::pause()$/;"	f	class:Master
paused	include/click/master.hh	/^    bool paused() const				{ return _master_paused > 0; }$/;"	f	class:Master
payload	elements/analysis/fromdagdump.hh	/^	uint8_t payload[32];$/;"	m	struct:FromDAGDump::DAGEthernetCell
payload	elements/analysis/fromdagdump.hh	/^	uint8_t payload[44];$/;"	m	struct:FromDAGDump::DAGAAL5Cell
payload	elements/analysis/fromdagdump.hh	/^	uint8_t payload[44];$/;"	m	struct:FromDAGDump::DAGATMCell
payload	elements/analysis/fromdagdump.hh	/^	uint8_t payload[44];$/;"	m	struct:FromDAGDump::DAGPosCell
payload_extract	elements/analysis/ipsumdump_payload.cc	/^static bool payload_extract(PacketDesc &d, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
payload_ina	elements/analysis/ipsumdump_payload.cc	/^static bool payload_ina(PacketOdesc& d, const String &str, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
payload_info	elements/analysis/ipsumdump_payload.cc	/^static void payload_info(const Packet *p, const click_ip *iph, int tailpad,$/;"	f	namespace:IPSummaryDump
payload_inject	elements/analysis/ipsumdump_payload.cc	/^static void payload_inject(PacketOdesc &d, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
payload_len	elements/analysis/toipflowdumps.hh	/^	uint16_t payload_len;$/;"	m	struct:ToIPFlowDumps::Pkt
payload_outa	elements/analysis/ipsumdump_payload.cc	/^static void payload_outa(const PacketDesc& d, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
payload_outb	elements/analysis/ipsumdump_payload.cc	/^static void payload_outb(const PacketDesc& d, bool, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
payload_readers	elements/analysis/ipsumdump_payload.cc	/^static const FieldReader payload_readers[] = {$/;"	m	namespace:IPSummaryDump	file:
payload_synonyms	elements/analysis/ipsumdump_payload.cc	/^static const FieldSynonym payload_synonyms[] = {$/;"	m	namespace:IPSummaryDump	file:
payload_t	elements/grid/linktester.hh	/^  struct payload_t {$/;"	s	class:LinkTester
payload_writers	elements/analysis/ipsumdump_payload.cc	/^static const FieldWriter payload_writers[] = {$/;"	m	namespace:IPSummaryDump	file:
pb	elements/grid/dsdvroutetable.cc	1351;"	d	file:
pb	elements/grid/dsdvroutetable.cc	1367;"	d	file:
pcap	elements/userlevel/fromdevice.hh	/^    pcap_t *pcap() const		{ return _pcap; }$/;"	f	class:FromDevice
pcap	elements/userlevel/ipflowrawsockets.hh	/^	pcap_t *pcap()			{ return _pcap; }$/;"	f	class:IPFlowRawSockets::Flow
pcap_error	elements/userlevel/fromdevice.cc	/^FromDevice::pcap_error(pcap_t *pcap, const char *ebuf)$/;"	f	class:FromDevice
pcap_error	elements/userlevel/fromdevice.hh	/^    const char *pcap_error(const char *ebuf) {$/;"	f	class:FromDevice
pcap_hdr	elements/linuxmodule/touserdevice.cc	/^struct pcap_hdr {$/;"	s	file:
pcap_hdr	elements/local/OpenFlow/lib/pcap.cc	/^struct pcap_hdr {$/;"	s	file:
pcap_open	elements/local/OpenFlow/lib/pcap.cc	/^pcap_open(const char *file_name, const char *mode)$/;"	f
pcap_read	elements/local/OpenFlow/lib/pcap.cc	/^pcap_read(FILE *file, struct ofpbuf **bufp)$/;"	f
pcap_read_header	elements/local/OpenFlow/lib/pcap.cc	/^pcap_read_header(FILE *file)$/;"	f
pcap_write	elements/local/OpenFlow/lib/pcap.cc	/^pcap_write(FILE *file, struct ofpbuf *buf)$/;"	f
pcap_write_header	elements/local/OpenFlow/lib/pcap.cc	/^pcap_write_header(FILE *file)$/;"	f
pcaprec_hdr	elements/linuxmodule/touserdevice.cc	/^struct pcaprec_hdr {$/;"	s	file:
pcaprec_hdr	elements/local/OpenFlow/lib/pcap.cc	/^struct pcaprec_hdr {$/;"	s	file:
pci_alloc_consistent	drivers/e1000-4.x/src/kcompat.h	192;"	d
pci_choose_state	drivers/e1000-7.x/src/kcompat.h	1005;"	d
pci_clear_mwi	drivers/e1000-7.x/src/kcompat.h	637;"	d
pci_cmd_word	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t pci_cmd_word;$/;"	m	struct:e1000_hw
pci_cmd_word	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t pci_cmd_word;$/;"	m	struct:e1000_hw
pci_cmd_word	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t pci_cmd_word;$/;"	m	struct:e1000_hw
pci_dev_driver	drivers/e1000-4.x/src/kcompat.h	165;"	d
pci_device_id	drivers/e1000-4.x/src/kcompat.h	98;"	d
pci_disable_device	drivers/e1000-7.x/src/kcompat.h	621;"	d
pci_dma_mapping_error	drivers/e1000-7.x/src/kcompat.h	867;"	d
pci_dma_sync_single	drivers/e1000-4.x/src/kcompat.h	212;"	d
pci_dma_sync_single_for_cpu	drivers/e1000-5.x/src/kcompat.h	591;"	d
pci_dma_sync_single_for_cpu	drivers/e1000-7.x/src/kcompat.h	885;"	d
pci_dma_sync_single_for_device	drivers/e1000-5.x/src/kcompat.h	592;"	d
pci_dma_sync_single_for_device	drivers/e1000-7.x/src/kcompat.h	886;"	d
pci_driver	drivers/e1000-4.x/src/kcompat.h	108;"	d
pci_drvdata	drivers/e1000-4.x/src/kcompat.c	/^	void *pci_drvdata;$/;"	m	struct:_kc_pci_dev_ext	file:
pci_drvdata	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	void *pci_drvdata;$/;"	m	struct:_kc_pci_dev_ext	file:
pci_enable_device	drivers/e1000-4.x/src/kcompat.h	146;"	d
pci_enable_wake	drivers/e1000-4.x/src/kcompat.h	378;"	d
pci_enable_wake	drivers/e1000-5.x/src/kcompat.h	461;"	d
pci_enable_wake	drivers/e1000-7.x/src/kcompat.h	616;"	d
pci_for_each_dev	drivers/e1000-4.x/src/kcompat.h	161;"	d
pci_free_consistent	drivers/e1000-4.x/src/kcompat.h	197;"	d
pci_get_drvdata	drivers/e1000-4.x/src/kcompat.h	141;"	d
pci_map_page	drivers/e1000-4.x/src/kcompat.h	430;"	d
pci_map_page	drivers/e1000-5.x/src/kcompat.h	513;"	d
pci_map_page	drivers/e1000-7.x/src/kcompat.h	692;"	d
pci_map_single	drivers/e1000-4.x/src/kcompat.h	202;"	d
pci_module_init	drivers/e1000-4.x/src/kcompat.h	126;"	d
pci_name	drivers/e1000-5.x/src/kcompat.h	544;"	d
pci_name	drivers/e1000-7.x/src/kcompat.h	753;"	d
pci_register_driver	drivers/e1000-7.x/src/kcompat.h	828;"	d
pci_register_driver	drivers/e1000-7.x/src/kcompat.h	829;"	d
pci_release_regions	drivers/e1000-4.x/src/kcompat.h	339;"	d
pci_release_regions	drivers/e1000-5.x/src/kcompat.h	409;"	d
pci_release_regions	drivers/e1000-7.x/src/kcompat.h	564;"	d
pci_request_regions	drivers/e1000-4.x/src/kcompat.h	334;"	d
pci_request_regions	drivers/e1000-5.x/src/kcompat.h	404;"	d
pci_request_regions	drivers/e1000-7.x/src/kcompat.h	559;"	d
pci_resource_flags	drivers/e1000-4.x/src/kcompat.h	172;"	d
pci_resource_flags	drivers/e1000-4.x/src/kcompat.h	173;"	d
pci_resource_len	drivers/e1000-4.x/src/kcompat.h	156;"	d
pci_resource_start	drivers/e1000-4.x/src/kcompat.h	151;"	d
pci_restore_state	drivers/e1000-4.x/src/kcompat.h	373;"	d
pci_restore_state	drivers/e1000-5.x/src/kcompat.h	456;"	d
pci_restore_state	drivers/e1000-5.x/src/kcompat.h	662;"	d
pci_restore_state	drivers/e1000-5.x/src/kcompat.h	664;"	d
pci_restore_state	drivers/e1000-7.x/src/kcompat.h	611;"	d
pci_restore_state	drivers/e1000-7.x/src/kcompat.h	965;"	d
pci_restore_state	drivers/e1000-7.x/src/kcompat.h	967;"	d
pci_save_state	drivers/e1000-4.x/src/kcompat.h	368;"	d
pci_save_state	drivers/e1000-5.x/src/kcompat.h	451;"	d
pci_save_state	drivers/e1000-5.x/src/kcompat.h	648;"	d
pci_save_state	drivers/e1000-5.x/src/kcompat.h	650;"	d
pci_save_state	drivers/e1000-7.x/src/kcompat.h	606;"	d
pci_save_state	drivers/e1000-7.x/src/kcompat.h	951;"	d
pci_save_state	drivers/e1000-7.x/src/kcompat.h	953;"	d
pci_set_consistent_dma_mask	drivers/e1000-7.x/src/kcompat.h	856;"	d
pci_set_dma_mask	drivers/e1000-4.x/src/kcompat.h	329;"	d
pci_set_dma_mask	drivers/e1000-5.x/src/kcompat.h	399;"	d
pci_set_dma_mask	drivers/e1000-7.x/src/kcompat.h	554;"	d
pci_set_drvdata	drivers/e1000-4.x/src/kcompat.h	136;"	d
pci_set_mwi	drivers/e1000-7.x/src/kcompat.h	634;"	d
pci_set_power_state	drivers/e1000-4.x/src/kcompat.h	363;"	d
pci_set_power_state	drivers/e1000-5.x/src/kcompat.h	446;"	d
pci_set_power_state	drivers/e1000-7.x/src/kcompat.h	601;"	d
pci_state	drivers/e1000-4.x/src/e1000.h	/^	uint32_t pci_state[16];$/;"	m	struct:e1000_adapter
pci_state	drivers/e1000-5.x/src/e1000.h	/^	uint32_t pci_state[16];$/;"	m	struct:e1000_adapter
pci_unmap_page	drivers/e1000-4.x/src/kcompat.h	435;"	d
pci_unmap_page	drivers/e1000-5.x/src/kcompat.h	518;"	d
pci_unmap_page	drivers/e1000-7.x/src/kcompat.h	697;"	d
pci_unmap_single	drivers/e1000-4.x/src/kcompat.h	207;"	d
pci_unregister_driver	drivers/e1000-4.x/src/kcompat.h	131;"	d
pcix_82544	drivers/e1000-5.x/src/e1000.h	/^	boolean_t pcix_82544;$/;"	m	struct:e1000_adapter
pcix_82544	drivers/e1000-7.x/src/e1000.h	/^	boolean_t pcix_82544;$/;"	m	struct:e1000_adapter
pcount	lib/packet.cc	/^    unsigned pcount;$/;"	m	struct:__anon510::PacketPool	file:
pctrval	linuxmodule/read-pmc.c	/^typedef u_quad_t pctrval;$/;"	t	file:
pd	lib/packet.cc	/^    PacketData *pd;$/;"	m	struct:__anon510::PacketPool	file:
pdcount	lib/packet.cc	/^    unsigned pdcount;$/;"	m	struct:__anon510::PacketPool	file:
pdev	drivers/e1000-4.x/src/e1000.h	/^	struct pci_dev *pdev;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::pci_dev
pdev	drivers/e1000-5.x/src/e1000.h	/^	struct pci_dev *pdev;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::pci_dev
pdev	drivers/e1000-7.x/src/e1000.h	/^	struct pci_dev *pdev;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::pci_dev
pe_messages	elements/ip/iprwpattern.cc	/^static const char* const pe_messages[] = {$/;"	m	namespace:__anon345	file:
peek_line	lib/fromfile.cc	/^FromFile::peek_line(String &result, ErrorHandler *errh, bool temporary)$/;"	f	class:FromFile
peer	elements/local/OpenFlow/datapath.hh	/^	uint32_t peer;$/;"	m	struct:click_port
peer	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t peer;          \/* Features advertised by peer. *\/$/;"	m	struct:ofp_phy_port
pending_to_task	include/click/task.hh	/^Task::pending_to_task() const$/;"	f	class:Task
pending_to_task	include/click/task.hh	/^Task::pending_to_task(uintptr_t ptr)$/;"	f	class:Task
penumbra	apps/clicky/src/dwidget.hh	/^    double penumbra;$/;"	m	struct:clicky::dcontext
pep_fix	elements/grid/pep_proto.hh	/^struct pep_fix {$/;"	s
pep_hh	elements/grid/pep.hh	2;"	d
pep_max_hops	elements/grid/pep_proto.hh	/^static const int pep_max_hops = 10;    \/\/ Don't propagate farther than this.$/;"	v
pep_proto	elements/grid/pep_proto.hh	/^struct pep_proto {$/;"	s
pep_proto_fixes	elements/grid/pep_proto.hh	/^static const int pep_proto_fixes = 5;  \/\/ Max # of fixes in a packet.$/;"	v
pep_proto_hh	elements/grid/pep_proto.hh	2;"	d
pep_purge	elements/grid/pep_proto.hh	/^static const int pep_purge = 100;      \/\/ Delete cache entries older than this.$/;"	v
pep_read_handler	elements/grid/pep.cc	/^pep_read_handler(Element *f, void *)$/;"	f	file:
pep_read_handler	elements/grid/regionpep.cc	/^pep_read_handler(Element *f, void *)$/;"	f	file:
pep_rgn_fix	elements/grid/pep_proto.hh	/^struct pep_rgn_fix {$/;"	s
pep_rgn_proto	elements/grid/pep_proto.hh	/^struct pep_rgn_proto {$/;"	s
pep_stale	elements/grid/pep_proto.hh	/^static const int pep_stale = 5;        \/\/ Don't send fixes older than this.$/;"	v
pep_update	elements/grid/pep_proto.hh	/^static const int pep_update = 1;       \/\/ Broadcast updates this often.$/;"	v
percent_substitute	lib/userutils.cc	/^percent_substitute(const String &pattern, int format1, ...)$/;"	f
period	apps/clicky/src/hvalues.cc	/^    int period;$/;"	m	struct:clicky::__anon22::autorefresher	file:
period	elements/grid/grid.hh	/^  uint32_t period;      \/\/ period of this node's probe broadcasts, in msecs$/;"	m	struct:grid_link_probe
period	elements/grid/linkstat.hh	/^    unsigned int    period;   \/\/ period of this node's probes, as reported by the node$/;"	m	struct:LinkStat::probe_list_t
period	elements/grid/linkstat.hh	/^    unsigned int period;      \/\/ period of this node's probe broadcasts, in msecs$/;"	m	struct:LinkStat::link_probe
period	include/clicknet/wifi.h	/^		uint8_t		period;$/;"	m	struct:wifi_information::cf
period	include/clicknet/wifi.h	/^		uint8_t 	period;$/;"	m	struct:wifi_information::tim
periodic	elements/etherswitch/spantree.cc	/^EtherSpanTree::periodic() {$/;"	f	class:EtherSpanTree
periodic_monitor	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterNoSchedule.cc	/^void VcScheduleOuterNoSchedule::periodic_monitor( int * )$/;"	f	class:VcScheduleOuterNoSchedule
periodic_monitor	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterVirtualpressure.cc	/^void VcScheduleOuterVirtualpressure::periodic_monitor( int *time)$/;"	f	class:VcScheduleOuterVirtualpressure
perm	bsdmodule/clickfs_tree.hh	/^    int perm;$/;"	m	struct:clickfs_dirent
perm	elements/wifi/rc4.hh	/^	unsigned char	perm[256];$/;"	m	struct:rc4_state
perm_mac_addr	drivers/e1000-4.x/src/e1000_hw.h	/^    uint8_t perm_mac_addr[NODE_ADDRESS_SIZE];$/;"	m	struct:e1000_hw
perm_mac_addr	drivers/e1000-5.x/src/e1000_hw.h	/^    uint8_t perm_mac_addr[NODE_ADDRESS_SIZE];$/;"	m	struct:e1000_hw
perm_mac_addr	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t perm_mac_addr[NODE_ADDRESS_SIZE];$/;"	m	struct:e1000_hw
permstring_initializer	apps/clicky/src/dstyle.cc	/^static PermString::Initializer permstring_initializer;$/;"	m	namespace:clicky	file:
perror	tools/lib/processingt.hh	/^	ppush = 1, ppull = 2, pagnostic = 4, perror = 8$/;"	e	enum:ProcessingT::ProcessingCode
pes_10	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pes_10			: 2;$/;"	m	struct:mpeg2pes_optional	file:
pes_copyright	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pes_copyright		: 1,$/;"	m	struct:mpeg2pes_optional	file:
pes_flag_CRC	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pes_flag_CRC		: 1,$/;"	m	struct:mpeg2pes_optional	file:
pes_flag_DSM_trick_mode	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pes_flag_DSM_trick_mode : 1,$/;"	m	struct:mpeg2pes_optional	file:
pes_flag_ESCR_flag	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pes_flag_ESCR_flag	: 1,$/;"	m	struct:mpeg2pes_optional	file:
pes_flag_ES_rate	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pes_flag_ES_rate	: 1,$/;"	m	struct:mpeg2pes_optional	file:
pes_flag_PTS_DTS	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pes_flag_PTS_DTS	: 2;$/;"	m	struct:mpeg2pes_optional	file:
pes_flag_additional_copy_info	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pes_flag_additional_copy_info : 1,$/;"	m	struct:mpeg2pes_optional	file:
pes_flag_extension	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pes_flag_extension	: 1,$/;"	m	struct:mpeg2pes_optional	file:
pes_header_data_length	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pes_header_data_length;$/;"	m	struct:mpeg2pes_optional	file:
pes_ind_data_align	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pes_ind_data_align	: 1,$/;"	m	struct:mpeg2pes_optional	file:
pes_original_or_copy	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pes_original_or_copy	: 1,$/;"	m	struct:mpeg2pes_optional	file:
pes_packet_length	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint16_t	pes_packet_length;$/;"	m	struct:mpeg2pes	file:
pes_priority	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pes_priority		: 1,$/;"	m	struct:mpeg2pes_optional	file:
pes_scramble_ctrl	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pes_scramble_ctrl	: 2,$/;"	m	struct:mpeg2pes_optional	file:
pes_start_prefix	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint32_t	pes_start_prefix : 24,$/;"	m	struct:mpeg2pes	file:
pes_stream_id	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pes_stream_id : 8;$/;"	m	struct:mpeg2pes	file:
peth_vlan_header_t	drivers/e1000-4.x/src/ans.h	/^} eth_vlan_header_t, *peth_vlan_header_t;$/;"	t	typeref:struct:_eth_vlan_header_t
pflag_activity	apps/clicky/src/dstyle.cc	/^    pflag_activity = 32,$/;"	e	enum:clicky::__anon9	file:
pflag_elt	apps/clicky/src/dstyle.cc	/^    pflag_elt = 2,$/;"	e	enum:clicky::__anon9	file:
pflag_elt_size	apps/clicky/src/dstyle.cc	/^    pflag_elt_size = 4,$/;"	e	enum:clicky::__anon9	file:
pflag_fullness	apps/clicky/src/dstyle.cc	/^    pflag_fullness = 16,$/;"	e	enum:clicky::__anon9	file:
pflag_handler	apps/clicky/src/dstyle.cc	/^    pflag_handler = 8,$/;"	e	enum:clicky::__anon9	file:
pflag_no_below	apps/clicky/src/dstyle.cc	/^    pflag_no_below = 64$/;"	e	enum:clicky::__anon9	file:
pflag_port	apps/clicky/src/dstyle.cc	/^    pflag_port = 1,$/;"	e	enum:clicky::__anon9	file:
pflags	apps/clicky/src/dstyle.hh	/^    unsigned pflags() const {$/;"	f	class:clicky::dcss
pfo_next	linuxmodule/proclikefs.c	/^    struct proclikefs_file_operations *pfo_next;$/;"	m	struct:proclikefs_file_operations	typeref:struct:proclikefs_file_operations::proclikefs_file_operations	file:
pfo_op	linuxmodule/proclikefs.c	/^    struct file_operations pfo_op;$/;"	m	struct:proclikefs_file_operations	typeref:struct:proclikefs_file_operations::file_operations	file:
pfs_pfo	linuxmodule/proclikefs.c	/^    struct proclikefs_file_operations *pfs_pfo;$/;"	m	struct:proclikefs_file_system	typeref:struct:proclikefs_file_system::proclikefs_file_operations	file:
pfs_pio	linuxmodule/proclikefs.c	/^    struct proclikefs_inode_operations *pfs_pio;$/;"	m	struct:proclikefs_file_system	typeref:struct:proclikefs_file_system::proclikefs_inode_operations	file:
pfsched	elements/local/FlowNet/common/FlowNetGod.hh	/^	PFSchedFW			*pfsched;$/;"	m	class:FlowNetGod
pfshape	elements/local/FlowNet/common/FlowNetGod.hh	/^	PFShapeFW			*pfshape;$/;"	m	class:FlowNetGod
phy_addr	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t phy_addr;$/;"	m	struct:e1000_hw
phy_addr	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t phy_addr;$/;"	m	struct:e1000_hw
phy_addr	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t phy_addr;$/;"	m	struct:e1000_hw
phy_id	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t phy_id;$/;"	m	struct:e1000_hw
phy_id	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t phy_id;$/;"	m	struct:e1000_hw
phy_id	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t phy_id;$/;"	m	struct:e1000_hw
phy_id	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int phy_id;$/;"	m	struct:_kc_mii_if_info	file:
phy_id_mask	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int phy_id_mask;$/;"	m	struct:_kc_mii_if_info	file:
phy_info	drivers/e1000-4.x/src/e1000.h	/^	struct e1000_phy_info phy_info;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_phy_info
phy_info	drivers/e1000-5.x/src/e1000.h	/^	struct e1000_phy_info phy_info;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_phy_info
phy_info	drivers/e1000-7.x/src/e1000.h	/^	struct e1000_phy_info phy_info;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_phy_info
phy_info_timer	drivers/e1000-4.x/src/e1000.h	/^	struct timer_list phy_info_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
phy_info_timer	drivers/e1000-5.x/src/e1000.h	/^	struct timer_list phy_info_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
phy_info_timer	drivers/e1000-7.x/src/e1000.h	/^	struct timer_list phy_info_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
phy_init_script	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t phy_init_script;$/;"	m	struct:e1000_hw
phy_init_script	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t phy_init_script;$/;"	m	struct:e1000_hw
phy_reset_disable	drivers/e1000-5.x/src/e1000_hw.h	/^    boolean_t phy_reset_disable;$/;"	m	struct:e1000_hw
phy_reset_disable	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t phy_reset_disable;$/;"	m	struct:e1000_hw
phy_revision	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t phy_revision;$/;"	m	struct:e1000_hw
phy_revision	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t phy_revision;$/;"	m	struct:e1000_hw
phy_spd_default	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t phy_spd_default;$/;"	m	struct:e1000_hw
phy_spd_default	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t phy_spd_default;$/;"	m	struct:e1000_hw
phy_stats	drivers/e1000-4.x/src/e1000.h	/^	struct e1000_phy_stats phy_stats;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_phy_stats
phy_stats	drivers/e1000-5.x/src/e1000.h	/^	struct e1000_phy_stats phy_stats;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_phy_stats
phy_stats	drivers/e1000-7.x/src/e1000.h	/^	struct e1000_phy_stats phy_stats;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_phy_stats
phy_type	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_phy_type phy_type;$/;"	m	struct:e1000_hw
phy_type	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_phy_type phy_type;$/;"	m	struct:e1000_hw
phys_id	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*phys_id)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
phys_id	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*phys_id)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
piANS_Attribute_ID	drivers/e1000-4.x/src/base_comm.h	/^} iANS_Attribute_ID,  *piANS_Attribute_ID; $/;"	t	typeref:enum:_iANS_Attribute_ID
piANSsupport_t	drivers/e1000-4.x/src/ans.h	/^} iANSsupport_t, *piANSsupport_t;$/;"	t	typeref:struct:_iANSsupport_t
pi_read_drops	elements/aqm/pi.cc	/^pi_read_drops(Element *f, void *)$/;"	f	file:
pic_type	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^        int pic_type;$/;"	m	struct:pktlen_s
pick	elements/ip/setrandipaddress.cc	/^SetRandIPAddress::pick()$/;"	f	class:SetRandIPAddress
pick_alt_rate	elements/wifi/autoratefallback.hh	/^    int pick_alt_rate() {$/;"	f	struct:AutoRateFallback::DstInfo
pick_alt_rate	elements/wifi/madwifirate.hh	/^    int pick_alt_rate() {$/;"	f	struct:MadwifiRate::DstInfo
pick_driver	tools/lib/elementmap.cc	/^ElementMap::pick_driver(int wanted_driver, const RouterT* router, ErrorHandler* errh) const$/;"	f	class:ElementMap
pick_rate	elements/wifi/autoratefallback.hh	/^    int pick_rate() {$/;"	f	struct:AutoRateFallback::DstInfo
pick_rate	elements/wifi/madwifirate.hh	/^    int pick_rate() {$/;"	f	struct:MadwifiRate::DstInfo
pick_rate	elements/wifi/probetxrate.hh	/^    Vector<int> pick_rate() {$/;"	f	struct:ProbeTXRate::DstInfo
pid	elements/local/OpenFlow/lib/netlink.cc	/^    uint32_t pid;$/;"	m	struct:nl_sock	file:
pidx	tools/lib/processingt.hh	/^    int pidx(const ConnectionT &conn, bool isoutput) const {$/;"	f	class:ProcessingT
pidx	tools/lib/processingt.hh	/^    int pidx(const PortT &port, bool isoutput) const {$/;"	f	class:ProcessingT
pidx	tools/lib/processingt.hh	/^    int pidx(int eindex, int port, bool isoutput) const {$/;"	f	class:ProcessingT
pio_next	linuxmodule/proclikefs.c	/^    struct proclikefs_inode_operations *pio_next;$/;"	m	struct:proclikefs_inode_operations	typeref:struct:proclikefs_inode_operations::proclikefs_inode_operations	file:
pio_op	linuxmodule/proclikefs.c	/^    struct inode_operations pio_op;$/;"	m	struct:proclikefs_inode_operations	typeref:struct:proclikefs_inode_operations::inode_operations	file:
pixmaps_directories	apps/clicky/src/support.c	/^static GList *pixmaps_directories = NULL;$/;"	v	file:
pkbuf	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^        uint8_t * pkbuf;$/;"	m	struct:pktlen_s
pkend	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^        uint8_t * pkend;$/;"	m	struct:pktlen_s
pkt_rate_high	drivers/e1000-5.x/src/kcompat.h	/^	u32	pkt_rate_high;$/;"	m	struct:_kc_ethtool_coalesce
pkt_rate_high	drivers/e1000-7.x/src/kcompat.h	/^	u32	pkt_rate_high;$/;"	m	struct:_kc_ethtool_coalesce
pkt_rate_low	drivers/e1000-5.x/src/kcompat.h	/^	u32	pkt_rate_low;$/;"	m	struct:_kc_ethtool_coalesce
pkt_rate_low	drivers/e1000-7.x/src/kcompat.h	/^	u32	pkt_rate_low;$/;"	m	struct:_kc_ethtool_coalesce
pkt_time	elements/grid/ackretrysender.hh	/^    Timestamp pkt_time;$/;"	m	struct:ACKRetrySender::tx_result_t
pkt_time	elements/grid/ackretrysender2.hh	/^    Timestamp pkt_time;$/;"	m	struct:ACKRetrySender2::tx_result_t
pkt_type	elements/userlevel/fakepcap.hh	/^	uint8_t pkt_type;	\/* broadcast\/multicast\/etc. indication *\/$/;"	m	struct:fake_modified_pcap_pkthdr
pkt_type	include/click/packet.hh	/^	PacketType pkt_type;$/;"	m	struct:Packet::AllAnno
pktlen_s	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^typedef struct pktlen_s$/;"	s
pktlen_t	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^} pktlen_t;$/;"	t	typeref:struct:pktlen_s
pkts_in	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^	int pkts_in;$/;"	m	struct:PFMpeg2AdaptFWStat
pkts_in	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	uint32_t pkts_in;$/;"	m	struct:PFSchedFWStat
pkts_in	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	int pkts_in;$/;"	m	struct:PFShapeFWStat
pkts_index	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^	uint32_t pkts_index;$/;"	m	struct:bpadapt_header
pkts_index	elements/local/FlowNet/papmo/PaPMo.hh	/^	uint8_t pkts_index;$/;"	m	struct:composed_trace
pkts_killed	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^	int pkts_killed;$/;"	m	struct:PFMpeg2AdaptFWStat
pkts_killed	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	uint32_t pkts_killed;$/;"	m	struct:PFSchedFWStat
pkts_killed	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	int pkts_killed;$/;"	m	struct:PFShapeFWStat
pkts_out	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^	int pkts_out;$/;"	m	struct:PFMpeg2AdaptFWStat
pkts_out	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	uint32_t pkts_out;$/;"	m	struct:PFSchedFWStat
pkts_out	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	int pkts_out;$/;"	m	struct:PFShapeFWStat
pkts_per_clock	elements/local/FlowNet/common/FlowNetGod.hh	/^	double pkts_per_clock;$/;"	m	struct:paramset_sourceproxytable
pkts_per_frame	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^	unsigned int pkts_per_frame;$/;"	m	class:FlowMpeg2AdaptEncap
pkts_per_frame	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^	uint32_t pkts_per_frame;$/;"	m	struct:bpadapt_header
pkts_per_frame	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.hh	/^	uint32_t pkts_per_frame;$/;"	m	class:FrameReceivingBuffer
pkts_per_frame	elements/local/FlowNet/papmo/PaPMo.hh	/^	uint8_t pkts_per_frame;$/;"	m	struct:composed_trace
pl	apps/clicky/src/dwidget.hh	/^    PangoLayout *pl;$/;"	m	struct:clicky::dcontext
pl_font	apps/clicky/src/dwidget.hh	/^    String pl_font;$/;"	m	struct:clicky::dcontext
place	elements/ip/ipfragmentmap.hh	/^	int place;$/;"	m	struct:IPFragmentMap::Entry
place	elements/ip/ipfragmentmap.hh	/^	place(Entry **begin)$/;"	f	struct:IPFragmentMap::place
place	elements/ip/ipfragmentmap.hh	/^    struct place {$/;"	s	class:IPFragmentMap
place_intpair	elements/test/heaptest.cc	/^struct place_intpair {$/;"	s	namespace:__anon408	file:
placeholder_router	bsdmodule/sched.cc	/^static Router *placeholder_router;$/;"	v	file:
placeholder_router	linuxmodule/sched.cc	/^static Router *placeholder_router;$/;"	v	file:
please_stop_driver	include/click/router.hh	/^Router::please_stop_driver()$/;"	f	class:Router
plen	elements/ip/directiplookup.hh	/^	uint16_t plen;$/;"	m	struct:DirectIPLookup::CleartextEntry
pm_message_t	drivers/e1000-7.x/src/kcompat.h	1030;"	d
pmt_high_ES_info_length	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pmt_high_ES_info_length : 4,$/;"	m	struct:mpeg2psi_pmt_loop	file:
pmt_high_PCR_PID	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pmt_high_PCR_PID : 5,$/;"	m	struct:mpeg2psi_pmt	file:
pmt_high_elementary_PID	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pmt_high_elementary_PID : 5,$/;"	m	struct:mpeg2psi_pmt_loop	file:
pmt_high_program_info_length	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pmt_high_program_info_length : 4,$/;"	m	struct:mpeg2psi_pmt	file:
pmt_high_section_length	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t 	pmt_high_section_length : 4,$/;"	m	struct:mpeg2psi_pmt	file:
pmt_ind_current_next	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pmt_ind_current_next : 1,$/;"	m	struct:mpeg2psi_pmt	file:
pmt_ind_section_syntax	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pmt_ind_section_syntax : 1;$/;"	m	struct:mpeg2psi_pmt	file:
pmt_last_section	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pmt_last_section;$/;"	m	struct:mpeg2psi_pmt	file:
pmt_low_ES_info_length	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pmt_low_ES_info_length;$/;"	m	struct:mpeg2psi_pmt_loop	file:
pmt_low_PCR_PID	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pmt_low_PCR_PID;$/;"	m	struct:mpeg2psi_pmt	file:
pmt_low_elementary_PID	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pmt_low_elementary_PID;$/;"	m	struct:mpeg2psi_pmt_loop	file:
pmt_low_program_info_length	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pmt_low_program_info_length;$/;"	m	struct:mpeg2psi_pmt	file:
pmt_low_section_length	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pmt_low_section_length;$/;"	m	struct:mpeg2psi_pmt	file:
pmt_program_number	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint16_t	pmt_program_number;		\/* note the difference to @mpeg2psi_pat *\/$/;"	m	struct:mpeg2psi_pmt	file:
pmt_reserved	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pmt_reserved : 2,$/;"	m	struct:mpeg2psi_pmt	file:
pmt_reserved	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pmt_reserved : 3;$/;"	m	struct:mpeg2psi_pmt_loop	file:
pmt_reserved2	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pmt_reserved2 : 2;$/;"	m	struct:mpeg2psi_pmt	file:
pmt_reserved2	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pmt_reserved2 : 4;$/;"	m	struct:mpeg2psi_pmt_loop	file:
pmt_reserved3	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pmt_reserved3 : 3;$/;"	m	struct:mpeg2psi_pmt	file:
pmt_reserved4	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pmt_reserved4 : 4;$/;"	m	struct:mpeg2psi_pmt	file:
pmt_section	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pmt_section;$/;"	m	struct:mpeg2psi_pmt	file:
pmt_stream_type	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pmt_stream_type;$/;"	m	struct:mpeg2psi_pmt_loop	file:
pmt_table_id	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		pmt_table_id;$/;"	m	struct:mpeg2psi_pmt	file:
pmt_version	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pmt_version : 5,$/;"	m	struct:mpeg2psi_pmt	file:
pmt_zero	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^			pmt_zero : 1,$/;"	m	struct:mpeg2psi_pmt	file:
point	apps/clicky/src/rectangle.hh	/^    point() {$/;"	f	struct:point
point	apps/clicky/src/rectangle.hh	/^    point(double x, double y)$/;"	f	struct:point
point	apps/clicky/src/rectangle.hh	/^struct point {$/;"	s
point_elt	apps/clicky/src/wdiagram.cc	/^delt *cdiagram::point_elt(const point &p) const$/;"	f	class:clicky::cdiagram
pointer	include/click/list.hh	/^    typedef T *pointer;$/;"	t	class:List
pointer	include/click/vector.hh	/^    typedef T* pointer;$/;"	t	class:Vector
pointer	include/click/vector.hh	/^    typedef T** pointer;$/;"	t	class:Vector
pointer	include/click/vector.hh	/^    typedef void** pointer;$/;"	t	class:Vector
polarity_correction	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_polarity_reversal polarity_correction;$/;"	m	struct:e1000_phy_info
polarity_correction	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_polarity_reversal polarity_correction;$/;"	m	struct:e1000_phy_info
polarity_correction	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_polarity_reversal polarity_correction;$/;"	m	struct:e1000_phy_info
poll_block	elements/local/OpenFlow/lib/poll-loop.cc	/^void poll_block()$/;"	f
poll_cancel	elements/local/OpenFlow/lib/poll-loop.cc	/^poll_cancel(struct poll_waiter *pw)$/;"	f
poll_device_map	elements/linuxmodule/polldevice.cc	/^static AnyDeviceMap poll_device_map;$/;"	v	file:
poll_fd_callback	elements/local/OpenFlow/lib/poll-loop.cc	/^poll_fd_callback(int fd, short int events, poll_fd_func *function, void *aux)$/;"	f
poll_fd_func	elements/local/OpenFlow/lib/poll-loop.hh	/^typedef void poll_fd_func(int fd, short int revents, void *aux);$/;"	t
poll_fd_wait	elements/local/OpenFlow/lib/poll-loop.cc	/^poll_fd_wait(int fd, short int events)$/;"	f
poll_immediate_wake	elements/local/OpenFlow/lib/poll-loop.cc	/^poll_immediate_wake(void)$/;"	f
poll_server	elements/local/OpenFlow/lib/vlog-socket.cc	/^poll_server(int fd UNUSED, short int events UNUSED, void *server_)$/;"	f	file:
poll_timer_wait	elements/local/OpenFlow/lib/poll-loop.cc	/^poll_timer_wait(int msec)$/;"	f
poll_waiter	elements/local/OpenFlow/lib/poll-loop.cc	/^struct poll_waiter {$/;"	s	file:
pollfd	elements/local/OpenFlow/lib/poll-loop.cc	/^    struct pollfd *pollfd;      \/* Pointer to element of the pollfds array$/;"	m	struct:poll_waiter	typeref:struct:poll_waiter::pollfd	file:
pollfd	include/click/selectset.hh	/^	int pollfd;$/;"	m	struct:SelectSet::SelectorInfo
pollfd	include/click/selectset.hh	/^    struct pollfd {$/;"	s	class:SelectSet
polling	elements/ethernet/ip6ndsolicitor.hh	/^    unsigned polling: 1;$/;"	m	struct:IP6NDSolicitor::NDEntry
polling	elements/linuxmodule/todevice.hh	/^    bool polling() const			{ return _dev && _dev->polling > 0; }$/;"	f	class:ToDevice
polling	elements/linuxmodule/todevice.hh	/^    bool polling() const			{ return false; }$/;"	f	class:ToDevice
polling_netdev	drivers/e1000-7.x/src/e1000.h	/^	struct net_device *polling_netdev;  \/* One per active queue *\/$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::net_device
pool	linuxmodule/skbmgr.cc	/^static RecycledSkbPool pool;$/;"	v	file:
pool	linuxmodule/skbmgr.cc	/^static RecycledSkbPool pool[NR_CPUS];$/;"	v	file:
pool_allocate	lib/packet.cc	/^WritablePacket::pool_allocate(bool with_data)$/;"	f	class:WritablePacket
pool_allocate	lib/packet.cc	/^WritablePacket::pool_allocate(uint32_t headroom, uint32_t length,$/;"	f	class:WritablePacket
pool_next	lib/packet.cc	/^    PacketData *pool_next;$/;"	m	struct:__anon510::PacketData	file:
pop	elements/local/FlowNet/common/PacketQueue.hh	/^inline Packet* PacketQueue::pop()$/;"	f	class:PacketQueue
pop	elements/local/FlowNet/papmo/PaPMo.cc	/^int lfc_buffer::pop(void* i)$/;"	f	class:lfc_buffer
pop	elements/local/OpenFlow/SynchronizedPacketQueue.hh	/^inline Packet* SynchronizedPacketQueue::pop()$/;"	f	class:SynchronizedPacketQueue
pop_back	apps/clicky/src/gathererror.hh	/^inline void GatherErrorHandler::pop_back()$/;"	f	class:GatherErrorHandler
pop_back	include/click/dequeue.hh	/^DEQueue<T>::pop_back()$/;"	f	class:DEQueue
pop_back	include/click/list.hh	/^    void pop_back() {$/;"	f	class:List
pop_back	include/click/straccum.hh	/^    inline void pop_back(int n = 1) {$/;"	f	class:StringAccum
pop_back	include/click/vector.hh	/^    void pop_back()		{ Base::pop_back(); }$/;"	f	class:Vector
pop_back	include/click/vector.hh	/^Vector<T>::pop_back()$/;"	f	class:Vector
pop_back	include/click/vector.hh	/^Vector<void*>::pop_back()$/;"	f	class:Vector
pop_default	tools/lib/elementmap.cc	/^ElementMap::pop_default()$/;"	f	class:ElementMap
pop_default	tools/lib/elementmap.cc	/^ElementMap::pop_default(ElementMap *emap)$/;"	f	class:ElementMap
pop_element	apps/clicky/src/scopechain.cc	/^ScopeChain::pop_element()$/;"	f	class:ScopeChain
pop_front	elements/grid/qvec.hh	/^QVec<T>::pop_front()$/;"	f	class:QVec
pop_front	include/click/dequeue.hh	/^DEQueue<T>::pop_front()$/;"	f	class:DEQueue
pop_front	include/click/list.hh	/^    void pop_front() {$/;"	f	class:List
pop_front	include/click/vector.hh	/^    void pop_front()		{ Base::pop_front(); }$/;"	f	class:Vector
pop_front	include/click/vector.hh	/^Vector<T>::pop_front()$/;"	f	class:Vector
pop_front	include/click/vector.hh	/^Vector<void*>::pop_front()$/;"	f	class:Vector
pop_heap	include/click/heap.hh	/^inline void pop_heap(iterator_type begin, iterator_type end,$/;"	f
pop_packet	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::pop_packet()$/;"	f	class:ToUserDevice
popts	drivers/e1000-4.x/src/e1000_hw.h	/^            uint8_t popts;      \/* Packet Options *\/$/;"	m	struct:e1000_data_desc::__anon64::__anon65
popts	drivers/e1000-5.x/src/e1000_hw.h	/^            uint8_t popts;      \/* Packet Options *\/$/;"	m	struct:e1000_data_desc::__anon161::__anon162
popts	drivers/e1000-7.x/src/e1000_hw.h	/^            uint8_t popts;      \/* Packet Options *\/$/;"	m	struct:e1000_data_desc::__anon118::__anon119
port	apps/clicky/src/dwidget.hh	/^    int port(bool isoutput) const {$/;"	f	class:clicky::dconn
port	elements/etherswitch/etherswitch.hh	/^	int port;$/;"	m	struct:EtherSwitch::AddrInfo
port	elements/ip/directiplookup.hh	/^	int16_t port;$/;"	m	struct:DirectIPLookup::VirtualPort
port	elements/ip/iproutetable.hh	/^    int32_t port;$/;"	m	struct:IPRoute
port	elements/ipsec/ipsecroutetable.hh	/^    int32_t port;$/;"	m	struct:IPsecRoute
port	elements/local/OpenFlow/datapath.cc	/^	uint16_t port;$/;"	m	struct:queue_stats_state	file:
port	elements/local/OpenFlow/datapath.hh	/^	struct click_port *port; \/* reference to the parent port *\/$/;"	m	struct:sw_queue	typeref:struct:sw_queue::click_port
port	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t port;                  \/* Output port--it must be previously $/;"	m	struct:nx_action_snat
port	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t port;          \/* Physical switch port. *\/$/;"	m	struct:nx_snat_config
port	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    uint16_t port;              \/* Port for operations *\/$/;"	m	struct:openflow_queue_command_header
port	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t port;                  \/* Output port. *\/$/;"	m	struct:ofp_action_output
port	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t port;            \/* Port that queue belongs. Should$/;"	m	struct:ofp_action_enqueue
port	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t port;         \/* Port to be queried. Should refer$/;"	m	struct:ofp_queue_get_config_request
port	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t port;$/;"	m	struct:ofp_queue_get_config_reply
port	include/click/element.hh	/^Element::Port::port() const$/;"	f	class:Element::Port
port	include/click/element.hh	/^Element::port(bool isoutput, int port) const$/;"	f	class:Element
port	include/click/router.hh	/^	int port;$/;"	m	struct:Router::Port
port	lib/lexer.cc	/^  const Router::Port &port() const	{ return _port; }$/;"	f	class:Lexer::TunnelEnd
port	tools/lib/elementt.hh	/^    int port(bool isoutput) const {$/;"	f	class:ConnectionT
port	tools/lib/elementt.hh	/^    int port;$/;"	m	struct:PortT
port	tools/lib/processingt.hh	/^    PortT port(int pidx, bool isoutput) const {$/;"	f	class:ProcessingT
port_active	include/click/element.hh	/^Element::port_active(bool isoutput, int port) const$/;"	f	class:Element
port_cast	lib/element.cc	/^Element::port_cast(bool isoutput, int port, const char *name)$/;"	f	class:Element
port_count	elements/analysis/adjusttimestamp.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:AdjustTimestamp
port_count	elements/analysis/aggcounter.hh	/^    const char *port_count() const	{ return "1-2\/1-2"; }$/;"	f	class:AggregateCounter
port_count	elements/analysis/aggpktcounter.hh	/^    const char *port_count() const	{ return "1-\/1-"; }$/;"	f	class:AggregatePacketCounter
port_count	elements/analysis/aggregatefilter.hh	/^    const char *port_count() const	{ return "1\/1-254"; }$/;"	f	class:AggregateFilter
port_count	elements/analysis/aggregatefirst.hh	/^    const char *port_count() const	{ return PORTS_1_1X2; }$/;"	f	class:AggregateFirst
port_count	elements/analysis/aggregateip.hh	/^    const char *port_count() const	{ return PORTS_1_1X2; }$/;"	f	class:AggregateIP
port_count	elements/analysis/aggregateipaddrpair.hh	/^    const char *port_count() const	{ return PORTS_1_1X2; }$/;"	f	class:AggregateIPAddrPair
port_count	elements/analysis/aggregateipflows.hh	/^    const char *port_count() const	{ return PORTS_1_1X2; }$/;"	f	class:AggregateIPFlows
port_count	elements/analysis/aggregatelast.hh	/^    const char *port_count() const	{ return PORTS_1_1X2; }$/;"	f	class:AggregateLast
port_count	elements/analysis/aggregatelen.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:AggregateLength
port_count	elements/analysis/aggregatepaint.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:AggregatePaint
port_count	elements/analysis/anonipaddr.hh	/^    const char *port_count() const	{ return PORTS_1_1X2; }$/;"	f	class:AnonymizeIPAddr
port_count	elements/analysis/eraseippayload.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:EraseIPPayload
port_count	elements/analysis/fromcapdump.hh	/^    const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:FromCapDump
port_count	elements/analysis/fromdagdump.hh	/^    const char *port_count() const		{ return "0\/1-2"; }$/;"	f	class:FromDAGDump
port_count	elements/analysis/fromflandump.hh	/^    const char *port_count() const		{ return PORTS_0_1; }$/;"	f	class:FromFlanDump
port_count	elements/analysis/fromipsumdump.hh	/^    const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:FromIPSummaryDump
port_count	elements/analysis/fromnetflowsumdump.hh	/^    const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:FromNetFlowSummaryDump
port_count	elements/analysis/fromnlanrdump.hh	/^    const char *port_count() const		{ return "0\/1-2"; }$/;"	f	class:FromNLANRDump
port_count	elements/analysis/fromtcpdump.hh	/^    const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:FromTcpdump
port_count	elements/analysis/settimestampdelta.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:SetTimestampDelta
port_count	elements/analysis/storetimestamp.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:StoreTimestamp
port_count	elements/analysis/storeudptimeseqrecord.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:StoreUDPTimeSeqRecord
port_count	elements/analysis/timefilter.hh	/^    const char *port_count() const	{ return PORTS_1_1X2; }$/;"	f	class:TimeFilter
port_count	elements/analysis/timerange.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:TimeRange
port_count	elements/analysis/timesortedsched.hh	/^    const char *port_count() const	{ return "-\/1"; }$/;"	f	class:TimeSortedSched
port_count	elements/analysis/timestampaccum.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:TimestampAccum
port_count	elements/analysis/toipflowdumps.hh	/^    const char *port_count() const	{ return "1\/0-1"; }$/;"	f	class:ToIPFlowDumps
port_count	elements/analysis/toipsumdump.hh	/^    const char *port_count() const	{ return "1\/0-1"; }$/;"	f	class:ToIPSummaryDump
port_count	elements/app/ftpportmapper.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:FTPPortMapper
port_count	elements/aqm/pi.hh	/^    const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:PI
port_count	elements/aqm/red.hh	/^    const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:RED
port_count	elements/bsdmodule/fastudpsrc.hh	/^  const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:FastUDPSource
port_count	elements/bsdmodule/fromdevice.hh	/^    const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:FromDevice
port_count	elements/bsdmodule/fromhost.hh	/^    const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:FromHost
port_count	elements/bsdmodule/todevice.hh	/^  const char *port_count() const	{ return PORTS_1_0; }$/;"	f	class:ToDevice
port_count	elements/bsdmodule/tohost.hh	/^    const char *port_count() const	{ return PORTS_1_0; }$/;"	f	class:ToHost
port_count	elements/ethernet/arpfaker.hh	/^  const char *port_count() const		{ return PORTS_0_1; }$/;"	f	class:ARPFaker
port_count	elements/ethernet/arpprint.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:ARPPrint
port_count	elements/ethernet/arpquerier.hh	/^    const char *port_count() const		{ return "2\/1-2"; }$/;"	f	class:ARPQuerier
port_count	elements/ethernet/arpresponder.hh	/^    const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:ARPResponder
port_count	elements/ethernet/checkarpheader.hh	/^    const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:CheckARPHeader
port_count	elements/ethernet/ensureether.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:EnsureEther
port_count	elements/ethernet/etherencap.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:EtherEncap
port_count	elements/ethernet/ethermirror.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:EtherMirror
port_count	elements/ethernet/etherpausesource.hh	/^    const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:EtherPauseSource
port_count	elements/ethernet/ethervlanannoencap.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:EtherVLANAnnoEncap
port_count	elements/ethernet/ethervlanencap.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:EtherVLANEncap
port_count	elements/ethernet/hostetherfilter.hh	/^  const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:HostEtherFilter
port_count	elements/ethernet/ip6ndadvertiser.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:IP6NDAdvertiser
port_count	elements/ethernet/ip6ndsolicitor.hh	/^  const char *port_count() const		{ return "2\/1-2"; }$/;"	f	class:IP6NDSolicitor
port_count	elements/ethernet/setvlananno.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:SetVLANAnno
port_count	elements/ethernet/storeetheraddress.hh	/^    const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:StoreEtherAddress
port_count	elements/ethernet/stripetherheader.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:EtherEncap
port_count	elements/ethernet/stripethervlanheader.hh	/^    const char *port_count() const	{ return PORTS_1_1X2; }$/;"	f	class:StripEtherVLANHeader
port_count	elements/ethernet/vlandecap.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:VLANDecap
port_count	elements/ethernet/vlanencap.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:VLANEncap
port_count	elements/etherswitch/debugbridge.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:DebugBridge
port_count	elements/etherswitch/etherswitch.hh	/^  const char *port_count() const		{ return "2-\/="; }$/;"	f	class:EtherSwitch
port_count	elements/etherswitch/listenetherswitch.hh	/^    const char *port_count() const		{ return "-\/=+"; }$/;"	f	class:ListenEtherSwitch
port_count	elements/etherswitch/spantree.hh	/^  const char *port_count() const		{ return "-\/="; }$/;"	f	class:EtherSpanTree
port_count	elements/grid/ackresponder.hh	/^  const char *port_count() const { return "1\/2"; }$/;"	f	class:ACKResponder
port_count	elements/grid/ackresponder2.hh	/^  const char *port_count() const { return "1\/2"; }$/;"	f	class:ACKResponder2
port_count	elements/grid/ackretrysender.hh	/^  const char *port_count() const { return "-\/-"; }$/;"	f	class:ACKRetrySender
port_count	elements/grid/ackretrysender2.hh	/^  const char *port_count() const { return "-\/-"; }$/;"	f	class:ACKRetrySender2
port_count	elements/grid/airoinfo.hh	/^  const char *port_count() const		{ return PORTS_0_0; }$/;"	f	class:AiroInfo
port_count	elements/grid/bottleneckmetric.hh	/^  const char *port_count() const { return PORTS_0_0; }$/;"	f	class:BottleneckMetric
port_count	elements/grid/checkgridheader.hh	/^  const char *port_count() const		{ return "1\/1-2"; }$/;"	f	class:CheckGridHeader
port_count	elements/grid/dsdvroutetable.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:DSDVRouteTable
port_count	elements/grid/dsrarptable.hh	/^  const char *port_count() const	{ return "3\/3"; }$/;"	f	class:DSRArpTable
port_count	elements/grid/dsrroutetable.hh	/^  const char *port_count() const { return "3\/3"; }$/;"	f	class:DSRRouteTable
port_count	elements/grid/e2elossmetric.hh	/^  const char *port_count() const { return PORTS_0_0; }$/;"	f	class:E2ELossMetric
port_count	elements/grid/etx2metric.hh	/^  const char *port_count() const { return PORTS_0_0; }$/;"	f	class:ETX2Metric
port_count	elements/grid/etxmetric.hh	/^  const char *port_count() const { return PORTS_0_0; }$/;"	f	class:ETXMetric
port_count	elements/grid/filterbyhops.hh	/^  const char *port_count() const		{ return "1\/2"; }$/;"	f	class:FilterByGridHops
port_count	elements/grid/filterbyrange.hh	/^  const char *port_count() const		{ return "1\/2"; }$/;"	f	class:FilterByRange
port_count	elements/grid/fixdstloc.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:FixDstLoc
port_count	elements/grid/fixsrcloc.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:FixSrcLoc
port_count	elements/grid/floodinglocquerier.hh	/^  const char *port_count() const		{ return "2\/2"; }$/;"	f	class:FloodingLocQuerier
port_count	elements/grid/gridencap.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:GridEncap
port_count	elements/grid/gridgatewayinfo.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:GridGatewayInfo
port_count	elements/grid/gridprobehandler.hh	/^  const char *port_count() const		{ return "1\/2"; }$/;"	f	class:GridProbeHandler
port_count	elements/grid/gridprobereplyreceiver.hh	/^  const char *port_count() const		{ return PORTS_1_0; }$/;"	f	class:GridProbeReplyReceiver
port_count	elements/grid/gridprobesender.hh	/^  const char *port_count() const		{ return PORTS_0_1; }$/;"	f	class:GridProbeSender
port_count	elements/grid/gridproxy.hh	/^    const char *port_count() const { return "2\/2"; }$/;"	f	class:GridProxy
port_count	elements/grid/gridroutetable.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:GridRouteTable
port_count	elements/grid/gridsrforwarder.hh	/^  const char *port_count() const { return "1\/2"; }$/;"	f	class:GridSRForwarder
port_count	elements/grid/gridtxerror.hh	/^  const char *port_count() const { return PORTS_1_0; }$/;"	f	class:GridTxError
port_count	elements/grid/hello.hh	/^  const char *port_count() const		{ return PORTS_0_1; }$/;"	f	class:SendGridHello
port_count	elements/grid/hopcountmetric.hh	/^  const char *port_count() const { return PORTS_0_0; }$/;"	f	class:HopcountMetric
port_count	elements/grid/incseqno.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:IncrementSeqNo
port_count	elements/grid/linkstat.hh	/^  const char *port_count() const		{ return "1\/0-1"; }$/;"	f	class:LinkStat
port_count	elements/grid/linktester.hh	/^  const char *port_count() const { return PORTS_0_1; }$/;"	f	class:LinkTester
port_count	elements/grid/linktestreceiver.hh	/^  const char *port_count() const { return PORTS_1_1; }$/;"	f	class:LinkTestReceiver
port_count	elements/grid/linktracker.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:LinkTracker
port_count	elements/grid/lirmetric.hh	/^  const char *port_count() const { return PORTS_0_0; }$/;"	f	class:LIRMetric
port_count	elements/grid/locqueryresponder.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:LocQueryResponder
port_count	elements/grid/lookupgeogridroute.hh	/^  const char *port_count() const		{ return "1\/2"; }$/;"	f	class:LookupGeographicGridRoute
port_count	elements/grid/lookuplocalgridroute.hh	/^  const char *port_count() const		{ return "2\/4"; }$/;"	f	class:LookupLocalGridRoute
port_count	elements/grid/lookuplocalgridroute2.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:LookupLocalGridRoute2
port_count	elements/grid/lrhello.hh	/^  const char *port_count() const		{ return PORTS_0_1; }$/;"	f	class:SendGridLRHello
port_count	elements/grid/packetlogger.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:PacketLogger
port_count	elements/grid/packetlogger2.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:PacketLogger2
port_count	elements/grid/pep.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:PEP
port_count	elements/grid/pingpong.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:PingPong
port_count	elements/grid/printgrid.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:PrintGrid
port_count	elements/grid/radiosim.hh	/^  const char *port_count() const		{ return "-\/-"; }$/;"	f	class:RadioSim
port_count	elements/grid/regionpep.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:EstimateRouterRegion
port_count	elements/grid/setgridchecksum.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SetGridChecksum
port_count	elements/grid/simplelocquerier.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SimpleLocQuerier
port_count	elements/grid/stripdsrheader.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:StripDSRHeader
port_count	elements/grid/threshmetric.hh	/^  const char *port_count() const { return PORTS_0_0; }$/;"	f	class:ThresholdMetric
port_count	elements/grid/unstripdsrheader.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:UnstripDSRHeader
port_count	elements/grid/updateroutes.hh	/^  const char *port_count() const		{ return "1\/2"; }$/;"	f	class:UpdateGridRoutes
port_count	elements/grid/yarvismetric.hh	/^  const char *port_count() const { return PORTS_0_0; }$/;"	f	class:YarvisMetric
port_count	elements/icmp/checkicmpheader.hh	/^  const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:CheckICMPHeader
port_count	elements/icmp/icmperror.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:ICMPError
port_count	elements/icmp/icmpipencap.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:ICMPIPEncap
port_count	elements/icmp/icmppingencap.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:ICMPPingEncap
port_count	elements/icmp/icmppingresponder.hh	/^  const char *port_count() const	{ return PORTS_1_1X2; }$/;"	f	class:ICMPPingResponder
port_count	elements/icmp/icmprewriter.hh	/^    const char *port_count() const	{ return "1\/1-"; }$/;"	f	class:ICMPRewriter
port_count	elements/icmp/icmpsendpings.hh	/^    const char *port_count() const		{ return "0-1\/1"; }$/;"	f	class:ICMPPingSource
port_count	elements/ip/checkipheader.hh	/^  const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:CheckIPHeader
port_count	elements/ip/decipttl.hh	/^    const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:DecIPTTL
port_count	elements/ip/directiplookup.hh	/^    const char *port_count() const	{ return "1\/-"; }$/;"	f	class:DirectIPLookup
port_count	elements/ip/fixipsrc.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:FixIPSrc
port_count	elements/ip/getipaddress.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:GetIPAddress
port_count	elements/ip/ipencap.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:IPEncap
port_count	elements/ip/ipfilter.hh	/^    const char *port_count() const		{ return "1\/-"; }$/;"	f	class:IPFilter
port_count	elements/ip/ipfragmenter.hh	/^  const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:IPFragmenter
port_count	elements/ip/ipgwoptions.hh	/^  const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:IPGWOptions
port_count	elements/ip/ipinputcombo.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:IPInputCombo
port_count	elements/ip/ipmirror.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:IPMirror
port_count	elements/ip/ipoutputcombo.hh	/^  const char *port_count() const		{ return "1\/5"; }$/;"	f	class:IPOutputCombo
port_count	elements/ip/ipprint.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:IPPrint
port_count	elements/ip/ipratemon.hh	/^  const char *port_count() const		{ return "1-2\/1-2"; }$/;"	f	class:IPRateMonitor
port_count	elements/ip/ipreassembler.hh	/^    const char *port_count() const	{ return PORTS_1_1X2; }$/;"	f	class:IPReassembler
port_count	elements/ip/iprewriterbase.hh	/^    const char *port_count() const	{ return "1-\/1-"; }$/;"	f	class:IPRewriterBase
port_count	elements/ip/lineariplookup.hh	/^    const char *port_count() const	{ return "1\/-"; }$/;"	f	class:LinearIPLookup
port_count	elements/ip/lookupiproutelinux.hh	/^  const char *port_count() const	{ return "1\/1-"; }$/;"	f	class:LinuxIPLookup
port_count	elements/ip/lookupiproutemp.hh	/^  const char *port_count() const		{ return "1\/-"; }$/;"	f	class:LookupIPRouteMP
port_count	elements/ip/markipce.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:MarkIPCE
port_count	elements/ip/markipheader.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:MarkIPHeader
port_count	elements/ip/radixiplookup.hh	/^    const char *port_count() const		{ return "1\/-"; }$/;"	f	class:RadixIPLookup
port_count	elements/ip/rangeiplookup.hh	/^    const char *port_count() const	{ return "1\/-"; }$/;"	f	class:RangeIPLookup
port_count	elements/ip/rfc2507c.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:RFC2507c
port_count	elements/ip/rfc2507d.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:RFC2507d
port_count	elements/ip/ripsend.hh	/^  const char *port_count() const		{ return PORTS_0_1; }$/;"	f	class:RIPSend
port_count	elements/ip/setipaddress.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SetIPAddress
port_count	elements/ip/setipchecksum.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SetIPChecksum
port_count	elements/ip/setipdscp.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SetIPDSCP
port_count	elements/ip/setipecn.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SetIPECN
port_count	elements/ip/setrandipaddress.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:SetRandIPAddress
port_count	elements/ip/storeipaddress.hh	/^    const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:StoreIPAddress
port_count	elements/ip/stripipheader.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:StripIPHeader
port_count	elements/ip/truncateippayload.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:TruncateIPPayload
port_count	elements/ip/unstripipheader.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:UnstripIPHeader
port_count	elements/ip6/addresstranslator.hh	/^  const char *port_count() const		{ return "2\/2"; }$/;"	f	class:AddressTranslator
port_count	elements/ip6/checkip6header.hh	/^  const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:CheckIP6Header
port_count	elements/ip6/decip6hlim.hh	/^  const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:DecIP6HLIM
port_count	elements/ip6/getip6address.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:GetIP6Address
port_count	elements/ip6/icmp6error.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:ICMP6Error
port_count	elements/ip6/ip6encap.hh	/^  const char *port_count() const        { return PORTS_1_1; }$/;"	f	class:IP6Encap
port_count	elements/ip6/ip6fragmenter.hh	/^  const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:IP6Fragmenter
port_count	elements/ip6/ip6mirror.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:IP6Mirror
port_count	elements/ip6/ip6print.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:IP6Print
port_count	elements/ip6/lookupip6route.hh	/^  const char *port_count() const		{ return "1\/-"; }$/;"	f	class:LookupIP6Route
port_count	elements/ip6/markip6header.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:MarkIP6Header
port_count	elements/ip6/protocoltranslator46.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:ProtocolTranslator46
port_count	elements/ip6/protocoltranslator64.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:ProtocolTranslator64
port_count	elements/ip6/setip6address.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SetIP6Address
port_count	elements/ip6/setip6dscp.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:SetIP6DSCP
port_count	elements/ipsec/aes.hh	/^   const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:Aes
port_count	elements/ipsec/des.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:Des
port_count	elements/ipsec/desp.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:IPsecESPUnencap
port_count	elements/ipsec/esp.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:IPsecESPEncap
port_count	elements/ipsec/hmacsha1.hh	/^  const char *port_count() const	{ return "1\/-"; }$/;"	f	class:IPsecAuthHMACSHA1
port_count	elements/ipsec/ipsecencap.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:IPsecEncap
port_count	elements/ipsec/radixipseclookup.hh	/^    const char *port_count() const		{ return "1\/-"; }$/;"	f	class:RadixIPsecLookup
port_count	elements/ipsec/sha1.hh	/^  const char *port_count() const	{ return "1\/-"; }$/;"	f	class:IPsecAuthSHA1
port_count	elements/linuxmodule/cpuqueue.hh	/^  const char *port_count() const		{ return "1\/1-"; }$/;"	f	class:CPUQueue
port_count	elements/linuxmodule/cpuswitch.hh	/^  const char *port_count() const		{ return "1\/1-"; }$/;"	f	class:CPUSwitch
port_count	elements/linuxmodule/cyclecountaccum.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:CycleCountAccum
port_count	elements/linuxmodule/fasttcpflows.hh	/^  const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:FastTCPFlows
port_count	elements/linuxmodule/fastudpflows.hh	/^  const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:FastUDPFlows
port_count	elements/linuxmodule/fastudpsrc.hh	/^  const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:FastUDPSource
port_count	elements/linuxmodule/fastudpsrcip6.hh	/^  const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:FastUDPSourceIP6
port_count	elements/linuxmodule/fromdevice.hh	/^    const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:FromDevice
port_count	elements/linuxmodule/fromhost.hh	/^    const char *port_count() const	{ return "0\/1-2"; }$/;"	f	class:FromHost
port_count	elements/linuxmodule/fromuserdevice.hh	/^    const char *port_count() const      { return PORTS_0_1; }$/;"	f	class:FromUserDevice
port_count	elements/linuxmodule/perfcountaccum.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:PerfCountAccum
port_count	elements/linuxmodule/polldevice.hh	/^  const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:PollDevice
port_count	elements/linuxmodule/rtcycles.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:RTCycles
port_count	elements/linuxmodule/setcyclecount.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SetCycleCount
port_count	elements/linuxmodule/setperfcount.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SetPerfCount
port_count	elements/linuxmodule/todevice.hh	/^    const char *port_count() const	{ return PORTS_1_0; }$/;"	f	class:ToDevice
port_count	elements/linuxmodule/tohost.hh	/^    const char *port_count() const	{ return PORTS_1_0; }$/;"	f	class:ToHost
port_count	elements/linuxmodule/touserdevice.hh	/^    const char *port_count() const      { return PORTS_1_0; }$/;"	f	class:ToUserDevice
port_count	elements/local/FlowNet/common/PF_FW.hh	/^        const char *port_count() const  { return "1\/1"; }$/;"	f	class:PFFW
port_count	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^	const char *port_count() const	{ return "1\/1"; }$/;"	f	class:PFMpeg2AdaptFW
port_count	elements/local/FlowNet/scheduler/IPFragReset.hh	/^	const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:IPFragReset
port_count	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	const char *port_count() const	{ return "2\/1"; }$/;"	f	class:PFSchedFW
port_count	elements/local/FlowNet/scheduler/WBSEtherFilter.hh	/^	const char *port_count() const		{ return "1\/2"; }$/;"	f	class:WBSEtherFilter
port_count	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	const char *port_count() const	{ return "1\/1"; }$/;"	f	class:PFShapeFW
port_count	elements/local/FlowNet/sink/PFSinkFW.hh	/^	const char *port_count() const	{ return "1\/1"; }$/;"	f	class:PFSinkFW
port_count	elements/local/OpenFlow/RConn.hh	/^	const char *port_count() const		{ return "1\/1"; }$/;"	f	class:RConn
port_count	elements/local/OpenFlow/datapath.hh	/^	const char *port_count() const		{ return "-\/-"; }$/;"	f	class:Datapath
port_count	elements/ns/fromsimdevice.hh	/^  const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:FromSimDevice
port_count	elements/ns/simpacketanalyzer.hh	/^  const char *port_count() const  { return PORTS_0_0; }$/;"	f	class:SimPacketAnalyzer
port_count	elements/ns/tosimdevice.hh	/^  const char *port_count() const		{ return PORTS_1_0; }$/;"	f	class:ToSimDevice
port_count	elements/ns/tosimtrace.hh	/^  const char* port_count() const { return PORTS_1_1; }$/;"	f	class:ToSimTrace
port_count	elements/radio/b8b10.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:B8B10
port_count	elements/radio/bim.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:BIM
port_count	elements/radio/checkpattern.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:CheckPattern
port_count	elements/radio/scramble.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:Scramble
port_count	elements/radio/sendpattern.hh	/^  const char *port_count() const		{ return PORTS_0_1; }$/;"	f	class:SendPattern
port_count	elements/simple/simpleidle.hh	/^    const char *port_count() const	{ return "-\/-"; }$/;"	f	class:SimpleIdle
port_count	elements/simple/simplepriosched.hh	/^    const char *port_count() const	{ return "-\/1"; }$/;"	f	class:SimplePrioSched
port_count	elements/simple/simplepullswitch.hh	/^    const char *port_count() const		{ return "-\/1"; }$/;"	f	class:SimplePullSwitch
port_count	elements/simple/simplerrsched.hh	/^    const char *port_count() const	{ return "-\/1"; }$/;"	f	class:SimpleRRSched
port_count	elements/standard/align.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:Align
port_count	elements/standard/averagecounter.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:AverageCounter
port_count	elements/standard/bandwidthmeter.hh	/^  const char *port_count() const		{ return "1\/2-"; }$/;"	f	class:BandwidthMeter
port_count	elements/standard/block.hh	/^  const char *port_count() const		{ return "1\/2"; }$/;"	f	class:Block
port_count	elements/standard/checkcrc32.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:CheckCRC32
port_count	elements/standard/checklength.hh	/^  const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:CheckLength
port_count	elements/standard/checkpaint.hh	/^    const char *port_count() const	{ return PORTS_1_1X2; }$/;"	f	class:CheckPaint
port_count	elements/standard/classifier.hh	/^    const char *port_count() const		{ return "1\/-"; }$/;"	f	class:Classifier
port_count	elements/standard/compblock.hh	/^  const char *port_count() const		{ return "1\/2"; }$/;"	f	class:CompareBlock
port_count	elements/standard/counter.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:Counter
port_count	elements/standard/delayshaper.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:DelayShaper
port_count	elements/standard/delayunqueue.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:DelayUnqueue
port_count	elements/standard/discard.hh	/^    const char *port_count() const		{ return PORTS_1_0; }$/;"	f	class:Discard
port_count	elements/standard/discardnofree.hh	/^  const char *port_count() const		{ return PORTS_1_0; }$/;"	f	class:DiscardNoFree
port_count	elements/standard/dropbroadcasts.hh	/^  const char *port_count() const	{ return PORTS_1_1X2; }$/;"	f	class:DropBroadcasts
port_count	elements/standard/drr.hh	/^    const char *port_count() const		{ return "-\/1"; }$/;"	f	class:DRRSched
port_count	elements/standard/hashswitch.hh	/^  const char *port_count() const		{ return "1\/1-"; }$/;"	f	class:HashSwitch
port_count	elements/standard/hub.hh	/^    const char *port_count() const		{ return "-\/="; }$/;"	f	class:Hub
port_count	elements/standard/idle.hh	/^  const char *port_count() const	{ return "-\/-"; }$/;"	f	class:Idle
port_count	elements/standard/infinitesource.hh	/^  const char *port_count() const		{ return PORTS_0_1; }$/;"	f	class:InfiniteSource
port_count	elements/standard/linkunqueue.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:LinkUnqueue
port_count	elements/standard/markmacheader.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:MarkMACHeader
port_count	elements/standard/mixedqueue.hh	/^    const char *port_count() const	{ return "2\/1-2"; }$/;"	f	class:MixedQueue
port_count	elements/standard/nullelement.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:NullElement
port_count	elements/standard/nullelement.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:PullNullElement
port_count	elements/standard/nullelement.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:PushNullElement
port_count	elements/standard/nulls.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:Null1
port_count	elements/standard/nulls.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:Null2
port_count	elements/standard/nulls.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:Null3
port_count	elements/standard/nulls.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:Null4
port_count	elements/standard/nulls.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:Null5
port_count	elements/standard/nulls.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:Null6
port_count	elements/standard/nulls.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:Null7
port_count	elements/standard/nulls.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:Null8
port_count	elements/standard/paint.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:Paint
port_count	elements/standard/paintswitch.hh	/^    const char *port_count() const		{ return "1\/-"; }$/;"	f	class:PaintSwitch
port_count	elements/standard/painttee.hh	/^    const char *port_count() const	{ return "1\/2"; }$/;"	f	class:PaintTee
port_count	elements/standard/print.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:Print
port_count	elements/standard/priosched.hh	/^    const char *port_count() const	{ return "-\/1"; }$/;"	f	class:PrioSched
port_count	elements/standard/randomerror.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:RandomBitErrors
port_count	elements/standard/randomsample.hh	/^    const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:RandomSample
port_count	elements/standard/randomswitch.hh	/^    const char *port_count() const	{ return "1\/1-"; }$/;"	f	class:RandomSwitch
port_count	elements/standard/ratedsource.hh	/^    const char *port_count() const		{ return PORTS_0_1; }$/;"	f	class:RatedSource
port_count	elements/standard/ratedsplitter.hh	/^    const char *port_count() const	{ return PORTS_1_1X2; }$/;"	f	class:RatedSplitter
port_count	elements/standard/ratedunqueue.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:RatedUnqueue
port_count	elements/standard/rrsched.hh	/^    const char *port_count() const	{ return "-\/1"; }$/;"	f	class:RRSched
port_count	elements/standard/rrswitch.hh	/^  const char *port_count() const	{ return "1\/1-"; }$/;"	f	class:RoundRobinSwitch
port_count	elements/standard/script.hh	/^    const char *port_count() const	{ return "-\/-"; }$/;"	f	class:Script
port_count	elements/standard/setannobyte.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SetAnnoByte
port_count	elements/standard/setcrc32.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:SetCRC32
port_count	elements/standard/setpackettype.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SetPacketType
port_count	elements/standard/settimestamp.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SetTimestamp
port_count	elements/standard/shaper.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:Shaper
port_count	elements/standard/simplequeue.hh	/^    const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:SimpleQueue
port_count	elements/standard/staticpullswitch.hh	/^  const char *port_count() const		{ return "-\/1"; }$/;"	f	class:StaticPullSwitch
port_count	elements/standard/staticswitch.hh	/^  const char *port_count() const		{ return "1\/-"; }$/;"	f	class:StaticSwitch
port_count	elements/standard/storedata.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:StoreData
port_count	elements/standard/stridesched.hh	/^    const char *port_count() const		{ return "1-\/1"; }$/;"	f	class:StrideSched
port_count	elements/standard/strideswitch.hh	/^  const char *port_count() const		{ return "1\/1-"; }$/;"	f	class:StrideSwitch
port_count	elements/standard/strip.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:Strip
port_count	elements/standard/striptonet.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:StripToNetworkHeader
port_count	elements/standard/suppressor.hh	/^  const char *port_count() const		{ return "-\/="; }$/;"	f	class:Suppressor
port_count	elements/standard/switch.hh	/^  const char *port_count() const		{ return "1\/-"; }$/;"	f	class:Switch
port_count	elements/standard/tee.hh	/^  const char *port_count() const		{ return "1\/1-"; }$/;"	f	class:PullTee
port_count	elements/standard/tee.hh	/^  const char *port_count() const		{ return "1\/1-"; }$/;"	f	class:Tee
port_count	elements/standard/timedsink.hh	/^  const char *port_count() const		{ return PORTS_1_0; }$/;"	f	class:TimedSink
port_count	elements/standard/timedsource.hh	/^  const char *port_count() const		{ return PORTS_0_1; }$/;"	f	class:TimedSource
port_count	elements/standard/timedunqueue.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:TimedUnqueue
port_count	elements/standard/truncate.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:Truncate
port_count	elements/standard/unqueue.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:Unqueue
port_count	elements/standard/unqueue2.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:Unqueue2
port_count	elements/standard/unstrip.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:Unstrip
port_count	elements/tcpudp/checktcpheader.hh	/^  const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:CheckTCPHeader
port_count	elements/tcpudp/checkudpheader.hh	/^  const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:CheckUDPHeader
port_count	elements/tcpudp/dynudpipencap.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:DynamicUDPIPEncap
port_count	elements/tcpudp/settcpchecksum.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SetTCPChecksum
port_count	elements/tcpudp/setudpchecksum.hh	/^    const char *port_count() const	{ return PORTS_1_1X2; }$/;"	f	class:SetUDPChecksum
port_count	elements/tcpudp/snooptcp.hh	/^  const char *port_count() const		{ return "2\/4"; }$/;"	f	class:SnoopTCP
port_count	elements/tcpudp/tcpfragmenter.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:TCPFragmenter
port_count	elements/tcpudp/tcpipsend.hh	/^  const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:TCPIPSend
port_count	elements/tcpudp/udpip6encap.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:UDPIP6Encap
port_count	elements/tcpudp/udpipencap.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:UDPIPEncap
port_count	elements/test/checkpacket.hh	/^    const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:CheckPacket
port_count	elements/test/comparepackets.hh	/^    const char *port_count() const		{ return "2\/2"; }$/;"	f	class:ComparePackets
port_count	elements/test/handlertask.hh	/^    const char *port_count() const		{ return PORTS_0_0; }$/;"	f	class:HandlerTask
port_count	elements/test/neighborhoodtest.hh	/^    const char *port_count() const		{ return "-\/-"; }$/;"	f	class:NeighborhoodTest
port_count	elements/test/notifierdebug.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:NotifierDebug
port_count	elements/test/nulltask.hh	/^    const char *port_count() const		{ return PORTS_0_0; }$/;"	f	class:NullTask
port_count	elements/test/queuethreadtest.hh	/^    const char *port_count() const		{ return PORTS_0_1; }$/;"	f	class:QueueThreadTest1
port_count	elements/test/queuethreadtest.hh	/^    const char *port_count() const		{ return PORTS_1_0; }$/;"	f	class:QueueThreadTest2
port_count	elements/test/queueyanktest.hh	/^    const char *port_count() const		{ return PORTS_0_0; }$/;"	f	class:QueueYankTest
port_count	elements/test/schedordertest.hh	/^    const char *port_count() const		{ return PORTS_0_0; }$/;"	f	class:SchedOrderTest
port_count	elements/test/upstreamnotifier.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:UpstreamNotifier
port_count	elements/threads/spinlockacquire.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:SpinlockAcquire
port_count	elements/threads/spinlockrelease.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:SpinlockRelease
port_count	elements/userlevel/fromdevice.hh	/^    const char *port_count() const	{ return "0\/1-2"; }$/;"	f	class:FromDevice
port_count	elements/userlevel/fromdump.hh	/^    const char *port_count() const		{ return "0\/1-2"; }$/;"	f	class:FromDump
port_count	elements/userlevel/fromhost.hh	/^    const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:FromHost
port_count	elements/userlevel/ipflowrawsockets.hh	/^    const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:IPFlowRawSockets
port_count	elements/userlevel/kernelfilter.hh	/^    const char *port_count() const	{ return PORTS_0_0; }$/;"	f	class:KernelFilter
port_count	elements/userlevel/kerneltun.hh	/^    const char *port_count() const	{ return "0-1\/1-2"; }$/;"	f	class:KernelTun
port_count	elements/userlevel/printold.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:PrintOld
port_count	elements/userlevel/rawsocket.hh	/^  const char *port_count() const	{ return "0-1\/0-1"; }$/;"	f	class:RawSocket
port_count	elements/userlevel/socket.hh	/^  const char *port_count() const	{ return "0-1\/0-1"; }$/;"	f	class:Socket
port_count	elements/userlevel/todevice.hh	/^    const char *port_count() const		{ return "1\/0-2"; }$/;"	f	class:ToDevice
port_count	elements/userlevel/todump.hh	/^    const char *port_count() const	{ return "1\/0-1"; }$/;"	f	class:ToDump
port_count	elements/userlevel/tohost.hh	/^    const char *port_count() const	{ return PORTS_1_0; }$/;"	f	class:ToHost
port_count	elements/wifi/ap/associationresponder.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:AssociationResponder
port_count	elements/wifi/ap/beaconsource.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:BeaconSource
port_count	elements/wifi/ap/openauthresponder.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:OpenAuthResponder
port_count	elements/wifi/ap/proberesponder.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:ProbeResponder
port_count	elements/wifi/ap/stationtable.hh	/^  const char *port_count() const		{ return PORTS_0_0; }$/;"	f	class:StationTable
port_count	elements/wifi/athdescdecap.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:AthdescDecap
port_count	elements/wifi/athdescencap.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:AthdescEncap
port_count	elements/wifi/autoratefallback.hh	/^  const char *port_count() const		{ return "2\/0-2"; }$/;"	f	class:AutoRateFallback
port_count	elements/wifi/availablerates.hh	/^  const char *port_count() const		{ return PORTS_0_0; }$/;"	f	class:AvailableRates
port_count	elements/wifi/ethercount.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:EtherCount
port_count	elements/wifi/extradecap.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:ExtraDecap
port_count	elements/wifi/extraencap.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:ExtraEncap
port_count	elements/wifi/filterfailures.hh	/^  const char *port_count() const		{ return "1\/1-3"; }$/;"	f	class:FilterFailures
port_count	elements/wifi/filterphyerr.hh	/^  const char *port_count() const		{ return "1\/1-3"; }$/;"	f	class:FilterPhyErr
port_count	elements/wifi/filtertx.hh	/^  const char *port_count() const		{ return PORTS_1_1X2; }$/;"	f	class:FilterTX
port_count	elements/wifi/fromhandler.hh	/^    const char *port_count() const		{ return "0\/1-2"; }$/;"	f	class:FromHandler
port_count	elements/wifi/madwifirate.hh	/^  const char *port_count() const		{ return "2\/0-2"; }$/;"	f	class:MadwifiRate
port_count	elements/wifi/packetstore.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:PacketStore
port_count	elements/wifi/printtxfeedback.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:PrintTXFeedback
port_count	elements/wifi/printwifi.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:PrintWifi
port_count	elements/wifi/prism2decap.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:Prism2Decap
port_count	elements/wifi/prism2encap.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:Prism2Encap
port_count	elements/wifi/probetxrate.hh	/^  const char *port_count() const		{ return "2\/0-2"; }$/;"	f	class:ProbeTXRate
port_count	elements/wifi/pushanno.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:PushAnno
port_count	elements/wifi/radiotapdecap.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:RadiotapDecap
port_count	elements/wifi/radiotapencap.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:RadiotapEncap
port_count	elements/wifi/readanno.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:ReadAnno
port_count	elements/wifi/rxstats.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:RXStats
port_count	elements/wifi/setrts.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SetRTS
port_count	elements/wifi/settxpower.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SetTXPower
port_count	elements/wifi/settxrate.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:SetTXRate
port_count	elements/wifi/station/associationrequester.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:AssociationRequester
port_count	elements/wifi/station/beaconscanner.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:BeaconScanner
port_count	elements/wifi/station/beacontracker.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:BeaconTracker
port_count	elements/wifi/station/openauthrequester.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:OpenAuthRequester
port_count	elements/wifi/station/proberequester.hh	/^  const char *port_count() const	{ return PORTS_0_1; }$/;"	f	class:ProbeRequester
port_count	elements/wifi/wepdecap.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:WepDecap
port_count	elements/wifi/wepencap.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:WepEncap
port_count	elements/wifi/wifidecap.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:WifiDecap
port_count	elements/wifi/wifidefrag.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:WifiDefrag
port_count	elements/wifi/wifidupefilter.hh	/^  const char *port_count() const		{ return PORTS_1_1; }$/;"	f	class:WifiDupeFilter
port_count	elements/wifi/wifiencap.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:WifiEncap
port_count	elements/wifi/wififragment.hh	/^  const char *port_count() const	{ return PORTS_1_1; }$/;"	f	class:WifiFragment
port_count	elements/wifi/wifiseq.hh	/^  const char *port_count() const	{ return "1\/-"; }$/;"	f	class:WifiSeq
port_count	elements/wifi/wirelessinfo.hh	/^  const char *port_count() const		{ return PORTS_0_0; }$/;"	f	class:WirelessInfo
port_count	include/click/standard/errorelement.hh	/^    const char *port_count() const		{ return "-\/-"; }$/;"	f	class:ErrorElement
port_count	lib/element.cc	/^Element::port_count() const$/;"	f	class:Element
port_count_code	tools/lib/eclasst.hh	/^ElementClassT::port_count_code() const$/;"	f	class:ElementClassT
port_count_code	tools/lib/etraits.hh	/^    String port_count_code;$/;"	m	struct:ElementTraits
port_description	elements/local/OpenFlow/datapath.cc	/^void Datapath::port_description(struct ofp_phy_port* desc, uint16_t port_no) $/;"	f	class:Datapath
port_flow	lib/element.cc	/^Element::port_flow(bool isoutput, int p, Bitvector* travels) const$/;"	f	class:Element
port_flow	tools/lib/processingt.hh	/^    int port_flow(const PortT &port, bool isoutput, Bitvector *x, ErrorHandler *errh = 0) const {$/;"	f	class:ProcessingT
port_id	elements/local/OpenFlow/lib/stp.cc	/^    int port_id;                    \/* 8.5.5.1: Unique port identifier. *\/$/;"	m	struct:stp_port	file:
port_id	elements/local/OpenFlow/lib/stp.cc	/^    uint16_t port_id;              \/* 8.5.1.4: Port transmitting the BPDU. *\/$/;"	m	struct:stp_config_bpdu	file:
port_names	lib/lexer.cc	/^static const char * const port_names[2] = {"input", "output"};$/;"	v	file:
port_no	elements/local/OpenFlow/datapath.cc	/^	int port_no;	\/* from ofp_stats_request *\/$/;"	m	struct:port_stats_state	file:
port_no	elements/local/OpenFlow/datapath.hh	/^	uint16_t port_no;$/;"	m	struct:click_port
port_no	elements/local/OpenFlow/include/openflow/openflow.hh	/^	uint16_t port_no;$/;"	m	struct:netopen_rate_shape
port_no	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t port_no;        \/* All ports if OFPT_ALL. *\/$/;"	m	struct:ofp_queue_stats_request
port_no	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t port_no;        \/* OFPST_PORT message must request statistics$/;"	m	struct:ofp_port_stats_request
port_no	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t port_no;$/;"	m	struct:ofp_phy_port
port_no	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t port_no;$/;"	m	struct:ofp_port_mod
port_no	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t port_no;$/;"	m	struct:ofp_port_stats
port_no	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t port_no;$/;"	m	struct:ofp_queue_stats
port_on_use	elements/local/OpenFlow/datapath.hh	/^	uint8_t port_on_use;$/;"	m	struct:click_port
port_pm	apps/clicky/src/dstyle.cc	/^static dcss_propmatch port_pm[] = {$/;"	m	namespace:clicky	file:
port_pmp	apps/clicky/src/dstyle.cc	/^static dcss_propmatch *port_pmp[num_port_pm];$/;"	m	namespace:clicky	file:
port_position	apps/clicky/src/dwidget.hh	/^inline double delt::port_position(bool isoutput, int port,$/;"	f	class:clicky::delt
port_split	apps/clicky/src/dstyle.hh	/^    int port_split;$/;"	m	struct:clicky::delt_style
port_stats_done	elements/local/OpenFlow/datapath.cc	/^static void port_stats_done(void *state)$/;"	f	file:
port_stats_dump	elements/local/OpenFlow/datapath.cc	/^static int port_stats_dump(class Datapath *dp, void *state,$/;"	f	file:
port_stats_init	elements/local/OpenFlow/datapath.cc	/^static int port_stats_init(const void *body, int \/*body_len*\/, void **state)$/;"	f	file:
port_stats_state	elements/local/OpenFlow/datapath.cc	/^struct port_stats_state {$/;"	s	file:
port_style	apps/clicky/src/dstyle.cc	/^ref_ptr<dport_style> dcss_set::port_style(crouter *cr, const delt *e,$/;"	f	class:clicky::dcss_set
port_typ	conf/click-mkclgw.pl	/^sub port_typ {$/;"	s
port_variation	elements/ip/iprwpattern.cc	/^port_variation(const String &str, int32_t *port, int32_t *variation,$/;"	f	namespace:__anon345
portinfo	elements/standard/drr.hh	/^    struct portinfo {$/;"	s	class:DRRSched
ports	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_phy_port ports[0];  \/* Port definitions.  The number of ports$/;"	m	struct:ofp_switch_features	typeref:struct:ofp_switch_features::ofp_phy_port
ports	elements/local/OpenFlow/lib/stp.cc	/^    struct stp_port ports[STP_MAX_PORTS];$/;"	m	struct:stp	typeref:struct:stp::stp_port	file:
ports_dot	apps/clicky/src/dwidget.cc	/^static void ports_dot(StringAccum &sa, int nports, char c)$/;"	f	namespace:clicky
ports_reverse_order	elements/analysis/aggregateipflows.cc	/^ports_reverse_order(uint32_t ports)$/;"	f	file:
pos	elements/analysis/fromdagdump.hh	/^	    DAGPosCell pos;$/;"	m	union:FromDAGDump::DAGCell::__anon270
pos	elements/analysis/toipflowdumps.hh	/^	uint32_t pos;$/;"	m	struct:ToIPFlowDumps::Note
pos	elements/local/FlowNet/papmo/PaPMo.hh	/^	uint32_t pos;$/;"	m	struct:composed_trace
pos	elements/local/OpenFlow/lib/vconn.hh	/^    const uint8_t *pos, *end;$/;"	m	struct:flow_stats_iterator
pos	include/click/hashallocator.hh	/^	size_t pos;$/;"	m	struct:HashAllocator::buffer
pos	lib/clp.c	/^    char *pos;$/;"	m	struct:Clp_BuildString	file:
pos	tools/click-pretty/click-pretty.cc	/^    int pos;$/;"	m	struct:OutputItem	file:
pos1	tools/lib/lexert.hh	/^    const char *pos1() const		{ return _pos; }$/;"	f	class:Lexeme
pos2	tools/lib/lexert.hh	/^    const char *pos2() const		{ return _pos + _s.length(); }$/;"	f	class:Lexeme
position	elements/local/OpenFlow/datapath.cc	/^	struct sw_table_position position;$/;"	m	struct:flow_stats_state	typeref:struct:flow_stats_state::sw_table_position	file:
position_contents_dot	apps/clicky/src/dwidget.cc	/^void delt::position_contents_dot(crouter *cr, ErrorHandler *errh)$/;"	f	class:clicky::delt
positional	include/click/args.hh	/^    static constexpr int positional = 2; \/\/\/< read flag for positional arguments$/;"	m	struct:Args
post_push	elements/local/FlowNet/scheduler/sched_algorithms/SchedBackpressure.cc	/^int VcScheduleBackpressure::post_push(Flow* flow_in, Packet*)$/;"	f	class:VcScheduleBackpressure
post_push	elements/local/FlowNet/scheduler/sched_algorithms/SchedHorizon.cc	/^int VcScheduleHorizon::post_push(Flow* flow_in, Packet*)$/;"	f	class:VcScheduleHorizon
post_push	elements/local/FlowNet/scheduler/sched_algorithms/SchedLogWeight.cc	/^int VcScheduleLogWeight::post_push(Flow* flow_in, Packet*)$/;"	f	class:VcScheduleLogWeight
post_push	elements/local/FlowNet/scheduler/sched_algorithms/SchedNoSchedule.cc	/^int VcScheduleNoSchedule::post_push(Flow *, Packet *)$/;"	f	class:VcScheduleNoSchedule
post_push	elements/local/FlowNet/scheduler/sched_algorithms/SchedWBS.cc	/^int VcScheduleWBS::post_push(Flow* flow_in, Packet*)$/;"	f	class:VcScheduleWBS
post_select	lib/selectset.cc	/^SelectSet::post_select(RouterThread *thread, bool acquire)$/;"	f	class:SelectSet
postparse	lib/args.cc	/^Args::postparse(bool ok, Slot *slot_status)$/;"	f	class:Args
power	include/clicknet/wifi.h	/^  uint8_t power;$/;"	m	struct:click_wifi_extra
pprev	include/click/string.hh	/^	memo_t **pprev;$/;"	m	struct:String::memo_t
ppull	tools/lib/processingt.hh	/^	ppush = 1, ppull = 2, pagnostic = 4, perror = 8$/;"	e	enum:ProcessingT::ProcessingCode
ppush	tools/lib/processingt.hh	/^	ppush = 1, ppull = 2, pagnostic = 4, perror = 8$/;"	e	enum:ProcessingT::ProcessingCode
prc1023	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t prc1023;$/;"	m	struct:e1000_hw_stats
prc1023	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t prc1023;$/;"	m	struct:e1000_hw_stats
prc1023	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t prc1023;$/;"	m	struct:e1000_hw_stats
prc127	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t prc127;$/;"	m	struct:e1000_hw_stats
prc127	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t prc127;$/;"	m	struct:e1000_hw_stats
prc127	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t prc127;$/;"	m	struct:e1000_hw_stats
prc1522	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t prc1522;$/;"	m	struct:e1000_hw_stats
prc1522	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t prc1522;$/;"	m	struct:e1000_hw_stats
prc1522	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t prc1522;$/;"	m	struct:e1000_hw_stats
prc255	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t prc255;$/;"	m	struct:e1000_hw_stats
prc255	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t prc255;$/;"	m	struct:e1000_hw_stats
prc255	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t prc255;$/;"	m	struct:e1000_hw_stats
prc511	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t prc511;$/;"	m	struct:e1000_hw_stats
prc511	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t prc511;$/;"	m	struct:e1000_hw_stats
prc511	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t prc511;$/;"	m	struct:e1000_hw_stats
prc64	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t prc64;$/;"	m	struct:e1000_hw_stats
prc64	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t prc64;$/;"	m	struct:e1000_hw_stats
prc64	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t prc64;$/;"	m	struct:e1000_hw_stats
pre_push	elements/local/FlowNet/scheduler/sched_algorithms/SchedBackpressure.cc	/^int VcScheduleBackpressure::pre_push(Flow* flow_in, Packet* p)$/;"	f	class:VcScheduleBackpressure
pre_push	elements/local/FlowNet/scheduler/sched_algorithms/SchedHorizon.cc	/^int VcScheduleHorizon::pre_push(Flow* flow_in, Packet* p)$/;"	f	class:VcScheduleHorizon
pre_push	elements/local/FlowNet/scheduler/sched_algorithms/SchedLogWeight.cc	/^int VcScheduleLogWeight::pre_push(Flow* flow_in, Packet* p)$/;"	f	class:VcScheduleLogWeight
pre_push	elements/local/FlowNet/scheduler/sched_algorithms/SchedNoSchedule.cc	/^int VcScheduleNoSchedule::pre_push(Flow *, Packet *)$/;"	f	class:VcScheduleNoSchedule
pre_push	elements/local/FlowNet/scheduler/sched_algorithms/SchedWBS.cc	/^int VcScheduleWBS::pre_push(Flow* flow_in, Packet* p)$/;"	f	class:VcScheduleWBS
prefetch	drivers/e1000-7.x/src/kcompat.h	1011;"	d
prefetch_packet	elements/standard/msqueue.hh	/^MSQueue::prefetch_packet(Packet *p)$/;"	f	class:MSQueue
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	bsdmodule/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	click-buildtool	/^prefix () {$/;"	f
prefix	doc/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	elements/ip/directiplookup.hh	/^	uint32_t prefix;$/;"	m	struct:DirectIPLookup::CleartextEntry
prefix	etc/libclick/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	linuxmodule/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	ns/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	tools/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	tools/click-align/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	tools/click-check/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	tools/click-combine/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	tools/click-devirtualize/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	tools/click-fastclassifier/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	tools/click-flatten/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	tools/click-install/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	tools/click-mkmindriver/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	tools/click-pretty/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	tools/click-undead/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	tools/click-xform/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	tools/click2xml/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	tools/lib/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	userlevel/Makefile	/^prefix = \/usr\/local$/;"	m
prefix_chars_	include/click/args.hh	/^    const unsigned char *prefix_chars_;$/;"	m	struct:UnitArg
prefix_hash	elements/ip/directiplookup.cc	/^DirectIPLookup::Table::prefix_hash(uint32_t prefix, uint32_t len)$/;"	f	class:DirectIPLookup::Table
prefix_len	elements/ip/iproutetable.hh	/^    int prefix_len() const	{ return mask.mask_to_prefix_len(); }$/;"	f	struct:IPRoute
prefix_len	elements/ipsec/ipsecroutetable.hh	/^    int prefix_len() const	{ return mask.mask_to_prefix_len(); }$/;"	f	struct:IPsecRoute
prefix_usage	click-buildtool	/^prefix_usage () {$/;"	f
prefix_with_slash	lib/ipaddress.cc	/^prefix_with_slash(const String &str, const char *slash,$/;"	f	file:
prefixes	elements/userlevel/progressbar.cc	/^static const char prefixes[] = " KMGTP";$/;"	v	file:
preinverted_divide	include/click/bigint.hh	/^    static void preinverted_divide(limb_type &q, limb_type &r,$/;"	f	class:Bigint
prep_msg	elements/etherswitch/bridgemessage.cc	/^void BridgeMessage::prep_msg(BridgeMessage::wire* msg) {$/;"	f	class:BridgeMessage
prepare	elements/analysis/ipsumdumpinfo.hh	/^    void (*prepare)(PacketDesc &, const FieldWriter *);$/;"	m	struct:IPSummaryDump::FieldWriter
prepare	elements/linuxmodule/perfcountuser.cc	/^PerfCountUser::prepare(const String &name, ErrorHandler *errh, int force)$/;"	f	class:PerfCountUser
prepare	include/click/ino.hh	/^ClickIno::prepare(Router* router, uint32_t generation)$/;"	f	class:ClickIno
prepare_items	tools/click-pretty/click-pretty.cc	/^prepare_items(int last_pos)$/;"	f	file:
prepare_router	lib/master.cc	/^Master::prepare_router(Router *router)$/;"	f	class:Master
prepare_times	elements/analysis/fromdagdump.cc	/^FromDAGDump::prepare_times(const Timestamp &tv)$/;"	f	class:FromDAGDump
prepare_times	elements/analysis/fromnlanrdump.cc	/^FromNLANRDump::prepare_times(const Timestamp &tv)$/;"	f	class:FromNLANRDump
prepare_times	elements/userlevel/fromdump.cc	/^FromDump::prepare_times(const Timestamp &ts)$/;"	f	class:FromDump
prepare_tmpdir	tools/click-install/click-install.cc	/^prepare_tmpdir(ErrorHandler *errh)$/;"	f	file:
preparse_fraction	lib/args.cc	/^preparse_fraction(const char *begin, const char *end, bool is_signed,$/;"	f	namespace:__anon505
prepend_metric	elements/grid/bottleneckmetric.hh	/^  metric_t prepend_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:BottleneckMetric
prepend_metric	elements/grid/e2elossmetric.hh	/^  metric_t prepend_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:E2ELossMetric
prepend_metric	elements/grid/etx2metric.hh	/^  metric_t prepend_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:ETX2Metric
prepend_metric	elements/grid/etxmetric.hh	/^  metric_t prepend_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:ETXMetric
prepend_metric	elements/grid/hopcountmetric.hh	/^  metric_t prepend_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:HopcountMetric
prepend_metric	elements/grid/lirmetric.hh	/^  metric_t prepend_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:LIRMetric
prepend_metric	elements/grid/threshmetric.hh	/^  metric_t prepend_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:ThresholdMetric
prepend_metric	elements/grid/yarvismetric.hh	/^  metric_t prepend_metric(const metric_t &r, const metric_t &l) const$/;"	f	class:YarvisMetric
pretty_process	tools/click-pretty/click-pretty.cc	/^pretty_process(const char *infile, bool file_is_expr, const char *outfile,$/;"	f	file:
pretty_process_dot	tools/click-pretty/click-pretty.cc	/^pretty_process_dot(const char *infile, bool file_is_expr, const char *outfile,$/;"	f	file:
pretty_process_gml	tools/click-pretty/click-pretty.cc	/^pretty_process_gml(const char *infile, bool file_is_expr, const char *outfile,$/;"	f	file:
pretty_process_graphml	tools/click-pretty/click-pretty.cc	/^pretty_process_graphml(const char *infile, bool file_is_expr, const char *outfile,$/;"	f	file:
pretty_read_router	tools/click-pretty/click-pretty.cc	/^pretty_read_router(const char *filename, bool file_is_expr,$/;"	f	file:
prev	elements/local/OpenFlow/lib/list.hh	/^    struct list *prev;     \/* Previous list element. *\/$/;"	m	struct:list	typeref:struct:list::list
prev	include/click/list.hh	/^    T *prev() {$/;"	f	class:List_member
prev	include/click/list.hh	/^    const T *prev() const {$/;"	f	class:List_member
prev	include/click/packet.hh	/^	Packet *prev;$/;"	m	struct:Packet::AllAnno
prev	include/click/packet.hh	/^Packet::prev() const$/;"	f	class:Packet
prev	include/click/packet.hh	/^Packet::prev()$/;"	f	class:Packet
prev	lib/glue.cc	/^    Chunk *prev;$/;"	m	struct:Chunk	file:
prev	ns/CUT_BinHeap.h	/^      Node* prev;$/;"	m	class:CUT_BinHeap::Node
prev_frame_type	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^	unsigned int prev_frame_type;$/;"	m	class:FlowMpeg2AdaptEncap
prev_i	elements/linuxmodule/cpuqueue.hh	/^  int prev_i(int i) const { return (i!=0 ? i-1 : _capacity); }$/;"	f	class:CPUQueue
prev_i	elements/tcpudp/snooptcp.hh	/^  int prev_i(int i) const	{ return (i ? i-1 : S_CACHE_SIZE-1); }$/;"	f	struct:SnoopTCP::PCB
prev_i	include/click/dequeue.hh	/^  int prev_i(int i) const               { return (i != 0 ? i - 1 : _cap - 1); }$/;"	f	class:DEQueue
prev_i	include/click/standard/storage.hh	/^    index_type prev_i(index_type i) const {$/;"	f	class:Storage
prev_name	tools/lib/routert.hh	/^	int prev_name;$/;"	m	struct:RouterT::ElementType
prev_rdfh	drivers/e1000-7.x/src/e1000.h	/^        int prev_rdfh;             \/* prev value of Rcv Data Fifo Head register *\/$/;"	m	struct:e1000_adapter
prev_rdft	drivers/e1000-7.x/src/e1000.h	/^        int prev_rdft;             \/* prev value of Rcv Data Fifo Tail register *\/$/;"	m	struct:e1000_adapter
prev_status	drivers/e1000-4.x/src/ans.h	/^    IANS_BD_PARAM_STATUS prev_status; \/* status struct to be compared with current *\/$/;"	m	struct:_iANSsupport_t
previous_buffer_info	drivers/e1000-5.x/src/e1000.h	/^	struct e1000_buffer previous_buffer_info;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_buffer
primitive	apps/clicky/src/dwidget.hh	/^    bool primitive() const {$/;"	f	class:clicky::delt
primitive	tools/lib/eclasst.cc	/^    bool primitive() const		{ return false; }$/;"	f	class:__anon533::TraitsElementClassT
primitive	tools/lib/eclasst.hh	/^    bool primitive() const		{ return false; }$/;"	f	class:SynonymElementClassT
primitive	tools/lib/eclasst.hh	/^    virtual bool primitive() const	{ return true; }$/;"	f	class:ElementClassT
primitive	tools/lib/routert.hh	/^    bool primitive() const		{ return false; }$/;"	f	class:RouterT
print	elements/ip/ipratemon.cc	/^IPRateMonitor::print(Stats *s, String ip)$/;"	f	class:IPRateMonitor
print	elements/standard/classification.cc	/^DominatorOptimizer::print()$/;"	f	class:Classification::Wordwise::DominatorOptimizer
print	tools/click-align/click-align.cc	/^RouterAlign::print(FILE *f)$/;"	f	class:RouterAlign
print	tools/click-xform/adjacency.cc	/^AdjacencyMatrix::print() const$/;"	f	class:AdjacencyMatrix
printDouble	apps/ClickController/Util.java	/^    public static String printDouble(double d) { $/;"	m	class:Util
printDouble	apps/ClickController/Util.java	/^    public static String printDouble(double d, int p) {$/;"	m	class:Util
print_and_free	elements/local/OpenFlow/lib/ofp-print.cc	/^print_and_free(FILE *stream, char *string) $/;"	f	file:
print_best_gateway	elements/grid/gridgatewayinfo.cc	/^GridGatewayInfo::print_best_gateway(Element *f, void *)$/;"	f	class:GridGatewayInfo
print_class_reference	tools/click2xml/click2xml.cc	/^print_class_reference(FILE *f, ElementClassT *c, const char *prefix)$/;"	f	file:
print_dump	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::print_dump(Element *e, void *)$/;"	f	class:DSDVRouteTable
print_elements_conf	tools/click-mkmindriver/click-mkmindriver.cc	/^Mindriver::print_elements_conf(FILE *f, String package, const ElementMap &emap, const String &top_srcdir)$/;"	f	class:Mindriver
print_error	elements/local/FlowNet/papmo/PaPMo.cc	/^static int print_error = 0;$/;"	v	file:
print_error_message	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^void FlowMpeg2AdaptEncap::print_error_message(int errorcode)$/;"	f	class:FlowMpeg2AdaptEncap
print_est_type	elements/grid/gridroutetable.cc	/^GridRouteTable::print_est_type(Element *e, void *)$/;"	f	class:GridRouteTable
print_eth	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::print_eth(Element *e, void *)$/;"	f	class:DSDVRouteTable
print_eth	elements/grid/gridroutetable.cc	/^GridRouteTable::print_eth(Element *e, void *)$/;"	f	class:GridRouteTable
print_eth	elements/grid/updateroutes.cc	/^print_eth(Element *e, void *)$/;"	f	file:
print_ether_linkstat	elements/grid/printgrid.cc	/^PrintGrid::print_ether_linkstat(Packet *p) const$/;"	f	class:PrintGrid
print_filename	lib/fromfile.cc	/^FromFile::print_filename() const$/;"	f	class:FromFile
print_flow	elements/local/OpenFlow/lib/switch-flow.cc	/^print_flow(const struct sw_flow_key *key)$/;"	f
print_frame_index	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^void FlowMpeg2AdaptDecapStat::print_frame_index( FILE* fp, char* buf )$/;"	f	class:FlowMpeg2AdaptDecapStat
print_frame_index	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^void FlowMpeg2AdaptEncapStat::print_frame_index( FILE* fp, char* buf )$/;"	f	class:FlowMpeg2AdaptEncapStat
print_frame_type	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^void FlowMpeg2AdaptEncapStat::print_frame_type( FILE* fp )$/;"	f	class:FlowMpeg2AdaptEncapStat
print_frozen	elements/grid/gridroutetable.cc	/^GridRouteTable::print_frozen(Element *e, void *)$/;"	f	class:GridRouteTable
print_history	elements/grid/ackretrysender.cc	/^ACKRetrySender::print_history(Element *e, void *)$/;"	f	class:ACKRetrySender
print_history	elements/grid/ackretrysender2.cc	/^ACKRetrySender2::print_history(Element *e, void *)$/;"	f	class:ACKRetrySender2
print_hosts	elements/wifi/linktable.cc	/^LinkTable::print_hosts()$/;"	f	class:LinkTable
print_ip	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::print_ip(Element *e, void *)$/;"	f	class:DSDVRouteTable
print_ip	elements/grid/gridroutetable.cc	/^GridRouteTable::print_ip(Element *e, void *)$/;"	f	class:GridRouteTable
print_ip	elements/grid/updateroutes.cc	/^print_ip(Element *e, void *)$/;"	f	file:
print_ip_netmask	elements/local/OpenFlow/lib/ofp-print.cc	/^print_ip_netmask(struct ds *string, const char *leader, uint32_t ip,$/;"	f	file:
print_landmark_attributes	tools/click2xml/click2xml.cc	/^print_landmark_attributes(FILE *f, const String &landmark)$/;"	f	file:
print_links	elements/grid/gridroutetable.cc	/^GridRouteTable::print_links(Element *e, void *)$/;"	f	class:GridRouteTable
print_links	elements/wifi/linktable.cc	/^LinkTable::print_links()$/;"	f	class:LinkTable
print_log	elements/grid/packetlogger.cc	/^PacketLogger::print_log(Element *e, void *)$/;"	f	class:PacketLogger
print_log	elements/grid/packetlogger2.cc	/^PacketLogger2::print_log(Element *e, void *)$/;"	f	class:PacketLogger2
print_metric_range	elements/grid/gridroutetable.cc	/^GridRouteTable::print_metric_range(Element *e, void *)$/;"	f	class:GridRouteTable
print_metric_type	elements/grid/gridroutetable.cc	/^GridRouteTable::print_metric_type(Element *e, void *)$/;"	f	class:GridRouteTable
print_mpeg2ts_udp_packet	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^int FlowMpeg2AdaptEncap::print_mpeg2ts_udp_packet( Packet* p, int print_option )$/;"	f	class:FlowMpeg2AdaptEncap
print_nbrs	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::print_nbrs(Element *e, void *)$/;"	f	class:DSDVRouteTable
print_nbrs	elements/grid/gridroutetable.cc	/^GridRouteTable::print_nbrs(Element *e, void *)$/;"	f	class:GridRouteTable
print_nbrs	elements/grid/updateroutes.cc	/^print_nbrs(Element *e, void *)$/;"	f	file:
print_nbrs_v	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::print_nbrs_v(Element *e, void *)$/;"	f	class:DSDVRouteTable
print_nbrs_v	elements/grid/gridroutetable.cc	/^GridRouteTable::print_nbrs_v(Element *e, void *)$/;"	f	class:GridRouteTable
print_now	elements/local/FlowNet/utils/FlowNetUtils.cc	/^void print_now()$/;"	f
print_paused	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::print_paused(Element *e, void *)$/;"	f	class:DSDVRouteTable
print_port_stat	elements/local/OpenFlow/lib/ofp-print.cc	/^static void print_port_stat(struct ds *string, const char *leader, $/;"	f	file:
print_rates	elements/wifi/autoratefallback.cc	/^AutoRateFallback::print_rates()$/;"	f	class:AutoRateFallback
print_rates	elements/wifi/madwifirate.cc	/^MadwifiRate::print_rates()$/;"	f	class:MadwifiRate
print_rates	elements/wifi/probetxrate.cc	/^ProbeTXRate::print_rates()$/;"	f	class:ProbeTXRate
print_routes	elements/wifi/linktable.cc	/^LinkTable::print_routes(bool from_me, bool pretty)$/;"	f	class:LinkTable
print_rtes	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::print_rtes(Element *e, void *)$/;"	f	class:DSDVRouteTable
print_rtes	elements/grid/gridroutetable.cc	/^GridRouteTable::print_rtes(Element *e, void *)$/;"	f	class:GridRouteTable
print_rtes	elements/grid/updateroutes.cc	/^print_rtes(Element *e, void *)$/;"	f	file:
print_rtes_v	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::print_rtes_v(Element *e, void *)$/;"	f	class:DSDVRouteTable
print_rtes_v	elements/grid/gridroutetable.cc	/^GridRouteTable::print_rtes_v(Element *e, void *)$/;"	f	class:GridRouteTable
print_sa_data	elements/ipsec/satable.cc	/^SATable::print_sa_data()$/;"	f	class:SATable
print_seq_delay	elements/grid/gridroutetable.cc	/^GridRouteTable::print_seq_delay(Element *e, void *)$/;"	f	class:GridRouteTable
print_seqno	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::print_seqno(Element *e, void *)$/;"	f	class:DSDVRouteTable
print_signature	tools/click-devirtualize/signature.cc	/^Signatures::print_signature() const$/;"	f	class:Signatures
print_stat	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^void FlowMpeg2AdaptDecap::print_stat()$/;"	f	class:FlowMpeg2AdaptDecap
print_stat	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^void FlowMpeg2AdaptEncap::print_stat()$/;"	f	class:FlowMpeg2AdaptEncap
print_stats	elements/grid/gridproxy.cc	/^GridProxy::print_stats()$/;"	f	class:GridProxy
print_stats	elements/local/OpenFlow/lib/ofp-print.cc	/^print_stats(struct ds *string, int type, const void *body, size_t body_len,$/;"	f	file:
print_summary	elements/grid/ackretrysender.cc	/^ACKRetrySender::print_summary(Element *e, void *)$/;"	f	class:ACKRetrySender
print_summary	elements/grid/ackretrysender2.cc	/^ACKRetrySender2::print_summary(Element *e, void *)$/;"	f	class:ACKRetrySender2
print_use_old_route	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::print_use_old_route(Element *e, void *)$/;"	f	class:DSDVRouteTable
print_version	test/testie	/^sub print_version () {$/;"	s
print_wild	elements/local/OpenFlow/lib/ofp-print.cc	/^static void print_wild(struct ds *string, const char *leader, int is_wild,$/;"	f	file:
printable	lib/string.cc	/^String::printable() const$/;"	f	class:String
printable_name	tools/lib/eclasst.hh	/^    String printable_name() const	{ return _printable_name; }$/;"	f	class:ElementClassT
printable_name_c_str	lib/lexer.cc	/^Lexer::Compound::printable_name_c_str()$/;"	f	class:Lexer::Compound
printable_name_c_str	tools/lib/eclasst.hh	/^    const char *printable_name_c_str() const { return _printable_name.c_str(); }$/;"	f	class:ElementClassT
printable_type_name	tools/lib/elementt.hh	/^    String printable_type_name() const	{ return _type->printable_name(); }$/;"	f	struct:ElementT
printable_where	lib/glue.cc	/^printable_where(Chunk *c)$/;"	f	file:
printer	elements/local/OpenFlow/lib/ofp-print.cc	/^    void (*printer)(struct ds *, const void *, size_t len, int verbosity);$/;"	m	struct:openflow_packet	file:
printf_ether	elements/local/FlowNet/utils/FlowNetUtils.cc	/^void printf_ether( click_ether* e)$/;"	f
printf_ip	elements/local/FlowNet/utils/FlowNetUtils.cc	/^void printf_ip( click_ip* i)$/;"	f
printf_udp	elements/local/FlowNet/utils/FlowNetUtils.cc	/^void printf_udp( click_udp* u)$/;"	f
priority	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t priority;        \/* Priority level of flow entry. *\/$/;"	m	struct:nx_flow_end
priority	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t priority;            \/* Priority level of flow entry. *\/$/;"	m	struct:ofp_flow_mod
priority	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t priority;        \/* Priority level of flow entry. *\/$/;"	m	struct:ofp_flow_removed
priority	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t priority;        \/* Priority of the entry. Only meaningful$/;"	m	struct:ofp_flow_stats
priority	elements/local/OpenFlow/lib/switch-flow.hh	/^    uint16_t priority;          \/* Only used on entries with wildcards. *\/$/;"	m	struct:sw_flow
private	include/click/cxxprotect.h	8;"	d
private	include/click/cxxunprotect.h	8;"	d
private	linuxmodule/clickfs.cc	75;"	d	file:
private	linuxmodule/clickfs.cc	77;"	d	file:
private_data	elements/local/FlowNet/common/CongestionDetection.hh	/^	void* private_data;$/;"	m	class:VcCongestionDetection
private_recv_msg	elements/local/OpenFlow/lib/private-msg.cc	/^private_recv_msg(class Datapath *dp, const struct rconn_sender *sender UNUSED,$/;"	f
private_vxhdr	elements/local/OpenFlow/include/openflow/private-ext.hh	/^struct private_vxhdr {$/;"	s
private_vxopt	elements/local/OpenFlow/include/openflow/private-ext.hh	/^struct private_vxopt {$/;"	s
probably_admitted	elements/local/OpenFlow/lib/rconn.cc	/^    bool probably_admitted;$/;"	m	struct:rconn	file:
probe	drivers/e1000-4.x/src/kcompat.h	/^	int (*probe)(struct pci_dev *dev, const struct pci_device_id *id);$/;"	m	struct:_kc_pci_driver
probe_dest	elements/grid/grid.hh	/^    uint32_t probe_dest;$/;"	m	struct:grid_route_reply
probe_interval	elements/local/OpenFlow/lib/rconn.cc	/^    int probe_interval;         \/* Secs of inactivity before sending probe. *\/$/;"	m	struct:rconn	file:
probe_list_t	elements/grid/linkstat.hh	/^    probe_list_t() : period(0), tau(0) { }$/;"	f	struct:LinkStat::probe_list_t
probe_list_t	elements/grid/linkstat.hh	/^    probe_list_t(const EtherAddress &e, unsigned int p, unsigned int t) : eth(e), period(p), tau(t) { }$/;"	f	struct:LinkStat::probe_list_t
probe_list_t	elements/grid/linkstat.hh	/^  struct probe_list_t {$/;"	s	class:LinkStat
probe_send_time	elements/grid/grid.hh	/^    struct timeval probe_send_time;$/;"	m	struct:grid_route_reply	typeref:struct:grid_route_reply::timeval
probe_t	elements/grid/linkstat.hh	/^    probe_t(const Timestamp &t, unsigned int s) : when(t), seq_no(s) { }$/;"	f	struct:LinkStat::probe_t
probe_t	elements/grid/linkstat.hh	/^  struct probe_t {$/;"	s	class:LinkStat
probe_write_handler	elements/grid/gridprobesender.cc	/^probe_write_handler(const String &arg, Element *element,$/;"	f	file:
probes	elements/grid/linkstat.hh	/^    DEQueue<probe_t> probes;   \/\/ most recently received probes$/;"	m	struct:LinkStat::probe_list_t
proc_list	drivers/e1000-4.x/src/e1000_proc.c	/^struct proc_list {$/;"	s	file:
proc_list_head	drivers/e1000-4.x/src/e1000.h	/^	struct list_head proc_list_head;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::list_head
process	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::process(Packet *p)$/;"	f	class:ToUserDevice
process	tools/click2xml/click2xml.cc	/^process(const char *infile, bool file_is_expr, bool flatten,$/;"	f	file:
process	tools/click2xml/xml2click.cc	/^process(const char *infile, bool file_is_expr, const char *outfile,$/;"	f	file:
process_comment	doc/click-elem2man	/^sub process_comment ($$$) {$/;"	s
process_disassociation	elements/wifi/station/associationrequester.cc	/^AssociationRequester::process_disassociation(Packet *p)$/;"	f	class:AssociationRequester
process_drivers	doc/click-elem2man	/^sub process_drivers ($) {$/;"	s
process_feedback	elements/wifi/autoratefallback.cc	/^AutoRateFallback::process_feedback(Packet *p_in)$/;"	f	class:AutoRateFallback
process_feedback	elements/wifi/madwifirate.cc	/^MadwifiRate::process_feedback(Packet *p_in)$/;"	f	class:MadwifiRate
process_feedback	elements/wifi/probetxrate.cc	/^ProbeTXRate::process_feedback(Packet *p_in) {$/;"	f	class:ProbeTXRate
process_file	click-mkelemmap	/^sub process_file ($) {$/;"	s
process_file	doc/click-elem2man	/^sub process_file ($;$) {$/;"	s
process_file_set	doc/click-elem2man	/^sub process_file_set ($$\\@) {$/;"	s
process_handler_type	doc/click-elem2man	/^sub process_handler_type ($) {$/;"	s
process_line_directive	lib/lexer.cc	/^Lexer::FileState::process_line_directive(const char *s, Lexer *lexer)$/;"	f	class:Lexer::FileState
process_line_directive	tools/lib/lexert.cc	/^LexerT::FileState::process_line_directive(const char *s, LexerT *lexer)$/;"	f	class:LexerT::FileState
process_one_portcount	doc/click-elem2man	/^sub process_one_portcount ($$) {$/;"	s
process_pending	lib/routerthread.cc	/^RouterThread::process_pending()$/;"	f	class:RouterThread
process_pending	lib/task.cc	/^Task::process_pending(RouterThread *thread)$/;"	f	class:Task
process_portcount	doc/click-elem2man	/^sub process_portcount ($) {$/;"	s
process_processing	doc/click-elem2man	/^sub process_processing ($) {$/;"	s
process_response	elements/wifi/station/associationrequester.cc	/^AssociationRequester::process_response(Packet *p)$/;"	f	class:AssociationRequester
process_signals	lib/master.cc	/^Master::process_signals(RouterThread *thread)$/;"	f	class:Master
process_summary_section	doc/click-elem2man	/^sub process_summary_section ($$) {$/;"	s
process_tag	tools/click-pretty/html.cc	/^process_tag(const char *x, String &tag, HashTable<String, String> &attrs,$/;"	f
processing	apps/clicky/src/crouter.hh	/^    ProcessingT *processing() const {$/;"	f	class:clicky::crouter
processing	elements/analysis/adjusttimestamp.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:AdjustTimestamp
processing	elements/analysis/aggcounter.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:AggregateCounter
processing	elements/analysis/aggpktcounter.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:AggregatePacketCounter
processing	elements/analysis/aggregatefilter.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:AggregateFilter
processing	elements/analysis/aggregatefirst.hh	/^    const char *processing() const	{ return PROCESSING_A_AH; }$/;"	f	class:AggregateFirst
processing	elements/analysis/aggregateip.hh	/^    const char *processing() const	{ return PROCESSING_A_AH; }$/;"	f	class:AggregateIP
processing	elements/analysis/aggregateipaddrpair.hh	/^    const char *processing() const	{ return PROCESSING_A_AH; }$/;"	f	class:AggregateIPAddrPair
processing	elements/analysis/aggregateipflows.hh	/^    const char *processing() const	{ return PROCESSING_A_AH; }$/;"	f	class:AggregateIPFlows
processing	elements/analysis/aggregatelast.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:AggregateLast
processing	elements/analysis/aggregatelen.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:AggregateLength
processing	elements/analysis/aggregatepaint.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:AggregatePaint
processing	elements/analysis/anonipaddr.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:AnonymizeIPAddr
processing	elements/analysis/eraseippayload.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:EraseIPPayload
processing	elements/analysis/fromcapdump.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:FromCapDump
processing	elements/analysis/fromdagdump.hh	/^    const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:FromDAGDump
processing	elements/analysis/fromflandump.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:FromFlanDump
processing	elements/analysis/fromipsumdump.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:FromIPSummaryDump
processing	elements/analysis/fromnetflowsumdump.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:FromNetFlowSummaryDump
processing	elements/analysis/fromnlanrdump.hh	/^    const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:FromNLANRDump
processing	elements/analysis/fromtcpdump.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:FromTcpdump
processing	elements/analysis/settimestampdelta.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:SetTimestampDelta
processing	elements/analysis/storetimestamp.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:StoreTimestamp
processing	elements/analysis/storeudptimeseqrecord.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:StoreUDPTimeSeqRecord
processing	elements/analysis/timefilter.hh	/^    const char *processing() const	{ return PROCESSING_A_AH; }$/;"	f	class:TimeFilter
processing	elements/analysis/timerange.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:TimeRange
processing	elements/analysis/timesortedsched.hh	/^    const char *processing() const	{ return PULL; }$/;"	f	class:TimeSortedSched
processing	elements/analysis/timestampaccum.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:TimestampAccum
processing	elements/analysis/toipflowdumps.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:ToIPFlowDumps
processing	elements/analysis/toipsumdump.hh	/^    const char *processing() const	{ return "a\/h"; }$/;"	f	class:ToIPSummaryDump
processing	elements/aqm/pi.hh	/^    const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:PI
processing	elements/aqm/red.hh	/^    const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:RED
processing	elements/bsdmodule/fastudpsrc.hh	/^  const char *processing() const	{ return PULL; }$/;"	f	class:FastUDPSource
processing	elements/bsdmodule/fromdevice.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:FromDevice
processing	elements/bsdmodule/fromhost.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:FromHost
processing	elements/bsdmodule/todevice.hh	/^  const char *processing() const	{ return PULL; }$/;"	f	class:ToDevice
processing	elements/bsdmodule/tohost.hh	/^    const char *processing() const      { return PUSH; }$/;"	f	class:ToHost
processing	elements/ethernet/arpfaker.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:ARPFaker
processing	elements/ethernet/arpprint.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:ARPPrint
processing	elements/ethernet/arpquerier.hh	/^    const char *processing() const		{ return PUSH; }$/;"	f	class:ARPQuerier
processing	elements/ethernet/arpresponder.hh	/^    const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:ARPResponder
processing	elements/ethernet/checkarpheader.hh	/^    const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:CheckARPHeader
processing	elements/ethernet/ensureether.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:EnsureEther
processing	elements/ethernet/hostetherfilter.hh	/^  const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:HostEtherFilter
processing	elements/ethernet/ip6ndadvertiser.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:IP6NDAdvertiser
processing	elements/ethernet/ip6ndsolicitor.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:IP6NDSolicitor
processing	elements/ethernet/storeetheraddress.hh	/^    const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:StoreEtherAddress
processing	elements/ethernet/stripetherheader.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:EtherEncap
processing	elements/ethernet/stripethervlanheader.hh	/^    const char *processing() const	{ return PROCESSING_A_AH; }$/;"	f	class:StripEtherVLANHeader
processing	elements/ethernet/vlandecap.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:VLANDecap
processing	elements/ethernet/vlanencap.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:VLANEncap
processing	elements/etherswitch/debugbridge.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:DebugBridge
processing	elements/etherswitch/etherswitch.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:EtherSwitch
processing	elements/etherswitch/spantree.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:EtherSpanTree
processing	elements/grid/ackresponder.hh	/^  const char *processing() const { return PROCESSING_A_AH; }$/;"	f	class:ACKResponder
processing	elements/grid/ackresponder2.hh	/^  const char *processing() const { return PROCESSING_A_AH; }$/;"	f	class:ACKResponder2
processing	elements/grid/ackretrysender.hh	/^  const char *processing() const { return "la\/hh"; }$/;"	f	class:ACKRetrySender
processing	elements/grid/ackretrysender2.hh	/^  const char *processing() const { return "la\/hh"; }$/;"	f	class:ACKRetrySender2
processing	elements/grid/bottleneckmetric.hh	/^  const char *processing() const { return AGNOSTIC; }$/;"	f	class:BottleneckMetric
processing	elements/grid/checkgridheader.hh	/^  const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:CheckGridHeader
processing	elements/grid/dsdvroutetable.hh	/^  const char *processing() const		{ return "h\/h"; }$/;"	f	class:DSDVRouteTable
processing	elements/grid/dsrarptable.hh	/^  const char *processing() const	{ return "aah\/aah"; }$/;"	f	class:DSRArpTable
processing	elements/grid/dsrroutetable.hh	/^  const char *processing() const { return PUSH; }$/;"	f	class:DSRRouteTable
processing	elements/grid/e2elossmetric.hh	/^  const char *processing() const { return AGNOSTIC; }$/;"	f	class:E2ELossMetric
processing	elements/grid/etx2metric.hh	/^  const char *processing() const { return AGNOSTIC; }$/;"	f	class:ETX2Metric
processing	elements/grid/etxmetric.hh	/^  const char *processing() const { return AGNOSTIC; }$/;"	f	class:ETXMetric
processing	elements/grid/filterbyhops.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:FilterByGridHops
processing	elements/grid/filterbyrange.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:FilterByRange
processing	elements/grid/fixdstloc.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:FixDstLoc
processing	elements/grid/fixsrcloc.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:FixSrcLoc
processing	elements/grid/floodinglocquerier.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:FloodingLocQuerier
processing	elements/grid/gridencap.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:GridEncap
processing	elements/grid/gridgatewayinfo.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:GridGatewayInfo
processing	elements/grid/gridprobehandler.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:GridProbeHandler
processing	elements/grid/gridprobereplyreceiver.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:GridProbeReplyReceiver
processing	elements/grid/gridprobesender.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:GridProbeSender
processing	elements/grid/gridproxy.hh	/^    const char *processing() const { return PUSH; }$/;"	f	class:GridProxy
processing	elements/grid/gridroutetable.hh	/^  const char *processing() const		{ return "h\/h"; }$/;"	f	class:GridRouteTable
processing	elements/grid/gridsrforwarder.hh	/^  const char *processing() const { return "h\/h"; }$/;"	f	class:GridSRForwarder
processing	elements/grid/gridtxerror.hh	/^  const char *processing() const { return PUSH; }$/;"	f	class:GridTxError
processing	elements/grid/hello.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:SendGridHello
processing	elements/grid/hopcountmetric.hh	/^  const char *processing() const { return AGNOSTIC; }$/;"	f	class:HopcountMetric
processing	elements/grid/incseqno.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:IncrementSeqNo
processing	elements/grid/linkstat.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:LinkStat
processing	elements/grid/linktester.hh	/^  const char *processing() const { return PUSH; }$/;"	f	class:LinkTester
processing	elements/grid/linktestreceiver.hh	/^  const char *processing() const { return AGNOSTIC; }$/;"	f	class:LinkTestReceiver
processing	elements/grid/linktracker.hh	/^  const char *processing() const		{ return "a\/a"; }$/;"	f	class:LinkTracker
processing	elements/grid/lirmetric.hh	/^  const char *processing() const { return AGNOSTIC; }$/;"	f	class:LIRMetric
processing	elements/grid/locqueryresponder.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:LocQueryResponder
processing	elements/grid/lookupgeogridroute.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:LookupGeographicGridRoute
processing	elements/grid/lookuplocalgridroute.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:LookupLocalGridRoute
processing	elements/grid/lookuplocalgridroute2.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:LookupLocalGridRoute2
processing	elements/grid/lrhello.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:SendGridLRHello
processing	elements/grid/packetlogger.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:PacketLogger
processing	elements/grid/packetlogger2.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:PacketLogger2
processing	elements/grid/pep.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:PEP
processing	elements/grid/pingpong.hh	/^  const char *processing() const		{ return "a\/a"; }$/;"	f	class:PingPong
processing	elements/grid/printgrid.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:PrintGrid
processing	elements/grid/radiosim.hh	/^  const char *processing() const		{ return PULL_TO_PUSH; }$/;"	f	class:RadioSim
processing	elements/grid/regionpep.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:EstimateRouterRegion
processing	elements/grid/setgridchecksum.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:SetGridChecksum
processing	elements/grid/simplelocquerier.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:SimpleLocQuerier
processing	elements/grid/threshmetric.hh	/^  const char *processing() const { return AGNOSTIC; }$/;"	f	class:ThresholdMetric
processing	elements/grid/updateroutes.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:UpdateGridRoutes
processing	elements/grid/yarvismetric.hh	/^  const char *processing() const { return AGNOSTIC; }$/;"	f	class:YarvisMetric
processing	elements/icmp/checkicmpheader.hh	/^  const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:CheckICMPHeader
processing	elements/icmp/icmperror.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:ICMPError
processing	elements/icmp/icmpipencap.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:ICMPIPEncap
processing	elements/icmp/icmppingencap.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:ICMPPingEncap
processing	elements/icmp/icmppingresponder.hh	/^  const char *processing() const	{ return PROCESSING_A_AH; }$/;"	f	class:ICMPPingResponder
processing	elements/icmp/icmprewriter.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:ICMPRewriter
processing	elements/icmp/icmpsendpings.hh	/^    const char *processing() const		{ return "h\/a"; }$/;"	f	class:ICMPPingSource
processing	elements/ip/checkipheader.hh	/^  const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:CheckIPHeader
processing	elements/ip/decipttl.hh	/^    const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:DecIPTTL
processing	elements/ip/directiplookup.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:DirectIPLookup
processing	elements/ip/fixipsrc.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:FixIPSrc
processing	elements/ip/getipaddress.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:GetIPAddress
processing	elements/ip/ipclassifier.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:IPClassifier
processing	elements/ip/ipencap.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:IPEncap
processing	elements/ip/ipfilter.hh	/^    const char *processing() const		{ return PUSH; }$/;"	f	class:IPFilter
processing	elements/ip/ipfragmenter.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:IPFragmenter
processing	elements/ip/ipgwoptions.hh	/^  const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:IPGWOptions
processing	elements/ip/ipinputcombo.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:IPInputCombo
processing	elements/ip/ipmirror.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:IPMirror
processing	elements/ip/ipoutputcombo.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:IPOutputCombo
processing	elements/ip/ipprint.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:IPPrint
processing	elements/ip/ipratemon.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:IPRateMonitor
processing	elements/ip/ipreassembler.hh	/^    const char *processing() const	{ return PROCESSING_A_AH; }$/;"	f	class:IPReassembler
processing	elements/ip/iprewriterbase.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:IPRewriterBase
processing	elements/ip/lineariplookup.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:LinearIPLookup
processing	elements/ip/lookupiproutelinux.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:LinuxIPLookup
processing	elements/ip/lookupiproutemp.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:LookupIPRouteMP
processing	elements/ip/radixiplookup.hh	/^    const char *processing() const		{ return PUSH; }$/;"	f	class:RadixIPLookup
processing	elements/ip/rangeiplookup.hh	/^    const char *processing() const      { return PUSH; }$/;"	f	class:RangeIPLookup
processing	elements/ip/rfc2507c.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:RFC2507c
processing	elements/ip/rfc2507d.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:RFC2507d
processing	elements/ip/ripsend.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:RIPSend
processing	elements/ip/setipaddress.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:SetIPAddress
processing	elements/ip/setipchecksum.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:SetIPChecksum
processing	elements/ip/setrandipaddress.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:SetRandIPAddress
processing	elements/ip/storeipaddress.hh	/^    const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:StoreIPAddress
processing	elements/ip/truncateippayload.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:TruncateIPPayload
processing	elements/ip6/addresstranslator.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:AddressTranslator
processing	elements/ip6/checkip6header.hh	/^  const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:CheckIP6Header
processing	elements/ip6/decip6hlim.hh	/^  const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:DecIP6HLIM
processing	elements/ip6/getip6address.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:GetIP6Address
processing	elements/ip6/icmp6error.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:ICMP6Error
processing	elements/ip6/ip6encap.hh	/^  const char *processing() const        { return AGNOSTIC; }$/;"	f	class:IP6Encap
processing	elements/ip6/ip6fragmenter.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:IP6Fragmenter
processing	elements/ip6/ip6mirror.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:IP6Mirror
processing	elements/ip6/ip6print.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:IP6Print
processing	elements/ip6/lookupip6route.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:LookupIP6Route
processing	elements/ip6/protocoltranslator46.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:ProtocolTranslator46
processing	elements/ip6/protocoltranslator64.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:ProtocolTranslator64
processing	elements/ip6/setip6address.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:SetIP6Address
processing	elements/ipsec/aes.hh	/^   const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:Aes
processing	elements/ipsec/des.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:Des
processing	elements/ipsec/desp.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:IPsecESPUnencap
processing	elements/ipsec/esp.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:IPsecESPEncap
processing	elements/ipsec/hmacsha1.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:IPsecAuthHMACSHA1
processing	elements/ipsec/ipsecencap.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:IPsecEncap
processing	elements/ipsec/radixipseclookup.hh	/^    const char *processing() const		{ return PUSH; }$/;"	f	class:RadixIPsecLookup
processing	elements/ipsec/sha1.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:IPsecAuthSHA1
processing	elements/linuxmodule/cpuqueue.hh	/^  const char *processing() const		{ return PUSH_TO_PULL; }$/;"	f	class:CPUQueue
processing	elements/linuxmodule/cpuswitch.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:CPUSwitch
processing	elements/linuxmodule/cyclecountaccum.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:CycleCountAccum
processing	elements/linuxmodule/fasttcpflows.hh	/^  const char *processing() const	{ return PULL; }$/;"	f	class:FastTCPFlows
processing	elements/linuxmodule/fastudpflows.hh	/^  const char *processing() const	{ return PULL; }$/;"	f	class:FastUDPFlows
processing	elements/linuxmodule/fastudpsrc.hh	/^  const char *processing() const	{ return PULL; }$/;"	f	class:FastUDPSource
processing	elements/linuxmodule/fastudpsrcip6.hh	/^  const char *processing() const	{ return PULL; }$/;"	f	class:FastUDPSourceIP6
processing	elements/linuxmodule/fromdevice.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:FromDevice
processing	elements/linuxmodule/fromhost.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:FromHost
processing	elements/linuxmodule/fromuserdevice.hh	/^    const char *processing() const      { return PULL; }$/;"	f	class:FromUserDevice
processing	elements/linuxmodule/perfcountaccum.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:PerfCountAccum
processing	elements/linuxmodule/polldevice.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:PollDevice
processing	elements/linuxmodule/rtcycles.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:RTCycles
processing	elements/linuxmodule/setcyclecount.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:SetCycleCount
processing	elements/linuxmodule/setperfcount.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:SetPerfCount
processing	elements/linuxmodule/todevice.hh	/^    const char *processing() const	{ return PULL; }$/;"	f	class:ToDevice
processing	elements/linuxmodule/tohost.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:ToHost
processing	elements/linuxmodule/touserdevice.hh	/^    const char *processing() const      { return PUSH; }$/;"	f	class:ToUserDevice
processing	elements/local/FlowNet/common/FlowNetGod.hh	/^	const char *processing() const { return AGNOSTIC; }$/;"	f	class:FlowNetGod
processing	elements/local/FlowNet/common/PF_FW.hh	/^        const char *processing() const  { return PUSH; }$/;"	f	class:PFFW
processing	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^	const char *processing() const	{ return PUSH; }$/;"	f	class:PFMpeg2AdaptFW
processing	elements/local/FlowNet/scheduler/IPFragReset.hh	/^	const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:IPFragReset
processing	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	const char *processing() const	{ return "h\/lh"; }$/;"	f	class:PFSchedFW
processing	elements/local/FlowNet/scheduler/WBSEtherFilter.hh	/^	const char *processing() const		{ return PUSH; }$/;"	f	class:WBSEtherFilter
processing	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	const char *processing() const	{ return PUSH; }$/;"	f	class:PFShapeFW
processing	elements/local/FlowNet/sink/PFSinkFW.hh	/^	const char *processing() const	{ return PUSH; }$/;"	f	class:PFSinkFW
processing	elements/local/OpenFlow/RConn.hh	/^	const char *processing() const		{ return PUSH; }$/;"	f	class:RConn
processing	elements/local/OpenFlow/datapath.hh	/^	const char *processing() const		{ return PUSH; }$/;"	f	class:Datapath
processing	elements/ns/fromsimdevice.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:FromSimDevice
processing	elements/ns/simpacketanalyzer.hh	/^  const char *processing() const  { return PUSH; }$/;"	f	class:SimPacketAnalyzer
processing	elements/ns/tosimdevice.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:ToSimDevice
processing	elements/ns/tosimtrace.hh	/^  const char* processing() const { return PUSH; }$/;"	f	class:ToSimTrace
processing	elements/radio/b8b10.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:B8B10
processing	elements/radio/bim.hh	/^  const char *processing() const	{ return PULL_TO_PUSH; }$/;"	f	class:BIM
processing	elements/radio/checkpattern.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:CheckPattern
processing	elements/radio/scramble.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:Scramble
processing	elements/radio/sendpattern.hh	/^  const char *processing() const		{ return PULL; }$/;"	f	class:SendPattern
processing	elements/simple/simpleidle.hh	/^    const char *processing() const	{ return "a\/a"; }$/;"	f	class:SimpleIdle
processing	elements/simple/simplepriosched.hh	/^    const char *processing() const	{ return PULL; }$/;"	f	class:SimplePrioSched
processing	elements/simple/simplepullswitch.hh	/^    const char *processing() const		{ return PULL; }$/;"	f	class:SimplePullSwitch
processing	elements/simple/simplerrsched.hh	/^    const char *processing() const	{ return PULL; }$/;"	f	class:SimpleRRSched
processing	elements/standard/align.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:Align
processing	elements/standard/averagecounter.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:AverageCounter
processing	elements/standard/bandwidthmeter.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:BandwidthMeter
processing	elements/standard/block.hh	/^  const char *processing() const	        { return AGNOSTIC; }$/;"	f	class:Block
processing	elements/standard/checklength.hh	/^  const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:CheckLength
processing	elements/standard/checkpaint.hh	/^    const char *processing() const	{ return PROCESSING_A_AH; }$/;"	f	class:CheckPaint
processing	elements/standard/classifier.hh	/^    const char *processing() const		{ return PUSH; }$/;"	f	class:Classifier
processing	elements/standard/compblock.hh	/^  const char *processing() const	        { return AGNOSTIC; }$/;"	f	class:CompareBlock
processing	elements/standard/counter.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:Counter
processing	elements/standard/delayshaper.hh	/^    const char *processing() const	{ return PULL; }$/;"	f	class:DelayShaper
processing	elements/standard/delayunqueue.hh	/^    const char *processing() const	{ return PULL_TO_PUSH; }$/;"	f	class:DelayUnqueue
processing	elements/standard/discard.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:Discard
processing	elements/standard/discardnofree.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:DiscardNoFree
processing	elements/standard/dropbroadcasts.hh	/^  const char *processing() const	{ return PROCESSING_A_AH; }$/;"	f	class:DropBroadcasts
processing	elements/standard/drr.hh	/^    const char *processing() const		{ return PULL; }$/;"	f	class:DRRSched
processing	elements/standard/hashswitch.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:HashSwitch
processing	elements/standard/hub.hh	/^    const char *processing() const		{ return PUSH; }$/;"	f	class:Hub
processing	elements/standard/idle.hh	/^  const char *processing() const	{ return "a\/a"; }$/;"	f	class:Idle
processing	elements/standard/linkunqueue.hh	/^    const char *processing() const	{ return PULL_TO_PUSH; }$/;"	f	class:LinkUnqueue
processing	elements/standard/nullelement.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:NullElement
processing	elements/standard/nullelement.hh	/^  const char *processing() const	{ return PULL; }$/;"	f	class:PullNullElement
processing	elements/standard/nullelement.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:PushNullElement
processing	elements/standard/nulls.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:Null1
processing	elements/standard/nulls.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:Null2
processing	elements/standard/nulls.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:Null3
processing	elements/standard/nulls.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:Null4
processing	elements/standard/nulls.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:Null5
processing	elements/standard/nulls.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:Null6
processing	elements/standard/nulls.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:Null7
processing	elements/standard/nulls.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:Null8
processing	elements/standard/paint.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:Paint
processing	elements/standard/paintswitch.hh	/^    const char *processing() const		{ return PUSH; }$/;"	f	class:PaintSwitch
processing	elements/standard/painttee.hh	/^    const char *processing() const	{ return PROCESSING_A_AH; }$/;"	f	class:PaintTee
processing	elements/standard/print.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:Print
processing	elements/standard/priosched.hh	/^    const char *processing() const	{ return PULL; }$/;"	f	class:PrioSched
processing	elements/standard/randomerror.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:RandomBitErrors
processing	elements/standard/randomsample.hh	/^    const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:RandomSample
processing	elements/standard/randomswitch.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:RandomSwitch
processing	elements/standard/ratedsplitter.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:RatedSplitter
processing	elements/standard/ratedunqueue.hh	/^    const char *processing() const	{ return PULL_TO_PUSH; }$/;"	f	class:RatedUnqueue
processing	elements/standard/rrsched.hh	/^    const char *processing() const	{ return PULL; }$/;"	f	class:RRSched
processing	elements/standard/rrswitch.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:RoundRobinSwitch
processing	elements/standard/script.hh	/^    const char *processing() const	{ return "ah\/ah"; }$/;"	f	class:Script
processing	elements/standard/setannobyte.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:SetAnnoByte
processing	elements/standard/setcrc32.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:SetCRC32
processing	elements/standard/setpackettype.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:SetPacketType
processing	elements/standard/settimestamp.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:SetTimestamp
processing	elements/standard/shaper.hh	/^    const char *processing() const	{ return PULL; }$/;"	f	class:Shaper
processing	elements/standard/simplequeue.hh	/^    const char *processing() const		{ return "h\/lh"; }$/;"	f	class:SimpleQueue
processing	elements/standard/staticpullswitch.hh	/^  const char *processing() const		{ return PULL; }$/;"	f	class:StaticPullSwitch
processing	elements/standard/staticswitch.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:StaticSwitch
processing	elements/standard/storedata.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:StoreData
processing	elements/standard/stridesched.hh	/^    const char *processing() const		{ return PULL; }$/;"	f	class:StrideSched
processing	elements/standard/strideswitch.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:StrideSwitch
processing	elements/standard/strip.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:Strip
processing	elements/standard/striptonet.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:StripToNetworkHeader
processing	elements/standard/suppressor.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:Suppressor
processing	elements/standard/switch.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:Switch
processing	elements/standard/tee.hh	/^  const char *processing() const		{ return "l\/lh"; }$/;"	f	class:PullTee
processing	elements/standard/tee.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:Tee
processing	elements/standard/timedsink.hh	/^  const char *processing() const		{ return PULL; }$/;"	f	class:TimedSink
processing	elements/standard/timedsource.hh	/^  const char *processing() const		{ return PUSH; }$/;"	f	class:TimedSource
processing	elements/standard/timedunqueue.hh	/^    const char *processing() const		{ return PULL_TO_PUSH; }$/;"	f	class:TimedUnqueue
processing	elements/standard/truncate.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:Truncate
processing	elements/standard/unqueue.hh	/^    const char *processing() const		{ return PULL_TO_PUSH; }$/;"	f	class:Unqueue
processing	elements/standard/unqueue2.hh	/^    const char *processing() const		{ return PULL_TO_PUSH; }$/;"	f	class:Unqueue2
processing	elements/standard/unstrip.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:Unstrip
processing	elements/tcpudp/checktcpheader.hh	/^  const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:CheckTCPHeader
processing	elements/tcpudp/checkudpheader.hh	/^  const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:CheckUDPHeader
processing	elements/tcpudp/dynudpipencap.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:DynamicUDPIPEncap
processing	elements/tcpudp/settcpchecksum.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:SetTCPChecksum
processing	elements/tcpudp/setudpchecksum.hh	/^    const char *processing() const	{ return PROCESSING_A_AH; }$/;"	f	class:SetUDPChecksum
processing	elements/tcpudp/snooptcp.hh	/^  const char *processing() const		{ return "aa\/aahh"; }$/;"	f	class:SnoopTCP
processing	elements/tcpudp/tcpfragmenter.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:TCPFragmenter
processing	elements/tcpudp/tcpipsend.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:TCPIPSend
processing	elements/tcpudp/udpip6encap.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:UDPIP6Encap
processing	elements/tcpudp/udpipencap.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:UDPIPEncap
processing	elements/test/checkpacket.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:CheckPacket
processing	elements/test/comparepackets.hh	/^    const char *processing() const		{ return PULL; }$/;"	f	class:ComparePackets
processing	elements/test/handlertask.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:HandlerTask
processing	elements/test/neighborhoodtest.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:NeighborhoodTest
processing	elements/test/nulltask.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:NullTask
processing	elements/test/queuethreadtest.hh	/^    const char *processing() const		{ return PULL; }$/;"	f	class:QueueThreadTest2
processing	elements/test/queueyanktest.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:QueueYankTest
processing	elements/test/schedordertest.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:SchedOrderTest
processing	elements/test/upstreamnotifier.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:UpstreamNotifier
processing	elements/userlevel/fromdevice.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:FromDevice
processing	elements/userlevel/fromdump.hh	/^    const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:FromDump
processing	elements/userlevel/fromhost.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:FromHost
processing	elements/userlevel/fromrawsocket.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:FromRawSocket
processing	elements/userlevel/fromsocket.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:FromSocket
processing	elements/userlevel/ipflowrawsockets.hh	/^    const char *processing() const	{ return "a\/h"; }$/;"	f	class:IPFlowRawSockets
processing	elements/userlevel/kerneltun.hh	/^    const char *processing() const	{ return "a\/h"; }$/;"	f	class:KernelTun
processing	elements/userlevel/printold.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:PrintOld
processing	elements/userlevel/rawsocket.hh	/^  const char *processing() const	{ return "l\/h"; }$/;"	f	class:RawSocket
processing	elements/userlevel/socket.hh	/^  const char *processing() const	{ return "a\/h"; }$/;"	f	class:Socket
processing	elements/userlevel/todevice.hh	/^    const char *processing() const		{ return "l\/h"; }$/;"	f	class:ToDevice
processing	elements/userlevel/todump.hh	/^    const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:ToDump
processing	elements/userlevel/tohost.hh	/^    const char *processing() const	{ return PUSH; }$/;"	f	class:ToHost
processing	elements/userlevel/torawsocket.hh	/^  const char *processing() const	{ return PULL; }$/;"	f	class:ToRawSocket
processing	elements/userlevel/tosocket.hh	/^  const char *processing() const	{ return PULL; }$/;"	f	class:ToSocket
processing	elements/userlevel/umlswitch.hh	/^  const char *processing() const	{ return "l\/h"; }$/;"	f	class:UMLSwitch
processing	elements/wifi/ap/associationresponder.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:AssociationResponder
processing	elements/wifi/ap/beaconsource.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:BeaconSource
processing	elements/wifi/ap/openauthresponder.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:OpenAuthResponder
processing	elements/wifi/ap/proberesponder.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:ProbeResponder
processing	elements/wifi/athdescdecap.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:AthdescDecap
processing	elements/wifi/athdescencap.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:AthdescEncap
processing	elements/wifi/autoratefallback.hh	/^  const char *processing() const		{ return "ah\/a"; }$/;"	f	class:AutoRateFallback
processing	elements/wifi/ethercount.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:EtherCount
processing	elements/wifi/extradecap.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:ExtraDecap
processing	elements/wifi/extraencap.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:ExtraEncap
processing	elements/wifi/filterfailures.hh	/^  const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:FilterFailures
processing	elements/wifi/filterphyerr.hh	/^  const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:FilterPhyErr
processing	elements/wifi/filtertx.hh	/^  const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:FilterTX
processing	elements/wifi/fromhandler.hh	/^    const char *processing() const		{ return PROCESSING_A_AH; }$/;"	f	class:FromHandler
processing	elements/wifi/madwifirate.hh	/^  const char *processing() const		{ return "ah\/a"; }$/;"	f	class:MadwifiRate
processing	elements/wifi/packetstore.hh	/^  const char* processing() const		{ return AGNOSTIC; }$/;"	f	class:PacketStore
processing	elements/wifi/printtxfeedback.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:PrintTXFeedback
processing	elements/wifi/printwifi.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:PrintWifi
processing	elements/wifi/prism2decap.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:Prism2Decap
processing	elements/wifi/prism2encap.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:Prism2Encap
processing	elements/wifi/probetxrate.hh	/^  const char *processing() const		{ return "ah\/a"; }$/;"	f	class:ProbeTXRate
processing	elements/wifi/pushanno.hh	/^  const char *processing() const		{ return "a\/a"; }$/;"	f	class:PushAnno
processing	elements/wifi/radiotapdecap.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:RadiotapDecap
processing	elements/wifi/radiotapencap.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:RadiotapEncap
processing	elements/wifi/readanno.hh	/^  const char *processing() const		{ return "a\/a"; }$/;"	f	class:ReadAnno
processing	elements/wifi/rxstats.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:RXStats
processing	elements/wifi/setrts.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:SetRTS
processing	elements/wifi/settxpower.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:SetTXPower
processing	elements/wifi/settxrate.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:SetTXRate
processing	elements/wifi/station/associationrequester.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:AssociationRequester
processing	elements/wifi/station/beaconscanner.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:BeaconScanner
processing	elements/wifi/station/beacontracker.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:BeaconTracker
processing	elements/wifi/station/openauthrequester.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:OpenAuthRequester
processing	elements/wifi/station/proberequester.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:ProbeRequester
processing	elements/wifi/wepdecap.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:WepDecap
processing	elements/wifi/wepencap.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:WepEncap
processing	elements/wifi/wifidecap.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:WifiDecap
processing	elements/wifi/wifidefrag.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:WifiDefrag
processing	elements/wifi/wifidupefilter.hh	/^  const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:WifiDupeFilter
processing	elements/wifi/wifiencap.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:WifiEncap
processing	elements/wifi/wififragment.hh	/^  const char *processing() const	{ return PUSH; }$/;"	f	class:WifiFragment
processing	elements/wifi/wifiseq.hh	/^  const char *processing() const	{ return AGNOSTIC; }$/;"	f	class:WifiSeq
processing	include/click/standard/errorelement.hh	/^    const char *processing() const		{ return AGNOSTIC; }$/;"	f	class:ErrorElement
processing	lib/element.cc	/^Element::processing() const$/;"	f	class:Element
processing	tools/click-pretty/click-pretty.cc	/^    ProcessingT *processing;$/;"	m	struct:PrettyRouter	file:
processing_code	tools/lib/eclasst.hh	/^ElementClassT::processing_code() const$/;"	f	class:ElementClassT
processing_code	tools/lib/etraits.hh	/^    String processing_code;$/;"	m	struct:ElementTraits
processing_code	tools/lib/processingt.cc	/^ProcessingT::processing_code(const ElementT *e) const$/;"	f	class:ProcessingT
processing_code_next	tools/lib/processingt.cc	/^ProcessingT::processing_code_next(const char *code, const char *end_code, int &processing)$/;"	f	class:ProcessingT
processing_code_output	tools/lib/processingt.hh	/^ProcessingT::processing_code_output(const char *code, const char *end_code, const char *pos)$/;"	f	class:ProcessingT
processing_code_reverse	tools/lib/processingt.cc	/^ProcessingT::processing_code_reverse(const String &s)$/;"	f	class:ProcessingT
processing_error	lib/router.cc	/^Router::processing_error(const Connection &c, bool aggie,$/;"	f	class:Router
processing_error	tools/lib/processingt.cc	/^ProcessingT::processing_error(const ConnectionT &conn, int processing_from,$/;"	f	class:ProcessingT
processing_error	tools/lib/processingt.hh	/^    bool processing_error(int pidx, bool isoutput) const {$/;"	f	class:ProcessingT
processing_letters	tools/lib/processingt.cc	/^const char ProcessingT::processing_letters[] = "ahlXahlX";$/;"	m	class:ProcessingT	file:
processing_letters	tools/lib/processingt.hh	/^    static const char processing_letters[];$/;"	m	class:ProcessingT
processing_name	tools/lib/processingt.cc	/^processing_name(int p)$/;"	f	file:
processing_vector	lib/element.cc	/^Element::processing_vector(int* in_v, int* out_v, ErrorHandler* errh) const$/;"	f	class:Element
proclikefs-objs	linuxmodule/Makefile	/^proclikefs-objs = proclikefsmod.o$/;"	m
proclikefs_file_operations	linuxmodule/proclikefs.c	/^struct proclikefs_file_operations {$/;"	s	file:
proclikefs_file_system	linuxmodule/proclikefs.c	/^struct proclikefs_file_system {$/;"	s	file:
proclikefs_inode_operations	linuxmodule/proclikefs.c	/^struct proclikefs_inode_operations {$/;"	s	file:
proclikefs_kill_super	linuxmodule/proclikefs.c	/^proclikefs_kill_super(struct super_block *sb, struct file_operations *dummy)$/;"	f	file:
proclikefs_new_file_operations	linuxmodule/proclikefs.c	/^EXPORT_SYMBOL(proclikefs_new_file_operations);$/;"	v
proclikefs_new_file_operations	linuxmodule/proclikefs.c	/^proclikefs_new_file_operations(struct proclikefs_file_system *pfs)$/;"	f
proclikefs_new_inode_operations	linuxmodule/proclikefs.c	/^EXPORT_SYMBOL(proclikefs_new_inode_operations);$/;"	v
proclikefs_new_inode_operations	linuxmodule/proclikefs.c	/^proclikefs_new_inode_operations(struct proclikefs_file_system *pfs)$/;"	f
proclikefs_null_read_super	linuxmodule/proclikefs.c	/^proclikefs_null_read_super(struct super_block *sb, void *data, int silent)$/;"	f	file:
proclikefs_null_root_inode_operations	linuxmodule/proclikefs.c	/^static struct inode_operations proclikefs_null_root_inode_operations;$/;"	v	typeref:struct:inode_operations	file:
proclikefs_null_root_lookup	linuxmodule/proclikefs.c	/^proclikefs_null_root_lookup(struct inode *dir, struct dentry *dentry)$/;"	f	file:
proclikefs_null_root_lookup	linuxmodule/proclikefs.c	/^proclikefs_null_root_lookup(struct inode *dir, struct dentry *dentry, struct nameidata *namei)$/;"	f	file:
proclikefs_null_super_operations	linuxmodule/proclikefs.c	/^static struct super_operations proclikefs_null_super_operations;$/;"	v	typeref:struct:super_operations	file:
proclikefs_put_super	linuxmodule/proclikefs.c	/^EXPORT_SYMBOL(proclikefs_put_super);$/;"	v
proclikefs_put_super	linuxmodule/proclikefs.c	/^proclikefs_put_super(struct super_block *sb)$/;"	f
proclikefs_read_inode	linuxmodule/proclikefs.c	/^proclikefs_read_inode(struct inode *inode)$/;"	f
proclikefs_read_super	linuxmodule/proclikefs.c	/^EXPORT_SYMBOL(proclikefs_read_super);$/;"	v
proclikefs_read_super	linuxmodule/proclikefs.c	/^proclikefs_read_super(struct super_block *sb)$/;"	f
proclikefs_register_filesystem	linuxmodule/proclikefs.c	/^EXPORT_SYMBOL(proclikefs_register_filesystem);$/;"	v
proclikefs_register_filesystem	linuxmodule/proclikefs.c	/^proclikefs_register_filesystem(const char *name, int fs_flags,$/;"	f
proclikefs_reinitialize_supers	linuxmodule/proclikefs.c	/^EXPORT_SYMBOL(proclikefs_reinitialize_supers);$/;"	v
proclikefs_reinitialize_supers	linuxmodule/proclikefs.c	/^proclikefs_reinitialize_supers(struct proclikefs_file_system *pfs,$/;"	f
proclikefs_unregister_filesystem	linuxmodule/proclikefs.c	/^EXPORT_SYMBOL(proclikefs_unregister_filesystem);$/;"	v
proclikefs_unregister_filesystem	linuxmodule/proclikefs.c	/^proclikefs_unregister_filesystem(struct proclikefs_file_system *pfs)$/;"	f
profile_memo_size_bucket	include/click/string.hh	/^    static inline int profile_memo_size_bucket(uint32_t dirty, uint32_t capacity) {$/;"	f	class:String
profile_report	lib/string.cc	/^String::profile_report(StringAccum &sa, int examples)$/;"	f	class:String
profile_update_memo_dirty	include/click/string.hh	/^    static void profile_update_memo_dirty(memo_t *memo, uint32_t old_dirty, uint32_t new_dirty, uint32_t capacity) {$/;"	f	class:String
program	tools/click-fastclassifier/click-fastclassifier.hh	/^    Vector<Classifier_Insn> program;$/;"	m	struct:Classifier_Program
program_map	tools/click-fastclassifier/click-fastclassifier.cc	/^static Vector<int> program_map;$/;"	v	file:
program_name	apps/clicky/src/clicky.cc	/^static const char *program_name;$/;"	v	file:
program_name	elements/local/OpenFlow/lib/util.cc	/^const char *program_name;$/;"	v
program_name	lib/clp.c	/^    const char *program_name;$/;"	m	struct:Clp_Internal	file:
program_name	tools/click-align/click-align.cc	/^static const char *program_name;$/;"	v	file:
program_name	tools/click-check/click-check.cc	/^static const char *program_name;$/;"	v	file:
program_name	tools/click-combine/click-combine.cc	/^static const char *program_name;$/;"	v	file:
program_name	tools/click-combine/click-uncombine.cc	/^static const char *program_name;$/;"	v	file:
program_name	tools/click-devirtualize/click-devirtualize.cc	/^static const char *program_name;$/;"	v	file:
program_name	tools/click-fastclassifier/click-fastclassifier.cc	/^static const char *program_name;$/;"	v	file:
program_name	tools/click-flatten/click-flatten.cc	/^static const char *program_name;$/;"	v	file:
program_name	tools/click-install/click-install.cc	/^static const char *program_name;$/;"	v	file:
program_name	tools/click-install/click-uninstall.cc	/^static const char *program_name;$/;"	v	file:
program_name	tools/click-mkmindriver/click-mkmindriver.cc	/^static const char *program_name;$/;"	v	file:
program_name	tools/click-pretty/click-pretty.cc	/^static const char *program_name;$/;"	v	file:
program_name	tools/click-undead/click-undead.cc	/^static const char *program_name;$/;"	v	file:
program_name	tools/click-xform/click-xform.cc	/^static const char *program_name;$/;"	v	file:
program_name	tools/click2xml/click2xml.cc	/^static const char *program_name;$/;"	v	file:
program_name	tools/click2xml/xml2click.cc	/^static const char *program_name;$/;"	v	file:
program_name	userlevel/click.cc	/^static const char *program_name;$/;"	v	file:
program_string	elements/ip/ipfilter.cc	/^IPFilter::program_string(Element *e, void *)$/;"	f	class:IPFilter
program_string	elements/standard/classifier.cc	/^Classifier::program_string(Element *element, void *)$/;"	f	class:Classifier
promisc	elements/bsdmodule/anydevice.hh	/^    bool promisc() const                { return _promisc; }$/;"	f	class:AnyDevice
promisc	elements/linuxmodule/anydevice.hh	/^    bool promisc() const		{ return _promisc; }$/;"	f	class:AnyDevice
prop_header	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_queue_prop_header prop_header; \/* prop: OFPQT_MIN, len: 16. *\/$/;"	m	struct:ofp_queue_prop_min_rate	typeref:struct:ofp_queue_prop_min_rate::ofp_queue_prop_header
properties	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_queue_prop_header properties[0]; \/* List of properties. *\/$/;"	m	struct:ofp_packet_queue	typeref:struct:ofp_packet_queue::ofp_queue_prop_header
property	apps/clicky/src/dstyle.hh	/^    const dcss_property *property;$/;"	m	struct:clicky::dcss_propmatch
property	elements/local/OpenFlow/datapath.hh	/^	uint16_t property; \/* one from OFPQT_ *\/$/;"	m	struct:sw_queue
property	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t property;    \/* One of OFPQT_. *\/$/;"	m	struct:ofp_queue_prop_header
property_map	apps/clicky/src/dstyle.cc	/^static HashTable<PermString, int> property_map;$/;"	m	namespace:clicky	file:
propmatchp_compare	apps/clicky/src/dstyle.cc	/^static bool propmatchp_compare(dcss_propmatch *a, dcss_propmatch *b)$/;"	f	namespace:clicky
protected	include/click/cxxprotect.h	9;"	d
protected	include/click/cxxunprotect.h	9;"	d
protection_callback	elements/local/OpenFlow/lib/private-msg.cc	/^protection_callback(struct sw_flow *flow, void *private_)$/;"	f	file:
proto	elements/ip/ipfieldinfo.hh	/^    inline int proto() const	{ return (_val & PROTO_MASK) >> PROTO_SHIFT; }$/;"	f	class:IPField
protocol	elements/userlevel/fakepcap.hh	/^	uint16_t protocol;	\/* Ethernet packet type *\/$/;"	m	struct:fake_modified_pcap_pkthdr
protocol_id	elements/local/OpenFlow/lib/stp.cc	/^    uint16_t protocol_id;       \/* STP_PROTOCOL_ID. *\/$/;"	m	struct:stp_bpdu_header	file:
protocol_version	elements/local/OpenFlow/lib/stp.cc	/^    uint8_t protocol_version;   \/* STP_PROTOCOL_VERSION. *\/$/;"	m	struct:stp_bpdu_header	file:
protocol_version	elements/userlevel/chattersocket.cc	/^const char ChatterSocket::protocol_version[] = "1.0";$/;"	m	class:ChatterSocket	file:
protocol_version	elements/userlevel/chattersocket.hh	/^  static const char protocol_version[];$/;"	m	class:ChatterSocket
protocol_version	elements/userlevel/controlsocket.cc	/^const char ControlSocket::protocol_version[] = "1.3";$/;"	m	class:ControlSocket	file:
protocol_version	elements/userlevel/controlsocket.hh	/^    static const char protocol_version[];$/;"	m	class:ControlSocket
prototypes	apps/clicky/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
protquote	doc/click-elem2man	/^sub protquote ($) {$/;"	s
provide	tools/click-mkmindriver/click-mkmindriver.cc	/^Mindriver::provide(const String& req, ErrorHandler* errh)$/;"	f	class:Mindriver
provided	lib/driver.cc	/^    int provided;$/;"	m	struct:ClickProvision	file:
provided_driver_mask	tools/lib/elementmap.hh	/^    int provided_driver_mask() const	{ return _provided_driver_mask; }$/;"	f	class:ElementMap
provides	click-buildtool	/^provides () {$/;"	f
provides	tools/lib/eclasst.hh	/^ElementClassT::provides(const String &req) const$/;"	f	class:ElementClassT
provides	tools/lib/etraits.cc	/^ElementTraits::provides(const String &n) const$/;"	f	class:ElementTraits
provides_global	tools/lib/elementmap.hh	/^ElementMap::provides_global(const String& req) const$/;"	f	class:ElementMap
provides_usage	click-buildtool	/^provides_usage () {$/;"	f
provisions	lib/driver.cc	/^static ClickProvision *provisions;$/;"	v	file:
provisions	tools/lib/etraits.hh	/^    String provisions;$/;"	m	struct:ElementTraits
provisions_cap	lib/driver.cc	/^static int provisions_cap;$/;"	v	file:
proxied_command	include/click/llrpc.h	/^    uint32_t proxied_command;$/;"	m	struct:click_llrpc_proxy_st
proxied_data	include/click/llrpc.h	/^    void* proxied_data;$/;"	m	struct:click_llrpc_proxy_st
proxied_handler	include/click/llrpc.h	/^    void* proxied_handler;	\/* const Router::Handler* *\/$/;"	m	struct:click_llrpc_proxy_st
proxied_handler_name	elements/userlevel/controlsocket.cc	/^ControlSocket::proxied_handler_name(const String &n) const$/;"	f	class:ControlSocket
proxy_error_function	elements/userlevel/controlsocket.cc	/^ControlSocket::proxy_error_function(const String &h, void *thunk)$/;"	f	class:ControlSocket
ps_device	elements/local/FlowNet/common/FlowNetGod.hh	/^	struct paramset_device ps_device;$/;"	m	class:FlowNetGod	typeref:struct:FlowNetGod::paramset_device
ps_flowtable	elements/local/FlowNet/common/FlowNetGod.hh	/^	struct paramset_flowtable ps_flowtable;$/;"	m	class:FlowNetGod	typeref:struct:FlowNetGod::paramset_flowtable
ps_ft_default	elements/local/FlowNet/common/FlowNetGod.cc	/^struct paramset_flowtable ps_ft_default = {$/;"	v	typeref:struct:paramset_flowtable
ps_m2s_default	elements/local/FlowNet/common/FlowNetGod.cc	/^struct paramset_mpeg2_shapertable ps_m2s_default = {$/;"	v	typeref:struct:paramset_mpeg2_shapertable
ps_m2sp_default	elements/local/FlowNet/common/FlowNetGod.cc	/^struct paramset_mpeg2_streamingproxytable ps_m2sp_default = { $/;"	v	typeref:struct:paramset_mpeg2_streamingproxytable
ps_mpeg2_shaper	elements/local/FlowNet/common/FlowNetGod.hh	/^	struct paramset_mpeg2_shapertable ps_mpeg2_shaper;$/;"	m	class:FlowNetGod	typeref:struct:FlowNetGod::paramset_mpeg2_shapertable
ps_mpeg2_streamingproxy	elements/local/FlowNet/common/FlowNetGod.hh	/^	struct paramset_mpeg2_streamingproxytable ps_mpeg2_streamingproxy;$/;"	m	class:FlowNetGod	typeref:struct:FlowNetGod::paramset_mpeg2_streamingproxytable
ps_page	drivers/e1000-7.x/src/e1000.h	/^	struct e1000_ps_page *ps_page;$/;"	m	struct:e1000_rx_ring	typeref:struct:e1000_rx_ring::e1000_ps_page
ps_page	drivers/e1000-7.x/src/e1000.h	/^struct e1000_ps_page { struct page *ps_page[PS_PAGE_BUFFERS]; };$/;"	m	struct:e1000_ps_page	typeref:struct:e1000_ps_page::page
ps_page_dma	drivers/e1000-7.x/src/e1000.h	/^	struct e1000_ps_page_dma *ps_page_dma;$/;"	m	struct:e1000_rx_ring	typeref:struct:e1000_rx_ring::e1000_ps_page_dma
ps_page_dma	drivers/e1000-7.x/src/e1000.h	/^struct e1000_ps_page_dma { uint64_t ps_page_dma[PS_PAGE_BUFFERS]; };$/;"	m	struct:e1000_ps_page_dma
ps_sourceproxy	elements/local/FlowNet/common/FlowNetGod.hh	/^	struct paramset_sourceproxytable ps_sourceproxy;$/;"	m	class:FlowNetGod	typeref:struct:FlowNetGod::paramset_sourceproxytable
ps_spt_default	elements/local/FlowNet/common/FlowNetGod.cc	/^struct paramset_sourceproxytable ps_spt_default = { $/;"	v	typeref:struct:paramset_sourceproxytable
psi_pointer_field	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		psi_pointer_field;$/;"	m	struct:mpeg2psi	file:
pssl_accept	elements/local/OpenFlow/lib/vconn-ssl.cc	/^pssl_accept(struct pvconn *pvconn, struct vconn **new_vconnp)$/;"	f	file:
pssl_close	elements/local/OpenFlow/lib/vconn-ssl.cc	/^pssl_close(struct pvconn *pvconn)$/;"	f	file:
pssl_open	elements/local/OpenFlow/lib/vconn-ssl.cc	/^pssl_open(const char *name, char *suffix, struct pvconn **pvconnp)$/;"	f	file:
pssl_pvconn	elements/local/OpenFlow/lib/vconn-ssl.cc	/^struct pssl_pvconn$/;"	s	file:
pssl_pvconn_cast	elements/local/OpenFlow/lib/vconn-ssl.cc	/^pssl_pvconn_cast(struct pvconn *pvconn)$/;"	f	file:
pssl_pvconn_class	elements/local/OpenFlow/lib/vconn-ssl.cc	/^struct pvconn_class pssl_pvconn_class = {$/;"	v	typeref:struct:pvconn_class
pssl_wait	elements/local/OpenFlow/lib/vconn-ssl.cc	/^pssl_wait(struct pvconn *pvconn)$/;"	f	file:
pstream_accept	elements/local/OpenFlow/lib/vconn-stream.cc	/^pstream_accept(struct pvconn *pvconn, struct vconn **new_vconnp)$/;"	f	file:
pstream_close	elements/local/OpenFlow/lib/vconn-stream.cc	/^pstream_close(struct pvconn *pvconn)$/;"	f	file:
pstream_pvconn	elements/local/OpenFlow/lib/vconn-stream.cc	/^struct pstream_pvconn$/;"	s	file:
pstream_pvconn_cast	elements/local/OpenFlow/lib/vconn-stream.cc	/^pstream_pvconn_cast(struct pvconn *pvconn)$/;"	f	file:
pstream_pvconn_class	elements/local/OpenFlow/lib/vconn-stream.cc	/^static struct pvconn_class pstream_pvconn_class = {$/;"	v	typeref:struct:pvconn_class	file:
pstream_wait	elements/local/OpenFlow/lib/vconn-stream.cc	/^pstream_wait(struct pvconn *pvconn)$/;"	f	file:
psz	elements/grid/linkstat.hh	/^    unsigned short psz;       \/\/ total packet size, including eth hdr$/;"	m	struct:LinkStat::link_probe
ptc1023	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t ptc1023;$/;"	m	struct:e1000_hw_stats
ptc1023	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t ptc1023;$/;"	m	struct:e1000_hw_stats
ptc1023	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t ptc1023;$/;"	m	struct:e1000_hw_stats
ptc127	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t ptc127;$/;"	m	struct:e1000_hw_stats
ptc127	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t ptc127;$/;"	m	struct:e1000_hw_stats
ptc127	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t ptc127;$/;"	m	struct:e1000_hw_stats
ptc1522	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t ptc1522;$/;"	m	struct:e1000_hw_stats
ptc1522	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t ptc1522;$/;"	m	struct:e1000_hw_stats
ptc1522	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t ptc1522;$/;"	m	struct:e1000_hw_stats
ptc255	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t ptc255;$/;"	m	struct:e1000_hw_stats
ptc255	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t ptc255;$/;"	m	struct:e1000_hw_stats
ptc255	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t ptc255;$/;"	m	struct:e1000_hw_stats
ptc511	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t ptc511;$/;"	m	struct:e1000_hw_stats
ptc511	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t ptc511;$/;"	m	struct:e1000_hw_stats
ptc511	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t ptc511;$/;"	m	struct:e1000_hw_stats
ptc64	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t ptc64;$/;"	m	struct:e1000_hw_stats
ptc64	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t ptc64;$/;"	m	struct:e1000_hw_stats
ptc64	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t ptc64;$/;"	m	struct:e1000_hw_stats
ptcp_accept	elements/local/OpenFlow/lib/vconn-tcp.cc	/^ptcp_accept(int fd, const struct sockaddr *sa, size_t sa_len,$/;"	f	file:
ptcp_open	elements/local/OpenFlow/lib/vconn-tcp.cc	/^ptcp_open(const char *name, char *suffix, struct pvconn **pvconnp)$/;"	f	file:
ptcp_pvconn_class	elements/local/OpenFlow/lib/vconn-tcp.cc	/^struct pvconn_class ptcp_pvconn_class = {$/;"	v	typeref:struct:pvconn_class
ptype_	ns/nsclick-test.cc	/^    int ptype_;$/;"	m	class:TestClickSimulator::PacketEvent	file:
public	include/click/cxxprotect.h	10;"	d
public	include/click/cxxunprotect.h	10;"	d
pull	elements/analysis/aggcounter.cc	/^AggregateCounter::pull(int port)$/;"	f	class:AggregateCounter
pull	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::pull(int port)$/;"	f	class:AggregatePacketCounter
pull	elements/analysis/aggregatefirst.cc	/^AggregateFirst::pull(int)$/;"	f	class:AggregateFirst
pull	elements/analysis/aggregateip.cc	/^AggregateIP::pull(int)$/;"	f	class:AggregateIP
pull	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::pull(int)$/;"	f	class:AggregateIPFlows
pull	elements/analysis/aggregatelen.cc	/^AggregateLength::pull(int)$/;"	f	class:AggregateLength
pull	elements/analysis/fromcapdump.cc	/^FromCapDump::pull(int)$/;"	f	class:FromCapDump
pull	elements/analysis/fromdagdump.cc	/^FromDAGDump::pull(int)$/;"	f	class:FromDAGDump
pull	elements/analysis/fromflandump.cc	/^FromFlanDump::pull(int)$/;"	f	class:FromFlanDump
pull	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::pull(int)$/;"	f	class:FromIPSummaryDump
pull	elements/analysis/fromnetflowsumdump.cc	/^FromNetFlowSummaryDump::pull(int)$/;"	f	class:FromNetFlowSummaryDump
pull	elements/analysis/fromnlanrdump.cc	/^FromNLANRDump::pull(int)$/;"	f	class:FromNLANRDump
pull	elements/analysis/fromtcpdump.cc	/^FromTcpdump::pull(int)$/;"	f	class:FromTcpdump
pull	elements/analysis/timesortedsched.cc	/^TimeSortedSched::pull(int)$/;"	f	class:TimeSortedSched
pull	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::pull(int)$/;"	f	class:ToIPFlowDumps
pull	elements/aqm/pi.cc	/^PI::pull(int)$/;"	f	class:PI
pull	elements/aqm/red.cc	/^RED::pull(int)$/;"	f	class:RED
pull	elements/bsdmodule/fastudpsrc.cc	/^FastUDPSource::pull(int)$/;"	f	class:FastUDPSource
pull	elements/ethernet/ensureether.cc	/^EnsureEther::pull(int)$/;"	f	class:EnsureEther
pull	elements/ethernet/etherencap.cc	/^EtherEncap::pull(int)$/;"	f	class:EtherEncap
pull	elements/ethernet/etherpausesource.cc	/^EtherPauseSource::pull(int)$/;"	f	class:EtherPauseSource
pull	elements/ethernet/ethervlanencap.cc	/^EtherVLANEncap::pull(int)$/;"	f	class:EtherVLANEncap
pull	elements/grid/dsrarptable.cc	/^DSRArpTable::pull(int port)$/;"	f	class:DSRArpTable
pull	elements/icmp/icmpsendpings.cc	/^ICMPPingSource::pull(int)$/;"	f	class:ICMPPingSource
pull	elements/ip/ipinputcombo.cc	/^IPInputCombo::pull(int)$/;"	f	class:IPInputCombo
pull	elements/ip/ipratemon.cc	/^IPRateMonitor::pull(int port)$/;"	f	class:IPRateMonitor
pull	elements/ip/setipdscp.cc	/^SetIPDSCP::pull(int)$/;"	f	class:SetIPDSCP
pull	elements/ip6/setip6dscp.cc	/^SetIP6DSCP::pull(int)$/;"	f	class:SetIP6DSCP
pull	elements/linuxmodule/cpuqueue.cc	/^CPUQueue::pull(int port)$/;"	f	class:CPUQueue
pull	elements/linuxmodule/cyclecountaccum.cc	/^CycleCountAccum::pull(int)$/;"	f	class:CycleCountAccum
pull	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows::pull(int)$/;"	f	class:FastTCPFlows
pull	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows::pull(int)$/;"	f	class:FastUDPFlows
pull	elements/linuxmodule/fastudpsrc.cc	/^FastUDPSource::pull(int)$/;"	f	class:FastUDPSource
pull	elements/linuxmodule/fastudpsrcip6.cc	/^FastUDPSourceIP6::pull(int)$/;"	f	class:FastUDPSourceIP6
pull	elements/linuxmodule/fromuserdevice.cc	/^FromUserDevice::pull(int)$/;"	f	class:FromUserDevice
pull	elements/linuxmodule/perfcountaccum.cc	/^PerfCountAccum::pull(int)$/;"	f	class:PerfCountAccum
pull	elements/linuxmodule/rtcycles.cc	/^RTCycles::pull(int)$/;"	f	class:RTCycles
pull	elements/linuxmodule/setcyclecount.cc	/^SetCycleCount::pull(int)$/;"	f	class:SetCycleCount
pull	elements/linuxmodule/setperfcount.cc	/^SetPerfCount::pull(int)$/;"	f	class:SetPerfCount
pull	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^Packet* PFSchedFW::pull(int)$/;"	f	class:PFSchedFW
pull	elements/local/standard/ratesettable_bandwidthshaper.cc	/^RateSettableBandwidthShaper::pull(int)$/;"	f	class:RateSettableBandwidthShaper
pull	elements/radio/sendpattern.cc	/^SendPattern::pull(int)$/;"	f	class:SendPattern
pull	elements/simple/simpleidle.cc	/^SimpleIdle::pull(int)$/;"	f	class:SimpleIdle
pull	elements/simple/simplepriosched.cc	/^SimplePrioSched::pull(int)$/;"	f	class:SimplePrioSched
pull	elements/simple/simplepullswitch.cc	/^SimplePullSwitch::pull(int)$/;"	f	class:SimplePullSwitch
pull	elements/simple/simplerrsched.cc	/^SimpleRRSched::pull(int)$/;"	f	class:SimpleRRSched
pull	elements/standard/align.cc	/^Align::pull(int)$/;"	f	class:Align
pull	elements/standard/bandwidthshaper.cc	/^BandwidthShaper::pull(int)$/;"	f	class:BandwidthShaper
pull	elements/standard/checklength.cc	/^CheckLength::pull(int)$/;"	f	class:CheckLength
pull	elements/standard/checkpaint.cc	/^CheckPaint::pull(int)$/;"	f	class:CheckPaint
pull	elements/standard/delayshaper.cc	/^DelayShaper::pull(int)$/;"	f	class:DelayShaper
pull	elements/standard/drr.cc	/^DRRSched::pull(int)$/;"	f	class:DRRSched
pull	elements/standard/fullnotequeue.cc	/^FullNoteQueue::pull(int)$/;"	f	class:FullNoteQueue
pull	elements/standard/idle.cc	/^Idle::pull(int)$/;"	f	class:Idle
pull	elements/standard/infinitesource.cc	/^InfiniteSource::pull(int)$/;"	f	class:InfiniteSource
pull	elements/standard/notifierqueue.cc	/^NotifierQueue::pull(int)$/;"	f	class:NotifierQueue
pull	elements/standard/nullelement.cc	/^PullNullElement::pull(int)$/;"	f	class:PullNullElement
pull	elements/standard/priosched.cc	/^PrioSched::pull(int)$/;"	f	class:PrioSched
pull	elements/standard/pullswitch.cc	/^PullSwitch::pull(int)$/;"	f	class:PullSwitch
pull	elements/standard/quicknotequeue.cc	/^QuickNoteQueue::pull(int)$/;"	f	class:QuickNoteQueue
pull	elements/standard/randomsample.cc	/^RandomSample::pull(int)$/;"	f	class:RandomSample
pull	elements/standard/randomsource.cc	/^RandomSource::pull(int)$/;"	f	class:RandomSource
pull	elements/standard/ratedsource.cc	/^RatedSource::pull(int)$/;"	f	class:RatedSource
pull	elements/standard/rrsched.cc	/^RRSched::pull(int)$/;"	f	class:RRSched
pull	elements/standard/script.cc	/^Script::pull(int)$/;"	f	class:Script
pull	elements/standard/shaper.cc	/^Shaper::pull(int)$/;"	f	class:Shaper
pull	elements/standard/simplequeue.cc	/^SimpleQueue::pull(int)$/;"	f	class:SimpleQueue
pull	elements/standard/staticpullswitch.cc	/^StaticPullSwitch::pull(int)$/;"	f	class:StaticPullSwitch
pull	elements/standard/stridesched.cc	/^StrideSched::pull(int)$/;"	f	class:StrideSched
pull	elements/standard/suppressor.cc	/^Suppressor::pull(int source)$/;"	f	class:Suppressor
pull	elements/standard/tee.cc	/^PullTee::pull(int)$/;"	f	class:PullTee
pull	elements/standard/threadsafequeue.cc	/^ThreadSafeQueue::pull(int)$/;"	f	class:ThreadSafeQueue
pull	elements/tcpudp/snooptcp.cc	/^SnoopTCP::pull(int port)$/;"	f	class:SnoopTCP
pull	elements/test/comparepackets.cc	/^ComparePackets::pull(int port)$/;"	f	class:ComparePackets
pull	elements/userlevel/fromdump.cc	/^FromDump::pull(int)$/;"	f	class:FromDump
pull	elements/userlevel/todump.cc	/^ToDump::pull(int)$/;"	f	class:ToDump
pull	elements/wifi/autoratefallback.cc	/^AutoRateFallback::pull(int port)$/;"	f	class:AutoRateFallback
pull	elements/wifi/madwifirate.cc	/^MadwifiRate::pull(int port)$/;"	f	class:MadwifiRate
pull	elements/wifi/probetxrate.cc	/^ProbeTXRate::pull(int port)$/;"	f	class:ProbeTXRate
pull	include/click/element.hh	/^	    Packet *(*pull)(Element *e, int port);$/;"	m	union:Element::Port::__anon449
pull	include/click/element.hh	/^Element::Port::pull() const$/;"	f	class:Element::Port
pull	include/click/packet.hh	/^Packet::pull(uint32_t len)$/;"	f	class:Packet
pull	lib/element.cc	/^Element::pull(int port)$/;"	f	class:Element
pull_arp	elements/local/OpenFlow/lib/flow.cc	/^static struct arp_header * pull_arp(struct ofpbuf *packet)$/;"	f	file:
pull_eth	elements/local/OpenFlow/lib/flow.cc	/^static struct eth_header * pull_eth(struct ofpbuf *packet) $/;"	f	file:
pull_failure	elements/standard/fullnotequeue.hh	/^FullNoteQueue::pull_failure()$/;"	f	class:FullNoteQueue
pull_icmp	elements/local/OpenFlow/lib/flow.cc	/^static struct icmp_header * pull_icmp(struct ofpbuf *packet) $/;"	f	file:
pull_ip	elements/local/OpenFlow/lib/flow.cc	/^static struct ip_header * pull_ip(struct ofpbuf *packet)$/;"	f	file:
pull_success	elements/standard/fullnotequeue.hh	/^FullNoteQueue::pull_success(Storage::index_type h,$/;"	f	class:FullNoteQueue
pull_tcp	elements/local/OpenFlow/lib/flow.cc	/^static struct tcp_header * pull_tcp(struct ofpbuf *packet) $/;"	f	file:
pull_udp	elements/local/OpenFlow/lib/flow.cc	/^static struct udp_header * pull_udp(struct ofpbuf *packet) $/;"	f	file:
pull_vlan	elements/local/OpenFlow/lib/flow.cc	/^static struct vlan_header * pull_vlan(struct ofpbuf *packet)$/;"	f	file:
punix_accept	elements/local/OpenFlow/lib/vconn-unix.cc	/^punix_accept(int fd, const struct sockaddr *sa, size_t sa_len,$/;"	f	file:
punix_open	elements/local/OpenFlow/lib/vconn-unix.cc	/^static int punix_open(const char *name UNUSED, char *suffix, struct pvconn **pvconnp)$/;"	f	file:
punix_pvconn_class	elements/local/OpenFlow/lib/vconn-unix.cc	/^struct pvconn_class punix_pvconn_class = {$/;"	v	typeref:struct:pvconn_class
purge_old	elements/grid/pep.cc	/^PEP::purge_old()$/;"	f	class:PEP
purge_old	elements/grid/regionpep.cc	/^EstimateRouterRegion::purge_old()$/;"	f	class:EstimateRouterRegion
push	elements/analysis/aggcounter.cc	/^AggregateCounter::push(int port, Packet *p)$/;"	f	class:AggregateCounter
push	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::push(int port, Packet *p)$/;"	f	class:AggregatePacketCounter
push	elements/analysis/aggregatefilter.cc	/^AggregateFilter::push(int, Packet *p)$/;"	f	class:AggregateFilter
push	elements/analysis/aggregatefirst.cc	/^AggregateFirst::push(int, Packet *p)$/;"	f	class:AggregateFirst
push	elements/analysis/aggregateip.cc	/^AggregateIP::push(int, Packet *p)$/;"	f	class:AggregateIP
push	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::push(int, Packet *p)$/;"	f	class:AggregateIPFlows
push	elements/analysis/aggregatelast.cc	/^AggregateLast::push(int, Packet *p)$/;"	f	class:AggregateLast
push	elements/analysis/aggregatelen.cc	/^AggregateLength::push(int, Packet *p)$/;"	f	class:AggregateLength
push	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::push(int, Packet *p)$/;"	f	class:ToIPFlowDumps
push	elements/analysis/toipsumdump.cc	/^ToIPSummaryDump::push(int, Packet *p)$/;"	f	class:ToIPSummaryDump
push	elements/aqm/pi.cc	/^PI::push(int, Packet *p)$/;"	f	class:PI
push	elements/aqm/red.cc	/^RED::push(int, Packet *p)$/;"	f	class:RED
push	elements/bsdmodule/tohost.cc	/^ToHost::push(int, Packet *p)$/;"	f	class:ToHost
push	elements/ethernet/arpquerier.cc	/^ARPQuerier::push(int port, Packet *p)$/;"	f	class:ARPQuerier
push	elements/ethernet/ensureether.cc	/^EnsureEther::push(int, Packet *p)$/;"	f	class:EnsureEther
push	elements/ethernet/etherencap.cc	/^EtherEncap::push(int, Packet *p)$/;"	f	class:EtherEncap
push	elements/ethernet/ethervlanencap.cc	/^EtherVLANEncap::push(int, Packet *p)$/;"	f	class:EtherVLANEncap
push	elements/ethernet/ip6ndsolicitor.cc	/^IP6NDSolicitor::push(int port, Packet *p)$/;"	f	class:IP6NDSolicitor
push	elements/etherswitch/etherswitch.cc	/^EtherSwitch::push(int source, Packet *p)$/;"	f	class:EtherSwitch
push	elements/etherswitch/listenetherswitch.cc	/^ListenEtherSwitch::push(int source, Packet *p)$/;"	f	class:ListenEtherSwitch
push	elements/etherswitch/spantree.cc	/^EtherSpanTree::push(int source, Packet* p) {$/;"	f	class:EtherSpanTree
push	elements/grid/ackretrysender.cc	/^ACKRetrySender::push(int port, Packet *p)$/;"	f	class:ACKRetrySender
push	elements/grid/ackretrysender2.cc	/^ACKRetrySender2::push(int port, Packet *p)$/;"	f	class:ACKRetrySender2
push	elements/grid/dsrarptable.cc	/^DSRArpTable::push(int port, Packet *p_in)$/;"	f	class:DSRArpTable
push	elements/grid/dsrroutetable.cc	/^DSRRouteTable::push(int port, Packet *p_in)$/;"	f	class:DSRRouteTable
push	elements/grid/filterbyhops.cc	/^FilterByGridHops::push(int, Packet *p)$/;"	f	class:FilterByGridHops
push	elements/grid/filterbyrange.cc	/^FilterByRange::push(int, Packet *p)$/;"	f	class:FilterByRange
push	elements/grid/floodinglocquerier.cc	/^FloodingLocQuerier::push(int port, Packet *p)$/;"	f	class:FloodingLocQuerier
push	elements/grid/gridprobehandler.cc	/^GridProbeHandler::push(int port, Packet *p)$/;"	f	class:GridProbeHandler
push	elements/grid/gridproxy.cc	/^void GridProxy::push(int port, Packet *p_in)$/;"	f	class:GridProxy
push	elements/grid/gridsrforwarder.cc	/^GridSRForwarder::push(int port, Packet *p)$/;"	f	class:GridSRForwarder
push	elements/grid/gridtxerror.cc	/^GridTxError::push(int, Packet *p)$/;"	f	class:GridTxError
push	elements/grid/lookupgeogridroute.cc	/^LookupGeographicGridRoute::push(int port, Packet *packet)$/;"	f	class:LookupGeographicGridRoute
push	elements/grid/lookuplocalgridroute.cc	/^LookupLocalGridRoute::push(int port, Packet *packet)$/;"	f	class:LookupLocalGridRoute
push	elements/grid/simplelocquerier.cc	/^SimpleLocQuerier::push(int, Packet *p)$/;"	f	class:SimpleLocQuerier
push	elements/icmp/icmppingrewriter.cc	/^ICMPPingRewriter::push(int port, Packet *p_in)$/;"	f	class:ICMPPingRewriter
push	elements/icmp/icmprewriter.cc	/^ICMPRewriter::push(int, Packet *p_in)$/;"	f	class:ICMPRewriter
push	elements/icmp/icmpsendpings.cc	/^ICMPPingSource::push(int, Packet *p)$/;"	f	class:ICMPPingSource
push	elements/ip/directiplookup.cc	/^DirectIPLookup::push(int, Packet *p)$/;"	f	class:DirectIPLookup
push	elements/ip/ipaddrpairrewriter.cc	/^IPAddrPairRewriter::push(int port, Packet *p_in)$/;"	f	class:IPAddrPairRewriter
push	elements/ip/ipaddrrewriter.cc	/^IPAddrRewriter::push(int port, Packet *p_in)$/;"	f	class:IPAddrRewriter
push	elements/ip/ipfilter.cc	/^IPFilter::push(int, Packet *p)$/;"	f	class:IPFilter
push	elements/ip/ipfragmenter.cc	/^IPFragmenter::push(int, Packet *p)$/;"	f	class:IPFragmenter
push	elements/ip/ipinputcombo.cc	/^IPInputCombo::push(int, Packet *p)$/;"	f	class:IPInputCombo
push	elements/ip/ipoutputcombo.cc	/^IPOutputCombo::push(int, Packet *p_in)$/;"	f	class:IPOutputCombo
push	elements/ip/ipratemon.cc	/^IPRateMonitor::push(int port, Packet *p)$/;"	f	class:IPRateMonitor
push	elements/ip/iproutetable.cc	/^IPRouteTable::push(int, Packet *p)$/;"	f	class:IPRouteTable
push	elements/ip/lineariplookup.cc	/^LinearIPLookup::push(int, Packet *p)$/;"	f	class:LinearIPLookup
push	elements/ip/lookupiproutelinux.cc	/^LinuxIPLookup::push(int, Packet *p)$/;"	f	class:LinuxIPLookup
push	elements/ip/lookupiproutemp.cc	/^LookupIPRouteMP::push(int, Packet *p)$/;"	f	class:LookupIPRouteMP
push	elements/ip/rangeiplookup.cc	/^RangeIPLookup::push(int, Packet *p)$/;"	f	class:RangeIPLookup
push	elements/ip/setipdscp.cc	/^SetIPDSCP::push(int, Packet *p)$/;"	f	class:SetIPDSCP
push	elements/ip/sortediplookup.cc	/^SortedIPLookup::push(int, Packet *p)$/;"	f	class:SortedIPLookup
push	elements/ip6/addresstranslator.cc	/^AddressTranslator::push(int port, Packet *p)$/;"	f	class:AddressTranslator
push	elements/ip6/ip6fragmenter.cc	/^IP6Fragmenter::push(int, Packet *p)$/;"	f	class:IP6Fragmenter
push	elements/ip6/lookupip6route.cc	/^LookupIP6Route::push(int, Packet *p)$/;"	f	class:LookupIP6Route
push	elements/ip6/protocoltranslator46.cc	/^ProtocolTranslator46::push(int, Packet *p)$/;"	f	class:ProtocolTranslator46
push	elements/ip6/protocoltranslator64.cc	/^ProtocolTranslator64::push(int, Packet *p)$/;"	f	class:ProtocolTranslator64
push	elements/ip6/setip6dscp.cc	/^SetIP6DSCP::push(int, Packet *p)$/;"	f	class:SetIP6DSCP
push	elements/ipsec/ipsecroutetable.cc	/^IPsecRouteTable::push(int, Packet *p)$/;"	f	class:IPsecRouteTable
push	elements/linuxmodule/cpuqueue.cc	/^CPUQueue::push(int, Packet *p)$/;"	f	class:CPUQueue
push	elements/linuxmodule/cpuswitch.cc	/^CPUSwitch::push(int, Packet *p)$/;"	f	class:CPUSwitch
push	elements/linuxmodule/cyclecountaccum.cc	/^CycleCountAccum::push(int, Packet *p)$/;"	f	class:CycleCountAccum
push	elements/linuxmodule/perfcountaccum.cc	/^PerfCountAccum::push(int, Packet *p)$/;"	f	class:PerfCountAccum
push	elements/linuxmodule/rtcycles.cc	/^RTCycles::push(int, Packet *p)$/;"	f	class:RTCycles
push	elements/linuxmodule/setcyclecount.cc	/^SetCycleCount::push(int, Packet *p)$/;"	f	class:SetCycleCount
push	elements/linuxmodule/setperfcount.cc	/^SetPerfCount::push(int, Packet *p)$/;"	f	class:SetPerfCount
push	elements/linuxmodule/tohost.cc	/^ToHost::push(int port, Packet *p)$/;"	f	class:ToHost
push	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::push(int, Packet *p)$/;"	f	class:ToUserDevice
push	elements/local/FlowNet/common/PacketQueue.hh	/^inline int PacketQueue::push(Packet* p)$/;"	f	class:PacketQueue
push	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.cc	/^void PFMpeg2AdaptFW::push(int input, Packet *p)$/;"	f	class:PFMpeg2AdaptFW
push	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^void PFSchedFW::push(int input, Packet *p)$/;"	f	class:PFSchedFW
push	elements/local/FlowNet/scheduler/WBSEtherFilter.cc	/^WBSEtherFilter::push(int,  Packet *p)$/;"	f	class:WBSEtherFilter
push	elements/local/FlowNet/shaper/PFShapeFW.cc	/^void PFShapeFW::push(int i, Packet *p)$/;"	f	class:PFShapeFW
push	elements/local/FlowNet/sink/PFSinkFW.cc	/^void PFSinkFW::push(int i, Packet *p)$/;"	f	class:PFSinkFW
push	elements/local/OpenFlow/RConn.cc	/^void RConn::push(int input UNUSED, Packet *p)$/;"	f	class:RConn
push	elements/local/OpenFlow/SynchronizedPacketQueue.hh	/^inline int SynchronizedPacketQueue::push(Packet* p)$/;"	f	class:SynchronizedPacketQueue
push	elements/local/OpenFlow/datapath.cc	/^void Datapath::push(int input, Packet* p)$/;"	f	class:Datapath
push	elements/ns/tosimdevice.cc	/^ToSimDevice::push(int, Packet *p)$/;"	f	class:ToSimDevice
push	elements/ns/tosimtrace.cc	/^ToSimTrace::push(int, Packet *packet)$/;"	f	class:ToSimTrace
push	elements/radio/bim.cc	/^BIM::push(int, Packet *p)$/;"	f	class:BIM
push	elements/simple/simpleidle.cc	/^SimpleIdle::push(int, Packet *p)$/;"	f	class:SimpleIdle
push	elements/standard/align.cc	/^Align::push(int, Packet *p)$/;"	f	class:Align
push	elements/standard/bandwidthmeter.cc	/^BandwidthMeter::push(int, Packet *p)$/;"	f	class:BandwidthMeter
push	elements/standard/block.cc	/^Block::push(int, Packet *packet)$/;"	f	class:Block
push	elements/standard/bwratedsplitter.cc	/^BandwidthRatedSplitter::push(int, Packet *p)$/;"	f	class:BandwidthRatedSplitter
push	elements/standard/checklength.cc	/^CheckLength::push(int, Packet *p)$/;"	f	class:CheckLength
push	elements/standard/checkpaint.cc	/^CheckPaint::push(int, Packet *p)$/;"	f	class:CheckPaint
push	elements/standard/classifier.cc	/^Classifier::push(int, Packet *p)$/;"	f	class:Classifier
push	elements/standard/compblock.cc	/^CompareBlock::push(int, Packet *p)$/;"	f	class:CompareBlock
push	elements/standard/discard.cc	/^Discard::push(int, Packet *p)$/;"	f	class:Discard
push	elements/standard/discardnofree.cc	/^DiscardNoFree::push(int, Packet *)$/;"	f	class:DiscardNoFree
push	elements/standard/frontdropqueue.cc	/^FrontDropQueue::push(int, Packet *p)$/;"	f	class:FrontDropQueue
push	elements/standard/fullnotequeue.cc	/^FullNoteQueue::push(int, Packet *p)$/;"	f	class:FullNoteQueue
push	elements/standard/hashswitch.cc	/^HashSwitch::push(int, Packet *p)$/;"	f	class:HashSwitch
push	elements/standard/hub.cc	/^Hub::push(int port, Packet *p)$/;"	f	class:Hub
push	elements/standard/idle.cc	/^Idle::push(int, Packet *p)$/;"	f	class:Idle
push	elements/standard/meter.cc	/^Meter::push(int, Packet *p)$/;"	f	class:Meter
push	elements/standard/mixedqueue.cc	/^MixedQueue::push(int port, Packet *p)$/;"	f	class:MixedQueue
push	elements/standard/notifierqueue.cc	/^NotifierQueue::push(int, Packet *p)$/;"	f	class:NotifierQueue
push	elements/standard/nullelement.cc	/^PushNullElement::push(int, Packet *p)$/;"	f	class:PushNullElement
push	elements/standard/paintswitch.cc	/^PaintSwitch::push(int, Packet *p)$/;"	f	class:PaintSwitch
push	elements/standard/randomsample.cc	/^RandomSample::push(int, Packet *p)$/;"	f	class:RandomSample
push	elements/standard/randomswitch.cc	/^RandomSwitch::push(int, Packet *p)$/;"	f	class:RandomSwitch
push	elements/standard/ratedsplitter.cc	/^RatedSplitter::push(int, Packet *p)$/;"	f	class:RatedSplitter
push	elements/standard/rrswitch.cc	/^RoundRobinSwitch::push(int, Packet *p)$/;"	f	class:RoundRobinSwitch
push	elements/standard/script.cc	/^Script::push(int port, Packet *p)$/;"	f	class:Script
push	elements/standard/simplequeue.cc	/^SimpleQueue::push(int, Packet *p)$/;"	f	class:SimpleQueue
push	elements/standard/staticswitch.cc	/^StaticSwitch::push(int, Packet *p)$/;"	f	class:StaticSwitch
push	elements/standard/strideswitch.cc	/^StrideSwitch::push(int, Packet *p)$/;"	f	class:StrideSwitch
push	elements/standard/suppressor.cc	/^Suppressor::push(int source, Packet *p)$/;"	f	class:Suppressor
push	elements/standard/switch.cc	/^Switch::push(int, Packet *p)$/;"	f	class:Switch
push	elements/standard/tee.cc	/^Tee::push(int, Packet *p)$/;"	f	class:Tee
push	elements/standard/threadsafequeue.cc	/^ThreadSafeQueue::push(int, Packet *p)$/;"	f	class:ThreadSafeQueue
push	elements/tcpudp/iprewriter.cc	/^IPRewriter::push(int port, Packet *p_in)$/;"	f	class:IPRewriter
push	elements/tcpudp/snooptcp.cc	/^SnoopTCP::push(int port, Packet *p)$/;"	f	class:SnoopTCP
push	elements/tcpudp/tcpfragmenter.cc	/^TCPFragmenter::push(int, Packet *p)$/;"	f	class:TCPFragmenter
push	elements/tcpudp/tcprewriter.cc	/^TCPRewriter::push(int port, Packet *p_in)$/;"	f	class:TCPRewriter
push	elements/tcpudp/udprewriter.cc	/^UDPRewriter::push(int port, Packet *p_in)$/;"	f	class:UDPRewriter
push	elements/test/upstreamnotifier.cc	/^UpstreamNotifier::push(int p, Packet *p_in)$/;"	f	class:UpstreamNotifier
push	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::push(int, Packet *p)$/;"	f	class:IPFlowRawSockets
push	elements/userlevel/kerneltun.cc	/^KernelTun::push(int, Packet *p)$/;"	f	class:KernelTun
push	elements/userlevel/socket.cc	/^Socket::push(int, Packet *p)$/;"	f	class:Socket
push	elements/userlevel/todump.cc	/^ToDump::push(int, Packet *p)$/;"	f	class:ToDump
push	elements/userlevel/tohost.cc	/^ToHost::push(int, Packet *p)$/;"	f	class:ToHost
push	elements/wifi/ap/associationresponder.cc	/^AssociationResponder::push(int, Packet *p)$/;"	f	class:AssociationResponder
push	elements/wifi/ap/beaconsource.cc	/^BeaconSource::push(int, Packet *p)$/;"	f	class:BeaconSource
push	elements/wifi/ap/openauthresponder.cc	/^OpenAuthResponder::push(int, Packet *p)$/;"	f	class:OpenAuthResponder
push	elements/wifi/ap/proberesponder.cc	/^ProbeResponder::push(int, Packet *p)$/;"	f	class:ProbeResponder
push	elements/wifi/autoratefallback.cc	/^AutoRateFallback::push(int port, Packet *p_in)$/;"	f	class:AutoRateFallback
push	elements/wifi/madwifirate.cc	/^MadwifiRate::push(int port, Packet *p_in)$/;"	f	class:MadwifiRate
push	elements/wifi/probetxrate.cc	/^ProbeTXRate::push(int port, Packet *p_in)$/;"	f	class:ProbeTXRate
push	elements/wifi/station/associationrequester.cc	/^AssociationRequester::push(int, Packet *p)$/;"	f	class:AssociationRequester
push	elements/wifi/station/openauthrequester.cc	/^OpenAuthRequester::push(int, Packet *p)$/;"	f	class:OpenAuthRequester
push	elements/wifi/wififragment.cc	/^WifiFragment::push(int port, Packet *p)$/;"	f	class:WifiFragment
push	include/click/element.hh	/^	    void (*push)(Element *e, int port, Packet *p);$/;"	m	union:Element::Port::__anon449
push	include/click/element.hh	/^Element::Port::push(Packet* p) const$/;"	f	class:Element::Port
push	include/click/packet.hh	/^Packet::push(uint32_t len)$/;"	f	class:Packet
push	lib/element.cc	/^Element::push(int port, Packet *p)$/;"	f	class:Element
push_back	include/click/args.hh	/^    template<typename Iter> Args &push_back(Iter begin, Iter end) {$/;"	f	struct:Args
push_back	include/click/dequeue.hh	/^DEQueue<T>::push_back(const T &e)$/;"	f	class:DEQueue
push_back	include/click/list.hh	/^    void push_back(pointer x) {$/;"	f	class:List
push_back	include/click/vector.hh	/^    void push_back(T* x)	{ Base::push_back((void*)x); }$/;"	f	class:Vector
push_back	include/click/vector.hh	/^Vector<T>::push_back(const T& x)$/;"	f	class:Vector
push_back	include/click/vector.hh	/^Vector<void*>::push_back(void* x)$/;"	f	class:Vector
push_back	lib/args.cc	/^Args::push_back(const String &arg)$/;"	f	class:Args
push_back_args	lib/args.cc	/^Args::push_back_args(const String &str)$/;"	f	class:Args
push_back_words	lib/args.cc	/^Args::push_back_words(const String &str)$/;"	f	class:Args
push_default	tools/lib/elementmap.cc	/^ElementMap::push_default(ElementMap *emap)$/;"	f	class:ElementMap
push_element	apps/clicky/src/scopechain.cc	/^ScopeChain::push_element(const String &ename)$/;"	f	class:ScopeChain
push_failure	elements/standard/fullnotequeue.hh	/^FullNoteQueue::push_failure(Packet *p)$/;"	f	class:FullNoteQueue
push_front	elements/grid/qvec.hh	/^QVec<T>::push_front(const T &e)$/;"	f	class:QVec
push_front	include/click/dequeue.hh	/^DEQueue<T>::push_front(const T &e)$/;"	f	class:DEQueue
push_front	include/click/list.hh	/^    void push_front(pointer x) {$/;"	f	class:List
push_front	include/click/vector.hh	/^    void push_front(T* x)	{ Base::push_front((void*)x); }$/;"	f	class:Vector
push_front	include/click/vector.hh	/^Vector<T>::push_front(const T& x)$/;"	f	class:Vector
push_front	include/click/vector.hh	/^Vector<void*>::push_front(void* x)$/;"	f	class:Vector
push_heap	include/click/heap.hh	/^inline void push_heap(iterator_type begin, iterator_type end,$/;"	f
push_mac_header	include/click/packet.hh	/^Packet::push_mac_header(uint32_t len)$/;"	f	class:Packet
push_success	elements/standard/fullnotequeue.hh	/^FullNoteQueue::push_success(Storage::index_type h, Storage::index_type t,$/;"	f	class:FullNoteQueue
put	include/click/packet.hh	/^Packet::put(uint32_t len)$/;"	f	class:Packet
put_node	ns/CUT_BinHeap.h	/^  void put_node(Node *n) {$/;"	f	class:CUT_BinHeap
put_openflow	elements/local/OpenFlow/lib/vconn.cc	/^put_openflow(size_t openflow_len, uint8_t type, struct ofpbuf *buffer)$/;"	f
put_openflow_xid	elements/local/OpenFlow/lib/vconn.cc	/^put_openflow_xid(size_t openflow_len, uint8_t type, uint32_t xid,$/;"	f
put_qlen_to_FO	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^void PFSchedFW::put_qlen_to_FO( Packet* p, FlowSchedulable* flow )$/;"	f	class:PFSchedFW
pv	include/click/clp.h	/^	void *pv;$/;"	m	union:Clp_Parser::__anon460
pvconn	elements/local/OpenFlow/lib/vconn-provider.hh	/^struct pvconn {$/;"	s
pvconn	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    struct pvconn pvconn;$/;"	m	struct:pssl_pvconn	typeref:struct:pssl_pvconn::pvconn	file:
pvconn	elements/local/OpenFlow/lib/vconn-stream.cc	/^    struct pvconn pvconn;$/;"	m	struct:pstream_pvconn	typeref:struct:pstream_pvconn::pvconn	file:
pvconn_accept	elements/local/OpenFlow/lib/vconn.cc	/^pvconn_accept(struct pvconn *pvconn, int min_version, struct vconn **new_vconn)$/;"	f
pvconn_assert_class	elements/local/OpenFlow/lib/vconn-provider.hh	/^static inline void pvconn_assert_class(const struct pvconn *pvconn,$/;"	f
pvconn_class	elements/local/OpenFlow/lib/vconn-provider.hh	/^struct pvconn_class {$/;"	s
pvconn_classes	elements/local/OpenFlow/lib/vconn.cc	/^static struct pvconn_class *pvconn_classes[] = {$/;"	v	typeref:struct:pvconn_class	file:
pvconn_close	elements/local/OpenFlow/lib/vconn.cc	/^void pvconn_close(struct pvconn *pvconn)$/;"	f
pvconn_init	elements/local/OpenFlow/lib/vconn.cc	/^pvconn_init(struct pvconn *pvconn, struct pvconn_class *Class,$/;"	f
pvconn_open	elements/local/OpenFlow/lib/vconn.cc	/^int pvconn_open(const char *name, struct pvconn **pvconnp)$/;"	f
pvconn_wait	elements/local/OpenFlow/lib/vconn.cc	/^pvconn_wait(struct pvconn *pvconn)$/;"	f
pvo_len	elements/local/OpenFlow/include/openflow/private-ext.hh	/^	uint16_t pvo_len;	\/* length of value (octet) *\/$/;"	m	struct:private_vxopt
pvo_type	elements/local/OpenFlow/include/openflow/private-ext.hh	/^	uint16_t pvo_type;	\/* type of vendor extension option *\/$/;"	m	struct:private_vxopt
q	elements/local/FlowNet/common/Flow.hh	/^	struct PacketQueue q;$/;"	m	class:Flow	typeref:struct:Flow::PacketQueue
qdrop	elements/local/FlowNet/common/Flow.hh	/^	uint32_t qdrop;$/;"	m	class:Flow
qdrop	elements/local/FlowNet/papmo/PaPMo.hh	/^	uint32_t qdrop;$/;"	m	struct:composed_trace
qdrop_now	elements/local/FlowNet/common/Flow.hh	/^	uint32_t qdrop_now;$/;"	m	class:Flow
ql_peak_sample	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	struct queue_QL ql_peak_sample;$/;"	m	struct:CORE	typeref:struct:CORE::queue_QL
ql_tma	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	struct queue_QL ql_tma;$/;"	m	struct:CORE	typeref:struct:CORE::queue_QL
qlen	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	double qlen;$/;"	m	struct:queue_length
qlen_monitor_ewma_alpha	elements/local/FlowNet/common/FlowNetGod.hh	/^	double	qlen_monitor_ewma_alpha;$/;"	m	struct:paramset_flowtable
qlen_next	elements/local/FlowNet/papmo/PaPMo.hh	/^	uint16_t qlen_next;$/;"	m	struct:composed_trace
qlen_self	elements/local/FlowNet/papmo/PaPMo.hh	/^	uint16_t qlen_self;$/;"	m	struct:composed_trace
qmap	elements/grid/floodinglocquerier.hh	/^  typedef HashMap<IPAddress, LocEntry> qmap;$/;"	t	class:FloodingLocQuerier
qsort_compar_t	elements/test/sorttest.cc	/^typedef int (*qsort_compar_t)(const void *, const void *);$/;"	t	file:
quad_port_a	drivers/e1000-7.x/src/e1000.h	/^	boolean_t quad_port_a;$/;"	m	struct:e1000_adapter
qual_bot	elements/grid/linktracker.hh	/^    double qual_bot;$/;"	m	struct:LinkTracker::stat_t
qual_to_pct	elements/grid/gridroutetable.cc	/^GridRouteTable::qual_to_pct(int q)$/;"	f	class:GridRouteTable
qual_top	elements/grid/linktracker.hh	/^    double qual_top;$/;"	m	struct:LinkTracker::stat_t
query	elements/ip/ipnameinfo.cc	/^ServicesNameDB::query(const String &name, void *value, size_t vsize)$/;"	f	class:__anon323::ServicesNameDB
query	elements/standard/alignmentinfo.cc	/^AlignmentInfo::query(const Element *e, int port, int &chunk, int &offset)$/;"	f	class:AlignmentInfo
query	elements/standard/scheduleinfo.cc	/^ScheduleInfo::query(Element *e, ErrorHandler *errh)$/;"	f	class:ScheduleInfo
query	lib/nameinfo.cc	/^DynamicNameDB::query(const String& name, void* value, size_t vsize)$/;"	f	class:DynamicNameDB
query	lib/nameinfo.cc	/^NameInfo::query(uint32_t type, const Element *e, const String &name, void *value, size_t vsize)$/;"	f	class:NameInfo
query	lib/nameinfo.cc	/^StaticNameDB::query(const String &name, void *value, size_t vsize)$/;"	f	class:StaticNameDB
query1	elements/standard/alignmentinfo.cc	/^AlignmentInfo::query1(const Element *e, int port, int &chunk, int &offset) const$/;"	f	class:AlignmentInfo
query_datapath	elements/local/OpenFlow/lib/dpif.cc	/^query_datapath(int *dp_idx, int *multicast_group, const char *dp_name)$/;"	f	file:
query_ethernet	elements/standard/addressinfo.cc	/^AddressInfo::query_ethernet(String s, unsigned char *store, const Element *context)$/;"	f	class:AddressInfo
query_int	lib/nameinfo.cc	/^NameInfo::query_int(uint32_t type, const Element *e, const String &name, int32_t *value)$/;"	f	class:NameInfo
query_int	lib/nameinfo.cc	/^NameInfo::query_int(uint32_t type, const Element *e, const String &name, uint32_t *value)$/;"	f	class:NameInfo
query_ip	elements/standard/addressinfo.cc	/^AddressInfo::query_ip(String s, unsigned char *store, const Element *context)$/;"	f	class:AddressInfo
query_ip6	elements/standard/addressinfo.cc	/^AddressInfo::query_ip6(String s, unsigned char *store, const Element *e)$/;"	f	class:AddressInfo
query_ip6_prefix	elements/standard/addressinfo.cc	/^AddressInfo::query_ip6_prefix(String s, unsigned char *store,$/;"	f	class:AddressInfo
query_ip_prefix	elements/standard/addressinfo.cc	/^AddressInfo::query_ip_prefix(String s, unsigned char *store,$/;"	f	class:AddressInfo
query_netdevice	elements/standard/addressinfo.cc	/^AddressInfo::query_netdevice(const String &s, unsigned char *store,$/;"	f	class:AddressInfo
question_connectivity	elements/local/OpenFlow/lib/rconn.cc	/^question_connectivity(struct rconn *rc) $/;"	f	file:
questionable_connectivity	elements/local/OpenFlow/lib/rconn.cc	/^    bool questionable_connectivity;$/;"	m	struct:rconn	file:
queue	elements/ip/ipfragmentmap.hh	/^	Packet *queue;$/;"	m	struct:IPFragmentMap::Entry
queue	elements/linuxmodule/fromhost.hh	/^    inline Packet * volatile *queue() const {$/;"	f	class:FromHost
queue_QL	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^struct queue_QL {$/;"	s
queue_QL_clear	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^void VcCDCORE::queue_QL_clear(struct queue_QL* q)$/;"	f	class:VcCDCORE
queue_QL_empty	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^int VcCDCORE::queue_QL_empty(struct queue_QL* q)$/;"	f	class:VcCDCORE
queue_QL_full	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^int VcCDCORE::queue_QL_full(struct queue_QL* q) $/;"	f	class:VcCDCORE
queue_QL_get_item	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^int VcCDCORE::queue_QL_get_item(struct queue_QL* q,int index, double *qlen, double *time )$/;"	f	class:VcCDCORE
queue_QL_get_size	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^int VcCDCORE::queue_QL_get_size(struct queue_QL* q)$/;"	f	class:VcCDCORE
queue_QL_pop	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^int VcCDCORE::queue_QL_pop(struct queue_QL* q,double *qlen, double *time)$/;"	f	class:VcCDCORE
queue_QL_push	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^int VcCDCORE::queue_QL_push(struct queue_QL* q,double qlen, double time)$/;"	f	class:VcCDCORE
queue_QL_set	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^void VcCDCORE::queue_QL_set(struct queue_QL* q,int s)$/;"	f	class:VcCDCORE
queue_advance_head	elements/local/OpenFlow/lib/queue.cc	/^queue_advance_head(struct ofp_queue *q, struct ofpbuf *next)$/;"	f
queue_clear	elements/local/OpenFlow/lib/queue.cc	/^queue_clear(struct ofp_queue *q)$/;"	f
queue_destroy	elements/local/OpenFlow/lib/queue.cc	/^queue_destroy(struct ofp_queue *q)$/;"	f
queue_empty	elements/local/FlowNet/common/Flow.hh	/^	bool		queue_empty()  { return queue_len == 0; }$/;"	f	class:Flow
queue_id	elements/local/OpenFlow/datapath.cc	/^	uint32_t queue_id;$/;"	m	struct:queue_stats_state	file:
queue_id	elements/local/OpenFlow/datapath.hh	/^	uint32_t queue_id;$/;"	m	struct:sw_queue
queue_id	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t queue_id;        \/* Where to enqueue the packets. *\/$/;"	m	struct:ofp_action_enqueue
queue_id	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t queue_id;       \/* All queues if OFPQ_ALL. *\/$/;"	m	struct:ofp_queue_stats_request
queue_id	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t queue_id;       \/* Queue i.d *\/$/;"	m	struct:ofp_queue_stats
queue_id	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t queue_id;     \/* id for the specific queue. *\/$/;"	m	struct:ofp_packet_queue
queue_init	elements/local/OpenFlow/lib/queue.cc	/^queue_init(struct ofp_queue *q)$/;"	f
queue_len	elements/local/FlowNet/common/Flow.hh	/^	uint16_t queue_len;$/;"	m	class:Flow
queue_length	elements/local/FlowNet/common/Flow.hh	/^	uint16_t	queue_length() const { return queue_len; }$/;"	f	class:Flow
queue_length	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^struct queue_length {$/;"	s
queue_length_ref	elements/local/FlowNet/common/Flow.hh	/^	uint16_t*	queue_length_ref() { return &queue_len; }$/;"	f	class:Flow
queue_list	elements/local/OpenFlow/datapath.hh	/^	struct list queue_list; \/* list of all queues for this port *\/$/;"	m	struct:click_port	typeref:struct:click_port::list
queue_loss	elements/local/FlowNet/common/Flow.hh	/^	double		queue_loss() { return (double)qdrop_now\/(double)sent_now; };$/;"	f	class:Flow
queue_monitor_policy	elements/local/FlowNet/scheduler/sched_algorithms/SchedBackpressure.cc	/^int VcScheduleBackpressure::queue_monitor_policy(Flow* flow_in, int16_t* len)$/;"	f	class:VcScheduleBackpressure
queue_monitor_policy	elements/local/FlowNet/scheduler/sched_algorithms/SchedHorizon.cc	/^int VcScheduleHorizon::queue_monitor_policy(Flow* flow_in, int16_t* len)$/;"	f	class:VcScheduleHorizon
queue_monitor_policy	elements/local/FlowNet/scheduler/sched_algorithms/SchedLogWeight.cc	/^int VcScheduleLogWeight::queue_monitor_policy(Flow* flow_in, int16_t* len)$/;"	f	class:VcScheduleLogWeight
queue_monitor_policy	elements/local/FlowNet/scheduler/sched_algorithms/SchedNoSchedule.cc	/^int VcScheduleNoSchedule::queue_monitor_policy(Flow* , int16_t* q)$/;"	f	class:VcScheduleNoSchedule
queue_monitor_policy	elements/local/FlowNet/scheduler/sched_algorithms/SchedWBS.cc	/^int VcScheduleWBS::queue_monitor_policy(Flow* flow_in, int16_t* len)$/;"	f	class:VcScheduleWBS
queue_packet	elements/linuxmodule/todevice.cc	/^ToDevice::queue_packet(Packet *p, struct netdev_queue *txq)$/;"	f	class:ToDevice
queue_pop_head	elements/local/OpenFlow/lib/queue.cc	/^queue_pop_head(struct ofp_queue *q)$/;"	f
queue_push_tail	elements/local/OpenFlow/lib/queue.cc	/^queue_push_tail(struct ofp_queue *q, struct ofpbuf *b)$/;"	f
queue_size	elements/aqm/pi.cc	/^PI::queue_size() const$/;"	f	class:PI
queue_size	elements/aqm/red.cc	/^RED::queue_size() const$/;"	f	class:RED
queue_stats_done	elements/local/OpenFlow/datapath.cc	/^static void queue_stats_done(void *state)$/;"	f	file:
queue_stats_dump	elements/local/OpenFlow/datapath.cc	/^static int queue_stats_dump(class Datapath *dp, void *state,$/;"	f	file:
queue_stats_init	elements/local/OpenFlow/datapath.cc	/^static int queue_stats_init(const void *body, int body_len UNUSED, void **state)$/;"	f	file:
queue_stats_state	elements/local/OpenFlow/datapath.cc	/^struct queue_stats_state {$/;"	s	file:
queue_stripe_color	apps/clicky/src/dstyle.hh	/^    double queue_stripe_color[4];$/;"	m	struct:clicky::delt_style
queue_stripe_spacing	apps/clicky/src/dstyle.hh	/^    double queue_stripe_spacing;$/;"	m	struct:clicky::delt_size_style
queue_stripe_style	apps/clicky/src/dstyle.hh	/^    int queue_stripe_style;$/;"	m	struct:clicky::delt_style
queue_stripe_width	apps/clicky/src/dstyle.hh	/^    double queue_stripe_width;$/;"	m	struct:clicky::delt_style
queue_thread_pusher	elements/test/queuethreadtest.cc	/^static void *queue_thread_pusher(void *arg)$/;"	f	file:
queue_timeout	elements/linuxmodule/todevice.hh	/^	queue_timeout = CLICK_HZ \/ 4$/;"	e	enum:ToDevice::__anon317
queuelen	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	int queuelen;$/;"	m	struct:NexthopInfo
queuelen_average	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	float queuelen_average;$/;"	m	struct:NexthopInfo
queuelen_last_update_per_packet	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	int queuelen_last_update_per_packet;$/;"	m	struct:CORE
queuelen_last_update_timer	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	int queuelen_last_update_timer;$/;"	m	struct:CORE
queuelen_monitor_seq	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	uint16_t queuelen_monitor_seq;$/;"	m	struct:NexthopInfo
queues	elements/local/OpenFlow/datapath.hh	/^	struct sw_queue queues[NETDEV_MAX_QUEUES];$/;"	m	struct:click_port	typeref:struct:click_port::sw_queue
queues	elements/local/OpenFlow/include/openflow/openflow.hh	/^    struct ofp_packet_queue queues[0]; \/* List of configured queues. *\/$/;"	m	struct:ofp_queue_get_config_reply	typeref:struct:ofp_queue_get_config_reply::ofp_packet_queue
quiet_cmd_ccompile	bsdmodule/Makefile	/^quiet_cmd_ccompile = CC $(quiet_modtag) $(subst $(obj)\/,,$@)$/;"	m
quiet_cmd_ccompile	etc/pkg-linuxmodule-26.mk	/^quiet_cmd_ccompile = CC $(quiet_modtag) $(subst $(obj)\/,,$@)$/;"	m
quiet_cmd_ccompile	linuxmodule/Makefile	/^quiet_cmd_ccompile = CC $(quiet_modtag) $(subst $(obj)\/,,$@)$/;"	m
quiet_cmd_ccompile_nodep	etc/pkg-linuxmodule-26.mk	/^quiet_cmd_ccompile_nodep = CC $(quiet_modtag) $(subst $(obj)\/,,$@)$/;"	m
quiet_cmd_ccompile_nodep	linuxmodule/Makefile	/^quiet_cmd_ccompile_nodep = CC $(quiet_modtag) $(subst $(obj)\/,,$@)$/;"	m
quiet_cmd_cxxcompile	bsdmodule/Makefile	/^quiet_cmd_cxxcompile = CXX $(quiet_modtag) $(subst $(obj)\/,,$@)$/;"	m
quiet_cmd_cxxcompile	etc/pkg-linuxmodule-26.mk	/^quiet_cmd_cxxcompile = CXX $(quiet_modtag) $(subst $(obj)\/,,$@)$/;"	m
quiet_cmd_cxxcompile	linuxmodule/Makefile	/^quiet_cmd_cxxcompile = CXX $(quiet_modtag) $(subst $(obj)\/,,$@)$/;"	m
quiet_cmd_cxxcompile_nodep	etc/pkg-linuxmodule-26.mk	/^quiet_cmd_cxxcompile_nodep = CXX $(quiet_modtag) $(subst $(obj)\/,,$@)$/;"	m
quiet_cmd_cxxcompile_nodep	linuxmodule/Makefile	/^quiet_cmd_cxxcompile_nodep = CXX $(quiet_modtag) $(subst $(obj)\/,,$@)$/;"	m
quietlink	click-buildtool	/^quietlink () {$/;"	f
quietlink_usage	click-buildtool	/^quietlink_usage () {$/;"	f
quote_unquoted_gt	doc/click-elem2man	/^sub quote_unquoted_gt ($) {$/;"	s
quoted_hex	lib/string.cc	/^String::quoted_hex() const$/;"	f	class:String
r	drivers/e1000-4.x/src/e1000_param.c	/^		} r;$/;"	m	union:e1000_option::__anon67	typeref:struct:e1000_option::__anon67::__anon68	file:
r	drivers/e1000-5.x/src/e1000_param.c	/^		} r;$/;"	m	union:e1000_option::__anon164	typeref:struct:e1000_option::__anon164::__anon165	file:
r	drivers/e1000-7.x/src/e1000_param.c	/^		} r;$/;"	m	union:e1000_option::__anon122	typeref:struct:e1000_option::__anon122::__anon123	file:
r	include/click/handler.hh	/^	ReadHandlerCallback r;$/;"	m	union:Handler::__anon469
r	tools/click-pretty/click-pretty.cc	/^    RouterT *r;$/;"	m	struct:PrettyRouter	file:
r_bot	elements/grid/linktracker.hh	/^    double r_bot;$/;"	m	struct:LinkTracker::bcast_t
r_config	tools/click-pretty/click-pretty.cc	/^    String r_config;$/;"	m	struct:PrettyRouter	file:
r_offset	bsdmodule/clickfs_tree.hh	/^	    off_t r_offset;$/;"	m	struct:clickfs_dirent::__anon34::handle_struct
r_top	elements/grid/linktracker.hh	/^    double r_top;$/;"	m	struct:LinkTracker::bcast_t
radio_range	elements/grid/regionpep.cc	/^EstimateRouterRegion::radio_range(grid_location) \/\/ XXX degrees lat covered by range$/;"	f	class:EstimateRouterRegion
radiotap_elem_to_bytes	elements/wifi/radiotapdecap.cc	/^static const int radiotap_elem_to_bytes[NUM_RADIOTAP_ELEMENTS] =$/;"	v	file:
radius	elements/grid/grid.hh	/^  unsigned int radius() const { return ntohl(_radius); }$/;"	f	struct:grid_region
rand32	elements/analysis/anonipaddr.cc	/^rand32()$/;"	f	file:
random_bit_errors_read	elements/standard/randomerror.cc	/^random_bit_errors_read(Element *f, void *vwhich)$/;"	f	file:
random_bytes	elements/local/OpenFlow/lib/random.cc	/^random_bytes(void *p_, size_t n)$/;"	f
random_init	elements/local/OpenFlow/lib/random.cc	/^random_init(void)$/;"	f
random_link	elements/wifi/linktable.cc	/^LinkTable::random_link()$/;"	f	class:LinkTable
random_range	elements/local/OpenFlow/lib/random.cc	/^random_range(int max) $/;"	f
random_schedule_period	elements/local/FlowNet/common/FlowNetGod.hh	/^	int	random_schedule_period;$/;"	m	struct:paramset_flowtable
random_uint16	elements/local/OpenFlow/lib/random.cc	/^random_uint16(void)$/;"	f
random_uint32	elements/local/OpenFlow/lib/random.cc	/^random_uint32(void)$/;"	f
random_uint8	elements/local/OpenFlow/lib/random.cc	/^random_uint8(void)$/;"	f
range_option	drivers/e1000-4.x/src/e1000_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:e1000_option::__anon66	file:
range_option	drivers/e1000-5.x/src/e1000_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:e1000_option::__anon163	file:
range_option	drivers/e1000-7.x/src/e1000_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	e	enum:e1000_option::__anon121	file:
range_to_arr	conf/click-mkclgw.pl	/^sub range_to_arr {$/;"	s
rate	elements/local/OpenFlow/include/openflow/openflow.hh	/^	uint16_t rate;$/;"	m	struct:netopen_rate_shape
rate	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t rate;        \/* In 1\/10 of a percent; >1000 -> disabled. *\/$/;"	m	struct:ofp_queue_prop_min_rate
rate	elements/local/OpenFlow/lib/vlog.hh	/^    unsigned int rate;          \/* Tokens per second. *\/$/;"	m	struct:vlog_rate_limit
rate	include/click/ewma.hh	/^RateEWMAX<P>::rate(unsigned ratenum) const$/;"	f	class:RateEWMAX
rate	include/click/gaprate.hh	/^GapRate::rate() const$/;"	f	class:GapRate
rate	include/click/tokenbucket.hh	/^    token_type rate() const {$/;"	f	class:TokenBucketX
rate	include/click/tokenbucket.hh	/^typename P::token_type TokenRateX<P>::rate() const$/;"	f	class:TokenRateX
rate	include/clicknet/wifi.h	/^  p80211item_uint32_t rate;$/;"	m	struct:__anon498
rate	include/clicknet/wifi.h	/^  uint8_t rate;			\/* bitrate in Mbps*2 *\/$/;"	m	struct:click_wifi_extra
rate1	include/clicknet/wifi.h	/^  uint8_t rate1;		\/* bitrate in Mbps*2 *\/$/;"	m	struct:click_wifi_extra
rate2	include/clicknet/wifi.h	/^  uint8_t rate2;		\/* bitrate in Mbps*2 *\/$/;"	m	struct:click_wifi_extra
rate3	include/clicknet/wifi.h	/^  uint8_t rate3;		\/* bitrate in Mbps*2 *\/$/;"	m	struct:click_wifi_extra
rate_count	elements/ip/ipratemon.hh	/^	    rate_count = 2$/;"	e	enum:IPRateMonitor::EWMAParameters::__anon340
rate_count	include/click/ewma.hh	/^	rate_count = 1$/;"	e	enum:RateEWMAXParameters::__anon434
rate_freq	elements/standard/bandwidthmeter.hh	/^  unsigned rate_freq() const		{ return _rate.epoch_frequency(); }$/;"	f	class:BandwidthMeter
rate_index	elements/wifi/autoratefallback.hh	/^    int rate_index(int rate) {$/;"	f	struct:AutoRateFallback::DstInfo
rate_index	elements/wifi/madwifirate.hh	/^    int rate_index(int rate) {$/;"	f	struct:MadwifiRate::DstInfo
rate_index	elements/wifi/probetxrate.hh	/^    int rate_index(int rate) {$/;"	f	struct:ProbeTXRate::DstInfo
rate_sample_interval	drivers/e1000-5.x/src/kcompat.h	/^	u32	rate_sample_interval;$/;"	m	struct:_kc_ethtool_coalesce
rate_sample_interval	drivers/e1000-7.x/src/kcompat.h	/^	u32	rate_sample_interval;$/;"	m	struct:_kc_ethtool_coalesce
rate_scale	elements/standard/bandwidthmeter.hh	/^  unsigned rate_scale() const		{ return _rate.scale(); }$/;"	f	class:BandwidthMeter
rate_t	elements/standard/counter.hh	/^    typedef RateEWMAX<RateEWMAXParameters<4, 10, uint64_t, int64_t> > rate_t;$/;"	t	class:Counter
rate_t	elements/standard/counter.hh	/^    typedef RateEWMAX<RateEWMAXParameters<4, 10> > rate_t;$/;"	t	class:Counter
rate_type	include/click/tokenbucket.hh	/^    typedef R rate_type;$/;"	t	class:TokenCounterX
rate_type	include/click/tokenbucket.hh	/^    typedef TokenRateX<P> rate_type;$/;"	t	class:TokenBucketX
ratecode_to_dot11	elements/wifi/athdesc.h	/^ratecode_to_dot11(int ratecode) {$/;"	f
rates	include/clicknet/wifi.h	/^	struct rates {$/;"	s	struct:wifi_information
rates	include/clicknet/wifi.h	/^	} rates;$/;"	m	struct:wifi_information	typeref:struct:wifi_information::rates
rates_string	elements/wifi/printwifi.cc	/^String rates_string(Vector<int> rates) {$/;"	f
raw	include/click/handler.hh	/^    inline bool raw() const {$/;"	f	class:Handler
rbuf	bsdmodule/clickfs_tree.hh	/^	    CLICK_NAME(String) *rbuf;$/;"	m	struct:clickfs_dirent::__anon34::handle_struct
rc4_crypt_skip	elements/wifi/rc4.cc	/^rc4_crypt_skip(struct rc4_state *const state,$/;"	f
rc4_init	elements/wifi/rc4.cc	/^rc4_init(struct rc4_state *const state, const unsigned char *key, int keylen)$/;"	f
rc4_state	elements/wifi/rc4.hh	/^struct rc4_state {$/;"	s
rcon	elements/ipsec/aes.cc	/^static const unsigned long rcon[] = {$/;"	v	file:
rconn	elements/local/OpenFlow/RConn.hh	/^        struct rconn *rconn;$/;"	m	struct:rconn_remote	typeref:struct:rconn_remote::rconn
rconn	elements/local/OpenFlow/lib/rconn.cc	/^struct rconn {$/;"	s	file:
rconnElement	elements/local/OpenFlow/RConn.hh	/^        RConn *rconnElement;$/;"	m	struct:rnc_param
rconn_add_monitor	elements/local/OpenFlow/lib/rconn.cc	/^void rconn_add_monitor(struct rconn *rc, struct vconn *vconn)$/;"	f
rconn_connect	elements/local/OpenFlow/lib/rconn.cc	/^rconn_connect(struct rconn *rc, const char *name)$/;"	f
rconn_connect_unreliably	elements/local/OpenFlow/lib/rconn.cc	/^rconn_connect_unreliably(struct rconn *rc,$/;"	f
rconn_create	elements/local/OpenFlow/lib/rconn.cc	/^rconn_create(int probe_interval, int max_backoff)$/;"	f
rconn_destroy	elements/local/OpenFlow/lib/rconn.cc	/^rconn_destroy(struct rconn *rc)$/;"	f
rconn_disconnect	elements/local/OpenFlow/lib/rconn.cc	/^rconn_disconnect(struct rconn *rc)$/;"	f
rconn_failure_duration	elements/local/OpenFlow/lib/rconn.cc	/^rconn_failure_duration(const struct rconn *rconn)$/;"	f
rconn_get_attempted_connections	elements/local/OpenFlow/lib/rconn.cc	/^rconn_get_attempted_connections(const struct rconn *rc)$/;"	f
rconn_get_backoff	elements/local/OpenFlow/lib/rconn.cc	/^rconn_get_backoff(const struct rconn *rc)$/;"	f
rconn_get_connection_seqno	elements/local/OpenFlow/lib/rconn.cc	/^rconn_get_connection_seqno(const struct rconn *rc)$/;"	f
rconn_get_creation_time	elements/local/OpenFlow/lib/rconn.cc	/^rconn_get_creation_time(const struct rconn *rc)$/;"	f
rconn_get_ip	elements/local/OpenFlow/lib/rconn.cc	/^rconn_get_ip(const struct rconn *rconn) $/;"	f
rconn_get_last_connection	elements/local/OpenFlow/lib/rconn.cc	/^rconn_get_last_connection(const struct rconn *rc)$/;"	f
rconn_get_name	elements/local/OpenFlow/lib/rconn.cc	/^rconn_get_name(const struct rconn *rc)$/;"	f
rconn_get_state	elements/local/OpenFlow/lib/rconn.cc	/^rconn_get_state(const struct rconn *rc)$/;"	f
rconn_get_state_elapsed	elements/local/OpenFlow/lib/rconn.cc	/^rconn_get_state_elapsed(const struct rconn *rc)$/;"	f
rconn_get_successful_connections	elements/local/OpenFlow/lib/rconn.cc	/^rconn_get_successful_connections(const struct rconn *rc)$/;"	f
rconn_get_total_time_connected	elements/local/OpenFlow/lib/rconn.cc	/^rconn_get_total_time_connected(const struct rconn *rc)$/;"	f
rconn_is_alive	elements/local/OpenFlow/lib/rconn.cc	/^rconn_is_alive(const struct rconn *rconn)$/;"	f
rconn_is_connected	elements/local/OpenFlow/lib/rconn.cc	/^rconn_is_connected(const struct rconn *rconn)$/;"	f
rconn_is_connectivity_questionable	elements/local/OpenFlow/lib/rconn.cc	/^rconn_is_connectivity_questionable(struct rconn *rconn)$/;"	f
rconn_new	elements/local/OpenFlow/lib/rconn.cc	/^rconn_new(const char *name, int inactivity_probe_interval, int max_backoff)$/;"	f
rconn_new_from_vconn	elements/local/OpenFlow/lib/rconn.cc	/^rconn_new_from_vconn(const char *name, struct vconn *vconn) $/;"	f
rconn_packets_received	elements/local/OpenFlow/lib/rconn.cc	/^rconn_packets_received(const struct rconn *rc)$/;"	f
rconn_packets_sent	elements/local/OpenFlow/lib/rconn.cc	/^rconn_packets_sent(const struct rconn *rc)$/;"	f
rconn_recv	elements/local/OpenFlow/lib/rconn.cc	/^rconn_recv(struct rconn *rc)$/;"	f
rconn_recv_wait	elements/local/OpenFlow/lib/rconn.cc	/^rconn_recv_wait(struct rconn *rc)$/;"	f
rconn_remote	elements/local/OpenFlow/RConn.hh	/^struct rconn_remote {$/;"	s
rconn_run	elements/local/OpenFlow/lib/rconn.cc	/^rconn_run(struct rconn *rc)$/;"	f
rconn_run_wait	elements/local/OpenFlow/lib/rconn.cc	/^rconn_run_wait(struct rconn *rc)$/;"	f
rconn_send	elements/local/OpenFlow/lib/rconn.cc	/^int rconn_send(struct rconn *rc, struct ofpbuf *b, int *n_queued)$/;"	f
rconn_send_error_msg	elements/local/OpenFlow/RConn.cc	/^static void rconn_send_error_msg(class RConn* rconnElement, struct rconn_remote *sender, uint32_t xid,$/;"	f	file:
rconn_send_with_limit	elements/local/OpenFlow/lib/rconn.cc	/^int rconn_send_with_limit(struct rconn *rc, struct ofpbuf *b,$/;"	f
rconn_stat	elements/local/OpenFlow/RConn.hh	/^struct rconn_stat {$/;"	s
rconn_update_protocol_stat	elements/local/OpenFlow/lib/rconn.cc	/^rconn_update_protocol_stat(struct rconn *rconn,$/;"	f
rd	elements/userlevel/ipflowrawsockets.hh	/^	int rd()			{ return _rd; }$/;"	f	class:IPFlowRawSockets::Flow
rd_key	elements/ipsec/aes.hh	/^    unsigned long rd_key[4 *(AES_MAXNR + 1)];$/;"	m	struct:aes_key_st
rdatalen	apps/clicky/src/cdriver.hh	/^	size_t rdatalen;$/;"	m	struct:clicky::csocket_cdriver::msg
rdatapos	apps/clicky/src/cdriver.hh	/^	size_t rdatapos;$/;"	m	struct:clicky::csocket_cdriver::msg
rdh	drivers/e1000-7.x/src/e1000.h	/^	uint16_t rdh;$/;"	m	struct:e1000_rx_ring
rdmsr	linuxmodule/read-pmc.c	32;"	d	file:
rdpmc	linuxmodule/read-pmc.c	43;"	d	file:
rdt	drivers/e1000-7.x/src/e1000.h	/^	uint16_t rdt;$/;"	m	struct:e1000_rx_ring
reach	tools/click-devirtualize/cxxclass.cc	/^CxxClass::reach(int findex, Vector<int> &reached)$/;"	f	class:CxxClass
reachable_match_t	apps/clicky/src/crouter.cc	/^crouter::reachable_match_t::reachable_match_t(const String &name, int port,$/;"	f	class:clicky::crouter::reachable_match_t
reachable_match_t	apps/clicky/src/crouter.cc	/^crouter::reachable_match_t::reachable_match_t(const reachable_match_t &m,$/;"	f	class:clicky::crouter::reachable_match_t
reachable_match_t	apps/clicky/src/crouter.hh	/^    struct reachable_match_t {$/;"	s	class:clicky::crouter
reachable_t	apps/clicky/src/crouter.hh	/^    struct reachable_t {$/;"	s	class:clicky::crouter
read	apps/ClickController/ControlSocket.java	/^    public char[] read(String elementName, String handlerName) $/;"	m	class:ControlSocket
read	apps/csclient/csclient.cc	/^ControlSocketClient::read(string el, string handler, char *buf, int &bufsz)$/;"	f	class:ControlSocketClient
read	apps/csclient/csclient.cc	/^ControlSocketClient::read(string el, string handler, string &response)$/;"	f	class:ControlSocketClient
read	apps/csclient/csclient.hh	/^  err_t read(handler_info_t h, char *buf, int &bufsz) { return read(h.element_name, h.handler_name, buf, bufsz); }$/;"	f	class:ControlSocketClient
read	apps/csclient/csclient.hh	/^  err_t read(handler_info_t h, string &response)      { return read(h.element_name, h.handler_name, response); }$/;"	f	class:ControlSocketClient
read	drivers/e1000-7.x/src/e1000_hw.h	/^    } read;$/;"	m	union:e1000_rx_desc_extended	typeref:struct:e1000_rx_desc_extended::__anon93
read	drivers/e1000-7.x/src/e1000_hw.h	/^    } read;$/;"	m	union:e1000_rx_desc_packet_split	typeref:struct:e1000_rx_desc_packet_split::__anon99
read	elements/userlevel/controlsocket.cc	/^ControlSocket::connection::read(int len, String &data)$/;"	f	class:ControlSocket::connection
read	include/click/args.hh	/^    Args &read(const char *keyword, P parser, T &variable) {$/;"	f	struct:Args
read	include/click/args.hh	/^    Args &read(const char *keyword, P parser, T1 &variable1, T2 &variable2) {$/;"	f	struct:Args
read	include/click/args.hh	/^    Args &read(const char *keyword, T &variable) {$/;"	f	struct:Args
read	include/click/args.hh	/^    Args &read(const char *keyword, int flags, P parser, T &variable) {$/;"	f	struct:Args
read	include/click/args.hh	/^    Args &read(const char *keyword, int flags, P parser, T1 &variable1, T2 &variable2) {$/;"	f	struct:Args
read	include/click/args.hh	/^    Args &read(const char *keyword, int flags, T &variable) {$/;"	f	struct:Args
read	include/click/selectset.hh	/^	Element *read;$/;"	m	struct:SelectSet::SelectorInfo
read	lib/fromfile.cc	/^FromFile::read(void *vdata, uint32_t dlen, ErrorHandler *errh)$/;"	f	class:FromFile
read	linuxmodule/module.cc	/^KernelErrorHandler::read(click_handler_direct_info *hdi) const$/;"	f	class:KernelErrorHandler
read	linuxmodule/modulepriv.hh	/^    int read;$/;"	m	struct:click_fsmode_t
read	test/testie	/^sub read (*$;$) {$/;"	s
readString	apps/ClickController/ControlSocket.java	/^    public String readString(HandlerInfo hinfo) $/;"	m	class:ControlSocket
readString	apps/ClickController/ControlSocket.java	/^    public String readString(String el, String handler) $/;"	m	class:ControlSocket
read_active	elements/standard/suppressor.cc	/^read_active(Element *e, void *thunk)$/;"	f	file:
read_active_modules	tools/click-install/common.cc	/^read_active_modules(StringMap &packages, ErrorHandler *errh)$/;"	f
read_all_with	include/click/args.hh	/^    Args &read_all_with(const char *keyword, P parser) {$/;"	f	struct:Args
read_all_with	include/click/args.hh	/^    Args &read_all_with(const char *keyword, P parser, T &variable) {$/;"	f	struct:Args
read_all_with	include/click/args.hh	/^    Args &read_all_with(const char *keyword, int flags, P parser) {$/;"	f	struct:Args
read_all_with	include/click/args.hh	/^    Args &read_all_with(const char *keyword, int flags, P parser, T &variable) {$/;"	f	struct:Args
read_args	elements/grid/gridheaderinfo.cc	/^GridHeaderInfo::read_args(const Vector<String> &, ErrorHandler *)$/;"	f	class:GridHeaderInfo
read_args	elements/grid/gridlocationinfo.cc	/^GridLocationInfo::read_args(const Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GridLocationInfo
read_args	elements/grid/gridlocationinfo2.cc	/^GridLocationInfo2::read_args(const Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:GridLocationInfo2
read_args	elements/grid/loctable.cc	/^LocationTable::read_args(const Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:LocationTable
read_args	elements/grid/movesim.cc	/^MovementSimulator::read_args(const Vector<String> &conf, ErrorHandler *errh)$/;"	f	class:MovementSimulator
read_assert_stop	bsdmodule/module.cc	/^read_assert_stop(Element *, void *)$/;"	f	file:
read_bcast_stats	elements/grid/linkstat.cc	/^LinkStat::read_bcast_stats(Element *xf, void *)$/;"	f	class:LinkStat
read_bcast_stats	elements/grid/linktracker.cc	/^LinkTracker::read_bcast_stats(Element *xf, void *)$/;"	f	class:LinkTracker
read_binary	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::read_binary(String &result, ErrorHandler *errh)$/;"	f	class:FromIPSummaryDump
read_buffer	lib/fromfile.cc	/^FromFile::read_buffer(ErrorHandler *errh)$/;"	f	class:FromFile
read_buffer_mmap	lib/fromfile.cc	/^FromFile::read_buffer_mmap(ErrorHandler *errh)$/;"	f	class:FromFile
read_calls	elements/linuxmodule/todevice.cc	/^ToDevice::read_calls(Element *e, void *)$/;"	f	class:ToDevice
read_cert_file	elements/local/OpenFlow/lib/vconn-ssl.cc	/^read_cert_file(const char *file_name, X509 ***certs, size_t *n_certs)$/;"	f	file:
read_class_handler	lib/element.cc	/^read_class_handler(Element *e, void *)$/;"	f	file:
read_classes	bsdmodule/config.cc	/^read_classes(Element *, void *)$/;"	f	file:
read_classes	linuxmodule/config.cc	/^read_classes(Element *, void *)$/;"	f	file:
read_command	elements/userlevel/controlsocket.cc	/^ControlSocket::read_command(connection &conn, const String &handlername, String param)$/;"	f	class:ControlSocket
read_config_handler	lib/element.cc	/^read_config_handler(Element *e, void *)$/;"	f	file:
read_cpu_share	bsdmodule/sched.cc	/^read_cpu_share(Element *, void *thunk)$/;"	f	file:
read_cpu_share	linuxmodule/sched.cc	/^read_cpu_share(Element *, void *thunk)$/;"	f	file:
read_cur_cpu_share	bsdmodule/sched.cc	/^read_cur_cpu_share(Element *, void *)$/;"	f	file:
read_cur_cpu_share	linuxmodule/sched.cc	/^read_cur_cpu_share(Element *, void *)$/;"	f	file:
read_cycles	bsdmodule/module.cc	/^read_cycles(Element *, void *)$/;"	f	file:
read_cycles_handler	lib/element.cc	/^Element::read_cycles_handler(Element *e, void *)$/;"	f	class:Element
read_elementlist	doc/click-elem2man	/^sub read_elementlist ($) {$/;"	s
read_elementmap	doc/click-elem2man	/^sub read_elementmap ($;$) {$/;"	s
read_elementmap_text	doc/click-elem2man	/^sub read_elementmap_text ($;$) {$/;"	s
read_errors	bsdmodule/module.cc	/^read_errors(Element *, void *thunk)$/;"	f	file:
read_errors	linuxmodule/module.cc	/^read_errors(Element *, void *user_data)$/;"	f	file:
read_export_handler	elements/standard/script.cc	/^Script::read_export_handler(Element *e, void *user_data)$/;"	f	class:Script
read_files_from	click-mkelemmap	/^sub read_files_from ($) {$/;"	s
read_flow_packet	elements/analysis/fromflandump.cc	/^FromFlanDump::read_flow_packet()$/;"	f	class:FromFlanDump
read_global	linuxmodule/module.cc	/^read_global(Element *, void *user_data)$/;"	f	file:
read_handler	elements/analysis/aggcounter.cc	/^AggregateCounter::read_handler(Element *e, void *thunk)$/;"	f	class:AggregateCounter
read_handler	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::read_handler(Element *e, void *thunk)$/;"	f	class:AggregatePacketCounter
read_handler	elements/analysis/aggregateip.cc	/^AggregateIP::read_handler(Element *e, void *thunk)$/;"	f	class:AggregateIP
read_handler	elements/analysis/fromcapdump.cc	/^FromCapDump::read_handler(Element *e, void *thunk)$/;"	f	class:FromCapDump
read_handler	elements/analysis/fromdagdump.cc	/^FromDAGDump::read_handler(Element *e, void *thunk)$/;"	f	class:FromDAGDump
read_handler	elements/analysis/fromflandump.cc	/^FromFlanDump::read_handler(Element *e, void *thunk)$/;"	f	class:FromFlanDump
read_handler	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::read_handler(Element *e, void *thunk)$/;"	f	class:FromIPSummaryDump
read_handler	elements/analysis/fromnetflowsumdump.cc	/^FromNetFlowSummaryDump::read_handler(Element *e, void *thunk)$/;"	f	class:FromNetFlowSummaryDump
read_handler	elements/analysis/fromnlanrdump.cc	/^FromNLANRDump::read_handler(Element *e, void *thunk)$/;"	f	class:FromNLANRDump
read_handler	elements/analysis/fromtcpdump.cc	/^FromTcpdump::read_handler(Element *e, void *thunk)$/;"	f	class:FromTcpdump
read_handler	elements/analysis/settimestampdelta.cc	/^SetTimestampDelta::read_handler(Element *e, void *thunk)$/;"	f	class:SetTimestampDelta
read_handler	elements/analysis/timefilter.cc	/^TimeFilter::read_handler(Element *e, void *)$/;"	f	class:TimeFilter
read_handler	elements/analysis/timerange.cc	/^TimeRange::read_handler(Element *e, void *thunk)$/;"	f	class:TimeRange
read_handler	elements/analysis/timestampaccum.cc	/^TimestampAccum::read_handler(Element *e, void *thunk)$/;"	f	class:TimestampAccum
read_handler	elements/aqm/red.cc	/^RED::read_handler(Element *f, void *vparam)$/;"	f	class:RED
read_handler	elements/bsdmodule/tohost.cc	/^ToHost::read_handler(Element *e, void *)$/;"	f	class:ToHost
read_handler	elements/ethernet/arpquerier.cc	/^ARPQuerier::read_handler(Element *e, void *thunk)$/;"	f	class:ARPQuerier
read_handler	elements/ethernet/arpresponder.cc	/^ARPResponder::read_handler(Element *e, void *)$/;"	f	class:ARPResponder
read_handler	elements/ethernet/arptable.cc	/^ARPTable::read_handler(Element *e, void *user_data)$/;"	f	class:ARPTable
read_handler	elements/ethernet/checkarpheader.cc	/^CheckARPHeader::read_handler(Element *e, void *)$/;"	f	class:CheckARPHeader
read_handler	elements/ethernet/ethervlanencap.cc	/^EtherVLANEncap::read_handler(Element *e, void *user_data)$/;"	f	class:EtherVLANEncap
read_handler	elements/ethernet/setvlananno.cc	/^SetVLANAnno::read_handler(Element *e, void *user_data)$/;"	f	class:SetVLANAnno
read_handler	elements/ethernet/vlanencap.cc	/^VLANEncap::read_handler(Element *e, void *user_data)$/;"	f	class:VLANEncap
read_handler	elements/icmp/checkicmpheader.cc	/^CheckICMPHeader::read_handler(Element *e, void *thunk)$/;"	f	class:CheckICMPHeader
read_handler	elements/icmp/icmpipencap.cc	/^String ICMPIPEncap::read_handler(Element *e, void *thunk)$/;"	f	class:ICMPIPEncap
read_handler	elements/icmp/icmppingencap.cc	/^String ICMPPingEncap::read_handler(Element *e, void *thunk)$/;"	f	class:ICMPPingEncap
read_handler	elements/icmp/icmpsendpings.cc	/^ICMPPingSource::read_handler(Element *e, void *thunk)$/;"	f	class:ICMPPingSource
read_handler	elements/ip/checkipheader.cc	/^CheckIPHeader::read_handler(Element *e, void *)$/;"	f	class:CheckIPHeader
read_handler	elements/ip/ipencap.cc	/^IPEncap::read_handler(Element *e, void *thunk)$/;"	f	class:IPEncap
read_handler	elements/ip/iprewriterbase.cc	/^IPRewriterBase::read_handler(Element *e, void *user_data)$/;"	f	class:IPRewriterBase
read_handler	elements/ip6/ip6encap.cc	/^IP6Encap::read_handler(Element *e, void *thunk)$/;"	f	class:IP6Encap
read_handler	elements/ipsec/ipsecencap.cc	/^IPsecEncap::read_handler(Element *e, void *thunk)$/;"	f	class:IPsecEncap
read_handler	elements/linuxmodule/cpuqueue.cc	/^CPUQueue::read_handler(Element *e, void *thunk)$/;"	f	class:CPUQueue
read_handler	elements/linuxmodule/cyclecountaccum.cc	/^CycleCountAccum::read_handler(Element *e, void *thunk)$/;"	f	class:CycleCountAccum
read_handler	elements/linuxmodule/fromdevice.cc	/^String FromDevice::read_handler(Element *e, void *thunk)$/;"	f	class:FromDevice
read_handler	elements/linuxmodule/fromhost.cc	/^FromHost::read_handler(Element *e, void *)$/;"	f	class:FromHost
read_handler	elements/linuxmodule/perfcountaccum.cc	/^PerfCountAccum::read_handler(Element *e, void *thunk)$/;"	f	class:PerfCountAccum
read_handler	elements/standard/counter.cc	/^Counter::read_handler(Element *e, void *thunk)$/;"	f	class:Counter
read_handler	elements/standard/notifierqueue.cc	/^NotifierQueue::read_handler(Element *e, void *)$/;"	f	class:NotifierQueue
read_handler	elements/standard/randomsample.cc	/^RandomSample::read_handler(Element *e, void *thunk)$/;"	f	class:RandomSample
read_handler	elements/standard/ratedsplitter.cc	/^RatedSplitter::read_handler(Element *e, void *)$/;"	f	class:RatedSplitter
read_handler	elements/standard/ratedunqueue.cc	/^RatedUnqueue::read_handler(Element *e, void *thunk)$/;"	f	class:RatedUnqueue
read_handler	elements/standard/shaper.cc	/^Shaper::read_handler(Element *e, void *)$/;"	f	class:Shaper
read_handler	elements/standard/simplequeue.cc	/^SimpleQueue::read_handler(Element *e, void *thunk)$/;"	f	class:SimpleQueue
read_handler	elements/standard/stridesched.cc	/^StrideSched::read_handler(Element *e, void *)$/;"	f	class:StrideSched
read_handler	elements/standard/timedsink.cc	/^TimedSink::read_handler(Element *e, void *vparam)$/;"	f	class:TimedSink
read_handler	elements/tcpudp/checktcpheader.cc	/^CheckTCPHeader::read_handler(Element *e, void *thunk)$/;"	f	class:CheckTCPHeader
read_handler	elements/tcpudp/checkudpheader.cc	/^CheckUDPHeader::read_handler(Element *e, void *thunk)$/;"	f	class:CheckUDPHeader
read_handler	elements/tcpudp/udpip6encap.cc	/^String UDPIP6Encap::read_handler(Element *e, void *thunk)$/;"	f	class:UDPIP6Encap
read_handler	elements/tcpudp/udpipencap.cc	/^String UDPIPEncap::read_handler(Element *e, void *thunk)$/;"	f	class:UDPIPEncap
read_handler	elements/test/comparepackets.cc	/^ComparePackets::read_handler(Element *e, void *thunk)$/;"	f	class:ComparePackets
read_handler	elements/test/notifierdebug.cc	/^NotifierDebug::read_handler(Element *e, void *)$/;"	f	class:NotifierDebug
read_handler	elements/test/schedordertest.cc	/^SchedOrderTest::read_handler(Element* e, void*)$/;"	f	class:SchedOrderTest
read_handler	elements/test/timertest.cc	/^TimerTest::read_handler(Element *e, void *user_data)$/;"	f	class:TimerTest
read_handler	elements/userlevel/fromdevice.cc	/^FromDevice::read_handler(Element* e, void *thunk)$/;"	f	class:FromDevice
read_handler	elements/userlevel/fromdump.cc	/^FromDump::read_handler(Element *e, void *thunk)$/;"	f	class:FromDump
read_handler	elements/userlevel/progressbar.cc	/^ProgressBar::read_handler(Element *e, void *thunk)$/;"	f	class:ProgressBar
read_handler	elements/userlevel/todump.cc	/^ToDump::read_handler(Element *e, void *thunk)$/;"	f	class:ToDump
read_handler	elements/wifi/fromhandler.cc	/^FromHandler::read_handler(Element *e, void *thunk)$/;"	f	class:FromHandler
read_handler	elements/wifi/settxrate.cc	/^SetTXRate::read_handler(Element *e, void *thunk)$/;"	f	class:SetTXRate
read_handler	lib/driver.cc	/^read_handler(Element *, void *thunk)$/;"	f	file:
read_handlers_handler	lib/element.cc	/^Element::read_handlers_handler(Element *e, void *)$/;"	f	class:Element
read_icounts_handler	lib/element.cc	/^read_icounts_handler(Element *f, void *)$/;"	f	file:
read_ino_info	linuxmodule/clickfs.cc	/^read_ino_info(Element *, void *)$/;"	f	file:
read_insufficient	elements/userlevel/controlsocket.cc	/^ControlSocket::connection::read_insufficient()$/;"	f	class:ControlSocket::connection
read_keyword_handler	lib/element.cc	/^Element::read_keyword_handler(Element *element, void *user_data)$/;"	f	class:Element
read_line	lib/fromfile.cc	/^FromFile::read_line(String &result, ErrorHandler *errh, bool temporary)$/;"	f	class:FromFile
read_logfile	elements/grid/gridlogger.cc	/^GridLogger::read_logfile(Element *e, void *)$/;"	f	class:GridLogger
read_m	include/click/args.hh	/^    Args &read_m(const char *keyword, P parser, T &variable) {$/;"	f	struct:Args
read_m	include/click/args.hh	/^    Args &read_m(const char *keyword, P parser, T1 &variable1, T2 &variable2) {$/;"	f	struct:Args
read_m	include/click/args.hh	/^    Args &read_m(const char *keyword, T &variable) {$/;"	f	struct:Args
read_m_with	include/click/args.hh	/^    Args &read_m_with(const char *keyword, P parser) {$/;"	f	struct:Args
read_m_with	include/click/args.hh	/^    Args &read_m_with(const char *keyword, P parser, T &variable) {$/;"	f	struct:Args
read_main_elementlist	doc/click-elem2man	/^sub read_main_elementlist () {$/;"	s
read_master_info	bsdmodule/sched.cc	/^read_master_info(Element *, void *)$/;"	f	file:
read_master_info	linuxmodule/sched.cc	/^read_master_info(Element *, void *)$/;"	f	file:
read_meminfo	bsdmodule/module.cc	/^read_meminfo(Element *, void *)$/;"	f	file:
read_messages	linuxmodule/module.cc	/^read_messages(Element *, void *user_data)$/;"	f	file:
read_more	elements/analysis/fromflandump.cc	/^FromFlanDump::FlanFile::read_more(off_t start_off)$/;"	f	class:FromFlanDump::FlanFile
read_mp	include/click/args.hh	/^    Args &read_mp(const char *keyword, P parser, T &variable) {$/;"	f	struct:Args
read_mp	include/click/args.hh	/^    Args &read_mp(const char *keyword, P parser, T1 &variable1, T2 &variable2) {$/;"	f	struct:Args
read_mp	include/click/args.hh	/^    Args &read_mp(const char *keyword, T &variable) {$/;"	f	struct:Args
read_mp_with	include/click/args.hh	/^    Args &read_mp_with(const char *keyword, P parser) {$/;"	f	struct:Args
read_mp_with	include/click/args.hh	/^    Args &read_mp_with(const char *keyword, P parser, T &variable) {$/;"	f	struct:Args
read_msgs	elements/etherswitch/spantree.cc	/^EtherSpanTree::read_msgs(Element* f, void *) {$/;"	f	class:EtherSpanTree
read_name_handler	lib/element.cc	/^read_name_handler(Element *e, void *)$/;"	f	file:
read_notifier_signal	lib/element.cc	/^read_notifier_signal(Element *e, void *thunk)$/;"	f	file:
read_ocounts_handler	lib/element.cc	/^read_ocounts_handler(Element *f, void *)$/;"	f	file:
read_once	elements/linuxmodule/touserdevice.hh	/^        uint8_t read_once;$/;"	m	struct:ToUserDevice::file_priv
read_or_set	include/click/args.hh	/^    Args &read_or_set(const char *keyword, P parser, T &variable, const V &value) {$/;"	f	struct:Args
read_or_set	include/click/args.hh	/^    Args &read_or_set(const char *keyword, T &variable, const V &value) {$/;"	f	struct:Args
read_or_set	include/click/args.hh	/^    Args &read_or_set(const char *keyword, int flags, P parser, T &variable, const V &value) {$/;"	f	struct:Args
read_or_set	include/click/args.hh	/^    Args &read_or_set(const char *keyword, int flags, T &variable, const V &value) {$/;"	f	struct:Args
read_or_set_p	include/click/args.hh	/^    Args &read_or_set_p(const char *keyword, P parser, T &variable, const V &value) {$/;"	f	struct:Args
read_or_set_p	include/click/args.hh	/^    Args &read_or_set_p(const char *keyword, T &variable, const V &value) {$/;"	f	struct:Args
read_p	include/click/args.hh	/^    Args &read_p(const char *keyword, P parser, T &variable) {$/;"	f	struct:Args
read_p	include/click/args.hh	/^    Args &read_p(const char *keyword, P parser, T1 &variable1, T2 &variable2) {$/;"	f	struct:Args
read_p	include/click/args.hh	/^    Args &read_p(const char *keyword, T &variable) {$/;"	f	struct:Args
read_p_with	include/click/args.hh	/^    Args &read_p_with(const char *keyword, P parser) {$/;"	f	struct:Args
read_p_with	include/click/args.hh	/^    Args &read_p_with(const char *keyword, P parser, T &variable) {$/;"	f	struct:Args
read_package_file	tools/click-install/common.cc	/^read_package_file(String filename, StringMap &packages, ErrorHandler *errh)$/;"	f
read_package_string	tools/click-install/common.cc	/^read_package_string(const String &text, StringMap &packages)$/;"	f	file:
read_packages	bsdmodule/module.cc	/^read_packages(Element *, void *)$/;"	f	file:
read_packet	elements/analysis/fromcapdump.cc	/^FromCapDump::read_packet(ErrorHandler *errh)$/;"	f	class:FromCapDump
read_packet	elements/analysis/fromdagdump.cc	/^FromDAGDump::read_packet(ErrorHandler *errh)$/;"	f	class:FromDAGDump
read_packet	elements/analysis/fromflandump.cc	/^FromFlanDump::read_packet(ErrorHandler *errh)$/;"	f	class:FromFlanDump
read_packet	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::read_packet(ErrorHandler *errh)$/;"	f	class:FromIPSummaryDump
read_packet	elements/analysis/fromnetflowsumdump.cc	/^FromNetFlowSummaryDump::read_packet(ErrorHandler *errh)$/;"	f	class:FromNetFlowSummaryDump
read_packet	elements/analysis/fromnlanrdump.cc	/^FromNLANRDump::read_packet(ErrorHandler *errh)$/;"	f	class:FromNLANRDump
read_packet	elements/analysis/fromtcpdump.cc	/^FromTcpdump::read_packet(ErrorHandler *errh)$/;"	f	class:FromTcpdump
read_packet	elements/userlevel/fromdump.cc	/^FromDump::read_packet(ErrorHandler *errh)$/;"	f	class:FromDump
read_param	apps/clicky/src/hvalues.hh	/^    bool read_param() const {$/;"	f	class:clicky::handler_value
read_param	elements/local/FlowNet/shaper/PFShapeFW.cc	/^String PFShapeFW::read_param(Element *e, void *)$/;"	f	class:PFShapeFW
read_param	elements/standard/delayshaper.cc	/^DelayShaper::read_param(Element *e, void *)$/;"	f	class:DelayShaper
read_param	elements/standard/linkunqueue.cc	/^LinkUnqueue::read_param(Element *e, void *thunk)$/;"	f	class:LinkUnqueue
read_param	elements/standard/pokehandlers.cc	/^PokeHandlers::read_param(Element *e, void *)$/;"	f	class:PokeHandlers
read_param	elements/standard/ratedsource.cc	/^RatedSource::read_param(Element *e, void *vparam)$/;"	f	class:RatedSource
read_param	elements/standard/switch.cc	/^Switch::read_param(Element *e, void *)$/;"	f	class:Switch
read_param	elements/standard/timedsource.cc	/^TimedSource::read_param(Element *e, void *vparam)$/;"	f	class:TimedSource
read_param	elements/standard/unqueue2.cc	/^Unqueue2::read_param(Element *e, void *)$/;"	f	class:Unqueue2
read_param	elements/test/upstreamnotifier.cc	/^read_param(Element *e, void *thunk)$/;"	f	file:
read_param	elements/userlevel/fromhost.cc	/^FromHost::read_param(Element *e, void *)$/;"	f	class:FromHost
read_param	elements/userlevel/todevice.cc	/^ToDevice::read_param(Element *e, void *thunk)$/;"	f	class:ToDevice
read_param	elements/wifi/packetstore.cc	/^read_param(Element *e, void *thunk)$/;"	f	file:
read_param	elements/wifi/station/beacontracker.cc	/^read_param(Element *e, void *thunk)$/;"	f	file:
read_param	elements/wifi/wepdecap.cc	/^read_param(Element *e, void *thunk)$/;"	f	file:
read_param	elements/wifi/wepencap.cc	/^read_param(Element *e, void *thunk)$/;"	f	file:
read_param	elements/wifi/wifidefrag.cc	/^WifiDefrag::read_param(Element *e, void *thunk)$/;"	f	class:WifiDefrag
read_param	elements/wifi/wififragment.cc	/^WifiFragment::read_param(Element *e, void *thunk)$/;"	f	class:WifiFragment
read_param	elements/wifi/wifiseq.cc	/^WifiSeq::read_param(Element *e, void *thunk)$/;"	f	class:WifiSeq
read_param	elements/wifi/wirelessinfo.cc	/^WirelessInfo::read_param(Element *e, void *thunk)$/;"	f	class:WirelessInfo
read_param	include/click/handler.hh	/^    inline bool read_param() const {$/;"	f	class:Handler
read_parameter	elements/aqm/pi.cc	/^PI::read_parameter(Element *f, void *vparam)$/;"	f	class:PI
read_pattern_file	tools/click-xform/click-xform.cc	/^read_pattern_file(const char *name, ErrorHandler *errh)$/;"	f
read_period	elements/grid/linkstat.cc	/^LinkStat::read_period(Element *xf, void *)$/;"	f	class:LinkStat
read_ports_handler	lib/element.cc	/^read_ports_handler(Element *e, void *)$/;"	f	file:
read_positional_handler	lib/element.cc	/^Element::read_positional_handler(Element *element, void *user_data)$/;"	f	class:Element
read_priority	bsdmodule/sched.cc	/^read_priority(Element *, void *)$/;"	f	file:
read_priority	linuxmodule/sched.cc	/^read_priority(Element *, void *)$/;"	f	file:
read_rate_handler	elements/standard/bandwidthmeter.cc	/^BandwidthMeter::read_rate_handler(Element *f, void *)$/;"	f	class:BandwidthMeter
read_router	tools/lib/toolutils.cc	/^read_router(const String &whatever, bool is_expr, ErrorHandler *errh)$/;"	f
read_router_file	tools/lib/toolutils.cc	/^read_router_file(const char *filename, ErrorHandler *errh)$/;"	f
read_router_file	tools/lib/toolutils.cc	/^read_router_file(const char *filename, bool empty_ok, ErrorHandler *errh)$/;"	f
read_router_string	tools/lib/toolutils.cc	/^read_router_string(String text, const String &landmark, bool empty_ok,$/;"	f
read_router_string	tools/lib/toolutils.cc	/^read_router_string(const String &text, const String &landmark, ErrorHandler *errh)$/;"	f
read_sched_param	bsdmodule/sched.cc	/^read_sched_param(Element *, void *thunk)$/;"	f	file:
read_sched_param	linuxmodule/sched.cc	/^read_sched_param(Element *, void *thunk)$/;"	f	file:
read_seqs	elements/grid/floodinglocquerier.cc	/^FloodingLocQuerier::read_seqs(Element *e, void *)$/;"	f	class:FloodingLocQuerier
read_services	elements/ip/ipnameinfo.cc	/^ServicesNameDB::read_services()$/;"	f	class:__anon323::ServicesNameDB
read_source	tools/click-devirtualize/specializer.cc	/^Specializer::read_source(ElementTypeInfo &etinfo, ErrorHandler *errh)$/;"	f	class:Specializer
read_source	tools/click-devirtualize/specializer.hh	/^  bool read_source;$/;"	m	struct:ElementTypeInfo
read_stats	elements/grid/linktracker.cc	/^LinkTracker::read_stats(Element *xf, void *)$/;"	f	class:LinkTracker
read_status	include/click/args.hh	/^    Args &read_status(bool &x) {$/;"	f	struct:Args
read_status	include/click/args.hh	/^    bool read_status() const {$/;"	f	struct:Args
read_status	include/click/args.hh	/^    const Args &read_status(bool &x) const {$/;"	f	struct:Args
read_table	elements/ethernet/ip6ndsolicitor.cc	/^IP6NDSolicitor::read_table(Element *e, void *)$/;"	f	class:IP6NDSolicitor
read_table	elements/grid/floodinglocquerier.cc	/^FloodingLocQuerier::read_table(Element *e, void *)$/;"	f	class:FloodingLocQuerier
read_table	elements/grid/simplelocquerier.cc	/^SimpleLocQuerier::read_table(Element *e, void *)$/;"	f	class:SimpleLocQuerier
read_task_home_thread	lib/element.cc	/^read_task_home_thread(Element *e, void *thunk)$/;"	f	file:
read_task_scheduled	lib/element.cc	/^read_task_scheduled(Element *e, void *thunk)$/;"	f	file:
read_task_tickets	lib/element.cc	/^read_task_tickets(Element *e, void *thunk)$/;"	f	file:
read_tau	elements/grid/linkstat.cc	/^LinkStat::read_tau(Element *xf, void *)$/;"	f	class:LinkStat
read_tau	elements/grid/linktracker.cc	/^LinkTracker::read_tau(Element *xf, void *)$/;"	f	class:LinkTracker
read_tcp_line	elements/analysis/fromtcpdump.cc	/^FromTcpdump::read_tcp_line(WritablePacket *&q, const char *s, const char *end, int *data_len)$/;"	f	class:FromTcpdump
read_threads	bsdmodule/sched.cc	/^read_threads(Element *, void *)$/;"	f	file:
read_threads	linuxmodule/sched.cc	/^read_threads(Element *, void *)$/;"	f	file:
read_tickets_handler	elements/standard/stridesched.cc	/^read_tickets_handler(Element *e, void *thunk)$/;"	f	file:
read_udp_line	elements/analysis/fromtcpdump.cc	/^FromTcpdump::read_udp_line(WritablePacket *&, const char *s, const char *end, int *data_len)$/;"	f	class:FromTcpdump
read_uint	lib/archive.cc	/^read_uint(const char *data, int max_len,$/;"	f	file:
read_uint16	elements/analysis/fromflandump.hh	/^FromFlanDump::FlanFile::read_uint16(off_t o) const$/;"	f	class:FromFlanDump::FlanFile
read_uint32	elements/analysis/fromflandump.hh	/^FromFlanDump::FlanFile::read_uint32(off_t o) const$/;"	f	class:FromFlanDump::FlanFile
read_unit	lib/confparse.cc	/^read_unit(const char *s, const char *end,$/;"	f	file:
read_user_data	include/click/handler.hh	/^    inline void *read_user_data() const {$/;"	f	class:Handler
read_value	drivers/e1000-4.x/src/idiag_e1000.h	/^	uint32_t read_value;$/;"	m	struct:idiag_e1000_diag_reg_test_param
read_visible	include/click/handler.hh	/^    inline bool read_visible() const {$/;"	f	class:Handler
read_window	elements/grid/linkstat.cc	/^LinkStat::read_window(Element *xf, void *)$/;"	f	class:LinkStat
read_with	include/click/args.hh	/^    Args &read_with(const char *keyword, P parser) {$/;"	f	struct:Args
read_with	include/click/args.hh	/^    Args &read_with(const char *keyword, P parser, T &variable) {$/;"	f	struct:Args
read_with	include/click/args.hh	/^    Args &read_with(const char *keyword, int flags, P parser) {$/;"	f	struct:Args
read_with	include/click/args.hh	/^    Args &read_with(const char *keyword, int flags, P parser, T &variable) {$/;"	f	struct:Args
readable	apps/clicky/src/hvalues.hh	/^    bool readable() const {$/;"	f	class:clicky::handler_value
readable	apps/clicky/src/whandler.hh	/^	bool readable() const {$/;"	f	struct:clicky::whandler::hinfo
readable	include/click/handler.hh	/^    inline bool readable() const {$/;"	f	class:Handler
readable	include/click/handlercall.hh	/^	readable = Handler::h_read,$/;"	e	enum:HandlerCall::Flags
readable_name	tools/click2xml/xml2click.cc	/^CxConfig::readable_name() const$/;"	f	class:CxConfig
readdir	lib/ino.cc	/^ClickIno::readdir(ino_t ino, uint32_t &f_pos, filldir_t filldir, void *thunk)$/;"	f	class:ClickIno
reader	elements/ethernet/etherpausesource.cc	/^EtherPauseSource::reader(Element *e, void *user_data)$/;"	f	class:EtherPauseSource
reader	elements/etherswitch/etherswitch.cc	/^EtherSwitch::reader(Element* f, void *thunk)$/;"	f	class:EtherSwitch
readers	elements/analysis/ipsumdumpinfo.cc	/^static Vector<const void *> *readers;$/;"	v	file:
readline	apps/csclient/csclient.cc	/^ControlSocketClient::readline(string &buf)$/;"	f	class:ControlSocketClient
ready	apps/clicky/src/dialogs.cc	/^    bool ready;$/;"	m	struct:clicky::open_socket_helper	file:
ready	elements/analysis/timesortedsched.hh	/^	int ready;$/;"	m	struct:TimeSortedSched::input_s
reaggregate_counts	elements/analysis/aggcounter.cc	/^AggregateCounter::reaggregate_counts()$/;"	f	class:AggregateCounter
reaggregate_node	elements/analysis/aggcounter.cc	/^AggregateCounter::reaggregate_node(Node *n)$/;"	f	class:AggregateCounter
real	elements/ip/iproutetable.hh	/^    inline bool real() const	{ return port > (int32_t) -0x80000000; }$/;"	f	struct:IPRoute
real	elements/ipsec/ipsecroutetable.hh	/^    inline bool real() const	{ return port > (int32_t) -0x80000000; }$/;"	f	struct:IPsecRoute
real_apply	apps/clicky/src/transform.cc	/^affine::real_apply(const point &p) const$/;"	f	class:affine
real_apply_to	apps/clicky/src/transform.cc	/^affine::real_apply_to(point &p) const$/;"	f	class:affine
real_data	include/click/string.hh	/^	char real_data[8];	\/\/ but it might be more or less$/;"	m	struct:String::memo_t
reap	elements/analysis/aggregateipaddrpair.cc	/^AggregateIPAddrPair::reap()$/;"	f	class:AggregateIPAddrPair
reap	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::reap()$/;"	f	class:AggregateIPFlows
reap	elements/ip/ipreassembler.cc	/^IPReassembler::reap(int now)$/;"	f	class:IPReassembler
reap_map	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::reap_map(Map &table, uint32_t timeout, uint32_t done_timeout)$/;"	f	class:AggregateIPFlows
reap_overfull	elements/ip/ipreassembler.cc	/^IPReassembler::reap_overfull(int now)$/;"	f	class:IPReassembler
reason	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint8_t reason;           \/* One of NXFER_*. *\/$/;"	m	struct:nx_flow_end
reason	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t reason;           \/* One of OFPRR_*. *\/$/;"	m	struct:ofp_flow_removed
reason	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t reason;          \/* One of OFPPR_*. *\/$/;"	m	struct:ofp_port_status
reason	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t reason;         \/* Reason packet is being sent (one of OFPR_*) *\/$/;"	m	struct:ofp_packet_in
reason	elements/local/OpenFlow/lib/switch-flow.hh	/^    uint8_t reason;             \/* Reason flow removed (one of OFPRR_*). *\/$/;"	m	struct:sw_flow
reason_string	elements/wifi/printwifi.cc	/^String reason_string(int reason) {$/;"	f
reason_t	elements/grid/gridgenericlogger.hh	/^  enum reason_t {$/;"	g	class:GridGenericLogger
reason_texts	elements/ethernet/checkarpheader.cc	/^const char * const CheckARPHeader::reason_texts[NREASONS] = {$/;"	m	class:CheckARPHeader	file:
reason_texts	elements/ethernet/checkarpheader.hh	/^  static const char * const reason_texts[NREASONS];$/;"	m	class:CheckARPHeader
reason_texts	elements/icmp/checkicmpheader.cc	/^const char *CheckICMPHeader::reason_texts[NREASONS] = {$/;"	m	class:CheckICMPHeader	file:
reason_texts	elements/icmp/checkicmpheader.hh	/^  static const char *reason_texts[NREASONS];$/;"	m	class:CheckICMPHeader
reason_texts	elements/ip/checkipheader.cc	/^const char * const CheckIPHeader::reason_texts[NREASONS] = {$/;"	m	class:CheckIPHeader	file:
reason_texts	elements/ip/checkipheader.hh	/^  static const char * const reason_texts[NREASONS];$/;"	m	class:CheckIPHeader
reason_texts	elements/tcpudp/checktcpheader.cc	/^const char *CheckTCPHeader::reason_texts[NREASONS] = {$/;"	m	class:CheckTCPHeader	file:
reason_texts	elements/tcpudp/checktcpheader.hh	/^  static const char *reason_texts[NREASONS];$/;"	m	class:CheckTCPHeader
reason_texts	elements/tcpudp/checkudpheader.cc	/^const char *CheckUDPHeader::reason_texts[NREASONS] = {$/;"	m	class:CheckUDPHeader	file:
reason_texts	elements/tcpudp/checkudpheader.hh	/^  static const char *reason_texts[NREASONS];$/;"	m	class:CheckUDPHeader
reason_texts	elements/test/comparepackets.cc	/^static const char * const reason_texts[] = {$/;"	v	file:
recalc_csum16	elements/local/OpenFlow/lib/csum.cc	/^recalc_csum16(uint16_t old_csum, uint16_t old_u16, uint16_t new_u16)$/;"	f
recalc_csum32	elements/local/OpenFlow/lib/csum.cc	/^recalc_csum32(uint16_t old_csum, uint32_t old_u32, uint32_t new_u32)$/;"	f
recalculate_positions	apps/clicky/src/whandler.cc	/^void whandler::recalculate_positions()$/;"	f	class:clicky::whandler
reccss	apps/clicky/src/dwidget.cc	/^bool delt::reccss(crouter *cr, int change)$/;"	f	class:clicky::delt
receive_errors	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t receive_errors;$/;"	m	struct:e1000_phy_stats
receive_errors	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t receive_errors;$/;"	m	struct:e1000_phy_stats
receive_errors	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t receive_errors;$/;"	m	struct:e1000_phy_stats
received	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::Flow::received(Vector<uint32_t> &v, const AggregatePacketCounter *apc) const$/;"	f	class:AggregatePacketCounter::Flow
received_at	elements/grid/linkstat.hh	/^    Timestamp received_at;$/;"	m	struct:LinkStat::outgoing_link_entry_t
received_frame_index	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^        int received_frame_index[STREAMINGSTUB_MAX_FRAMEINDEX_BUFFER];$/;"	m	struct:FlowMpeg2AdaptEncapStat
received_frame_types	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^	int received_frame_types[STREAMINGPROXY_MAX_FRAMETYPE_BUFFER];$/;"	m	struct:FlowMpeg2AdaptEncapStat
received_ratio	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.cc	/^double FrameReceivingBuffer::received_ratio()$/;"	f	class:FrameReceivingBuffer
reconfigure_keyword_handler	lib/element.cc	/^Element::reconfigure_keyword_handler(const String &arg, Element *e,$/;"	f	class:Element
reconfigure_positional_handler	lib/element.cc	/^Element::reconfigure_positional_handler(const String &arg, Element *e,$/;"	f	class:Element
reconnect	elements/local/OpenFlow/lib/rconn.cc	/^reconnect(struct rconn *rc)$/;"	f	file:
reconnectable	elements/local/OpenFlow/lib/vconn-provider.hh	/^    bool reconnectable;$/;"	m	struct:vconn
rect_search	apps/clicky/src/rectsearch.hh	/^class rect_search { public:$/;"	c
rect_search	apps/clicky/src/rectsearch.hh	/^rect_search<T, CHUNK>::rect_search()$/;"	f	class:rect_search
rectangle	apps/clicky/src/rectangle.hh	/^    rectangle() {$/;"	f	struct:rectangle
rectangle	apps/clicky/src/rectangle.hh	/^    rectangle(double x, double y, double width, double height)$/;"	f	struct:rectangle
rectangle	apps/clicky/src/rectangle.hh	/^struct rectangle {$/;"	s
rectmap	apps/clicky/src/rectsearch.hh	/^    typedef HashTable<int, std::list<T *> > rectmap;$/;"	t	class:rect_search
rects	apps/clicky/src/wdiagram.hh	/^    rect_search<dwidget> &rects() {$/;"	f	class:clicky::cdiagram
rects	apps/clicky/src/wdiagram.hh	/^    rect_search<dwidget> &rects() {$/;"	f	class:clicky::wdiagram
recv	elements/local/OpenFlow/lib/vconn-provider.hh	/^    int (*recv)(struct vconn *vconn, struct ofpbuf **msgp);$/;"	m	struct:vconn_class
recv_association_request	elements/wifi/ap/associationresponder.cc	/^AssociationResponder::recv_association_request(Packet *p)$/;"	f	class:AssociationResponder
recv_barrier_request	elements/local/OpenFlow/RConn.cc	/^static int recv_barrier_request(class RConn *rconnElement, struct rconn_remote *sender, uint32_t xid, const void *ofph)$/;"	f	file:
recv_echo_reply	elements/local/OpenFlow/RConn.cc	/^static int recv_echo_reply(class RConn *rconn UNUSED, struct rconn_remote *sender UNUSED, uint32_t xid UNUSED,$/;"	f	file:
recv_echo_request	elements/local/OpenFlow/RConn.cc	/^static int recv_echo_request(class RConn *rconnElement, struct rconn_remote *sender, uint32_t xid, const void *oh)$/;"	f	file:
recv_features_request	elements/local/OpenFlow/datapath.cc	/^int Datapath::recv_features_request(struct rconn_remote *rconn_sender, uint32_t xid, const void *msg UNUSED)$/;"	f	class:Datapath
recv_flow	elements/local/OpenFlow/datapath.cc	/^int Datapath::recv_flow(struct rconn_remote *rconn_sender, uint32_t xid, const void *msg)$/;"	f	class:Datapath
recv_get_config_request	elements/local/OpenFlow/datapath.cc	/^int Datapath::recv_get_config_request(struct rconn_remote *rconn_sender, uint32_t xid,	const void *msg UNUSED)$/;"	f	class:Datapath
recv_of_exp_queue_delete	elements/local/OpenFlow/lib/of_ext_msg.cc	/^static void recv_of_exp_queue_delete(class Datapath *dp UNUSED,$/;"	f	file:
recv_of_exp_queue_modify	elements/local/OpenFlow/lib/of_ext_msg.cc	/^recv_of_exp_queue_modify(class Datapath *dp UNUSED,$/;"	f	file:
recv_of_set_dp_desc	elements/local/OpenFlow/lib/of_ext_msg.cc	/^recv_of_set_dp_desc(class Datapath *dp,$/;"	f	file:
recv_packet_out	elements/local/OpenFlow/datapath.cc	/^int Datapath::recv_packet_out(struct rconn_remote *rconn_sender, uint32_t xid UNUSED, const void *msg)$/;"	f	class:Datapath
recv_port_mod	elements/local/OpenFlow/datapath.cc	/^int Datapath::recv_port_mod(struct rconn_remote *rconn_sender UNUSED, uint32_t xid UNUSED, const void *msg)$/;"	f	class:Datapath
recv_queue_get_config_request	elements/local/OpenFlow/datapath.cc	/^int Datapath::recv_queue_get_config_request(struct rconn_remote *rconn_sender, uint32_t xid, const void *oh)$/;"	f	class:Datapath
recv_set_config	elements/local/OpenFlow/datapath.cc	/^int Datapath::recv_set_config(struct rconn_remote *rconn_sender UNUSED, uint32_t xid UNUSED, const void *msg)$/;"	f	class:Datapath
recv_stats_request	elements/local/OpenFlow/datapath.cc	/^int Datapath::recv_stats_request(struct rconn_remote *rconn_sender, uint32_t xid, const void *oh)$/;"	f	class:Datapath
recv_vendor	elements/local/OpenFlow/datapath.cc	/^int Datapath::recv_vendor(struct rconn_remote *rconn_sender, uint32_t xid UNUSED, const void *oh)$/;"	f	class:Datapath
recv_with_creds	elements/local/OpenFlow/lib/vlog-socket.cc	/^recv_with_creds(const struct vlog_server *server,$/;"	f	file:
recycle	lib/packet.cc	/^WritablePacket::recycle(WritablePacket *p)$/;"	f	class:WritablePacket
recycle	linuxmodule/skbmgr.cc	/^RecycledSkbPool::recycle(struct sk_buff *skbs)$/;"	f	class:RecycledSkbPool
redeclaration_error	lib/lexer.cc	/^redeclaration_error(ErrorHandler *errh, const char *what, String name, const String &landmark, const String &old_landmark)$/;"	f	file:
redeclaration_error	tools/lib/elementt.cc	/^ElementT::redeclaration_error(ErrorHandler *errh, const char *what, String name, const String &landmark, const String &old_landmark)$/;"	f	class:ElementT
redefine	tools/lib/routert.hh	/^RouterT::redefine(const VariableEnvironment &ve)$/;"	f	class:RouterT
redirect_subtree	elements/standard/classification.cc	/^Program::redirect_subtree(int first, int last, int success, int failure)$/;"	f	class:Classification::Wordwise::Program
redisplay	apps/clicky/src/whandler.cc	/^void whandler::redisplay()$/;"	f	class:clicky::whandler
redraw	apps/clicky/src/wdiagram.hh	/^inline void wdiagram::redraw()$/;"	f	class:clicky::wdiagram
redraw	apps/clicky/src/wdiagram.hh	/^inline void wdiagram::redraw(rectangle r)$/;"	f	class:clicky::wdiagram
ref	tools/lib/landmarkt.hh	/^LandmarkSetT::ref()$/;"	f	class:LandmarkSetT
ref_ptr	apps/clicky/src/ref.hh	/^    ref_ptr()$/;"	f	class:ref_ptr
ref_ptr	apps/clicky/src/ref.hh	/^    ref_ptr(const ref_ptr<T> &r)$/;"	f	class:ref_ptr
ref_ptr	apps/clicky/src/ref.hh	/^    template <typename U> explicit ref_ptr(U *u)$/;"	f	class:ref_ptr
ref_ptr	apps/clicky/src/ref.hh	/^    template <typename U> ref_ptr(const ref_ptr<U> &r)$/;"	f	class:ref_ptr
ref_ptr	apps/clicky/src/ref.hh	/^template <typename T> class ref_ptr { public:$/;"	c
ref_queuelen	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^	uint16_t* ref_queuelen;$/;"	m	struct:BWShapeInfo
refcount	elements/ip/directiplookup.hh	/^	int32_t refcount;$/;"	m	struct:DirectIPLookup::VirtualPort
refcount	elements/linuxmodule/anydevice.hh	/^	atomic_t refcount;$/;"	m	struct:AnyDevice::fake_bridge
refcount	include/click/string.hh	/^	volatile uint32_t refcount;$/;"	m	struct:String::memo_t
reference	include/click/vector.hh	/^    typedef T& reference;$/;"	t	class:Vector
reference	include/click/vector.hh	/^    typedef T*& reference;$/;"	t	class:Vector
reference	include/click/vector.hh	/^    typedef void*& reference;$/;"	t	class:Vector
refill	include/click/tokenbucket.hh	/^    template <typename U> void refill(U time) {$/;"	f	class:TokenBucketX
refill	include/click/tokenbucket.hh	/^    void refill() {$/;"	f	class:TokenBucketX
refill	include/click/tokenbucket.hh	/^    void refill(epoch_type epoch) {$/;"	f	class:TokenBucketX
refill	include/click/tokenbucket.hh	/^void TokenCounterX<R>::refill(const rate_type &rate)$/;"	f	class:TokenCounterX
refill	include/click/tokenbucket.hh	/^void TokenCounterX<R>::refill(const rate_type &rate, U time)$/;"	f	class:TokenCounterX
refill	include/click/tokenbucket.hh	/^void TokenCounterX<R>::refill(const rate_type &rate, epoch_type epoch)$/;"	f	class:TokenCounterX
refresh	apps/clicky/src/hvalues.cc	/^void handler_value::refresh(crouter *cr, bool clear_outstanding)$/;"	f	class:clicky::handler_value
refresh	apps/clicky/src/whandler.cc	/^void whandler::refresh(const String &hname, bool always)$/;"	f	class:clicky::whandler
refresh_all	apps/clicky/src/whandler.cc	/^void whandler::refresh_all(bool always)$/;"	f	class:clicky::whandler
refresh_if_ticked	elements/local/OpenFlow/lib/timeval.cc	/^refresh_if_ticked(void)$/;"	f	file:
refreshable	apps/clicky/src/hvalues.hh	/^    bool refreshable() const {$/;"	f	class:clicky::handler_value
reg	drivers/e1000-4.x/src/idiag_e1000.h	/^	uint16_t reg;$/;"	m	struct:idiag_e1000_diag_reg_test_param
reg_num_mask	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int reg_num_mask;$/;"	m	struct:_kc_mii_if_info	file:
regdump_len	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t regdump_len;$/;"	m	struct:k_ethtool_drvinfo
regdump_len	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t regdump_len;$/;"	m	struct:k_ethtool_drvinfo
registerCDCallback	elements/local/FlowNet/common/BWShape.cc	/^void VcBWShape::registerCDCallback(VcCongestionDetection* CD)$/;"	f	class:VcBWShape
register_congestion_callback	elements/local/FlowNet/common/CongestionDetection.hh	/^inline int VcCongestionDetection::register_congestion_callback( void (*fn)(struct CongestionNotification*), void* pd )$/;"	f	class:VcCongestionDetection
register_nocongestion_callback	elements/local/FlowNet/common/CongestionDetection.hh	/^inline int VcCongestionDetection::register_nocongestion_callback( void (*fn)(struct CongestionNotification*), void* pd )$/;"	f	class:VcCongestionDetection
register_pffw	elements/local/FlowNet/common/FlowNetGod.cc	/^void FlowNetGod::register_pffw( PFFW* pffw )$/;"	f	class:FlowNetGod
register_router	lib/master.cc	/^Master::register_router(Router *router)$/;"	f	class:Master
register_select	lib/selectset.cc	/^SelectSet::register_select(int fd, bool add_read, bool add_write)$/;"	f	class:SelectSet
registered_readers	elements/bsdmodule/fromdevice.cc	/^static int registered_readers;$/;"	v	file:
registered_readers	elements/linuxmodule/fromdevice.cc	/^static int registered_readers;$/;"	v	file:
registered_tx_notifiers	elements/linuxmodule/todevice.cc	/^static int registered_tx_notifiers;$/;"	v	file:
regval	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t regval;$/;"	m	union:ich8_hws_flash_ctrl
regval	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t regval;$/;"	m	union:ich8_hws_flash_regacc
regval	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t regval;$/;"	m	union:ich8_hws_flash_status
rehash	include/click/hashcontainer.hh	/^void HashContainer<T, A>::rehash(size_type n)$/;"	f	class:HashContainer
rehash	include/click/hashtable.hh	/^    void rehash(size_type n) {$/;"	f	class:HashTable
rehash	include/click/hashtable.hh	/^    void rehash(size_type nb) {$/;"	f	class:HashTable
reinit_err	apps/csclient/csclient.hh	/^    reinit_err,         \/* tried to re-configure the client before close()ing it *\/$/;"	e	enum:ControlSocketClient::err_t
rej_pdu_0	include/clicknet/llc.h	/^			uint8_t rej_pdu_0;$/;"	m	struct:click_llc::__anon481::__anon485::frmrinfo
rej_pdu_1	include/clicknet/llc.h	/^			uint8_t rej_pdu_1;$/;"	m	struct:click_llc::__anon481::__anon485::frmrinfo
relation_combiner	tools/lib/runparse.hh	/^    static uint8_t relation_combiner[X_NUM][X_NUM];$/;"	m	class:RouterUnparserT
relation_negater	tools/lib/runparse.hh	/^    static int relation_negater[X_NUM];$/;"	m	class:RouterUnparserT
release	apps/clicky/src/ref.hh	/^    bool release() {$/;"	f	class:enable_ref_ptr
release	include/click/sync.hh	/^SimpleSpinlock::release()$/;"	f	class:SimpleSpinlock
release	include/click/sync.hh	/^Spinlock::release()$/;"	f	class:Spinlock
release	include/click/sync.hh	/^SpinlockIRQ::release(flags_t flags)$/;"	f	class:SpinlockIRQ
release_read	include/click/sync.hh	/^ReadWriteLock::release_read()$/;"	f	class:ReadWriteLock
release_write	include/click/sync.hh	/^ReadWriteLock::release_write()$/;"	f	class:ReadWriteLock
relevant_timeout	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::relevant_timeout(const FlowInfo *f, const Map &m) const$/;"	f	class:AggregateIPFlows
relevant_timeout	elements/ip/iprewriterbase.hh	/^    static uint32_t relevant_timeout(const uint32_t timeouts[2]) {$/;"	f	class:IPRewriterBase
reliable	elements/local/OpenFlow/lib/rconn.cc	/^    bool reliable;$/;"	m	struct:rconn	file:
remaining_text	lib/lexer.cc	/^Lexer::remaining_text() const$/;"	f	class:Lexer
remaining_text	tools/lib/lexert.cc	/^LexerT::remaining_text() const$/;"	f	class:LexerT
remedia	apps/clicky/src/dstyle.cc	/^dcss_set *dcss_set::remedia(const String &m)$/;"	f	class:clicky::dcss_set
remote_create	elements/local/OpenFlow/RConn.cc	/^static struct rconn_remote * remote_create(class RConn *rconnElement, struct rconn *rconn)$/;"	f	file:
remote_destroy	elements/local/OpenFlow/RConn.cc	/^static void remote_destroy(struct rconn_remote *r)$/;"	f	file:
remote_run	elements/local/OpenFlow/RConn.cc	/^static void remote_run(class RConn *rconnElement, struct rconn_remote *r)$/;"	f	file:
remote_rx	drivers/e1000-4.x/src/e1000_hw.h	/^    e1000_1000t_rx_status remote_rx;$/;"	m	struct:e1000_phy_info
remote_rx	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_1000t_rx_status remote_rx;$/;"	m	struct:e1000_phy_info
remote_rx	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_1000t_rx_status remote_rx;$/;"	m	struct:e1000_phy_info
remote_wait	elements/local/OpenFlow/RConn.cc	/^static void remote_wait(struct rconn_remote *r)$/;"	f	file:
remotes	elements/local/OpenFlow/RConn.hh	/^        struct list remotes;        \/* All connections (including controller). *\/$/;"	m	class:RConn	typeref:struct:RConn::list
remove	apps/clicky/src/dwidget.cc	/^void delt::remove(rect_search<dwidget> &rects, rectangle &bounds)$/;"	f	class:clicky::delt
remove	apps/clicky/src/rectsearch.hh	/^void rect_search<T, CHUNK>::remove(T *v)$/;"	f	class:rect_search
remove	drivers/e1000-4.x/src/kcompat.h	/^	void (*remove)(struct pci_dev *dev);$/;"	m	struct:_kc_pci_driver
remove	elements/analysis/ipsumdumpinfo.cc	/^void FieldReader::remove(const FieldReader *r)$/;"	f	class:IPSummaryDump::FieldReader
remove	elements/analysis/ipsumdumpinfo.cc	/^void FieldSynonym::remove(const FieldSynonym *s)$/;"	f	class:IPSummaryDump::FieldSynonym
remove	elements/analysis/ipsumdumpinfo.cc	/^void FieldWriter::remove(const FieldWriter *w)$/;"	f	class:IPSummaryDump::FieldWriter
remove	elements/bsdmodule/anydevice.cc	/^AnyDeviceMap::remove(AnyDevice *d)$/;"	f	class:AnyDeviceMap
remove	elements/ipsec/satable.cc	/^SATable::remove(unsigned int spi)$/;"	f	class:SATable
remove	elements/linuxmodule/anydevice.cc	/^AnyDeviceMap::remove(AnyDevice *d, bool locked)$/;"	f	class:AnyDeviceMap
remove	elements/standard/stridesched.hh	/^	void remove() {$/;"	f	struct:StrideSched::Client
remove	include/click/hashmap.hh	/^  bool remove(const K &key) {$/;"	f	class:HashMap
remove	include/click/tokenbucket.hh	/^    void remove(const rate_type &rate, token_type t) {$/;"	f	class:TokenCounterX
remove	include/click/tokenbucket.hh	/^    void remove(token_type t) {$/;"	f	class:TokenBucketX
removeByFlow	elements/local/FlowNet/libtable/TableLinear.hh	/^int VcTableLinear<T>::removeByFlow(T* f)$/;"	f	class:VcTableLinear
removeByFlowID	elements/local/FlowNet/libtable/TableLinear.hh	/^int VcTableLinear<T>::removeByFlowID(const FlowID* fid)$/;"	f	class:VcTableLinear
removeController	apps/ClickController/ClickController.java	/^    private static void removeController(ClickController cntr) {$/;"	m	class:ClickController	file:
remove_all_stats	elements/grid/linktracker.cc	/^LinkTracker::remove_all_stats(IPAddress dst)$/;"	f	class:LinkTracker
remove_at	tools/lib/elementmap.cc	/^ElementMap::remove_at(int i)$/;"	f	class:ElementMap
remove_chatter_channel	elements/userlevel/chattersocket.cc	/^remove_chatter_channel(ChatterSocketErrorHandler *&cserrh, ChatterSocket *cs)$/;"	f	file:
remove_chatter_socket	elements/userlevel/chattersocket.cc	/^ChatterSocketErrorHandler::remove_chatter_socket(ChatterSocket *cs)$/;"	f	class:ChatterSocketErrorHandler
remove_component_links	tools/click-combine/click-uncombine.cc	/^remove_component_links(RouterT *r, ErrorHandler *errh, const String &component)$/;"	f	file:
remove_compound_elements	tools/lib/routert.cc	/^RouterT::remove_compound_elements(ErrorHandler *errh, bool expand_vars)$/;"	f	class:RouterT
remove_connection	lib/router.cc	/^Router::remove_connection(Connection *cp)$/;"	f	class:Router
remove_conversion	lib/error.cc	/^ErrorHandler::remove_conversion(ErrorHandler::Conversion *conv)$/;"	f	class:ErrorHandler
remove_crap	tools/click-devirtualize/cxxclass.cc	/^remove_crap(const String &original_text)$/;"	f	file:
remove_dead_elements	tools/lib/routert.cc	/^RouterT::remove_dead_elements()$/;"	f	class:RouterT
remove_duplicate_connections	tools/lib/routert.cc	/^RouterT::remove_duplicate_connections()$/;"	f	class:RouterT
remove_element_type	include/click/lexer.hh	/^    int remove_element_type(int t)	{ return remove_element_type(t, 0); }$/;"	f	class:Lexer
remove_element_type	lib/lexer.cc	/^Lexer::remove_element_type(int removed, int *prev_hint)$/;"	f	class:Lexer
remove_error_receiver	elements/userlevel/handlerproxy.cc	/^HandlerProxy::remove_error_receiver(ErrorReceiverHook hook, void *thunk)$/;"	f	class:HandlerProxy
remove_file_on_exit	lib/userutils.cc	/^remove_file_on_exit(const String &file)$/;"	f
remove_files	lib/userutils.cc	/^static Vector<char *> *remove_files;$/;"	v	file:
remove_fraction	include/click/tokenbucket.hh	/^    void remove_fraction(token_type f) {$/;"	f	class:TokenBucketX
remove_fraction	include/click/tokenbucket.hh	/^    void remove_fraction(token_type f) {$/;"	f	class:TokenCounterX
remove_fraction_if	include/click/tokenbucket.hh	/^    bool remove_fraction_if(token_type f) {$/;"	f	class:TokenBucketX
remove_fraction_if	include/click/tokenbucket.hh	/^    bool remove_fraction_if(token_type f) {$/;"	f	class:TokenCounterX
remove_from_scheduled_list	include/click/task.hh	/^Task::remove_from_scheduled_list()$/;"	f	class:Task
remove_handler	elements/ethernet/arpresponder.cc	/^ARPResponder::remove_handler(const String &s, Element *e, void *, ErrorHandler *errh)$/;"	f	class:ARPResponder
remove_heap	include/click/heap.hh	/^inline void remove_heap(iterator_type begin, iterator_type end,$/;"	f
remove_if	include/click/tokenbucket.hh	/^    bool remove_if(const rate_type &rate, token_type t) {$/;"	f	class:TokenCounterX
remove_if	include/click/tokenbucket.hh	/^    bool remove_if(token_type t) {$/;"	f	class:TokenBucketX
remove_listener	elements/analysis/aggregatenotifier.cc	/^AggregateNotifier::remove_listener(AggregateListener *l)$/;"	f	class:AggregateNotifier
remove_listener	lib/notifier.cc	/^ActiveNotifier::remove_listener(Task* task)$/;"	f	class:ActiveNotifier
remove_listener	lib/notifier.cc	/^Notifier::remove_listener(Task* task)$/;"	f	class:Notifier
remove_node	ns/CUT_BinHeap.h	/^  Node* remove_node(Node* here) {$/;"	f	class:CUT_BinHeap
remove_nulls	tools/click-undead/click-undead.cc	/^remove_nulls(RouterT *r, ElementClassT *t, ErrorHandler *errh)$/;"	f	file:
remove_pending	lib/task.cc	/^Task::remove_pending()$/;"	f	class:Task
remove_pending_locked	lib/task.cc	/^Task::remove_pending_locked(RouterThread *thread)$/;"	f	class:Task
remove_pollfd	lib/selectset.cc	/^SelectSet::remove_pollfd(int pi, int event)$/;"	f	class:SelectSet
remove_redundant_schedulers	tools/click-undead/click-undead.cc	/^remove_redundant_schedulers(RouterT *r, ElementClassT *t,$/;"	f	file:
remove_redundant_tee_ports	tools/click-undead/click-undead.cc	/^remove_redundant_tee_ports(RouterT *r, ElementClassT *t, bool is_pull_tee,$/;"	f	file:
remove_requirement	tools/lib/routert.cc	/^RouterT::remove_requirement(const String &type, const String &value)$/;"	f	class:RouterT
remove_route	elements/ip/directiplookup.cc	/^DirectIPLookup::Table::remove_route(const IPRoute& route, IPRoute* old_route, ErrorHandler *errh)$/;"	f	class:DirectIPLookup::Table
remove_route	elements/ip/directiplookup.cc	/^DirectIPLookup::remove_route(const IPRoute& route, IPRoute* old_route, ErrorHandler *errh)$/;"	f	class:DirectIPLookup
remove_route	elements/ip/iproutetable.cc	/^IPRouteTable::remove_route(const IPRoute&, IPRoute*, ErrorHandler *errh)$/;"	f	class:IPRouteTable
remove_route	elements/ip/lineariplookup.cc	/^LinearIPLookup::remove_route(const IPRoute& route, IPRoute* old_route, ErrorHandler *errh)$/;"	f	class:LinearIPLookup
remove_route	elements/ip/lookupiproute.cc	/^StaticIPLookup::remove_route(const IPRoute& r, IPRoute* old_route, ErrorHandler *errh)$/;"	f	class:StaticIPLookup
remove_route	elements/ip/radixiplookup.cc	/^RadixIPLookup::remove_route(const IPRoute& route, IPRoute* old_route, ErrorHandler*)$/;"	f	class:RadixIPLookup
remove_route	elements/ip/rangeiplookup.cc	/^RangeIPLookup::remove_route(const IPRoute& route, IPRoute* old_route, ErrorHandler *errh)$/;"	f	class:RangeIPLookup
remove_route	elements/ip/sortediplookup.cc	/^SortedIPLookup::remove_route(const IPRoute& route, IPRoute* old_route, ErrorHandler *errh)$/;"	f	class:SortedIPLookup
remove_route	elements/ip6/ip6routetable.cc	/^IP6RouteTable::remove_route(IP6Address, IP6Address, ErrorHandler *errh)$/;"	f	class:IP6RouteTable
remove_route	elements/ip6/lookupip6route.cc	/^LookupIP6Route::remove_route(IP6Address addr, IP6Address mask,$/;"	f	class:LookupIP6Route
remove_route	elements/ipsec/ipsecroutetable.cc	/^IPsecRouteTable::remove_route(const IPsecRoute&, IPsecRoute*, ErrorHandler *errh)$/;"	f	class:IPsecRouteTable
remove_route	elements/ipsec/radixipseclookup.cc	/^RadixIPsecLookup::remove_route(const IPsecRoute& route, IPsecRoute* old_route, ErrorHandler*)$/;"	f	class:RadixIPsecLookup
remove_route_handler	elements/ip/iproutetable.cc	/^IPRouteTable::remove_route_handler(const String &conf, Element *e, void *, ErrorHandler *errh)$/;"	f	class:IPRouteTable
remove_route_handler	elements/ip6/ip6routetable.cc	/^IP6RouteTable::remove_route_handler(const String &conf, Element *e, void *, ErrorHandler *errh)$/;"	f	class:IP6RouteTable
remove_route_handler	elements/ipsec/ipsecroutetable.cc	/^IPsecRouteTable::remove_route_handler(const String &conf, Element *e, void *, ErrorHandler *errh)$/;"	f	class:IPsecRouteTable
remove_select	lib/element.cc	/^Element::remove_select(int fd, int mask)$/;"	f	class:Element
remove_select	lib/selectset.cc	/^SelectSet::remove_select(int fd, Element *element, int mask)$/;"	f	class:SelectSet
remove_signal_handler	lib/master.cc	/^Master::remove_signal_handler(int signo, Router *router, String handler)$/;"	f	class:Master
remove_static_pull_switches	tools/click-undead/click-undead.cc	/^remove_static_pull_switches(RouterT *r, ErrorHandler *errh)$/;"	f	file:
remove_static_switches	tools/click-undead/click-undead.cc	/^remove_static_switches(RouterT *r, ErrorHandler *errh)$/;"	f	file:
remove_toplevel_component	tools/click-combine/click-uncombine.cc	/^remove_toplevel_component(String component, RouterT *r, const char *filename,$/;"	f	file:
remove_tunnels	tools/lib/routert.cc	/^RouterT::remove_tunnels(ErrorHandler *errh)$/;"	f	class:RouterT
remove_unneeded_packages	tools/click-install/common.cc	/^remove_unneeded_packages(const StringMap &active_modules, const StringMap &packages, ErrorHandler *errh)$/;"	f
remove_unused_states	elements/standard/classification.cc	/^Program::remove_unused_states()$/;"	f	class:Classification::Wordwise::Program
remover	lib/userutils.cc	/^remover(char *fn)$/;"	f	file:
rendmsgpos	apps/clicky/src/cdriver.hh	/^	size_t rendmsgpos;$/;"	m	struct:clicky::csocket_cdriver::msg
rep_t	include/click/string.hh	/^    struct rep_t {$/;"	s	class:String
rep_t	include/click/timestamp.hh	/^    union rep_t {$/;"	u	class:Timestamp
rep_type	include/click/hashtable.hh	/^    typedef HashContainer<elt> rep_type;$/;"	t	class:HashTable
rep_type	include/click/hashtable.hh	/^    typedef HashTable<Pair<const K, V> > rep_type;$/;"	t	class:HashTable
repacketization	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^int FlowMpeg2AdaptEncap::repacketization( Packet* p_in, WritablePacket** p_sep1, int start, int end, int frametype1 )$/;"	f	class:FlowMpeg2AdaptEncap
repaint	apps/clicky/src/crouter.hh	/^    virtual void repaint(const rectangle &rect) {$/;"	f	class:clicky::crouter
repaint	apps/clicky/src/wmain.cc	/^void wmain::repaint(const rectangle &rect)$/;"	f	class:clicky::wmain
repaint_if_visible	apps/clicky/src/crouter.hh	/^    virtual void repaint_if_visible(const rectangle &rect, double dimen) {$/;"	f	class:clicky::crouter
repaint_if_visible	apps/clicky/src/wmain.cc	/^void wmain::repaint_if_visible(const rectangle &rect, double dimen)$/;"	f	class:clicky::wmain
replace	include/click/hashtable.hh	/^bool HashTable<K, V>::replace(const key_type &key, const mapped_type &value)$/;"	f	class:HashTable
replace	tools/click-xform/click-xform.cc	/^Matcher::replace(RouterT *replacement, const String &try_prefix,$/;"	f	class:Matcher
replace_blank_ports	tools/click-undead/click-undead.cc	/^replace_blank_ports(RouterT *r)$/;"	f	file:
replace_config	tools/click-xform/click-xform.cc	/^Matcher::replace_config(ElementT *e) const$/;"	f	class:Matcher
replace_expr	tools/click-devirtualize/cxxclass.cc	/^CxxFunction::replace_expr(const String &pattern, const String &replacement)$/;"	f	class:CxxFunction
replacements	tools/click-xform/click-xform.cc	/^static Vector<RouterT *> replacements;$/;"	v	file:
replay_start_counter	elements/ipsec/sadatatuple.hh	/^    uint32_t replay_start_counter;$/;"	m	class:SADataTuple
reply_anno	elements/ip/iprwmapping.hh	/^    uint8_t reply_anno() const {$/;"	f	class:IPRewriterFlow
reply_element	elements/ip/iprewriterbase.hh	/^    IPRewriterBase *reply_element(int input) const {$/;"	f	class:IPRewriterBase
reply_element	elements/ip/iprewriterbase.hh	/^    IPRewriterBase *reply_element;$/;"	m	struct:IPRewriterInput
reply_hop	elements/grid/grid.hh	/^    uint8_t reply_hop;$/;"	m	struct:grid_route_reply
reply_udp_map	elements/tcpudp/iprewriter.hh	/^    inline Map &reply_udp_map(int input) const {$/;"	f	class:IPRewriter
report_error	lib/args.cc	/^IntArg::report_error(const ArgContext &args, bool negative,$/;"	f	class:IntArg
report_file_not_found	tools/lib/elementmap.cc	/^ElementMap::report_file_not_found(String default_path, bool found_default,$/;"	f	class:ElementMap
report_stat	elements/local/OpenFlow/RConn.cc	/^void RConn::report_stat()$/;"	f	class:RConn
report_timer	elements/local/OpenFlow/RConn.hh	/^        Timer report_timer;$/;"	m	class:RConn
report_tx_early	drivers/e1000-4.x/src/e1000_hw.h	/^    boolean_t report_tx_early;$/;"	m	struct:e1000_hw
report_tx_early	drivers/e1000-5.x/src/e1000_hw.h	/^    boolean_t report_tx_early;$/;"	m	struct:e1000_hw
report_tx_early	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t report_tx_early;$/;"	m	struct:e1000_hw
reporting_mode	drivers/e1000-4.x/src/ans.h	/^    u32 reporting_mode;      \/* status reporting switch  *\/$/;"	m	struct:_iANSsupport_t
request_irq	drivers/e1000-7.x/src/kcompat.h	1097;"	d
request_irq	drivers/e1000-7.x/src/kcompat.h	1098;"	d
request_type	elements/userlevel/umlswitch.hh	/^enum request_type { REQ_NEW_CONTROL };$/;"	g
request_v3	elements/userlevel/umlswitch.hh	/^struct request_v3 {$/;"	s
require	bsdmodule/config.cc	/^BSDModuleLexerExtra::require(String type, String value, ErrorHandler *errh)$/;"	f	class:BSDModuleLexerExtra
require	lib/driver.cc	/^RequireLexerExtra::require(String type, String value, ErrorHandler *errh)$/;"	f	class:__anon503::RequireLexerExtra
require	lib/lexer.cc	/^LexerExtra::require(String, String, ErrorHandler *)$/;"	f	class:LexerExtra
require	linuxmodule/config.cc	/^LinuxModuleLexerExtra::require(String type, String value, ErrorHandler *errh)$/;"	f	class:LinuxModuleLexerExtra
require	tools/click-mkmindriver/click-mkmindriver.cc	/^Mindriver::require(const String& req, ErrorHandler* errh)$/;"	f	class:Mindriver
required_length	elements/standard/classification.hh	/^    unsigned required_length() const {$/;"	f	struct:Classification::Wordwise::Insn
required_length	tools/click-fastclassifier/click-fastclassifier.hh	/^    int required_length() const {$/;"	f	struct:Classifier_Insn
requirement	tools/lib/etraits.cc	/^Driver::requirement(int d)$/;"	f	class:Driver
requirement_contains	tools/lib/etraits.cc	/^requirement_contains(const String &req, const String &n)$/;"	f	file:
requirements	tools/lib/etraits.hh	/^    String requirements;$/;"	m	struct:ElementTraits
requirements	tools/lib/routert.hh	/^    const Vector<String> &requirements() const	{ return _requirements; }$/;"	f	class:RouterT
requires	tools/lib/eclasst.hh	/^ElementClassT::requires(const String &req) const$/;"	f	class:ElementClassT
requires	tools/lib/etraits.cc	/^ElementTraits::requires(const String &n) const$/;"	f	class:ElementTraits
reschedule	include/click/task.hh	/^Task::reschedule()$/;"	f	class:Task
reschedule_after	include/click/timer.hh	/^    inline void reschedule_after(const Timestamp &delta) {$/;"	f	class:Timer
reschedule_after_ms	include/click/timer.hh	/^Timer::reschedule_after_ms(uint32_t delta_msec)$/;"	f	class:Timer
reschedule_after_msec	include/click/timer.hh	/^    inline void reschedule_after_msec(uint32_t delta_msec) {$/;"	f	class:Timer
reschedule_after_s	include/click/timer.hh	/^Timer::reschedule_after_s(uint32_t delta_sec)$/;"	f	class:Timer
reschedule_after_sec	include/click/timer.hh	/^    inline void reschedule_after_sec(uint32_t delta_sec) {$/;"	f	class:Timer
reschedule_at	include/click/timer.hh	/^    inline void reschedule_at(const Timestamp &when) {$/;"	f	class:Timer
reserve	include/click/dequeue.cc	/^DEQueue<T>::reserve(int want)$/;"	f	class:DEQueue
reserve	include/click/straccum.hh	/^    inline char *reserve(int n) {$/;"	f	class:StringAccum
reserve	include/click/vector.hh	/^    bool reserve(size_type n)		{ return reserve_and_push_back(n, 0); }$/;"	f	class:Vector
reserve	include/click/vector.hh	/^    bool reserve(size_type n)	{ return Base::reserve(n); }$/;"	f	class:Vector
reserve	lib/vectorv.cc	/^Vector<void*>::reserve(size_type want)$/;"	f	class:Vector
reserve_and_push_back	include/click/vector.cc	/^Vector<T>::reserve_and_push_back(size_type want, const T *push_x)$/;"	f	class:Vector
reserved	drivers/e1000-4.x/src/e1000_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:e1000_fflt_entry
reserved	drivers/e1000-4.x/src/e1000_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:e1000_ffmt_entry
reserved	drivers/e1000-4.x/src/e1000_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:e1000_ffvt_entry
reserved	drivers/e1000-4.x/src/e1000_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:e1000_ipv4_at_entry
reserved	drivers/e1000-5.x/src/e1000_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:e1000_fflt_entry
reserved	drivers/e1000-5.x/src/e1000_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:e1000_ffmt_entry
reserved	drivers/e1000-5.x/src/e1000_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:e1000_ffvt_entry
reserved	drivers/e1000-5.x/src/e1000_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:e1000_ipv4_at_entry
reserved	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t reserved;$/;"	m	struct:ethtool_test
reserved	drivers/e1000-7.x/src/e1000_hw.h	/^        uint16_t reserved       :5;$/;"	m	struct:ich8_hws_flash_ctrl::ich8_hsflctl
reserved	drivers/e1000-7.x/src/e1000_hw.h	/^        uint64_t reserved;$/;"	m	struct:e1000_rx_desc_extended::__anon93
reserved	drivers/e1000-7.x/src/e1000_hw.h	/^        uint64_t reserved;$/;"	m	struct:e1000_rx_desc_packet_split::__anon100
reserved	drivers/e1000-7.x/src/e1000_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:e1000_fflt_entry
reserved	drivers/e1000-7.x/src/e1000_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:e1000_ffmt_entry
reserved	drivers/e1000-7.x/src/e1000_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:e1000_ffvt_entry
reserved	drivers/e1000-7.x/src/e1000_hw.h	/^    volatile uint32_t reserved;$/;"	m	struct:e1000_ipv4_at_entry
reserved	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t reserved;$/;"	m	struct:ethtool_test
reserved	elements/local/FlowNet/papmo/PaPMo.hh	/^	uint8_t reserved;$/;"	m	struct:composed_trace
reserved	elements/local/OpenFlow/lib/netlink-protocol.hh	/^    uint16_t reserved;$/;"	m	struct:genlmsghdr
reserved	include/click/sync.hh	/^	unsigned char reserved[32 - sizeof(Spinlock)];$/;"	m	struct:ReadWriteLock::lock_t
reserved	include/clicknet/ether.h	/^    uint32_t reserved;$/;"	m	struct:click_nd_sol
reserved	include/clicknet/ether.h	/^    uint8_t reserved[3];$/;"	m	struct:click_nd_adv
reserved	include/clicknet/ether.h	/^    uint8_t reserved[3];$/;"	m	struct:click_nd_adv2
reserved0	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t reserved0;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved1	drivers/e1000-5.x/src/kcompat.h	/^	char	 reserved1[32];$/;"	m	struct:k_ethtool_drvinfo
reserved1	drivers/e1000-7.x/src/e1000_hw.h	/^        uint16_t reserved1      :2;$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts
reserved1	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t reserved1;$/;"	m	struct:e1000_host_mng_command_header
reserved1	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t reserved1;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved1	drivers/e1000-7.x/src/kcompat.h	/^	char	 reserved1[32];$/;"	m	struct:k_ethtool_drvinfo
reserved2	drivers/e1000-5.x/src/kcompat.h	/^	char	 reserved2[16];$/;"	m	struct:k_ethtool_drvinfo
reserved2	drivers/e1000-7.x/src/e1000_hw.h	/^        uint16_t reserved2      :6;$/;"	m	struct:ich8_hws_flash_status::ich8_hsfsts
reserved2	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t reserved2;$/;"	m	struct:e1000_host_mng_command_header
reserved2	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t reserved2;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved2	drivers/e1000-7.x/src/kcompat.h	/^	char	 reserved2[16];$/;"	m	struct:k_ethtool_drvinfo
reserved3	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t reserved3;$/;"	m	struct:e1000_host_mng_dhcp_cookie
reserved_12_15	elements/wifi/athdesc.h	/^	u_int32_t	reserved_12_15:4;$/;"	m	struct:ar5212_desc
reserved_25_31	elements/wifi/athdesc.h	/^	u_int32_t	reserved_25_31:7;$/;"	m	struct:ar5212_desc
reserved_25_31_x	elements/wifi/athdesc.h	/^	u_int32_t	reserved_25_31_x:7;$/;"	m	struct:ar5212_desc
reserved_31	elements/wifi/athdesc.h	/^	u_int32_t	reserved_31:1;$/;"	m	struct:ar5212_desc
reserved_in	drivers/e1000-4.x/src/idiag_pro.h	/^	uint32_t reserved_in[8];$/;"	m	struct:idiag_pro_data
reserved_out	drivers/e1000-4.x/src/idiag_pro.h	/^	uint32_t reserved_out[8];$/;"	m	struct:idiag_pro_data
reset	elements/bsdmodule/fastudpsrc.cc	/^FastUDPSource::reset()$/;"	f	class:FastUDPSource
reset	elements/etherswitch/bridgemessage.cc	/^BridgeMessage::reset(uint64_t bridge_id) {$/;"	f	class:BridgeMessage
reset	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows::reset()$/;"	f	class:FastTCPFlows
reset	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows::reset()$/;"	f	class:FastUDPFlows
reset	elements/linuxmodule/fastudpsrc.cc	/^FastUDPSource::reset()$/;"	f	class:FastUDPSource
reset	elements/linuxmodule/fastudpsrcip6.cc	/^FastUDPSourceIP6::reset()$/;"	f	class:FastUDPSourceIP6
reset	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::reset()$/;"	f	class:ToUserDevice
reset	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.cc	/^void FrameReceivingBuffer::reset(uint16_t* , int *)$/;"	f	class:FrameReceivingBuffer
reset	elements/standard/averagecounter.cc	/^AverageCounter::reset()$/;"	f	class:AverageCounter
reset	elements/standard/counter.cc	/^Counter::reset()$/;"	f	class:Counter
reset	elements/standard/simplequeue.cc	/^SimpleQueue::reset()$/;"	f	class:SimpleQueue
reset	elements/wifi/station/beaconscanner.cc	/^BeaconScanner::reset()$/;"	f	class:BeaconScanner
reset	elements/wifi/station/beacontracker.cc	/^BeaconTracker::reset()$/;"	f	class:BeaconTracker
reset	elements/wifi/wifiseq.cc	/^WifiSeq::reset()$/;"	f	class:WifiSeq
reset	elements/wifi/wirelessinfo.cc	/^WirelessInfo::reset()$/;"	f	class:WirelessInfo
reset	include/click/args.hh	/^    Args &reset() {$/;"	f	struct:Args
reset	include/click/gaprate.hh	/^GapRate::reset()$/;"	f	class:GapRate
reset	lib/handlercall.cc	/^HandlerCall::reset(HandlerCall*& call, Element* e, const String& hname, const String& value, int flags, ErrorHandler* errh)$/;"	f	class:HandlerCall
reset	lib/handlercall.cc	/^HandlerCall::reset(HandlerCall*& call, const String& hdesc, int flags, const Element* context, ErrorHandler* errh)$/;"	f	class:HandlerCall
reset	tools/lib/lexert.cc	/^LexerT::reset(const String &data, const Vector<ArchiveElement> &archive, const String &filename)$/;"	f	class:LexerT
reset_counts	elements/bsdmodule/todevice.cc	/^ToDevice::reset_counts()$/;"	f	class:ToDevice
reset_counts	elements/linuxmodule/fromdevice.hh	/^    void reset_counts() {$/;"	f	class:FromDevice
reset_counts	elements/linuxmodule/polldevice.cc	/^PollDevice::reset_counts()$/;"	f	class:PollDevice
reset_counts	elements/linuxmodule/todevice.cc	/^ToDevice::reset_counts()$/;"	f	class:ToDevice
reset_cycles	include/click/element.hh	/^    inline void reset_cycles() {$/;"	f	class:Element
reset_from	lib/args.cc	/^Args::reset_from(int i)$/;"	f	class:Args
reset_handler	elements/analysis/storeudptimeseqrecord.cc	/^int StoreUDPTimeSeqRecord::reset_handler(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:StoreUDPTimeSeqRecord
reset_handler	elements/analysis/timestampaccum.cc	/^TimestampAccum::reset_handler(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:TimestampAccum
reset_handler	elements/linuxmodule/cyclecountaccum.cc	/^CycleCountAccum::reset_handler(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:CycleCountAccum
reset_handler	elements/linuxmodule/perfcountaccum.cc	/^PerfCountAccum::reset_handler(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:PerfCountAccum
reset_read	include/click/handlercall.hh	/^HandlerCall::reset_read(HandlerCall*& hcall, Element* e, const String& hname, ErrorHandler* errh)$/;"	f	class:HandlerCall
reset_read	include/click/handlercall.hh	/^HandlerCall::reset_read(HandlerCall*& hcall, const String& hdesc, const Element* context, ErrorHandler* errh)$/;"	f	class:HandlerCall
reset_stats	elements/grid/ackretrysender2.cc	/^ACKRetrySender2::reset_stats(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:ACKRetrySender2
reset_task	drivers/e1000-7.x/src/e1000.h	/^	struct work_struct reset_task;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
reset_write	include/click/handlercall.hh	/^HandlerCall::reset_write(HandlerCall*& hcall, Element* e, const String& hname, const String& value, ErrorHandler* errh)$/;"	f	class:HandlerCall
reset_write	include/click/handlercall.hh	/^HandlerCall::reset_write(HandlerCall*& hcall, const String& hdesc, const Element* context, ErrorHandler* errh)$/;"	f	class:HandlerCall
reset_write_handler	elements/ip/ipratemon.cc	/^IPRateMonitor::reset_write_handler$/;"	f	class:IPRateMonitor
resize	include/click/bitvector.hh	/^Bitvector::resize(int n)$/;"	f	class:Bitvector
resize	include/click/dequeue.cc	/^DEQueue<T>::resize(int nn, const T &e)$/;"	f	class:DEQueue
resize	include/click/hashmap.cc	/^HashMap<K, V>::resize(size_t want_nbuckets)$/;"	f	class:HashMap
resize	include/click/hashmap.cc	/^HashMap<K, void *>::resize(size_t want_nbuckets)$/;"	f	class:HashMap
resize	include/click/straccum.hh	/^    inline int resize(int len) {$/;"	f	class:StringAccum
resize	include/click/vector.cc	/^Vector<T>::resize(size_type n, const T &x)$/;"	f	class:Vector
resize	include/click/vector.hh	/^    void resize(size_type n, T* x = 0) { Base::resize(n, (void*)x); }$/;"	f	class:Vector
resize	lib/vectorv.cc	/^Vector<void*>::resize(size_type nn, void* e)$/;"	f	class:Vector
resize0	include/click/hashmap.cc	/^HashMap<K, V>::resize0(size_t new_nbuckets)$/;"	f	class:HashMap
resize0	include/click/hashmap.cc	/^HashMap<K, void *>::resize0(size_t new_nbuckets)$/;"	f	class:HashMap
resize_to_max	lib/bitvector.cc	/^Bitvector::resize_to_max(int new_max, bool valid_n)$/;"	f	class:Bitvector
resolve	lib/lexer.cc	/^Lexer::Compound::resolve(Lexer *lexer, int etype, int ninputs, int noutputs, Vector<String> &args, ErrorHandler *errh, const String &landmark)$/;"	f	class:Lexer::Compound
resolve	tools/lib/eclasst.cc	/^ElementClassT::resolve(int, int, Vector<String> &, ErrorHandler *, const LandmarkT &)$/;"	f	class:ElementClassT
resolve	tools/lib/eclasst.cc	/^SynonymElementClassT::resolve(int ninputs, int noutputs, Vector<String> &args, ErrorHandler *errh, const LandmarkT &landmark)$/;"	f	class:SynonymElementClassT
resolve	tools/lib/elementt.cc	/^ElementT::resolve(const VariableEnvironment &env,$/;"	f	class:ElementT
resolve	tools/lib/routert.cc	/^RouterT::resolve(int ninputs, int noutputs, Vector<String> &args, ErrorHandler *errh, const LandmarkT &landmark)$/;"	f	class:RouterT
resolve_agnostics	tools/lib/processingt.cc	/^ProcessingT::resolve_agnostics()$/;"	f	class:ProcessingT
resolve_requirement	tools/click-mkmindriver/click-mkmindriver.cc	/^Mindriver::resolve_requirement(const String& requirement, const ElementMap& emap, ErrorHandler* errh, bool complain)$/;"	f	class:Mindriver
resolved_config	apps/clicky/src/scopechain.cc	/^ScopeChain::resolved_config(const String &config) const$/;"	f	class:ScopeChain
resolved_router	tools/lib/elementt.hh	/^ElementT::resolved_router(const VariableEnvironment &env, ErrorHandler *errh) const$/;"	f	class:ElementT
resolved_type	apps/clicky/src/scopechain.cc	/^ScopeChain::resolved_type(ElementT *e) const$/;"	f	class:ScopeChain
resolved_type	tools/lib/elementt.cc	/^ElementT::resolved_type(const VariableEnvironment &env, ErrorHandler *errh) const$/;"	f	class:ElementT
resolved_type_error	tools/lib/elementt.hh	/^    enum { resolved_type_error = 1, resolved_type_fragile = 2 };$/;"	e	enum:ElementT::__anon528
resolved_type_fragile	tools/lib/elementt.hh	/^    enum { resolved_type_error = 1, resolved_type_fragile = 2 };$/;"	e	enum:ElementT::__anon528
restart_queue	drivers/e1000-7.x/src/e1000.h	/^	unsigned int restart_queue;$/;"	m	struct:e1000_adapter
result	drivers/e1000-4.x/src/idiag_e1000.h	/^	enum idiag_e1000_diag_loopback_result result;$/;"	m	struct:idiag_e1000_diag_loopback_test_param	typeref:enum:idiag_e1000_diag_loopback_test_param::idiag_e1000_diag_loopback_result
result_type	include/click/algorithm.hh	/^    typedef bool result_type;$/;"	t	struct:less
result_type	include/click/algorithm.hh	/^    typedef void result_type;$/;"	t	struct:do_nothing
results_empty	include/click/args.hh	/^    bool results_empty() const {$/;"	f	struct:Args
resume	drivers/e1000-4.x/src/kcompat.h	/^	int (*resume)(struct pci_dev *dev);$/;"	m	struct:_kc_pci_driver
ret_type	tools/click-devirtualize/cxxclass.hh	/^  const String &ret_type() const	{ return _ret_type; }$/;"	f	class:CxxFunction
retries	include/clicknet/wifi.h	/^  uint8_t retries;$/;"	m	struct:click_wifi_extra
retrieve_buffer	elements/local/OpenFlow/datapath.cc	/^struct ofpbuf *DatapathPacketBuffer::retrieve_buffer(uint32_t id)$/;"	f	class:DatapathPacketBuffer
retry_hook	elements/userlevel/chattersocket.cc	/^ChatterSocket::retry_hook(Timer *t, void *thunk)$/;"	f	class:ChatterSocket
retry_hook	elements/userlevel/controlsocket.cc	/^ControlSocket::retry_hook(Timer *t, void *thunk)$/;"	f	class:ControlSocket
return_value	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^	int return_value;$/;"	m	struct:tspacket
retval	linuxmodule/modulepriv.hh	/^    int retval;$/;"	m	struct:click_handler_direct_info
rev	include/click/ip6flowid.hh	/^IP6FlowID::rev() const$/;"	f	class:IP6FlowID
rev	include/click/ipflowid.hh	/^inline IPFlowID IPFlowID::rev() const$/;"	f	class:IPFlowID
rev_weight_read_handler	elements/standard/compblock.cc	/^CompareBlock::rev_weight_read_handler(Element *e, void *)$/;"	f	class:CompareBlock
rev_weight_write_handler	elements/standard/compblock.cc	/^CompareBlock::rev_weight_write_handler(const String &conf, Element *e,$/;"	f	class:CompareBlock
reverse	elements/analysis/aggregateipaddrpair.hh	/^	bool reverse;$/;"	m	struct:AggregateIPAddrPair::FlowInfo
reverse	elements/analysis/aggregateipflows.hh	/^	bool reverse() const	{ return _reverse; }$/;"	f	struct:AggregateIPFlows::FlowInfo
reverse	include/click/ip6flowid.hh	/^IP6FlowID::reverse() const$/;"	f	class:IP6FlowID
reverse	include/click/ipflowid.hh	/^    IPFlowID reverse() const {$/;"	f	class:IPFlowID
reverse_declaration	tools/lib/elementt.hh	/^ElementT::reverse_declaration() const$/;"	f	class:ElementT
reverse_lookup	elements/ethernet/arptable.cc	/^ARPTable::reverse_lookup(const EtherAddress &eth)$/;"	f	class:ARPTable
reverse_mapping	elements/grid/gridproxy.cc	/^GridProxy::reverse_mapping(Packet *p_in) {$/;"	f	class:GridProxy
reverse_path	elements/wifi/path.hh	/^inline Path reverse_path (const Path &p)$/;"	f
reverse_route	elements/grid/dsrroutetable.cc	/^DSRRouteTable::reverse_route(DSRRoute r)$/;"	f	class:DSRRouteTable
reverse_transformation	tools/click-devirtualize/click-devirtualize.cc	/^reverse_transformation(RouterT *r, ErrorHandler *)$/;"	f	file:
reverse_transformation	tools/click-fastclassifier/click-fastclassifier.cc	/^reverse_transformation(RouterT *r, ErrorHandler *)$/;"	f	file:
revision_id	drivers/e1000-4.x/src/e1000_hw.h	/^    uint8_t revision_id;$/;"	m	struct:e1000_hw
revision_id	drivers/e1000-5.x/src/e1000_hw.h	/^    uint8_t revision_id;$/;"	m	struct:e1000_hw
revision_id	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t revision_id;$/;"	m	struct:e1000_hw
revquery	lib/nameinfo.cc	/^DynamicNameDB::revquery(const void *value, size_t vsize)$/;"	f	class:DynamicNameDB
revquery	lib/nameinfo.cc	/^NameDB::revquery(const void *, size_t)$/;"	f	class:NameDB
revquery	lib/nameinfo.cc	/^NameInfo::revquery(uint32_t type, const Element *e, const void *value, size_t vsize)$/;"	f	class:NameInfo
revquery	lib/nameinfo.cc	/^StaticNameDB::revquery(const void *value, size_t vsize)$/;"	f	class:StaticNameDB
revquery_int	include/click/nameinfo.hh	/^NameInfo::revquery_int(uint32_t type, const Element *e, int32_t value)$/;"	f	class:NameInfo
rewrite_flowid	elements/ip/iprewriterbase.cc	/^IPMapper::rewrite_flowid(IPRewriterInput *, const IPFlowID &, IPFlowID &,$/;"	f	class:IPMapper
rewrite_flowid	elements/ip/iprewriterbase.hh	/^IPRewriterInput::rewrite_flowid(const IPFlowID &flowid,$/;"	f	class:IPRewriterInput
rewrite_flowid	elements/ip/iprwpattern.cc	/^IPRewriterPattern::rewrite_flowid(const IPFlowID &flowid,$/;"	f	class:IPRewriterPattern
rewrite_flowid	elements/ip/rripmapper.cc	/^RoundRobinIPMapper::rewrite_flowid(IPRewriterInput *input,$/;"	f	class:RoundRobinIPMapper
rewrite_flowid	elements/ip/siphmapper.cc	/^SourceIPHashMapper::rewrite_flowid(IPRewriterInput *input,$/;"	f	class:SourceIPHashMapper
rewrite_packet	elements/ethernet/etherpausesource.cc	/^EtherPauseSource::rewrite_packet(const void *data, uint32_t offset, uint32_t size, ErrorHandler *errh)$/;"	f	class:EtherPauseSource
rewriter_pattern	conf/click-mkclgw.pl	/^sub rewriter_pattern { return undef; }$/;"	s
rewriter_pattern	conf/click-mkclgw.pl	/^sub rewriter_pattern {$/;"	s
rewriter_patterns	conf/click-mkclgw.pl	/^sub rewriter_patterns {$/;"	s
rewriter_plumbing	conf/click-mkclgw.pl	/^sub rewriter_plumbing { return undef; }$/;"	s
rewriter_plumbing	conf/click-mkclgw.pl	/^sub rewriter_plumbing {$/;"	s
rewriter_plumbing_generic	conf/click-mkclgw.pl	/^sub rewriter_plumbing_generic {$/;"	s
rewritten_flowid	elements/ip/iprwmapping.hh	/^IPRewriterEntry::rewritten_flowid() const$/;"	f	class:IPRewriterEntry
rfc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t rfc;$/;"	m	struct:e1000_hw_stats
rfc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t rfc;$/;"	m	struct:e1000_hw_stats
rfc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t rfc;$/;"	m	struct:e1000_hw_stats
rfc_2083_crc_update	elements/wifi/rc4.cc	/^rfc_2083_crc_update(u_int32_t crc, u_int8_t *buf, int len)$/;"	f
rfind	include/click/string.hh	/^inline const char *rfind(const char *begin, const char *end, char c) {$/;"	f
rgnpep_hh	elements/grid/regionpep.hh	2;"	d
rjc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t rjc;$/;"	m	struct:e1000_hw_stats
rjc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t rjc;$/;"	m	struct:e1000_hw_stats
rjc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t rjc;$/;"	m	struct:e1000_hw_stats
rl	elements/local/OpenFlow/lib/dpif.cc	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(5, 60);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	elements/local/OpenFlow/lib/netlink.cc	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(60, 600);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	elements/local/OpenFlow/lib/vconn-ssl.cc	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(10, 25);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	elements/local/OpenFlow/lib/vconn-stream.cc	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(10, 25);$/;"	v	typeref:struct:vlog_rate_limit	file:
rl	elements/local/OpenFlow/lib/vconn.cc	/^static struct vlog_rate_limit rl = VLOG_RATE_LIMIT_INIT(600, 600);$/;"	v	typeref:struct:vlog_rate_limit	file:
rlec	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t rlec;$/;"	m	struct:e1000_hw_stats
rlec	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t rlec;$/;"	m	struct:e1000_hw_stats
rlec	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t rlec;$/;"	m	struct:e1000_hw_stats
rlen	elements/analysis/fromdagdump.hh	/^	uint16_t rlen;$/;"	m	struct:FromDAGDump::DAGCell
rlinepos	apps/clicky/src/cdriver.hh	/^	size_t rlinepos;$/;"	m	struct:clicky::csocket_cdriver::msg
rnbc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t rnbc;$/;"	m	struct:e1000_hw_stats
rnbc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t rnbc;$/;"	m	struct:e1000_hw_stats
rnbc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t rnbc;$/;"	m	struct:e1000_hw_stats
rnc	elements/local/OpenFlow/RConn.hh	/^        struct		rnc_param rnc;$/;"	m	class:RConn	typeref:struct:RConn::rnc_param
rnc_param	elements/local/OpenFlow/RConn.hh	/^struct rnc_param {$/;"	s
roc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t roc;$/;"	m	struct:e1000_hw_stats
roc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t roc;$/;"	m	struct:e1000_hw_stats
roc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t roc;$/;"	m	struct:e1000_hw_stats
root	apps/clicky/src/dwidget.hh	/^    bool root() const {$/;"	f	class:clicky::delt
root	ns/CUT_BinHeap.h	/^  Node *root;$/;"	m	class:CUT_BinHeap
root_element	include/click/router.hh	/^Router::root_element() const$/;"	f	class:Router
root_id	elements/local/OpenFlow/lib/stp.cc	/^    uint64_t root_id;              \/* 8.5.1.1: Bridge believed to be root. *\/$/;"	m	struct:stp_config_bpdu	file:
root_path_cost	elements/local/OpenFlow/lib/stp.cc	/^    uint32_t root_path_cost;       \/* 8.5.1.2: Cost of path to root. *\/$/;"	m	struct:stp_config_bpdu	file:
root_path_cost	elements/local/OpenFlow/lib/stp.cc	/^    unsigned int root_path_cost;    \/* 8.5.3.2: Cost of path to root. *\/$/;"	m	struct:stp	file:
root_port	elements/local/OpenFlow/lib/stp.cc	/^    struct stp_port *root_port;     \/* 8.5.3.3: Lowest cost port to root. *\/$/;"	m	struct:stp	typeref:struct:stp::stp_port	file:
rot	elements/local/OpenFlow/lib/hash.cc	39;"	d	file:
rotate	apps/clicky/src/rectangle.hh	/^    void rotate(double angle) {$/;"	f	struct:point
rotate	apps/clicky/src/transform.cc	/^affine::rotate(double r)$/;"	f	class:affine
rotated	apps/clicky/src/rectangle.hh	/^    point rotated(double angle) const {$/;"	f	struct:point
rotated	apps/clicky/src/transform.hh	/^affine::rotated(double r) const$/;"	f	class:affine
round_timeval	userlevel/click.cc	/^round_timeval(struct timeval *tv, int usec_divider)$/;"	f	file:
rounds	elements/ipsec/aes.hh	/^    int rounds;$/;"	m	struct:aes_key_st
route_action	elements/grid/grid.hh	/^    uint32_t route_action;$/;"	m	struct:grid_route_reply
route_cb	elements/grid/gridprobehandler.cc	/^GridProbeHandler::route_cb(int id, unsigned int dest_ip, Action a, unsigned int data, unsigned int data2)$/;"	f	class:GridProbeHandler
route_index_of	elements/grid/dsrroutetable.cc	/^DSRRouteTable::route_index_of(DSRRoute r, IPAddress ip)$/;"	f	class:DSRRouteTable
route_metric	elements/grid/dsrroutetable.cc	/^DSRRouteTable::route_metric(DSRRoute r)$/;"	f	class:DSRRouteTable
route_to_string	elements/wifi/linktable.cc	/^LinkTable::route_to_string(Path p) {$/;"	f	class:LinkTable
router	apps/clicky/src/crouter.hh	/^    RouterT *router() const {$/;"	f	class:clicky::crouter
router	apps/clicky/src/dwidget.hh	/^    RouterT *router() const {$/;"	f	class:clicky::delt
router	include/click/element.hh	/^Element::router() const$/;"	f	class:Element
router	include/click/master.hh	/^	Router *router;$/;"	m	struct:Master::SignalInfo
router	include/click/task.hh	/^    inline Router *router() const {$/;"	f	class:Task
router	include/click/timer.hh	/^    inline Router *router() const {$/;"	f	class:Timer
router	tools/click2xml/xml2click.cc	/^CxConfig::router(ErrorHandler *errh)$/;"	f	class:CxConfig
router	tools/lib/elementt.hh	/^    RouterT *router() const		{ return (element ? element->router() : 0); }$/;"	f	struct:PortT
router	tools/lib/elementt.hh	/^    RouterT *router() const		{ return _end[end_to].router(); }$/;"	f	class:ConnectionT
router	tools/lib/elementt.hh	/^    RouterT *router() const		{ return _owner; }$/;"	f	struct:ElementT
router	tools/lib/lexert.hh	/^    RouterT *router() const		{ return _router; }$/;"	f	class:LexerT
router	tools/lib/processingt.hh	/^    RouterT *router() const {$/;"	f	class:ProcessingT
router	userlevel/click.cc	/^static Router *router;$/;"	v	file:
router_create	apps/clicky/src/wdiagram.cc	/^void wdiagram::router_create(bool incremental, bool always)$/;"	f	class:clicky::wdiagram
router_names	tools/click-combine/click-combine.cc	/^static Vector<String> router_names;$/;"	v	file:
router_read_handler	lib/router.cc	/^Router::router_read_handler(Element *e, void *thunk)$/;"	f	class:Router
routers	tools/click-combine/click-combine.cc	/^static Vector<RouterT *> routers;$/;"	v	file:
routing_mode	drivers/e1000-4.x/src/ans.h	/^    u32 routing_mode;        \/* sending rx packets to ans proto. *\/$/;"	m	struct:_iANSsupport_t
routput	elements/ip/iprewriterbase.hh	/^    int routput;$/;"	m	struct:IPRewriterInput
row	elements/analysis/aggregatefirst.hh	/^AggregateFirst::row(uint32_t agg)$/;"	f	class:AggregateFirst
row	elements/analysis/aggregatelast.hh	/^AggregateLast::row(uint32_t agg)$/;"	f	class:AggregateLast
rq	elements/local/OpenFlow/datapath.cc	/^	struct ofp_aggregate_stats_request rq;$/;"	m	struct:aggregate_stats_state	typeref:struct:aggregate_stats_state::ofp_aggregate_stats_request	file:
rq	elements/local/OpenFlow/datapath.cc	/^	struct ofp_flow_stats_request rq;$/;"	m	struct:flow_stats_state	typeref:struct:flow_stats_state::ofp_flow_stats_request	file:
rq	elements/local/OpenFlow/datapath.cc	/^	struct ofp_stats_request *rq;$/;"	m	struct:stats_dump_cb	typeref:struct:stats_dump_cb::ofp_stats_request	file:
rq_forward_delay	elements/local/OpenFlow/lib/stp.cc	/^    int rq_forward_delay;           \/* User-requested forward delay, in ms. *\/$/;"	m	struct:stp	file:
rq_hello_time	elements/local/OpenFlow/lib/stp.cc	/^    int rq_hello_time;              \/* User-requested hello time, in ms. *\/$/;"	m	struct:stp	file:
rq_max_age	elements/local/OpenFlow/lib/stp.cc	/^    int rq_max_age;                 \/* User-requested max age, in ms. *\/$/;"	m	struct:stp	file:
rreq_expire_hook	elements/grid/dsrroutetable.cc	/^DSRRouteTable::rreq_expire_hook()$/;"	f	class:DSRRouteTable
rreq_issue_hook	elements/grid/dsrroutetable.cc	/^DSRRouteTable::rreq_issue_hook()$/;"	f	class:DSRRouteTable
rs_read_handler	elements/grid/radiosim.cc	/^RadioSim::rs_read_handler(Element *f, void *)$/;"	f	class:RadioSim
rs_write_handler	elements/grid/radiosim.cc	/^RadioSim::rs_write_handler(const String &arg, Element *element,$/;"	f	class:RadioSim
rss	drivers/e1000-7.x/src/e1000_hw.h	/^                uint32_t rss;          \/* RSS Hash *\/$/;"	m	union:e1000_rx_desc_extended::__anon94::__anon95::__anon96
rss	drivers/e1000-7.x/src/e1000_hw.h	/^                uint32_t rss;          \/* RSS Hash *\/$/;"	m	union:e1000_rx_desc_packet_split::__anon100::__anon101::__anon102
rssi	include/clicknet/wifi.h	/^  p80211item_uint32_t rssi;$/;"	m	struct:__anon498
rssi	include/clicknet/wifi.h	/^  uint8_t rssi;$/;"	m	struct:click_wifi_extra
rstat	elements/local/OpenFlow/RConn.hh	/^	struct rconn_stat rstat;$/;"	m	class:RConn	typeref:struct:RConn::rconn_stat
rt_check_header	elements/wifi/radiotapdecap.cc	/^static int rt_check_header(struct ieee80211_radiotap_header *th, int len)$/;"	f	file:
rt_el_offset	elements/wifi/radiotapdecap.cc	/^static u_int8_t *rt_el_offset(struct ieee80211_radiotap_header *th, u_int32_t element) {$/;"	f	file:
rt_el_present	elements/wifi/radiotapdecap.cc	/^static int rt_el_present(struct ieee80211_radiotap_header *th, u_int32_t element)$/;"	f	file:
rts_cts_enable	elements/wifi/athdesc.h	/^	u_int32_t	rts_cts_enable:1;$/;"	m	struct:ar5212_desc
rts_cts_rate	elements/wifi/athdesc.h	/^	u_int32_t	rts_cts_rate:5;$/;"	m	struct:ar5212_desc
rts_duration	elements/wifi/athdesc.h	/^	u_int32_t	rts_duration:15;$/;"	m	struct:ar5212_desc
rts_fail_count	elements/wifi/athdesc.h	/^	u_int32_t	rts_fail_count:4;$/;"	m	struct:ar5212_desc
ru_interval	elements/local/FlowNet/common/FlowNetGod.hh	/^	int ru_interval;$/;"	m	struct:paramset_sourceproxytable
ruc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t ruc;$/;"	m	struct:e1000_hw_stats
ruc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t ruc;$/;"	m	struct:e1000_hw_stats
ruc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t ruc;$/;"	m	struct:e1000_hw_stats
run	apps/clicky/src/crouter.cc	/^void crouter::run(ErrorHandler *errh)$/;"	f	class:clicky::crouter
run	elements/standard/classification.cc	/^DominatorOptimizer::run(int state)$/;"	f	class:Classification::Wordwise::DominatorOptimizer
run	tools/click-pretty/click-pretty.cc	/^ElementsOutput::run(ElementT *e, FILE *f)$/;"	f	class:ElementsOutput
run	tools/click-pretty/click-pretty.cc	/^ElementsOutput::run(FILE *f)$/;"	f	class:ElementsOutput
run	tools/click-pretty/click-pretty.cc	/^ElementsOutput::run(const String &templ, ElementT *e)$/;"	f	class:ElementsOutput
run_ACTIVE	elements/local/OpenFlow/lib/rconn.cc	/^static void run_ACTIVE(struct rconn *rc)$/;"	f	file:
run_BACKOFF	elements/local/OpenFlow/lib/rconn.cc	/^run_BACKOFF(struct rconn *rc)$/;"	f	file:
run_CONNECTING	elements/local/OpenFlow/lib/rconn.cc	/^run_CONNECTING(struct rconn *rc)$/;"	f	file:
run_IDLE	elements/local/OpenFlow/lib/rconn.cc	/^run_IDLE(struct rconn *rc)$/;"	f	file:
run_VOID	elements/local/OpenFlow/lib/rconn.cc	/^run_VOID(struct rconn *rc UNUSED)$/;"	f	file:
run_at_exit	elements/local/OpenFlow/lib/fatal-signal.cc	/^    bool run_at_exit;$/;"	m	struct:hook	file:
run_command	elements/ip/iproutetable.cc	/^IPRouteTable::run_command(int command, const String &str, Vector<IPRoute>* old_routes, ErrorHandler *errh)$/;"	f	class:IPRouteTable
run_command	elements/ipsec/ipsecroutetable.cc	/^IPsecRouteTable::run_command(int command, const String &str, Vector<IPsecRoute> * old_routes, ErrorHandler *errh)$/;"	f	class:IPsecRouteTable
run_dialog	apps/clicky/src/gathererror.cc	/^void GatherErrorHandler::run_dialog(GtkWindow *w, int beginpos)$/;"	f	class:GatherErrorHandler
run_flow_through_tables	elements/local/OpenFlow/datapath.cc	/^int Datapath::run_flow_through_tables(struct ofpbuf *buffer, struct click_port *p)$/;"	f	class:Datapath
run_one_timer	lib/timerset.cc	/^TimerSet::run_one_timer(Timer *t)$/;"	f	class:TimerSet
run_os	lib/routerthread.cc	/^RouterThread::run_os()$/;"	f	class:RouterThread
run_router	lib/master.cc	/^Master::run_router(Router *router, bool foreground)$/;"	f	class:Master
run_selects	lib/selectset.cc	/^SelectSet::run_selects(RouterThread *thread)$/;"	f	class:SelectSet
run_selects_kqueue	lib/selectset.cc	/^SelectSet::run_selects_kqueue(RouterThread *thread)$/;"	f	class:SelectSet
run_selects_poll	lib/selectset.cc	/^SelectSet::run_selects_poll(RouterThread *thread)$/;"	f	class:SelectSet
run_selects_select	lib/selectset.cc	/^SelectSet::run_selects_select(RouterThread *thread)$/;"	f	class:SelectSet
run_signals	include/click/master.hh	/^RouterThread::run_signals()$/;"	f	class:RouterThread
run_task	elements/analysis/aggregatelast.cc	/^AggregateLast::run_task(Task *)$/;"	f	class:AggregateLast
run_task	elements/analysis/fromcapdump.cc	/^FromCapDump::run_task(Task *)$/;"	f	class:FromCapDump
run_task	elements/analysis/fromdagdump.cc	/^FromDAGDump::run_task(Task *)$/;"	f	class:FromDAGDump
run_task	elements/analysis/fromflandump.cc	/^FromFlanDump::run_task(Task *)$/;"	f	class:FromFlanDump
run_task	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::run_task(Task *)$/;"	f	class:FromIPSummaryDump
run_task	elements/analysis/fromnetflowsumdump.cc	/^FromNetFlowSummaryDump::run_task(Task *)$/;"	f	class:FromNetFlowSummaryDump
run_task	elements/analysis/fromnlanrdump.cc	/^FromNLANRDump::run_task(Task *)$/;"	f	class:FromNLANRDump
run_task	elements/analysis/fromtcpdump.cc	/^FromTcpdump::run_task(Task *)$/;"	f	class:FromTcpdump
run_task	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::run_task(Task *)$/;"	f	class:ToIPFlowDumps
run_task	elements/analysis/toipsumdump.cc	/^ToIPSummaryDump::run_task(Task *)$/;"	f	class:ToIPSummaryDump
run_task	elements/bsdmodule/fromdevice.cc	/^FromDevice::run_task(Task *)$/;"	f	class:FromDevice
run_task	elements/bsdmodule/fromhost.cc	/^FromHost::run_task(Task *)$/;"	f	class:FromHost
run_task	elements/bsdmodule/todevice.cc	/^ToDevice::run_task(Task *)$/;"	f	class:ToDevice
run_task	elements/grid/ackretrysender.cc	/^ACKRetrySender::run_task(Task *)$/;"	f	class:ACKRetrySender
run_task	elements/grid/ackretrysender2.cc	/^ACKRetrySender2::run_task(Task *)$/;"	f	class:ACKRetrySender2
run_task	elements/grid/lookupgeogridroute.cc	/^LookupGeographicGridRoute::run_task(Task *)$/;"	f	class:LookupGeographicGridRoute
run_task	elements/grid/lookuplocalgridroute.cc	/^LookupLocalGridRoute::run_task(Task *)$/;"	f	class:LookupLocalGridRoute
run_task	elements/grid/radiosim.cc	/^RadioSim::run_task(Task *)$/;"	f	class:RadioSim
run_task	elements/ip/poundradixiplookup.cc	/^PoundRadixIPLookup::run_task(Task *) {$/;"	f	class:PoundRadixIPLookup
run_task	elements/linuxmodule/fromdevice.cc	/^FromDevice::run_task(Task *)$/;"	f	class:FromDevice
run_task	elements/linuxmodule/fromhost.cc	/^FromHost::run_task(Task *)$/;"	f	class:FromHost
run_task	elements/linuxmodule/polldevice.cc	/^PollDevice::run_task(Task *)$/;"	f	class:PollDevice
run_task	elements/linuxmodule/schedulelinux.cc	/^ScheduleLinux::run_task(Task *)$/;"	f	class:ScheduleLinux
run_task	elements/linuxmodule/todevice.cc	/^ToDevice::run_task(Task *)$/;"	f	class:ToDevice
run_task	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::run_task(Task *)$/;"	f	class:ToUserDevice
run_task	elements/ns/tosimdevice.cc	/^ToSimDevice::run_task(Task *)$/;"	f	class:ToSimDevice
run_task	elements/radio/bim.cc	/^BIM::run_task(Task *)$/;"	f	class:BIM
run_task	elements/standard/bwratedunqueue.cc	/^BandwidthRatedUnqueue::run_task(Task *)$/;"	f	class:BandwidthRatedUnqueue
run_task	elements/standard/delayunqueue.cc	/^DelayUnqueue::run_task(Task *)$/;"	f	class:DelayUnqueue
run_task	elements/standard/discard.cc	/^Discard::run_task(Task *)$/;"	f	class:Discard
run_task	elements/standard/discardnofree.cc	/^DiscardNoFree::run_task(Task *)$/;"	f	class:DiscardNoFree
run_task	elements/standard/infinitesource.cc	/^InfiniteSource::run_task(Task *)$/;"	f	class:InfiniteSource
run_task	elements/standard/linkunqueue.cc	/^LinkUnqueue::run_task(Task *)$/;"	f	class:LinkUnqueue
run_task	elements/standard/randomsource.cc	/^RandomSource::run_task(Task *)$/;"	f	class:RandomSource
run_task	elements/standard/ratedsource.cc	/^RatedSource::run_task(Task *)$/;"	f	class:RatedSource
run_task	elements/standard/ratedunqueue.cc	/^RatedUnqueue::run_task(Task *)$/;"	f	class:RatedUnqueue
run_task	elements/standard/timedunqueue.cc	/^TimedUnqueue::run_task(Task *)$/;"	f	class:TimedUnqueue
run_task	elements/standard/unqueue.cc	/^Unqueue::run_task(Task *)$/;"	f	class:Unqueue
run_task	elements/standard/unqueue2.cc	/^Unqueue2::run_task(Task *)$/;"	f	class:Unqueue2
run_task	elements/test/handlertask.cc	/^HandlerTask::run_task(Task *)$/;"	f	class:HandlerTask
run_task	elements/test/nulltask.cc	/^NullTask::run_task(Task *)$/;"	f	class:NullTask
run_task	elements/test/queuethreadtest.cc	/^QueueThreadTest2::run_task(Task *)$/;"	f	class:QueueThreadTest2
run_task	elements/test/schedordertest.cc	/^SchedOrderTest::run_task(Task *)$/;"	f	class:SchedOrderTest
run_task	elements/userlevel/fromdevice.cc	/^FromDevice::run_task(Task *)$/;"	f	class:FromDevice
run_task	elements/userlevel/fromdump.cc	/^FromDump::run_task(Task *)$/;"	f	class:FromDump
run_task	elements/userlevel/fromhost.cc	/^FromHost::run_task(Task *)$/;"	f	class:FromHost
run_task	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::run_task(Task *)$/;"	f	class:IPFlowRawSockets
run_task	elements/userlevel/kerneltun.cc	/^KernelTun::run_task(Task *)$/;"	f	class:KernelTun
run_task	elements/userlevel/rawsocket.cc	/^RawSocket::run_task(Task *)$/;"	f	class:RawSocket
run_task	elements/userlevel/socket.cc	/^Socket::run_task(Task *)$/;"	f	class:Socket
run_task	elements/userlevel/todevice.cc	/^ToDevice::run_task(Task *)$/;"	f	class:ToDevice
run_task	elements/userlevel/todump.cc	/^ToDump::run_task(Task *)$/;"	f	class:ToDump
run_task	elements/wifi/fromhandler.cc	/^FromHandler::run_task(Task *)$/;"	f	class:FromHandler
run_task	elements/wifi/packetstore.cc	/^PacketStore::run_task(Task *)$/;"	f	class:PacketStore
run_task	lib/element.cc	/^Element::run_task()$/;"	f	class:Element
run_task	lib/element.cc	/^Element::run_task(Task *)$/;"	f	class:Element
run_tasks	lib/routerthread.cc	/^RouterThread::run_tasks(int ntasks)$/;"	f	class:RouterThread
run_template	tools/click-pretty/click-pretty.cc	/^ElementsOutput::run_template(String templ_str, ElementT *e, int port, bool is_output)$/;"	f	class:ElementsOutput
run_template	tools/click-pretty/click-pretty.cc	/^run_template(const char *templ, PrettyRouter &pr)$/;"	f	file:
run_test	test/testie	/^sub run_test ($$$) {$/;"	s
run_test_body	test/testie	/^sub run_test_body ($$) {$/;"	s
run_test_read_file	test/testie	/^sub run_test_read_file ($$) {$/;"	s
run_timer	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::run_timer(Timer *)$/;"	f	class:FromIPSummaryDump
run_timer	elements/analysis/fromnetflowsumdump.cc	/^FromNetFlowSummaryDump::run_timer(Timer *)$/;"	f	class:FromNetFlowSummaryDump
run_timer	elements/aqm/adaptivered.cc	/^AdaptiveRED::run_timer(Timer *)$/;"	f	class:AdaptiveRED
run_timer	elements/aqm/pi.cc	/^PI::run_timer(Timer *)$/;"	f	class:PI
run_timer	elements/ethernet/arpfaker.cc	/^ARPFaker::run_timer(Timer *)$/;"	f	class:ARPFaker
run_timer	elements/ethernet/arptable.cc	/^ARPTable::run_timer(Timer *timer)$/;"	f	class:ARPTable
run_timer	elements/ethernet/etherpausesource.cc	/^EtherPauseSource::run_timer(Timer *)$/;"	f	class:EtherPauseSource
run_timer	elements/grid/ackretrysender.cc	/^ACKRetrySender::run_timer(Timer *)$/;"	f	class:ACKRetrySender
run_timer	elements/grid/ackretrysender2.cc	/^ACKRetrySender2::run_timer(Timer *)$/;"	f	class:ACKRetrySender2
run_timer	elements/grid/hello.cc	/^SendGridHello::run_timer(Timer *)$/;"	f	class:SendGridHello
run_timer	elements/grid/lrhello.cc	/^SendGridLRHello::run_timer(Timer *)$/;"	f	class:SendGridLRHello
run_timer	elements/grid/pep.cc	/^PEP::run_timer(Timer *)$/;"	f	class:PEP
run_timer	elements/grid/regionpep.cc	/^EstimateRouterRegion::run_timer(Timer *)$/;"	f	class:EstimateRouterRegion
run_timer	elements/icmp/icmpsendpings.cc	/^ICMPPingSource::run_timer(Timer *)$/;"	f	class:ICMPPingSource
run_timer	elements/ip/ripsend.cc	/^RIPSend::run_timer(Timer *)$/;"	f	class:RIPSend
run_timer	elements/linuxmodule/threadmonitor.cc	/^ThreadMonitor::run_timer(Timer *)$/;"	f	class:ThreadMonitor
run_timer	elements/local/FlowNet/common/FlowNetGod.cc	/^void FlowNetGod::run_timer(Timer* t)$/;"	f	class:FlowNetGod
run_timer	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.cc	/^void PFMpeg2AdaptFW::run_timer(Timer* t) $/;"	f	class:PFMpeg2AdaptFW
run_timer	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^void PFSchedFW::run_timer(Timer* t) $/;"	f	class:PFSchedFW
run_timer	elements/local/FlowNet/shaper/PFShapeFW.cc	/^void PFShapeFW::run_timer(Timer* t) $/;"	f	class:PFShapeFW
run_timer	elements/local/OpenFlow/RConn.cc	/^void RConn::run_timer(Timer* t)$/;"	f	class:RConn
run_timer	elements/local/OpenFlow/datapath.cc	/^void Datapath::run_timer(Timer* t)$/;"	f	class:Datapath
run_timer	elements/standard/delayshaper.cc	/^DelayShaper::run_timer(Timer *)$/;"	f	class:DelayShaper
run_timer	elements/standard/quitwatcher.cc	/^QuitWatcher::run_timer(Timer *)$/;"	f	class:QuitWatcher
run_timer	elements/standard/script.cc	/^Script::run_timer(Timer *)$/;"	f	class:Script
run_timer	elements/standard/timedsink.cc	/^TimedSink::run_timer(Timer *)$/;"	f	class:TimedSink
run_timer	elements/standard/timedsource.cc	/^TimedSource::run_timer(Timer *)$/;"	f	class:TimedSource
run_timer	elements/test/queueyanktest.cc	/^QueueYankTest::run_timer(Timer *)$/;"	f	class:QueueYankTest
run_timer	elements/test/timertest.cc	/^TimerTest::run_timer(Timer *t)$/;"	f	class:TimerTest
run_timer	elements/threads/balancedthreadsched.cc	/^BalancedThreadSched::run_timer(Timer *)$/;"	f	class:BalancedThreadSched
run_timer	elements/userlevel/fromdump.cc	/^FromDump::run_timer(Timer *)$/;"	f	class:FromDump
run_timer	elements/userlevel/progressbar.cc	/^ProgressBar::run_timer(Timer *)$/;"	f	class:ProgressBar
run_timer	elements/userlevel/rawsocket.cc	/^RawSocket::run_timer(Timer *)$/;"	f	class:RawSocket
run_timer	elements/wifi/ap/beaconsource.cc	/^BeaconSource::run_timer(Timer *)$/;"	f	class:BeaconSource
run_timer	elements/wifi/linktable.cc	/^LinkTable::run_timer(Timer *)$/;"	f	class:LinkTable
run_timer	elements/wifi/madwifirate.cc	/^MadwifiRate::run_timer(Timer *)$/;"	f	class:MadwifiRate
run_timer	lib/element.cc	/^Element::run_timer()$/;"	f	class:Element
run_timer	lib/element.cc	/^Element::run_timer(Timer *timer)$/;"	f	class:Element
run_timers	lib/timerset.cc	/^TimerSet::run_timers(RouterThread *thread, Master *master)$/;"	f	class:TimerSet
runclick_prog	tools/click-check/click-check.cc	/^static String runclick_prog;$/;"	v	file:
runclick_prog	tools/click-combine/click-combine.cc	/^static String runclick_prog;$/;"	v	file:
runclick_prog	tools/click-combine/click-uncombine.cc	/^static String runclick_prog;$/;"	v	file:
runclick_prog	tools/click-fastclassifier/click-fastclassifier.cc	/^static String runclick_prog;$/;"	v	file:
runcount	include/click/router.hh	/^Router::runcount() const$/;"	f	class:Router
running	include/click/router.hh	/^Router::running() const$/;"	f	class:Router
running_cb	elements/local/OpenFlow/lib/poll-loop.cc	/^static struct poll_waiter *running_cb;$/;"	v	typeref:struct:poll_waiter	file:
runs	include/click/task.hh	/^Task::runs() const$/;"	f	class:Task
rw_addmap	elements/ip/iprewriterbase.hh	/^	rw_drop = -1, rw_addmap = -2$/;"	e	enum:IPRewriterBase::__anon328
rw_drop	elements/ip/iprewriterbase.hh	/^	rw_drop = -1, rw_addmap = -2$/;"	e	enum:IPRewriterBase::__anon328
rx	elements/wifi/station/beacontracker.hh	/^    Timestamp rx;$/;"	m	struct:BeaconTracker::beacon_t
rx_abs_int_delay	drivers/e1000-4.x/src/e1000.h	/^	uint32_t rx_abs_int_delay;$/;"	m	struct:e1000_adapter
rx_abs_int_delay	drivers/e1000-5.x/src/e1000.h	/^	uint32_t rx_abs_int_delay;$/;"	m	struct:e1000_adapter
rx_abs_int_delay	drivers/e1000-7.x/src/e1000.h	/^	uint32_t rx_abs_int_delay;$/;"	m	struct:e1000_adapter
rx_ant	elements/wifi/athdesc.h	/^	u_int32_t rx_ant:4;$/;"	m	struct:ar5212_rx_status
rx_buffer_len	drivers/e1000-4.x/src/e1000.h	/^	uint32_t rx_buffer_len;$/;"	m	struct:e1000_adapter
rx_buffer_len	drivers/e1000-5.x/src/e1000.h	/^	uint32_t rx_buffer_len;$/;"	m	struct:e1000_adapter
rx_buffer_len	drivers/e1000-7.x/src/e1000.h	/^	uint32_t rx_buffer_len;$/;"	m	struct:e1000_adapter
rx_bytes	elements/local/OpenFlow/datapath.hh	/^	unsigned long long int rx_bytes, tx_bytes;$/;"	m	struct:click_port
rx_bytes	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t rx_bytes;       \/* Number of received bytes. *\/$/;"	m	struct:ofp_port_stats
rx_coalesce_usecs	drivers/e1000-5.x/src/kcompat.h	/^	u32	rx_coalesce_usecs;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs	drivers/e1000-7.x/src/kcompat.h	/^	u32	rx_coalesce_usecs;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs_high	drivers/e1000-5.x/src/kcompat.h	/^	u32	rx_coalesce_usecs_high;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs_high	drivers/e1000-7.x/src/kcompat.h	/^	u32	rx_coalesce_usecs_high;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs_irq	drivers/e1000-5.x/src/kcompat.h	/^	u32	rx_coalesce_usecs_irq;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs_irq	drivers/e1000-7.x/src/kcompat.h	/^	u32	rx_coalesce_usecs_irq;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs_low	drivers/e1000-5.x/src/kcompat.h	/^	u32	rx_coalesce_usecs_low;$/;"	m	struct:_kc_ethtool_coalesce
rx_coalesce_usecs_low	drivers/e1000-7.x/src/kcompat.h	/^	u32	rx_coalesce_usecs_low;$/;"	m	struct:_kc_ethtool_coalesce
rx_crc_err	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t rx_crc_err;     \/* Number of CRC errors. *\/$/;"	m	struct:ofp_port_stats
rx_csum	drivers/e1000-4.x/src/e1000.h	/^	boolean_t rx_csum;$/;"	m	struct:e1000_adapter
rx_csum	drivers/e1000-5.x/src/e1000.h	/^	boolean_t rx_csum;$/;"	m	struct:e1000_adapter
rx_csum	drivers/e1000-7.x/src/e1000.h	/^	boolean_t rx_csum;$/;"	m	struct:e1000_adapter
rx_dropped	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t rx_dropped;     \/* Number of packets dropped by RX. *\/$/;"	m	struct:ofp_port_stats
rx_errors	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t rx_errors;      \/* Number of receive errors.  This is a super-set$/;"	m	struct:ofp_port_stats
rx_frame_err	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t rx_frame_err;   \/* Number of frame alignment errors. *\/$/;"	m	struct:ofp_port_stats
rx_hdr_split	drivers/e1000-7.x/src/e1000.h	/^	uint64_t rx_hdr_split;$/;"	m	struct:e1000_adapter
rx_int_delay	drivers/e1000-4.x/src/e1000.h	/^	uint32_t rx_int_delay;$/;"	m	struct:e1000_adapter
rx_int_delay	drivers/e1000-5.x/src/e1000.h	/^	uint32_t rx_int_delay;$/;"	m	struct:e1000_adapter
rx_int_delay	drivers/e1000-7.x/src/e1000.h	/^	uint32_t rx_int_delay;$/;"	m	struct:e1000_adapter
rx_itr	drivers/e1000-7.x/src/e1000.h	/^	uint16_t rx_itr;$/;"	m	struct:e1000_adapter
rx_jumbo_max_pending	drivers/e1000-5.x/src/kcompat.h	/^	u32	rx_jumbo_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_jumbo_max_pending	drivers/e1000-7.x/src/kcompat.h	/^	u32	rx_jumbo_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_jumbo_pending	drivers/e1000-5.x/src/kcompat.h	/^	u32	rx_jumbo_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_jumbo_pending	drivers/e1000-7.x/src/kcompat.h	/^	u32	rx_jumbo_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_lockup_recoveries	drivers/e1000-7.x/src/e1000.h	/^        int rx_lockup_recoveries;  \/* # of times the recovery seq is invoked *\/$/;"	m	struct:e1000_adapter
rx_max_coalesced_frames	drivers/e1000-5.x/src/kcompat.h	/^	u32	rx_max_coalesced_frames;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames	drivers/e1000-7.x/src/kcompat.h	/^	u32	rx_max_coalesced_frames;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames_high	drivers/e1000-5.x/src/kcompat.h	/^	u32	rx_max_coalesced_frames_high;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames_high	drivers/e1000-7.x/src/kcompat.h	/^	u32	rx_max_coalesced_frames_high;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames_irq	drivers/e1000-5.x/src/kcompat.h	/^	u32	rx_max_coalesced_frames_irq;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames_irq	drivers/e1000-7.x/src/kcompat.h	/^	u32	rx_max_coalesced_frames_irq;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames_low	drivers/e1000-5.x/src/kcompat.h	/^	u32	rx_max_coalesced_frames_low;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_coalesced_frames_low	drivers/e1000-7.x/src/kcompat.h	/^	u32	rx_max_coalesced_frames_low;$/;"	m	struct:_kc_ethtool_coalesce
rx_max_pending	drivers/e1000-5.x/src/kcompat.h	/^	u32	rx_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_max_pending	drivers/e1000-7.x/src/kcompat.h	/^	u32	rx_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_mini_max_pending	drivers/e1000-5.x/src/kcompat.h	/^	u32	rx_mini_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_mini_max_pending	drivers/e1000-7.x/src/kcompat.h	/^	u32	rx_mini_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_mini_pending	drivers/e1000-5.x/src/kcompat.h	/^	u32	rx_mini_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_mini_pending	drivers/e1000-7.x/src/kcompat.h	/^	u32	rx_mini_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_normal_jiffies	drivers/e1000-7.x/src/e1000.h	/^        unsigned long rx_normal_jiffies;     \/* jiffies timeout for the NORMAL state *\/$/;"	m	struct:e1000_adapter
rx_ok	elements/wifi/athdesc.h	/^	u_int32_t rx_ok:1;$/;"	m	struct:ar5212_rx_status
rx_over_err	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t rx_over_err;    \/* Number of packets with RX overrun. *\/$/;"	m	struct:ofp_port_stats
rx_packets	elements/local/OpenFlow/datapath.hh	/^	unsigned long long int rx_packets, tx_packets;$/;"	m	struct:click_port
rx_packets	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t rx_packets;     \/* Number of received packets. *\/$/;"	m	struct:ofp_port_stats
rx_pause	drivers/e1000-5.x/src/kcompat.h	/^	u32	rx_pause;$/;"	m	struct:_kc_ethtool_pauseparam
rx_pause	drivers/e1000-7.x/src/kcompat.h	/^	u32	rx_pause;$/;"	m	struct:_kc_ethtool_pauseparam
rx_pending	drivers/e1000-5.x/src/kcompat.h	/^	u32	rx_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_pending	drivers/e1000-7.x/src/kcompat.h	/^	u32	rx_pending;$/;"	m	struct:_kc_ethtool_ringparam
rx_ps_bsize0	drivers/e1000-7.x/src/e1000.h	/^	uint16_t rx_ps_bsize0;$/;"	m	struct:e1000_adapter
rx_ps_pages	drivers/e1000-7.x/src/e1000.h	/^	unsigned int rx_ps_pages;$/;"	m	struct:e1000_adapter
rx_quiet_jiffies	drivers/e1000-7.x/src/e1000.h	/^        unsigned long rx_quiet_jiffies;      \/* jiffies timeout for the QUIET state *\/$/;"	m	struct:e1000_adapter
rx_rate	elements/wifi/athdesc.h	/^	u_int32_t rx_rate:5;$/;"	m	struct:ar5212_rx_status
rx_ring	drivers/e1000-4.x/src/e1000.h	/^	struct e1000_desc_ring rx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_desc_ring
rx_ring	drivers/e1000-5.x/src/e1000.h	/^	struct e1000_desc_ring rx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_desc_ring
rx_ring	drivers/e1000-7.x/src/e1000.h	/^	struct e1000_rx_ring *rx_ring;      \/* One per active queue *\/$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_rx_ring
rx_rssi	elements/wifi/athdesc.h	/^	u_int32_t rx_rssi:8;$/;"	m	struct:ar5212_rx_status
rx_state	drivers/e1000-7.x/src/e1000.h	/^        int rx_state;              \/* can be either: NORMAL, QUIET, LOCKUP *\/$/;"	m	struct:e1000_adapter
rx_want	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    int rx_want, tx_want;$/;"	m	struct:ssl_vconn	file:
rxbuf	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    struct ofpbuf *rxbuf;$/;"	m	struct:ssl_vconn	typeref:struct:ssl_vconn::ofpbuf	file:
rxbuf	elements/local/OpenFlow/lib/vconn-stream.cc	/^    struct ofpbuf *rxbuf;$/;"	m	struct:stream_vconn	typeref:struct:stream_vconn::ofpbuf	file:
rxerrc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t rxerrc;$/;"	m	struct:e1000_hw_stats
rxerrc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t rxerrc;$/;"	m	struct:e1000_hw_stats
rxerrc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t rxerrc;$/;"	m	struct:e1000_hw_stats
s	elements/etherswitch/bridgemessage.cc	/^BridgeMessage::s(String tag) const {$/;"	f	class:BridgeMessage
s	elements/etherswitch/bridgemessage.cc	/^BridgeMessage::wire::s(String tag) const {$/;"	f	class:BridgeMessage::wire
s	elements/grid/grid.hh	/^  String s() const {$/;"	f	struct:grid_location
s	elements/grid/pep.cc	/^PEP::s()$/;"	f	class:PEP
s	elements/grid/region.cc	/^RectRegion::s()$/;"	f	class:RectRegion
s	elements/grid/regionpep.cc	/^EstimateRouterRegion::s()$/;"	f	class:EstimateRouterRegion
s	elements/grid/updateroutes.hh	/^    String s() const$/;"	f	class:UpdateGridRoutes::NbrEntry
s	elements/local/OpenFlow/datapath.cc	/^	const struct stats_type *s;$/;"	m	struct:stats_dump_cb	typeref:struct:stats_dump_cb::stats_type	file:
s	elements/test/listtest.cc	/^    String s;$/;"	m	struct:__anon403::stringlistentry	file:
s	elements/test/queueyanktest.cc	/^    const unsigned char *s;$/;"	m	struct:__anon402::Foo	file:
s	include/click/clp.h	/^	const char *s;$/;"	m	union:Clp_Parser::__anon460
s	include/click/etheraddress.hh	/^EtherAddress::s() const$/;"	f	class:EtherAddress
s	include/click/ip6address.hh	/^    String s() const			{ return unparse(); }$/;"	f	class:IP6Address
s	include/click/ip6flowid.hh	/^  String s() const			{ return unparse(); }$/;"	f	class:IP6FlowID
s	include/click/ipaddress.hh	/^IPAddress::s() const$/;"	f	class:IPAddress
s	include/click/ipflowid.hh	/^inline String IPFlowID::s() const$/;"	f	class:IPFlowID
s	include/click/notifier.hh	/^	NotifierSignal *s;$/;"	m	union:ActiveNotifier::__anon433
s16	include/click/confparse.hh	/^	int16_t s16;$/;"	m	union:cp_value::__anon479
s32	include/click/confparse.hh	/^	int32_t s32;$/;"	m	union:cp_value::__anon479
s64	include/click/confparse.hh	/^	int64_t s64;$/;"	m	union:cp_value::__anon479
s6_addr	include/clicknet/ip6.h	27;"	d
s6_addr	include/clicknet/ip6.h	5;"	d
s6_addr16	include/clicknet/ip6.h	28;"	d
s6_addr16	include/clicknet/ip6.h	6;"	d
s6_addr32	include/clicknet/ip6.h	29;"	d
s6_addr32	include/clicknet/ip6.h	7;"	d
s6_addr64	include/clicknet/ip6.h	30;"	d
s6_addr64	include/clicknet/ip6.h	8;"	d
s_ack	elements/tcpudp/snooptcp.cc	/^SnoopTCP::PCB::s_ack(Packet *, const click_tcp *, int)$/;"	f	class:SnoopTCP::PCB
s_both_data	elements/ip/iprwmapping.hh	/^	s_both_data = (s_forward_data | s_reply_data)$/;"	e	enum:IPRewriterFlow::__anon338
s_both_done	elements/ip/iprwmapping.hh	/^	s_both_done = (s_forward_done | s_reply_done),$/;"	e	enum:IPRewriterFlow::__anon338
s_cache_size	elements/tcpudp/snooptcp.hh	/^  int s_cache_size() const	{ return (_head >= _tail ? _head - _tail : S_CACHE_SIZE - (_tail - _head)); }$/;"	f	struct:SnoopTCP::PCB
s_data	elements/tcpudp/snooptcp.cc	/^SnoopTCP::PCB::s_data(Packet *p, const click_tcp *tcph, int datalen)$/;"	f	class:SnoopTCP::PCB
s_expr0	elements/ip/ipfilter.hh	/^	    s_expr0, s_expr1, s_expr2,$/;"	e	enum:IPFilter::Parser::__anon353
s_expr1	elements/ip/ipfilter.hh	/^	    s_expr0, s_expr1, s_expr2,$/;"	e	enum:IPFilter::Parser::__anon353
s_expr2	elements/ip/ipfilter.hh	/^	    s_expr0, s_expr1, s_expr2,$/;"	e	enum:IPFilter::Parser::__anon353
s_factor0	elements/ip/ipfilter.hh	/^	    s_factor0, s_factor1, s_factor2,$/;"	e	enum:IPFilter::Parser::__anon353
s_factor0_neg	elements/ip/ipfilter.hh	/^	    s_factor0_neg, s_factor1_neg, s_factor2_neg$/;"	e	enum:IPFilter::Parser::__anon353
s_factor1	elements/ip/ipfilter.hh	/^	    s_factor0, s_factor1, s_factor2,$/;"	e	enum:IPFilter::Parser::__anon353
s_factor1_neg	elements/ip/ipfilter.hh	/^	    s_factor0_neg, s_factor1_neg, s_factor2_neg$/;"	e	enum:IPFilter::Parser::__anon353
s_factor2	elements/ip/ipfilter.hh	/^	    s_factor0, s_factor1, s_factor2,$/;"	e	enum:IPFilter::Parser::__anon353
s_factor2_neg	elements/ip/ipfilter.hh	/^	    s_factor0_neg, s_factor1_neg, s_factor2_neg$/;"	e	enum:IPFilter::Parser::__anon353
s_forward_data	elements/ip/iprwmapping.hh	/^	s_forward_data = 4, s_reply_data = 8,$/;"	e	enum:IPRewriterFlow::__anon338
s_forward_done	elements/ip/iprwmapping.hh	/^	s_forward_done = 1, s_reply_done = 2,$/;"	e	enum:IPRewriterFlow::__anon338
s_orexpr0	elements/ip/ipfilter.hh	/^	    s_orexpr0, s_orexpr1,$/;"	e	enum:IPFilter::Parser::__anon353
s_orexpr1	elements/ip/ipfilter.hh	/^	    s_orexpr0, s_orexpr1,$/;"	e	enum:IPFilter::Parser::__anon353
s_reply_data	elements/ip/iprwmapping.hh	/^	s_forward_data = 4, s_reply_data = 8,$/;"	e	enum:IPRewriterFlow::__anon338
s_reply_done	elements/ip/iprwmapping.hh	/^	s_forward_done = 1, s_reply_done = 2,$/;"	e	enum:IPRewriterFlow::__anon338
s_term0	elements/ip/ipfilter.hh	/^	    s_term0, s_term1, s_term2,$/;"	e	enum:IPFilter::Parser::__anon353
s_term1	elements/ip/ipfilter.hh	/^	    s_term0, s_term1, s_term2,$/;"	e	enum:IPFilter::Parser::__anon353
s_term2	elements/ip/ipfilter.hh	/^	    s_term0, s_term1, s_term2,$/;"	e	enum:IPFilter::Parser::__anon353
sa	apps/clicky/src/cdriver.hh	/^	StringAccum sa;$/;"	m	struct:clicky::csocket_cdriver::msg
sa	elements/analysis/ipsumdumpinfo.hh	/^    StringAccum sa;$/;"	m	struct:IPSummaryDump::PacketOdesc
sa	elements/analysis/ipsumdumpinfo.hh	/^    StringAccum* sa;$/;"	m	struct:IPSummaryDump::PacketDesc
sa_data	elements/ipsec/ipsecroutetable.hh	/^    SADataTuple * sa_data;$/;"	m	struct:IPsecRoute
saddr	include/click/ip6flowid.hh	/^  const IP6Address &saddr() const	{ return _saddr; }$/;"	f	class:IP6FlowID
saddr	include/click/ipflowid.hh	/^    IPAddress saddr() const {$/;"	f	class:IPFlowID
saddr	include/clicknet/fddi.h	/^    uint8_t	saddr[6];$/;"	m	struct:click_fddi
safe_length	elements/standard/classification.hh	/^    unsigned safe_length() const {$/;"	f	class:Classification::Wordwise::CompressedProgram
safe_length	elements/standard/classification.hh	/^    unsigned safe_length() const {$/;"	f	class:Classification::Wordwise::Program
safe_length	tools/click-fastclassifier/click-fastclassifier.hh	/^    int safe_length;$/;"	m	struct:Classifier_Program
same_processing	tools/lib/processingt.cc	/^ProcessingT::same_processing(int a, int b) const$/;"	f	class:ProcessingT
same_segment	elements/ip/ipreassembler.hh	/^IPReassembler::same_segment(const click_ip *h, const click_ip *h2)$/;"	f	class:IPReassembler
sample	apps/clicky/src/ddecor.hh	/^	sample(double v, double m, double t)$/;"	f	struct:clicky::dactivity_decor::sample
sample	apps/clicky/src/ddecor.hh	/^    struct sample {$/;"	s	class:clicky::dactivity_decor
sanity_hook	elements/grid/updateroutes.cc	/^UpdateGridRoutes::sanity_hook(Timer *, void *thunk)$/;"	f	class:UpdateGridRoutes
sat_add	elements/local/OpenFlow/lib/sat-math.hh	/^sat_add(unsigned int x, unsigned int y)$/;"	f
sat_mul	elements/local/OpenFlow/lib/sat-math.hh	/^sat_mul(unsigned int x, unsigned int y)$/;"	f
sat_sub	elements/local/OpenFlow/lib/sat-math.hh	/^sat_sub(unsigned int x, unsigned int y)$/;"	f
save_buffer	elements/local/OpenFlow/datapath.cc	/^uint32_t DatapathPacketBuffer::save_buffer(struct ofpbuf *buffer)$/;"	f	class:DatapathPacketBuffer
save_element_nports	tools/click-undead/click-undead.cc	/^save_element_nports(RouterT *r)$/;"	f	file:
save_files	test/testie	/^sub save_files ($&) {$/;"	s
save_state	drivers/e1000-4.x/src/kcompat.h	/^	int (*save_state)(struct pci_dev *dev, u32 state);$/;"	m	struct:_kc_pci_driver
saved_signal_mask	elements/local/OpenFlow/lib/fatal-signal.cc	/^static sigset_t saved_signal_mask;$/;"	v	file:
sbindir	bsdmodule/Makefile	/^sbindir = \/usr\/local\/sbin$/;"	m
sbindir	linuxmodule/Makefile	/^sbindir = \/usr\/local\/sbin$/;"	m
sbindir	ns/Makefile	/^sbindir = \/usr\/local\/sbin$/;"	m
sbindir	tools/click-install/Makefile	/^sbindir = \/usr\/local\/sbin$/;"	m
sbindir	userlevel/Makefile	/^sbindir = \/usr\/local\/sbin$/;"	m
scale	apps/clicky/src/dstyle.hh	/^    double scale;$/;"	m	struct:clicky::delt_size_style
scale	apps/clicky/src/dwidget.hh	/^    double scale;$/;"	m	struct:clicky::dcontext
scale	apps/clicky/src/rectangle.hh	/^    void scale(double s) {$/;"	f	struct:point
scale	apps/clicky/src/rectangle.hh	/^    void scale(double s) {$/;"	f	struct:rectangle
scale	apps/clicky/src/transform.cc	/^affine::scale(double x, double y)$/;"	f	class:affine
scale	apps/clicky/src/transform.hh	/^    void scale(const point &p)			{ scale(p.x(), p.y()); }$/;"	f	class:affine
scale	apps/clicky/src/transform.hh	/^    void scale(double d)			{ scale(d, d); }$/;"	f	class:affine
scale	apps/clicky/src/wdiagram.hh	/^    double scale() const {$/;"	f	class:clicky::wdiagram
scale	elements/ip/ipratemon.hh	/^	scale = 10$/;"	e	enum:IPRateMonitor::__anon339
scale	include/click/ewma.hh	/^    static unsigned scale() {$/;"	f	class:FixedEWMAXParameters
scale	include/click/ewma.hh	/^    static unsigned scale() {$/;"	f	class:StabilityEWMAXParameters
scale	include/click/ewma.hh	/^    unsigned scale(unsigned ratenum = 0) const {$/;"	f	class:RateEWMAX
scale_step	apps/clicky/src/dwidget.hh	/^    int scale_step;$/;"	m	struct:clicky::dcontext
scale_step	apps/clicky/src/wdiagram.hh	/^    int scale_step() const {$/;"	f	class:clicky::wdiagram
scale_to_char	elements/grid/bottleneckmetric.hh	/^  unsigned char scale_to_char(const metric_t &m) const { return (unsigned char) m.val(); }$/;"	f	class:BottleneckMetric
scale_to_char	elements/grid/e2elossmetric.hh	/^  unsigned char scale_to_char(const metric_t &m) const { return (unsigned char) m.val(); }$/;"	f	class:E2ELossMetric
scale_to_char	elements/grid/etx2metric.cc	/^ETX2Metric::scale_to_char(const metric_t &m) const$/;"	f	class:ETX2Metric
scale_to_char	elements/grid/etxmetric.cc	/^ETXMetric::scale_to_char(const metric_t &m) const$/;"	f	class:ETXMetric
scale_to_char	elements/grid/hopcountmetric.hh	/^  unsigned char scale_to_char(const metric_t &m) const { return (unsigned char) m.val(); }$/;"	f	class:HopcountMetric
scale_to_char	elements/grid/lirmetric.hh	/^  unsigned char scale_to_char(const metric_t &m) const { return (unsigned char) m.val(); }$/;"	f	class:LIRMetric
scale_to_char	elements/grid/threshmetric.hh	/^  unsigned char scale_to_char(const metric_t &m) const { return (unsigned char) m.val(); }$/;"	f	class:ThresholdMetric
scale_to_char	elements/grid/yarvismetric.hh	/^  unsigned char scale_to_char(const metric_t &m) const { return (unsigned char) m.val(); }$/;"	f	class:YarvisMetric
scaled	apps/clicky/src/rectangle.hh	/^    point scaled(double s) const {$/;"	f	struct:point
scaled	apps/clicky/src/transform.hh	/^    affine scaled(const point &p) const		{ return scaled(p.x(), p.y()); }$/;"	f	class:affine
scaled	apps/clicky/src/transform.hh	/^    affine scaled(double d) const		{ return scaled(d, d); }$/;"	f	class:affine
scaled	apps/clicky/src/transform.hh	/^affine::scaled(double x, double y) const$/;"	f	class:affine
scaled_average	include/click/ewma.hh	/^    signed_value_type scaled_average(unsigned ratenum = 0) const {$/;"	f	class:RateEWMAX
scaled_average	include/click/ewma.hh	/^    value_type scaled_average() const {$/;"	f	class:DirectEWMAX
scaled_one	include/click/ewma.hh	/^    static value_type scaled_one() {$/;"	f	class:FixedEWMAXParameters
scaled_one	include/click/ewma.hh	/^    static value_type scaled_one() {$/;"	f	class:StabilityEWMAXParameters
scaled_rate	elements/standard/bandwidthmeter.hh	/^  unsigned scaled_rate() const		{ return _rate.scaled_average(); }$/;"	f	class:BandwidthMeter
scan_string	elements/wifi/station/beaconscanner.cc	/^BeaconScanner::scan_string()$/;"	f	class:BeaconScanner
scatter	apps/clicky/src/permstr.cc	/^static int scatter[] = {        \/* map characters to random values *\/$/;"	v	file:
scc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t scc;$/;"	m	struct:e1000_hw_stats
scc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t scc;$/;"	m	struct:e1000_hw_stats
scc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t scc;$/;"	m	struct:e1000_hw_stats
sched_BE	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	int sched_BE;$/;"	m	struct:FlowSchedulableStat
sched_BK	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	int sched_BK;$/;"	m	struct:FlowSchedulableStat
sched_P4	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	int sched_P4;$/;"	m	struct:FlowSchedulableStat
sched_P5	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	int sched_P5;$/;"	m	struct:FlowSchedulableStat
sched_P6	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	int sched_P6;$/;"	m	struct:FlowSchedulableStat
sched_P7	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	int sched_P7;$/;"	m	struct:FlowSchedulableStat
sched_VI	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	int sched_VI;$/;"	m	struct:FlowSchedulableStat
sched_VO	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	int sched_VO;$/;"	m	struct:FlowSchedulableStat
sched_pull_called_num	elements/local/FlowNet/common/FlowNetGod.hh	/^	int sched_pull_called_num;$/;"	m	class:FlowNetGod
sched_pull_called_num_nopacket	elements/local/FlowNet/common/FlowNetGod.hh	/^	int sched_pull_called_num_nopacket;$/;"	m	class:FlowNetGod
sched_uncovered	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	int sched_uncovered;$/;"	m	struct:FlowSchedulableStat
schedule	elements/local/FlowNet/scheduler/sched_algorithms/SchedBackpressure.cc	/^int VcScheduleBackpressure::schedule(VcTable<Flow> *tbl_in, Flow** flow_in)$/;"	f	class:VcScheduleBackpressure
schedule	elements/local/FlowNet/scheduler/sched_algorithms/SchedHorizon.cc	/^int VcScheduleHorizon::schedule(VcTable<Flow> *tbl_in, Flow** flow_in)$/;"	f	class:VcScheduleHorizon
schedule	elements/local/FlowNet/scheduler/sched_algorithms/SchedLogWeight.cc	/^int VcScheduleLogWeight::schedule(VcTable<Flow> *tbl_in, Flow** flow_in)$/;"	f	class:VcScheduleLogWeight
schedule	elements/local/FlowNet/scheduler/sched_algorithms/SchedNoSchedule.cc	/^int VcScheduleNoSchedule::schedule(VcTable<Flow> *tbl, Flow **flow)$/;"	f	class:VcScheduleNoSchedule
schedule	elements/local/FlowNet/scheduler/sched_algorithms/SchedWBS.cc	/^int VcScheduleWBS::schedule(VcTable<Flow> *tbl_in, Flow** flow_in)$/;"	f	class:VcScheduleWBS
schedule_after	lib/timer.cc	/^Timer::schedule_after(const Timestamp &delta)$/;"	f	class:Timer
schedule_after_ms	include/click/timer.hh	/^Timer::schedule_after_ms(uint32_t delta_msec)$/;"	f	class:Timer
schedule_after_msec	include/click/timer.hh	/^    inline void schedule_after_msec(uint32_t delta_msec) {$/;"	f	class:Timer
schedule_after_s	include/click/timer.hh	/^Timer::schedule_after_s(uint32_t delta_sec)$/;"	f	class:Timer
schedule_after_sec	include/click/timer.hh	/^    inline void schedule_after_sec(uint32_t delta_sec) {$/;"	f	class:Timer
schedule_at	lib/timer.cc	/^Timer::schedule_at(const Timestamp& when)$/;"	f	class:Timer
schedule_block_tasks	include/click/routerthread.hh	/^RouterThread::schedule_block_tasks()$/;"	f	class:RouterThread
schedule_now	include/click/timer.hh	/^    inline void schedule_now() {$/;"	f	class:Timer
schedule_status	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	uint32_t schedule_status;$/;"	m	class:FlowSchedulable
schedule_triggered_update	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::schedule_triggered_update(const IPAddress &ip, unsigned int when)$/;"	f	class:DSDVRouteTable
schedule_work	drivers/e1000-5.x/src/kcompat.h	584;"	d
schedule_work	drivers/e1000-7.x/src/kcompat.h	843;"	d
scheduled	include/click/task.hh	/^    inline bool scheduled() const {$/;"	f	class:Task
scheduled	include/click/timer.hh	/^    inline bool scheduled() const {$/;"	f	class:Timer
scheduled_tasks	lib/routerthread.cc	/^RouterThread::scheduled_tasks(Router *router, Vector<Task *> &x)$/;"	f	class:RouterThread
scope	lib/lexer.cc	/^  VariableEnvironment &scope()		{ return _scope; }$/;"	f	class:Lexer::Compound
scope	lib/lexer.cc	/^  const VariableEnvironment &scope() const	{ return _scope; }$/;"	f	class:Lexer::Compound
scope	tools/lib/processingt.hh	/^    const VariableEnvironment &scope() const {$/;"	f	class:ProcessingT
scope	tools/lib/routert.hh	/^    const VariableEnvironment &scope() const { return _scope; }$/;"	f	class:RouterT
scope_cookie	tools/lib/routert.hh	/^	int scope_cookie;$/;"	m	struct:RouterT::ElementType
script	elements/standard/script.hh	/^	Script *script;$/;"	m	struct:Script::Expander
script_fn_to_fn	test/testie	/^sub script_fn_to_fn ($) {$/;"	s
script_text	test/testie	/^sub script_text ($&$) {$/;"	s
scroll_center	apps/clicky/src/wdiagram.hh	/^inline point wdiagram::scroll_center() const$/;"	f	class:clicky::wdiagram
scroll_recenter	apps/clicky/src/wdiagram.cc	/^void wdiagram::scroll_recenter(point old_ctr)$/;"	f	class:clicky::wdiagram
sdata	include/click/etheraddress.hh	/^    inline const uint16_t *sdata() const {$/;"	f	class:EtherAddress
search	elements/ip/siphmapper.hh	/^  C *search (K k) const$/;"	f	class:jvtree_t
search_dir	test/testie	/^sub search_dir ($$) {$/;"	s
search_frame_buffer	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^FrameReceivingBuffer* FlowMpeg2AdaptDecap::search_frame_buffer( Packet* p )$/;"	f	class:FlowMpeg2AdaptDecap
search_name_array	elements/local/OpenFlow/lib/vlog.cc	/^search_name_array(const char *target, const char **names, size_t n_names) $/;"	f	file:
search_op	include/click/notifier.hh	/^Notifier::search_op() const$/;"	f	class:Notifier
search_start_code	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^static uint8_t* search_start_code( uint8_t* start_point, int size )$/;"	f	file:
sec	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t sec;$/;"	m	struct:e1000_hw_stats
sec	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t sec;$/;"	m	struct:e1000_hw_stats
sec	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t sec;$/;"	m	struct:e1000_hw_stats
sec	elements/local/FlowNet/papmo/PaPMo.hh	/^	uint32_t sec;$/;"	m	struct:composed_trace
sec	include/click/timestamp.hh	/^	    int32_t sec;$/;"	m	struct:Timestamp::rep_t::__anon419
sec	include/click/timestamp.hh	/^	    int32_t sec;$/;"	m	struct:Timestamp::rep_t::__anon420
sec	include/click/timestamp.hh	/^Timestamp::sec() const$/;"	f	class:Timestamp
second	include/click/pair.hh	/^    U second;$/;"	m	struct:Pair
second	tools/lib/runparse.hh	/^	ElementClassT *second;$/;"	m	struct:RouterUnparserT::Pair
second_argument_type	include/click/algorithm.hh	/^    typedef T second_argument_type;$/;"	t	struct:less
second_argument_type	include/click/algorithm.hh	/^    typedef U second_argument_type;$/;"	t	struct:do_nothing
second_type	include/click/pair.hh	/^    typedef U second_type;$/;"	t	struct:Pair
seconds_prefixes	lib/args.cc	/^static const char seconds_prefixes[] = "m\\075u\\072n\\067";$/;"	v	file:
seconds_prefixes	lib/confparse.cc	/^static const char seconds_prefixes[] = "m\\075u\\072n\\067";$/;"	v	file:
seconds_type	include/click/timestamp.hh	/^    typedef int32_t seconds_type;$/;"	t	class:Timestamp
seconds_units	lib/args.cc	/^static const char seconds_units[] = "\\$/;"	v	file:
seconds_units	lib/confparse.cc	/^static const char seconds_units[] = "\\$/;"	v	file:
secs	include/clicknet/dhcp.h	/^	uint16_t secs;         \/* elapsed time in sec. from trying to boot *\/$/;"	m	struct:click_dhcp
seek	lib/fromfile.cc	/^FromFile::seek(off_t want, ErrorHandler* errh)$/;"	f	class:FromFile
selectHandler	apps/ClickController/ClickController.java	/^    void selectHandler(ControlSocket.HandlerInfo hinfo) {$/;"	m	class:ClickController
select_driver	apps/clicky/src/crouter.hh	/^    void select_driver(int driver) {$/;"	f	class:clicky::crouter
select_set	include/click/routerthread.hh	/^    inline SelectSet &select_set()		{ return _selects; }$/;"	f	class:RouterThread
select_set	include/click/routerthread.hh	/^    inline const SelectSet &select_set() const	{ return _selects; }$/;"	f	class:RouterThread
selected	elements/radio/bim.cc	/^BIM::selected(int fd, int)$/;"	f	class:BIM
selected	elements/userlevel/chattersocket.cc	/^ChatterSocket::selected(int fd, int)$/;"	f	class:ChatterSocket
selected	elements/userlevel/controlsocket.cc	/^ControlSocket::selected(int fd, int)$/;"	f	class:ControlSocket
selected	elements/userlevel/fromdevice.cc	/^FromDevice::selected(int, int)$/;"	f	class:FromDevice
selected	elements/userlevel/fromhost.cc	/^FromHost::selected(int fd, int)$/;"	f	class:FromHost
selected	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::selected(int fd, int)$/;"	f	class:IPFlowRawSockets
selected	elements/userlevel/kerneltun.cc	/^KernelTun::selected(int fd, int)$/;"	f	class:KernelTun
selected	elements/userlevel/rawsocket.cc	/^RawSocket::selected(int fd, int)$/;"	f	class:RawSocket
selected	elements/userlevel/socket.cc	/^Socket::selected(int fd, int)$/;"	f	class:Socket
selected	elements/userlevel/todevice.cc	/^ToDevice::selected(int, int)$/;"	f	class:ToDevice
selected	lib/element.cc	/^Element::selected(int fd)$/;"	f	class:Element
selected	lib/element.cc	/^Element::selected(int fd, int mask)$/;"	f	class:Element
selected_driver	apps/clicky/src/crouter.hh	/^    int selected_driver() const {$/;"	f	class:clicky::crouter
selector	apps/clicky/src/dstyle.hh	/^    const dcss_selector &selector() const {$/;"	f	class:clicky::dcss
selector_index	apps/clicky/src/dstyle.hh	/^    unsigned selector_index() const {$/;"	f	class:clicky::dcss
self_test	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	void	(*self_test)(struct net_device *, struct ethtool_test *, u64 *);$/;"	m	struct:_kc_ethtool_ops	file:
self_test	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	void	(*self_test)(struct net_device *, struct ethtool_test *, u64 *);$/;"	m	struct:_kc_ethtool_ops	file:
self_test_count	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*self_test_count)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
self_test_count	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*self_test_count)(struct net_device *);$/;"	m	struct:_kc_ethtool_ops	file:
sem_waiters	elements/local/OpenFlow/lib/poll-loop.cc	/^sem_t sem_waiters;$/;"	v
semiresolve_type	tools/lib/elementt.hh	/^    inline void semiresolve_type() const {$/;"	f	struct:ElementT
send	elements/local/OpenFlow/lib/vconn-provider.hh	/^    int (*send)(struct vconn *vconn, struct ofpbuf *msg);$/;"	m	struct:vconn_class
sendFrameToUpperLayer	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^void FlowMpeg2AdaptDecap::sendFrameToUpperLayer( FrameReceivingBuffer* buffer, const Element* e, papmo* papmo )$/;"	f	class:FlowMpeg2AdaptDecap
send_assoc_req	elements/wifi/station/associationrequester.cc	/^AssociationRequester::send_assoc_req()$/;"	f	class:AssociationRequester
send_association_response	elements/wifi/ap/associationresponder.cc	/^AssociationResponder::send_association_response(EtherAddress dst, uint16_t status, uint16_t associd)$/;"	f	class:AssociationResponder
send_auth_request	elements/wifi/station/openauthrequester.cc	/^OpenAuthRequester::send_auth_request()$/;"	f	class:OpenAuthRequester
send_auth_response	elements/wifi/ap/openauthresponder.cc	/^OpenAuthResponder::send_auth_response(EtherAddress dst, uint16_t seq, uint16_t status)$/;"	f	class:OpenAuthResponder
send_beacon	elements/wifi/ap/beaconsource.cc	/^BeaconSource::send_beacon(EtherAddress dst, bool probe)$/;"	f	class:BeaconSource
send_bpdu	elements/local/OpenFlow/lib/stp.cc	/^    void (*send_bpdu)(struct ofpbuf *bpdu, int port_no, void *aux);$/;"	m	struct:stp	file:
send_broadcast_packet	elements/grid/linktester.cc	/^LinkTester::send_broadcast_packet(unsigned short psz, const Timestamp &tv,$/;"	f	class:LinkTester
send_control_packets_to_click	elements/local/OpenFlow/RConn.cc	/^void RConn::send_control_packets_to_click()$/;"	f	class:RConn
send_disassociation	elements/wifi/ap/associationresponder.cc	/^AssociationResponder::send_disassociation(EtherAddress dst, uint16_t reason)$/;"	f	class:AssociationResponder
send_flow_exp	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint8_t send_flow_exp;    \/* Send flow expiry to controller. *\/$/;"	m	struct:nx_flow_end
send_flow_rem	elements/local/OpenFlow/lib/switch-flow.hh	/^    uint8_t send_flow_rem;      \/* Send a flow removed to the controller *\/$/;"	m	struct:sw_flow
send_full_update	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::send_full_update()$/;"	f	class:DSDVRouteTable
send_hook	elements/grid/linkstat.cc	/^LinkStat::send_hook()$/;"	f	class:LinkStat
send_mgmt_command	elements/local/OpenFlow/lib/dpif.cc	/^send_mgmt_command(struct dpif *dp, int dp_idx, int command, const char *arg)$/;"	f	file:
send_openflow_buffer	elements/local/OpenFlow/RConn.cc	/^static int send_openflow_buffer(class RConn *rconnElement, struct ofpbuf *buffer, struct rconn_remote *sender, uint32_t xid UNUSED)$/;"	f	file:
send_openflow_buffer	elements/local/OpenFlow/datapath.cc	/^int Datapath::send_openflow_buffer(struct ofpbuf *buffer, struct rconn_remote *rconn_sender, uint32_t xid )$/;"	f	class:Datapath
send_openflow_buffer_to_remote	elements/local/OpenFlow/RConn.cc	/^static int send_openflow_buffer_to_remote(struct ofpbuf *buffer, struct rconn_remote *remote)$/;"	f	file:
send_packet	elements/ns/tosimdevice.cc	/^ToSimDevice::send_packet(Packet *p)$/;"	f	class:ToSimDevice
send_packet	elements/radio/bim.cc	/^BIM::send_packet(const unsigned char buf[], unsigned int len)$/;"	f	class:BIM
send_packet	elements/userlevel/todevice.cc	/^ToDevice::send_packet(Packet *p)$/;"	f	class:ToDevice
send_pkt	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::Flow::send_pkt(Packet *p, ErrorHandler *errh)$/;"	f	class:IPFlowRawSockets::Flow
send_port_status	elements/local/OpenFlow/datapath.cc	/^void Datapath::send_port_status(struct click_port *p, uint8_t status)$/;"	f	class:Datapath
send_probe	elements/grid/gridprobesender.cc	/^GridProbeSender::send_probe(IPAddress &ip, unsigned int nonce)$/;"	f	class:GridProbeSender
send_probe_request	elements/wifi/station/proberequester.cc	/^ProbeRequester::send_probe_request()$/;"	f	class:ProbeRequester
send_probe_response	elements/wifi/ap/proberesponder.cc	/^ProbeResponder::send_probe_response(EtherAddress dst)$/;"	f	class:ProbeResponder
send_query_for	elements/ethernet/arpquerier.cc	/^ARPQuerier::send_query_for(const Packet *p, bool ether_dhost_valid)$/;"	f	class:ARPQuerier
send_query_for	elements/ethernet/ip6ndsolicitor.cc	/^IP6NDSolicitor::send_query_for(const u_char want_ip6[16])$/;"	f	class:IP6NDSolicitor
send_query_for	elements/grid/floodinglocquerier.cc	/^FloodingLocQuerier::send_query_for(const IPAddress &want_ip)$/;"	f	class:FloodingLocQuerier
send_routing_update	elements/grid/gridroutetable.cc	/^GridRouteTable::send_routing_update(Vector<RTEntry> &rtes_to_send,$/;"	f	class:GridRouteTable
send_routing_update	elements/grid/updateroutes.cc	/^UpdateGridRoutes::send_routing_update(Vector<grid_nbr_entry> &rte_info,$/;"	f	class:UpdateGridRoutes
send_time	elements/grid/grid.hh	/^    struct timeval send_time;$/;"	m	struct:grid_route_probe	typeref:struct:grid_route_probe::timeval
send_timer	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	Timer send_timer;$/;"	m	class:PFShapeFW
send_timer	elements/local/OpenFlow/RConn.hh	/^        Timer send_timer;$/;"	m	class:RConn
send_timestamp	elements/icmp/icmpsendpings.hh	/^	Timestamp send_timestamp[65536];$/;"	m	struct:ICMPPingSource::ReceiverInfo
send_timestamp	elements/wifi/athdesc.h	/^	u_int32_t	send_timestamp:16;$/;"	m	struct:ar5212_desc
send_to_server	elements/local/FlowNet/papmo/PaPMo.cc	/^int papmo::send_to_server( uint8_t* buf, uint32_t len )$/;"	f	class:papmo
send_triggered_update	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::send_triggered_update(const IPAddress &ip)$/;"	f	class:DSDVRouteTable
send_unicast_packet	elements/grid/linktester.cc	/^LinkTester::send_unicast_packet(const Timestamp &tv,$/;"	f	class:LinkTester
send_write_handler	elements/tcpudp/tcpipsend.cc	/^TCPIPSend::send_write_handler(const String &conf, Element *e, void *, ErrorHandler *errh)$/;"	f	class:TCPIPSend
sendable	elements/grid/pep.cc	/^PEP::sendable(Entry e)$/;"	f	class:PEP
sendable	elements/grid/regionpep.cc	/^EstimateRouterRegion::sendable(Entry e)$/;"	f	class:EstimateRouterRegion
sendbuffer_timer_hook	elements/grid/dsrroutetable.cc	/^DSRRouteTable::sendbuffer_timer_hook()$/;"	f	class:DSRRouteTable
sender	elements/local/OpenFlow/datapath.cc	/^	struct rconn_remote *sender;$/;"	m	struct:stats_dump_cb	typeref:struct:stats_dump_cb::rconn_remote	file:
sender_rxmit	elements/tcpudp/snooptcp.hh	/^    int sender_rxmit;$/;"	m	struct:SnoopTCP::SCacheEntry
sent_frame_index	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int sent_frame_index[STREAMINGSTUB_MAX_FRAMEINDEX_BUFFER];$/;"	m	struct:FlowMpeg2AdaptDecapStat
sent_frame_time	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	struct timeval sent_frame_time[STREAMINGSTUB_MAX_FRAMEINDEX_BUFFER];$/;"	m	struct:FlowMpeg2AdaptDecapStat	typeref:struct:FlowMpeg2AdaptDecapStat::timeval
sent_new	elements/grid/updateroutes.hh	/^    bool sent_new;$/;"	m	struct:UpdateGridRoutes::far_entry
sent_now	elements/local/FlowNet/common/Flow.hh	/^	uint32_t sent_now;$/;"	m	class:Flow
sent_pkt_count	elements/local/FlowNet/common/Flow.hh	/^	int sent_pkt_count;$/;"	m	struct:FlowStat
separate_packet	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^int FlowMpeg2AdaptEncap::separate_packet( Packet* p_in, WritablePacket** p_sep1, $/;"	f	class:FlowMpeg2AdaptEncap
separate_text	elements/ip/ipfilter.cc	/^separate_text(const String &text, Vector<String> &words)$/;"	f	file:
seq	elements/tcpudp/snooptcp.hh	/^    unsigned seq;$/;"	m	struct:SnoopTCP::SCacheEntry
seq	elements/wifi/station/beacontracker.hh	/^    uint16_t seq;$/;"	m	struct:BeaconTracker::beacon_t
seq	elements/wifi/wifidefrag.hh	/^    uint16_t seq;$/;"	m	struct:WifiDefrag::PacketInfo
seq	elements/wifi/wifidupefilter.hh	/^    uint16_t seq;$/;"	m	class:WifiDupeFilter::DstInfo
seq_map	elements/grid/floodinglocquerier.hh	/^  typedef HashMap<IPAddress, seq_t> seq_map;$/;"	t	class:FloodingLocQuerier
seq_map	elements/grid/locqueryresponder.hh	/^  typedef HashMap<IPAddress, seq_t> seq_map;$/;"	t	class:LocQueryResponder
seq_no	elements/grid/floodinglocquerier.hh	/^    unsigned int seq_no;$/;"	m	struct:FloodingLocQuerier::seq_t
seq_no	elements/grid/grid.hh	/^    uint32_t seq_no;$/;"	m	struct:grid_geocast
seq_no	elements/grid/grid.hh	/^    uint32_t seq_no;$/;"	m	struct:grid_hello
seq_no	elements/grid/grid.hh	/^    uint32_t seq_no;$/;"	m	struct:grid_loc_query
seq_no	elements/grid/grid.hh	/^    uint32_t seq_no;$/;"	m	struct:grid_nbr_entry
seq_no	elements/grid/grid.hh	/^  uint32_t seq_no;$/;"	m	struct:grid_link_probe
seq_no	elements/grid/gridgenericrt.hh	/^    unsigned int         seq_no()   const { return _seq_no;   }$/;"	f	struct:GridGenericRouteTable::RouteEntry
seq_no	elements/grid/gridlocationinfo.hh	/^  unsigned int seq_no() { return _seq_no; }$/;"	f	class:GridLocationInfo
seq_no	elements/grid/gridlocationinfo2.hh	/^  unsigned int seq_no() { return _seq_no; }$/;"	f	class:GridLocationInfo2
seq_no	elements/grid/gridroutetable.hh	/^    unsigned int seq_no() const { check(); return _seq_no; }$/;"	f	class:GridRouteTable::RTEntry
seq_no	elements/grid/linkstat.hh	/^    unsigned int seq_no;$/;"	m	struct:LinkStat::link_probe
seq_no	elements/grid/linkstat.hh	/^    unsigned seq_no;$/;"	m	struct:LinkStat::probe_t
seq_no	elements/grid/linktester.hh	/^    unsigned int seq_no;$/;"	m	struct:LinkTester::payload_t
seq_no	elements/grid/locqueryresponder.hh	/^    unsigned int seq_no;$/;"	m	struct:LocQueryResponder::seq_t
seq_num	elements/analysis/storeudptimeseqrecord.hh	/^        uint32_t  seq_num;$/;"	m	struct:StoreUDPTimeSeqRecord::PData
seq_num	elements/wifi/athdesc.h	/^	u_int32_t	seq_num:12;$/;"	m	struct:ar5212_desc
seq_t	elements/grid/floodinglocquerier.hh	/^    seq_t() : seq_no(0), last_response_jiffies(0) { }$/;"	f	struct:FloodingLocQuerier::seq_t
seq_t	elements/grid/floodinglocquerier.hh	/^    seq_t(unsigned int s, int j) : seq_no(s), last_response_jiffies(j) { }$/;"	f	struct:FloodingLocQuerier::seq_t
seq_t	elements/grid/floodinglocquerier.hh	/^  struct seq_t {$/;"	s	class:FloodingLocQuerier
seq_t	elements/grid/locqueryresponder.hh	/^    seq_t() : seq_no(0), last_jiffies(0) { }$/;"	f	struct:LocQueryResponder::seq_t
seq_t	elements/grid/locqueryresponder.hh	/^    seq_t(unsigned int s, int j) : seq_no(s), last_jiffies(j) { }$/;"	f	struct:LocQueryResponder::seq_t
seq_t	elements/grid/locqueryresponder.hh	/^  struct seq_t {$/;"	s	class:LocQueryResponder
seqno	elements/local/OpenFlow/lib/rconn.cc	/^    unsigned int seqno;$/;"	m	struct:rconn	file:
serdes_link_down	drivers/e1000-5.x/src/e1000_hw.h	/^    boolean_t serdes_link_down;$/;"	m	struct:e1000_hw
serdes_link_down	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t serdes_link_down;$/;"	m	struct:e1000_hw
serial	elements/local/OpenFlow/lib/switch-flow.hh	/^    unsigned long int serial;$/;"	m	struct:sw_flow
serial_num	elements/local/OpenFlow/include/openflow/openflow.hh	/^    char serial_num[SERIAL_NUM_LEN];   \/* Serial number. *\/$/;"	m	struct:ofp_desc_stats
session_type	elements/local/OpenFlow/lib/vconn-ssl.cc	/^enum session_type {$/;"	g	file:
set	apps/clicky/src/hvalues.cc	/^handler_value *handler_values::set(const String &hname, const String &hparam, const String &hvalue, bool &changed)$/;"	f	class:clicky::handler_values
set	elements/grid/grid.hh	/^  void set(double lat, double lon, double h) {$/;"	f	struct:grid_location
set	elements/grid/grid.hh	/^  void set(int32_t lat, int32_t lon, int32_t h) {$/;"	f	struct:grid_location
set	elements/standard/suppressor.hh	/^  void set(int output, bool suppressed) { _suppressed[output] = suppressed; }$/;"	f	class:Suppressor
set	include/click/args.hh	/^    Args &set(T &variable, const V &value) {$/;"	f	struct:Args
set	include/click/bigint.hh	/^    static click_uint_large_t set(limb_type *a, int n, click_uint_large_t b) {$/;"	f	class:Bigint
set	include/click/hashcontainer.hh	/^T *HashContainer<T, A>::set(iterator &it, T *element, bool balance)$/;"	f	class:HashContainer
set	include/click/hashcontainer.hh	/^inline T *HashContainer<T, A>::set(T *element)$/;"	f	class:HashContainer
set	include/click/hashtable.hh	/^bool HashTable<K, V>::set(const key_type &key, const mapped_type &value)$/;"	f	class:HashTable
set	include/click/hashtable.hh	/^bool HashTable<T>::set(const value_type &value)$/;"	f	class:HashTable
set	include/click/timestamp.hh	/^inline void Timestamp::set(seconds_type sec, uint32_t subsec) {$/;"	f	class:Timestamp
set	include/click/tokenbucket.hh	/^    void set(const rate_type &rate, token_type t) {$/;"	f	class:TokenCounterX
set	include/click/tokenbucket.hh	/^    void set(token_type t) {$/;"	f	class:TokenBucketX
set	include/clicknet/wifi.h	/^		uint8_t 	set;$/;"	m	struct:wifi_information::fh
setBWShapeStatus	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^inline void FlowBWShaperable::setBWShapeStatus(uint32_t ss)$/;"	f	class:FlowBWShaperable
setControlSocket	apps/ClickController/ClickController.java	/^    public void setControlSocket(ControlSocket cs) {$/;"	m	class:ClickController
setLowerLayerFlow	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^inline void FlowBWShaperable::setLowerLayerFlow( Flow* f )$/;"	f	class:FlowBWShaperable
setNexthopInfo	elements/local/FlowNet/scheduler/FlowSchedulable.cc	/^void FlowSchedulable::setNexthopInfo(uint8_t* macaddr, IPAddress ip)$/;"	f	class:FlowSchedulable
setScheduleStatus	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^inline void FlowSchedulable::setScheduleStatus(uint32_t ss)$/;"	f	class:FlowSchedulable
setShaper	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^	void setShaper( VcBWShape* vcb ) { _vcShape = vcb; }$/;"	f	class:FlowBWShaperable
setStatusLine	apps/ClickController/ClickController.java	/^    public void setStatusLine(String s) {$/;"	m	class:ClickController
set_C1_and_C2	elements/aqm/red.cc	/^RED::set_C1_and_C2()$/;"	f	class:RED
set_active	elements/analysis/fromdagdump.cc	/^FromDAGDump::set_active(bool active)$/;"	f	class:FromDAGDump
set_active	elements/analysis/fromflandump.cc	/^FromFlanDump::set_active(bool active)$/;"	f	class:FromFlanDump
set_active	elements/analysis/fromnlanrdump.cc	/^FromNLANRDump::set_active(bool active)$/;"	f	class:FromNLANRDump
set_active	elements/userlevel/fromdump.cc	/^FromDump::set_active(bool active)$/;"	f	class:FromDump
set_active	elements/wifi/fromhandler.cc	/^FromHandler::set_active(bool b) {$/;"	f	class:FromHandler
set_active	include/click/notifier.hh	/^ActiveNotifier::set_active(bool active, bool schedule)$/;"	f	class:ActiveNotifier
set_active	include/click/notifier.hh	/^Notifier::set_active(bool active)$/;"	f	class:Notifier
set_active	include/click/notifier.hh	/^NotifierSignal::set_active(bool active)$/;"	f	class:NotifierSignal
set_anno_level	elements/ip/ipratemon.hh	/^IPRateMonitor::set_anno_level(unsigned addr, unsigned level, unsigned when)$/;"	f	class:IPRateMonitor
set_anno_s16	include/click/packet.hh	/^    void set_anno_s16(int i, int16_t x) {$/;"	f	class:Packet
set_anno_s32	include/click/packet.hh	/^    void set_anno_s32(int i, int32_t x) {$/;"	f	class:Packet
set_anno_u16	include/click/packet.hh	/^    void set_anno_u16(int i, uint16_t x) {$/;"	f	class:Packet
set_anno_u32	include/click/packet.hh	/^    void set_anno_u32(int i, uint32_t x) {$/;"	f	class:Packet
set_anno_u64	include/click/packet.hh	/^    void set_anno_u64(int i, uint64_t x) {$/;"	f	class:Packet
set_anno_u8	include/click/packet.hh	/^    void set_anno_u8(int i, uint8_t x) {$/;"	f	class:Packet
set_annotations	elements/ns/fromsimdevice.cc	/^FromSimDevice::set_annotations(Packet *p,int ptype)$/;"	f	class:FromSimDevice
set_arena	include/click/hashmap.cc	/^HashMap<K, V>::set_arena(HashMap_ArenaFactory *factory)$/;"	f	class:HashMap
set_arena	include/click/hashmap.cc	/^HashMap<K, void *>::set_arena(HashMap_ArenaFactory *factory)$/;"	f	class:HashMap
set_arena	include/click/hashmap.hh	/^  void set_arena(HashMap_ArenaFactory *af) { inherited::set_arena(af); }$/;"	f	class:HashMap
set_attachment	lib/router.cc	/^Router::set_attachment(const String &name, void *value)$/;"	f	class:Router
set_autorefresh_period	apps/clicky/src/hvalues.hh	/^    void set_autorefresh_period(int p) {$/;"	f	class:clicky::handler_value
set_bit_error	elements/standard/randomerror.cc	/^RandomBitErrors::set_bit_error(unsigned bit_error)$/;"	f	class:RandomBitErrors
set_blacklist	elements/grid/dsrroutetable.cc	/^DSRRouteTable::set_blacklist(IPAddress ip, int s)$/;"	f	class:DSRRouteTable
set_body	tools/click-devirtualize/cxxclass.hh	/^  void set_body(const String &b)	{ _body = b; _clean_body = String(); }$/;"	f	class:CxxFunction
set_branch	elements/standard/classification.hh	/^    inline void set_branch(int from_state, bool branch, int to_state) {$/;"	f	class:Classification::Wordwise::DominatorOptimizer
set_bridge_id	elements/local/OpenFlow/lib/stp.cc	/^set_bridge_id(struct stp *stp, stp_identifier new_bridge_id)$/;"	f	file:
set_capacity	elements/ethernet/arptable.hh	/^    void set_capacity(uint32_t capacity) {$/;"	f	class:ARPTable
set_capacity	include/click/standard/storage.hh	/^    void set_capacity(index_type c)	{ _capacity = c; }$/;"	f	class:Storage
set_ccss_media	apps/clicky/src/crouter.cc	/^void crouter::set_ccss_media(const String &media)$/;"	f	class:clicky::crouter
set_cd_algorithm_index	elements/local/FlowNet/common/CongestionDetection.hh	/^inline void VcCongestionDetection::set_cd_algorithm_index( int32_t i ) $/;"	f	class:VcCongestionDetection
set_checksums	elements/analysis/fromcapdump.cc	/^set_checksums(WritablePacket *q, click_ip *iph)$/;"	f	file:
set_checksums	elements/analysis/fromipsumdump.cc	/^set_checksums(WritablePacket *q, click_ip *iph)$/;"	f	file:
set_checksums	elements/analysis/fromtcpdump.cc	/^set_checksums(WritablePacket *q, click_ip *iph)$/;"	f	file:
set_clickpath	lib/userutils.cc	/^set_clickpath(const char* p)$/;"	f
set_coalesce	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*set_coalesce)(struct net_device *, struct ethtool_coalesce *);$/;"	m	struct:_kc_ethtool_ops	file:
set_coalesce	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*set_coalesce)(struct net_device *, struct ethtool_coalesce *);$/;"	m	struct:_kc_ethtool_ops	file:
set_config	apps/clicky/src/crouter.cc	/^void crouter::set_config(const String &conf, bool replace)$/;"	f	class:clicky::crouter
set_configuration	tools/lib/elementt.hh	/^ElementT::set_configuration(const String &configuration)$/;"	f	class:ElementT
set_connections	lib/router.cc	/^Router::set_connections()$/;"	f	class:Router
set_context	include/click/error.hh	/^    void set_context(const String &str) {$/;"	f	class:ContextErrorHandler
set_context_landmark	include/click/error.hh	/^    void set_context_landmark(const String &str) {$/;"	f	class:ContextErrorHandler
set_context_printed	include/click/error.hh	/^    void set_context_printed(bool x) {$/;"	f	class:ContextErrorHandler
set_cpu_share	lib/routerthread.cc	/^RouterThread::set_cpu_share(unsigned min_frac, unsigned max_frac)$/;"	f	class:RouterThread
set_current_state	drivers/e1000-4.x/src/kcompat.h	289;"	d
set_cursor	apps/clicky/src/wdiagram.cc	/^void wdiagram::set_cursor(delt *h, double x, double y, int state)$/;"	f	class:clicky::wdiagram
set_daddr	include/click/ip6flowid.hh	/^  void set_daddr(const IP6Address &a)	{ _daddr = a; }$/;"	f	class:IP6FlowID
set_daddr	include/click/ipflowid.hh	/^    void set_daddr(IPAddress a) {$/;"	f	class:IPFlowID
set_default_flags	include/click/error.hh	/^    void set_default_flags(int default_flags) {$/;"	f	class:FileErrorHandler
set_default_handler	lib/error.cc	/^ErrorHandler::set_default_handler(ErrorHandler *errh)$/;"	f	class:ErrorHandler
set_device	elements/linuxmodule/anydevice.cc	/^AnyDevice::set_device(net_device *dev, AnyDeviceMap *adm, int flags)$/;"	f	class:AnyDevice
set_device_addresses	elements/linuxmodule/fromhost.cc	/^FromHost::set_device_addresses(ErrorHandler *errh)$/;"	f	class:FromHost
set_device_anno	include/click/packet.hh	/^Packet::set_device_anno(net_device *dev)$/;"	f	class:Packet
set_diagram_mode	apps/clicky/src/wmain.cc	/^void wmain::set_diagram_mode(int configuration, int diagram)$/;"	f	class:clicky::wmain
set_dl_addr	elements/local/OpenFlow/lib/dp_act.cc	/^set_dl_addr(struct ofpbuf *buffer, struct sw_flow_key *key UNUSED, $/;"	f	file:
set_dport	include/click/ip6flowid.hh	/^  void set_dport(uint16_t p)		{ _dport = p; }$/;"	f	class:IP6FlowID
set_dport	include/click/ipflowid.hh	/^    void set_dport(uint16_t p) {$/;"	f	class:IPFlowID
set_driver	apps/clicky/src/crouter.cc	/^void crouter::set_driver(cdriver *driver, bool active)$/;"	f	class:clicky::crouter
set_driver	tools/lib/elementmap.hh	/^    void set_driver(int d)		{ set_driver_mask(1 << d); }$/;"	f	class:ElementMap
set_driver_flags	apps/clicky/src/hvalues.hh	/^inline void handler_value::set_driver_flags(crouter *cr, int new_driver_flags)$/;"	f	class:clicky::handler_value
set_driver_mask	tools/lib/elementmap.cc	/^ElementMap::set_driver_mask(int driver_mask)$/;"	f	class:ElementMap
set_dst_ip_anno	include/click/packet.hh	/^Packet::set_dst_ip_anno(IPAddress a)$/;"	f	class:Packet
set_dynamic_resizing	include/click/hashmap.cc	/^HashMap<K, V>::set_dynamic_resizing(bool on)$/;"	f	class:HashMap
set_dynamic_resizing	include/click/hashmap.cc	/^HashMap<K, void *>::set_dynamic_resizing(bool on)$/;"	f	class:HashMap
set_econfiguration	lib/router.cc	/^Router::set_econfiguration(int eindex, const String &conf)$/;"	f	class:Router
set_edit_active	apps/clicky/src/whandler.hh	/^inline void whandler::hinfo::set_edit_active(wmain *main, bool active)$/;"	f	class:clicky::whandler::hinfo
set_eeprom	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *);$/;"	m	struct:_kc_ethtool_ops	file:
set_eeprom	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*set_eeprom)(struct net_device *, struct ethtool_eeprom *, u8 *);$/;"	m	struct:_kc_ethtool_ops	file:
set_entry_capacity	elements/ethernet/arptable.hh	/^    void set_entry_capacity(uint32_t entry_capacity) {$/;"	f	class:ARPTable
set_epoch	include/click/tokenbucket.hh	/^    void set_epoch(epoch_type epoch) {$/;"	f	class:TokenBucketX
set_epoch	include/click/tokenbucket.hh	/^    void set_epoch(epoch_type epoch) {$/;"	f	class:TokenCounterX
set_ether_header	include/click/packet.hh	/^Packet::set_ether_header(const click_ether *ethh)$/;"	f	class:Packet
set_ethtool_ops	drivers/e1000-5.x/src/e1000_ethtool.c	/^void set_ethtool_ops(struct net_device *netdev)$/;"	f
set_facility_level	elements/local/OpenFlow/lib/vlog.cc	/^set_facility_level(enum vlog_facility facility, enum vlog_module module,$/;"	f	file:
set_first	elements/ip/ipratemon.hh	/^  void set_first(Stats *s)                      { _first = s; }$/;"	f	class:IPRateMonitor
set_flags	apps/clicky/src/hvalues.cc	/^void handler_value::set_flags(crouter *cr, int new_flags)$/;"	f	class:clicky::handler_value
set_flow_code_override	lib/router.cc	/^Router::set_flow_code_override(int eindex, const String &flow_code)$/;"	f	class:Router
set_font_description	apps/clicky/src/dwidget.cc	/^void dcontext::set_font_description(const String &font)$/;"	f	class:clicky::dcontext
set_foreground	include/click/router.hh	/^Router::set_foreground(bool foreground)$/;"	f	class:Router
set_fraction	include/click/tokenbucket.hh	/^    void set_fraction(token_type f) {$/;"	f	class:TokenBucketX
set_fraction	include/click/tokenbucket.hh	/^    void set_fraction(token_type f) {$/;"	f	class:TokenCounterX
set_free_next	elements/ip6/addresstranslator.hh	/^  void set_free_next(Mapping *m)      {_free_next = m;}$/;"	f	class:AddressTranslator::Mapping
set_full	include/click/tokenbucket.hh	/^    void set_full() {$/;"	f	class:TokenBucketX
set_full	include/click/tokenbucket.hh	/^    void set_full() {$/;"	f	class:TokenCounterX
set_greedy	include/click/routerthread.hh	/^    void set_greedy(bool g)		{ _greedy = g; }$/;"	f	class:RouterThread
set_handler	lib/element.cc	/^Element::set_handler(const String &name, int flags, HandlerCallback callback, int read_user_data, int write_user_data)$/;"	f	class:Element
set_handler	lib/element.cc	/^Element::set_handler(const String& name, int flags, HandlerCallback callback, const void *read_user_data, const void *write_user_data)$/;"	f	class:Element
set_handler	lib/router.cc	/^Router::set_handler(const Element *e, const String &hname, uint32_t flags,$/;"	f	class:Router
set_handler_flags	lib/element.cc	/^Element::set_handler_flags(const String& name, int set_flags, int clear_flags)$/;"	f	class:Element
set_handler_flags	lib/router.cc	/^Router::set_handler_flags(const Element *e, const String &hname,$/;"	f	class:Router
set_handlers	apps/clicky/src/hvalues.cc	/^void handler_values::set_handlers(const String &hname, const String &, const String &hvalue)$/;"	f	class:clicky::handler_values
set_head	include/click/standard/storage.hh	/^    void set_head(index_type h)		{ _head = h; }$/;"	f	class:Storage
set_hinfo_autorefresh_period	apps/clicky/src/whandler.cc	/^void whandler::set_hinfo_autorefresh_period(const String &hname, int period)$/;"	f	class:clicky::whandler
set_hinfo_flags	apps/clicky/src/whandler.cc	/^void whandler::set_hinfo_flags(const String &hname, int flags, int flag_values)$/;"	f	class:clicky::whandler
set_hotswap_router	lib/router.cc	/^Router::set_hotswap_router(Router *r)$/;"	f	class:Router
set_hvalue	apps/clicky/src/hvalues.hh	/^    void set_hvalue(const String &hvalue) {$/;"	f	class:clicky::handler_value
set_indent	include/click/error.hh	/^    void set_indent(const String &str) {$/;"	f	class:ContextErrorHandler
set_input	elements/simple/simplepullswitch.cc	/^SimplePullSwitch::set_input(int input)$/;"	f	class:SimplePullSwitch
set_input	elements/standard/pullswitch.cc	/^PullSwitch::set_input(int input)$/;"	f	class:PullSwitch
set_ip6_header	include/click/packet.hh	/^Packet::set_ip6_header(const click_ip6 *ip6h)$/;"	f	class:Packet
set_ip6_header	include/click/packet.hh	/^Packet::set_ip6_header(const click_ip6 *ip6h, uint32_t len)$/;"	f	class:Packet
set_ip_header	include/click/packet.hh	/^Packet::set_ip_header(const click_ip *iph, uint32_t len)$/;"	f	class:Packet
set_landmark	apps/clicky/src/crouter.cc	/^void crouter::set_landmark(const String &landmark)$/;"	f	class:clicky::crouter
set_landmark	include/click/error.hh	/^    void set_landmark(const String &landmark) {$/;"	f	class:LandmarkErrorHandler
set_landmark	tools/lib/elementt.hh	/^    void set_landmark(const LandmarkT &lm) { _landmark = lm; }$/;"	f	struct:ElementT
set_landmark_pattern	include/click/fromfile.hh	/^    void set_landmark_pattern(const String &lp) { _landmark_pattern = lp; }$/;"	f	class:FromFile
set_landmarkt	tools/lib/routert.hh	/^    void set_landmarkt(const LandmarkT &l) { _type_landmark = l; }$/;"	f	class:RouterT
set_last	elements/ip/ipratemon.hh	/^  void set_last(Stats *s)                       { _last = s; }$/;"	f	class:IPRateMonitor
set_length	include/click/straccum.hh	/^    inline void set_length(int len) {$/;"	f	class:StringAccum
set_lexinfo	tools/lib/lexert.cc	/^LexerT::set_lexinfo(LexerTInfo *li)$/;"	f	class:LexerT
set_lineno	include/click/fromfile.hh	/^    void set_lineno(int lineno)		{ _lineno = lineno; }$/;"	f	class:FromFile
set_mac_header	include/click/packet.hh	/^Packet::set_mac_header(const unsigned char *p)$/;"	f	class:Packet
set_mac_header	include/click/packet.hh	/^Packet::set_mac_header(const unsigned char *p, uint32_t len)$/;"	f	class:Packet
set_mask	elements/ip/ipfilter.cc	/^IPFilter::Primitive::set_mask(uint32_t full_mask, int shift, uint32_t provided_mask, ErrorHandler *errh)$/;"	f	class:IPFilter::Primitive
set_max_tickets	elements/bsdmodule/anydevice.hh	/^    void set_max_tickets(int t)		{ _max_tickets = t; }$/;"	f	class:AnyDevice
set_max_timer_stride	lib/timerset.cc	/^TimerSet::set_max_timer_stride(unsigned timer_stride)$/;"	f	class:TimerSet
set_msglevel	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	void	(*set_msglevel)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_msglevel	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	void	(*set_msglevel)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_name	elements/local/FlowNet/common/Algorithm.hh	/^inline void Algorithm::set_name(const char *buf)$/;"	f	class:Algorithm
set_network_header	include/click/packet.hh	/^Packet::set_network_header(const unsigned char *p, uint32_t len)$/;"	f	class:Packet
set_network_header_length	include/click/packet.hh	/^Packet::set_network_header_length(uint32_t len)$/;"	f	class:Packet
set_new_dest	elements/grid/gridlocationinfo.cc	/^GridLocationInfo::set_new_dest(double v_lat, double v_lon)$/;"	f	class:GridLocationInfo
set_new_eindex_collector	tools/lib/routert.hh	/^    void set_new_eindex_collector(Vector<int> *v) { _new_eindex_collector=v; }$/;"	f	class:RouterT
set_next	elements/analysis/aggpktcounter.hh	/^	void set_next(Flow *next)	{ _next = next; }$/;"	f	class:AggregatePacketCounter::Flow
set_next	elements/analysis/toipflowdumps.hh	/^	void set_next(Flow *f)		{ _next = f; }$/;"	f	class:ToIPFlowDumps::Flow
set_next	elements/bsdmodule/anydevice.hh	/^    void set_next(AnyDevice *d)		{ _next = d; }$/;"	f	class:AnyDevice
set_next	elements/ip/ipratemon.hh	/^  void set_next(Stats *s)                       { _next_deleted = s; }$/;"	f	class:IPRateMonitor
set_next	elements/ip6/addresstranslator.hh	/^  void set_next(Mapping * next)       { _next = next; }$/;"	f	class:AddressTranslator::Mapping
set_next	elements/userlevel/ipflowrawsockets.hh	/^	void set_next(Flow *f)		{ _next = f; }$/;"	f	class:IPFlowRawSockets::Flow
set_next	include/click/packet.hh	/^Packet::set_next(Packet *p)$/;"	f	class:Packet
set_next_errpos	apps/clicky/src/gathererror.hh	/^    void set_next_errpos(int ep1, int ep2) {$/;"	f	class:GatherErrorHandler
set_ninputs	tools/lib/elementt.hh	/^    inline void set_ninputs(int n) {$/;"	f	struct:ElementT
set_node_loc	elements/grid/radiosim.cc	/^RadioSim::set_node_loc(int i, double lat, double lon)$/;"	f	class:RadioSim
set_nonblocking	elements/local/OpenFlow/lib/socket-util.cc	/^set_nonblocking(int fd)$/;"	f
set_noutputs	tools/lib/elementt.hh	/^    inline void set_noutputs(int n) {$/;"	f	struct:ElementT
set_now	include/click/timestamp.hh	/^Timestamp::set_now()$/;"	f	class:Timestamp
set_nports	lib/element.cc	/^Element::set_nports(int new_ninputs, int new_noutputs)$/;"	f	class:Element
set_nsec	include/click/timestamp.hh	/^inline void Timestamp::set_nsec(seconds_type sec, uint32_t nsec) {$/;"	f	class:Timestamp
set_nw_addr	elements/local/OpenFlow/lib/dp_act.cc	/^set_nw_addr(struct ofpbuf *buffer, struct sw_flow_key *key, $/;"	f	file:
set_nw_tos	elements/local/OpenFlow/lib/dp_act.cc	/^set_nw_tos(struct ofpbuf *buffer, struct sw_flow_key *key, $/;"	f	file:
set_option_text	lib/clp.c	/^set_option_text(Clp_Internal *cli, const char *text, int n_option_chars)$/;"	f	file:
set_origin	apps/clicky/src/rectangle.hh	/^    void set_origin(const point &p) {$/;"	f	struct:rectangle
set_origin	apps/clicky/src/rectangle.hh	/^    void set_origin(double x, double y) {$/;"	f	struct:rectangle
set_overload_type	lib/lexer.cc	/^  void set_overload_type(int t)		{ _overload_type = t; }$/;"	f	class:Lexer::Compound
set_overload_type	tools/lib/routert.cc	/^RouterT::set_overload_type(ElementClassT *t)$/;"	f	class:RouterT
set_packet_lengths	elements/analysis/fromipsumdump.cc	/^set_packet_lengths(Packet *p, uint32_t extra_length)$/;"	f
set_packet_lengths	elements/analysis/fromnetflowsumdump.cc	/^set_packet_lengths(Packet *p, uint32_t extra_length)$/;"	f
set_packet_type_anno	include/click/packet.hh	/^Packet::set_packet_type_anno(PacketType p)$/;"	f	class:Packet
set_pad_bytes	elements/grid/grid.hh	/^    static void set_pad_bytes(struct grid_hdr &gh, uint32_t v)$/;"	f	struct:grid_hdr
set_pauseparam	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*set_pauseparam)(struct net_device *, struct ethtool_pauseparam*);$/;"	m	struct:_kc_ethtool_ops	file:
set_pauseparam	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*set_pauseparam)(struct net_device *, struct ethtool_pauseparam*);$/;"	m	struct:_kc_ethtool_ops	file:
set_prev	elements/ip/ipratemon.hh	/^  void set_prev(Stats *s)                       { _prev_deleted = s; }$/;"	f	class:IPRateMonitor
set_prev	elements/ip6/addresstranslator.hh	/^  void set_prev(Mapping * prev)       { _prev = prev; }$/;"	f	class:AddressTranslator::Mapping
set_prev	include/click/packet.hh	/^Packet::set_prev(Packet *p)$/;"	f	class:Packet
set_printable_name	tools/lib/eclasst.hh	/^    void set_printable_name(const String &s) { _printable_name = s; }$/;"	f	class:ElementClassT
set_program_name	elements/local/OpenFlow/lib/util.cc	/^void set_program_name(const char *argv0)$/;"	f
set_promisc	elements/bsdmodule/anydevice.hh	/^    void set_promisc()                  { _promisc = true; }$/;"	f	class:AnyDevice
set_promiscuous	elements/userlevel/fromdevice.cc	/^FromDevice::set_promiscuous(int fd, String ifname, bool promisc)$/;"	f	class:FromDevice
set_rate	elements/local/standard/ratesettable_bandwidthshaper.hh	/^    void set_rate(int r) { _rate.set_rate(r, NULL); }$/;"	f	class:RateSettableBandwidthShaper
set_rate	include/click/gaprate.hh	/^GapRate::set_rate(unsigned r)$/;"	f	class:GapRate
set_rate	lib/gaprate.cc	/^GapRate::set_rate(unsigned r, ErrorHandler *errh)$/;"	f	class:GapRate
set_remaining_text	lib/lexer.cc	/^Lexer::set_remaining_text(const String &s)$/;"	f	class:Lexer
set_remaining_text	tools/lib/lexert.cc	/^LexerT::set_remaining_text(const String &s)$/;"	f	class:LexerT
set_reply_anno	elements/ip/iprwmapping.hh	/^    void set_reply_anno(uint8_t reply_anno) {$/;"	f	class:IPRewriterFlow
set_resettime	elements/ip/ipratemon.hh	/^  void set_resettime() {$/;"	f	class:IPRateMonitor
set_ringparam	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*set_ringparam)(struct net_device *, struct ethtool_ringparam *);$/;"	m	struct:_kc_ethtool_ops	file:
set_ringparam	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*set_ringparam)(struct net_device *, struct ethtool_ringparam *);$/;"	m	struct:_kc_ethtool_ops	file:
set_route_cb_bit	elements/grid/gridroutecb.hh	/^  static void set_route_cb_bit(Packet *p, unsigned int cb_num) {$/;"	f	class:GridRouteActionCallback
set_runcount	lib/router.cc	/^Router::set_runcount(int32_t rc)$/;"	f	class:Router
set_rx_csum	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*set_rx_csum)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_rx_csum	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*set_rx_csum)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_saddr	include/click/ip6flowid.hh	/^  void set_saddr(const IP6Address &a)	{ _saddr = a; }$/;"	f	class:IP6FlowID
set_saddr	include/click/ipflowid.hh	/^    void set_saddr(IPAddress a) {$/;"	f	class:IPFlowID
set_save_file	apps/clicky/src/wmain.cc	/^void wmain::set_save_file(const String &savefile, bool loading)$/;"	f	class:clicky::wmain
set_sec	include/click/timestamp.hh	/^Timestamp::set_sec(seconds_type sec)$/;"	f	class:Timestamp
set_seed	apps/clicky/src/crouter.cc	/^void crouter::reachable_match_t::set_seed(const ConnectionT &conn)$/;"	f	class:clicky::crouter::reachable_match_t
set_seed_connections	apps/clicky/src/crouter.cc	/^void crouter::reachable_match_t::set_seed_connections(ElementT *e, int port)$/;"	f	class:clicky::crouter::reachable_match_t
set_settings	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*set_settings)(struct net_device *, struct ethtool_cmd *);$/;"	m	struct:_kc_ethtool_ops	file:
set_settings	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*set_settings)(struct net_device *, struct ethtool_cmd *);$/;"	m	struct:_kc_ethtool_ops	file:
set_sg	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*set_sg)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_sg	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*set_sg)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_show_list	apps/clicky/src/wmain.cc	/^void wmain::set_show_list(bool show_list)$/;"	f	class:clicky::wmain
set_show_toolbar	apps/clicky/src/wmain.cc	/^void wmain::set_show_toolbar(bool show_toolbar)$/;"	f	class:clicky::wmain
set_sim_packetinfo	include/click/packet.hh	/^    void set_sim_packetinfo(simclick_simpacketinfo* pinfo) {$/;"	f	class:Packet
set_size	apps/clicky/src/rectangle.hh	/^    void set_size(double width, double height) {$/;"	f	struct:rectangle
set_socket_priority	elements/local/OpenFlow/lib/socket-util.cc	/^set_socket_priority(int fd, int priority)$/;"	f
set_sport	include/click/ip6flowid.hh	/^  void set_sport(uint16_t p)		{ _sport = p; }$/;"	f	class:IP6FlowID
set_sport	include/click/ipflowid.hh	/^    void set_sport(uint16_t p) {$/;"	f	class:IPFlowID
set_srcdst	elements/ip/ipfilter.cc	/^IPFilter::Primitive::set_srcdst(int x, ErrorHandler *errh)$/;"	f	class:IPFilter::Primitive
set_stability_shift	include/click/ewma.hh	/^    void set_stability_shift(unsigned stability_shift) {$/;"	f	class:StabilityEWMAXParameters
set_state	elements/etherswitch/spantree.cc	/^EtherSpanTree::set_state(int i, PortState state)$/;"	f	class:EtherSpanTree
set_stopper	include/click/master.hh	/^Master::set_stopper(int s)$/;"	f	class:Master
set_subsec	include/click/timestamp.hh	/^Timestamp::set_subsec(uint32_t subsec)$/;"	f	class:Timestamp
set_tail	include/click/standard/storage.hh	/^    void set_tail(index_type t)		{ _tail = t; }$/;"	f	class:Storage
set_thread_sched	include/click/router.hh	/^Router::set_thread_sched(ThreadSched* ts)$/;"	f	class:Router
set_thread_state	include/click/routerthread.hh	/^RouterThread::set_thread_state(int state)$/;"	f	class:RouterThread
set_thread_state_for_blocking	include/click/routerthread.hh	/^RouterThread::set_thread_state_for_blocking(int delay_type)$/;"	f	class:RouterThread
set_tickets	elements/standard/stridesched.cc	/^StrideSched::set_tickets(int port, int tickets, ErrorHandler *errh)$/;"	f	class:StrideSched
set_tickets	elements/standard/stridesched.hh	/^	void set_tickets(int t) {$/;"	f	struct:StrideSched::Client
set_tickets	include/click/task.hh	/^Task::set_tickets(int n)$/;"	f	class:Task
set_timeout	elements/ethernet/arptable.hh	/^    void set_timeout(const Timestamp &timeout) {$/;"	f	class:ARPTable
set_timer_expiry	include/click/timerset.hh	/^    void set_timer_expiry() {$/;"	f	class:TimerSet
set_timestamp_anno	include/click/packet.hh	/^Packet::set_timestamp_anno(const Timestamp &timestamp)$/;"	f	class:Packet
set_timeval_ioctl	lib/timestamp.cc	/^Timestamp::set_timeval_ioctl(int fd, int ioctl_selector)$/;"	f	class:Timestamp
set_tp_port	elements/local/OpenFlow/lib/dp_act.cc	/^set_tp_port(struct ofpbuf *buffer, struct sw_flow_key *key, $/;"	f	file:
set_transp_proto	elements/ip/ipfilter.cc	/^IPFilter::Primitive::set_transp_proto(int x, ErrorHandler *errh)$/;"	f	class:IPFilter::Primitive
set_tso	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*set_tso)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_tso	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*set_tso)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_tx_csum	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*set_tx_csum)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_tx_csum	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*set_tx_csum)(struct net_device *, u32);$/;"	m	struct:_kc_ethtool_ops	file:
set_type	elements/ip/ipfilter.cc	/^IPFilter::Primitive::set_type(int x, ErrorHandler *errh)$/;"	f	class:IPFilter::Primitive
set_type	tools/lib/elementt.cc	/^ElementT::set_type(ElementClassT *t)$/;"	f	class:ElementT
set_usec	include/click/timestamp.hh	/^inline void Timestamp::set_usec(seconds_type sec, uint32_t usec) {$/;"	f	class:Timestamp
set_user_anno_c	include/click/packet.hh	/^inline void Packet::set_user_anno_c(int i, uint8_t v) {$/;"	f	class:Packet
set_user_anno_i	include/click/packet.hh	/^inline void Packet::set_user_anno_i(int i, int32_t v) {$/;"	f	class:Packet
set_user_anno_s	include/click/packet.hh	/^inline void Packet::set_user_anno_s(int i, int16_t v) {$/;"	f	class:Packet
set_user_anno_s32	include/click/packet.hh	/^inline void Packet::set_user_anno_s32(int i, int32_t v) {$/;"	f	class:Packet
set_user_anno_u	include/click/packet.hh	/^inline void Packet::set_user_anno_u(int i, uint32_t v) {$/;"	f	class:Packet
set_user_anno_u16	include/click/packet.hh	/^inline void Packet::set_user_anno_u16(int i, uint16_t v) {$/;"	f	class:Packet
set_user_anno_u32	include/click/packet.hh	/^inline void Packet::set_user_anno_u32(int i, uint32_t v) {$/;"	f	class:Packet
set_user_anno_u64	include/click/packet.hh	/^inline void Packet::set_user_anno_u64(int i, uint64_t v) {$/;"	f	class:Packet
set_user_anno_u8	include/click/packet.hh	/^inline void Packet::set_user_anno_u8(int i, uint8_t v) {$/;"	f	class:Packet
set_user_anno_us	include/click/packet.hh	/^inline void Packet::set_user_anno_us(int i, uint16_t v) {$/;"	f	class:Packet
set_user_data	tools/lib/elementt.hh	/^    void set_user_data(intptr_t v)	{ _user_data = (void *)v; }$/;"	f	struct:ElementT
set_user_data	tools/lib/elementt.hh	/^    void set_user_data(void *v)		{ _user_data = v; }$/;"	f	struct:ElementT
set_value	include/click/handlercall.hh	/^    void set_value(const String &value) {$/;"	f	class:HandlerCall
set_vlan_pcp	elements/local/OpenFlow/lib/dp_act.cc	/^set_vlan_pcp(struct ofpbuf *buffer, struct sw_flow_key *key, $/;"	f	file:
set_vlan_vid	elements/local/OpenFlow/lib/dp_act.cc	/^set_vlan_vid(struct ofpbuf *buffer, struct sw_flow_key *key, $/;"	f	file:
set_wol	drivers/e1000-5.x/src/kcompat_ethtool.c	/^	int	(*set_wol)(struct net_device *, struct ethtool_wolinfo *);$/;"	m	struct:_kc_ethtool_ops	file:
set_wol	drivers/e1000-7.x/src/kcompat_ethtool.c	/^	int	(*set_wol)(struct net_device *, struct ethtool_wolinfo *);$/;"	m	struct:_kc_ethtool_ops	file:
set_z_index	apps/clicky/src/dwidget.hh	/^    void set_z_index(int z_index) {$/;"	f	class:clicky::dwidget
setsimstate	ns/nsclick.cc	/^static void setsimstate(simclick_node_t *newstate) {$/;"	f	file:
setup	elements/local/FlowNet/common/Flow.cc	/^int Flow::setup(const struct FlowID* f)$/;"	f	class:Flow
setup_iptos	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^void PFSchedFW::setup_iptos(Packet* p, uint8_t priority)$/;"	f	class:PFSchedFW
setup_packet	elements/standard/infinitesource.cc	/^InfiniteSource::setup_packet()$/;"	f	class:InfiniteSource
setup_packet	elements/standard/ratedsource.cc	/^RatedSource::setup_packet()$/;"	f	class:RatedSource
setup_tun	elements/userlevel/fromhost.cc	/^FromHost::setup_tun(ErrorHandler *errh)$/;"	f	class:FromHost
setup_tun	elements/userlevel/kerneltun.cc	/^KernelTun::setup_tun(ErrorHandler *errh)$/;"	f	class:KernelTun
sf_acts	elements/local/OpenFlow/lib/switch-flow.hh	/^    struct sw_flow_actions *sf_acts;$/;"	m	struct:sw_flow	typeref:struct:sw_flow::sw_flow_actions
sha1_block	elements/ipsec/sha1_impl.cc	/^sha1_block (SHA1_ctx *c, register unsigned long *W, int num)$/;"	f
sha1_block	elements/ipsec/sha1_impl.cc	257;"	d	file:
sha1_block	elements/ipsec/sha1_impl.cc	264;"	d	file:
shadow	apps/clicky/src/dwidget.cc	/^double delt::shadow(double scale, int side) const$/;"	f	class:clicky::delt
shadow_color	apps/clicky/src/dstyle.hh	/^    double shadow_color[4];$/;"	m	struct:clicky::delt_style
shadow_style	apps/clicky/src/dstyle.hh	/^    int shadow_style;$/;"	m	struct:clicky::delt_style
shadow_width	apps/clicky/src/dstyle.hh	/^    double shadow_width;$/;"	m	struct:clicky::delt_style
shape	apps/clicky/src/dstyle.hh	/^    int shape;$/;"	m	struct:clicky::dport_style
shape_method	elements/local/FlowNet/common/FlowNetGod.hh	/^	int shape_method;	$/;"	m	struct:paramset_mpeg2_shapertable
shared	include/click/packet.hh	/^Packet::shared() const$/;"	f	class:Packet
shear	apps/clicky/src/transform.cc	/^affine::shear(double s)$/;"	f	class:affine
sheared	apps/clicky/src/transform.hh	/^affine::sheared(double s) const$/;"	f	class:affine
shell_command_output_string	lib/userutils.cc	/^shell_command_output_string(String cmdline, const String &input, ErrorHandler *errh)$/;"	f
shell_expand	configure	/^shell_expand () {$/;"	f
shell_quote	lib/userutils.cc	/^shell_quote(const String &str, bool quote_tilde)$/;"	f
shift	apps/clicky/src/rectangle.hh	/^    void shift(const point &p) {$/;"	f	struct:point
shift	apps/clicky/src/rectangle.hh	/^    void shift(const point &p) {$/;"	f	struct:rectangle
shift	apps/clicky/src/rectangle.hh	/^    void shift(double dx, double dy) {$/;"	f	struct:point
shift	apps/clicky/src/rectangle.hh	/^    void shift(double dx, double dy) {$/;"	f	struct:rectangle
shift_branch	elements/standard/classification.cc	/^DominatorOptimizer::shift_branch(int state, bool branch)$/;"	f	class:Classification::Wordwise::DominatorOptimizer
shift_contents	apps/clicky/src/dwidget.cc	/^void delt::shift_contents(double dx, double dy) const$/;"	f	class:clicky::delt
shift_data	lib/packet.cc	/^Packet::shift_data(int offset, bool free_on_failure)$/;"	f	class:Packet
shift_header_annotations	include/click/packet.hh	/^Packet::shift_header_annotations(const unsigned char *old_head,$/;"	f	class:Packet
shift_heap_best_effort	elements/ip/iprewriterbase.cc	/^IPRewriterBase::shift_heap_best_effort(click_jiffies_t now_j)$/;"	f	class:IPRewriterBase
shift_pos	include/click/fromfile.hh	/^    void shift_pos(int delta)		{ _pos += delta; }$/;"	f	class:FromFile
shifted	apps/clicky/src/rectangle.hh	/^    point shifted(const point &p) const {$/;"	f	struct:point
shifts	lib/bighashmap_arena.cc	/^static const int shifts[2] = { 2, 7 };$/;"	v	file:
shifts2	elements/ipsec/des.cc	/^static char shifts2[16]={0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0};$/;"	v	file:
short_name	include/click/clp.h	/^    int short_name;		\/**< Character defining short option, or 0 if$/;"	m	struct:Clp_Option
short_output	elements/standard/classification.hh	/^    uint8_t short_output;$/;"	m	struct:Classification::Wordwise::Insn
short_output	tools/click-fastclassifier/click-fastclassifier.hh	/^    bool short_output;$/;"	m	struct:Classifier_Insn
short_usage	tools/click-align/click-align.cc	/^short_usage()$/;"	f
short_usage	tools/click-check/click-check.cc	/^short_usage()$/;"	f
short_usage	tools/click-combine/click-combine.cc	/^short_usage()$/;"	f
short_usage	tools/click-combine/click-uncombine.cc	/^short_usage()$/;"	f
short_usage	tools/click-devirtualize/click-devirtualize.cc	/^short_usage()$/;"	f
short_usage	tools/click-fastclassifier/click-fastclassifier.cc	/^short_usage()$/;"	f
short_usage	tools/click-flatten/click-flatten.cc	/^short_usage()$/;"	f
short_usage	tools/click-install/click-install.cc	/^short_usage()$/;"	f
short_usage	tools/click-install/click-uninstall.cc	/^short_usage()$/;"	f
short_usage	tools/click-mkmindriver/click-mkmindriver.cc	/^short_usage()$/;"	f
short_usage	tools/click-pretty/click-pretty.cc	/^short_usage()$/;"	f
short_usage	tools/click-undead/click-undead.cc	/^short_usage()$/;"	f
short_usage	tools/click-xform/click-xform.cc	/^short_usage()$/;"	f
short_usage	tools/click2xml/click2xml.cc	/^short_usage()$/;"	f
short_usage	tools/click2xml/xml2click.cc	/^short_usage()$/;"	f
short_usage	userlevel/click.cc	/^short_usage()$/;"	f
should_drop	elements/aqm/pi.cc	/^PI::should_drop()$/;"	f	class:PI
should_drop	elements/aqm/red.cc	/^RED::should_drop()$/;"	f	class:RED
should_replace_old_route	elements/grid/gridroutetable.cc	/^GridRouteTable::should_replace_old_route(const RTEntry &old_route, const RTEntry &new_route)$/;"	f	class:GridRouteTable
should_rewrite	tools/click-devirtualize/cxxclass.hh	/^  bool should_rewrite(int i) const	{ return _should_rewrite[i]; }$/;"	f	class:CxxClass
show	apps/clicky/src/wmain.cc	/^void wmain::show()$/;"	f	class:clicky::wmain
show_actions	apps/clicky/src/whandler.cc	/^void whandler::show_actions(GtkWidget *near, const String &hname, bool changed)$/;"	f	class:clicky::whandler
show_agelist	elements/ip/ipratemon.cc	/^IPRateMonitor::show_agelist(void)$/;"	f	class:IPRateMonitor
show_list	apps/clicky/src/wmain.hh	/^    bool show_list() const {$/;"	f	class:clicky::wmain
show_queue_get_config_reply	elements/local/OpenFlow/lib/ofp-print.cc	/^show_queue_get_config_reply(struct ds *string, const void *oh,$/;"	f	file:
show_queue_props	elements/local/OpenFlow/lib/ofp-print.cc	/^show_queue_props(struct ds *string, const struct ofp_packet_queue *queue_desc)$/;"	f	file:
show_toolbar	apps/clicky/src/wmain.hh	/^    bool show_toolbar() const {$/;"	f	class:clicky::wmain
showmessage	test/testie	/^sub showmessage ($@) {$/;"	s
shquote	test/testie	/^sub shquote ($) {$/;"	s
shrink	include/click/dequeue.cc	/^DEQueue<T>::shrink(int nn)$/;"	f	class:DEQueue
shrink_data	include/click/packet.hh	/^Packet::shrink_data(const unsigned char *data, uint32_t length)$/;"	f	class:Packet
shrink_heap	elements/ip/iprewriterbase.cc	/^IPRewriterBase::shrink_heap(bool clear_all)$/;"	f	class:IPRewriterBase
shrink_heap_for_new_flow	elements/ip/iprewriterbase.cc	/^IPRewriterBase::shrink_heap_for_new_flow(IPRewriterFlow *flow,$/;"	f	class:IPRewriterBase
si	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	struct SchedInfo si;$/;"	m	class:FlowSchedulable	typeref:struct:FlowSchedulable::SchedInfo
si	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^	struct BWShapeInfo si;$/;"	m	class:FlowBWShaperable	typeref:struct:FlowBWShaperable::BWShapeInfo
siaddr	include/clicknet/dhcp.h	/^	uint32_t siaddr;       \/* should be zero in client's messages *\/$/;"	m	struct:click_dhcp
side	apps/clicky/src/rectangle.hh	/^    double side(int s) const {$/;"	f	struct:rectangle
side_bottom	apps/clicky/src/rectangle.hh	/^	side_bottom = 2,$/;"	e	enum:rectangle::__anon21
side_greater	apps/clicky/src/rectangle.hh	/^    static bool side_greater(int s) {$/;"	f	struct:rectangle
side_horizontal	apps/clicky/src/rectangle.hh	/^    static bool side_horizontal(int s) {$/;"	f	struct:rectangle
side_left	apps/clicky/src/rectangle.hh	/^	side_left = 3$/;"	e	enum:rectangle::__anon21
side_length	apps/clicky/src/rectangle.hh	/^    double side_length(int s) const {$/;"	f	struct:rectangle
side_right	apps/clicky/src/rectangle.hh	/^	side_right = 1,$/;"	e	enum:rectangle::__anon21
side_top	apps/clicky/src/rectangle.hh	/^	side_top = 0,$/;"	e	enum:rectangle::__anon21
side_vertical	apps/clicky/src/rectangle.hh	/^    static bool side_vertical(int s) {$/;"	f	struct:rectangle
sig	include/click/router.hh	/^	atomic_uint32_t sig[capacity \/ 32];$/;"	m	struct:Router::notifier_signals_t
sig_bot	elements/grid/linktracker.hh	/^    double sig_bot;$/;"	m	struct:LinkTracker::stat_t
sig_to_pct	elements/grid/gridroutetable.cc	/^GridRouteTable::sig_to_pct(int s)$/;"	f	class:GridRouteTable
sig_top	elements/grid/linktracker.hh	/^    double sig_top;$/;"	m	struct:LinkTracker::stat_t
sigalrm_handler	elements/local/OpenFlow/lib/timeval.cc	/^sigalrm_handler(int sig_nr)$/;"	f	file:
sigfigs	elements/linuxmodule/touserdevice.cc	/^    uint32_t sigfigs;	     \/* accuracy of timestamps *\/$/;"	m	struct:pcap_hdr	file:
sigfigs	elements/local/OpenFlow/lib/pcap.cc	/^    uint32_t sigfigs;        \/* accuracy of timestamps *\/$/;"	m	struct:pcap_hdr	file:
sigfigs	elements/userlevel/fakepcap.hh	/^	uint32_t sigfigs;	\/* accuracy of timestamps *\/$/;"	m	struct:fake_pcap_file_header
sighandler	lib/master.cc	/^sighandler(int signo)$/;"	f	file:
sign	elements/grid/grid.hh	/^  static int sign(double x) { return (((x) < 0) ? -1 : 1); }$/;"	f	struct:grid_location
signal	elements/analysis/timesortedsched.hh	/^	NotifierSignal signal;$/;"	m	struct:TimeSortedSched::input_s
signal	elements/standard/drr.hh	/^	NotifierSignal signal;$/;"	m	struct:DRRSched::portinfo
signal	include/click/notifier.hh	/^Notifier::signal() const$/;"	f	class:Notifier
signal	include/clicknet/wifi.h	/^  p80211item_uint32_t signal;$/;"	m	struct:__anon498
signal_entries	elements/standard/script.cc	/^static const StaticNameDB::Entry signal_entries[] = {$/;"	v	file:
signal_handler	lib/master.cc	/^Master::signal_handler(int signo)$/;"	f	class:Master
signal_handler	lib/userutils.cc	/^signal_handler(int)$/;"	f	file:
signal_pending	lib/master.cc	/^static volatile sig_atomic_t signal_pending[NSIG];$/;"	v	file:
signal_thread	lib/master.cc	/^static RouterThread *signal_thread;$/;"	v	file:
signals_pending	include/click/master.hh	/^    static volatile sig_atomic_t signals_pending;$/;"	m	class:Master
signals_pending	lib/master.cc	/^volatile sig_atomic_t Master::signals_pending;$/;"	m	class:Master	file:
signature	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t signature;$/;"	m	struct:e1000_host_mng_dhcp_cookie
signature	lib/lexer.cc	/^Lexer::Compound::signature() const$/;"	f	class:Lexer::Compound
signature	lib/lexer.cc	/^Lexer::Compound::signature(const String &name, const Vector<String> *formal_types, int nargs, int ninputs, int noutputs)$/;"	f	class:Lexer::Compound
signature_ids	tools/click-devirtualize/signature.hh	/^  const Vector<int> &signature_ids() const	{ return _sigid; }$/;"	f	class:Signatures
signed_type	include/click/type_traits.hh	/^    typedef int signed_type;$/;"	t	struct:integer_traits
signed_type	include/click/type_traits.hh	/^    typedef int64_t signed_type;$/;"	t	struct:integer_traits
signed_type	include/click/type_traits.hh	/^    typedef long long signed_type;$/;"	t	struct:integer_traits
signed_type	include/click/type_traits.hh	/^    typedef long signed_type;$/;"	t	struct:integer_traits
signed_type	include/click/type_traits.hh	/^    typedef short signed_type;$/;"	t	struct:integer_traits
signed_type	include/click/type_traits.hh	/^    typedef signed char signed_type;$/;"	t	struct:integer_traits
signed_value_type	include/click/ewma.hh	/^    typedef U signed_value_type;$/;"	t	class:FixedEWMAXParameters
signed_value_type	include/click/ewma.hh	/^    typedef U signed_value_type;$/;"	t	class:StabilityEWMAXParameters
signed_value_type	include/click/ewma.hh	/^    typedef typename P::signed_value_type signed_value_type;$/;"	t	class:RateEWMAX
signed_value_type	lib/args.cc	/^typedef click_int_large_t signed_value_type;$/;"	t	namespace:__anon505	file:
signo	include/click/master.hh	/^	int signo;$/;"	m	struct:Master::SignalInfo
silence	include/clicknet/wifi.h	/^  uint8_t silence;$/;"	m	struct:click_wifi_extra
silent_handler	include/click/error.hh	/^    static ErrorHandler *silent_handler() {$/;"	f	class:ErrorHandler
sim	ns/nsclick-test.cc	/^	TestClickSimulator *sim;$/;"	m	struct:TestClickSimulator::clicknode	file:
sim_get_ifid	lib/router.cc	/^Router::sim_get_ifid(const char* ifname) {$/;"	f	class:Router
sim_get_next_pkt_id	lib/router.cc	/^Router::sim_get_next_pkt_id() {$/;"	f	class:Router
sim_get_node_id	lib/router.cc	/^Router::sim_get_node_id() {$/;"	f	class:Router
sim_if_promisc	lib/router.cc	/^Router::sim_if_promisc(int ifid) {$/;"	f	class:Router
sim_if_ready	lib/router.cc	/^Router::sim_if_ready(int ifid) {$/;"	f	class:Router
sim_incoming_packet	lib/router.cc	/^Router::sim_incoming_packet(int ifid, int ptype, const unsigned char* data,$/;"	f	class:Router
sim_listen	lib/router.cc	/^Router::sim_listen(int ifid, int element) {$/;"	f	class:Router
sim_listenvec	lib/router.cc	/^Router::sim_listenvec(int ifid) {$/;"	f	class:Router
sim_trace	lib/router.cc	/^Router::sim_trace(const char* event) {$/;"	f	class:Router
sim_write	lib/router.cc	/^Router::sim_write(int ifid,int ptype,const unsigned char* data,int len,$/;"	f	class:Router
simclick_click_command	ns/nsclick.cc	/^int simclick_click_command(simclick_node_t *, int cmd, ...)$/;"	f
simclick_click_create	ns/nsclick.cc	/^int simclick_click_create(simclick_node_t *simnode, const char* router_file) {$/;"	f
simclick_click_kill	ns/nsclick.cc	/^void simclick_click_kill(simclick_node_t *simnode) {$/;"	f
simclick_click_read_handler	ns/nsclick.cc	/^char* simclick_click_read_handler(simclick_node_t *simnode,$/;"	f
simclick_click_run	ns/nsclick.cc	/^void simclick_click_run(simclick_node_t *simnode) {$/;"	f
simclick_click_send	ns/nsclick.cc	/^int simclick_click_send(simclick_node_t *simnode,$/;"	f
simclick_click_write_handler	ns/nsclick.cc	/^int simclick_click_write_handler(simclick_node_t *simnode,$/;"	f
simclick_gettimeofday	ns/nsclick.cc	/^int simclick_gettimeofday(struct timeval* tv) {$/;"	f
simclick_node	include/click/simclick.h	/^typedef struct simclick_node {$/;"	s
simclick_node_t	include/click/simclick.h	/^} simclick_node_t;$/;"	t	typeref:struct:simclick_node
simclick_sim_command	ns/nsclick-test.cc	/^simclick_sim_command(simclick_node_t *simnode, int cmd, ...) {$/;"	f
simclick_sim_send	ns/nsclick-test.cc	/^simclick_sim_send(simclick_node_t *simnode,$/;"	f
simclick_simpacketinfo	include/click/simclick.h	/^} simclick_simpacketinfo;$/;"	t	typeref:struct:__anon467
simnode	include/click/master.hh	/^    simclick_node_t *simnode() const		{ return _simnode; }$/;"	f	class:Master
simnode	lib/router.cc	/^Router::simnode() const$/;"	f	class:Router
simnode_	ns/nsclick-test.cc	/^    simclick_node_t *simnode_;$/;"	m	class:TestClickSimulator::PacketEvent	file:
simnode_	ns/nsclick-test.cc	/^    simclick_node_t *simnode_;$/;"	m	class:TestClickSimulator::ScheduledEvent	file:
simple_action	elements/analysis/adjusttimestamp.cc	/^AdjustTimestamp::simple_action(Packet *p)$/;"	f	class:AdjustTimestamp
simple_action	elements/analysis/aggregateipaddrpair.cc	/^AggregateIPAddrPair::simple_action(Packet *p)$/;"	f	class:AggregateIPAddrPair
simple_action	elements/analysis/aggregatepaint.cc	/^AggregatePaint::simple_action(Packet *p)$/;"	f	class:AggregatePaint
simple_action	elements/analysis/anonipaddr.cc	/^AnonymizeIPAddr::simple_action(Packet *p)$/;"	f	class:AnonymizeIPAddr
simple_action	elements/analysis/eraseippayload.cc	/^EraseIPPayload::simple_action(Packet *p_in)$/;"	f	class:EraseIPPayload
simple_action	elements/analysis/settimestampdelta.cc	/^SetTimestampDelta::simple_action(Packet *p)$/;"	f	class:SetTimestampDelta
simple_action	elements/analysis/storetimestamp.cc	/^StoreTimestamp::simple_action(Packet *p)$/;"	f	class:StoreTimestamp
simple_action	elements/analysis/storeudptimeseqrecord.cc	/^Packet* StoreUDPTimeSeqRecord::simple_action(Packet *packet)$/;"	f	class:StoreUDPTimeSeqRecord
simple_action	elements/analysis/timefilter.cc	/^TimeFilter::simple_action(Packet *p)$/;"	f	class:TimeFilter
simple_action	elements/analysis/timerange.cc	/^TimeRange::simple_action(Packet *p)$/;"	f	class:TimeRange
simple_action	elements/analysis/timestampaccum.cc	/^TimestampAccum::simple_action(Packet *p)$/;"	f	class:TimestampAccum
simple_action	elements/app/ftpportmapper.cc	/^FTPPortMapper::simple_action(Packet *p)$/;"	f	class:FTPPortMapper
simple_action	elements/ethernet/arpprint.cc	/^ARPPrint::simple_action(Packet *p)$/;"	f	class:ARPPrint
simple_action	elements/ethernet/arpresponder.cc	/^ARPResponder::simple_action(Packet *p)$/;"	f	class:ARPResponder
simple_action	elements/ethernet/checkarpheader.cc	/^CheckARPHeader::simple_action(Packet *p)$/;"	f	class:CheckARPHeader
simple_action	elements/ethernet/ethermirror.cc	/^EtherMirror::simple_action(Packet *p)$/;"	f	class:EtherMirror
simple_action	elements/ethernet/hostetherfilter.cc	/^HostEtherFilter::simple_action(Packet *p)$/;"	f	class:HostEtherFilter
simple_action	elements/ethernet/ip6ndadvertiser.cc	/^IP6NDAdvertiser::simple_action(Packet *p)$/;"	f	class:IP6NDAdvertiser
simple_action	elements/ethernet/setvlananno.cc	/^SetVLANAnno::simple_action(Packet *p)$/;"	f	class:SetVLANAnno
simple_action	elements/ethernet/storeetheraddress.cc	/^StoreEtherAddress::simple_action(Packet *p)$/;"	f	class:StoreEtherAddress
simple_action	elements/ethernet/stripethervlanheader.cc	/^StripEtherVLANHeader::simple_action(Packet *p)$/;"	f	class:StripEtherVLANHeader
simple_action	elements/ethernet/vlandecap.cc	/^VLANDecap::simple_action(Packet *p)$/;"	f	class:VLANDecap
simple_action	elements/ethernet/vlanencap.cc	/^VLANEncap::simple_action(Packet *p)$/;"	f	class:VLANEncap
simple_action	elements/etherswitch/debugbridge.cc	/^DebugBridge::simple_action(Packet *p)$/;"	f	class:DebugBridge
simple_action	elements/grid/ackresponder.cc	/^ACKResponder::simple_action(Packet *p)$/;"	f	class:ACKResponder
simple_action	elements/grid/ackresponder2.cc	/^ACKResponder2::simple_action(Packet *p)$/;"	f	class:ACKResponder2
simple_action	elements/grid/checkgridheader.cc	/^CheckGridHeader::simple_action(Packet *p)$/;"	f	class:CheckGridHeader
simple_action	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::simple_action(Packet *packet)$/;"	f	class:DSDVRouteTable
simple_action	elements/grid/fixdstloc.cc	/^FixDstLoc::simple_action(Packet *xp)$/;"	f	class:FixDstLoc
simple_action	elements/grid/fixsrcloc.cc	/^FixSrcLoc::simple_action(Packet *xp)$/;"	f	class:FixSrcLoc
simple_action	elements/grid/gridencap.cc	/^GridEncap::simple_action(Packet *p_in)$/;"	f	class:GridEncap
simple_action	elements/grid/gridgatewayinfo.cc	/^GridGatewayInfo::simple_action(Packet *p)$/;"	f	class:GridGatewayInfo
simple_action	elements/grid/gridprobereplyreceiver.cc	/^GridProbeReplyReceiver::simple_action(Packet *p)$/;"	f	class:GridProbeReplyReceiver
simple_action	elements/grid/gridroutetable.cc	/^GridRouteTable::simple_action(Packet *packet)$/;"	f	class:GridRouteTable
simple_action	elements/grid/incseqno.cc	/^IncrementSeqNo::simple_action(Packet *p)$/;"	f	class:IncrementSeqNo
simple_action	elements/grid/linkstat.cc	/^LinkStat::simple_action(Packet *p)$/;"	f	class:LinkStat
simple_action	elements/grid/linktestreceiver.cc	/^LinkTestReceiver::simple_action(Packet *p)$/;"	f	class:LinkTestReceiver
simple_action	elements/grid/linktracker.cc	/^LinkTracker::simple_action(Packet *p)$/;"	f	class:LinkTracker
simple_action	elements/grid/locqueryresponder.cc	/^LocQueryResponder::simple_action(Packet *p)$/;"	f	class:LocQueryResponder
simple_action	elements/grid/lookuplocalgridroute2.cc	/^LookupLocalGridRoute2::simple_action(Packet *packet)$/;"	f	class:LookupLocalGridRoute2
simple_action	elements/grid/packetlogger.cc	/^PacketLogger::simple_action(Packet *p_in)$/;"	f	class:PacketLogger
simple_action	elements/grid/packetlogger2.cc	/^PacketLogger2::simple_action(Packet *p_in)$/;"	f	class:PacketLogger2
simple_action	elements/grid/pep.cc	/^PEP::simple_action(Packet *p)$/;"	f	class:PEP
simple_action	elements/grid/pingpong.cc	/^PingPong::simple_action(Packet *p)$/;"	f	class:PingPong
simple_action	elements/grid/printgrid.cc	/^PrintGrid::simple_action(Packet *p)$/;"	f	class:PrintGrid
simple_action	elements/grid/regionpep.cc	/^EstimateRouterRegion::simple_action(Packet *p)$/;"	f	class:EstimateRouterRegion
simple_action	elements/grid/setgridchecksum.cc	/^SetGridChecksum::simple_action(Packet *xp)$/;"	f	class:SetGridChecksum
simple_action	elements/grid/stripdsrheader.cc	/^StripDSRHeader::simple_action(Packet *p)$/;"	f	class:StripDSRHeader
simple_action	elements/grid/unstripdsrheader.cc	/^UnstripDSRHeader::simple_action(Packet *p_in)$/;"	f	class:UnstripDSRHeader
simple_action	elements/grid/updateroutes.cc	/^UpdateGridRoutes::simple_action(Packet *packet)$/;"	f	class:UpdateGridRoutes
simple_action	elements/icmp/checkicmpheader.cc	/^CheckICMPHeader::simple_action(Packet *p)$/;"	f	class:CheckICMPHeader
simple_action	elements/icmp/icmperror.cc	/^ICMPError::simple_action(Packet *p)$/;"	f	class:ICMPError
simple_action	elements/icmp/icmpipencap.cc	/^ICMPIPEncap::simple_action(Packet *p)$/;"	f	class:ICMPIPEncap
simple_action	elements/icmp/icmppingencap.cc	/^ICMPPingEncap::simple_action(Packet *p)$/;"	f	class:ICMPPingEncap
simple_action	elements/icmp/icmppingresponder.cc	/^ICMPPingResponder::simple_action(Packet *p_in)$/;"	f	class:ICMPPingResponder
simple_action	elements/ip/checkipheader.cc	/^CheckIPHeader::simple_action(Packet *p)$/;"	f	class:CheckIPHeader
simple_action	elements/ip/decipttl.cc	/^DecIPTTL::simple_action(Packet *p)$/;"	f	class:DecIPTTL
simple_action	elements/ip/fixipsrc.cc	/^FixIPSrc::simple_action(Packet *p)$/;"	f	class:FixIPSrc
simple_action	elements/ip/getipaddress.cc	/^GetIPAddress::simple_action(Packet *p)$/;"	f	class:GetIPAddress
simple_action	elements/ip/ipencap.cc	/^IPEncap::simple_action(Packet *p_in)$/;"	f	class:IPEncap
simple_action	elements/ip/ipgwoptions.cc	/^IPGWOptions::simple_action(Packet *p)$/;"	f	class:IPGWOptions
simple_action	elements/ip/ipmirror.cc	/^IPMirror::simple_action(Packet *p_in)$/;"	f	class:IPMirror
simple_action	elements/ip/ipprint.cc	/^IPPrint::simple_action(Packet *p)$/;"	f	class:IPPrint
simple_action	elements/ip/ipreassembler.cc	/^IPReassembler::simple_action(Packet *p)$/;"	f	class:IPReassembler
simple_action	elements/ip/markipce.cc	/^MarkIPCE::simple_action(Packet *p)$/;"	f	class:MarkIPCE
simple_action	elements/ip/markipheader.cc	/^MarkIPHeader::simple_action(Packet *p)$/;"	f	class:MarkIPHeader
simple_action	elements/ip/rfc2507c.cc	/^RFC2507c::simple_action(Packet *p)$/;"	f	class:RFC2507c
simple_action	elements/ip/rfc2507d.cc	/^RFC2507d::simple_action(Packet *p)$/;"	f	class:RFC2507d
simple_action	elements/ip/setipaddress.cc	/^SetIPAddress::simple_action(Packet *p)$/;"	f	class:SetIPAddress
simple_action	elements/ip/setipchecksum.cc	/^SetIPChecksum::simple_action(Packet *p_in)$/;"	f	class:SetIPChecksum
simple_action	elements/ip/setipecn.cc	/^SetIPECN::simple_action(Packet *p)$/;"	f	class:SetIPECN
simple_action	elements/ip/setrandipaddress.cc	/^SetRandIPAddress::simple_action(Packet *p)$/;"	f	class:SetRandIPAddress
simple_action	elements/ip/storeipaddress.cc	/^StoreIPAddress::simple_action(Packet *p)$/;"	f	class:StoreIPAddress
simple_action	elements/ip/stripipheader.cc	/^StripIPHeader::simple_action(Packet *p)$/;"	f	class:StripIPHeader
simple_action	elements/ip/truncateippayload.cc	/^TruncateIPPayload::simple_action(Packet *p)$/;"	f	class:TruncateIPPayload
simple_action	elements/ip/unstripipheader.cc	/^UnstripIPHeader::simple_action(Packet *p)$/;"	f	class:UnstripIPHeader
simple_action	elements/ip6/checkip6header.cc	/^CheckIP6Header::simple_action(Packet *p)$/;"	f	class:CheckIP6Header
simple_action	elements/ip6/decip6hlim.cc	/^DecIP6HLIM::simple_action(Packet *p_in)$/;"	f	class:DecIP6HLIM
simple_action	elements/ip6/getip6address.cc	/^GetIP6Address::simple_action(Packet *p)$/;"	f	class:GetIP6Address
simple_action	elements/ip6/icmp6error.cc	/^ICMP6Error::simple_action(Packet *p)$/;"	f	class:ICMP6Error
simple_action	elements/ip6/ip6encap.cc	/^IP6Encap::simple_action(Packet *p_in)$/;"	f	class:IP6Encap
simple_action	elements/ip6/ip6mirror.cc	/^IP6Mirror::simple_action(Packet *p_in)$/;"	f	class:IP6Mirror
simple_action	elements/ip6/ip6print.cc	/^IP6Print::simple_action(Packet *p)$/;"	f	class:IP6Print
simple_action	elements/ip6/markip6header.cc	/^MarkIP6Header::simple_action(Packet *p)$/;"	f	class:MarkIP6Header
simple_action	elements/ip6/setip6address.cc	/^SetIP6Address::simple_action(Packet *p)$/;"	f	class:SetIP6Address
simple_action	elements/ipsec/aes.cc	/^Aes::simple_action(Packet *p_in)$/;"	f	class:Aes
simple_action	elements/ipsec/des.cc	/^Des::simple_action(Packet *p_in)$/;"	f	class:Des
simple_action	elements/ipsec/desp.cc	/^IPsecESPUnencap::simple_action(Packet *p)$/;"	f	class:IPsecESPUnencap
simple_action	elements/ipsec/esp.cc	/^IPsecESPEncap::simple_action(Packet *p)$/;"	f	class:IPsecESPEncap
simple_action	elements/ipsec/hmacsha1.cc	/^IPsecAuthHMACSHA1::simple_action(Packet *p)$/;"	f	class:IPsecAuthHMACSHA1
simple_action	elements/ipsec/ipsecencap.cc	/^IPsecEncap::simple_action(Packet *p_in)$/;"	f	class:IPsecEncap
simple_action	elements/ipsec/sha1.cc	/^IPsecAuthSHA1::simple_action(Packet *p)$/;"	f	class:IPsecAuthSHA1
simple_action	elements/local/FlowNet/scheduler/IPFragReset.cc	/^IPFragReset::simple_action(Packet *p)$/;"	f	class:IPFragReset
simple_action	elements/radio/b8b10.cc	/^B8B10::simple_action(Packet *p)$/;"	f	class:B8B10
simple_action	elements/radio/checkpattern.cc	/^CheckPattern::simple_action(Packet *p)$/;"	f	class:CheckPattern
simple_action	elements/radio/scramble.cc	/^Scramble::simple_action(Packet *p_in)$/;"	f	class:Scramble
simple_action	elements/standard/averagecounter.cc	/^AverageCounter::simple_action(Packet *p)$/;"	f	class:AverageCounter
simple_action	elements/standard/checkcrc32.cc	/^CheckCRC32::simple_action(Packet *p)$/;"	f	class:CheckCRC32
simple_action	elements/standard/counter.cc	/^Counter::simple_action(Packet *p)$/;"	f	class:Counter
simple_action	elements/standard/dropbroadcasts.cc	/^DropBroadcasts::simple_action(Packet *p)$/;"	f	class:DropBroadcasts
simple_action	elements/standard/markmacheader.cc	/^MarkMACHeader::simple_action(Packet *p)$/;"	f	class:MarkMACHeader
simple_action	elements/standard/nullelement.cc	/^NullElement::simple_action(Packet *p)$/;"	f	class:NullElement
simple_action	elements/standard/nulls.hh	/^  Packet *simple_action(Packet *p)	{ return p; }$/;"	f	class:Null1
simple_action	elements/standard/nulls.hh	/^  Packet *simple_action(Packet *p)	{ return p; }$/;"	f	class:Null2
simple_action	elements/standard/nulls.hh	/^  Packet *simple_action(Packet *p)	{ return p; }$/;"	f	class:Null3
simple_action	elements/standard/nulls.hh	/^  Packet *simple_action(Packet *p)	{ return p; }$/;"	f	class:Null4
simple_action	elements/standard/nulls.hh	/^  Packet *simple_action(Packet *p)	{ return p; }$/;"	f	class:Null5
simple_action	elements/standard/nulls.hh	/^  Packet *simple_action(Packet *p)	{ return p; }$/;"	f	class:Null6
simple_action	elements/standard/nulls.hh	/^  Packet *simple_action(Packet *p)	{ return p; }$/;"	f	class:Null7
simple_action	elements/standard/nulls.hh	/^  Packet *simple_action(Packet *p)	{ return p; }$/;"	f	class:Null8
simple_action	elements/standard/paint.cc	/^Paint::simple_action(Packet *p)$/;"	f	class:Paint
simple_action	elements/standard/painttee.cc	/^PaintTee::simple_action(Packet *p)$/;"	f	class:PaintTee
simple_action	elements/standard/print.cc	/^Print::simple_action(Packet *p)$/;"	f	class:Print
simple_action	elements/standard/randomerror.cc	/^RandomBitErrors::simple_action(Packet *p_in)$/;"	f	class:RandomBitErrors
simple_action	elements/standard/setannobyte.cc	/^SetAnnoByte::simple_action(Packet *p)$/;"	f	class:SetAnnoByte
simple_action	elements/standard/setcrc32.cc	/^SetCRC32::simple_action(Packet *p)$/;"	f	class:SetCRC32
simple_action	elements/standard/setpackettype.cc	/^SetPacketType::simple_action(Packet *p)$/;"	f	class:SetPacketType
simple_action	elements/standard/settimestamp.cc	/^SetTimestamp::simple_action(Packet *p)$/;"	f	class:SetTimestamp
simple_action	elements/standard/storedata.cc	/^StoreData::simple_action(Packet *p)$/;"	f	class:StoreData
simple_action	elements/standard/strip.cc	/^Strip::simple_action(Packet *p)$/;"	f	class:Strip
simple_action	elements/standard/striptonet.cc	/^StripToNetworkHeader::simple_action(Packet *p)$/;"	f	class:StripToNetworkHeader
simple_action	elements/standard/truncate.cc	/^Truncate::simple_action(Packet *p)$/;"	f	class:Truncate
simple_action	elements/standard/unstrip.cc	/^Unstrip::simple_action(Packet *p)$/;"	f	class:Unstrip
simple_action	elements/tcpudp/checktcpheader.cc	/^CheckTCPHeader::simple_action(Packet *p)$/;"	f	class:CheckTCPHeader
simple_action	elements/tcpudp/checkudpheader.cc	/^CheckUDPHeader::simple_action(Packet *p)$/;"	f	class:CheckUDPHeader
simple_action	elements/tcpudp/dynudpipencap.cc	/^DynamicUDPIPEncap::simple_action(Packet *p_in)$/;"	f	class:DynamicUDPIPEncap
simple_action	elements/tcpudp/settcpchecksum.cc	/^SetTCPChecksum::simple_action(Packet *p_in)$/;"	f	class:SetTCPChecksum
simple_action	elements/tcpudp/setudpchecksum.cc	/^SetUDPChecksum::simple_action(Packet *p_in)$/;"	f	class:SetUDPChecksum
simple_action	elements/tcpudp/statelesstcpresp.cc	/^StatelessTCPResponder::simple_action(Packet *p)$/;"	f	class:StatelessTCPResponder
simple_action	elements/tcpudp/udpip6encap.cc	/^UDPIP6Encap::simple_action(Packet *p_in)$/;"	f	class:UDPIP6Encap
simple_action	elements/tcpudp/udpipencap.cc	/^UDPIPEncap::simple_action(Packet *p_in)$/;"	f	class:UDPIPEncap
simple_action	elements/test/checkpacket.cc	/^CheckPacket::simple_action(Packet *p)$/;"	f	class:CheckPacket
simple_action	elements/test/neighborhoodtest.cc	/^NeighborhoodTest::simple_action(Packet *p)$/;"	f	class:NeighborhoodTest
simple_action	elements/test/notifierdebug.cc	/^NotifierDebug::simple_action(Packet *p)$/;"	f	class:NotifierDebug
simple_action	elements/threads/spinlockacquire.hh	/^    Packet *simple_action(Packet *p)	{ _lock->acquire(); return p; }$/;"	f	class:SpinlockAcquire
simple_action	elements/threads/spinlockrelease.hh	/^    Packet *simple_action(Packet *p)	{ _lock->release(); return p; }$/;"	f	class:SpinlockRelease
simple_action	elements/userlevel/printold.cc	/^PrintOld::simple_action(Packet *p)$/;"	f	class:PrintOld
simple_action	elements/wifi/athdescdecap.cc	/^AthdescDecap::simple_action(Packet *p)$/;"	f	class:AthdescDecap
simple_action	elements/wifi/athdescencap.cc	/^AthdescEncap::simple_action(Packet *p)$/;"	f	class:AthdescEncap
simple_action	elements/wifi/ethercount.cc	/^EtherCount::simple_action(Packet *p_in)$/;"	f	class:EtherCount
simple_action	elements/wifi/extradecap.cc	/^ExtraDecap::simple_action(Packet *p)$/;"	f	class:ExtraDecap
simple_action	elements/wifi/extraencap.cc	/^ExtraEncap::simple_action(Packet *p)$/;"	f	class:ExtraEncap
simple_action	elements/wifi/filterfailures.cc	/^FilterFailures::simple_action(Packet *p)$/;"	f	class:FilterFailures
simple_action	elements/wifi/filterphyerr.cc	/^FilterPhyErr::simple_action(Packet *p)$/;"	f	class:FilterPhyErr
simple_action	elements/wifi/filtertx.cc	/^FilterTX::simple_action(Packet *p)$/;"	f	class:FilterTX
simple_action	elements/wifi/packetstore.cc	/^PacketStore::simple_action(Packet *p_in)$/;"	f	class:PacketStore
simple_action	elements/wifi/printtxfeedback.cc	/^PrintTXFeedback::simple_action(Packet *p)$/;"	f	class:PrintTXFeedback
simple_action	elements/wifi/printwifi.cc	/^PrintWifi::simple_action(Packet *p)$/;"	f	class:PrintWifi
simple_action	elements/wifi/prism2decap.cc	/^Prism2Decap::simple_action(Packet *p)$/;"	f	class:Prism2Decap
simple_action	elements/wifi/prism2encap.cc	/^Prism2Encap::simple_action(Packet *p)$/;"	f	class:Prism2Encap
simple_action	elements/wifi/pushanno.cc	/^PushAnno::simple_action(Packet *p_in)$/;"	f	class:PushAnno
simple_action	elements/wifi/radiotapdecap.cc	/^RadiotapDecap::simple_action(Packet *p)$/;"	f	class:RadiotapDecap
simple_action	elements/wifi/radiotapencap.cc	/^RadiotapEncap::simple_action(Packet *p)$/;"	f	class:RadiotapEncap
simple_action	elements/wifi/readanno.cc	/^ReadAnno::simple_action(Packet *p_in)$/;"	f	class:ReadAnno
simple_action	elements/wifi/rxstats.cc	/^RXStats::simple_action(Packet *p_in)$/;"	f	class:RXStats
simple_action	elements/wifi/setrts.cc	/^SetRTS::simple_action(Packet *p)$/;"	f	class:SetRTS
simple_action	elements/wifi/settxpower.cc	/^SetTXPower::simple_action(Packet *p_in)$/;"	f	class:SetTXPower
simple_action	elements/wifi/settxrate.cc	/^SetTXRate::simple_action(Packet *p_in)$/;"	f	class:SetTXRate
simple_action	elements/wifi/station/beaconscanner.cc	/^BeaconScanner::simple_action(Packet *p)$/;"	f	class:BeaconScanner
simple_action	elements/wifi/station/beacontracker.cc	/^BeaconTracker::simple_action(Packet *p)$/;"	f	class:BeaconTracker
simple_action	elements/wifi/wepdecap.cc	/^WepDecap::simple_action(Packet *p_in)$/;"	f	class:WepDecap
simple_action	elements/wifi/wepencap.cc	/^WepEncap::simple_action(Packet *p_in)$/;"	f	class:WepEncap
simple_action	elements/wifi/wifidecap.cc	/^WifiDecap::simple_action(Packet *p)$/;"	f	class:WifiDecap
simple_action	elements/wifi/wifidefrag.cc	/^WifiDefrag::simple_action(Packet *p)$/;"	f	class:WifiDefrag
simple_action	elements/wifi/wifidupefilter.cc	/^WifiDupeFilter::simple_action(Packet *p_in)$/;"	f	class:WifiDupeFilter
simple_action	elements/wifi/wifiencap.cc	/^WifiEncap::simple_action(Packet *p)$/;"	f	class:WifiEncap
simple_action	elements/wifi/wifiseq.cc	/^WifiSeq::simple_action(Packet *p_in) {$/;"	f	class:WifiSeq
simple_action	lib/element.cc	/^Element::simple_action(Packet *p)$/;"	f	class:Element
simple_negate	elements/ip/ipfilter.cc	/^IPFilter::Primitive::simple_negate()$/;"	f	class:IPFilter::Primitive
simple_slot	lib/args.cc	/^Args::simple_slot(void *ptr, size_t size)$/;"	f	class:Args
simple_slot_info	lib/args.cc	/^Args::simple_slot_info(int offset, int size, void *&slot, void **&pointer)$/;"	f	class:Args
simple_slot_size	lib/args.cc	/^Args::simple_slot_size(int size)$/;"	f	class:Args
simple_slotbuf_size	include/click/args.hh	/^	simple_slotbuf_size = 24$/;"	e	enum:Args::__anon410
simtype	include/click/simclick.h	/^    int simtype;		\/* Original simulator packet type - useful$/;"	m	struct:__anon467
since	elements/etherswitch/spantree.hh	/^    Timestamp since;		\/\/ When the port entered the state$/;"	m	struct:EtherSpanTree::PortInfo
size	apps/clicky/src/gathererror.hh	/^    inline int size() const {$/;"	f	class:GatherErrorHandler
size	drivers/e1000-4.x/src/e1000.h	/^	unsigned int size;$/;"	m	struct:e1000_desc_ring
size	drivers/e1000-5.x/src/e1000.h	/^	unsigned int size;$/;"	m	struct:e1000_desc_ring
size	drivers/e1000-7.x/src/e1000.h	/^	unsigned int size;$/;"	m	struct:e1000_rx_ring
size	drivers/e1000-7.x/src/e1000.h	/^	unsigned int size;$/;"	m	struct:e1000_tx_ring
size	elements/grid/linkstat.hh	/^    static const int size = 20;$/;"	m	struct:LinkStat::link_probe
size	elements/grid/linkstat.hh	/^    static const int size = 8;$/;"	m	struct:LinkStat::link_entry
size	elements/grid/linktester.hh	/^    unsigned short size; \/\/ bytes$/;"	m	struct:LinkTester::payload_t
size	elements/ip/iprewriterbase.hh	/^    Vector<IPRewriterFlow *>::size_type size() const {$/;"	f	class:IPRewriterHeap
size	elements/local/FlowNet/libtable/TableLinear.hh	/^int VcTableLinear<T>::size()$/;"	f	class:VcTableLinear
size	elements/local/FlowNet/papmo/PaPMo.cc	/^uint32_t lfc_buffer::size()$/;"	f	class:lfc_buffer
size	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	int size;$/;"	m	struct:queue_QL
size	elements/local/FlowNet/shaper/PFShapeFW.cc	/^int PFShapeFW::size()$/;"	f	class:PFShapeFW
size	elements/local/OpenFlow/lib/ofpbuf.hh	/^    size_t size;                \/* Number of bytes in use. *\/$/;"	m	struct:ofpbuf
size	elements/tcpudp/snooptcp.hh	/^    unsigned size;$/;"	m	struct:SnoopTCP::SCacheEntry
size	include/click/args.hh	/^    int size;$/;"	m	struct:AnnoArg
size	include/click/bitvector.hh	/^    int size() const		{ return _max + 1; }$/;"	f	class:Bitvector
size	include/click/confparse.hh	/^	size_t size;$/;"	m	union:cp_value::__anon479
size	include/click/dequeue.hh	/^  int size() const { return _n; }$/;"	f	class:DEQueue
size	include/click/hashcontainer.hh	/^    inline size_type size() const {$/;"	f	class:HashContainer
size	include/click/hashcontainer.hh	/^    size_t size;$/;"	m	class:HashContainer_rep
size	include/click/hashmap.hh	/^  size_t size() const			{ return _n; }$/;"	f	class:HashMap
size	include/click/hashtable.hh	/^    inline size_type size() const {$/;"	f	class:HashTable
size	include/click/list.hh	/^    size_type size() const {$/;"	f	class:List
size	include/click/routervisitor.hh	/^    int size() const {$/;"	f	class:ElementTracker
size	include/click/standard/storage.hh	/^Storage::size() const$/;"	f	class:Storage
size	include/click/standard/storage.hh	/^Storage::size(index_type head, index_type tail) const$/;"	f	class:Storage
size	include/click/tokenbucket.hh	/^    token_type size() const {$/;"	f	class:TokenBucketX
size	include/click/tokenbucket.hh	/^    token_type size(const rate_type &rate) const {$/;"	f	class:TokenCounterX
size	include/click/variableenv.hh	/^    int size() const			{ return _names.size(); }$/;"	f	class:VariableEnvironment
size	include/click/vector.hh	/^    size_type size() const		{ return _n; }$/;"	f	class:Vector
size	include/click/vector.hh	/^    size_type size() const	{ return Base::size(); }$/;"	f	class:Vector
size	lib/glue.cc	/^    size_t size;$/;"	m	struct:Chunk	file:
size	linuxmodule/skbmgr.cc	/^RecycledSkbBucket::size() const$/;"	f	class:RecycledSkbBucket
size	ns/CUT_BinHeap.h	/^  int  size() {$/;"	f	class:CUT_BinHeap
size	tools/lib/elementmap.hh	/^    int size() const				{ return _e.size(); }$/;"	f	class:ElementMap
size_t_compar	elements/test/sorttest.cc	/^static int size_t_compar(const void *xa, const void *xb, void *)$/;"	f	file:
size_t_permute_compar	elements/test/sorttest.cc	/^static int size_t_permute_compar(const void *xa, const void *xb, void *)$/;"	f	file:
size_t_permute_rev_compar	elements/test/sorttest.cc	/^static int size_t_permute_rev_compar(const void *xa, const void *xb, void *)$/;"	f	file:
size_t_rev_compar	elements/test/sorttest.cc	/^static int size_t_rev_compar(const void *xa, const void *xb, void *)$/;"	f	file:
size_to_higher_bucket	linuxmodule/skbmgr.cc	/^RecycledSkbPool::size_to_higher_bucket(unsigned size)$/;"	f	class:RecycledSkbPool
size_to_higher_bucket_size	linuxmodule/skbmgr.cc	/^RecycledSkbPool::size_to_higher_bucket_size(unsigned size)$/;"	f	class:RecycledSkbPool
size_to_lower_bucket	linuxmodule/skbmgr.cc	/^RecycledSkbPool::size_to_lower_bucket(unsigned size)$/;"	f	class:RecycledSkbPool
size_type	include/click/hashcontainer.hh	/^    typedef size_t size_type;$/;"	t	class:HashContainer
size_type	include/click/hashcontainer.hh	/^    typedef typename HashContainer<T, A>::size_type size_type;$/;"	t	class:HashContainer_const_iterator
size_type	include/click/hashtable.hh	/^    typedef typename rep_type::size_type size_type;$/;"	t	class:HashTable
size_type	include/click/list.hh	/^    typedef size_t size_type;$/;"	t	class:List
size_type	include/click/vector.hh	/^    typedef int size_type;$/;"	t	class:Vector
sizeof	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^OFP_ASSERT(sizeof(struct nicira_header) == sizeof(struct ofp_vendor_header) + 4);$/;"	v
sizeof_stat	drivers/e1000-5.x/src/e1000_ethtool.c	/^	int sizeof_stat;$/;"	m	struct:e1000_stats	file:
sizeof_stat	drivers/e1000-7.x/src/e1000_ethtool.c	/^	int sizeof_stat;$/;"	m	struct:e1000_stats	file:
sizevec	elements/test/sorttest.cc	/^static Vector<size_t> *sizevec;$/;"	v	file:
sk_protocol	drivers/e1000-7.x/src/kcompat.h	794;"	d
skb	drivers/e1000-4.x/src/e1000.h	/^	struct sk_buff *skb;$/;"	m	struct:e1000_buffer	typeref:struct:e1000_buffer::sk_buff
skb	drivers/e1000-5.x/src/e1000.h	/^	struct sk_buff *skb;$/;"	m	struct:e1000_buffer	typeref:struct:e1000_buffer::sk_buff
skb	drivers/e1000-7.x/src/e1000.h	/^	struct sk_buff *skb;$/;"	m	struct:e1000_buffer	typeref:struct:e1000_buffer::sk_buff
skb	include/click/packet.hh	/^    const struct sk_buff *skb() const	{ return (const struct sk_buff*)this; }$/;"	f	class:Packet
skb	include/click/packet.hh	/^    struct sk_buff *skb()		{ return (struct sk_buff *)this; }$/;"	f	class:Packet
skb_fill_page_desc	drivers/e1000-7.x/src/kcompat.h	862;"	d
skb_header_cloned	drivers/e1000-7.x/src/kcompat.h	167;"	d
skb_is_gso	drivers/e1000-7.x/src/kcompat.h	1071;"	d
skbmgr_allocate_skbs	linuxmodule/skbmgr.cc	/^skbmgr_allocate_skbs(unsigned headroom, unsigned size, int *want)$/;"	f
skbmgr_cleanup	linuxmodule/skbmgr.cc	/^skbmgr_cleanup()$/;"	f
skbmgr_init	linuxmodule/skbmgr.cc	/^skbmgr_init()$/;"	f
skbmgr_recycle_skbs	linuxmodule/skbmgr.cc	/^skbmgr_recycle_skbs(struct sk_buff *skbs)$/;"	f
skbtime	include/click/timestamp.hh	/^	skb_timeval skbtime;$/;"	m	union:Timestamp::rep_t
skip	include/click/ino.hh	/^	uint16_t skip;$/;"	m	struct:ClickIno::Entry
skip_anno	include/click/error.hh	/^    static const char *skip_anno(const char *begin, const char *end) {$/;"	f	class:ErrorHandler
skip_anno	lib/error.cc	/^ErrorHandler::skip_anno(const String &str, const char *begin, const char *end,$/;"	f	class:ErrorHandler
skip_backslash	lib/confparse.cc	/^skip_backslash(const char *s, const char *end)$/;"	f	file:
skip_backslash_angle	lib/lexer.cc	/^Lexer::FileState::skip_backslash_angle(const char *s)$/;"	f	class:Lexer::FileState
skip_backslash_angle	tools/lib/lexert.cc	/^LexerT::FileState::skip_backslash_angle(const char *s)$/;"	f	class:LexerT::FileState
skip_balanced_braces	tools/click-devirtualize/cxxclass.cc	/^skip_balanced_braces(const String &text, int p)$/;"	f	file:
skip_balanced_parens	tools/click-devirtualize/cxxclass.cc	/^skip_balanced_parens(const String &text, int p)$/;"	f	file:
skip_comment	lib/confparse.cc	/^skip_comment(const char *s, const char *end)$/;"	f	file:
skip_flow_code	lib/element.cc	/^skip_flow_code(const char*& p)$/;"	f	file:
skip_flow_code	tools/lib/processingt.cc	/^skip_flow_code(const char *&p, const char *last)$/;"	f	file:
skip_line	lib/lexer.cc	/^Lexer::FileState::skip_line(const char *s)$/;"	f	class:Lexer::FileState
skip_line	tools/lib/lexert.cc	/^LexerT::FileState::skip_line(const char *s)$/;"	f	class:LexerT::FileState
skip_over_pull	tools/click-undead/click-undead.cc	/^skip_over_pull(RouterT *r, const PortT &old_from, const PortT &new_from)$/;"	f	file:
skip_over_push	tools/click-undead/click-undead.cc	/^skip_over_push(RouterT *r, const PortT &old_to, const PortT &new_to)$/;"	f	file:
skip_quote	lib/lexer.cc	/^Lexer::FileState::skip_quote(const char *s, char endc)$/;"	f	class:Lexer::FileState
skip_quote	tools/lib/lexert.cc	/^LexerT::FileState::skip_quote(const char *s, char endc)$/;"	f	class:LexerT::FileState
skip_single_quote	lib/confparse.cc	/^skip_single_quote(const char *s, const char *end)$/;"	f	file:
skip_slash_star	lib/lexer.cc	/^Lexer::FileState::skip_slash_star(const char *s)$/;"	f	class:Lexer::FileState
skip_slash_star	tools/lib/lexert.cc	/^LexerT::FileState::skip_slash_star(const char *s)$/;"	f	class:LexerT::FileState
skip_spacevec_item	lib/confparse.cc	/^skip_spacevec_item(const char *s, const char *end)$/;"	f	file:
skip_utf8_char	apps/clicky/src/gathererror.cc	/^skip_utf8_char(const unsigned char *s, const unsigned char *end)$/;"	f
sleep	include/click/notifier.hh	/^ActiveNotifier::sleep()$/;"	f	class:ActiveNotifier
sleep	include/click/notifier.hh	/^Notifier::sleep()$/;"	f	class:Notifier
sleeper	include/click/routerthread.hh	/^    struct task_struct *sleeper() const	{ return _linux_task; }$/;"	f	class:RouterThread
slim	elements/ethernet/arptable.cc	/^ARPTable::slim(click_jiffies_t now)$/;"	f	class:ARPTable
slink	bsdmodule/clickfs_tree.hh	/^	} slink;$/;"	m	union:clickfs_dirent::__anon34	typeref:struct:clickfs_dirent::__anon34::symlink_struct
slope	elements/local/FlowNet/papmo/PaPMo.hh	/^	float	slope;$/;"	m	struct:composed_trace
slope_value	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^double VcCDCORE::slope_value(const Flow* flow_in) const$/;"	f	class:VcCDCORE
slot	include/click/args.hh	/^    T *slot(T &variable) {$/;"	f	struct:Args
smaction	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::smaction(int port, Packet *p)$/;"	f	class:AggregatePacketCounter
smaction	elements/analysis/aggregatefirst.cc	/^AggregateFirst::smaction(Packet *p)$/;"	f	class:AggregateFirst
smaction	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::smaction(Packet *p)$/;"	f	class:ToIPFlowDumps
smaction	elements/ethernet/ensureether.cc	/^EnsureEther::smaction(Packet *p)$/;"	f	class:EnsureEther
smaction	elements/ethernet/etherencap.cc	/^EtherEncap::smaction(Packet *p)$/;"	f	class:EtherEncap
smaction	elements/ethernet/ethervlanencap.cc	/^EtherVLANEncap::smaction(Packet *p)$/;"	f	class:EtherVLANEncap
smaction	elements/ip/ipinputcombo.cc	/^IPInputCombo::smaction(Packet *p)$/;"	f	class:IPInputCombo
smaction	elements/ip/setipdscp.cc	/^SetIPDSCP::smaction(Packet *p)$/;"	f	class:SetIPDSCP
smaction	elements/ip6/setip6dscp.cc	/^SetIP6DSCP::smaction(Packet *p_in)$/;"	f	class:SetIP6DSCP
smaction	elements/linuxmodule/cyclecountaccum.cc	/^CycleCountAccum::smaction(Packet *p)$/;"	f	class:CycleCountAccum
smaction	elements/linuxmodule/perfcountaccum.cc	/^PerfCountAccum::smaction(Packet *p)$/;"	f	class:PerfCountAccum
smaction	elements/linuxmodule/setperfcount.cc	/^SetPerfCount::smaction(Packet *p)$/;"	f	class:SetPerfCount
smaction	elements/standard/align.cc	/^Align::smaction(Packet *p)$/;"	f	class:Align
small_attr	apps/clicky/src/wmain.hh	/^    PangoAttrList *small_attr() const {$/;"	f	class:clicky::wmain
small_bold_attr	apps/clicky/src/wmain.hh	/^    PangoAttrList *small_bold_attr() const {$/;"	f	class:clicky::wmain
smart_power_down	drivers/e1000-7.x/src/e1000.h	/^	boolean_t smart_power_down;	\/* phy smart power down *\/$/;"	m	struct:e1000_adapter
smart_speed	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_smart_speed smart_speed;$/;"	m	struct:e1000_hw
smart_speed	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_smart_speed smart_speed;$/;"	m	struct:e1000_hw
smartspeed	drivers/e1000-5.x/src/e1000.h	/^	uint32_t smartspeed;$/;"	m	struct:e1000_adapter
smartspeed	drivers/e1000-7.x/src/e1000.h	/^	uint32_t smartspeed;$/;"	m	struct:e1000_adapter
smbus_lock	drivers/e1000-4.x/src/e1000.h	/^	struct semaphore smbus_lock;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::semaphore
smq	elements/linuxmodule/fromhost.hh	/^	Packet * volatile smq[smq_size + 1];$/;"	m	union:FromHost::__anon311
smq_size	elements/linuxmodule/fromhost.hh	/^    enum { smq_size = 4 };$/;"	e	enum:FromHost::__anon310
sname	include/clicknet/dhcp.h	/^	uint8_t  sname[64];    \/* server host name, null terminated string *\/$/;"	m	struct:click_dhcp
snap	elements/local/OpenFlow/lib/packets.hh	/^    struct snap_header snap;$/;"	m	struct:llc_snap_header	typeref:struct:llc_snap_header::snap_header
snap_header	elements/local/OpenFlow/lib/packets.hh	/^struct snap_header {$/;"	s
snap_org	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t snap_org[3];$/;"	m	struct:snap_header
snap_type	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t snap_type;$/;"	m	struct:snap_header
snaplen	elements/linuxmodule/touserdevice.cc	/^    uint32_t snaplen;	     \/* max length of captured packets, in octets *\/$/;"	m	struct:pcap_hdr	file:
snaplen	elements/local/OpenFlow/lib/pcap.cc	/^    uint32_t snaplen;        \/* max length of captured packets *\/$/;"	m	struct:pcap_hdr	file:
snaplen	elements/userlevel/fakepcap.hh	/^	uint32_t snaplen;	\/* max length saved portion of each pkt *\/$/;"	m	struct:fake_pcap_file_header
snat	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^        struct nx_snat_config snat[0];$/;"	m	union:nx_act_config::__anon249	typeref:struct:nx_act_config::__anon249::nx_snat_config
snd	apps/ClickController/Pair.java	/^    public Object snd;$/;"	f	class:Pair
snd_time	elements/tcpudp/snooptcp.hh	/^    Timestamp snd_time;$/;"	m	struct:SnoopTCP::SCacheEntry
snprintf	lib/straccum.cc	/^StringAccum::snprintf(int n, const char *format, ...)$/;"	f	class:StringAccum
sock	elements/local/OpenFlow/lib/dpif.hh	/^    struct nl_sock *sock;$/;"	m	struct:dpif	typeref:struct:dpif::nl_sock
sock	elements/userlevel/umlswitch.hh	/^	struct sockaddr_un sock;$/;"	m	struct:request_v3	typeref:struct:request_v3::sockaddr_un
sockaddr_nl	elements/local/OpenFlow/lib/netlink-protocol.hh	/^struct sockaddr_nl {$/;"	s
socketName	apps/ClickController/ControlSocket.java	/^    public String socketName() {$/;"	m	class:ControlSocket
soft_spin_lock	linuxmodule/sched.cc	/^soft_spin_lock(spinlock_t *l)$/;"	f	file:
sort	apps/clicky/src/dstyle.cc	/^void dcss::sort() const$/;"	f	class:clicky::dcss
sort	lib/nameinfo.cc	/^DynamicNameDB::sort()$/;"	f	class:DynamicNameDB
sort	tools/lib/elementt.cc	/^PortT::sort(Vector<PortT> &v)$/;"	f	class:PortT
sort_connections	lib/router.cc	/^Router::sort_connections() const$/;"	f	class:Router
sort_connections	tools/click-pretty/click-pretty.cc	/^sort_connections(Vector<ConnectionT> &conn, bool from)$/;"	f	file:
sort_entries	elements/grid/pep.cc	/^PEP::sort_entries()$/;"	f	class:PEP
sort_entries	elements/grid/regionpep.cc	/^EstimateRouterRegion::sort_entries()$/;"	f	class:EstimateRouterRegion
sort_fields_compare	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::sort_fields_compare(const void *ap, const void *bp,$/;"	f	class:FromIPSummaryDump
sort_table	elements/ip/sortediplookup.cc	/^SortedIPLookup::sort_table()$/;"	f	class:SortedIPLookup
sorted_classes	elements/test/sorttest.cc	/^static const char * const sorted_classes[] = {$/;"	v	file:
sorter	click-mkelemmap	/^sub sorter {$/;"	s
source_directory	tools/click-devirtualize/specializer.hh	/^  String source_directory;$/;"	m	struct:ElementTypeInfo
source_directory	tools/lib/elementmap.hh	/^ElementMap::source_directory(const ElementTraits& t) const$/;"	f	class:ElementMap
source_file	tools/lib/etraits.hh	/^    String source_file;$/;"	m	struct:ElementTraits
source_rate_control_method	elements/local/FlowNet/common/FlowNetGod.hh	/^	int source_rate_control_method;$/;"	m	struct:paramset_sourceproxytable
source_send	elements/local/FlowNet/shaper/PFShapeFW.cc	/^void PFShapeFW::source_send()$/;"	f	class:PFShapeFW
source_text	tools/click-devirtualize/cxxclass.cc	/^CxxClass::source_text(StringAccum &sa) const$/;"	f	class:CxxClass
sp_frame_index	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	uint32_t sp_frame_index; \/* follow up variable to enforce the above policy *\/$/;"	m	class:FlowMpeg2AdaptDecap
space	elements/analysis/timesortedsched.hh	/^	int space;$/;"	m	struct:TimeSortedSched::input_s
space_until	tools/click2xml/click2xml.cc	/^space_until(String &s, int last_col, int want_col)$/;"	f	file:
span	lib/args.cc	/^IntArg::span(const char *begin, const char *end, bool is_signed, int &b)$/;"	f	class:IntArg
special	apps/clicky/src/hvalues.hh	/^    bool special() const {$/;"	f	class:clicky::handler_value
special	drivers/e1000-4.x/src/e1000_hw.h	/^            uint16_t special;   \/* *\/$/;"	m	struct:e1000_data_desc::__anon64::__anon65
special	drivers/e1000-4.x/src/e1000_hw.h	/^            uint16_t special;$/;"	m	struct:e1000_tx_desc::__anon54::__anon55
special	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t special;$/;"	m	struct:e1000_rx_desc
special	drivers/e1000-5.x/src/e1000_hw.h	/^            uint16_t special;   \/* *\/$/;"	m	struct:e1000_data_desc::__anon161::__anon162
special	drivers/e1000-5.x/src/e1000_hw.h	/^            uint16_t special;$/;"	m	struct:e1000_tx_desc::__anon151::__anon152
special	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t special;$/;"	m	struct:e1000_rx_desc
special	drivers/e1000-7.x/src/e1000_hw.h	/^            uint16_t special;   \/* *\/$/;"	m	struct:e1000_data_desc::__anon118::__anon119
special	drivers/e1000-7.x/src/e1000_hw.h	/^            uint16_t special;$/;"	m	struct:e1000_tx_desc::__anon108::__anon109
special	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t special;$/;"	m	struct:e1000_rx_desc
special	tools/click-devirtualize/specializer.hh	/^  bool special() const				{ return cxxc != 0; }$/;"	f	struct:SpecializedClass
special	tools/click-devirtualize/specializer.hh	/^  const SpecializedClass &special(int i) const	{ return _specials[i]; }$/;"	f	class:Specializer
special_argtype_for_keyword	lib/confparse.cc	/^special_argtype_for_keyword(const cp_argtype *t)$/;"	f	file:
specialize	tools/click-devirtualize/specializer.cc	/^Specializer::specialize(const Signatures &sigs, ErrorHandler *errh)$/;"	f	class:Specializer
specialize_class	tools/click-devirtualize/signature.cc	/^Signatures::specialize_class(const String &eclass_name, bool doit)$/;"	f	class:Signatures
specialized_click_name	tools/click-devirtualize/click-devirtualize.cc	/^specialized_click_name(ElementT *e)$/;"	f
specificity	apps/clicky/src/dstyle.hh	/^    int specificity() const {$/;"	f	class:clicky::dcss_selector
specified_driver	tools/click-align/click-align.cc	/^static int specified_driver = -1;$/;"	v	file:
specified_driver	tools/click-pretty/click-pretty.cc	/^static int specified_driver = -1;$/;"	v	file:
specified_driver	tools/click2xml/click2xml.cc	/^static int specified_driver = -1;$/;"	v	file:
speed	elements/local/OpenFlow/datapath.hh	/^	uint32_t speed;$/;"	m	struct:click_port
speed_downgraded	drivers/e1000-5.x/src/e1000_hw.h	/^    boolean_t speed_downgraded;$/;"	m	struct:e1000_hw
speed_downgraded	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t speed_downgraded;$/;"	m	struct:e1000_hw
spi	elements/ipsec/ipsecroutetable.hh	/^    uint32_t spi;$/;"	m	struct:IPsecRoute
split	apps/ClickController/StringUtils.java	/^    public static Vector split(String s, int offset) {$/;"	m	class:StringUtils
split	apps/ClickController/StringUtils.java	/^    public static Vector split(String s, int offset, char terminator) {$/;"	m	class:StringUtils
split	apps/ClickController/StringUtils.java	/^    public static Vector split(char buf[], int offset) {$/;"	m	class:StringUtils
split	apps/ClickController/StringUtils.java	/^    public static Vector split(char buf[], int offset, char terminator) {$/;"	m	class:StringUtils
split	apps/clicky/src/dwidget.hh	/^    delt *split() const {$/;"	f	class:clicky::delt
split	apps/csclient/csclient.cc	/^ControlSocketClient::split(string s, size_t offset, char terminator)$/;"	f	class:ControlSocketClient
split_type	apps/clicky/src/dwidget.hh	/^    char split_type() const {$/;"	f	class:clicky::delt
sport	elements/analysis/fromnlanrdump.hh	/^	uint16_t sport;$/;"	m	struct:FromNLANRDump::FRCell
sport	elements/ip/ipfragmentmap.hh	/^	uint16_t sport;$/;"	m	struct:IPFragmentMap::Entry
sport	elements/ip6/addresstranslator.hh	/^  unsigned short sport() const        { return _mapto.sport(); }$/;"	f	class:AddressTranslator::Mapping
sport	elements/userlevel/ipflowrawsockets.hh	/^	int sport()                     { return _flowid.sport(); }$/;"	f	class:IPFlowRawSockets::Flow
sport	include/click/ip6flowid.hh	/^  uint16_t sport() const		{ return _sport; }$/;"	f	class:IP6FlowID
sport	include/click/ipflowid.hh	/^    uint16_t sport() const {$/;"	f	class:IPFlowID
sprintf_ether	elements/local/FlowNet/utils/FlowNetUtils.cc	/^void sprintf_ether( char* buf, click_ether* ethdr )$/;"	f
sprintf_flow	elements/local/FlowNet/utils/FlowNetUtils.cc	/^void sprintf_flow( char* buf, IPAddress src, IPAddress dst, uint16_t sport, uint16_t dport )$/;"	f
sprintf_flow	elements/local/FlowNet/utils/FlowNetUtils.cc	/^void sprintf_flow( char* buf, struct in_addr src, struct in_addr dst, uint16_t sport, uint16_t dport )$/;"	f
sprintf_flow	elements/local/FlowNet/utils/FlowNetUtils.cc	/^void sprintf_flow( char* buf, uint32_t src, uint32_t dst, uint16_t sport, uint16_t dport )$/;"	f
sprintf_ip	elements/local/FlowNet/utils/FlowNetUtils.cc	/^void sprintf_ip( char* buf, click_ip* ip )$/;"	f
sprintf_mac	elements/local/FlowNet/utils/FlowNetUtils.cc	/^void sprintf_mac( char* buf, uint8_t* macaddr)$/;"	f
sprintf_time	elements/local/FlowNet/utils/FlowNetUtils.cc	/^void sprintf_time( char* buf, struct timeval* tv )$/;"	f
sprintf_udp	elements/local/FlowNet/utils/FlowNetUtils.cc	/^void sprintf_udp( char* buf, click_udp* udp )$/;"	f
sprotect	linuxmodule/fixincludes.pl	/^sub sprotect ($) {$/;"	s
sq	include/clicknet/wifi.h	/^  p80211item_uint32_t sq;$/;"	m	struct:__anon498
square	apps/clicky/src/ddecor.cc	/^static double square(double d)$/;"	f	namespace:clicky
squared_length	apps/clicky/src/rectangle.hh	/^    double squared_length() const {$/;"	f	struct:point
src	elements/wifi/wifidefrag.hh	/^    EtherAddress src;$/;"	m	struct:WifiDefrag::PacketInfo
src_mac	elements/grid/packetlogger.hh	/^    uint8_t src_mac[6];$/;"	m	struct:PacketLogger::log_entry
srcdir	Makefile	/^srcdir = .$/;"	m
srcdir	bsdmodule/Makefile	/^srcdir := .$/;"	m
srcdir	doc/Makefile	/^srcdir = .$/;"	m
srcdir	etc/libclick/Makefile	/^srcdir = .$/;"	m
srcdir	etc/pkg-linuxmodule-26.mk	/^srcdir := $(obj)\/$(srcdir)$/;"	m
srcdir	etc/pkg-linuxmodule-26.mk	/^srcdir := $(src)$/;"	m
srcdir	linuxmodule/Makefile	/^srcdir := $(obj)\/.$/;"	m
srcdir	linuxmodule/Makefile	/^srcdir := $(src)$/;"	m
srcdir	linuxmodule/Makefile	/^srcdir := .$/;"	m
srcdir	ns/Makefile	/^srcdir := .$/;"	m
srcdir	tools/Makefile	/^srcdir = .$/;"	m
srcdir	tools/click-align/Makefile	/^srcdir = .$/;"	m
srcdir	tools/click-check/Makefile	/^srcdir = .$/;"	m
srcdir	tools/click-combine/Makefile	/^srcdir = .$/;"	m
srcdir	tools/click-devirtualize/Makefile	/^srcdir = .$/;"	m
srcdir	tools/click-fastclassifier/Makefile	/^srcdir = .$/;"	m
srcdir	tools/click-flatten/Makefile	/^srcdir = .$/;"	m
srcdir	tools/click-install/Makefile	/^srcdir = .$/;"	m
srcdir	tools/click-mkmindriver/Makefile	/^srcdir = .$/;"	m
srcdir	tools/click-pretty/Makefile	/^srcdir = .$/;"	m
srcdir	tools/click-undead/Makefile	/^srcdir = .$/;"	m
srcdir	tools/click-xform/Makefile	/^srcdir = .$/;"	m
srcdir	tools/click2xml/Makefile	/^srcdir = .$/;"	m
srcdir	tools/lib/Makefile	/^srcdir = .$/;"	m
srcdir	tools/lib/elementmap.hh	/^	String srcdir;$/;"	m	struct:ElementMap::Globals
srcdir	userlevel/Makefile	/^srcdir := .$/;"	m
ssap	include/clicknet/fddi.h	/^    uint8_t	ssap;$/;"	m	struct:click_fddi_8022_1
ssap	include/clicknet/fddi.h	/^    uint8_t	ssap;$/;"	m	struct:click_fddi_8022_2
ssap	include/clicknet/fddi.h	/^    uint8_t	ssap;$/;"	m	struct:click_fddi_snap
ssap	include/clicknet/rfc1483.h	/^    uint8_t	ssap;$/;"	m	struct:click_rfc1483
ssid	include/clicknet/wifi.h	/^	char	ssid[WIFI_NWID_LEN+1];$/;"	m	struct:wifi_information
ssl	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    SSL *ssl;$/;"	m	struct:ssl_vconn	file:
ssl_clear_txbuf	elements/local/OpenFlow/lib/vconn-ssl.cc	/^ssl_clear_txbuf(struct ssl_vconn *sslv)$/;"	f	file:
ssl_close	elements/local/OpenFlow/lib/vconn-ssl.cc	/^ssl_close(struct vconn *vconn)$/;"	f	file:
ssl_connect	elements/local/OpenFlow/lib/vconn-ssl.cc	/^ssl_connect(struct vconn *vconn)$/;"	f	file:
ssl_do_tx	elements/local/OpenFlow/lib/vconn-ssl.cc	/^ssl_do_tx(struct vconn *vconn)$/;"	f	file:
ssl_init	elements/local/OpenFlow/lib/vconn-ssl.cc	/^ssl_init(void)$/;"	f	file:
ssl_open	elements/local/OpenFlow/lib/vconn-ssl.cc	/^ssl_open(const char *name, char *suffix, struct vconn **vconnp)$/;"	f	file:
ssl_recv	elements/local/OpenFlow/lib/vconn-ssl.cc	/^ssl_recv(struct vconn *vconn, struct ofpbuf **bufferp)$/;"	f	file:
ssl_register_tx_waiter	elements/local/OpenFlow/lib/vconn-ssl.cc	/^ssl_register_tx_waiter(struct vconn *vconn)$/;"	f	file:
ssl_send	elements/local/OpenFlow/lib/vconn-ssl.cc	/^ssl_send(struct vconn *vconn, struct ofpbuf *buffer)$/;"	f	file:
ssl_state	elements/local/OpenFlow/lib/vconn-ssl.cc	/^enum ssl_state {$/;"	g	file:
ssl_tx_poll_callback	elements/local/OpenFlow/lib/vconn-ssl.cc	/^ssl_tx_poll_callback(int fd UNUSED, short int revents UNUSED, void *vconn_)$/;"	f	file:
ssl_vconn	elements/local/OpenFlow/lib/vconn-ssl.cc	/^struct ssl_vconn$/;"	s	file:
ssl_vconn_cast	elements/local/OpenFlow/lib/vconn-ssl.cc	/^ssl_vconn_cast(struct vconn *vconn)$/;"	f	file:
ssl_vconn_class	elements/local/OpenFlow/lib/vconn-ssl.cc	/^struct vconn_class ssl_vconn_class = {$/;"	v	typeref:struct:vconn_class
ssl_wait	elements/local/OpenFlow/lib/vconn-ssl.cc	/^ssl_wait(struct vconn *vconn, enum vconn_wait_type wait)$/;"	f	file:
ssl_wants_io	elements/local/OpenFlow/lib/vconn-ssl.cc	/^ssl_wants_io(int ssl_error)$/;"	f	file:
stability_shift	elements/ip/ipratemon.hh	/^	stability_shift = 5,$/;"	e	enum:IPRateMonitor::__anon339
stability_shift	include/click/ewma.hh	/^    static unsigned stability_shift() {$/;"	f	class:FixedEWMAXParameters
stability_shift	include/click/ewma.hh	/^    unsigned stability_shift() const {$/;"	f	class:StabilityEWMAXParameters
stable_string	bsdmodule/module.cc	/^KernelErrorHandler::stable_string() const$/;"	f	class:KernelErrorHandler
stamp	elements/etherswitch/etherswitch.hh	/^	Timestamp stamp;$/;"	m	struct:EtherSwitch::AddrInfo
stamp_to_time	elements/analysis/fromdagdump.cc	/^FromDAGDump::stamp_to_time(uint64_t stamp, Timestamp &tv) const$/;"	f	class:FromDAGDump
star_write_handler	elements/standard/script.cc	/^Script::star_write_handler(const String &str, Element *e, void *, ErrorHandler *)$/;"	f	class:Script
star_write_handler	elements/userlevel/khandlerproxy.cc	/^KernelHandlerProxy::star_write_handler(const String &str, Element *e, void *, ErrorHandler *errh)$/;"	f	class:KernelHandlerProxy
start_connect	apps/clicky/src/cdriver.cc	/^GIOChannel *csocket_cdriver::start_connect(IPAddress addr, uint16_t port, bool *ready, ErrorHandler *errh)$/;"	f	class:clicky::csocket_cdriver
start_element_handler	tools/click2xml/xml2click.cc	/^start_element_handler(void *v, const XML_Char *name, const XML_Char **attrs)$/;"	f	file:
start_fn	conf/click-mkclgw.pl	/^sub start_fn {$/;"	s
start_issuing_request	elements/grid/dsrroutetable.cc	/^DSRRouteTable::start_issuing_request(IPAddress host)$/;"	f	class:DSRRouteTable
start_port	elements/local/OpenFlow/datapath.cc	/^	int start_port;	\/* port to start dumping from *\/$/;"	m	struct:port_stats_state	file:
start_subtree	elements/standard/classification.cc	/^Program::start_subtree(Vector<int> &tree) const$/;"	f	class:Classification::Wordwise::Program
start_time	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	struct	timeval start_time;$/;"	m	struct:FlowMpeg2AdaptDecapStat	typeref:struct:FlowMpeg2AdaptDecapStat::timeval
start_timestamp	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^void FlowMpeg2AdaptDecapStat::start_timestamp()$/;"	f	class:FlowMpeg2AdaptDecapStat
started	userlevel/click.cc	/^static bool started = 0;$/;"	v	file:
starts_with	include/click/string.hh	/^    inline bool starts_with(const String &x) const {$/;"	f	class:String
starts_with	lib/string.cc	/^String::starts_with(const char *s, int len) const$/;"	f	class:String
stat	elements/local/FlowNet/common/Flow.hh	/^	struct FlowStat stat;$/;"	m	class:Flow	typeref:struct:Flow::FlowStat
stat	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	struct FlowMpeg2AdaptDecapStat stat;$/;"	m	class:FlowMpeg2AdaptDecap	typeref:struct:FlowMpeg2AdaptDecap::FlowMpeg2AdaptDecapStat
stat	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^	struct FlowMpeg2AdaptEncapStat stat;$/;"	m	class:FlowMpeg2AdaptEncap	typeref:struct:FlowMpeg2AdaptEncap::FlowMpeg2AdaptEncapStat
stat	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^	struct PFMpeg2AdaptFWStat stat;	$/;"	m	class:PFMpeg2AdaptFW	typeref:struct:PFMpeg2AdaptFW::PFMpeg2AdaptFWStat
stat	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	struct FlowSchedulableStat stat;$/;"	m	class:FlowSchedulable	typeref:struct:FlowSchedulable::FlowSchedulableStat
stat	elements/local/FlowNet/shaper/PFShapeFW.hh	/^	struct PFShapeFWStat stat;	$/;"	m	class:PFShapeFW	typeref:struct:PFShapeFW::PFShapeFWStat
stat_control_in	elements/local/OpenFlow/RConn.hh	/^	uint32_t stat_control_in;$/;"	m	struct:rconn_stat
stat_control_out	elements/local/OpenFlow/RConn.hh	/^	uint32_t stat_control_out;$/;"	m	struct:rconn_stat
stat_ewma_avg_queue_len	elements/local/OpenFlow/RConn.hh	/^	double	stat_ewma_avg_queue_len;$/;"	m	struct:rconn_stat
stat_ewma_dev_queue_len	elements/local/OpenFlow/RConn.hh	/^	double 	stat_ewma_dev_queue_len;$/;"	m	struct:rconn_stat
stat_new_flow_hook	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::stat_new_flow_hook(const Packet *p, FlowInfo *finfo)$/;"	f	class:AggregateIPFlows
stat_offset	drivers/e1000-5.x/src/e1000_ethtool.c	/^	int stat_offset;$/;"	m	struct:e1000_stats	file:
stat_offset	drivers/e1000-7.x/src/e1000_ethtool.c	/^	int stat_offset;$/;"	m	struct:e1000_stats	file:
stat_queue_drop	elements/local/OpenFlow/RConn.hh	/^	uint32_t stat_queue_drop;$/;"	m	struct:rconn_stat
stat_queue_len	elements/local/OpenFlow/RConn.hh	/^	uint32_t stat_queue_len;$/;"	m	struct:rconn_stat
stat_string	drivers/e1000-5.x/src/e1000_ethtool.c	/^	char stat_string[ETH_GSTRING_LEN];$/;"	m	struct:e1000_stats	file:
stat_string	drivers/e1000-7.x/src/e1000_ethtool.c	/^	char stat_string[ETH_GSTRING_LEN];$/;"	m	struct:e1000_stats	file:
stat_t	elements/grid/linktracker.hh	/^  struct stat_t {$/;"	s	class:LinkTracker
stat_total_control_in	elements/local/OpenFlow/RConn.hh	/^	uint32_t stat_total_control_in;$/;"	m	struct:rconn_stat
stat_total_control_out	elements/local/OpenFlow/RConn.hh	/^	uint32_t stat_total_control_out;$/;"	m	struct:rconn_stat
stat_total_queue_drop	elements/local/OpenFlow/RConn.hh	/^	uint32_t stat_total_queue_drop;$/;"	m	struct:rconn_stat
state	elements/etherswitch/spantree.hh	/^    PortState state;$/;"	m	struct:EtherSpanTree::PortInfo
state	elements/ip/ipfilter.hh	/^	    int state;$/;"	m	struct:IPFilter::Parser::parse_state
state	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^        int state;$/;"	m	class:FlowMpeg2AdaptEncap
state	elements/local/OpenFlow/datapath.cc	/^	void *state;$/;"	m	struct:stats_dump_cb	file:
state	elements/local/OpenFlow/datapath.hh	/^	uint32_t state;             \/* Some subset of OFPPS_* flags. *\/$/;"	m	struct:click_port
state	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t state;         \/* Bitmap of OFPPS_* flags. *\/$/;"	m	struct:ofp_phy_port
state	elements/local/OpenFlow/lib/rconn.cc	/^    enum state state;$/;"	m	struct:rconn	typeref:enum:rconn::state	file:
state	elements/local/OpenFlow/lib/rconn.cc	/^enum state {$/;"	g	file:
state	elements/local/OpenFlow/lib/stp.cc	/^    enum stp_state state;           \/* 8.5.5.2: Current state. *\/$/;"	m	struct:stp_port	typeref:enum:stp_port::stp_state	file:
state	elements/local/OpenFlow/lib/vconn-provider.hh	/^    int state;$/;"	m	struct:vconn
state	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    enum ssl_state state;$/;"	m	struct:ssl_vconn	typeref:enum:ssl_vconn::ssl_state	file:
state_bytes	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^        int state_bytes;$/;"	m	class:FlowMpeg2AdaptEncap
state_changed	elements/local/OpenFlow/lib/stp.cc	/^    bool state_changed;$/;"	m	struct:stp_port	file:
state_entered	elements/local/OpenFlow/lib/rconn.cc	/^    time_t state_entered;$/;"	m	struct:rconn	file:
state_name	elements/local/OpenFlow/lib/rconn.cc	/^state_name(enum state state)$/;"	f	file:
state_t	elements/grid/gridlogger.hh	/^  enum state_t {$/;"	g	class:GridLogger
state_t	elements/grid/linktester.hh	/^  enum state_t {$/;"	g	class:LinkTester
state_transition	elements/local/OpenFlow/lib/rconn.cc	/^state_transition(struct rconn *rc, enum state state)$/;"	f	file:
stateno	elements/standard/classification.hh	/^    static int stateno(int brno)		{ return brno >> 1; }$/;"	f	class:Classification::Wordwise::DominatorOptimizer
static_assert	include/click/glue.hh	302;"	d
static_blacklist_timer_hook	elements/grid/dsrroutetable.cc	/^DSRRouteTable::static_blacklist_timer_hook(Timer *, void *v)$/;"	f	class:DSRRouteTable
static_cleanup	elements/analysis/ipsumdump_anno.cc	/^void IPSummaryDump_Anno::static_cleanup()$/;"	f	class:IPSummaryDump_Anno
static_cleanup	elements/analysis/ipsumdump_icmp.cc	/^void IPSummaryDump_ICMP::static_cleanup()$/;"	f	class:IPSummaryDump_ICMP
static_cleanup	elements/analysis/ipsumdump_ip.cc	/^void IPSummaryDump_IP::static_cleanup()$/;"	f	class:IPSummaryDump_IP
static_cleanup	elements/analysis/ipsumdump_link.cc	/^void IPSummaryDump_Link::static_cleanup()$/;"	f	class:IPSummaryDump_Link
static_cleanup	elements/analysis/ipsumdump_payload.cc	/^void IPSummaryDump_Payload::static_cleanup()$/;"	f	class:IPSummaryDump_Payload
static_cleanup	elements/analysis/ipsumdump_tcp.cc	/^void IPSummaryDump_TCP::static_cleanup()$/;"	f	class:IPSummaryDump_TCP
static_cleanup	elements/analysis/ipsumdump_udp.cc	/^void IPSummaryDump_UDP::static_cleanup()$/;"	f	class:IPSummaryDump_UDP
static_cleanup	elements/analysis/ipsumdumpinfo.cc	/^void IPSummaryDumpInfo::static_cleanup()$/;"	f	class:IPSummaryDumpInfo
static_cleanup	elements/bsdmodule/tohost.cc	/^ToHost::static_cleanup()$/;"	f	class:ToHost
static_cleanup	elements/ip/ipfieldinfo.cc	/^IPFieldInfo::static_cleanup()$/;"	f	class:IPFieldInfo
static_cleanup	elements/ip/ipfilter.cc	/^IPFilter::static_cleanup()$/;"	f	class:IPFilter
static_cleanup	elements/ip/ipnameinfo.cc	/^IPNameInfo::static_cleanup()$/;"	f	class:IPNameInfo
static_cleanup	elements/linuxmodule/fromdevice.cc	/^FromDevice::static_cleanup()$/;"	f	class:FromDevice
static_cleanup	elements/linuxmodule/polldevice.cc	/^PollDevice::static_cleanup()$/;"	f	class:PollDevice
static_cleanup	elements/linuxmodule/todevice.cc	/^ToDevice::static_cleanup()$/;"	f	class:ToDevice
static_cleanup	elements/linuxmodule/tohost.cc	/^ToHost::static_cleanup()$/;"	f	class:ToHost
static_cleanup	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::static_cleanup()$/;"	f	class:ToUserDevice
static_cleanup	elements/standard/script.cc	/^Script::static_cleanup()$/;"	f	class:Script
static_cleanup	include/click/element.hh	/^Element::static_cleanup()$/;"	f	class:Element
static_cleanup	lib/bighashmap_arena.cc	/^HashMap_ArenaFactory::static_cleanup()$/;"	f	class:HashMap_ArenaFactory
static_cleanup	lib/error.cc	/^ErrorHandler::static_cleanup()$/;"	f	class:ErrorHandler
static_cleanup	lib/nameinfo.cc	/^NameInfo::static_cleanup()$/;"	f	class:NameInfo
static_cleanup	lib/packet.cc	/^Packet::static_cleanup()$/;"	f	class:Packet
static_cleanup	lib/router.cc	/^Router::static_cleanup()$/;"	f	class:Router
static_expire_hook	elements/grid/dsdvroutetable.hh	/^  static void static_expire_hook(Timer *, void *v)$/;"	f	class:DSDVRouteTable
static_hello_hook	elements/grid/dsdvroutetable.hh	/^  static void static_hello_hook(Timer *, void *e) { ((DSDVRouteTable *) e)->hello_hook(); }$/;"	f	class:DSDVRouteTable
static_initialize	apps/clicky/src/permstr.cc	/^PermString::static_initialize()$/;"	f	class:PermString
static_initialize	elements/analysis/ipsumdump_anno.cc	/^void IPSummaryDump_Anno::static_initialize()$/;"	f	class:IPSummaryDump_Anno
static_initialize	elements/analysis/ipsumdump_icmp.cc	/^void IPSummaryDump_ICMP::static_initialize()$/;"	f	class:IPSummaryDump_ICMP
static_initialize	elements/analysis/ipsumdump_ip.cc	/^void IPSummaryDump_IP::static_initialize()$/;"	f	class:IPSummaryDump_IP
static_initialize	elements/analysis/ipsumdump_link.cc	/^void IPSummaryDump_Link::static_initialize()$/;"	f	class:IPSummaryDump_Link
static_initialize	elements/analysis/ipsumdump_payload.cc	/^void IPSummaryDump_Payload::static_initialize()$/;"	f	class:IPSummaryDump_Payload
static_initialize	elements/analysis/ipsumdump_tcp.cc	/^void IPSummaryDump_TCP::static_initialize()$/;"	f	class:IPSummaryDump_TCP
static_initialize	elements/analysis/ipsumdump_udp.cc	/^void IPSummaryDump_UDP::static_initialize()$/;"	f	class:IPSummaryDump_UDP
static_initialize	elements/bsdmodule/tohost.cc	/^ToHost::static_initialize()$/;"	f	class:ToHost
static_initialize	elements/ip/ipfieldinfo.cc	/^IPFieldInfo::static_initialize()$/;"	f	class:IPFieldInfo
static_initialize	elements/ip/ipfilter.cc	/^IPFilter::static_initialize()$/;"	f	class:IPFilter
static_initialize	elements/ip/ipnameinfo.cc	/^IPNameInfo::static_initialize()$/;"	f	class:IPNameInfo
static_initialize	elements/linuxmodule/fromdevice.cc	/^FromDevice::static_initialize()$/;"	f	class:FromDevice
static_initialize	elements/linuxmodule/fromhost.cc	/^FromHost::static_initialize()$/;"	f	class:FromHost
static_initialize	elements/linuxmodule/polldevice.cc	/^PollDevice::static_initialize()$/;"	f	class:PollDevice
static_initialize	elements/linuxmodule/todevice.cc	/^ToDevice::static_initialize()$/;"	f	class:ToDevice
static_initialize	elements/linuxmodule/tohost.cc	/^ToHost::static_initialize()$/;"	f	class:ToHost
static_initialize	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::static_initialize()$/;"	f	class:ToUserDevice
static_initialize	elements/standard/script.cc	/^Script::static_initialize()$/;"	f	class:Script
static_initialize	include/click/element.hh	/^Element::static_initialize()$/;"	f	class:Element
static_initialize	lib/bighashmap_arena.cc	/^HashMap_ArenaFactory::static_initialize()$/;"	f	class:HashMap_ArenaFactory
static_initialize	lib/error.cc	/^ErrorHandler::static_initialize(ErrorHandler *default_handler)$/;"	f	class:ErrorHandler
static_initialize	lib/nameinfo.cc	/^NameInfo::static_initialize()$/;"	f	class:NameInfo
static_initialize	lib/notifier.cc	/^NotifierSignal::static_initialize()$/;"	f	class:NotifierSignal
static_initialize	lib/router.cc	/^Router::static_initialize()$/;"	f	class:Router
static_initialize	tools/lib/landmarkt.cc	/^LandmarkT::static_initialize()$/;"	f	class:LandmarkT
static_log_dump_hook	elements/grid/dsdvroutetable.hh	/^  static void static_log_dump_hook(Timer *, void *e) { ((DSDVRouteTable *) e)->log_dump_hook(true); }$/;"	f	class:DSDVRouteTable
static_print_stats	elements/grid/gridproxy.cc	/^GridProxy::static_print_stats(Element *e, void *)$/;"	f	class:GridProxy
static_read_stats	elements/wifi/wifidupefilter.cc	/^WifiDupeFilter::static_read_stats(Element *xf, void *)$/;"	f	class:WifiDupeFilter
static_rreq_expire_hook	elements/grid/dsrroutetable.cc	/^DSRRouteTable::static_rreq_expire_hook(Timer *, void *v)$/;"	f	class:DSRRouteTable
static_rreq_issue_hook	elements/grid/dsrroutetable.cc	/^DSRRouteTable::static_rreq_issue_hook(Timer *, void *v)$/;"	f	class:DSRRouteTable
static_send_hook	elements/grid/linkstat.hh	/^  static void static_send_hook(Timer *, void *e) { ((LinkStat *) e)->send_hook(); }$/;"	f	class:LinkStat
static_sendbuffer_timer_hook	elements/grid/dsrroutetable.cc	/^DSRRouteTable::static_sendbuffer_timer_hook(Timer *, void *v)$/;"	f	class:DSRRouteTable
static_timer_hook	elements/grid/linktester.hh	/^  static void static_timer_hook(Timer *, void *e)$/;"	f	class:LinkTester
static_trigger_hook	elements/grid/dsdvroutetable.hh	/^  static void static_trigger_hook(Timer *, void *v)$/;"	f	class:DSDVRouteTable
static_update_link	elements/wifi/linktable.cc	/^LinkTable::static_update_link(const String &arg, Element *e,$/;"	f	class:LinkTable
static_value	include/click/notifier.hh	/^    static atomic_uint32_t static_value;$/;"	m	class:NotifierSignal
static_value	lib/notifier.cc	/^atomic_uint32_t NotifierSignal::static_value;$/;"	m	class:NotifierSignal	file:
stats	drivers/e1000-4.x/src/e1000.h	/^	struct e1000_hw_stats stats;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_hw_stats
stats	drivers/e1000-5.x/src/e1000.h	/^	struct e1000_hw_stats stats;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_hw_stats
stats	drivers/e1000-7.x/src/e1000.h	/^	struct e1000_hw_stats stats;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_hw_stats
stats	elements/analysis/aggregateipflows.hh	/^    bool stats() const			{ return _traceinfo_file; }$/;"	f	class:AggregateIPFlows
stats	elements/linuxmodule/fromhost.hh	/^    net_device_stats *stats()	{ return &_dev->stats; }$/;"	f	class:FromHost
stats	elements/linuxmodule/fromhost.hh	/^    net_device_stats *stats()	{ return &_stats; }$/;"	f	class:FromHost
stats	elements/local/OpenFlow/datapath.cc	/^static const struct stats_type stats[] = {$/;"	v	typeref:struct:stats_type	file:
stats	elements/local/OpenFlow/lib/table.hh	/^    void (*stats)(struct sw_table *table, struct sw_table_stats *stats);$/;"	m	struct:sw_table
stats_block_coalesce_usecs	drivers/e1000-5.x/src/kcompat.h	/^	u32	stats_block_coalesce_usecs;$/;"	m	struct:_kc_ethtool_coalesce
stats_block_coalesce_usecs	drivers/e1000-7.x/src/kcompat.h	/^	u32	stats_block_coalesce_usecs;$/;"	m	struct:_kc_ethtool_coalesce
stats_direction	elements/local/OpenFlow/lib/ofp-print.cc	/^enum stats_direction {$/;"	g	file:
stats_done	elements/local/OpenFlow/datapath.cc	/^static void stats_done(void *cb_)$/;"	f	file:
stats_dump	elements/local/OpenFlow/datapath.cc	/^static int stats_dump(class Datapath *dp, void *cb_)$/;"	f	file:
stats_dump_cb	elements/local/OpenFlow/datapath.cc	/^struct stats_dump_cb {$/;"	s	file:
stats_lock	drivers/e1000-4.x/src/e1000.h	/^	spinlock_t stats_lock;$/;"	m	struct:e1000_adapter
stats_lock	drivers/e1000-5.x/src/e1000.h	/^	spinlock_t stats_lock;$/;"	m	struct:e1000_adapter
stats_lock	drivers/e1000-7.x/src/e1000.h	/^	spinlock_t stats_lock;$/;"	m	struct:e1000_adapter
stats_type	elements/local/OpenFlow/datapath.cc	/^struct stats_type {$/;"	s	file:
status	drivers/e1000-4.x/src/e1000_hw.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_context_desc::__anon60::__anon61
status	drivers/e1000-4.x/src/e1000_hw.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_data_desc::__anon64::__anon65
status	drivers/e1000-4.x/src/e1000_hw.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_tx_desc::__anon54::__anon55
status	drivers/e1000-4.x/src/e1000_hw.h	/^    uint8_t status;      \/* Descriptor status *\/$/;"	m	struct:e1000_rx_desc
status	drivers/e1000-4.x/src/idiag_pro.h	/^	enum idiag_pro_stat status;$/;"	m	struct:idiag_pro_data	typeref:enum:idiag_pro_data::idiag_pro_stat
status	drivers/e1000-5.x/src/e1000_hw.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_context_desc::__anon157::__anon158
status	drivers/e1000-5.x/src/e1000_hw.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_data_desc::__anon161::__anon162
status	drivers/e1000-5.x/src/e1000_hw.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_tx_desc::__anon151::__anon152
status	drivers/e1000-5.x/src/e1000_hw.h	/^    uint8_t status;      \/* Descriptor status *\/$/;"	m	struct:e1000_rx_desc
status	drivers/e1000-7.x/src/e1000_hw.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_context_desc::__anon114::__anon115
status	drivers/e1000-7.x/src/e1000_hw.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_data_desc::__anon118::__anon119
status	drivers/e1000-7.x/src/e1000_hw.h	/^            uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_tx_desc::__anon108::__anon109
status	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t status;      \/* Descriptor status *\/$/;"	m	struct:e1000_rx_desc
status	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t status;$/;"	m	struct:e1000_host_mng_dhcp_cookie
status	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint32_t status;            \/* Status bits defined above. *\/$/;"	m	struct:nx_command_reply
status	include/click/args.hh	/^    Args &status(bool &x) {$/;"	f	struct:Args
status	include/click/args.hh	/^    bool status() const {$/;"	f	struct:Args
status	include/click/args.hh	/^    const Args &status(bool &x) const {$/;"	f	struct:Args
status	include/click/args.hh	/^    int status;$/;"	m	struct:BandwidthArg
status	include/click/args.hh	/^    int status;$/;"	m	struct:DecimalFixedPointArg
status	include/click/args.hh	/^    int status;$/;"	m	struct:DoubleArg
status	include/click/args.hh	/^    int status;$/;"	m	struct:FixedPointArg
status	include/click/args.hh	/^    int status;$/;"	m	struct:IntArg
status	include/click/args.hh	/^    int status;$/;"	m	struct:SecondsArg
status	include/click/task.hh	/^	int32_t status;$/;"	m	union:Task::Status
status	include/clicknet/wifi.h	/^  uint16_t status;$/;"	m	struct:__anon497
status_error	drivers/e1000-7.x/src/e1000_hw.h	/^            uint32_t status_error;     \/* ext status\/error *\/$/;"	m	struct:e1000_rx_desc_extended::__anon94::__anon98
status_error	drivers/e1000-7.x/src/e1000_hw.h	/^            uint32_t status_error;     \/* ext status\/error *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon100::__anon104
status_inval	include/click/args.hh	/^	status_inval = EINVAL,$/;"	e	enum:NumArg::__anon411
status_notsup	include/click/args.hh	/^	status_notsup = ENOTSUP,$/;"	e	enum:NumArg::__anon411
status_ok	include/click/args.hh	/^	status_ok = 0,$/;"	e	enum:NumArg::__anon411
status_range	include/click/args.hh	/^	status_range = ERANGE,$/;"	e	enum:NumArg::__anon411
status_string	elements/wifi/printwifi.cc	/^String status_string(int status) {$/;"	f
status_support_flags	drivers/e1000-4.x/src/ans.h	/^    u32 status_support_flags;     \/* flags to indicate which status is supported *\/$/;"	m	struct:_iANSsupport_t
status_unitless	include/click/args.hh	/^	status_unitless$/;"	e	enum:NumArg::__anon411
stdError	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	       stdError;    \/\/ standard error of estimate$/;"	m	struct:LinearRegression
stdjoin	conf/click-mkclgw.pl	/^sub stdjoin {$/;"	s
steal_m	lib/packet.cc	/^Packet::steal_m()$/;"	f	class:Packet
step	elements/standard/script.cc	/^Script::step(int nsteps, int step_type, int njumps, ErrorHandler *errh)$/;"	f	class:Script
step	tools/lib/routert.cc	/^RouterT::const_iterator::step(const RouterT *r, int eindex)$/;"	f	class:RouterT::const_iterator
step	tools/lib/routert.cc	/^RouterT::const_type_iterator::step(const RouterT *r, int eindex)$/;"	f	class:RouterT::const_type_iterator
step_generation	apps/clicky/src/dwidget.cc	/^unsigned dcontext::step_generation()$/;"	f	class:clicky::dcontext
step_handler	elements/standard/script.cc	/^Script::step_handler(int op, String &str, Element *e, const Handler *h, ErrorHandler *errh)$/;"	f	class:Script
stop_flag	include/click/routerthread.hh	/^RouterThread::stop_flag() const$/;"	f	class:RouterThread
stop_global_handler	lib/router.cc	/^stop_global_handler(const String &s, Element *e, void *, ErrorHandler *errh)$/;"	f	file:
stop_issuing_request	elements/grid/dsrroutetable.cc	/^DSRRouteTable::stop_issuing_request(IPAddress host)$/;"	f	class:DSRRouteTable
stop_signal_handler	userlevel/click.cc	/^stop_signal_handler(int sig)$/;"	f	file:
store	elements/wifi/packetstore.hh	/^  class store {$/;"	c	class:PacketStore
store	include/click/args.hh	/^	void store() {$/;"	f	struct:Args::BytesSlot
store	include/click/args.hh	/^	void store() {$/;"	f	struct:Args::SlotT
store	include/click/confparse.hh	/^    cp_storefunc store;$/;"	m	struct:cp_argtype
store	include/click/confparse.hh	/^    void* store;$/;"	m	struct:cp_value
store2	include/click/confparse.hh	/^    void* store2;$/;"	m	struct:cp_value
store_confirm	include/click/confparse.hh	/^    bool* store_confirm;$/;"	m	struct:cp_value
store_f_pos	linuxmodule/modulepriv.hh	/^    loff_t *store_f_pos;$/;"	m	struct:click_handler_direct_info
store_flow	elements/ip/iprewriterbase.cc	/^IPRewriterBase::store_flow(IPRewriterFlow *flow, int input,$/;"	f	class:IPRewriterBase
store_global_handler	lib/router.cc	/^Router::store_global_handler(Handler &h)$/;"	f	class:Router
store_handler	lib/router.cc	/^Router::store_handler(const Element *e, Handler &to_store)$/;"	f	class:Router
store_local_handler	lib/router.cc	/^Router::store_local_handler(int eindex, Handler &to_store)$/;"	f	class:Router
store_opt	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::Flow::store_opt(const click_tcp *tcph, int direction)$/;"	f	class:ToIPFlowDumps::Flow
stp	elements/local/OpenFlow/lib/stp.cc	/^    struct stp *stp;$/;"	m	struct:stp_port	typeref:struct:stp_port::stp	file:
stp	elements/local/OpenFlow/lib/stp.cc	/^struct stp {$/;"	s	file:
stp_acknowledge_topology_change	elements/local/OpenFlow/lib/stp.cc	/^stp_acknowledge_topology_change(struct stp_port *p)$/;"	f	file:
stp_become_designated_port	elements/local/OpenFlow/lib/stp.cc	/^stp_become_designated_port(struct stp_port *p)$/;"	f	file:
stp_become_root_bridge	elements/local/OpenFlow/lib/stp.cc	/^stp_become_root_bridge(struct stp *stp)$/;"	f	file:
stp_bpdu_header	elements/local/OpenFlow/lib/stp.cc	/^struct stp_bpdu_header {$/;"	s	file:
stp_config_bpdu	elements/local/OpenFlow/lib/stp.cc	/^struct stp_config_bpdu {$/;"	s	file:
stp_config_bpdu_flags	elements/local/OpenFlow/lib/stp.cc	/^enum stp_config_bpdu_flags {$/;"	g	file:
stp_config_bpdu_generation	elements/local/OpenFlow/lib/stp.cc	/^stp_config_bpdu_generation(struct stp *stp)$/;"	f	file:
stp_configuration_update	elements/local/OpenFlow/lib/stp.cc	/^stp_configuration_update(struct stp *stp)$/;"	f	file:
stp_create	elements/local/OpenFlow/lib/stp.cc	/^stp_create(const char *name, stp_identifier bridge_id,$/;"	f
stp_designated_port_selection	elements/local/OpenFlow/lib/stp.cc	/^stp_designated_port_selection(struct stp *stp)$/;"	f	file:
stp_destroy	elements/local/OpenFlow/lib/stp.cc	/^stp_destroy(struct stp *stp)$/;"	f
stp_eth_addr	elements/local/OpenFlow/lib/stp.cc	/^const uint8_t stp_eth_addr[ETH_ADDR_LEN]$/;"	v
stp_forward_delay_timer_expiry	elements/local/OpenFlow/lib/stp.cc	/^stp_forward_delay_timer_expiry(struct stp_port *p)$/;"	f	file:
stp_forward_in_state	elements/local/OpenFlow/lib/stp.cc	/^stp_forward_in_state(enum stp_state state)$/;"	f
stp_get_bridge_id	elements/local/OpenFlow/lib/stp.cc	/^stp_get_bridge_id(const struct stp *stp)$/;"	f
stp_get_changed_port	elements/local/OpenFlow/lib/stp.cc	/^stp_get_changed_port(struct stp *stp, struct stp_port **portp)$/;"	f
stp_get_designated_root	elements/local/OpenFlow/lib/stp.cc	/^stp_get_designated_root(const struct stp *stp)$/;"	f
stp_get_forward_delay	elements/local/OpenFlow/lib/stp.cc	/^stp_get_forward_delay(const struct stp *stp)$/;"	f
stp_get_hello_time	elements/local/OpenFlow/lib/stp.cc	/^stp_get_hello_time(const struct stp *stp)$/;"	f
stp_get_max_age	elements/local/OpenFlow/lib/stp.cc	/^stp_get_max_age(const struct stp *stp)$/;"	f
stp_get_name	elements/local/OpenFlow/lib/stp.cc	/^stp_get_name(const struct stp *stp)$/;"	f
stp_get_port	elements/local/OpenFlow/lib/stp.cc	/^stp_get_port(struct stp *stp, int port_no)$/;"	f
stp_get_root_path_cost	elements/local/OpenFlow/lib/stp.cc	/^stp_get_root_path_cost(const struct stp *stp)$/;"	f
stp_get_root_port	elements/local/OpenFlow/lib/stp.cc	/^stp_get_root_port(struct stp *stp)$/;"	f
stp_hello_timer_expiry	elements/local/OpenFlow/lib/stp.cc	/^stp_hello_timer_expiry(struct stp *stp)$/;"	f	file:
stp_hold_timer_expiry	elements/local/OpenFlow/lib/stp.cc	/^stp_hold_timer_expiry(struct stp_port *p)$/;"	f	file:
stp_identifier	elements/local/OpenFlow/lib/stp.hh	/^typedef uint64_t stp_identifier;$/;"	t
stp_initialize_port	elements/local/OpenFlow/lib/stp.cc	/^stp_initialize_port(struct stp_port *p, enum stp_state state)$/;"	f	file:
stp_is_designated_for_some_port	elements/local/OpenFlow/lib/stp.cc	/^stp_is_designated_for_some_port(const struct stp *stp)$/;"	f	file:
stp_is_designated_port	elements/local/OpenFlow/lib/stp.cc	/^stp_is_designated_port(const struct stp_port *p)$/;"	f	file:
stp_is_root_bridge	elements/local/OpenFlow/lib/stp.cc	/^stp_is_root_bridge(const struct stp *stp)$/;"	f
stp_learn_in_state	elements/local/OpenFlow/lib/stp.cc	/^stp_learn_in_state(enum stp_state state)$/;"	f
stp_make_blocking	elements/local/OpenFlow/lib/stp.cc	/^stp_make_blocking(struct stp_port *p)$/;"	f	file:
stp_make_forwarding	elements/local/OpenFlow/lib/stp.cc	/^stp_make_forwarding(struct stp_port *p)$/;"	f	file:
stp_message_age_timer_expiry	elements/local/OpenFlow/lib/stp.cc	/^stp_message_age_timer_expiry(struct stp_port *p)$/;"	f	file:
stp_next_enabled_port	elements/local/OpenFlow/lib/stp.cc	/^stp_next_enabled_port(const struct stp *stp, const struct stp_port *port)$/;"	f	file:
stp_port	elements/local/OpenFlow/lib/stp.cc	/^struct stp_port {$/;"	s	file:
stp_port_disable	elements/local/OpenFlow/lib/stp.cc	/^stp_port_disable(struct stp_port *p)$/;"	f
stp_port_disable_change_detection	elements/local/OpenFlow/lib/stp.cc	/^stp_port_disable_change_detection(struct stp_port *p)$/;"	f
stp_port_enable	elements/local/OpenFlow/lib/stp.cc	/^stp_port_enable(struct stp_port *p)$/;"	f
stp_port_enable_change_detection	elements/local/OpenFlow/lib/stp.cc	/^stp_port_enable_change_detection(struct stp_port *p)$/;"	f
stp_port_get_state	elements/local/OpenFlow/lib/stp.cc	/^stp_port_get_state(const struct stp_port *p)$/;"	f
stp_port_get_stp	elements/local/OpenFlow/lib/stp.cc	/^stp_port_get_stp(struct stp_port *p)$/;"	f
stp_port_no	elements/local/OpenFlow/lib/stp.cc	/^stp_port_no(const struct stp_port *p)$/;"	f
stp_port_set_path_cost	elements/local/OpenFlow/lib/stp.cc	/^stp_port_set_path_cost(struct stp_port *p, uint16_t path_cost)$/;"	f
stp_port_set_priority	elements/local/OpenFlow/lib/stp.cc	/^stp_port_set_priority(struct stp_port *p, uint8_t new_priority)$/;"	f
stp_port_set_speed	elements/local/OpenFlow/lib/stp.cc	/^stp_port_set_speed(struct stp_port *p, unsigned int speed)$/;"	f
stp_port_state_selection	elements/local/OpenFlow/lib/stp.cc	/^stp_port_state_selection(struct stp *stp)$/;"	f	file:
stp_received_bpdu	elements/local/OpenFlow/lib/stp.cc	/^stp_received_bpdu(struct stp_port *p, const void *bpdu, size_t bpdu_size)$/;"	f
stp_received_config_bpdu	elements/local/OpenFlow/lib/stp.cc	/^stp_received_config_bpdu(struct stp *stp, struct stp_port *p,$/;"	f
stp_received_tcn_bpdu	elements/local/OpenFlow/lib/stp.cc	/^stp_received_tcn_bpdu(struct stp *stp, struct stp_port *p)$/;"	f
stp_record_config_information	elements/local/OpenFlow/lib/stp.cc	/^stp_record_config_information(struct stp_port *p,$/;"	f	file:
stp_record_config_timeout_values	elements/local/OpenFlow/lib/stp.cc	/^stp_record_config_timeout_values(struct stp *stp,$/;"	f	file:
stp_root_selection	elements/local/OpenFlow/lib/stp.cc	/^stp_root_selection(struct stp *stp)$/;"	f	file:
stp_send_bpdu	elements/local/OpenFlow/lib/stp.cc	/^stp_send_bpdu(struct stp_port *p, const void *bpdu, size_t bpdu_size)$/;"	f	file:
stp_set_bridge_id	elements/local/OpenFlow/lib/stp.cc	/^stp_set_bridge_id(struct stp *stp, stp_identifier bridge_id)$/;"	f
stp_set_bridge_priority	elements/local/OpenFlow/lib/stp.cc	/^stp_set_bridge_priority(struct stp *stp, uint16_t new_priority)$/;"	f
stp_set_forward_delay	elements/local/OpenFlow/lib/stp.cc	/^stp_set_forward_delay(struct stp *stp, int ms)$/;"	f
stp_set_hello_time	elements/local/OpenFlow/lib/stp.cc	/^stp_set_hello_time(struct stp *stp, int ms)$/;"	f
stp_set_max_age	elements/local/OpenFlow/lib/stp.cc	/^stp_set_max_age(struct stp *stp, int ms)$/;"	f
stp_set_port_state	elements/local/OpenFlow/lib/stp.cc	/^stp_set_port_state(struct stp_port *p, enum stp_state state)$/;"	f	file:
stp_start_timer	elements/local/OpenFlow/lib/stp.cc	/^stp_start_timer(struct stp_timer *timer, int value)$/;"	f	file:
stp_state	elements/local/OpenFlow/lib/stp.hh	/^enum stp_state {$/;"	g
stp_state_name	elements/local/OpenFlow/lib/stp.cc	/^stp_state_name(enum stp_state state)$/;"	f
stp_stop_timer	elements/local/OpenFlow/lib/stp.cc	/^stp_stop_timer(struct stp_timer *timer)$/;"	f	file:
stp_supersedes_port_info	elements/local/OpenFlow/lib/stp.cc	/^stp_supersedes_port_info(const struct stp_port *p,$/;"	f	file:
stp_supersedes_root	elements/local/OpenFlow/lib/stp.cc	/^stp_supersedes_root(const struct stp_port *root, const struct stp_port *p)$/;"	f	file:
stp_tcn_bpdu	elements/local/OpenFlow/lib/stp.cc	/^struct stp_tcn_bpdu {$/;"	s	file:
stp_tcn_timer_expiry	elements/local/OpenFlow/lib/stp.cc	/^stp_tcn_timer_expiry(struct stp *stp)$/;"	f	file:
stp_tick	elements/local/OpenFlow/lib/stp.cc	/^stp_tick(struct stp *stp, int ms)$/;"	f
stp_timer	elements/local/OpenFlow/lib/stp.cc	/^struct stp_timer {$/;"	s	file:
stp_timer_expired	elements/local/OpenFlow/lib/stp.cc	/^stp_timer_expired(struct stp_timer *timer, int elapsed, int timeout)$/;"	f	file:
stp_topology_change_acknowledged	elements/local/OpenFlow/lib/stp.cc	/^stp_topology_change_acknowledged(struct stp *stp)$/;"	f	file:
stp_topology_change_detection	elements/local/OpenFlow/lib/stp.cc	/^stp_topology_change_detection(struct stp *stp)$/;"	f	file:
stp_topology_change_timer_expiry	elements/local/OpenFlow/lib/stp.cc	/^stp_topology_change_timer_expiry(struct stp *stp)$/;"	f	file:
stp_transmit_config	elements/local/OpenFlow/lib/stp.cc	/^stp_transmit_config(struct stp_port *p)$/;"	f	file:
stp_transmit_tcn	elements/local/OpenFlow/lib/stp.cc	/^stp_transmit_tcn(struct stp *stp)$/;"	f	file:
stp_update_bridge_timers	elements/local/OpenFlow/lib/stp.cc	/^stp_update_bridge_timers(struct stp *stp)$/;"	f	file:
str	conf/click-mkclgw.pl	/^sub str { $/;"	s
str	conf/click-mkclgw.pl	/^sub str { return undef };$/;"	s
str	conf/click-mkclgw.pl	/^sub str {$/;"	s
str	drivers/e1000-4.x/src/e1000_param.c	/^			struct e1000_opt_list { int i; char *str; } *p;$/;"	m	struct:e1000_option::__anon67::__anon69::e1000_opt_list	file:
str	drivers/e1000-5.x/src/e1000_param.c	/^			struct e1000_opt_list { int i; char *str; } *p;$/;"	m	struct:e1000_option::__anon164::__anon166::e1000_opt_list	file:
str	drivers/e1000-7.x/src/e1000_param.c	/^			struct e1000_opt_list { int i; char *str; } *p;$/;"	m	struct:e1000_option::__anon122::__anon124::e1000_opt_list	file:
str	tools/lib/landmarkt.hh	/^LandmarkT::str() const$/;"	f	class:LandmarkT
strFunctionP	elements/local/FlowNet/common/FlowNetGod.hh	/^	String	strFunctionP;$/;"	m	struct:paramset_flowtable
strFunctionQ	elements/local/FlowNet/common/FlowNetGod.hh	/^	String	strFunctionQ;$/;"	m	struct:paramset_flowtable
str_to_int	elements/local/OpenFlow/lib/util.cc	/^str_to_int(const char *s, int base, int *i)$/;"	f
str_to_llong	elements/local/OpenFlow/lib/util.cc	/^str_to_llong(const char *s, int base, long long *x)$/;"	f
str_to_long	elements/local/OpenFlow/lib/util.cc	/^str_to_long(const char *s, int base, long *li)$/;"	f
str_to_uint	elements/local/OpenFlow/lib/util.cc	/^str_to_uint(const char *s, int base, unsigned int *u)$/;"	f
str_to_ullong	elements/local/OpenFlow/lib/util.cc	/^str_to_ullong(const char *s, int base, unsigned long long *ull)$/;"	f
str_to_ulong	elements/local/OpenFlow/lib/util.cc	/^str_to_ulong(const char *s, int base, unsigned long *ul)$/;"	f
strchr	include/click/glue.hh	281;"	d
strcmp	include/click/glue.hh	/^strcmp(const char *a, const char *b)$/;"	f
stream_clear_txbuf	elements/local/OpenFlow/lib/vconn-stream.cc	/^stream_clear_txbuf(struct stream_vconn *s)$/;"	f	file:
stream_close	elements/local/OpenFlow/lib/vconn-stream.cc	/^stream_close(struct vconn *vconn)$/;"	f	file:
stream_connect	elements/local/OpenFlow/lib/vconn-stream.cc	/^stream_connect(struct vconn *vconn)$/;"	f	file:
stream_do_tx	elements/local/OpenFlow/lib/vconn-stream.cc	/^stream_do_tx(int fd UNUSED, short int revents UNUSED, void *vconn_)$/;"	f	file:
stream_recv	elements/local/OpenFlow/lib/vconn-stream.cc	/^stream_recv(struct vconn *vconn, struct ofpbuf **bufferp)$/;"	f	file:
stream_send	elements/local/OpenFlow/lib/vconn-stream.cc	/^static int stream_send(struct vconn *vconn, struct ofpbuf *buffer)$/;"	f	file:
stream_vconn	elements/local/OpenFlow/lib/vconn-stream.cc	/^struct stream_vconn$/;"	s	file:
stream_vconn_cast	elements/local/OpenFlow/lib/vconn-stream.cc	/^stream_vconn_cast(struct vconn *vconn)$/;"	f	file:
stream_vconn_class	elements/local/OpenFlow/lib/vconn-stream.cc	/^static struct vconn_class stream_vconn_class = {$/;"	v	typeref:struct:vconn_class	file:
stream_wait	elements/local/OpenFlow/lib/vconn-stream.cc	/^stream_wait(struct vconn *vconn, enum vconn_wait_type wait)$/;"	f	file:
strerror	lib/strerror.c	/^strerror(int errno)$/;"	f
strict_match_context	apps/clicky/src/dstyle.hh	/^    bool strict_match_context(crouter *cr, const delt *e, int *sensitivity = 0) const {$/;"	f	class:clicky::dcss
stride	elements/standard/stridesched.hh	/^	void stride() {$/;"	f	struct:StrideSched::Client
stride	include/click/routerthread.hh	/^	unsigned stride;$/;"	m	struct:RouterThread::Client
string	elements/local/OpenFlow/lib/dynamic-string.hh	/^    char *string;       \/* Null-terminated string. *\/$/;"	m	struct:ds
string	include/click/lexer.hh	/^    String &string()			{ return _s; }$/;"	f	class:Lexeme
string	include/click/lexer.hh	/^    const String &string() const	{ return _s; }$/;"	f	class:Lexeme
string	linuxmodule/modulepriv.hh	/^    String *string;$/;"	m	struct:click_handler_direct_info
string	tools/lib/lexert.hh	/^    String &string()			{ return _s; }$/;"	f	class:Lexeme
string	tools/lib/lexert.hh	/^    const String &string() const	{ return _s; }$/;"	f	class:Lexeme
string_bogus_compar	elements/test/sorttest.cc	/^static int string_bogus_compar(const void *, const void *, void *)$/;"	f	file:
string_compar	elements/test/sorttest.cc	/^static int string_compar(const void *xa, const void *xb, void *)$/;"	f	file:
string_data_handler	lib/element.cc	/^string_data_handler(int op, String &str, Element *element, const Handler *h, ErrorHandler *)$/;"	f	file:
string_permute_compar	elements/test/sorttest.cc	/^static int string_permute_compar(const void *xa, const void *xb, void *)$/;"	f	file:
string_permute_rev_compar	elements/test/sorttest.cc	/^static int string_permute_rev_compar(const void *xa, const void *xb, void *)$/;"	f	file:
string_rev_compar	elements/test/sorttest.cc	/^static int string_rev_compar(const void *xa, const void *xb, void *)$/;"	f	file:
string_set	drivers/e1000-5.x/src/kcompat.h	/^	u32     string_set;     \/* string set id e.c. ETH_SS_TEST, etc*\/$/;"	m	struct:ethtool_gstrings
string_set	drivers/e1000-7.x/src/kcompat.h	/^	u32     string_set;     \/* string set id e.c. ETH_SS_TEST, etc*\/$/;"	m	struct:ethtool_gstrings
string_sorter	tools/click-flatten/click-flatten.cc	/^  string_sorter(const void *va, const void *vb)$/;"	f	file:
string_to_perfctr	elements/linuxmodule/perfcountuser.cc	/^string_to_perfctr(const String &name_in)$/;"	f	file:
stringlist	elements/test/listtest.cc	/^typedef List<stringlistentry, &stringlistentry::link> stringlist;$/;"	t	namespace:__anon403	file:
stringlist_parsefunc	lib/confparse.cc	/^stringlist_parsefunc(cp_value *v, const String &arg,$/;"	f	file:
stringlistentry	elements/test/listtest.cc	/^    stringlistentry() {$/;"	f	struct:__anon403::stringlistentry
stringlistentry	elements/test/listtest.cc	/^    stringlistentry(const String &str)$/;"	f	struct:__anon403::stringlistentry
stringlistentry	elements/test/listtest.cc	/^struct stringlistentry {$/;"	s	namespace:__anon403	file:
strip	lib/args.cc	/^Args::strip()$/;"	f	class:Args
strip_headers	elements/grid/dsrroutetable.cc	/^DSRRouteTable::strip_headers(Packet *p_in)$/;"	f	class:DSRRouteTable
strip_vlan	elements/local/OpenFlow/lib/dp_act.cc	/^strip_vlan(struct ofpbuf *buffer, struct sw_flow_key *key, $/;"	f	file:
strlcpy	elements/local/OpenFlow/lib/util.cc	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/glue.cc	/^size_t strlen(const char * s)$/;"	f
strong_reschedule	include/click/task.hh	/^    inline void strong_reschedule() {$/;"	f	class:Task
strong_unschedule	include/click/task.hh	/^    inline void strong_unschedule() {$/;"	f	class:Task
strtol	lib/glue.cc	/^strtol(const char *nptr, char **endptr, int base)$/;"	f
strtoul	include/click/glue.hh	/^strtoul(const char *nptr, char **endptr, int base)$/;"	f
strvec	elements/test/sorttest.cc	/^static Vector<String> *strvec;$/;"	v	file:
stub_lexinfo	tools/lib/lexert.cc	/^static LexerTInfo *stub_lexinfo = 0;$/;"	v	file:
stub_policy_frame_delivery_inorder	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int stub_policy_frame_delivery_inorder;$/;"	m	class:FlowMpeg2AdaptDecap
style	apps/clicky/src/dstyle.hh	/^    int style;$/;"	m	struct:clicky::delt_style
sub_fix	include/click/timestamp.hh	/^    inline void sub_fix() {$/;"	f	class:Timestamp
subdevice	drivers/e1000-4.x/src/kcompat.h	/^	unsigned int subvendor, subdevice;$/;"	m	struct:_kc_pci_device_id
subdir	Makefile	/^subdir = .$/;"	m
subdir	bsdmodule/Makefile	/^subdir := bsdmodule$/;"	m
subdir	doc/Makefile	/^subdir = doc$/;"	m
subdir	etc/libclick/Makefile	/^subdir = etc\/libclick$/;"	m
subdir	linuxmodule/Makefile	/^subdir := linuxmodule$/;"	m
subdir	ns/Makefile	/^subdir := ns$/;"	m
subdir	tools/Makefile	/^subdir = tools$/;"	m
subdir	tools/click-align/Makefile	/^subdir = tools\/click-align$/;"	m
subdir	tools/click-check/Makefile	/^subdir = tools\/click-check$/;"	m
subdir	tools/click-combine/Makefile	/^subdir = tools\/click-combine$/;"	m
subdir	tools/click-devirtualize/Makefile	/^subdir = tools\/click-devirtualize$/;"	m
subdir	tools/click-fastclassifier/Makefile	/^subdir = tools\/click-fastclassifier$/;"	m
subdir	tools/click-flatten/Makefile	/^subdir = tools\/click-flatten$/;"	m
subdir	tools/click-install/Makefile	/^subdir = tools\/click-install$/;"	m
subdir	tools/click-mkmindriver/Makefile	/^subdir = tools\/click-mkmindriver$/;"	m
subdir	tools/click-pretty/Makefile	/^subdir = tools\/click-pretty$/;"	m
subdir	tools/click-undead/Makefile	/^subdir = tools\/click-undead$/;"	m
subdir	tools/click-xform/Makefile	/^subdir = tools\/click-xform$/;"	m
subdir	tools/click2xml/Makefile	/^subdir = tools\/click2xml$/;"	m
subdir	tools/lib/Makefile	/^subdir = tools\/lib$/;"	m
subdir	userlevel/Makefile	/^subdir := userlevel$/;"	m
subsec	include/click/timestamp.hh	/^	    int32_t subsec;$/;"	m	struct:Timestamp::rep_t::__anon419
subsec	include/click/timestamp.hh	/^	    int32_t subsec;$/;"	m	struct:Timestamp::rep_t::__anon420
subsec	include/click/timestamp.hh	/^Timestamp::subsec() const$/;"	f	class:Timestamp
subsec_per_msec	include/click/timestamp.hh	/^	subsec_per_msec = subsec_per_sec \/ msec_per_sec,$/;"	e	enum:Timestamp::__anon417
subsec_per_sec	include/click/timestamp.hh	/^	subsec_per_sec = nsec_per_sec,$/;"	e	enum:Timestamp::__anon417
subsec_per_usec	include/click/timestamp.hh	/^	subsec_per_usec = subsec_per_sec \/ usec_per_sec$/;"	e	enum:Timestamp::__anon417
subsec_to_msec	include/click/timestamp.hh	/^    inline static uint32_t subsec_to_msec(uint32_t subsec) {$/;"	f	class:Timestamp
subsec_to_nsec	include/click/timestamp.hh	/^    inline static uint32_t subsec_to_nsec(uint32_t subsec) {$/;"	f	class:Timestamp
subsec_to_usec	include/click/timestamp.hh	/^    inline static uint32_t subsec_to_usec(uint32_t subsec) {$/;"	f	class:Timestamp
substring	include/click/string.hh	/^    inline String substring(const char *begin, const char *end) const {$/;"	f	class:String
substring	include/click/string.hh	/^    inline String substring(int pos) const {$/;"	f	class:String
substring	lib/string.cc	/^String::substring(int pos, int len) const$/;"	f	class:String
subsystem_id	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t subsystem_id;$/;"	m	struct:e1000_hw
subsystem_id	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t subsystem_id;$/;"	m	struct:e1000_hw
subsystem_id	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t subsystem_id;$/;"	m	struct:e1000_hw
subsystem_vendor_id	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t subsystem_vendor_id;$/;"	m	struct:e1000_hw
subsystem_vendor_id	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t subsystem_vendor_id;$/;"	m	struct:e1000_hw
subsystem_vendor_id	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t subsystem_vendor_id;$/;"	m	struct:e1000_hw
subtable	elements/local/OpenFlow/lib/table-hash.cc	/^	struct sw_table *subtable[2];$/;"	m	struct:sw_table_hash2	typeref:struct:sw_table_hash2::sw_table	file:
subtype	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t subtype;               \/* NXAST_*. *\/$/;"	m	struct:nx_action_header
subtype	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t subtype;               \/* NXAST_SNAT. *\/$/;"	m	struct:nx_action_snat
subtype	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint32_t subtype;           \/* One of NXT_* above. *\/$/;"	m	struct:nicira_header
subtype	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    uint32_t subtype;           \/* One of ofp_extension_commands *\/$/;"	m	struct:ofp_extension_header
subvendor	drivers/e1000-4.x/src/kcompat.h	/^	unsigned int subvendor, subdevice;$/;"	m	struct:_kc_pci_device_id
success	elements/grid/ackretrysender.hh	/^    bool success;$/;"	m	struct:ACKRetrySender::tx_result_t
success	elements/grid/ackretrysender2.hh	/^    bool success;$/;"	m	struct:ACKRetrySender2::tx_result_t
sumX	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	double sumX, sumY;  \/\/ sums of x and y$/;"	m	struct:LinearRegression
sumXY	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	double sumXY;       \/\/ sum of x*y$/;"	m	struct:LinearRegression
sumXsquared	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	double sumXsquared, \/\/ sum of x squares$/;"	m	struct:LinearRegression
sumY	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	double sumX, sumY;  \/\/ sums of x and y$/;"	m	struct:LinearRegression
sumYsquared	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	       sumYsquared; \/\/ sum y squares$/;"	m	struct:LinearRegression
sum_tx	elements/grid/ackretrysender2.hh	/^  unsigned sum_tx;$/;"	m	class:ACKRetrySender2
summary	elements/analysis/toipsumdump.cc	/^ToIPSummaryDump::summary(Packet* p, StringAccum& sa, StringAccum* bad_sa) const$/;"	f	class:ToIPSummaryDump
sunprotect	linuxmodule/fixincludes.pl	/^sub sunprotect ($) {$/;"	s
supported	elements/local/OpenFlow/datapath.hh	/^	uint32_t supported;$/;"	m	struct:click_port
supported	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t supported;     \/* Features supported by the port. *\/$/;"	m	struct:ofp_phy_port
supports_stop_promiscuous	drivers/e1000-4.x/src/ans.h	/^    BD_ANS_BOOLEAN supports_stop_promiscuous; $/;"	m	struct:_iANSsupport_t
suppress	elements/standard/suppressor.hh	/^  void suppress(int output) { _suppressed[output] = true; }$/;"	f	class:Suppressor
suppressed	elements/standard/suppressor.hh	/^  bool suppressed(int output) const { return _suppressed[output]; }$/;"	f	class:Suppressor
suspend	drivers/e1000-4.x/src/kcompat.h	/^	int (*suspend)(struct pci_dev *dev, u32 state);$/;"	m	struct:_kc_pci_driver
suspended	drivers/e1000-4.x/src/ans.h	/^    u32 *suspended;$/;"	m	struct:_iANSsupport_t
svec	elements/local/OpenFlow/lib/svec.hh	/^struct svec {$/;"	s
svec_add	elements/local/OpenFlow/lib/svec.cc	/^svec_add(struct svec *svec, const char *name)$/;"	f
svec_add_nocopy	elements/local/OpenFlow/lib/svec.cc	/^svec_add_nocopy(struct svec *svec, char *name)$/;"	f
svec_append	elements/local/OpenFlow/lib/svec.cc	/^svec_append(struct svec *svec, const struct svec *other)$/;"	f
svec_back	elements/local/OpenFlow/lib/svec.cc	/^svec_back(const struct svec *svec)$/;"	f
svec_clear	elements/local/OpenFlow/lib/svec.cc	/^svec_clear(struct svec *svec) $/;"	f
svec_contains	elements/local/OpenFlow/lib/svec.cc	/^svec_contains(const struct svec *svec, const char *name)$/;"	f
svec_destroy	elements/local/OpenFlow/lib/svec.cc	/^svec_destroy(struct svec *svec)$/;"	f
svec_diff	elements/local/OpenFlow/lib/svec.cc	/^svec_diff(const struct svec *a, const struct svec *b,$/;"	f
svec_equal	elements/local/OpenFlow/lib/svec.cc	/^svec_equal(const struct svec *a, const struct svec *b)$/;"	f
svec_expand	elements/local/OpenFlow/lib/svec.cc	/^svec_expand(struct svec *svec)$/;"	f	file:
svec_find	elements/local/OpenFlow/lib/svec.cc	/^svec_find(const struct svec *svec, const char *name)$/;"	f
svec_get_duplicate	elements/local/OpenFlow/lib/svec.cc	/^svec_get_duplicate(const struct svec *svec)$/;"	f
svec_init	elements/local/OpenFlow/lib/svec.cc	/^svec_init(struct svec *svec)$/;"	f
svec_is_sorted	elements/local/OpenFlow/lib/svec.cc	/^svec_is_sorted(const struct svec *svec)$/;"	f
svec_is_unique	elements/local/OpenFlow/lib/svec.cc	/^svec_is_unique(const struct svec *svec)$/;"	f
svec_join	elements/local/OpenFlow/lib/svec.cc	/^svec_join(const struct svec *svec, const char *delimiter)$/;"	f
svec_parse_words	elements/local/OpenFlow/lib/svec.cc	/^svec_parse_words(struct svec *svec, const char *words)$/;"	f
svec_pop_back	elements/local/OpenFlow/lib/svec.cc	/^svec_pop_back(struct svec *svec)$/;"	f
svec_print	elements/local/OpenFlow/lib/svec.cc	/^svec_print(const struct svec *svec, const char *title)$/;"	f
svec_sort	elements/local/OpenFlow/lib/svec.cc	/^svec_sort(struct svec *svec)$/;"	f
svec_sort_unique	elements/local/OpenFlow/lib/svec.cc	/^svec_sort_unique(struct svec *svec)$/;"	f
svec_swap	elements/local/OpenFlow/lib/svec.cc	/^svec_swap(struct svec *a, struct svec *b)$/;"	f
svec_terminate	elements/local/OpenFlow/lib/svec.cc	/^svec_terminate(struct svec *svec)$/;"	f
svec_unique	elements/local/OpenFlow/lib/svec.cc	/^svec_unique(struct svec *svec)$/;"	f
sw_chain	elements/local/OpenFlow/lib/chain.hh	/^struct sw_chain {$/;"	s
sw_desc	elements/local/OpenFlow/include/openflow/openflow.hh	/^    char sw_desc[DESC_STR_LEN];        \/* Software description. *\/$/;"	m	struct:ofp_desc_stats
sw_flow	elements/local/OpenFlow/lib/switch-flow.hh	/^struct sw_flow {$/;"	s
sw_flow_actions	elements/local/OpenFlow/lib/switch-flow.hh	/^struct sw_flow_actions {$/;"	s
sw_flow_key	elements/local/OpenFlow/lib/switch-flow.hh	/^struct sw_flow_key {$/;"	s
sw_queue	elements/local/OpenFlow/datapath.hh	/^struct sw_queue {$/;"	s
sw_table	elements/local/OpenFlow/lib/table.hh	/^struct sw_table {$/;"	s
sw_table_hash	elements/local/OpenFlow/lib/table-hash.cc	/^struct sw_table_hash {$/;"	s	file:
sw_table_hash2	elements/local/OpenFlow/lib/table-hash.cc	/^struct sw_table_hash2 {$/;"	s	file:
sw_table_linear	elements/local/OpenFlow/lib/table-linear.cc	/^struct sw_table_linear {$/;"	s	file:
sw_table_position	elements/local/OpenFlow/lib/table.hh	/^struct sw_table_position {$/;"	s
sw_table_stats	elements/local/OpenFlow/lib/table.hh	/^struct sw_table_stats {$/;"	s
swap	include/click/atomic.hh	/^atomic_uint32_t::swap(uint32_t desired)$/;"	f	class:atomic_uint32_t
swap	include/click/atomic.hh	/^atomic_uint32_t::swap(volatile uint32_t &x, uint32_t desired)$/;"	f	class:atomic_uint32_t
swap	include/click/dequeue.cc	/^DEQueue<T>::swap(DEQueue<T> &o)$/;"	f	class:DEQueue
swap	include/click/hashcontainer.hh	/^inline void HashContainer<T, A>::swap(HashContainer<T, A> &o)$/;"	f	class:HashContainer
swap	include/click/hashmap.cc	/^HashMap<K, V>::swap(HashMap<K, V> &o)$/;"	f	class:HashMap
swap	include/click/hashmap.cc	/^HashMap<K, void *>::swap(HashMap<K, void *> &o)$/;"	f	class:HashMap
swap	include/click/hashmap.hh	/^  void swap(HashMap<K, T *> &o)	{ inherited::swap(o); }$/;"	f	class:HashMap
swap	include/click/hashtable.hh	/^    void swap(HashTable<K, V> &x) {$/;"	f	class:HashTable
swap	include/click/hashtable.hh	/^void HashTable<T>::swap(HashTable<T> &o)$/;"	f	class:HashTable
swap	include/click/list.hh	/^    void swap(List<T, member> &x) {$/;"	f	class:List
swap	include/click/vector.cc	/^Vector<T>::swap(Vector<T> &x)$/;"	f	class:Vector
swap	include/click/vector.hh	/^    void swap(Vector<T*>& x)	{ Base::swap(x); }$/;"	f	class:Vector
swap	lib/bitvector.cc	/^Bitvector::swap(Bitvector &x)$/;"	f	class:Bitvector
swap	lib/hashallocator.cc	/^void HashAllocator::swap(HashAllocator &x)$/;"	f	class:HashAllocator
swap	lib/straccum.cc	/^StringAccum::swap(StringAccum &o)$/;"	f	class:StringAccum
swap	lib/vectorv.cc	/^Vector<void*>::swap(Vector<void*> &x)$/;"	f	class:Vector
swap_bytes	elements/wifi/rc4.cc	/^swap_bytes(unsigned char *a, unsigned char *b)$/;"	f	file:
swap_config	bsdmodule/config.cc	/^swap_config(const String &s)$/;"	f	file:
swap_config	linuxmodule/config.cc	/^swap_config(const String &s)$/;"	f	file:
swap_file_header	elements/userlevel/fromdump.cc	/^swap_file_header(const fake_pcap_file_header *hp, fake_pcap_file_header *outp)$/;"	f	file:
swap_headers	elements/grid/stripdsrheader.cc	/^StripDSRHeader::swap_headers(Packet *p_in)$/;"	f	class:StripDSRHeader
swap_packet_header	elements/userlevel/fromdump.cc	/^swap_packet_header(const fake_pcap_pkthdr *hp, fake_pcap_pkthdr *outp)$/;"	f	file:
swapit	elements/ip/ipprint.cc	271;"	d	file:
swapq	elements/analysis/fromdagdump.cc	/^swapq(uint64_t q)$/;"	f	file:
swfw_sync_present	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t swfw_sync_present;$/;"	m	struct:e1000_hw
swfwhw_semaphore_present	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t swfwhw_semaphore_present;$/;"	m	struct:e1000_hw
switch_to_short_argument	lib/clp.c	/^switch_to_short_argument(Clp_Parser *clp)$/;"	f	file:
swt	elements/local/OpenFlow/lib/table-hash.cc	/^	struct sw_table swt;$/;"	m	struct:sw_table_hash	typeref:struct:sw_table_hash::sw_table	file:
swt	elements/local/OpenFlow/lib/table-hash.cc	/^	struct sw_table swt;$/;"	m	struct:sw_table_hash2	typeref:struct:sw_table_hash2::sw_table	file:
swt	elements/local/OpenFlow/lib/table-linear.cc	/^    struct sw_table swt;$/;"	m	struct:sw_table_linear	typeref:struct:sw_table_linear::sw_table	file:
symerrs	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t symerrs;$/;"	m	struct:e1000_hw_stats
symerrs	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t symerrs;$/;"	m	struct:e1000_hw_stats
symerrs	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t symerrs;$/;"	m	struct:e1000_hw_stats
symlink_struct	bsdmodule/clickfs_tree.hh	/^	struct symlink_struct {$/;"	s	union:clickfs_dirent::__anon34
syn_packet	elements/linuxmodule/fasttcpflows.hh	/^    Packet *syn_packet;$/;"	m	struct:FastTCPFlows::flow_t
synchronize_irq	drivers/e1000-5.x/src/kcompat.h	578;"	d
synchronize_irq	drivers/e1000-5.x/src/kcompat.h	579;"	d
synchronize_irq	drivers/e1000-7.x/src/kcompat.h	837;"	d
synchronize_irq	drivers/e1000-7.x/src/kcompat.h	838;"	d
synonym	elements/analysis/ipsumdumpinfo.hh	/^    const char *synonym;$/;"	m	struct:IPSummaryDump::FieldSynonym
synonym_of	tools/lib/eclasst.hh	/^    ElementClassT *synonym_of() const	{ return _eclass; }$/;"	f	class:SynonymElementClassT
synonyms	elements/analysis/ipsumdumpinfo.cc	/^static Vector<const void *> *synonyms;$/;"	v	file:
sys_err	apps/csclient/csclient.hh	/^    sys_err,            \/* O\/S or networking error, check errno for more information *\/$/;"	e	enum:ControlSocketClient::err_t
syslog_errh	bsdmodule/module.cc	/^static KernelErrorHandler *syslog_errh = 0;$/;"	v	file:
syslog_errh	linuxmodule/module.cc	/^static KernelErrorHandler *syslog_errh = 0;$/;"	v	file:
syslog_levels	elements/local/OpenFlow/lib/vlog.cc	/^static int syslog_levels[VLL_N_LEVELS] = {$/;"	v	file:
t	elements/grid/movesim.hh	/^    unsigned long t; \/\/ relative time in msecs$/;"	m	struct:MovementSimulator::event_entry
t	include/click/notifier.hh	/^	Task *t;$/;"	m	union:ActiveNotifier::__anon433
t	include/click/routerthread.hh	/^	Task *t;$/;"	m	struct:RouterThread::task_heap_element
t	include/click/timerset.hh	/^	Timer *t;$/;"	m	struct:TimerSet::heap_element
t_border_style	apps/clicky/src/dstyle.hh	/^	t_border_style,$/;"	e	enum:clicky::dcss_property::__anon19
t_color	apps/clicky/src/dstyle.hh	/^	t_color,$/;"	e	enum:clicky::dcss_property::__anon19
t_none	apps/clicky/src/dstyle.hh	/^	t_none = 0,$/;"	e	enum:clicky::dcss_property::__anon19
t_nox_commun	elements/local/OpenFlow/RConn.hh	/^        pthread_t       t_nox_commun;$/;"	m	class:RConn
t_numeric	apps/clicky/src/dstyle.hh	/^	t_numeric,$/;"	e	enum:clicky::dcss_property::__anon19
t_openflow_nox_commun	elements/local/OpenFlow/datapath.hh	/^	pthread_t	t_openflow_nox_commun;$/;"	m	class:Datapath
t_pixel	apps/clicky/src/dstyle.hh	/^	t_pixel,$/;"	e	enum:clicky::dcss_property::__anon19
t_relative	apps/clicky/src/dstyle.hh	/^	t_relative,$/;"	e	enum:clicky::dcss_property::__anon19
t_seconds	apps/clicky/src/dstyle.hh	/^	t_seconds,$/;"	e	enum:clicky::dcss_property::__anon19
t_shadow_style	apps/clicky/src/dstyle.hh	/^	t_shadow_style,$/;"	e	enum:clicky::dcss_property::__anon19
t_string	apps/clicky/src/dstyle.hh	/^	t_string$/;"	e	enum:clicky::dcss_property::__anon19
table	elements/local/OpenFlow/lib/of_crc32.hh	/^    unsigned int table[CRC32_TABLE_SIZE];$/;"	m	struct:crc32
table_current_size	elements/local/FlowNet/libtable/TableLinear.hh	/^	int table_current_size;$/;"	m	class:VcTableLinear
table_flow	elements/local/FlowNet/libtable/TableLinear.hh	/^	T** table_flow;$/;"	m	class:VcTableLinear
table_handler	elements/ip/iproutetable.cc	/^IPRouteTable::table_handler(Element *e, void *)$/;"	f	class:IPRouteTable
table_handler	elements/ip6/ip6routetable.cc	/^IP6RouteTable::table_handler(Element *e, void *)$/;"	f	class:IP6RouteTable
table_handler	elements/ipsec/ipsecroutetable.cc	/^IPsecRouteTable::table_handler(Element *e, void *)$/;"	f	class:IPsecRouteTable
table_hash2_create	elements/local/OpenFlow/lib/table-hash.cc	/^struct sw_table *table_hash2_create(unsigned int poly0, unsigned int buckets0,$/;"	f
table_hash2_delete	elements/local/OpenFlow/lib/table-hash.cc	/^static int table_hash2_delete(class Datapath *dp, struct sw_table *swt,$/;"	f	file:
table_hash2_destroy	elements/local/OpenFlow/lib/table-hash.cc	/^static void table_hash2_destroy(struct sw_table *swt)$/;"	f	file:
table_hash2_has_conflict	elements/local/OpenFlow/lib/table-hash.cc	/^static int table_hash2_has_conflict(struct sw_table *swt, $/;"	f	file:
table_hash2_insert	elements/local/OpenFlow/lib/table-hash.cc	/^static int table_hash2_insert(struct sw_table *swt, struct sw_flow *flow)$/;"	f	file:
table_hash2_iterate	elements/local/OpenFlow/lib/table-hash.cc	/^static int table_hash2_iterate(struct sw_table *swt,$/;"	f	file:
table_hash2_lookup	elements/local/OpenFlow/lib/table-hash.cc	/^static struct sw_flow *table_hash2_lookup(struct sw_table *swt,$/;"	f	file:
table_hash2_modify	elements/local/OpenFlow/lib/table-hash.cc	/^static int table_hash2_modify(struct sw_table *swt, $/;"	f	file:
table_hash2_stats	elements/local/OpenFlow/lib/table-hash.cc	/^static void table_hash2_stats(struct sw_table *swt,$/;"	f	file:
table_hash2_timeout	elements/local/OpenFlow/lib/table-hash.cc	/^static void table_hash2_timeout(struct sw_table *swt, struct list *deleted)$/;"	f	file:
table_hash_create	elements/local/OpenFlow/lib/table-hash.cc	/^struct sw_table *table_hash_create(unsigned int polynomial,$/;"	f
table_hash_delete	elements/local/OpenFlow/lib/table-hash.cc	/^static int table_hash_delete(class Datapath *dp, struct sw_table *swt,$/;"	f	file:
table_hash_destroy	elements/local/OpenFlow/lib/table-hash.cc	/^static void table_hash_destroy(struct sw_table *swt)$/;"	f	file:
table_hash_has_conflict	elements/local/OpenFlow/lib/table-hash.cc	/^static int table_hash_has_conflict(struct sw_table *swt,$/;"	f	file:
table_hash_insert	elements/local/OpenFlow/lib/table-hash.cc	/^static int table_hash_insert(struct sw_table *swt, struct sw_flow *flow)$/;"	f	file:
table_hash_iterate	elements/local/OpenFlow/lib/table-hash.cc	/^static int table_hash_iterate(struct sw_table *swt,$/;"	f	file:
table_hash_lookup	elements/local/OpenFlow/lib/table-hash.cc	/^static struct sw_flow *table_hash_lookup(struct sw_table *swt,$/;"	f	file:
table_hash_modify	elements/local/OpenFlow/lib/table-hash.cc	/^static int table_hash_modify(struct sw_table *swt, $/;"	f	file:
table_hash_stats	elements/local/OpenFlow/lib/table-hash.cc	/^static void table_hash_stats(struct sw_table *swt,$/;"	f	file:
table_hash_timeout	elements/local/OpenFlow/lib/table-hash.cc	/^static void table_hash_timeout(struct sw_table *swt, struct list *deleted)$/;"	f	file:
table_id	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t table_id;         \/* ID of table flow came from. *\/$/;"	m	struct:ofp_flow_stats
table_id	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t table_id;         \/* ID of table to read (from ofp_table_stats)$/;"	m	struct:ofp_aggregate_stats_request
table_id	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t table_id;         \/* ID of table to read (from ofp_table_stats),$/;"	m	struct:ofp_flow_stats_request
table_id	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t table_id;        \/* Identifier of table.  Lower numbered tables$/;"	m	struct:ofp_table_stats
table_idx	elements/local/OpenFlow/datapath.cc	/^	int table_idx;$/;"	m	struct:flow_stats_state	file:
table_linear_create	elements/local/OpenFlow/lib/table-linear.cc	/^struct sw_table *table_linear_create(unsigned int max_flows)$/;"	f
table_linear_delete	elements/local/OpenFlow/lib/table-linear.cc	/^static int table_linear_delete(class Datapath *dp, struct sw_table *swt,$/;"	f	file:
table_linear_destroy	elements/local/OpenFlow/lib/table-linear.cc	/^static void table_linear_destroy(struct sw_table *swt)$/;"	f	file:
table_linear_has_conflict	elements/local/OpenFlow/lib/table-linear.cc	/^static int table_linear_has_conflict(struct sw_table *swt,$/;"	f	file:
table_linear_insert	elements/local/OpenFlow/lib/table-linear.cc	/^static int table_linear_insert(struct sw_table *swt, struct sw_flow *flow)$/;"	f	file:
table_linear_iterate	elements/local/OpenFlow/lib/table-linear.cc	/^static int table_linear_iterate(struct sw_table *swt,$/;"	f	file:
table_linear_lookup	elements/local/OpenFlow/lib/table-linear.cc	/^static struct sw_flow *table_linear_lookup(struct sw_table *swt,$/;"	f	file:
table_linear_modify	elements/local/OpenFlow/lib/table-linear.cc	/^static int table_linear_modify(struct sw_table *swt,$/;"	f	file:
table_linear_stats	elements/local/OpenFlow/lib/table-linear.cc	/^static void table_linear_stats(struct sw_table *swt,$/;"	f	file:
table_linear_timeout	elements/local/OpenFlow/lib/table-linear.cc	/^static void table_linear_timeout(struct sw_table *swt, struct list *deleted)$/;"	f	file:
table_max_rate	elements/grid/delivery_rate_table.hh	/^static const unsigned table_max_rate  = 100;$/;"	v
table_max_size	elements/grid/delivery_rate_table.hh	/^static const unsigned table_max_size  = 1600;$/;"	v
table_max_size	elements/local/FlowNet/libtable/TableLinear.hh	/^	int table_max_size;$/;"	m	class:VcTableLinear
table_num_rates	elements/grid/delivery_rate_table.hh	/^static const unsigned table_num_rates = 21;$/;"	v
table_num_sizes	elements/grid/delivery_rate_table.hh	/^static const unsigned table_num_sizes = 161;$/;"	v
table_rate_step	elements/grid/delivery_rate_table.hh	/^static const unsigned table_rate_step = 5;$/;"	v
table_read_handler	elements/grid/loctable.cc	/^table_read_handler(Element *f, void *)$/;"	f	file:
table_size_step	elements/grid/delivery_rate_table.hh	/^static const unsigned table_size_step = 10;$/;"	v
table_stats_dump	elements/local/OpenFlow/datapath.cc	/^static int table_stats_dump(class Datapath *dp, void *state UNUSED,$/;"	f	file:
table_sz1	elements/grid/delivery_rate_table.hh	/^static const unsigned table_sz1 = 148;$/;"	v
table_sz2	elements/grid/delivery_rate_table.hh	/^static const unsigned table_sz2 = 300;$/;"	v
table_total_entry	elements/local/FlowNet/libtable/TableLinear.hh	/^	int table_total_entry;$/;"	m	class:VcTableLinear
tables	elements/local/OpenFlow/lib/chain.hh	/^    struct sw_table *tables[CHAIN_MAX_TABLES];$/;"	m	struct:sw_chain	typeref:struct:sw_chain::sw_table
tag	drivers/e1000-4.x/src/e1000_proc.c	/^	char tag[TAG_MAX_LENGTH + 1];           \/* attribute name *\/$/;"	m	struct:proc_list	file:
tag	elements/local/FlowNet/papmo/PaPMo.hh	/^	uint32_t tag;$/;"	m	struct:composed_trace
tag_mode	drivers/e1000-4.x/src/ans.h	/^    u32 tag_mode;            \/* see IANS_BD_TAGGING_MODE *\/$/;"	m	struct:_iANSsupport_t
tag_mode	drivers/e1000-4.x/src/e1000.h	/^	IANS_BD_TAGGING_MODE tag_mode;$/;"	m	struct:e1000_adapter
tag_read_handler	elements/grid/gridlocationinfo.cc	/^tag_read_handler(Element *f, void *)$/;"	f	file:
tag_read_handler	elements/grid/gridlocationinfo2.cc	/^tag_read_handler(Element *f, void *)$/;"	f	file:
tag_write_handler	elements/grid/gridlocationinfo.cc	/^tag_write_handler(const String &arg, Element *element,$/;"	f	file:
tag_write_handler	elements/grid/gridlocationinfo2.cc	/^tag_write_handler(const String &arg, Element *element,$/;"	f	file:
tail	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	int tail;$/;"	m	struct:queue_QL
tail	elements/local/OpenFlow/lib/queue.hh	/^    struct ofpbuf *tail;        \/* Last queued packet, null if n == 0. *\/$/;"	m	struct:ofp_queue	typeref:struct:ofp_queue::ofpbuf
tail	include/click/standard/storage.hh	/^    index_type tail() const		{ return _tail; }$/;"	f	class:Storage
tailpad	elements/analysis/ipsumdumpinfo.hh	/^    int tailpad;		\/\/ # bytes extraneous data at end of packet$/;"	m	struct:IPSummaryDump::PacketDesc
tailroom	include/click/packet.hh	/^Packet::tailroom() const$/;"	f	class:Packet
take	include/click/packet.hh	/^Packet::take(uint32_t len)$/;"	f	class:Packet
take_state	elements/aqm/pi.cc	/^PI::take_state(Element *e, ErrorHandler *)$/;"	f	class:PI
take_state	elements/aqm/red.cc	/^RED::take_state(Element *e, ErrorHandler *)$/;"	f	class:RED
take_state	elements/ethernet/arpquerier.cc	/^ARPQuerier::take_state(Element *e, ErrorHandler *errh)$/;"	f	class:ARPQuerier
take_state	elements/ethernet/arptable.cc	/^ARPTable::take_state(Element *e, ErrorHandler *errh)$/;"	f	class:ARPTable
take_state	elements/ethernet/ip6ndsolicitor.cc	/^IP6NDSolicitor::take_state(Element *e, ErrorHandler *)$/;"	f	class:IP6NDSolicitor
take_state	elements/linuxmodule/fromdevice.cc	/^FromDevice::take_state(Element *e, ErrorHandler *errh)$/;"	f	class:FromDevice
take_state	elements/standard/frontdropqueue.cc	/^FrontDropQueue::take_state(Element *e, ErrorHandler *errh)$/;"	f	class:FrontDropQueue
take_state	elements/standard/simplequeue.cc	/^SimpleQueue::take_state(Element *e, ErrorHandler *errh)$/;"	f	class:SimpleQueue
take_state	elements/userlevel/chattersocket.cc	/^ChatterSocket::take_state(Element *e, ErrorHandler *errh)$/;"	f	class:ChatterSocket
take_state	elements/userlevel/controlsocket.cc	/^ControlSocket::take_state(Element *e, ErrorHandler *errh)$/;"	f	class:ControlSocket
take_state	elements/userlevel/fromdump.cc	/^FromDump::take_state(Element *e, ErrorHandler *errh)$/;"	f	class:FromDump
take_state	elements/userlevel/todump.cc	/^ToDump::take_state(Element *e, ErrorHandler *)$/;"	f	class:ToDump
take_state	elements/wifi/ap/stationtable.cc	/^StationTable::take_state(Element *e, ErrorHandler *)$/;"	f	class:StationTable
take_state	elements/wifi/availablerates.cc	/^AvailableRates::take_state(Element *e, ErrorHandler *)$/;"	f	class:AvailableRates
take_state	elements/wifi/linktable.cc	/^LinkTable::take_state(Element *e, ErrorHandler *) {$/;"	f	class:LinkTable
take_state	lib/element.cc	/^Element::take_state(Element *old_element, ErrorHandler *errh)$/;"	f	class:Element
take_state	lib/fromfile.cc	/^FromFile::take_state(FromFile &o, ErrorHandler *errh)$/;"	f	class:FromFile
take_string	elements/test/confparsetest.cc	/^    String take_string() {$/;"	f	class:__anon404::RecordErrorHandler
take_string	lib/straccum.cc	/^StringAccum::take_string()$/;"	f	class:StringAccum
target	elements/grid/dsr.hh	/^  in_addr target;$/;"	m	struct:click_dsr_rreq
target_cpu	bsdmodule/Makefile	/^target_cpu = i686$/;"	m
target_cpu	etc/pkg-bsdmodule.mk	/^target_cpu ?= $(shell \/usr\/bin\/uname -p)$/;"	m
task_begin	include/click/routerthread.hh	/^RouterThread::task_begin() const$/;"	f	class:RouterThread
task_decreasing_sorter	elements/threads/balancedthreadsched.cc	/^static int task_decreasing_sorter(const void *va, const void *vb, void *) {$/;"	f	file:
task_end	include/click/routerthread.hh	/^RouterThread::task_end() const$/;"	f	class:RouterThread
task_epoch_time	lib/routerthread.cc	/^RouterThread::task_epoch_time(uint32_t epoch) const$/;"	f	class:RouterThread
task_heap_element	include/click/routerthread.hh	/^	task_heap_element() {$/;"	f	struct:RouterThread::task_heap_element
task_heap_element	include/click/routerthread.hh	/^	task_heap_element(Task *t_)$/;"	f	struct:RouterThread::task_heap_element
task_heap_element	include/click/routerthread.hh	/^    struct task_heap_element {$/;"	s	class:RouterThread
task_hook	lib/timer.cc	/^Timer::task_hook(Timer *, void *thunk)$/;"	f	class:Timer
task_increasing_sorter	elements/threads/balancedthreadsched.cc	/^static int task_increasing_sorter(const void *va, const void *vb, void *) {$/;"	f	file:
task_next	include/click/routerthread.hh	/^RouterThread::task_next(Task *task) const$/;"	f	class:RouterThread
task_or_signal_t	include/click/notifier.hh	/^    } task_or_signal_t;$/;"	t	class:ActiveNotifier	typeref:union:ActiveNotifier::__anon433
task_reheapify_from	lib/routerthread.cc	/^RouterThread::task_reheapify_from(int pos, Task* t)$/;"	f	class:RouterThread
tau	elements/grid/grid.hh	/^  uint32_t tau;         \/\/ this node's loss-rate averaging period, in msecs$/;"	m	struct:grid_link_probe
tau	elements/grid/linkstat.hh	/^    unsigned  tau;$/;"	m	struct:LinkStat::outgoing_link_entry_t
tau	elements/grid/linkstat.hh	/^    unsigned int    tau;      \/\/ this node's stats averaging period, as reported by the node$/;"	m	struct:LinkStat::probe_list_t
tau	elements/grid/linkstat.hh	/^    unsigned int tau;         \/\/ this node's loss-rate averaging period, in msecs$/;"	m	struct:LinkStat::link_probe
tb_bandwidth_thresh	elements/standard/ratedunqueue.hh	/^    enum { tb_bandwidth_thresh = 131072 };$/;"	e	enum:RatedUnqueue::__anon190
tbi_compatibility_en	drivers/e1000-4.x/src/e1000_hw.h	/^    boolean_t tbi_compatibility_en;$/;"	m	struct:e1000_hw
tbi_compatibility_en	drivers/e1000-5.x/src/e1000_hw.h	/^    boolean_t tbi_compatibility_en;$/;"	m	struct:e1000_hw
tbi_compatibility_en	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t tbi_compatibility_en;$/;"	m	struct:e1000_hw
tbi_compatibility_on	drivers/e1000-4.x/src/e1000_hw.h	/^    boolean_t tbi_compatibility_on;$/;"	m	struct:e1000_hw
tbi_compatibility_on	drivers/e1000-5.x/src/e1000_hw.h	/^    boolean_t tbi_compatibility_on;$/;"	m	struct:e1000_hw
tbi_compatibility_on	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t tbi_compatibility_on;$/;"	m	struct:e1000_hw
tbl_24_31_capacity_limit	elements/ip/directiplookup.hh	/^	tbl_24_31_capacity_limit = 32768 * 256,$/;"	e	enum:DirectIPLookup::__anon356
tcn_timer	elements/local/OpenFlow/lib/stp.cc	/^    struct stp_timer tcn_timer;     \/* 8.5.4.2: Topology change timer. *\/$/;"	m	struct:stp	typeref:struct:stp::stp_timer	file:
tcp_ack	elements/local/OpenFlow/lib/packets.hh	/^    uint32_t tcp_ack;$/;"	m	struct:tcp_header
tcp_classifier_label	conf/click-mkclgw.pl	/^sub tcp_classifier_label {$/;"	s
tcp_config	drivers/e1000-4.x/src/e1000_hw.h	/^        uint32_t tcp_config;$/;"	m	union:e1000_context_desc::__anon58
tcp_config	drivers/e1000-5.x/src/e1000_hw.h	/^        uint32_t tcp_config;$/;"	m	union:e1000_context_desc::__anon155
tcp_config	drivers/e1000-7.x/src/e1000_hw.h	/^        uint32_t tcp_config;$/;"	m	union:e1000_context_desc::__anon112
tcp_csum	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t tcp_csum;$/;"	m	struct:tcp_header
tcp_ctl	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t tcp_ctl;$/;"	m	struct:tcp_header
tcp_dst	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t tcp_dst;$/;"	m	struct:tcp_header
tcp_end	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t tcp_end;$/;"	m	struct:nx_snat_config
tcp_extract	elements/analysis/ipsumdump_tcp.cc	/^static bool tcp_extract(PacketDesc& d, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
tcp_fields	drivers/e1000-4.x/src/e1000_hw.h	/^        } tcp_fields;$/;"	m	union:e1000_context_desc::__anon58	typeref:struct:e1000_context_desc::__anon58::__anon59
tcp_fields	drivers/e1000-5.x/src/e1000_hw.h	/^        } tcp_fields;$/;"	m	union:e1000_context_desc::__anon155	typeref:struct:e1000_context_desc::__anon155::__anon156
tcp_fields	drivers/e1000-7.x/src/e1000_hw.h	/^        } tcp_fields;$/;"	m	union:e1000_context_desc::__anon112	typeref:struct:e1000_context_desc::__anon112::__anon113
tcp_fields	elements/ip/ipfieldinfo.cc	/^static const StaticNameDB::Entry tcp_fields[] = {$/;"	v	file:
tcp_flag_mapping	elements/analysis/ipsumdumpinfo.cc	/^const uint8_t tcp_flag_mapping[256] = {$/;"	m	namespace:IPSummaryDump	file:
tcp_flags	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint8_t tcp_flags;        \/* Union of seen TCP flags. *\/$/;"	m	struct:nx_flow_end
tcp_flags_word	elements/analysis/ipsumdumpinfo.cc	/^const char tcp_flags_word[] = "FSRPAUECN";$/;"	m	namespace:IPSummaryDump	file:
tcp_flow_timeout	elements/tcpudp/tcprewriter.hh	/^    int tcp_flow_timeout(const TCPFlow *mf) const {$/;"	f	class:TCPRewriter
tcp_from_extern_classify	conf/click-mkclgw.pl	/^sub tcp_from_extern_classify { return undef; }$/;"	s
tcp_from_extern_classify	conf/click-mkclgw.pl	/^sub tcp_from_extern_classify {$/;"	s
tcp_header	elements/local/OpenFlow/lib/packets.hh	/^struct tcp_header {$/;"	s
tcp_header	include/click/packet.hh	/^Packet::tcp_header() const$/;"	f	class:Packet
tcp_header	include/click/packet.hh	/^WritablePacket::tcp_header() const$/;"	f	class:WritablePacket
tcp_ina	elements/analysis/ipsumdump_tcp.cc	/^static bool tcp_ina(PacketOdesc& d, const String &str, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
tcp_inb	elements/analysis/ipsumdump_tcp.cc	/^static const uint8_t* tcp_inb(PacketOdesc& d, const uint8_t* s, const uint8_t* ends, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
tcp_inject	elements/analysis/ipsumdump_tcp.cc	/^static void tcp_inject(PacketOdesc& d, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
tcp_line	elements/ip/ipprint.cc	/^IPPrint::tcp_line(StringAccum &sa, const Packet *p, int transport_length) const$/;"	f	class:IPPrint
tcp_mappings_handler	elements/tcpudp/tcprewriter.cc	/^TCPRewriter::tcp_mappings_handler(Element *e, void *)$/;"	f	class:TCPRewriter
tcp_open	elements/local/OpenFlow/lib/vconn-tcp.cc	/^tcp_open(const char *name, char *suffix, struct vconn **vconnp)$/;"	f	file:
tcp_opt_entries	elements/ip/ipfilter.cc	/^static const StaticNameDB::Entry tcp_opt_entries[] = {$/;"	v	file:
tcp_opt_ina	elements/analysis/ipsumdump_tcp.cc	/^static bool tcp_opt_ina(PacketOdesc &d, const String &str, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
tcp_opt_mask_mapping	elements/analysis/ipsumdump_tcp.cc	/^static int tcp_opt_mask_mapping[] = {$/;"	m	namespace:IPSummaryDump	file:
tcp_or_udp_fields	elements/ip/ipfieldinfo.cc	/^static const StaticNameDB::Entry tcp_or_udp_fields[] = {$/;"	v	file:
tcp_outa	elements/analysis/ipsumdump_tcp.cc	/^static void tcp_outa(const PacketDesc& d, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
tcp_outb	elements/analysis/ipsumdump_tcp.cc	/^static void tcp_outb(const PacketDesc& d, bool ok, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
tcp_readers	elements/analysis/ipsumdump_tcp.cc	/^static const FieldReader tcp_readers[] = {$/;"	m	namespace:IPSummaryDump	file:
tcp_rewriter	conf/click-mkclgw.pl	/^sub tcp_rewriter {$/;"	s
tcp_seg_setup	drivers/e1000-4.x/src/e1000_hw.h	/^    } tcp_seg_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon60
tcp_seg_setup	drivers/e1000-5.x/src/e1000_hw.h	/^    } tcp_seg_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon157
tcp_seg_setup	drivers/e1000-7.x/src/e1000_hw.h	/^    } tcp_seg_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon114
tcp_seq	elements/local/OpenFlow/lib/packets.hh	/^    uint32_t tcp_seq;$/;"	m	struct:tcp_header
tcp_seq_t	include/clicknet/tcp.h	/^typedef	uint32_t tcp_seq_t;$/;"	t
tcp_src	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t tcp_src;$/;"	m	struct:tcp_header
tcp_start	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t tcp_start;$/;"	m	struct:nx_snat_config
tcp_synonyms	elements/analysis/ipsumdump_tcp.cc	/^static const FieldSynonym tcp_synonyms[] = {$/;"	m	namespace:IPSummaryDump	file:
tcp_urg	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t tcp_urg;$/;"	m	struct:tcp_header
tcp_vconn_class	elements/local/OpenFlow/lib/vconn-tcp.cc	/^struct vconn_class tcp_vconn_class = {$/;"	v	typeref:struct:vconn_class
tcp_winsz	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t tcp_winsz;$/;"	m	struct:tcp_header
tcp_writers	elements/analysis/ipsumdump_tcp.cc	/^static const FieldWriter tcp_writers[] = {$/;"	m	namespace:IPSummaryDump	file:
tcph	elements/analysis/fromnlanrdump.hh	/^	click_tcp tcph;		\/\/ last 4 bytes left off$/;"	m	struct:FromNLANRDump::FRPlusCell
tcph	elements/analysis/fromnlanrdump.hh	/^	click_tcp tcph;		\/\/ last 4 bytes left off$/;"	m	struct:FromNLANRDump::TSHCell
tcph	elements/analysis/ipsumdumpinfo.hh	/^    const click_tcp *tcph;$/;"	m	struct:IPSummaryDump::PacketDesc
tcpip	elements/ip/rfc2507c.hh	/^    tcpip() { _ip.ip_src.s_addr = 0; }$/;"	f	struct:RFC2507c::tcpip
tcpip	elements/ip/rfc2507c.hh	/^  struct tcpip {$/;"	s	class:RFC2507c
tcpip	elements/ip/rfc2507d.hh	/^    tcpip() { _ip.ip_src.s_addr = 0; }$/;"	f	struct:RFC2507d::tcpip
tcpip	elements/ip/rfc2507d.hh	/^  struct tcpip {$/;"	s	class:RFC2507d
tdh	drivers/e1000-7.x/src/e1000.h	/^	uint16_t tdh;$/;"	m	struct:e1000_tx_ring
tdt	drivers/e1000-7.x/src/e1000.h	/^	uint16_t tdt;$/;"	m	struct:e1000_tx_ring
temp_string	lib/confparse.cc	/^  String temp_string;$/;"	m	struct:__anon517::CpVaHelper	file:
test	apps/csclient/csclient.cc	509;"	d	file:
test_add	elements/test/biginttest.cc	/^static bool test_add(uint64_t a, uint64_t b, ErrorHandler *errh) {$/;"	f	file:
test_cc	drivers/e1000-4.x/src/Makefile	/^test_cc = $(shell which $(cc) > \/dev\/null 2>&1 && echo $(cc))$/;"	m
test_cc	drivers/e1000-5.x/src/Makefile	/^test_cc = $(shell which $(cc) > \/dev\/null 2>&1 && echo $(cc))$/;"	m
test_cc	drivers/e1000-7.x/src/Makefile	/^test_cc = $(shell $(cc) --version > \/dev\/null 2>&1 && echo $(cc))$/;"	m
test_dir	click-compile	/^test_dir () {$/;"	f
test_dir	drivers/e1000-4.x/src/Makefile	/^    test_dir = $(findstring $(dir), $(MANPATH))$/;"	m
test_dir	drivers/e1000-4.x/src/Makefile	/^    test_dir = $(shell [ -e $(dir) ] && echo $(dir))$/;"	m
test_dir	drivers/e1000-4.x/src/Makefile	/^test_dir = $(shell [ -e $(dir)\/include\/linux ] && echo $(dir))$/;"	m
test_dir	drivers/e1000-5.x/src/Makefile	/^    test_dir = $(findstring $(dir), $(MANPATH))$/;"	m
test_dir	drivers/e1000-5.x/src/Makefile	/^    test_dir = $(shell [ -e $(dir) ] && echo $(dir))$/;"	m
test_dir	drivers/e1000-5.x/src/Makefile	/^test_dir = $(shell [ -e $(dir)\/include\/linux ] && echo $(dir))$/;"	m
test_dir	drivers/e1000-7.x/src/Makefile	/^    test_dir = $(findstring $(dir), $(MANPATH))$/;"	m
test_dir	drivers/e1000-7.x/src/Makefile	/^    test_dir = $(shell [ -e $(dir) ] && echo $(dir))$/;"	m
test_dir	drivers/e1000-7.x/src/Makefile	/^test_dir = $(shell [ -e $(dir)\/include\/linux ] && echo $(dir))$/;"	m
test_div	elements/test/biginttest.cc	/^static bool test_div(uint64_t a, uint32_t b, ErrorHandler *errh) {$/;"	f	file:
test_icr	drivers/e1000-5.x/src/e1000.h	/^	uint32_t test_icr;$/;"	m	struct:e1000_adapter
test_icr	drivers/e1000-7.x/src/e1000.h	/^	uint32_t test_icr;$/;"	m	struct:e1000_adapter
test_inverse	elements/test/biginttest.cc	/^static bool test_inverse(uint32_t a, ErrorHandler *errh) {$/;"	f	file:
test_mul	elements/test/biginttest.cc	/^static bool test_mul(uint64_t a, uint32_t b, ErrorHandler *errh) {$/;"	f	file:
test_multiply	elements/test/biginttest.cc	/^static bool test_multiply(uint32_t a, uint32_t b, ErrorHandler *errh) {$/;"	f	file:
test_rx_ring	drivers/e1000-5.x/src/e1000.h	/^	struct e1000_desc_ring test_rx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_desc_ring
test_rx_ring	drivers/e1000-7.x/src/e1000.h	/^	struct e1000_rx_ring test_rx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_rx_ring
test_tx_ring	drivers/e1000-5.x/src/e1000.h	/^	struct e1000_desc_ring test_tx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_desc_ring
test_tx_ring	drivers/e1000-7.x/src/e1000.h	/^	struct e1000_tx_ring test_tx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_tx_ring
testie_child	test/testie	/^sub testie_child () {$/;"	s
testie_child_reaper	test/testie	/^sub testie_child_reaper {$/;"	s
testie_parent_loop	test/testie	/^sub testie_parent_loop (\\@$$$) {$/;"	s
testinfo_len	drivers/e1000-5.x/src/kcompat.h	/^	uint32_t testinfo_len;$/;"	m	struct:k_ethtool_drvinfo
testinfo_len	drivers/e1000-7.x/src/kcompat.h	/^	uint32_t testinfo_len;$/;"	m	struct:k_ethtool_drvinfo
text	apps/clicky/src/dstyle.hh	/^    String text;$/;"	m	struct:clicky::delt_style
text	apps/clicky/src/dstyle.hh	/^    String text;$/;"	m	struct:clicky::dport_style
text	apps/clicky/src/dstyle.hh	/^    const String &text() const {$/;"	f	class:clicky::dcss_set
text	lib/clp.c	/^    char *text;$/;"	m	struct:Clp_BuildString	file:
text	tools/click-pretty/click-pretty.cc	/^    String text;$/;"	m	struct:OutputItem	file:
textdomain	apps/clicky/src/support.h	25;"	d
textize_add_links	doc/click-elem2man	/^sub textize_add_links ($$) {$/;"	s
tf_reply_seqno_delta	elements/tcpudp/tcprewriter.hh	/^	    tf_seqno_delta = 1, tf_reply_seqno_delta = 2$/;"	e	enum:TCPRewriter::TCPFlow::__anon230
tf_seqno_delta	elements/tcpudp/tcprewriter.hh	/^	    tf_seqno_delta = 1, tf_reply_seqno_delta = 2$/;"	e	enum:TCPRewriter::TCPFlow::__anon230
th_ack	elements/analysis/toipflowdumps.hh	/^	tcp_seq_t th_ack;$/;"	m	struct:ToIPFlowDumps::Pkt
th_ack	include/clicknet/tcp.h	/^    tcp_seq_t	th_ack;			\/* 8-11  acknowledgement number	     *\/$/;"	m	struct:click_tcp
th_dport	include/clicknet/tcp.h	/^    uint16_t	th_dport;		\/* 2-3   destination port	     *\/$/;"	m	struct:click_tcp
th_flags	elements/analysis/fromnlanrdump.hh	/^	uint8_t th_flags;$/;"	m	struct:FromNLANRDump::FRCell
th_flags	elements/analysis/toipflowdumps.hh	/^	uint8_t th_flags;$/;"	m	struct:ToIPFlowDumps::Pkt
th_flags	include/clicknet/tcp.h	/^    uint8_t	th_flags;		\/* 13    flags			     *\/$/;"	m	struct:click_tcp
th_flags2	include/clicknet/tcp.h	/^    unsigned	th_flags2 : 4;		\/*       more flags		     *\/$/;"	m	struct:click_tcp
th_flags2	include/clicknet/tcp.h	/^    unsigned	th_flags2 : 4;		\/* 12    more flags		     *\/$/;"	m	struct:click_tcp
th_off	include/clicknet/tcp.h	/^    unsigned	th_off : 4;		\/*       data offset in words	     *\/$/;"	m	struct:click_tcp
th_off	include/clicknet/tcp.h	/^    unsigned	th_off : 4;		\/* 12    data offset in words	     *\/$/;"	m	struct:click_tcp
th_seq	elements/analysis/toipflowdumps.hh	/^	tcp_seq_t th_seq;$/;"	m	struct:ToIPFlowDumps::Pkt
th_seq	include/clicknet/tcp.h	/^    tcp_seq_t	th_seq;			\/* 4-7   sequence number	     *\/$/;"	m	struct:click_tcp
th_sport	include/clicknet/tcp.h	/^    uint16_t	th_sport;		\/* 0-1   source port		     *\/$/;"	m	struct:click_tcp
th_sum	include/clicknet/tcp.h	/^    uint16_t	th_sum;			\/* 16-17 checksum		     *\/$/;"	m	struct:click_tcp
th_urp	include/clicknet/tcp.h	/^    uint16_t	th_urp;			\/* 18-19 urgent pointer		     *\/$/;"	m	struct:click_tcp
th_win	include/clicknet/tcp.h	/^    uint16_t	th_win;			\/* 14-15 window			     *\/$/;"	m	struct:click_tcp
the_blank_handler	include/click/handler.hh	/^    static const Handler *the_blank_handler;$/;"	m	class:Handler
the_blank_handler	lib/router.cc	/^const Handler* Handler::the_blank_handler;$/;"	m	class:Handler	file:
the_clickpath	lib/userutils.cc	/^static const char* the_clickpath = 0;$/;"	v	file:
the_default_handler	include/click/error.hh	/^    static ErrorHandler *the_default_handler;$/;"	m	class:ErrorHandler
the_default_handler	lib/error.cc	/^ErrorHandler *ErrorHandler::the_default_handler = 0;$/;"	m	class:ErrorHandler	file:
the_element_map	tools/lib/elementmap.cc	/^ElementMap *ElementMap::the_element_map = &main_element_map;$/;"	m	class:ElementMap	file:
the_element_map	tools/lib/elementmap.hh	/^    static ElementMap* the_element_map;$/;"	m	class:ElementMap
the_empty_set	tools/lib/landmarkt.hh	/^    static LandmarkSetT *the_empty_set;$/;"	m	class:LandmarkSetT
the_factory	include/click/bighashmap_arena.hh	/^    static HashMap_ArenaFactory *the_factory;$/;"	m	class:HashMap_ArenaFactory
the_factory	lib/bighashmap_arena.cc	/^HashMap_ArenaFactory *HashMap_ArenaFactory::the_factory = 0;$/;"	m	class:HashMap_ArenaFactory	file:
the_name_info	lib/nameinfo.cc	/^static NameInfo *the_name_info;$/;"	v	file:
the_null_traits	tools/lib/etraits.cc	/^ElementTraits ElementTraits::the_null_traits;$/;"	m	class:ElementTraits	file:
the_null_traits	tools/lib/etraits.hh	/^    static ElementTraits the_null_traits;$/;"	m	struct:ElementTraits
the_silent_handler	include/click/error.hh	/^    static ErrorHandler *the_silent_handler;$/;"	m	class:ErrorHandler
the_silent_handler	lib/error.cc	/^ErrorHandler *ErrorHandler::the_silent_handler = 0;$/;"	m	class:ErrorHandler	file:
the_tunnel_type	tools/lib/eclasst.hh	/^    static ElementClassT *the_tunnel_type;$/;"	m	class:ElementClassT
thesim	ns/nsclick-test.cc	/^static TestClickSimulator thesim;$/;"	v	file:
thing_read_handler	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::thing_read_handler(int, String& s, Element* e, const Handler* h, ErrorHandler* errh)$/;"	f	class:AggregatePacketCounter
this	include/click/cxxprotect.h	3;"	d
this	include/click/cxxunprotect.h	3;"	d
thiszone	elements/linuxmodule/touserdevice.cc	/^    int32_t  thiszone;	     \/* GMT to local correction *\/$/;"	m	struct:pcap_hdr	file:
thiszone	elements/local/OpenFlow/lib/pcap.cc	/^    int32_t thiszone;        \/* GMT to local correction *\/$/;"	m	struct:pcap_hdr	file:
thiszone	elements/userlevel/fakepcap.hh	/^	int32_t thiszone;	\/* gmt to local correction *\/$/;"	m	struct:fake_pcap_file_header
thread	include/click/master.hh	/^Master::thread(int id) const$/;"	f	class:Master
thread	include/click/task.hh	/^Task::thread() const$/;"	f	class:Task
thread	include/click/timer.hh	/^    inline RouterThread *thread() const {$/;"	f	class:Timer
thread_driver	userlevel/click.cc	/^static void *thread_driver(void *user_data)$/;"	f	file:
thread_id	include/click/routerthread.hh	/^RouterThread::thread_id() const$/;"	f	class:RouterThread
thread_nox_commun	elements/local/OpenFlow/RConn.cc	/^void* thread_nox_commun(void* param)$/;"	f
thread_packet_pool	lib/packet.cc	/^static __thread PacketPool *thread_packet_pool;$/;"	v	file:
thread_papmo_send	elements/local/FlowNet/papmo/PaPMo.cc	/^void* thread_papmo_send(void* arg) {$/;"	f
thread_sched	include/click/router.hh	/^Router::thread_sched() const$/;"	f	class:Router
thread_state	include/click/routerthread.hh	/^    int thread_state() const		{ return _thread_state; }$/;"	f	class:RouterThread
thread_state_count	include/click/routerthread.hh	/^RouterThread::thread_state_count(int state) const$/;"	f	class:RouterThread
thread_state_name	lib/routerthread.cc	/^RouterThread::thread_state_name(int ts)$/;"	f	class:RouterThread
thread_state_time	include/click/routerthread.hh	/^RouterThread::thread_state_time(int state) const$/;"	f	class:RouterThread
threads	linuxmodule/kernelversion.c	/^CLICK_INT_MODULE_PARAM(threads);$/;"	v
threads	linuxmodule/kernelversion.c	/^static int threads = 1;$/;"	v	file:
thresh_qlen	elements/local/FlowNet/common/FlowNetGod.hh	/^	int thresh_qlen;$/;"	m	struct:paramset_sourceproxytable
thresh_read_handler	elements/standard/block.cc	/^Block::thresh_read_handler(Element *e, void *)$/;"	f	class:Block
thresh_read_handler	elements/standard/compblock.cc	/^CompareBlock::thresh_read_handler(Element *e, void *)$/;"	f	class:CompareBlock
thresh_write_handler	elements/standard/block.cc	/^Block::thresh_write_handler(const String &conf, Element *e, void *, ErrorHandler *errh)$/;"	f	class:Block
thresh_write_handler	elements/standard/compblock.cc	/^CompareBlock::thresh_write_handler(const String &conf, Element *e,$/;"	f	class:CompareBlock
throb_after	apps/clicky/src/crouter.cc	/^crouter::throb_after::throb_after(crouter *cr, int timeout)$/;"	f	class:clicky::crouter::throb_after
throb_after	apps/clicky/src/crouter.hh	/^    class throb_after { public:$/;"	c	class:clicky::crouter
throb_after_timeout	apps/clicky/src/crouter.cc	/^static gboolean throb_after_timeout(gpointer user_data)$/;"	f	file:
throbber	apps/clicky/src/crouter.cc	/^void crouter::throbber(bool show)$/;"	f	class:clicky::crouter
throbber_img	apps/clicky/src/wmain.cc	/^static GdkPixbufAnimation *throbber_img = 0;$/;"	m	namespace:clicky	file:
throbber_loaded	apps/clicky/src/wmain.cc	/^static bool throbber_loaded = false;$/;"	m	namespace:clicky	file:
throughput	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^	float throughput;$/;"	m	struct:FlowMpeg2AdaptEncapStat
throughput	elements/local/FlowNet/scheduler/FlowSchedulable.hh	/^	float throughput;$/;"	m	struct:E2ESignalInfo
thunk	elements/userlevel/handlerproxy.hh	/^	void* thunk;$/;"	m	struct:HandlerProxy::ErrorReceiver
thunk	include/click/lexer.hh	/^	uintptr_t thunk;$/;"	m	struct:Lexer::ElementType
thunk	include/click/task.hh	/^Task::thunk() const$/;"	f	class:Task
tick	elements/local/OpenFlow/lib/timeval.cc	/^static volatile sig_atomic_t tick;$/;"	v	file:
tickets	elements/standard/stridesched.cc	/^StrideSched::tickets(int port) const$/;"	f	class:StrideSched
tickets	include/click/routerthread.hh	/^	int tickets;$/;"	m	struct:RouterThread::Client
tickets	include/click/task.hh	/^Task::tickets() const$/;"	f	class:Task
ticks_interval_msec	elements/local/FlowNet/common/FlowNetGod.hh	/^	int ticks_interval_msec;$/;"	m	struct:paramset_sourceproxytable
tim	include/clicknet/wifi.h	/^	struct tim {$/;"	s	struct:wifi_information
tim	include/clicknet/wifi.h	/^	} tim;$/;"	m	struct:wifi_information	typeref:struct:wifi_information::tim
time	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	double time;$/;"	m	struct:queue_length
time_add	elements/local/OpenFlow/lib/timeval.cc	/^time_add(time_t a, time_t b)$/;"	f	file:
time_alarm	elements/local/OpenFlow/lib/timeval.cc	/^time_alarm(unsigned int secs)$/;"	f
time_init	elements/local/OpenFlow/lib/timeval.cc	/^time_init(void)$/;"	f
time_max	elements/icmp/icmpsendpings.hh	/^	uint32_t time_max;$/;"	m	struct:ICMPPingSource::ReceiverInfo
time_min	elements/icmp/icmpsendpings.hh	/^	uint32_t time_min;$/;"	m	struct:ICMPPingSource::ReceiverInfo
time_msec	elements/local/OpenFlow/lib/timeval.cc	/^time_msec(void)$/;"	f
time_now	elements/local/OpenFlow/lib/timeval.cc	/^time_now(void)$/;"	f
time_poll	elements/local/OpenFlow/lib/timeval.cc	/^time_poll(struct pollfd *pollfds, int n_pollfds, int timeout)$/;"	f
time_refresh	elements/local/OpenFlow/lib/timeval.cc	/^time_refresh(void)$/;"	f
time_sq_sum	elements/icmp/icmpsendpings.hh	/^	counter_t time_sq_sum;$/;"	m	struct:ICMPPingSource::ReceiverInfo
time_stamp	drivers/e1000-4.x/src/e1000.h	/^	unsigned long time_stamp;$/;"	m	struct:e1000_buffer
time_stamp	drivers/e1000-5.x/src/e1000.h	/^	unsigned long time_stamp;$/;"	m	struct:e1000_buffer
time_stamp	drivers/e1000-7.x/src/e1000.h	/^	unsigned long time_stamp;$/;"	m	struct:e1000_buffer
time_sum	elements/icmp/icmpsendpings.hh	/^	counter_t time_sum;$/;"	m	struct:ICMPPingSource::ReceiverInfo
time_tick	elements/local/FlowNet/libtable/TableLinear.hh	/^int VcTableLinear<T>::time_tick()$/;"	f	class:VcTableLinear
timed_out	elements/local/OpenFlow/lib/rconn.cc	/^timed_out(const struct rconn *rc)$/;"	f	file:
timeout	elements/ethernet/arptable.hh	/^    Timestamp timeout() const {$/;"	f	class:ARPTable
timeout	elements/local/OpenFlow/datapath.hh	/^	time_t timeout;$/;"	m	struct:dp_packet_buffer
timeout	elements/local/OpenFlow/lib/poll-loop.cc	/^static int timeout = -1;$/;"	v	file:
timeout	elements/local/OpenFlow/lib/rconn.cc	/^timeout(const struct rconn *rc)$/;"	f	file:
timeout	elements/local/OpenFlow/lib/table.hh	/^    void (*timeout)(struct sw_table *table, struct list *deleted);$/;"	m	struct:sw_table
timeout_ACTIVE	elements/local/OpenFlow/lib/rconn.cc	/^timeout_ACTIVE(const struct rconn *rc)$/;"	f	file:
timeout_BACKOFF	elements/local/OpenFlow/lib/rconn.cc	/^timeout_BACKOFF(const struct rconn *rc)$/;"	f	file:
timeout_CONNECTING	elements/local/OpenFlow/lib/rconn.cc	/^timeout_CONNECTING(const struct rconn *rc)$/;"	f	file:
timeout_IDLE	elements/local/OpenFlow/lib/rconn.cc	/^timeout_IDLE(const struct rconn *rc)$/;"	f	file:
timeout_VOID	elements/local/OpenFlow/lib/rconn.cc	/^timeout_VOID(const struct rconn *rc UNUSED)$/;"	f	file:
timer_check	include/click/timerset.hh	/^    const Timestamp &timer_check() const	{ return _timer_check; }$/;"	f	class:TimerSet
timer_hook	elements/grid/linktester.cc	/^LinkTester::timer_hook()$/;"	f	class:LinkTester
timer_hook	elements/standard/pokehandlers.cc	/^PokeHandlers::timer_hook(Timer *, void *thunk)$/;"	f	class:PokeHandlers
timer_id	drivers/e1000-4.x/src/ans.h	/^    u32 timer_id;            \/* iANS watchdog timer ID *\/$/;"	m	struct:_iANSsupport_t
timer_set	include/click/routerthread.hh	/^    inline TimerSet &timer_set()		{ return _timers; }$/;"	f	class:RouterThread
timer_set	include/click/routerthread.hh	/^    inline const TimerSet &timer_set() const	{ return _timers; }$/;"	f	class:RouterThread
timer_stride	include/click/timerset.hh	/^    unsigned timer_stride() const		{ return _timer_stride; }$/;"	f	class:TimerSet
timer_to_ms	elements/local/OpenFlow/lib/stp.cc	/^timer_to_ms(int timer)$/;"	f	file:
timeradd	include/click/glue.hh	429;"	d
timerclear	include/click/glue.hh	422;"	d
timercmp	include/click/glue.hh	423;"	d
timerisset	include/click/glue.hh	421;"	d
timersub	include/click/glue.hh	441;"	d
timespec	include/click/timestamp.hh	/^Timestamp::timespec() const$/;"	f	class:Timestamp
timestamp	apps/clicky/src/ddecor.hh	/^	double timestamp;$/;"	m	struct:clicky::dactivity_decor::sample
timestamp	elements/analysis/fromdagdump.hh	/^	uint64_t timestamp;$/;"	m	struct:FromDAGDump::DAGCell
timestamp	elements/analysis/toipflowdumps.hh	/^	Timestamp timestamp;$/;"	m	struct:ToIPFlowDumps::Pkt
timestamp	elements/grid/packetlogger.hh	/^    Timestamp timestamp;$/;"	m	struct:PacketLogger::log_entry
timestamp	elements/grid/packetlogger2.hh	/^    Timestamp timestamp;$/;"	m	struct:PacketLogger2::log_entry
timestamp	elements/linuxmodule/anydevice.hh	/^    bool timestamp() const		{ return _timestamp; }$/;"	f	class:AnyDevice
timestamp	elements/wifi/packetstore.hh	/^	  Timestamp timestamp;$/;"	m	class:PacketStore::store
timestamp	include/click/packet.hh	/^	Timestamp timestamp;$/;"	m	struct:Packet::AllAnno
timestamp_anno	include/click/packet.hh	/^Packet::timestamp_anno() const$/;"	f	class:Packet
timestamp_anno	include/click/packet.hh	/^Packet::timestamp_anno()$/;"	f	class:Packet
timestamp_data_handler	lib/element.cc	/^timestamp_data_handler(int op, String &str, Element *element, const Handler *h, ErrorHandler *errh)$/;"	f	file:
timestamp_error_hook	lib/error.cc	/^timestamp_error_hook(int, VA_LIST_REF_T val)$/;"	f	file:
timestamp_rep	elements/userlevel/fakepcap.hh	/^	Timestamp::rep_t timestamp_rep;$/;"	m	union:fake_bpf_timeval_union
timestamp_schedule	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^void PFSchedFW::timestamp_schedule()$/;"	f	class:PFSchedFW
timestamp_sec	elements/analysis/fromnlanrdump.hh	/^	uint32_t timestamp_sec;$/;"	m	struct:FromNLANRDump::FRCell
timestamp_sec	elements/analysis/fromnlanrdump.hh	/^	uint32_t timestamp_sec;$/;"	m	struct:FromNLANRDump::FRPlusCell
timestamp_sec	elements/analysis/fromnlanrdump.hh	/^	uint32_t timestamp_sec;$/;"	m	struct:FromNLANRDump::TSHCell
timestamp_usec	elements/analysis/fromnlanrdump.hh	/^	uint32_t timestamp_usec; \/\/ upper 8 bits are interface #$/;"	m	struct:FromNLANRDump::TSHCell
timestamp_usec	elements/analysis/fromnlanrdump.hh	/^	uint32_t timestamp_usec;$/;"	m	struct:FromNLANRDump::FRCell
timestamp_usec	elements/analysis/fromnlanrdump.hh	/^	uint32_t timestamp_usec;$/;"	m	struct:FromNLANRDump::FRPlusCell
timeval	include/click/timestamp.hh	/^Timestamp::timeval() const$/;"	f	class:Timestamp
timeval_error_hook	lib/error.cc	/^timeval_error_hook(int, VA_LIST_REF_T val)$/;"	f	file:
timevaldiff	elements/local/FlowNet/utils/FlowNetUtils.cc	/^long timevaldiff( struct timeval* starttime, struct timeval *finishtime )$/;"	f
timewarp_read_handler	userlevel/click.cc	/^timewarp_read_handler(Element *, void *)$/;"	f	file:
timewarp_write_handler	userlevel/click.cc	/^timewarp_write_handler(const String &text, Element *, void *, ErrorHandler *errh)$/;"	f	file:
tipc_error	test/testie	/^sub tipc_error () {$/;"	s
tipc_read	test/testie	/^sub tipc_read ($$) {$/;"	s
tipc_write	test/testie	/^sub tipc_write ($$;$$) {$/;"	s
tma_window_size	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	int tma_window_size;$/;"	m	struct:CORE
tmain	apps/clicky/src/tmain.cc	/^tmain::tmain(dcss_set *ccss)$/;"	f	class:clicky::tmain
tmain	apps/clicky/src/tmain.hh	/^class tmain : public crouter { public:$/;"	c	namespace:clicky
tmp_dh_callback	elements/local/OpenFlow/lib/vconn-ssl.cc	/^tmp_dh_callback(SSL *ssl UNUSED, int is_export UNUSED, int keylength)$/;"	f	file:
tmpdir	lib/driver.cc	/^static String *click_buildtool_prog, *tmpdir;$/;"	v	file:
tmpdir	tools/click-install/click-install.cc	/^static String tmpdir;$/;"	v	file:
tncrs	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t tncrs;$/;"	m	struct:e1000_hw_stats
tncrs	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t tncrs;$/;"	m	struct:e1000_hw_stats
tncrs	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t tncrs;$/;"	m	struct:e1000_hw_stats
tnotify	apps/clicky/src/cdriver.hh	/^	crouter::throb_after tnotify;$/;"	m	struct:clicky::csocket_cdriver::msg
to	apps/clicky/src/dwidget.hh	/^	delt *to;$/;"	m	struct:clicky::delt::delt_conn
to	tools/click2xml/xml2click.hh	/^    String to;$/;"	m	struct:CxConnection
to	tools/lib/elementt.hh	/^    const PortT &to() const		{ return end(end_to); }$/;"	f	class:ConnectionT
toDeg	elements/grid/grid.hh	/^  static double toDeg(int32_t ms) {$/;"	f	struct:grid_location
toMS	elements/grid/grid.hh	/^  static long toMS(double d) {$/;"	f	struct:grid_location
toString	apps/ClickController/ControlSocket.java	/^	public String toString() {$/;"	m	class:ControlSocket.HandlerInfo
toString	apps/ClickController/ControlSocket.java	/^    public String toString() {$/;"	m	class:ControlSocket
toString	apps/ClickController/RouterTreeModel.java	/^	public String toString() {$/;"	m	class:RouterTreeModel.HandlerUserObject
toString	elements/local/FlowNet/common/BWShape.cc	/^void VcBWShape::toString( Flow *, char *buf, int  )$/;"	f	class:VcBWShape
toString	elements/local/FlowNet/common/Flow.cc	/^void Flow::toString(char* buf, int )$/;"	f	class:Flow
toString	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^void FlowMpeg2AdaptDecap::toString( char* str, int len )$/;"	f	class:FlowMpeg2AdaptDecap
toString	elements/local/FlowNet/scheduler/FlowSchedulable.cc	/^void FlowSchedulable::toString(char* buf, int len)$/;"	f	class:FlowSchedulable
toString	elements/local/FlowNet/shaper/FlowBWShaperable.cc	/^void FlowBWShaperable::toString( char* buf, int len )$/;"	f	class:FlowBWShaperable
toString	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.cc	/^void VcBWShapeByCD::toString(Flow *flow_in, char *buf, int)$/;"	f	class:VcBWShapeByCD
toString	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.cc	/^void VcBWShapeByCD_CFB::toString(Flow* flow_in, char* buf, int)$/;"	f	class:VcBWShapeByCD_CFB
to_device_count	elements/bsdmodule/todevice.cc	/^static int to_device_count;$/;"	v	file:
to_device_map	elements/bsdmodule/todevice.cc	/^static AnyDeviceMap to_device_map;$/;"	v	file:
to_device_map	elements/linuxmodule/todevice.cc	/^static AnyDeviceMap to_device_map;$/;"	v	file:
to_eindex	tools/lib/elementt.hh	/^    int to_eindex() const		{ return eindex(end_to); }$/;"	f	class:ConnectionT
to_element	tools/lib/elementt.hh	/^    ElementT *to_element() const	{ return element(end_to); }$/;"	f	class:ConnectionT
to_elt	apps/clicky/src/dwidget.hh	/^    delt *to_elt() const {$/;"	f	class:clicky::dconn
to_host_map	elements/bsdmodule/tohost.cc	/^static AnyDeviceMap to_host_map;$/;"	v	file:
to_host_map	elements/linuxmodule/tohost.cc	/^static AnyDeviceMap to_host_map;$/;"	v	file:
to_machines	conf/click-mkclgw.pl	/^sub to_machines {$/;"	s
to_port	apps/clicky/src/dwidget.hh	/^	int to_port;$/;"	m	struct:clicky::delt::delt_conn
to_port	apps/clicky/src/dwidget.hh	/^    int to_port() const {$/;"	f	class:clicky::dconn
to_port	tools/lib/elementt.hh	/^    int to_port() const			{ return port(end_to); }$/;"	f	class:ConnectionT
to_string	elements/local/FlowNet/libclassify/Classify5Tuple.cc	/^int Vc5TupleClassify::to_string(const struct FlowID* fid, char* buf, int len)$/;"	f	class:Vc5TupleClassify
to_string	elements/local/FlowNet/libclassify/ClassifyNoClassify.cc	/^int VcNoClassify::to_string(const struct FlowID* , char* buf, int len)$/;"	f	class:VcNoClassify
to_wire	elements/etherswitch/bridgemessage.cc	/^BridgeMessage::to_wire(BridgeMessage::wire* msg) const {$/;"	f	class:BridgeMessage
todev_static_cleanup	elements/bsdmodule/todevice.cc	/^todev_static_cleanup()$/;"	f	file:
todev_static_initialize	elements/bsdmodule/todevice.cc	/^todev_static_initialize()$/;"	f	file:
tohost_eth_type_trans	elements/linuxmodule/tohost.cc	/^tohost_eth_type_trans(struct sk_buff *skb, struct net_device *dev)$/;"	f	file:
token_scale	include/click/tokenbucket.hh	/^    token_type token_scale() const {$/;"	f	class:TokenRateX
token_type	include/click/tokenbucket.hh	/^    typedef T token_type;$/;"	t	class:TokenBucketJiffyParameters
token_type	include/click/tokenbucket.hh	/^    typedef typename P::token_type token_type;$/;"	t	class:TokenRateX
token_type	include/click/tokenbucket.hh	/^    typedef typename R::token_type token_type;$/;"	t	class:TokenCounterX
token_type	include/click/tokenbucket.hh	/^    typedef typename rate_type::token_type token_type;$/;"	t	class:TokenBucketX
tokens	elements/local/OpenFlow/lib/vlog.hh	/^    unsigned int tokens;        \/* Current number of tokens. *\/$/;"	m	struct:vlog_rate_limit
tokens_per_epoch	include/click/tokenbucket.hh	/^    token_type tokens_per_epoch() const {$/;"	f	class:TokenRateX
too_short	apps/csclient/csclient.hh	/^    too_short           \/* user buffer was too short *\/$/;"	e	enum:ControlSocketClient::err_t
toolincludedir	Makefile	/^toolincludedir = $(includedir)\/clicktool$/;"	m
toolincludedir	tools/lib/Makefile	/^toolincludedir = $(includedir)\/clicktool$/;"	m
top	ns/CUT_BinHeap.h	/^  Data& top() const {$/;"	f	class:CUT_BinHeap
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_builddir	bsdmodule/Makefile	/^top_builddir := ..$/;"	m
top_builddir	doc/Makefile	/^top_builddir = ..$/;"	m
top_builddir	etc/libclick/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	etc/pkg-linuxmodule-26.mk	/^top_builddir := $(obj)\/$(top_builddir)$/;"	m
top_builddir	linuxmodule/Makefile	/^top_builddir := $(obj)\/..$/;"	m
top_builddir	linuxmodule/Makefile	/^top_builddir := ..$/;"	m
top_builddir	ns/Makefile	/^top_builddir := ..$/;"	m
top_builddir	tools/Makefile	/^top_builddir = ..$/;"	m
top_builddir	tools/click-align/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	tools/click-check/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	tools/click-combine/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	tools/click-devirtualize/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	tools/click-fastclassifier/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	tools/click-flatten/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	tools/click-install/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	tools/click-mkmindriver/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	tools/click-pretty/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	tools/click-undead/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	tools/click-xform/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	tools/click2xml/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	tools/lib/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	userlevel/Makefile	/^top_builddir := ..$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_distdir	etc/libclick/Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
top_srcdir	bsdmodule/Makefile	/^top_srcdir := ..$/;"	m
top_srcdir	doc/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	etc/libclick/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	etc/pkg-linuxmodule-26.mk	/^top_srcdir := $(obj)\/$(top_srcdir)$/;"	m
top_srcdir	etc/pkg-linuxmodule-26.mk	/^top_srcdir := $(src)\/..$/;"	m
top_srcdir	linuxmodule/Makefile	/^top_srcdir := $(obj)\/..$/;"	m
top_srcdir	linuxmodule/Makefile	/^top_srcdir := $(src)\/..$/;"	m
top_srcdir	linuxmodule/Makefile	/^top_srcdir := ..$/;"	m
top_srcdir	ns/Makefile	/^top_srcdir := ..$/;"	m
top_srcdir	tools/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	tools/click-align/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	tools/click-check/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	tools/click-combine/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	tools/click-devirtualize/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	tools/click-fastclassifier/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	tools/click-flatten/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	tools/click-install/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	tools/click-mkmindriver/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	tools/click-pretty/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	tools/click-undead/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	tools/click-xform/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	tools/click2xml/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	tools/lib/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	userlevel/Makefile	/^top_srcdir := ..$/;"	m
topology_change	elements/local/OpenFlow/lib/stp.cc	/^    bool topology_change;           \/* 8.5.3.12: Received topology change? *\/$/;"	m	struct:stp	file:
topology_change_ack	elements/local/OpenFlow/lib/stp.cc	/^    bool topology_change_ack;       \/* 8.5.5.8: Flag for next config BPDU. *\/$/;"	m	struct:stp_port	file:
topology_change_detected	elements/local/OpenFlow/lib/stp.cc	/^    bool topology_change_detected;  \/* 8.5.3.11: Detected a topology change? *\/$/;"	m	struct:stp	file:
topology_change_timer	elements/local/OpenFlow/lib/stp.cc	/^    struct stp_timer topology_change_timer; \/* 8.5.4.3. *\/$/;"	m	struct:stp	typeref:struct:stp::stp_timer	file:
toport	tools/click2xml/xml2click.hh	/^    int toport;$/;"	m	struct:CxConnection
torh	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t torh;$/;"	m	struct:e1000_hw_stats
torh	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t torh;$/;"	m	struct:e1000_hw_stats
torh	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t torh;$/;"	m	struct:e1000_hw_stats
torl	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t torl;$/;"	m	struct:e1000_hw_stats
torl	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t torl;$/;"	m	struct:e1000_hw_stats
torl	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t torl;$/;"	m	struct:e1000_hw_stats
total_frame_drop_count	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int	total_frame_drop_count;$/;"	m	struct:FlowMpeg2AdaptDecapStat
total_frame_index	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int total_frame_index;$/;"	m	struct:FlowMpeg2AdaptDecapStat
total_frame_index	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^        int total_frame_index;$/;"	m	struct:FlowMpeg2AdaptEncapStat
total_frame_types	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.hh	/^	int total_frame_types;$/;"	m	struct:FlowMpeg2AdaptEncapStat
total_frames_sent	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int	total_frames_sent;$/;"	m	struct:FlowMpeg2AdaptDecapStat
total_killed_pkts	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int	total_killed_pkts;$/;"	m	class:FlowMpeg2AdaptDecap
total_len	elements/grid/grid.hh	/^    uint16_t total_len;		\/\/ Of the whole packet, starting at grid_hdr.$/;"	m	struct:grid_hdr
total_len	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t total_len;     \/* Full length of frame. *\/$/;"	m	struct:ofp_packet_in
total_packet_drop_count	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int	total_packet_drop_count;$/;"	m	struct:FlowMpeg2AdaptDecapStat
total_packets_sent	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	int	total_packets_sent;$/;"	m	struct:FlowMpeg2AdaptDecapStat
total_pkts	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.hh	/^	uint32_t total_pkts;$/;"	m	class:FrameReceivingBuffer
total_rx_bytes	drivers/e1000-7.x/src/e1000.h	/^	unsigned int total_rx_bytes;$/;"	m	struct:e1000_adapter
total_rx_packets	drivers/e1000-7.x/src/e1000.h	/^	unsigned int total_rx_packets;$/;"	m	struct:e1000_adapter
total_sent	elements/local/FlowNet/common/Flow.hh	/^	uint32_t total_sent;$/;"	m	class:Flow
total_time_connected	elements/local/OpenFlow/lib/rconn.cc	/^    unsigned long int total_time_connected;$/;"	m	struct:rconn	file:
total_ts	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^	int total_ts;$/;"	m	struct:tspacket_table
total_tx_bytes	drivers/e1000-7.x/src/e1000.h	/^	unsigned int total_tx_bytes;$/;"	m	struct:e1000_adapter
total_tx_packets	drivers/e1000-7.x/src/e1000.h	/^	unsigned int total_tx_packets;$/;"	m	struct:e1000_adapter
toth	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t toth;$/;"	m	struct:e1000_hw_stats
toth	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t toth;$/;"	m	struct:e1000_hw_stats
toth	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t toth;$/;"	m	struct:e1000_hw_stats
totl	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t totl;$/;"	m	struct:e1000_hw_stats
totl	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t totl;$/;"	m	struct:e1000_hw_stats
totl	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t totl;$/;"	m	struct:e1000_hw_stats
touch	elements/local/FlowNet/common/Flow.hh	/^inline int Flow::touch()$/;"	f	class:Flow
tp_dst	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t tp_dst;           \/* TCP\/UDP destination port. *\/$/;"	m	struct:ofp_match
tp_dst	elements/local/OpenFlow/lib/flow.hh	/^    uint16_t tp_dst;            \/* TCP\/UDP destination port. *\/$/;"	m	struct:flow
tp_port	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t tp_port;               \/* TCP\/UDP port. *\/$/;"	m	struct:ofp_action_tp_port
tp_src	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t tp_src;           \/* TCP\/UDP source port. *\/$/;"	m	struct:ofp_match
tp_src	elements/local/OpenFlow/lib/flow.hh	/^    uint16_t tp_src;            \/* TCP\/UDP source port. *\/$/;"	m	struct:flow
tpr	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t tpr;$/;"	m	struct:e1000_hw_stats
tpr	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t tpr;$/;"	m	struct:e1000_hw_stats
tpr	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t tpr;$/;"	m	struct:e1000_hw_stats
tpt	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t tpt;$/;"	m	struct:e1000_hw_stats
tpt	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t tpt;$/;"	m	struct:e1000_hw_stats
tpt	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t tpt;$/;"	m	struct:e1000_hw_stats
tpt_old	drivers/e1000-5.x/src/e1000.h	/^	uint64_t tpt_old;$/;"	m	struct:e1000_adapter
tpt_old	drivers/e1000-7.x/src/e1000.h	/^	uint64_t tpt_old;$/;"	m	struct:e1000_adapter
traits	tools/lib/eclasst.hh	/^ElementClassT::traits() const$/;"	f	class:ElementClassT
traits	tools/lib/eclasst.hh	/^ElementClassT::traits(ElementMap *emap) const$/;"	f	class:ElementClassT
traits	tools/lib/elementmap.hh	/^ElementMap::traits(const String &class_name) const$/;"	f	class:ElementMap
traits_at	tools/lib/elementmap.hh	/^    const Traits &traits_at(int i) const	{ return _e[i]; }$/;"	f	class:ElementMap
traits_index	tools/lib/elementmap.hh	/^    int traits_index() const		{ return _index; }$/;"	f	class:ElementMap::TraitsIterator
traits_index	tools/lib/elementmap.hh	/^ElementMap::traits_index(const String &class_name) const$/;"	f	class:ElementMap
transfer_messages	apps/clicky/src/cdriver.cc	/^void cdriver::transfer_messages(crouter *cr, int status, const messagevector &messages)$/;"	f	class:clicky::cdriver
transfer_messages	elements/userlevel/controlsocket.cc	/^ControlSocket::connection::transfer_messages(int default_code, const String &msg,$/;"	f	class:ControlSocket::connection
transform	apps/clicky/src/transform.hh	/^affine::transform(const affine &t)$/;"	f	class:affine
transformed	apps/clicky/src/transform.cc	/^affine::transformed(const affine &t) const$/;"	f	class:affine
translate	apps/clicky/src/transform.cc	/^affine::translate(double x, double y)$/;"	f	class:affine
translate	apps/clicky/src/transform.hh	/^    void translate(const point &p)		{ translate(p.x(), p.y()); }$/;"	f	class:affine
translate_class_name	tools/click-fastclassifier/click-fastclassifier.cc	/^translate_class_name(const String &s)$/;"	f	file:
translate_prefix	apps/clicky/src/gathererror.cc	/^void GatherErrorHandler::translate_prefix(const String &from, const String &to, int beginpos)$/;"	f	class:GatherErrorHandler
translated	apps/clicky/src/transform.hh	/^affine::translated(const point &p) const$/;"	f	class:affine
translated	apps/clicky/src/transform.hh	/^affine::translated(double x, double y) const$/;"	f	class:affine
transparent_color	apps/clicky/src/dstyle.cc	/^const double dcss_property::transparent_color[4] = { 0, 0, 0, 0 };$/;"	m	class:clicky::dcss_property	file:
transparent_color	apps/clicky/src/dstyle.hh	/^    static const double transparent_color[4];$/;"	m	struct:clicky::dcss_property
transport_extract	elements/analysis/ipsumdump_ip.cc	/^static bool transport_extract(PacketDesc& d, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
transport_header	include/click/packet.hh	/^Packet::transport_header() const$/;"	f	class:Packet
transport_header	include/click/packet.hh	/^WritablePacket::transport_header() const$/;"	f	class:WritablePacket
transport_header_offset	include/click/packet.hh	/^Packet::transport_header_offset() const$/;"	f	class:Packet
transport_inject	elements/analysis/ipsumdump_ip.cc	/^static void transport_inject(PacketOdesc& d, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
transport_length	elements/analysis/ipsumdumpinfo.hh	/^    uint32_t transport_length() const {$/;"	f	struct:IPSummaryDump::PacketDesc
transport_length	include/click/packet.hh	/^Packet::transport_length() const$/;"	f	class:Packet
tree	elements/ip/siphmapper.hh	/^  C *tree;$/;"	m	class:jvtree_t
tree	elements/ip/siphmapper.hh	/^  jvtree_t<chash_node_t<K>, K, &chash_node_t<K>::key> *tree;$/;"	m	class:chash_t
tree_height	ns/CUT_BinHeap.h	/^  int tree_height() {$/;"	f	class:CUT_BinHeap
tree_height	ns/CUT_BinHeap.h	/^  int tree_height(Node* n) {$/;"	f	class:CUT_BinHeap
trigger_hook	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::trigger_hook(const IPAddress &ip)$/;"	f	class:DSDVRouteTable
trim	apps/csclient/csclient.cc	/^ControlSocketClient::trim(string s)$/;"	f	class:ControlSocketClient
trim	elements/wifi/probetxrate.hh	/^    void trim(const Timestamp &ts) {$/;"	f	struct:ProbeTXRate::DstInfo
trim	elements/wifi/station/beacontracker.cc	/^BeaconTracker::trim()$/;"	f	class:BeaconTracker
trim_space	lib/string.cc	/^String::trim_space() const$/;"	f	class:String
true	include/click/cxxprotect.h	13;"	d
true	include/click/cxxunprotect.h	13;"	d
true_mask	include/click/notifier.hh	/^	true_mask = 1, false_mask = 2, overderived_mask = 4,$/;"	e	enum:NotifierSignal::__anon432
true_prepare	lib/ino.cc	/^ClickIno::true_prepare(Router *r, uint32_t generation)$/;"	f	class:ClickIno
true_reschedule	lib/task.cc	/^Task::true_reschedule()$/;"	f	class:Task
true_type	include/click/type_traits.hh	/^typedef integral_constant<bool, true> true_type;$/;"	t
truncate_route	elements/grid/dsrroutetable.cc	/^DSRRouteTable::truncate_route(DSRRoute r, IPAddress ip)$/;"	f	class:DSRRouteTable
try_combine_classifiers	tools/click-fastclassifier/click-fastclassifier.cc	/^try_combine_classifiers(RouterT *router, ElementT *classifier)$/;"	f	file:
try_find_device	tools/click-combine/click-combine.cc	/^try_find_device(String devname, String class1, String class2,$/;"	f	file:
try_linux_universal	elements/userlevel/fromhost.cc	/^FromHost::try_linux_universal(ErrorHandler *errh)$/;"	f	class:FromHost
try_linux_universal	elements/userlevel/kerneltun.cc	/^KernelTun::try_linux_universal()$/;"	f	class:KernelTun
try_remove_classifiers	tools/click-fastclassifier/click-fastclassifier.cc	/^try_remove_classifiers(RouterT *router, Vector<ElementT *> &classifiers)$/;"	f	file:
try_send	elements/local/OpenFlow/lib/rconn.cc	/^static int try_send(struct rconn *rc)$/;"	f	file:
try_tun	elements/userlevel/kerneltun.cc	/^KernelTun::try_tun(const String &dev_name, ErrorHandler *)$/;"	f	class:KernelTun
ts	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^	struct tspacket ts[MPEG2_TS_PER_UDP];$/;"	m	struct:tspacket_table	typeref:struct:tspacket_table::tspacket
ts	elements/userlevel/fakepcap.hh	/^	fake_bpf_timeval_union ts;	\/* time stamp *\/$/;"	m	struct:fake_pcap_pkthdr
ts_adapt_field	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^                        ts_adapt_field : 2,$/;"	m	struct:mpeg2ts	file:
ts_continuity_cnt	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^        uint8_t         ts_continuity_cnt : 4,$/;"	m	struct:mpeg2ts	file:
ts_error	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^                        ts_error : 1;$/;"	m	struct:mpeg2ts	file:
ts_high_pid	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^        uint8_t         ts_high_pid : 5,$/;"	m	struct:mpeg2ts	file:
ts_low_pid	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^	uint8_t		ts_low_pid;$/;"	m	struct:mpeg2ts	file:
ts_payload_unit_start	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^                        ts_payload_unit_start : 1,$/;"	m	struct:mpeg2ts	file:
ts_priority	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^                        ts_priority : 1,$/;"	m	struct:mpeg2ts	file:
ts_scramble_ctrl	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^                        ts_scramble_ctrl : 2;$/;"	m	struct:mpeg2ts	file:
ts_sec	elements/linuxmodule/touserdevice.cc	/^    uint32_t ts_sec;	     \/* timestamp seconds *\/$/;"	m	struct:pcaprec_hdr	file:
ts_sec	elements/local/OpenFlow/lib/pcap.cc	/^    uint32_t ts_sec;         \/* timestamp seconds *\/$/;"	m	struct:pcaprec_hdr	file:
ts_sync	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptEncap.cc	/^        uint8_t ts_sync;$/;"	m	struct:mpeg2ts	file:
ts_usec	elements/linuxmodule/touserdevice.cc	/^    uint32_t ts_usec;	     \/* timestamp microseconds *\/$/;"	m	struct:pcaprec_hdr	file:
ts_usec	elements/local/OpenFlow/lib/pcap.cc	/^    uint32_t ts_usec;        \/* timestamp microseconds *\/$/;"	m	struct:pcaprec_hdr	file:
tsctc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t tsctc;$/;"	m	struct:e1000_hw_stats
tsctc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t tsctc;$/;"	m	struct:e1000_hw_stats
tsctc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t tsctc;$/;"	m	struct:e1000_hw_stats
tsctfc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t tsctfc;$/;"	m	struct:e1000_hw_stats
tsctfc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t tsctfc;$/;"	m	struct:e1000_hw_stats
tsctfc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t tsctfc;$/;"	m	struct:e1000_hw_stats
tso_force	drivers/e1000-7.x/src/e1000.h	/^	boolean_t tso_force;$/;"	m	struct:e1000_adapter
tspacket	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^struct tspacket {$/;"	s
tspacket_table	elements/local/FlowNet/mpeg2/Mpeg2Common.hh	/^struct tspacket_table {$/;"	s
tspec	include/click/timestamp.hh	/^	struct timespec tspec;$/;"	m	union:Timestamp::rep_t	typeref:struct:Timestamp::rep_t::timespec
ttl	elements/grid/dsdvroutetable.hh	/^    unsigned int        ttl;                   \/\/ msecs$/;"	m	class:DSDVRouteTable::RTEntry
ttl	elements/grid/grid.hh	/^	uint32_t ttl; \/\/ decreasing, approximately in milliseconds$/;"	m	union:grid_hello::__anon227
ttl	elements/grid/grid.hh	/^	uint32_t ttl;$/;"	m	union:grid_nbr_entry::__anon226
ttl	elements/grid/gridroutetable.hh	/^    unsigned int ttl;  \/\/ msecs$/;"	m	class:GridRouteTable::RTEntry
tucse	drivers/e1000-4.x/src/e1000_hw.h	/^            uint16_t tucse;     \/* TCP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon58::__anon59
tucse	drivers/e1000-5.x/src/e1000_hw.h	/^            uint16_t tucse;     \/* TCP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon155::__anon156
tucse	drivers/e1000-7.x/src/e1000_hw.h	/^            uint16_t tucse;     \/* TCP checksum end *\/$/;"	m	struct:e1000_context_desc::__anon112::__anon113
tucso	drivers/e1000-4.x/src/e1000_hw.h	/^            uint8_t tucso;      \/* TCP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon58::__anon59
tucso	drivers/e1000-5.x/src/e1000_hw.h	/^            uint8_t tucso;      \/* TCP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon155::__anon156
tucso	drivers/e1000-7.x/src/e1000_hw.h	/^            uint8_t tucso;      \/* TCP checksum offset *\/$/;"	m	struct:e1000_context_desc::__anon112::__anon113
tucss	drivers/e1000-4.x/src/e1000_hw.h	/^            uint8_t tucss;      \/* TCP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon58::__anon59
tucss	drivers/e1000-5.x/src/e1000_hw.h	/^            uint8_t tucss;      \/* TCP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon155::__anon156
tucss	drivers/e1000-7.x/src/e1000_hw.h	/^            uint8_t tucss;      \/* TCP checksum start *\/$/;"	m	struct:e1000_context_desc::__anon112::__anon113
tunnel	tools/lib/eclasst.hh	/^    bool tunnel() const			{ return this == tunnel_type(); }$/;"	f	class:ElementClassT
tunnel	tools/lib/elementt.hh	/^ElementT::tunnel() const$/;"	f	class:ElementT
tunnel_connected	tools/lib/elementt.hh	/^ElementT::tunnel_connected() const$/;"	f	class:ElementT
tunnel_input	tools/lib/elementt.hh	/^    ElementT *tunnel_input() const	{ return _tunnel_input; }$/;"	f	struct:ElementT
tunnel_output	tools/lib/elementt.hh	/^    ElementT *tunnel_output() const	{ return _tunnel_output; }$/;"	f	struct:ElementT
tunnel_type	tools/lib/eclasst.hh	/^ElementClassT::tunnel_type()$/;"	f	class:ElementClassT
tv	elements/userlevel/fakepcap.hh	/^	struct fake_bpf_timeval tv;$/;"	m	union:fake_bpf_timeval_union	typeref:struct:fake_bpf_timeval_union::fake_bpf_timeval
tv	include/click/timestamp.hh	/^	struct timeval tv;$/;"	m	union:Timestamp::rep_t	typeref:struct:Timestamp::rep_t::timeval
tv_damp_start	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	struct timeval tv_damp_start;$/;"	m	struct:PFSchedFWStat	typeref:struct:PFSchedFWStat::timeval
tv_first_packet_received	elements/local/FlowNet/mpeg2/Mpeg2FrameReceivingBuffer.hh	/^	struct timeval tv_first_packet_received;$/;"	m	class:FrameReceivingBuffer	typeref:struct:FrameReceivingBuffer::timeval
tv_last_congestion	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.hh	/^	struct timeval tv_last_congestion;$/;"	m	struct:CBShapeByCD	typeref:struct:CBShapeByCD::timeval
tv_last_congestion	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.hh	/^	struct timeval tv_last_congestion;$/;"	m	struct:CBhapeByCD_CFB	typeref:struct:CBhapeByCD_CFB::timeval
tv_last_frame_sent	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	struct timeval tv_last_frame_sent;$/;"	m	class:FlowMpeg2AdaptDecap	typeref:struct:FlowMpeg2AdaptDecap::timeval
tv_last_update_per_packet	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	struct timeval tv_last_update_per_packet;$/;"	m	struct:CORE	typeref:struct:CORE::timeval
tv_last_update_timer	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	struct timeval tv_last_update_timer;$/;"	m	struct:CORE	typeref:struct:CORE::timeval
tv_pull	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	struct timeval tv_pull;$/;"	m	struct:PFSchedFWStat	typeref:struct:PFSchedFWStat::timeval
tv_sec	elements/userlevel/fakepcap.hh	/^	int32_t tv_sec;$/;"	m	struct:fake_bpf_timeval
tv_start	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.hh	/^	struct timeval tv_start;$/;"	m	struct:CORE	typeref:struct:CORE::timeval
tv_usec	elements/userlevel/fakepcap.hh	/^	int32_t tv_usec;$/;"	m	struct:fake_bpf_timeval
tv_video_play_start_time	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	struct timeval tv_video_play_start_time;$/;"	m	class:FlowMpeg2AdaptDecap	typeref:struct:FlowMpeg2AdaptDecap::timeval
tx_abs_int_delay	drivers/e1000-4.x/src/e1000.h	/^	uint32_t tx_abs_int_delay;$/;"	m	struct:e1000_adapter
tx_abs_int_delay	drivers/e1000-5.x/src/e1000.h	/^	uint32_t tx_abs_int_delay;$/;"	m	struct:e1000_adapter
tx_abs_int_delay	drivers/e1000-7.x/src/e1000.h	/^	uint32_t tx_abs_int_delay;$/;"	m	struct:e1000_adapter
tx_bytes	elements/local/OpenFlow/datapath.hh	/^	unsigned long long int rx_bytes, tx_bytes;$/;"	m	struct:click_port
tx_bytes	elements/local/OpenFlow/datapath.hh	/^	unsigned long long int tx_bytes;$/;"	m	struct:sw_queue
tx_bytes	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t tx_bytes;       \/* Number of transmitted bytes. *\/$/;"	m	struct:ofp_port_stats
tx_bytes	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t tx_bytes;       \/* Number of transmitted bytes. *\/$/;"	m	struct:ofp_queue_stats
tx_coalesce_usecs	drivers/e1000-5.x/src/kcompat.h	/^	u32	tx_coalesce_usecs;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs	drivers/e1000-7.x/src/kcompat.h	/^	u32	tx_coalesce_usecs;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs_high	drivers/e1000-5.x/src/kcompat.h	/^	u32	tx_coalesce_usecs_high;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs_high	drivers/e1000-7.x/src/kcompat.h	/^	u32	tx_coalesce_usecs_high;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs_irq	drivers/e1000-5.x/src/kcompat.h	/^	u32	tx_coalesce_usecs_irq;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs_irq	drivers/e1000-7.x/src/kcompat.h	/^	u32	tx_coalesce_usecs_irq;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs_low	drivers/e1000-5.x/src/kcompat.h	/^	u32	tx_coalesce_usecs_low;$/;"	m	struct:_kc_ethtool_coalesce
tx_coalesce_usecs_low	drivers/e1000-7.x/src/kcompat.h	/^	u32	tx_coalesce_usecs_low;$/;"	m	struct:_kc_ethtool_coalesce
tx_dropped	elements/local/OpenFlow/datapath.hh	/^	unsigned long long int tx_dropped;$/;"	m	struct:click_port
tx_dropped	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t tx_dropped;     \/* Number of packets dropped by TX. *\/$/;"	m	struct:ofp_port_stats
tx_errors	elements/local/OpenFlow/datapath.hh	/^	unsigned long long int tx_errors;$/;"	m	struct:sw_queue
tx_errors	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t tx_errors;      \/* Number of packets dropped due to overrun. *\/$/;"	m	struct:ofp_queue_stats
tx_errors	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t tx_errors;      \/* Number of transmit errors.  This is a super-set$/;"	m	struct:ofp_port_stats
tx_fifo_head	drivers/e1000-5.x/src/e1000.h	/^	uint32_t tx_fifo_head;$/;"	m	struct:e1000_adapter
tx_fifo_head	drivers/e1000-7.x/src/e1000.h	/^	uint32_t tx_fifo_head;$/;"	m	struct:e1000_adapter
tx_fifo_size	drivers/e1000-5.x/src/e1000.h	/^	uint32_t tx_fifo_size;$/;"	m	struct:e1000_adapter
tx_fifo_size	drivers/e1000-7.x/src/e1000.h	/^	uint32_t tx_fifo_size;$/;"	m	struct:e1000_adapter
tx_fifo_stall	drivers/e1000-5.x/src/e1000.h	/^	atomic_t tx_fifo_stall;$/;"	m	struct:e1000_adapter
tx_fifo_stall	drivers/e1000-7.x/src/e1000.h	/^	atomic_t tx_fifo_stall;$/;"	m	struct:e1000_adapter
tx_fifo_stall_timer	drivers/e1000-5.x/src/e1000.h	/^	struct timer_list tx_fifo_stall_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
tx_fifo_stall_timer	drivers/e1000-7.x/src/e1000.h	/^	struct timer_list tx_fifo_stall_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
tx_head_addr	drivers/e1000-5.x/src/e1000.h	/^	uint32_t tx_head_addr;$/;"	m	struct:e1000_adapter
tx_head_addr	drivers/e1000-7.x/src/e1000.h	/^	uint32_t tx_head_addr;$/;"	m	struct:e1000_adapter
tx_int_delay	drivers/e1000-4.x/src/e1000.h	/^	uint32_t tx_int_delay;$/;"	m	struct:e1000_adapter
tx_int_delay	drivers/e1000-5.x/src/e1000.h	/^	uint32_t tx_int_delay;$/;"	m	struct:e1000_adapter
tx_int_delay	drivers/e1000-7.x/src/e1000.h	/^	uint32_t tx_int_delay;$/;"	m	struct:e1000_adapter
tx_ip	elements/grid/grid.hh	/^    uint32_t tx_ip;			\/\/ Transmitter$/;"	m	struct:grid_hdr
tx_itr	drivers/e1000-7.x/src/e1000.h	/^	uint16_t tx_itr;$/;"	m	struct:e1000_adapter
tx_loc	elements/grid/grid.hh	/^    struct grid_location tx_loc;$/;"	m	struct:grid_hdr	typeref:struct:grid_hdr::grid_location
tx_loc_err	elements/grid/grid.hh	/^    uint16_t tx_loc_err;$/;"	m	struct:grid_hdr
tx_loc_good	elements/grid/grid.hh	/^    uint8_t \/*bool*\/ tx_loc_good;$/;"	m	struct:grid_hdr
tx_loc_seq_no	elements/grid/grid.hh	/^    uint32_t tx_loc_seq_no;$/;"	m	struct:grid_hdr
tx_lock	drivers/e1000-5.x/src/e1000.h	/^	spinlock_t tx_lock;$/;"	m	struct:e1000_adapter
tx_lock	drivers/e1000-7.x/src/e1000.h	/^	spinlock_t tx_lock;$/;"	m	struct:e1000_tx_ring
tx_max_coalesced_frames	drivers/e1000-5.x/src/kcompat.h	/^	u32	tx_max_coalesced_frames;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames	drivers/e1000-7.x/src/kcompat.h	/^	u32	tx_max_coalesced_frames;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames_high	drivers/e1000-5.x/src/kcompat.h	/^	u32	tx_max_coalesced_frames_high;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames_high	drivers/e1000-7.x/src/kcompat.h	/^	u32	tx_max_coalesced_frames_high;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames_irq	drivers/e1000-5.x/src/kcompat.h	/^	u32	tx_max_coalesced_frames_irq;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames_irq	drivers/e1000-7.x/src/kcompat.h	/^	u32	tx_max_coalesced_frames_irq;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames_low	drivers/e1000-5.x/src/kcompat.h	/^	u32	tx_max_coalesced_frames_low;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_coalesced_frames_low	drivers/e1000-7.x/src/kcompat.h	/^	u32	tx_max_coalesced_frames_low;$/;"	m	struct:_kc_ethtool_coalesce
tx_max_pending	drivers/e1000-5.x/src/kcompat.h	/^	u32	tx_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
tx_max_pending	drivers/e1000-7.x/src/kcompat.h	/^	u32	tx_max_pending;$/;"	m	struct:_kc_ethtool_ringparam
tx_notifier	elements/linuxmodule/todevice.cc	/^static struct notifier_block tx_notifier;$/;"	v	typeref:struct:notifier_block	file:
tx_notifier_hook	elements/linuxmodule/todevice.cc	/^tx_notifier_hook(struct notifier_block *nb, unsigned long val, void *v)$/;"	f	file:
tx_packet_delta	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t tx_packet_delta;$/;"	m	struct:e1000_hw
tx_packet_delta	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t tx_packet_delta;$/;"	m	struct:e1000_hw
tx_packet_delta	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t tx_packet_delta;$/;"	m	struct:e1000_hw
tx_packets	elements/local/OpenFlow/datapath.hh	/^	unsigned long long int rx_packets, tx_packets;$/;"	m	struct:click_port
tx_packets	elements/local/OpenFlow/datapath.hh	/^	unsigned long long int tx_packets;$/;"	m	struct:sw_queue
tx_packets	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t tx_packets;     \/* Number of transmitted packets. *\/$/;"	m	struct:ofp_port_stats
tx_packets	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint64_t tx_packets;     \/* Number of transmitted packets. *\/$/;"	m	struct:ofp_queue_stats
tx_pause	drivers/e1000-5.x/src/kcompat.h	/^	u32	tx_pause;$/;"	m	struct:_kc_ethtool_pauseparam
tx_pause	drivers/e1000-7.x/src/kcompat.h	/^	u32	tx_pause;$/;"	m	struct:_kc_ethtool_pauseparam
tx_pending	drivers/e1000-5.x/src/kcompat.h	/^	u32	tx_pending;$/;"	m	struct:_kc_ethtool_ringparam
tx_pending	drivers/e1000-7.x/src/kcompat.h	/^	u32	tx_pending;$/;"	m	struct:_kc_ethtool_ringparam
tx_pkt_filtering	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t tx_pkt_filtering;$/;"	m	struct:e1000_hw
tx_queue_len	drivers/e1000-7.x/src/e1000.h	/^	unsigned long tx_queue_len;$/;"	m	struct:e1000_adapter
tx_queue_lock	drivers/e1000-7.x/src/e1000.h	/^	spinlock_t tx_queue_lock;$/;"	m	struct:e1000_adapter
tx_result	elements/wifi/probetxrate.hh	/^    tx_result() {}$/;"	f	struct:ProbeTXRate::tx_result
tx_result	elements/wifi/probetxrate.hh	/^    tx_result(const Timestamp &t, int rate,$/;"	f	struct:ProbeTXRate::tx_result
tx_result	elements/wifi/probetxrate.hh	/^  struct tx_result {$/;"	s	class:ProbeTXRate
tx_result_t	elements/grid/ackretrysender.hh	/^    tx_result_t(const Timestamp &t, unsigned n, bool s)$/;"	f	struct:ACKRetrySender::tx_result_t
tx_result_t	elements/grid/ackretrysender.hh	/^  struct tx_result_t {$/;"	s	class:ACKRetrySender
tx_result_t	elements/grid/ackretrysender2.hh	/^    tx_result_t(const Timestamp &t, unsigned n, bool s)$/;"	f	struct:ACKRetrySender2::tx_result_t
tx_result_t	elements/grid/ackretrysender2.hh	/^  struct tx_result_t {$/;"	s	class:ACKRetrySender2
tx_ring	drivers/e1000-4.x/src/e1000.h	/^	struct e1000_desc_ring tx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_desc_ring
tx_ring	drivers/e1000-5.x/src/e1000.h	/^	struct e1000_desc_ring tx_ring;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_desc_ring
tx_ring	drivers/e1000-7.x/src/e1000.h	/^	struct e1000_tx_ring *tx_ring;      \/* One per active queue *\/$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::e1000_tx_ring
tx_sec	elements/grid/linktester.hh	/^    unsigned int tx_sec;$/;"	m	struct:LinkTester::payload_t
tx_timeout_count	drivers/e1000-7.x/src/e1000.h	/^	uint32_t tx_timeout_count;$/;"	m	struct:e1000_adapter
tx_timeout_factor	drivers/e1000-7.x/src/e1000.h	/^	uint8_t  tx_timeout_factor;$/;"	m	struct:e1000_adapter
tx_timeout_task	drivers/e1000-5.x/src/e1000.h	/^	struct work_struct tx_timeout_task;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::work_struct
tx_usec	elements/grid/linktester.hh	/^    unsigned int tx_usec;$/;"	m	struct:LinkTester::payload_t
tx_waiter	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    struct poll_waiter *tx_waiter;$/;"	m	struct:ssl_vconn	typeref:struct:ssl_vconn::poll_waiter	file:
tx_waiter	elements/local/OpenFlow/lib/vconn-stream.cc	/^    struct poll_waiter *tx_waiter;$/;"	m	struct:stream_vconn	typeref:struct:stream_vconn::poll_waiter	file:
tx_wake_queue	elements/linuxmodule/todevice.cc	/^ToDevice::tx_wake_queue(net_device *dev)$/;"	f	class:ToDevice
tx_want	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    int rx_want, tx_want;$/;"	m	struct:ssl_vconn	file:
txbuf	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    struct ofpbuf *txbuf;$/;"	m	struct:ssl_vconn	typeref:struct:ssl_vconn::ofpbuf	file:
txbuf	elements/local/OpenFlow/lib/vconn-stream.cc	/^    struct ofpbuf *txbuf;$/;"	m	struct:stream_vconn	typeref:struct:stream_vconn::ofpbuf	file:
txcw	drivers/e1000-4.x/src/e1000_hw.h	/^    uint32_t txcw;$/;"	m	struct:e1000_hw
txcw	drivers/e1000-5.x/src/e1000_hw.h	/^    uint32_t txcw;$/;"	m	struct:e1000_hw
txcw	drivers/e1000-7.x/src/e1000_hw.h	/^    uint32_t txcw;$/;"	m	struct:e1000_hw
txd_cmd	drivers/e1000-4.x/src/e1000.h	/^	uint32_t txd_cmd;$/;"	m	struct:e1000_adapter
txd_cmd	drivers/e1000-5.x/src/e1000.h	/^	uint32_t txd_cmd;$/;"	m	struct:e1000_adapter
txd_cmd	drivers/e1000-7.x/src/e1000.h	/^	uint32_t txd_cmd;$/;"	m	struct:e1000_adapter
txq	elements/local/OpenFlow/lib/rconn.cc	/^    struct ofp_queue txq;$/;"	m	struct:rconn	typeref:struct:rconn::ofp_queue	file:
typ	conf/click-mkclgw.pl	/^sub typ { return "cluster"; }$/;"	s
typ	conf/click-mkclgw.pl	/^sub typ { return "eth"; }$/;"	s
typ	conf/click-mkclgw.pl	/^sub typ { return "generic"; }$/;"	s
typ	conf/click-mkclgw.pl	/^sub typ { return "ip"; }$/;"	s
typ	conf/click-mkclgw.pl	/^sub typ { return "net" ; }$/;"	s
typ	conf/click-mkclgw.pl	/^sub typ { return "param"; }$/;"	s
typ_len_ext	drivers/e1000-4.x/src/e1000_hw.h	/^            uint8_t typ_len_ext;        \/* *\/$/;"	m	struct:e1000_data_desc::__anon62::__anon63
typ_len_ext	drivers/e1000-5.x/src/e1000_hw.h	/^            uint8_t typ_len_ext;        \/* *\/$/;"	m	struct:e1000_data_desc::__anon159::__anon160
typ_len_ext	drivers/e1000-7.x/src/e1000_hw.h	/^            uint8_t typ_len_ext;        \/* *\/$/;"	m	struct:e1000_data_desc::__anon116::__anon117
type	apps/clicky/src/cdriver.hh	/^	int type;$/;"	m	struct:clicky::csocket_cdriver::msg
type	apps/clicky/src/dstyle.hh	/^    const String &type() const {$/;"	f	class:clicky::dcss
type	apps/clicky/src/dstyle.hh	/^    const String &type() const {$/;"	f	class:clicky::dcss_selector
type	apps/clicky/src/dstyle.hh	/^    int type() const {$/;"	f	struct:clicky::dcss_property
type	apps/clicky/src/dstyle.hh	/^    int type;$/;"	m	struct:clicky::dactivity_style
type	apps/clicky/src/dwidget.hh	/^    int type() const {$/;"	f	class:clicky::dwidget
type	bsdmodule/clickfs_tree.hh	/^    enum clickfs_dirent_type type;$/;"	m	struct:clickfs_dirent	typeref:enum:clickfs_dirent::clickfs_dirent_type
type	drivers/e1000-4.x/src/e1000_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	m	struct:e1000_option	typeref:enum:e1000_option::__anon66	file:
type	drivers/e1000-5.x/src/e1000_hw.h	/^    e1000_eeprom_type type;$/;"	m	struct:e1000_eeprom_info
type	drivers/e1000-5.x/src/e1000_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	m	struct:e1000_option	typeref:enum:e1000_option::__anon163	file:
type	drivers/e1000-7.x/src/e1000_hw.h	/^    e1000_eeprom_type type;$/;"	m	struct:e1000_eeprom_info
type	drivers/e1000-7.x/src/e1000_param.c	/^	enum { enable_option, range_option, list_option } type;$/;"	m	struct:e1000_option	typeref:enum:e1000_option::__anon121	file:
type	elements/analysis/fromdagdump.hh	/^	uint8_t type;$/;"	m	struct:FromDAGDump::DAGCell
type	elements/analysis/ipsumdumpinfo.hh	/^    int type;$/;"	m	struct:IPSummaryDump::FieldReader
type	elements/analysis/ipsumdumpinfo.hh	/^    int type;$/;"	m	struct:IPSummaryDump::FieldWriter
type	elements/grid/grid.hh	/^    uint8_t type;$/;"	m	struct:grid_hdr
type	elements/local/OpenFlow/datapath.cc	/^	int type;$/;"	m	struct:stats_type	file:
type	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t type;                  \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_header
type	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t type;                  \/* OFPAT_VENDOR. *\/$/;"	m	struct:nx_action_snat
type	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t type;          \/* One of OFPAT_* *\/$/;"	m	struct:nx_act_config
type	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t type;                  \/* OFPAT_OUTPUT. *\/$/;"	m	struct:ofp_action_output
type	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t type;                  \/* OFPAT_SET_DL_SRC\/DST. *\/$/;"	m	struct:ofp_action_dl_addr
type	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t type;                  \/* OFPAT_SET_TP_SRC\/DST. *\/$/;"	m	struct:ofp_action_tp_port
type	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t type;                  \/* OFPAT_SET_TW_SRC\/DST. *\/$/;"	m	struct:ofp_action_nw_addr
type	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t type;                  \/* OFPAT_SET_TW_SRC\/DST. *\/$/;"	m	struct:ofp_action_nw_tos
type	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t type;                  \/* OFPAT_SET_VLAN_PCP. *\/$/;"	m	struct:ofp_action_vlan_pcp
type	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t type;                  \/* OFPAT_SET_VLAN_VID. *\/$/;"	m	struct:ofp_action_vlan_vid
type	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t type;                  \/* OFPAT_VENDOR. *\/$/;"	m	struct:ofp_action_vendor_header
type	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t type;                  \/* One of OFPAT_*. *\/$/;"	m	struct:ofp_action_header
type	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t type;              \/* One of the OFPST_* constants. *\/$/;"	m	struct:ofp_stats_reply
type	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t type;              \/* One of the OFPST_* constants. *\/$/;"	m	struct:ofp_stats_request
type	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t type;            \/* OFPAT_ENQUEUE. *\/$/;"	m	struct:ofp_action_enqueue
type	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t type;$/;"	m	struct:ofp_error_msg
type	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t type;       \/* One of the OFPT_ constants. *\/$/;"	m	struct:ofp_header
type	elements/local/OpenFlow/lib/netlink.hh	/^    enum nl_attr_type type;$/;"	m	struct:nl_policy	typeref:enum:nl_policy::nl_attr_type
type	elements/local/OpenFlow/lib/ofp-print.cc	/^    int type;$/;"	m	struct:error_type	file:
type	elements/local/OpenFlow/lib/ofp-print.cc	/^    uint8_t type;$/;"	m	struct:openflow_packet	file:
type	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    enum session_type type;$/;"	m	struct:ssl_vconn	typeref:enum:ssl_vconn::session_type	file:
type	elements/userlevel/umlswitch.hh	/^	enum request_type type;$/;"	m	struct:request_v3	typeref:enum:request_v3::request_type
type	include/click/args.hh	/^    const char *type;$/;"	m	struct:ElementCastArg
type	include/click/nameinfo.hh	/^    uint32_t type() const {$/;"	f	class:NameDB
type	include/click/type_traits.hh	/^    typedef F type;$/;"	t	struct:conditional
type	include/click/type_traits.hh	/^    typedef T type;$/;"	t	struct:conditional
type	include/click/type_traits.hh	/^    typedef T type;$/;"	t	struct:make_fast_half_integer
type	include/click/type_traits.hh	/^    typedef char type;$/;"	t	struct:integer_traits
type	include/click/type_traits.hh	/^    typedef int type;$/;"	t	struct:integer_traits
type	include/click/type_traits.hh	/^    typedef int64_t type;$/;"	t	struct:integer_traits
type	include/click/type_traits.hh	/^    typedef integral_constant<T, V> type;$/;"	t	struct:integral_constant
type	include/click/type_traits.hh	/^    typedef long long type;$/;"	t	struct:integer_traits
type	include/click/type_traits.hh	/^    typedef long type;$/;"	t	struct:integer_traits
type	include/click/type_traits.hh	/^    typedef short type;$/;"	t	struct:integer_traits
type	include/click/type_traits.hh	/^    typedef signed char type;$/;"	t	struct:integer_traits
type	include/click/type_traits.hh	/^    typedef typename integer_traits<T>::signed_type type;$/;"	t	struct:make_signed
type	include/click/type_traits.hh	/^    typedef typename integer_traits<T>::unsigned_type type;$/;"	t	struct:make_unsigned
type	include/click/type_traits.hh	/^    typedef uint64_t type;$/;"	t	struct:integer_traits
type	include/click/type_traits.hh	/^    typedef unsigned char type;$/;"	t	struct:integer_traits
type	include/click/type_traits.hh	/^    typedef unsigned int type;$/;"	t	struct:integer_traits
type	include/click/type_traits.hh	/^    typedef unsigned long long type;$/;"	t	struct:integer_traits
type	include/click/type_traits.hh	/^    typedef unsigned long type;$/;"	t	struct:integer_traits
type	include/click/type_traits.hh	/^    typedef unsigned short type;$/;"	t	struct:integer_traits
type	include/clicknet/ether.h	/^    uint8_t type;$/;"	m	struct:click_nd_adv
type	include/clicknet/ether.h	/^    uint8_t type;$/;"	m	struct:click_nd_adv2
type	include/clicknet/ether.h	/^    uint8_t type;$/;"	m	struct:click_nd_sol
type	lib/clp.c	/^    int type;$/;"	m	struct:__anon501	file:
type	lib/lexer.cc	/^    int type;$/;"	m	struct:__anon511::ElementState	file:
type	tools/click-fastclassifier/click-fastclassifier.hh	/^    int type;$/;"	m	struct:Classifier_Program
type	tools/lib/elementt.hh	/^    ElementClassT *type() const		{ return _type; }$/;"	f	struct:ElementT
type	tools/lib/lexert.cc	/^    ElementClassT *type;$/;"	m	struct:__anon534::ElementState	file:
type	tools/lib/routert.hh	/^	ElementClassT * const type;$/;"	m	struct:RouterT::ElementType
type_active	elements/standard/script.hh	/^	type_active, type_driver, type_signal, type_passive, type_proxy,$/;"	e	enum:Script::Type
type_driver	elements/standard/script.hh	/^	type_active, type_driver, type_signal, type_passive, type_proxy,$/;"	e	enum:Script::Type
type_encap_len32	elements/linuxmodule/touserdevice.hh	/^    enum { type_encap_none, type_encap_pcap, type_encap_len32, type_encap_len_net16 };$/;"	e	enum:ToUserDevice::__anon309
type_encap_len_net16	elements/linuxmodule/touserdevice.hh	/^    enum { type_encap_none, type_encap_pcap, type_encap_len32, type_encap_len_net16 };$/;"	e	enum:ToUserDevice::__anon309
type_encap_none	elements/linuxmodule/touserdevice.hh	/^    enum { type_encap_none, type_encap_pcap, type_encap_len32, type_encap_len_net16 };$/;"	e	enum:ToUserDevice::__anon309
type_encap_pcap	elements/linuxmodule/touserdevice.hh	/^    enum { type_encap_none, type_encap_pcap, type_encap_len32, type_encap_len_net16 };$/;"	e	enum:ToUserDevice::__anon309
type_entries	elements/ip/ipfilter.cc	/^static const StaticNameDB::Entry type_entries[] = {$/;"	v	file:
type_error	elements/ip/ipfilter.cc	/^IPFilter::Primitive::type_error(ErrorHandler *errh, const char *msg) const$/;"	f	class:IPFilter::Primitive
type_frmr	include/clicknet/llc.h	/^	    } type_frmr;$/;"	m	union:click_llc::__anon481	typeref:struct:click_llc::__anon481::__anon485
type_glob	apps/clicky/src/dstyle.hh	/^    bool type_glob() const {$/;"	f	class:clicky::dcss_selector
type_glob_match	apps/clicky/src/dstyle.cc	/^bool dcss_selector::type_glob_match(PermString str) const$/;"	f	class:clicky::dcss_selector
type_i	include/clicknet/llc.h	/^	    } type_i;$/;"	m	union:click_llc::__anon481	typeref:struct:click_llc::__anon481::__anon483
type_indicator	tools/click-xform/adjacency.cc	/^type_indicator(ElementClassT *t)$/;"	f	file:
type_info	tools/click-devirtualize/specializer.hh	/^Specializer::type_info(const String &name) const$/;"	f	class:Specializer
type_info	tools/click-devirtualize/specializer.hh	/^Specializer::type_info(const String &name)$/;"	f	class:Specializer
type_iterator	tools/lib/routert.hh	/^    type_iterator()			: const_type_iterator() { }$/;"	f	class:RouterT::type_iterator
type_iterator	tools/lib/routert.hh	/^    type_iterator(RouterT *r, ElementClassT *t, int ei)	: const_type_iterator(r, t, ei) { }$/;"	f	class:RouterT::type_iterator
type_iterator	tools/lib/routert.hh	/^class RouterT::type_iterator : public RouterT::const_type_iterator { public:$/;"	c	class:RouterT
type_landmark	tools/click-pretty/click-pretty.cc	/^static String type_landmark = "$fake_type$";$/;"	v	file:
type_mismatch	lib/confparse.cc	/^static int type_mismatch(ErrorHandler *errh, cp_value *v, const char *argname, const String &, const char *type_description = 0)$/;"	f	file:
type_name	apps/clicky/src/dwidget.hh	/^    String type_name() const {$/;"	f	class:clicky::delt
type_name	tools/lib/elementt.hh	/^    String type_name() const		{ return _type->name(); }$/;"	f	struct:ElementT
type_name_c_str	tools/lib/elementt.hh	/^    const char *type_name_c_str() const	{ return _type->printable_name_c_str(); }$/;"	f	struct:ElementT
type_packet	elements/linuxmodule/touserdevice.hh	/^    enum { type_packet, type_stream };$/;"	e	enum:ToUserDevice::__anon308
type_passive	elements/standard/script.hh	/^	type_active, type_driver, type_signal, type_passive, type_proxy,$/;"	e	enum:Script::Type
type_proxy	elements/standard/script.hh	/^	type_active, type_driver, type_signal, type_passive, type_proxy,$/;"	e	enum:Script::Type
type_push	elements/standard/script.hh	/^	type_push$/;"	e	enum:Script::Type
type_raw	include/clicknet/llc.h	/^	    } type_raw;$/;"	m	union:click_llc::__anon481	typeref:struct:click_llc::__anon481::__anon487
type_s	include/clicknet/llc.h	/^	    } type_s;$/;"	m	union:click_llc::__anon481	typeref:struct:click_llc::__anon481::__anon484
type_signal	elements/standard/script.hh	/^	type_active, type_driver, type_signal, type_passive, type_proxy,$/;"	e	enum:Script::Type
type_snap	include/clicknet/llc.h	/^	    } type_snap;$/;"	m	union:click_llc::__anon481	typeref:struct:click_llc::__anon481::__anon486
type_socket	elements/userlevel/controlsocket.hh	/^    enum { type_tcp, type_unix, type_socket };$/;"	e	enum:ControlSocket::__anon204
type_stream	elements/linuxmodule/touserdevice.hh	/^    enum { type_packet, type_stream };$/;"	e	enum:ToUserDevice::__anon308
type_string	elements/grid/grid.hh	/^grid_hdr::type_string(uint8_t type)$/;"	f	class:grid_hdr
type_tcp	elements/userlevel/controlsocket.hh	/^    enum { type_tcp, type_unix, type_socket };$/;"	e	enum:ControlSocket::__anon204
type_u	include/clicknet/llc.h	/^	    } type_u;$/;"	m	union:click_llc::__anon481	typeref:struct:click_llc::__anon481::__anon482
type_unix	elements/userlevel/controlsocket.hh	/^    enum { type_tcp, type_unix, type_socket };$/;"	e	enum:ControlSocket::__anon204
typename	include/click/cxxprotect.h	7;"	d
typename	include/click/cxxunprotect.h	7;"	d
u	elements/analysis/fromdagdump.hh	/^	} u;$/;"	m	struct:FromDAGDump::DAGCell	typeref:union:FromDAGDump::DAGCell::__anon270
u	elements/ip/ipfilter.hh	/^	uint32_t u;$/;"	m	union:IPFilter::PrimitiveData
u	elements/ip/iprewriterbase.hh	/^    } u;$/;"	m	struct:IPRewriterInput	typeref:union:IPRewriterInput::__anon325
u	elements/standard/classification.hh	/^	uint32_t u;$/;"	m	union:Classification::Wordwise::Insn::__anon180
u	elements/standard/classification.hh	/^	uint32_t u;$/;"	m	union:Classification::Wordwise::Insn::__anon181
u	include/click/clp.h	/^	unsigned u;$/;"	m	union:Clp_Parser::__anon460
u	include/click/confparse.hh	/^	unsigned u;$/;"	m	union:cp_value::__anon479
u	tools/click-fastclassifier/click-fastclassifier.hh	/^	uint32_t u;$/;"	m	union:Classifier_Insn::__anon544
u	tools/click-fastclassifier/click-fastclassifier.hh	/^	uint32_t u;$/;"	m	union:Classifier_Insn::__anon545
u16	drivers/e1000-4.x/src/base_comm.h	51;"	d
u16	include/click/confparse.hh	/^	uint16_t u16;$/;"	m	union:cp_value::__anon479
u16	include/click/packet.hh	/^	uint16_t u16[anno_size \/ 2];$/;"	m	union:Packet::Anno
u32	drivers/e1000-4.x/src/base_comm.h	52;"	d
u32	elements/analysis/ipsumdumpinfo.hh	/^	uint32_t u32[2];$/;"	m	union:IPSummaryDump::PacketDesc::__anon259
u32	elements/analysis/ipsumdumpinfo.hh	/^	uint32_t u32[2];$/;"	m	union:IPSummaryDump::PacketOdesc::__anon260
u32	include/click/confparse.hh	/^	uint32_t u32;$/;"	m	union:cp_value::__anon479
u32	include/click/packet.hh	/^	uint32_t u32[anno_size \/ 4];$/;"	m	union:Packet::Anno
u64	include/click/clp.h	/^	uint64_t u64;$/;"	m	union:Clp_Parser::__anon460
u64	include/click/confparse.hh	/^	uint64_t u64;$/;"	m	union:cp_value::__anon479
u64	include/click/packet.hh	/^	uint64_t u64[anno_size \/ 8];$/;"	m	union:Packet::Anno
u6_addr16	include/clicknet/ip6.h	/^	uint16_t	u6_addr16[8];$/;"	m	union:click_in6_addr::__anon488
u6_addr32	include/clicknet/ip6.h	/^	uint32_t	u6_addr32[4];$/;"	m	union:click_in6_addr::__anon488
u6_addr64	include/clicknet/ip6.h	/^	uint64_t	u6_addr64[2];$/;"	m	union:click_in6_addr::__anon488
u6_addr8	include/clicknet/ip6.h	/^	uint8_t		u6_addr8[16];$/;"	m	union:click_in6_addr::__anon488
u8	drivers/e1000-4.x/src/base_comm.h	53;"	d
u8	elements/analysis/ipsumdumpinfo.hh	/^	uint8_t u8[8];$/;"	m	union:IPSummaryDump::PacketDesc::__anon259
u8	elements/analysis/ipsumdumpinfo.hh	/^	uint8_t u8[8];$/;"	m	union:IPSummaryDump::PacketOdesc::__anon260
u8	include/click/packet.hh	/^	uint8_t u8[anno_size];$/;"	m	union:Packet::Anno
u_quad_t	linuxmodule/read-pmc.c	/^typedef unsigned long long u_quad_t;$/;"	t	file:
uassert	apps/ClickController/Util.java	/^    static public void uassert(boolean b) { $/;"	m	class:Util
uassert	apps/ClickController/Util.java	/^    static public void uassert(boolean b, String msg) {$/;"	m	class:Util
uatomic32_t	include/click/atomic.hh	/^typedef atomic_uint32_t uatomic32_t;$/;"	t
ucounter_t	elements/standard/infinitesource.hh	/^    typedef uint32_t ucounter_t;$/;"	t	class:InfiniteSource
ucounter_t	elements/standard/infinitesource.hh	/^    typedef uint64_t ucounter_t;$/;"	t	class:InfiniteSource
ucs	include/click/clp.h	/^	unsigned char ucs[Clp_ValSize];$/;"	m	union:Clp_Parser::__anon460
udp_csum	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t udp_csum;$/;"	m	struct:udp_header
udp_dst	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t udp_dst;$/;"	m	struct:udp_header
udp_end	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t udp_end;$/;"	m	struct:nx_snat_config
udp_extract	elements/analysis/ipsumdump_udp.cc	/^static bool udp_extract(PacketDesc& d, const FieldWriter *f)$/;"	f	namespace:IPSummaryDump
udp_fields	elements/ip/ipfieldinfo.cc	/^static const StaticNameDB::Entry udp_fields[] = {$/;"	v	file:
udp_header	elements/local/OpenFlow/lib/packets.hh	/^struct udp_header {$/;"	s
udp_header	include/click/packet.hh	/^Packet::udp_header() const$/;"	f	class:Packet
udp_header	include/click/packet.hh	/^WritablePacket::udp_header() const$/;"	f	class:WritablePacket
udp_inject	elements/analysis/ipsumdump_udp.cc	/^static void udp_inject(PacketOdesc& d, const FieldReader *f)$/;"	f	namespace:IPSummaryDump
udp_len	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t udp_len;$/;"	m	struct:udp_header
udp_line	elements/ip/ipprint.cc	/^IPPrint::udp_line(StringAccum &sa, const Packet *p, int transport_length) const$/;"	f	class:IPPrint
udp_mappings_handler	elements/tcpudp/iprewriter.cc	/^IPRewriter::udp_mappings_handler(Element *e, void *)$/;"	f	class:IPRewriter
udp_readers	elements/analysis/ipsumdump_udp.cc	/^static const FieldReader udp_readers[] = {$/;"	m	namespace:IPSummaryDump	file:
udp_src	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t udp_src;$/;"	m	struct:udp_header
udp_start	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint16_t udp_start;$/;"	m	struct:nx_snat_config
udp_writers	elements/analysis/ipsumdump_udp.cc	/^static const FieldWriter udp_writers[] = {$/;"	m	namespace:IPSummaryDump	file:
udph	elements/analysis/ipsumdumpinfo.hh	/^    const click_udp *udph;$/;"	m	struct:IPSummaryDump::PacketDesc
uh_dport	include/clicknet/udp.h	/^    uint16_t	uh_dport;		\/* 2-3   destination port	     *\/$/;"	m	struct:click_udp
uh_sport	include/clicknet/udp.h	/^    uint16_t	uh_sport;		\/* 0-1   source port		     *\/$/;"	m	struct:click_udp
uh_sum	include/clicknet/udp.h	/^    uint16_t	uh_sum;			\/* 6-7   checksum		     *\/$/;"	m	struct:click_udp
uh_ulen	include/clicknet/udp.h	/^    uint16_t	uh_ulen;		\/* 4-5   UDP length		     *\/$/;"	m	struct:click_udp
ui	include/clicknet/rfc1483.h	/^    uint8_t	ui;$/;"	m	struct:click_rfc1483
uid	include/click/archive.hh	/^    int uid;			\/\/\/< User ID of member$/;"	m	struct:ArchiveElement
uid	linuxmodule/kernelversion.c	/^CLICK_INT_MODULE_PARAM(uid);$/;"	v
uid	linuxmodule/kernelversion.c	/^static int uid = 0;$/;"	v	file:
uid	linuxmodule/modulepriv.hh	/^    uid_t uid;$/;"	m	struct:click_fsmode_t
uint16_t	drivers/e1000-4.x/src/idiag_test.c	/^typedef __uint16_t uint16_t;        \/* ditto *\/$/;"	t	file:
uint16_t	include/click/config-userlevel.h	/^typedef u_int16_t uint16_t;$/;"	t
uint16_t_data_handler	lib/element.cc	/^uint16_t_data_handler(int op, String &str, Element *element, const Handler *h, ErrorHandler *errh)$/;"	f	file:
uint16_t_net_data_handler	lib/element.cc	/^uint16_t_net_data_handler(int op, String &str, Element *element, const Handler *h, ErrorHandler *errh)$/;"	f	file:
uint32_t	drivers/e1000-4.x/src/idiag_test.c	/^typedef __uint32_t uint32_t;        \/* hack, so we can include driver files *\/$/;"	t	file:
uint32_t	include/click/config-userlevel.h	/^typedef u_int32_t uint32_t;$/;"	t
uint32_t_net_data_handler	lib/element.cc	/^uint32_t_net_data_handler(int op, String &str, Element *element, const Handler *h, ErrorHandler *errh)$/;"	f	file:
uint64_t	include/click/config-userlevel.h	/^typedef u_int64_t uint64_t;$/;"	t
uint8_t	drivers/e1000-4.x/src/idiag_test.c	/^typedef __uint8_t uint8_t;          \/* ditto *\/$/;"	t	file:
uint8_t	include/click/config-userlevel.h	/^typedef u_int8_t uint8_t;$/;"	t
uint8_t_data_handler	lib/element.cc	/^uint8_t_data_handler(int op, String &str, Element *element, const Handler *h, ErrorHandler *errh)$/;"	f	file:
uint_at	elements/grid/linkstat.hh	/^  static unsigned uint_at(const unsigned char *c)$/;"	f	class:LinkStat
uint_large_t	include/click/string.hh	/^    typedef uint64_t uint_large_t;$/;"	t	class:String
uint_large_t	include/click/string.hh	/^    typedef unsigned long long uint_large_t;$/;"	t	class:String
uint_large_t	include/click/string.hh	/^    typedef unsigned long uint_large_t;$/;"	t	class:String
uintptr_t	include/click/config-linuxmodule.h	/^typedef unsigned long uintptr_t;$/;"	t
uintptr_t	include/click/config-userlevel.h	/^typedef unsigned long uintptr_t;$/;"	t
un	elements/userlevel/socket.hh	/^  union { struct sockaddr_in in; struct sockaddr_un un; } _local;$/;"	m	union:Socket::__anon192	typeref:struct:Socket::__anon192::sockaddr_un
un	elements/userlevel/socket.hh	/^  union { struct sockaddr_in in; struct sockaddr_un un; } _remote;$/;"	m	union:Socket::__anon193	typeref:struct:Socket::__anon193::sockaddr_un
unaligned_net_short	elements/userlevel/fakepcap.cc	/^unaligned_net_short(const void *v)$/;"	f	file:
unaligned_net_short	elements/userlevel/fakepcap.cc	104;"	d	file:
unbalanced	include/click/hashcontainer.hh	/^    inline bool unbalanced() const {$/;"	f	class:HashContainer
unblock_all	lib/master.cc	/^Master::unblock_all()$/;"	f	class:Master
unblock_sigalrm	elements/local/OpenFlow/lib/timeval.cc	/^unblock_sigalrm(const sigset_t *oldsigs)$/;"	f	file:
unblock_tasks	include/click/routerthread.hh	/^RouterThread::unblock_tasks()$/;"	f	class:RouterThread
undelivered	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::Flow::undelivered(Vector<uint32_t> &undelivered, const AggregatePacketCounter *apc) const$/;"	f	class:AggregatePacketCounter::Flow
underparse	lib/args.cc	/^DecimalFixedPointArg::underparse(const String &str, bool is_signed, uint32_t &result)$/;"	f	class:DecimalFixedPointArg
underparse	lib/args.cc	/^FixedPointArg::underparse(const String &str, bool is_signed, uint32_t &result)$/;"	f	class:FixedPointArg
unhighlight	apps/clicky/src/dwidget.hh	/^    void unhighlight(int htype) {$/;"	f	class:clicky::delt
unicast	elements/icmp/icmperror.cc	/^ICMPError::unicast(struct in_addr aa) const$/;"	f	class:ICMPError
unicast	elements/ip6/icmp6error.cc	/^ICMP6Error::unicast(const IP6Address &aa)$/;"	f	class:ICMP6Error
uniform	elements/grid/gridlocationinfo.cc	/^GridLocationInfo::uniform()$/;"	f	class:GridLocationInfo
uninitialize	elements/grid/dsrroutetable.cc	/^DSRRouteTable::uninitialize()$/;"	f	class:DSRRouteTable
uninitialize	elements/ns/fromsimdevice.cc	/^FromSimDevice::uninitialize()$/;"	f	class:FromSimDevice
uninitialize	elements/ns/tosimdevice.cc	/^ToSimDevice::uninitialize()$/;"	f	class:ToSimDevice
uninitialized_mask	include/click/notifier.hh	/^	uninitialized_mask = 8$/;"	e	enum:NotifierSignal::__anon432
uninitialized_signal	include/click/notifier.hh	/^NotifierSignal::uninitialized_signal()$/;"	f	class:NotifierSignal
uninitialized_t	include/click/etheraddress.hh	/^    struct uninitialized_t {$/;"	s	class:EtherAddress
uninitialized_t	include/click/ip6address.hh	/^    struct uninitialized_t {$/;"	s	class:IP6Address
uninitialized_t	include/click/ipaddress.hh	/^    struct uninitialized_t {$/;"	s	class:IPAddress
uninitialized_t	include/click/ipflowid.hh	/^    struct uninitialized_t {$/;"	s	class:IPFlowID
uninitialized_t	include/click/timestamp.hh	/^    struct uninitialized_t {$/;"	s	class:Timestamp
uninstalldb	lib/nameinfo.cc	/^NameInfo::uninstalldb(NameDB *db)$/;"	f	class:NameInfo
union_bounds	apps/clicky/src/dwidget.cc	/^void delt::union_bounds(rectangle &r, bool self) const$/;"	f	class:clicky::delt
uniq	doc/click-elem2man	/^sub uniq (@) {$/;"	s
unique_tmpnam	lib/userutils.cc	/^unique_tmpnam(const String &pattern, ErrorHandler *errh)$/;"	f
uniqueify	include/click/packet.hh	/^Packet::uniqueify()$/;"	f	class:Packet
uniqueify_prefix	tools/click-xform/click-xform.cc	/^uniqueify_prefix(const String &base_prefix, RouterT *r)$/;"	f	file:
units_	include/click/args.hh	/^    const unsigned char *units_;$/;"	m	struct:UnitArg
universal	tools/click-align/alignment.hh	/^    bool universal() const {$/;"	f	class:Alignment
universal_modulus	tools/click-align/alignment.hh	/^	universal_modulus = -2$/;"	e	enum:Alignment::__anon541
unix_open	elements/local/OpenFlow/lib/vconn-unix.cc	/^unix_open(const char *name, char *suffix, struct vconn **vconnp)$/;"	f	file:
unix_vconn_class	elements/local/OpenFlow/lib/vconn-unix.cc	/^struct vconn_class unix_vconn_class = {$/;"	v	typeref:struct:vconn_class
unkill	tools/click-devirtualize/cxxclass.hh	/^  void unkill()				{ _alive = true; }$/;"	f	class:CxxFunction
unknown	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t unknown;$/;"	m	struct:ofpstat::__anon245
unknown	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t unknown;$/;"	m	struct:ofpstat::__anon246
unknown	elements/local/OpenFlow/lib/ofpstat.hh	/^		uint64_t unknown;$/;"	m	struct:ofpstat::__anon247
unlex	include/click/lexer.hh	/^    void unlex(const Lexeme &t) {$/;"	f	class:Lexer
unlex	tools/lib/lexert.hh	/^    void unlex(const Lexeme &t) {$/;"	f	class:LexerT
unlikely	drivers/e1000-5.x/src/kcompat.h	78;"	d
unlikely	drivers/e1000-7.x/src/kcompat.h	214;"	d
unlikely	include/click/config-bsdmodule.h	57;"	d
unlikely	include/click/config-userlevel.h	290;"	d
unlikely	include/click/config-userlevel.h	293;"	d
unlimited	include/click/tokenbucket.hh	/^    bool unlimited() const {$/;"	f	class:TokenBucketX
unlimited	include/click/tokenbucket.hh	/^    bool unlimited() const {$/;"	f	class:TokenRateX
unlink	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::Flow::unlink(ErrorHandler *errh)$/;"	f	class:ToIPFlowDumps::Flow
unlink_connection_from	tools/lib/routert.cc	/^RouterT::unlink_connection_from(ConnectionX *c)$/;"	f	class:RouterT
unlink_connection_to	tools/lib/routert.cc	/^RouterT::unlink_connection_to(ConnectionX *c)$/;"	f	class:RouterT
unlink_files	elements/local/OpenFlow/lib/fatal-signal.cc	/^unlink_files(void *aux UNUSED)$/;"	f	file:
unload_click	tools/click-install/common.cc	/^unload_click(ErrorHandler *errh)$/;"	f
unlock	elements/linuxmodule/anydevice.hh	/^AnyDeviceMap::unlock(bool write, unsigned long flags)$/;"	f	class:AnyDeviceMap
unlock	include/click/selectset.hh	/^SelectSet::unlock()$/;"	f	class:SelectSet
unlock	linuxmodule/skbmgr.cc	/^RecycledSkbPool::unlock()$/;"	f	class:RecycledSkbPool
unlock_config_read	linuxmodule/clickfs.cc	/^unlock_config_read()$/;"	f	file:
unlock_config_write	linuxmodule/clickfs.cc	/^unlock_config_write(const char *file, int line)$/;"	f	file:
unlock_kernel	elements/bsdmodule/anydevice.cc	/^unlock_kernel()$/;"	f	file:
unlock_master	include/click/master.hh	/^Master::unlock_master()$/;"	f	class:Master
unlock_tasks	include/click/routerthread.hh	/^RouterThread::unlock_tasks()$/;"	f	class:RouterThread
unlock_threads	linuxmodule/clickfs.cc	/^unlock_threads()$/;"	f	file:
unlock_timers	include/click/timerset.hh	/^TimerSet::unlock_timers()$/;"	f	class:TimerSet
unmap_flow	elements/ip/iprewriterbase.hh	/^IPRewriterBase::unmap_flow(IPRewriterFlow *flow, Map &map,$/;"	f	class:IPRewriterBase
unmapped_output	elements/icmp/icmprewriter.hh	/^	unmapped_output = -1$/;"	e	enum:ICMPRewriter::__anon399
unparse	apps/clicky/src/dstyle.cc	/^String dcss::unparse() const$/;"	f	class:clicky::dcss
unparse	apps/clicky/src/dstyle.cc	/^String dcss_selector::unparse() const$/;"	f	class:clicky::dcss_selector
unparse	apps/clicky/src/dstyle.cc	/^void dcss::unparse(StringAccum &sa) const$/;"	f	class:clicky::dcss
unparse	apps/clicky/src/dstyle.cc	/^void dcss_selector::unparse(StringAccum &sa) const$/;"	f	class:clicky::dcss_selector
unparse	apps/clicky/src/dwidget.cc	/^String dwidget::unparse() const$/;"	f	class:clicky::dwidget
unparse	apps/clicky/src/transform.cc	/^affine::unparse() const$/;"	f	class:affine
unparse	elements/icmp/icmppingrewriter.cc	/^ICMPPingRewriter::ICMPPingFlow::unparse(StringAccum &sa, bool direction,$/;"	f	class:ICMPPingRewriter::ICMPPingFlow
unparse	elements/ip/ipaddrpairrewriter.cc	/^IPAddrPairRewriter::IPAddrPairFlow::unparse(StringAccum &sa, bool direction,$/;"	f	class:IPAddrPairRewriter::IPAddrPairFlow
unparse	elements/ip/ipaddrrewriter.cc	/^IPAddrRewriter::IPAddrFlow::unparse(StringAccum &sa, bool direction,$/;"	f	class:IPAddrRewriter::IPAddrFlow
unparse	elements/ip/ipfieldinfo.cc	/^IPField::unparse(Element *elt, bool tcpdump_rules)$/;"	f	class:IPField
unparse	elements/ip/iproutetable.cc	/^IPRoute::unparse() const$/;"	f	class:IPRoute
unparse	elements/ip/iproutetable.cc	/^IPRoute::unparse(StringAccum& sa, bool tabs) const$/;"	f	class:IPRoute
unparse	elements/ip/iprwmapping.cc	/^IPRewriterFlow::unparse(StringAccum &sa, bool direction,$/;"	f	class:IPRewriterFlow
unparse	elements/ip/iprwpattern.cc	/^IPRewriterPattern::unparse() const$/;"	f	class:IPRewriterPattern
unparse	elements/ipsec/ipsecroutetable.cc	/^IPsecRoute::unparse() const$/;"	f	class:IPsecRoute
unparse	elements/ipsec/ipsecroutetable.cc	/^IPsecRoute::unparse(StringAccum& sa, bool tabs) const$/;"	f	class:IPsecRoute
unparse	elements/standard/classification.cc	/^CompressedProgram::unparse() const$/;"	f	class:Classification::Wordwise::CompressedProgram
unparse	elements/standard/classification.cc	/^Insn::unparse() const$/;"	f	class:Classification::Wordwise::Insn
unparse	elements/standard/classification.cc	/^Program::unparse() const$/;"	f	class:Classification::Wordwise::Program
unparse	elements/tcpudp/tcprewriter.cc	/^TCPRewriter::TCPFlow::unparse(StringAccum &sa, bool direction, click_jiffies_t now) const$/;"	f	class:TCPRewriter::TCPFlow
unparse	include/click/args.hh	/^    static String unparse(bool x) {$/;"	f	struct:BoolArg
unparse	include/click/etheraddress.hh	/^    inline String unparse() const {$/;"	f	class:EtherAddress
unparse	include/click/ewma.hh	/^DirectEWMAX<P>::unparse() const$/;"	f	class:DirectEWMAX
unparse	lib/archive.cc	/^ArchiveElement::unparse(const Vector<ArchiveElement> &ar, ErrorHandler *errh)$/;"	f	class:ArchiveElement
unparse	lib/args.cc	/^BandwidthArg::unparse(uint32_t x)$/;"	f	class:BandwidthArg
unparse	lib/handlercall.cc	/^HandlerCall::unparse() const$/;"	f	class:HandlerCall
unparse	lib/ip6address.cc	/^IP6Address::unparse() const$/;"	f	class:IP6Address
unparse	lib/ip6address.cc	/^IP6Address::unparse(StringAccum &sa) const$/;"	f	class:IP6Address
unparse	lib/ip6flowid.cc	/^IP6FlowID::unparse() const$/;"	f	class:IP6FlowID
unparse	lib/ipaddress.cc	/^IPAddress::unparse() const$/;"	f	class:IPAddress
unparse	lib/ipflowid.cc	/^IPFlowID::unparse() const$/;"	f	class:IPFlowID
unparse	lib/ipflowid.cc	/^IPFlowID::unparse(char *s) const$/;"	f	class:IPFlowID
unparse	lib/notifier.cc	/^NotifierSignal::unparse(Router *router) const$/;"	f	class:NotifierSignal
unparse	lib/router.cc	/^Router::unparse(StringAccum &sa, const String &indent) const$/;"	f	class:Router
unparse	lib/timestamp.cc	/^Timestamp::unparse() const$/;"	f	class:Timestamp
unparse	tools/click-align/alignment.cc	/^Alignment::unparse() const$/;"	f	class:Alignment
unparse	tools/lib/elementmap.cc	/^ElementMap::unparse(const String &package) const$/;"	f	class:ElementMap
unparse	tools/lib/elementt.cc	/^ConnectionT::unparse(bool with_class) const$/;"	f	class:ConnectionT
unparse	tools/lib/elementt.cc	/^PortT::unparse(bool isoutput, bool with_class) const$/;"	f	class:PortT
unparse	tools/lib/runparse.cc	/^RouterT::unparse(StringAccum &sa, const String &indent) const$/;"	f	class:RouterT
unparse_addr	elements/ip/iproutetable.hh	/^    String unparse_addr() const	{ return addr.unparse_with_mask(mask); }$/;"	f	struct:IPRoute
unparse_addr	elements/ipsec/ipsecroutetable.hh	/^    String unparse_addr() const	{ return addr.unparse_with_mask(mask); }$/;"	f	struct:IPsecRoute
unparse_beacon	elements/wifi/printwifi.cc	/^String unparse_beacon(Packet *p) {$/;"	f
unparse_clear	include/click/bigint.hh	/^    static String unparse_clear(limb_type *x, int n, int base = 10, bool uppercase = false) {$/;"	f	class:Bigint
unparse_colon	lib/etheraddress.cc	/^EtherAddress::unparse_colon() const$/;"	f	class:EtherAddress
unparse_connections	lib/router.cc	/^Router::unparse_connections(StringAccum &sa, const String &indent) const$/;"	f	class:Router
unparse_connections	tools/lib/runparse.cc	/^RouterT::unparse_connections(StringAccum &sa, const String &indent) const$/;"	f	class:RouterT
unparse_contents_dot	apps/clicky/src/dwidget.cc	/^void delt::unparse_contents_dot(StringAccum &sa, crouter *cr, HashTable<int, delt *> &z_index_lookup) const$/;"	f	class:clicky::delt
unparse_dash	lib/etheraddress.cc	/^EtherAddress::unparse_dash() const$/;"	f	class:EtherAddress
unparse_declaration	tools/lib/runparse.cc	/^ElementClassT::unparse_declaration(StringAccum &sa, const String &, UnparseKind uk, ElementClassT *)$/;"	f	class:ElementClassT
unparse_declaration	tools/lib/runparse.cc	/^RouterT::unparse_declaration(StringAccum &sa, const String &indent, UnparseKind uk, ElementClassT *stop)$/;"	f	class:RouterT
unparse_declaration	tools/lib/runparse.cc	/^SynonymElementClassT::unparse_declaration(StringAccum &sa, const String &indent, UnparseKind uk, ElementClassT *)$/;"	f	class:SynonymElementClassT
unparse_declarations	lib/router.cc	/^Router::unparse_declarations(StringAccum &sa, const String &indent) const$/;"	f	class:Router
unparse_declarations	tools/lib/runparse.cc	/^RouterT::unparse_declarations(StringAccum &sa, const String &indent) const$/;"	f	class:RouterT
unparse_defines	tools/lib/runparse.cc	/^RouterT::unparse_defines(StringAccum &sa, const String &indent) const$/;"	f	class:RouterT
unparse_end	tools/lib/elementt.hh	/^    String unparse_end(bool isoutput, bool with_class = false) const {$/;"	f	class:ConnectionT
unparse_entries	elements/ipsec/sadatatuple.hh	/^String unparse_entries() const$/;"	f	class:SADataTuple
unparse_expanded	lib/ip6address.cc	/^IP6Address::unparse_expanded() const$/;"	f	class:IP6Address
unparse_input	tools/lib/elementt.hh	/^    String unparse_input(bool with_class = false) const {$/;"	f	struct:PortT
unparse_interval	lib/timestamp.cc	/^Timestamp::unparse_interval() const$/;"	f	class:Timestamp
unparse_ip_opt	elements/analysis/ipsumdump_ip.cc	/^void unparse_ip_opt(StringAccum& sa, const click_ip* iph, int mask)$/;"	f	namespace:IPSummaryDump
unparse_ip_opt	elements/analysis/ipsumdump_ip.cc	/^void unparse_ip_opt(StringAccum& sa, const uint8_t* opt, int opt_len, int mask)$/;"	f	namespace:IPSummaryDump
unparse_ip_opt_binary	elements/analysis/ipsumdump_ip.cc	/^void unparse_ip_opt_binary(StringAccum& sa, const click_ip *iph, int mask)$/;"	f	namespace:IPSummaryDump
unparse_ip_opt_binary	elements/analysis/ipsumdump_ip.cc	/^void unparse_ip_opt_binary(StringAccum& sa, const uint8_t *opt, int opt_len, int mask)$/;"	f	namespace:IPSummaryDump
unparse_mask	lib/ipaddress.cc	/^IPAddress::unparse_mask() const$/;"	f	class:IPAddress
unparse_name	lib/router.cc	/^Handler::unparse_name(Element *e) const$/;"	f	class:Handler
unparse_name	lib/router.cc	/^Handler::unparse_name(Element *e, const String &hname)$/;"	f	class:Handler
unparse_nonxml	tools/lib/elementmap.cc	/^ElementMap::unparse_nonxml() const$/;"	f	class:ElementMap
unparse_op	elements/ip/ipfilter.cc	/^IPFilter::Primitive::unparse_op() const$/;"	f	class:IPFilter::Primitive
unparse_output	tools/lib/elementt.hh	/^    String unparse_output(bool with_class = false) const {$/;"	f	struct:PortT
unparse_ports	elements/ip/iprwmapping.cc	/^IPRewriterFlow::unparse_ports(StringAccum &sa, bool direction,$/;"	f	class:IPRewriterFlow
unparse_proto	elements/ip/ipprint.cc	/^unparse_proto(int ip_p, bool prepend)$/;"	f	file:
unparse_rate	include/click/ewma.hh	/^RateEWMAX<P>::unparse_rate(unsigned ratenum) const$/;"	f	class:RateEWMAX
unparse_requirements	lib/router.cc	/^Router::unparse_requirements(StringAccum &sa, const String &indent) const$/;"	f	class:Router
unparse_requirements	tools/lib/runparse.cc	/^RouterT::unparse_requirements(StringAccum &sa, const String &indent) const$/;"	f	class:RouterT
unparse_selector	apps/clicky/src/dstyle.cc	/^String dcss::unparse_selector() const$/;"	f	class:clicky::dcss
unparse_selector	apps/clicky/src/dstyle.cc	/^void dcss::unparse_selector(StringAccum &sa) const$/;"	f	class:clicky::dcss
unparse_signature	tools/lib/eclasst.cc	/^ElementClassT::unparse_signature() const$/;"	f	class:ElementClassT
unparse_signature	tools/lib/eclasst.cc	/^ElementClassT::unparse_signature(const String &name, const Vector<String> *formal_types, int nargs, int ninputs, int noutputs)$/;"	f	class:ElementClassT
unparse_signature	tools/lib/routert.cc	/^RouterT::unparse_signature() const$/;"	f	class:RouterT
unparse_tcp_opt	elements/analysis/ipsumdump_tcp.cc	/^void unparse_tcp_opt(StringAccum& sa, const click_tcp* tcph, int mask)$/;"	f	namespace:IPSummaryDump
unparse_tcp_opt	elements/analysis/ipsumdump_tcp.cc	/^void unparse_tcp_opt(StringAccum& sa, const uint8_t* opt, int opt_len, int mask)$/;"	f	namespace:IPSummaryDump
unparse_tcp_opt_binary	elements/analysis/ipsumdump_tcp.cc	/^void unparse_tcp_opt_binary(StringAccum& sa, const click_tcp *tcph, int mask)$/;"	f	namespace:IPSummaryDump
unparse_tcp_opt_binary	elements/analysis/ipsumdump_tcp.cc	/^void unparse_tcp_opt_binary(StringAccum& sa, const uint8_t* opt, int opt_len, int mask)$/;"	f	namespace:IPSummaryDump
unparse_transp_proto	elements/ip/ipfilter.cc	/^IPFilter::Primitive::unparse_transp_proto(int transp_proto)$/;"	f	class:IPFilter::Primitive
unparse_type	elements/ip/ipfilter.cc	/^IPFilter::Primitive::unparse_type() const$/;"	f	class:IPFilter::Primitive
unparse_type	elements/ip/ipfilter.cc	/^IPFilter::Primitive::unparse_type(int srcdst, int type)$/;"	f	class:IPFilter::Primitive
unparse_type	elements/standard/setpackettype.cc	/^SetPacketType::unparse_type(int p)$/;"	f	class:SetPacketType
unparse_with_mask	lib/ipaddress.cc	/^IPAddress::unparse_with_mask(IPAddress mask) const$/;"	f	class:IPAddress
unparse_word	elements/ip/ipfilter.cc	/^unparse_word(int type, int proto, const String &word)$/;"	f	file:
unpause	elements/standard/pokehandlers.cc	/^PokeHandlers::unpause() {$/;"	f	class:PokeHandlers
unpause	include/click/master.hh	/^Master::unpause()$/;"	f	class:Master
unref	tools/lib/landmarkt.hh	/^LandmarkSetT::unref()$/;"	f	class:LandmarkSetT
unregister_router	lib/master.cc	/^Master::unregister_router(Router *router)$/;"	f	class:Master
unresolve_type	tools/lib/elementt.hh	/^    inline void unresolve_type() {$/;"	f	struct:ElementT
unsafe_length_output_everything	tools/click-fastclassifier/click-fastclassifier.hh	/^    int unsafe_length_output_everything;$/;"	m	struct:Classifier_Program
unscale_from_char	elements/grid/bottleneckmetric.hh	/^  metric_t unscale_from_char(unsigned char c)    const { return metric_t(c);             }$/;"	f	class:BottleneckMetric
unscale_from_char	elements/grid/e2elossmetric.hh	/^  metric_t unscale_from_char(unsigned char c)    const { return metric_t(c);             }$/;"	f	class:E2ELossMetric
unscale_from_char	elements/grid/etx2metric.cc	/^ETX2Metric::unscale_from_char(unsigned char c) const$/;"	f	class:ETX2Metric
unscale_from_char	elements/grid/etxmetric.cc	/^ETXMetric::unscale_from_char(unsigned char c) const$/;"	f	class:ETXMetric
unscale_from_char	elements/grid/hopcountmetric.hh	/^  metric_t unscale_from_char(unsigned char c)    const { return metric_t(c);             }$/;"	f	class:HopcountMetric
unscale_from_char	elements/grid/lirmetric.hh	/^  metric_t unscale_from_char(unsigned char c)    const { return metric_t(c);             }$/;"	f	class:LIRMetric
unscale_from_char	elements/grid/threshmetric.hh	/^  metric_t unscale_from_char(unsigned char c)    const { return metric_t(c);             }$/;"	f	class:ThresholdMetric
unscale_from_char	elements/grid/yarvismetric.hh	/^  metric_t unscale_from_char(unsigned char c)    const { return metric_t(c);             }$/;"	f	class:YarvisMetric
unscaled_average	include/click/ewma.hh	/^    value_type unscaled_average() const {$/;"	f	class:DirectEWMAX
unschedule	include/click/task.hh	/^    inline void unschedule() {$/;"	f	class:Task
unschedule	lib/timer.cc	/^Timer::unschedule()$/;"	f	class:Timer
unsigned_type	include/click/type_traits.hh	/^    typedef uint64_t unsigned_type;$/;"	t	struct:integer_traits
unsigned_type	include/click/type_traits.hh	/^    typedef unsigned char unsigned_type;$/;"	t	struct:integer_traits
unsigned_type	include/click/type_traits.hh	/^    typedef unsigned int unsigned_type;$/;"	t	struct:integer_traits
unsigned_type	include/click/type_traits.hh	/^    typedef unsigned long long unsigned_type;$/;"	t	struct:integer_traits
unsigned_type	include/click/type_traits.hh	/^    typedef unsigned long unsigned_type;$/;"	t	struct:integer_traits
unsigned_type	include/click/type_traits.hh	/^    typedef unsigned short unsigned_type;$/;"	t	struct:integer_traits
unsorted_classes	elements/test/sorttest.cc	/^static const char * const unsorted_classes[] = {$/;"	v	file:
unspecified_bool_type	include/click/bitvector.hh	/^    typedef Bitvector::unspecified_bool_type unspecified_bool_type;$/;"	t	class:Bitvector::Bit
unspecified_bool_type	include/click/hashmap.hh	/^    typedef typename inherited::unspecified_bool_type unspecified_bool_type;$/;"	t	class:_HashMap_const_iterator
unspecified_bool_type	tools/lib/elementt.hh	/^    typedef PortT::unspecified_bool_type unspecified_bool_type;$/;"	t	class:ConnectionT
unuse	elements/ip/iprewriterbase.hh	/^    void unuse() {$/;"	f	class:IPRewriterHeap
unuse	elements/ip/iprwpattern.hh	/^    void unuse() {$/;"	f	class:IPRewriterPattern
unuse	include/click/bighashmap_arena.hh	/^HashMap_Arena::unuse()$/;"	f	class:HashMap_Arena
unuse	lib/master.cc	/^Master::unuse()$/;"	f	class:Master
unuse	lib/router.cc	/^Router::unuse()$/;"	f	class:Router
unuse	tools/lib/eclasst.hh	/^    void unuse()			{ if (--_use_count <= 0) delete this; }$/;"	f	class:ElementClassT
unuse	tools/lib/elementmap.hh	/^    void unuse()				{ _use_count--; }$/;"	f	class:ElementMap
update	elements/analysis/aggcounter.cc	/^AggregateCounter::update(Packet *p, bool frozen)$/;"	f	class:AggregateCounter
update	elements/ip/ipratemon.hh	/^IPRateMonitor::update(unsigned addr, int val, Packet *p,$/;"	f	class:IPRateMonitor
update	elements/wifi/linktable.hh	/^    void update(uint32_t seq, uint32_t age, unsigned metric) {$/;"	f	class:LinkTable::LinkInfo
update	include/click/ewma.hh	/^DirectEWMAX<P>::update(value_type x)$/;"	f	class:DirectEWMAX
update	include/click/ewma.hh	/^RateEWMAX<P>::update(signed_value_type delta, unsigned ratenum)$/;"	f	class:RateEWMAX
update	include/click/gaprate.hh	/^GapRate::update()$/;"	f	class:GapRate
update	tools/click-xform/adjacency.cc	/^AdjacencyMatrix::update(const Vector<int> &changed_eindexes)$/;"	f	class:AdjacencyMatrix
update_alloced_mem	elements/ip/ipratemon.hh	/^  void update_alloced_mem(ssize_t m)            { _alloced_mem += m; }$/;"	f	class:IPRateMonitor
update_both_links	elements/wifi/linktable.hh	/^  bool update_both_links(IPAddress a, IPAddress b,$/;"	f	class:LinkTable
update_cksum	elements/grid/linkstat.cc	/^LinkStat::link_probe::update_cksum(unsigned char *d)$/;"	f	class:LinkStat::link_probe
update_cksum	elements/ip/ipencap.cc	/^IPEncap::update_cksum(click_ip *ip, int off) const$/;"	f	class:IPEncap
update_crc	lib/crc32.c	/^update_crc(uint32_t crc_accum,$/;"	f
update_csum	elements/ip/iprwmapping.hh	/^IPRewriterFlow::update_csum(uint16_t *csum, bool direction, uint16_t csum_delta)$/;"	f	class:IPRewriterFlow
update_cycles	include/click/task.hh	/^Task::update_cycles(unsigned c)$/;"	f	class:Task
update_in_cksum	elements/icmp/icmprewriter.cc	/^update_in_cksum(uint16_t *csum, const uint16_t *old_hw, const uint16_t *new_hw,$/;"	f	file:
update_link	elements/wifi/linktable.cc	/^LinkTable::update_link(IPAddress from, IPAddress to,$/;"	f	class:LinkTable
update_metric	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::update_metric(RTEntry &r)$/;"	f	class:DSDVRouteTable
update_metric	elements/grid/gridroutetable.cc	/^GridRouteTable::update_metric(RTEntry &r)$/;"	f	class:GridRouteTable
update_min_level	elements/local/OpenFlow/lib/vlog.cc	/^update_min_level(enum vlog_module module)$/;"	f	file:
update_n	include/click/ewma.hh	/^DirectEWMAX<P>::update_n(value_type x, unsigned n)$/;"	f	class:DirectEWMAX
update_name	elements/analysis/ipsumdumpinfo.cc	/^static String update_name(const String &name)$/;"	f	namespace:IPSummaryDump
update_nexthop_queuelen	elements/local/FlowNet/scheduler/FlowSchedulable.cc	/^int FlowSchedulable::update_nexthop_queuelen(Packet* p)$/;"	f	class:FlowSchedulable
update_ninputs	tools/lib/routert.cc	/^RouterT::update_ninputs(int e)$/;"	f	class:RouterT
update_noutputs	tools/lib/routert.cc	/^RouterT::update_noutputs(int e)$/;"	f	class:RouterT
update_openflow_length	elements/local/OpenFlow/lib/vconn.cc	/^update_openflow_length(struct ofpbuf *buffer) $/;"	f
update_port_flags	elements/local/OpenFlow/datapath.cc	/^void Datapath::update_port_flags(const struct ofp_port_mod *opm)$/;"	f	class:Datapath
update_queue_len	elements/local/OpenFlow/RConn.cc	/^void rconn_stat::update_queue_len(uint32_t qlen)$/;"	f	class:rconn_stat
update_rates	elements/ip/ipratemon.hh	/^IPRateMonitor::update_rates(Packet *p, bool forward, bool update_ewma)$/;"	f	class:IPRateMonitor
update_seqno_delta	elements/tcpudp/tcprewriter.cc	/^TCPRewriter::TCPFlow::update_seqno_delta(bool direction,$/;"	f	class:TCPRewriter::TCPFlow
update_time	include/click/ewma.hh	/^RateEWMAX<P>::update_time(unsigned now)$/;"	f	class:RateEWMAX
update_value_mask	elements/standard/classifier.cc	/^update_value_mask(int c, int shift, int &value, int &mask)$/;"	f	file:
update_with	include/click/ewma.hh	/^DirectEWMAX<P>::update_with(value_type x)$/;"	f	class:DirectEWMAX
update_with	include/click/gaprate.hh	/^GapRate::update_with(int delta)$/;"	f	class:GapRate
update_wst	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::update_wst(RTEntry *old_r, RTEntry &new_r, unsigned int jiff)$/;"	f	class:DSDVRouteTable
updown	elements/userlevel/kerneltun.cc	/^KernelTun::updown(IPAddress addr, IPAddress mask, ErrorHandler *errh)$/;"	f	class:KernelTun
upper	drivers/e1000-4.x/src/e1000_hw.h	/^    } upper;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon64
upper	drivers/e1000-4.x/src/e1000_hw.h	/^    } upper;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon54
upper	drivers/e1000-5.x/src/e1000_hw.h	/^    } upper;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon161
upper	drivers/e1000-5.x/src/e1000_hw.h	/^    } upper;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon151
upper	drivers/e1000-7.x/src/e1000_hw.h	/^        } upper;$/;"	m	struct:e1000_rx_desc_extended::__anon94	typeref:struct:e1000_rx_desc_extended::__anon94::__anon98
upper	drivers/e1000-7.x/src/e1000_hw.h	/^        } upper;$/;"	m	struct:e1000_rx_desc_packet_split::__anon100	typeref:struct:e1000_rx_desc_packet_split::__anon100::__anon105
upper	drivers/e1000-7.x/src/e1000_hw.h	/^    } upper;$/;"	m	struct:e1000_data_desc	typeref:union:e1000_data_desc::__anon118
upper	drivers/e1000-7.x/src/e1000_hw.h	/^    } upper;$/;"	m	struct:e1000_tx_desc	typeref:union:e1000_tx_desc::__anon108
upper	lib/string.cc	/^String::upper() const$/;"	f	class:String
upper_setup	drivers/e1000-4.x/src/e1000_hw.h	/^    } upper_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon58
upper_setup	drivers/e1000-5.x/src/e1000_hw.h	/^    } upper_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon155
upper_setup	drivers/e1000-7.x/src/e1000_hw.h	/^    } upper_setup;$/;"	m	struct:e1000_context_desc	typeref:union:e1000_context_desc::__anon112
upstream	apps/clicky/src/crouter.hh	/^inline const crouter::reachable_t &crouter::upstream(const String &str)$/;"	f	class:clicky::crouter
upstream_elements	lib/router.cc	/^Router::upstream_elements(Element *e, int port, ElementFilter *filter, Vector<Element *> &result)$/;"	f	class:Router
upstream_empty_signal	lib/notifier.cc	/^Notifier::upstream_empty_signal(Element* e, int port, Task* task, Notifier* dependent_notifier)$/;"	f	class:Notifier
us	include/click/clp.h	/^	unsigned us[Clp_ValIntSize];$/;"	m	union:Clp_Parser::__anon460
usage	apps/clicky/src/clicky.cc	/^void usage()$/;"	f
usage	conf/make-dsdv-config.pl	/^sub usage() {$/;"	s
usage	conf/make-dsr-config.pl	/^sub usage() {$/;"	s
usage	conf/wifi/gen_config_safe.pl	/^sub usage() {$/;"	s
usage	doc/click-elem2man	/^sub usage () {$/;"	s
usage	drivers/e1000-4.x/src/idiag_test.c	/^usage(char *name)$/;"	f	file:
usage	test/testie	/^sub usage () {$/;"	s
usage	tools/click-align/click-align.cc	/^usage()$/;"	f
usage	tools/click-check/click-check.cc	/^usage()$/;"	f
usage	tools/click-combine/click-combine.cc	/^usage()$/;"	f
usage	tools/click-combine/click-uncombine.cc	/^usage()$/;"	f
usage	tools/click-devirtualize/click-devirtualize.cc	/^usage()$/;"	f
usage	tools/click-fastclassifier/click-fastclassifier.cc	/^usage()$/;"	f
usage	tools/click-flatten/click-flatten.cc	/^usage()$/;"	f
usage	tools/click-install/click-install.cc	/^usage()$/;"	f
usage	tools/click-install/click-uninstall.cc	/^usage()$/;"	f
usage	tools/click-mkmindriver/click-mkmindriver.cc	/^usage()$/;"	f
usage	tools/click-pretty/click-pretty.cc	/^usage()$/;"	f
usage	tools/click-undead/click-undead.cc	/^usage()$/;"	f
usage	tools/click-xform/click-xform.cc	/^usage()$/;"	f
usage	tools/click2xml/click2xml.cc	/^usage()$/;"	f
usage	tools/click2xml/xml2click.cc	/^usage()$/;"	f
usage	userlevel/click.cc	/^usage()$/;"	f
use	elements/ip/iprewriterbase.hh	/^    void use() {$/;"	f	class:IPRewriterHeap
use	elements/ip/iprwpattern.hh	/^    void use() {$/;"	f	class:IPRewriterPattern
use	include/click/bighashmap_arena.hh	/^    void use()			{ _refcount++; }$/;"	f	class:HashMap_Arena
use	include/click/router.hh	/^Router::use()$/;"	f	class:Router
use	lib/master.cc	/^Master::use()$/;"	f	class:Master
use	tools/lib/eclasst.hh	/^    void use()				{ _use_count++; }$/;"	f	class:ElementClassT
use	tools/lib/elementmap.hh	/^    void use()					{ _use_count++; }$/;"	f	class:ElementMap
use_adaptive_rx_coalesce	drivers/e1000-5.x/src/kcompat.h	/^	u32	use_adaptive_rx_coalesce;$/;"	m	struct:_kc_ethtool_coalesce
use_adaptive_rx_coalesce	drivers/e1000-7.x/src/kcompat.h	/^	u32	use_adaptive_rx_coalesce;$/;"	m	struct:_kc_ethtool_coalesce
use_adaptive_tx_coalesce	drivers/e1000-5.x/src/kcompat.h	/^	u32	use_adaptive_tx_coalesce;$/;"	m	struct:_kc_ethtool_coalesce
use_adaptive_tx_coalesce	drivers/e1000-7.x/src/kcompat.h	/^	u32	use_adaptive_tx_coalesce;$/;"	m	struct:_kc_ethtool_coalesce
use_count	apps/clicky/src/ref.hh	/^    uint32_t use_count() const {$/;"	f	class:enable_ref_ptr
use_count	include/click/confparse.hh	/^    int use_count;$/;"	m	struct:cp_argtype
use_eerd	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t use_eerd;$/;"	m	struct:e1000_eeprom_info
use_eewr	drivers/e1000-7.x/src/e1000_hw.h	/^    boolean_t use_eewr;$/;"	m	struct:e1000_eeprom_info
use_old_route	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::use_old_route(const IPAddress &dst, unsigned jiff)$/;"	f	class:DSDVRouteTable
use_signal	elements/standard/timedunqueue.hh	/^    enum { use_signal = 1 };$/;"	e	enum:TimedUnqueue::__anon179
usec	elements/local/FlowNet/papmo/PaPMo.hh	/^	uint32_t usec;$/;"	m	struct:composed_trace
usec	include/click/timestamp.hh	/^Timestamp::usec() const$/;"	f	class:Timestamp
usec1	include/click/timestamp.hh	/^Timestamp::usec1() const$/;"	f	class:Timestamp
usec_delay	drivers/e1000-4.x/src/e1000_osdep.h	44;"	d
usec_delay	drivers/e1000-5.x/src/e1000_osdep.h	45;"	d
usec_delay	drivers/e1000-7.x/src/e1000_osdep.h	45;"	d
usec_per_msec	include/click/timestamp.hh	/^	usec_per_msec = 1000,$/;"	e	enum:Timestamp::__anon417
usec_per_sec	include/click/timestamp.hh	/^	usec_per_sec = 1000000,$/;"	e	enum:Timestamp::__anon417
usec_to_subsec	include/click/timestamp.hh	/^    inline static uint32_t usec_to_subsec(uint32_t usec) {$/;"	f	class:Timestamp
usecval	include/click/timestamp.hh	/^    inline value_type usecval() const {$/;"	f	class:Timestamp
used	elements/local/OpenFlow/lib/switch-flow.hh	/^    uint64_t used;              \/* Last used time. *\/$/;"	m	struct:sw_flow
used_mach	tools/click-fastclassifier/fc_ipclassifier.cc	/^    used_mach = 1, used_neth = 2, used_transph = 4$/;"	e	enum:__anon546	file:
used_neth	tools/click-fastclassifier/fc_ipclassifier.cc	/^    used_mach = 1, used_neth = 2, used_transph = 4$/;"	e	enum:__anon546	file:
used_time	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint64_t used_time;       \/* Time entry was last used in milliseconds. *\/$/;"	m	struct:nx_flow_end
used_transph	tools/click-fastclassifier/fc_ipclassifier.cc	/^    used_mach = 1, used_neth = 2, used_transph = 4$/;"	e	enum:__anon546	file:
user_anno	include/click/packet.hh	/^inline const void *Packet::user_anno() const {$/;"	f	class:Packet
user_anno	include/click/packet.hh	/^inline void *Packet::user_anno() {$/;"	f	class:Packet
user_anno_c	include/click/packet.hh	/^inline uint8_t Packet::user_anno_c(int i) const {$/;"	f	class:Packet
user_anno_i	include/click/packet.hh	/^inline int32_t Packet::user_anno_i(int i) const {$/;"	f	class:Packet
user_anno_offset	include/click/packet.hh	/^	user_anno_offset = 16,$/;"	e	enum:Packet::__anon464
user_anno_s	include/click/packet.hh	/^inline int16_t Packet::user_anno_s(int i) const {$/;"	f	class:Packet
user_anno_s32	include/click/packet.hh	/^inline int32_t Packet::user_anno_s32(int i) const {$/;"	f	class:Packet
user_anno_size	include/click/packet.hh	/^	user_anno_size = 32,$/;"	e	enum:Packet::__anon464
user_anno_u	include/click/packet.hh	/^inline uint32_t Packet::user_anno_u(int i) const {$/;"	f	class:Packet
user_anno_u16	include/click/packet.hh	/^inline uint16_t Packet::user_anno_u16(int i) const {$/;"	f	class:Packet
user_anno_u32	include/click/packet.hh	/^inline const uint32_t *Packet::user_anno_u32() const {$/;"	f	class:Packet
user_anno_u32	include/click/packet.hh	/^inline uint32_t *Packet::user_anno_u32() {$/;"	f	class:Packet
user_anno_u32	include/click/packet.hh	/^inline uint32_t Packet::user_anno_u32(int i) const {$/;"	f	class:Packet
user_anno_u64	include/click/packet.hh	/^inline uint64_t Packet::user_anno_u64(int i) const {$/;"	f	class:Packet
user_anno_u8	include/click/packet.hh	/^inline const uint8_t *Packet::user_anno_u8() const {$/;"	f	class:Packet
user_anno_u8	include/click/packet.hh	/^inline uint8_t *Packet::user_anno_u8() {$/;"	f	class:Packet
user_anno_u8	include/click/packet.hh	/^inline uint8_t Packet::user_anno_u8(int i) const {$/;"	f	class:Packet
user_anno_us	include/click/packet.hh	/^inline uint16_t Packet::user_anno_us(int i) const {$/;"	f	class:Packet
user_data	elements/analysis/ipsumdumpinfo.hh	/^    int user_data;$/;"	m	struct:IPSummaryDump::FieldReader
user_data	elements/analysis/ipsumdumpinfo.hh	/^    int user_data;$/;"	m	struct:IPSummaryDump::FieldWriter
user_data	include/click/clp.h	/^    void *user_data;		\/**< Uninterpreted by CLP; users can set$/;"	m	struct:Clp_Parser
user_data	include/click/confparse.hh	/^    void* user_data;$/;"	m	struct:cp_argtype
user_data	include/click/handler.hh	/^    inline void *user_data(int op) const {$/;"	f	class:Handler
user_data	include/click/task.hh	/^    inline void *user_data() const {$/;"	f	class:Task
user_data	lib/clp.c	/^    void *user_data;$/;"	m	struct:__anon499	file:
user_data	tools/lib/elementt.hh	/^    void *user_data() const		{ return _user_data; }$/;"	f	struct:ElementT
user_data1	include/click/handler.hh	/^Handler::user_data1() const$/;"	f	class:Handler
user_data2	include/click/handler.hh	/^Handler::user_data2() const$/;"	f	class:Handler
ushort_at	elements/grid/linkstat.hh	/^  static unsigned ushort_at(const unsigned char *c)$/;"	f	class:LinkStat
utf8	lib/clp.c	/^    int utf8;$/;"	m	struct:Clp_Internal	file:
utf8_charlen	lib/clp.c	/^utf8_charlen(const char *s)$/;"	f	file:
utf8_length	apps/clicky/src/gathererror.cc	/^utf8_length(const char *begin, const char *end)$/;"	f
utf8_length	apps/clicky/src/gathererror.cc	/^utf8_length(const unsigned char *begin, const unsigned char *end)$/;"	f
utf8_length	apps/clicky/src/gathererror.hh	/^inline int utf8_length(const String &str) {$/;"	f
utilization	include/click/task.hh	/^Task::utilization() const$/;"	f	class:Task
utimestamp_inb	elements/analysis/ipsumdump_anno.cc	/^static const uint8_t *utimestamp_inb(PacketOdesc& d, const uint8_t* s, const uint8_t *ends, const FieldReader *)$/;"	f	namespace:IPSummaryDump
utimestamp_outb	elements/analysis/ipsumdump_anno.cc	/^static void utimestamp_outb(const PacketDesc& d, bool, const FieldWriter *)$/;"	f	namespace:IPSummaryDump
v	elements/analysis/ipsumdumpinfo.hh	/^	uint32_t v;$/;"	m	union:IPSummaryDump::PacketDesc::__anon259
v	elements/analysis/ipsumdumpinfo.hh	/^	uint32_t v;$/;"	m	union:IPSummaryDump::PacketOdesc::__anon260
v	include/click/confparse.hh	/^    } v, v2;$/;"	m	struct:cp_value	typeref:union:cp_value::__anon479
v	include/click/hashtable.hh	/^	T v;$/;"	m	struct:HashTable::elt
v	include/click/notifier.hh	/^	void *v;$/;"	m	union:ActiveNotifier::__anon433
v1	include/click/notifier.hh	/^	atomic_uint32_t *v1;$/;"	m	union:NotifierSignal::__anon431
v2	include/click/confparse.hh	/^    } v, v2;$/;"	m	struct:cp_value	typeref:union:cp_value::__anon479
v2_string	include/click/confparse.hh	/^    String v2_string;$/;"	m	struct:cp_value
v_lat	elements/grid/movesim.hh	/^    double v_lat;$/;"	m	struct:MovementSimulator::node_event
v_lon	elements/grid/movesim.hh	/^    double v_lon;$/;"	m	struct:MovementSimulator::node_event
v_string	include/click/confparse.hh	/^    String v_string;$/;"	m	struct:cp_value
va_copy	elements/local/OpenFlow/lib/util.hh	49;"	d
val	elements/grid/gridgenericmetric.hh	/^    unsigned val()  const { return _val;  }$/;"	f	class:GridGenericMetric::metric_t
val	elements/grid/gridheaderinfo.hh	/^    unsigned int val;$/;"	m	struct:GridHeaderInfo::info_t
val	elements/ip/siphmapper.hh	/^  unsigned short val;$/;"	m	class:chash_node_t
val	include/click/clp.h	/^    } val;			\/**< The parsed value provided with the last$/;"	m	struct:Clp_Parser	typeref:union:Clp_Parser::__anon460
val_type	include/click/clp.h	/^    int val_type;		\/**< ID of option's value type, or 0 if option$/;"	m	struct:Clp_Option
val_type	lib/clp.c	/^    int val_type;$/;"	m	struct:__anon499	file:
val_type_binsearch	lib/clp.c	/^val_type_binsearch(Clp_Internal *cli, int val_type)$/;"	f	file:
valid	elements/local/FlowNet/libtable/TableLinear.hh	/^	bool* valid;$/;"	m	class:VcTableLinear
valid	include/click/iptable.hh	/^    bool valid() const			{ return mask || !dst; }$/;"	f	struct:IPTable::Entry
valid_route	elements/wifi/linktable.cc	/^LinkTable::valid_route(const Vector<IPAddress> &route)$/;"	f	class:LinkTable
valid_source	elements/icmp/icmperror.cc	/^ICMPError::valid_source(struct in_addr aa) const$/;"	f	class:ICMPError
valid_source	elements/ip6/icmp6error.cc	/^ICMP6Error::valid_source(const IP6Address &aa)$/;"	f	class:ICMP6Error
valid_source_route	elements/icmp/icmperror.cc	/^ICMPError::valid_source_route(const click_ip *iph)$/;"	f	class:ICMPError
validate	elements/local/OpenFlow/lib/dp_act.cc	/^    uint16_t (*validate)(class Datapath *dp, $/;"	m	struct:openflow_action	file:
validate_actions	elements/local/OpenFlow/lib/dp_act.cc	/^validate_actions(class Datapath *dp, const struct sw_flow_key *key,$/;"	f
validate_ofpat	elements/local/OpenFlow/lib/dp_act.cc	/^validate_ofpat(class Datapath *dp, const struct sw_flow_key *key, $/;"	f	file:
validate_output	elements/local/OpenFlow/lib/dp_act.cc	/^validate_output(class Datapath *dp UNUSED, const struct sw_flow_key *key, $/;"	f	file:
validate_queue	elements/local/OpenFlow/lib/dp_act.cc	/^validate_queue(class Datapath *dp UNUSED, const struct sw_flow_key *key UNUSED,$/;"	f	file:
validate_vendor	elements/local/OpenFlow/lib/dp_act.cc	/^validate_vendor(class Datapath *dp UNUSED, const struct sw_flow_key *key UNUSED, $/;"	f	file:
valtype	lib/clp.c	/^    Clp_ValType *valtype;$/;"	m	struct:Clp_Internal	file:
value	apps/clicky/src/ddecor.hh	/^	double value;$/;"	m	struct:clicky::dactivity_decor::sample
value	apps/clicky/src/dstyle.cc	/^    uint32_t value;$/;"	m	struct:clicky::colordef	file:
value	drivers/e1000-4.x/src/e1000_hw.h	/^    volatile uint32_t value;    \/* Flexible Filter Value (RW) *\/$/;"	m	struct:e1000_ffvt_entry
value	drivers/e1000-5.x/src/e1000_hw.h	/^    volatile uint32_t value;    \/* Flexible Filter Value (RW) *\/$/;"	m	struct:e1000_ffvt_entry
value	drivers/e1000-7.x/src/e1000_hw.h	/^    volatile uint32_t value;    \/* Flexible Filter Value (RW) *\/$/;"	m	struct:e1000_ffvt_entry
value	elements/ip/ipfieldinfo.hh	/^    inline int32_t value() const { return _val; }$/;"	f	class:IPField
value	elements/local/OpenFlow/lib/stp.cc	/^    int value;                   \/* Current value of timer, counting up. *\/$/;"	m	struct:stp_timer	file:
value	elements/standard/classification.hh	/^    } value;$/;"	m	struct:Classification::Wordwise::Insn	typeref:union:Classification::Wordwise::Insn::__anon181
value	include/click/atomic.hh	/^atomic_uint32_t::value() const$/;"	f	class:atomic_uint32_t
value	include/click/handlercall.hh	/^    const String &value() const	{$/;"	f	class:HandlerCall
value	include/click/hashmap.hh	/^    T *value() const		{ return reinterpret_cast<T *>(_i.value()); }$/;"	f	class:_HashMap_const_iterator
value	include/click/hashmap.hh	/^    T *value;$/;"	m	struct:HashMap::Pair
value	include/click/hashmap.hh	/^    V value;$/;"	m	struct:HashMap::Pair
value	include/click/hashmap.hh	/^    void *value;$/;"	m	struct:HashMap::Pair
value	include/click/hashmap.hh	/^  T *&value() const	{ return pair()->value; }$/;"	f	class:_HashMap_iterator
value	include/click/hashmap.hh	/^  V &value() const	{ return const_cast<V &>(inherited::value()); }$/;"	f	class:_HashMap_iterator
value	include/click/hashmap.hh	/^  const V &value() const		{ return _elt->value; }$/;"	f	class:_HashMap_const_iterator
value	include/click/hashmap.hh	/^  void *&value() const	{ return this->_elt->value; }$/;"	f	class:_HashMap_iterator
value	include/click/hashmap.hh	/^  void *value() const			{ return _elt->value; }$/;"	f	class:_HashMap_const_iterator
value	include/click/hashtable.hh	/^    V &value() const {$/;"	f	class:HashTable_iterator
value	include/click/hashtable.hh	/^    const V &value() const {$/;"	f	class:HashTable_const_iterator
value	include/click/nameinfo.hh	/^	uint32_t value;$/;"	m	struct:StaticNameDB::Entry
value	include/click/notifier.hh	/^	atomic_uint32_t *value;$/;"	m	struct:NotifierSignal::vmpair
value	include/click/type_traits.hh	/^    static constexpr T value = V;$/;"	m	struct:integral_constant
value	include/click/type_traits.hh	/^template<typename T, T V> constexpr T integral_constant<T, V>::value;$/;"	m	class:integral_constant
value	include/click/variableenv.hh	/^    const String &value(int i) const	{ return _values[i]; }$/;"	f	class:VariableEnvironment
value	lib/variableenv.cc	/^VariableEnvironment::value(const String &formal, bool &found) const$/;"	f	class:VariableEnvironment
value	tools/click-fastclassifier/click-fastclassifier.hh	/^    } value;$/;"	m	struct:Classifier_Insn	typeref:union:Classifier_Insn::__anon545
value	tools/lib/elementmap.hh	/^    const ElementTraits& value() const	{ return _emap->traits_at(_index); }$/;"	f	class:ElementMap::TraitsIterator
valueChanged	apps/ClickController/ClickController.java	/^	public void valueChanged(TreeSelectionEvent e) {$/;"	m	class:ClickController.HandlerSelectAction
value_div	include/click/timestamp.hh	/^    static inline value_type value_div(value_type a, uint32_t b) {$/;"	f	class:Timestamp
value_div_mod	include/click/timestamp.hh	/^    static inline void value_div_mod(int32_t &div, int32_t &rem,$/;"	f	class:Timestamp
value_name	lib/confparse.cc	/^CpVaHelper::value_name(int i)$/;"	f	class:__anon517::CpVaHelper
value_size	include/click/nameinfo.hh	/^    size_t value_size() const {$/;"	f	class:NameDB
value_type	include/click/ewma.hh	/^    typedef T value_type;$/;"	t	class:FixedEWMAXParameters
value_type	include/click/ewma.hh	/^    typedef T value_type;$/;"	t	class:StabilityEWMAXParameters
value_type	include/click/ewma.hh	/^    typedef typename P::value_type value_type;$/;"	t	class:DirectEWMAX
value_type	include/click/ewma.hh	/^    typedef typename P::value_type value_type;$/;"	t	class:RateEWMAX
value_type	include/click/hashcontainer.hh	/^    typedef T value_type;$/;"	t	class:HashContainer
value_type	include/click/hashtable.hh	/^    typedef Pair<const K, V> value_type;$/;"	t	class:HashTable
value_type	include/click/hashtable.hh	/^    typedef T value_type;$/;"	t	class:HashTable
value_type	include/click/timestamp.hh	/^    typedef int32_t value_type;$/;"	t	class:Timestamp
value_type	include/click/timestamp.hh	/^    typedef int64_t value_type;$/;"	t	class:Timestamp
value_type	include/click/type_traits.hh	/^    typedef T value_type;$/;"	t	struct:integral_constant
value_type	include/click/vector.hh	/^    typedef T value_type;$/;"	t	class:Vector
value_type	include/click/vector.hh	/^    typedef T* value_type;$/;"	t	class:Vector
value_type	include/click/vector.hh	/^    typedef void* value_type;$/;"	t	class:Vector
value_type	lib/args.cc	/^typedef click_uint_large_t value_type;$/;"	t	namespace:__anon505	file:
values	include/click/llrpc.h	/^    uint32_t values[CLICK_LLRPC_COUNTS_SIZE];$/;"	m	struct:click_llrpc_counts_st
values	include/click/variableenv.hh	/^    const Vector<String> &values() const { return _values; }$/;"	f	class:VariableEnvironment
vborder_style	apps/clicky/src/dstyle.hh	/^    int vborder_style() const {$/;"	f	struct:clicky::dcss_property
vborder_style	apps/clicky/src/dstyle.hh	/^    int vborder_style(const char *n) const {$/;"	f	struct:clicky::dcss_propmatch
vcClassify	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^	VcFlowClassify				*vcClassify;$/;"	m	class:PFMpeg2AdaptFW
vcTable	elements/local/FlowNet/common/FlowNetGod.hh	/^	PFFW*		vcTable[MAX_PFFW];$/;"	m	class:FlowNetGod
vcTableDecap	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^        VcTableLinear<FlowMpeg2AdaptDecap>      *vcTableDecap;$/;"	m	class:PFMpeg2AdaptFW
vcTableEncap	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.hh	/^        VcTableLinear<FlowMpeg2AdaptEncap>      *vcTableEncap;$/;"	m	class:PFMpeg2AdaptFW
vcolor	apps/clicky/src/dstyle.hh	/^    void vcolor(double *r, double *g, double *b, double *a) const {$/;"	f	struct:clicky::dcss_property
vcolor	apps/clicky/src/dstyle.hh	/^    void vcolor(double color[4]) const {$/;"	f	struct:clicky::dcss_property
vcolor	apps/clicky/src/dstyle.hh	/^    void vcolor(double color[4], const char *n) const {$/;"	f	struct:clicky::dcss_propmatch
vconn	elements/local/OpenFlow/lib/rconn.cc	/^    struct vconn *vconn;$/;"	m	struct:rconn	typeref:struct:rconn::vconn	file:
vconn	elements/local/OpenFlow/lib/vconn-netlink.cc	/^    struct vconn vconn;$/;"	m	struct:netlink_vconn	typeref:struct:netlink_vconn::vconn	file:
vconn	elements/local/OpenFlow/lib/vconn-provider.hh	/^struct vconn {$/;"	s
vconn	elements/local/OpenFlow/lib/vconn-ssl.cc	/^    struct vconn vconn;$/;"	m	struct:ssl_vconn	typeref:struct:ssl_vconn::vconn	file:
vconn	elements/local/OpenFlow/lib/vconn-stream.cc	/^    struct vconn vconn;$/;"	m	struct:stream_vconn	typeref:struct:stream_vconn::vconn	file:
vconn_assert_class	elements/local/OpenFlow/lib/vconn-provider.hh	/^static inline void vconn_assert_class(const struct vconn *vconn,$/;"	f
vconn_class	elements/local/OpenFlow/lib/vconn-provider.hh	/^struct vconn_class {$/;"	s
vconn_classes	elements/local/OpenFlow/lib/vconn.cc	/^static struct vconn_class *vconn_classes[] = {$/;"	v	typeref:struct:vconn_class	file:
vconn_close	elements/local/OpenFlow/lib/vconn.cc	/^vconn_close(struct vconn *vconn)$/;"	f
vconn_connect	elements/local/OpenFlow/lib/vconn.cc	/^vconn_connect(struct vconn *vconn)$/;"	f
vconn_connect_wait	elements/local/OpenFlow/lib/vconn.cc	/^vconn_connect_wait(struct vconn *vconn)$/;"	f
vconn_get_ip	elements/local/OpenFlow/lib/vconn.cc	/^vconn_get_ip(const struct vconn *vconn) $/;"	f
vconn_get_name	elements/local/OpenFlow/lib/vconn.cc	/^vconn_get_name(const struct vconn *vconn)$/;"	f
vconn_init	elements/local/OpenFlow/lib/vconn.cc	/^vconn_init(struct vconn *vconn, struct vconn_class *Class, int connect_status,$/;"	f
vconn_is_reconnectable	elements/local/OpenFlow/lib/vconn.cc	/^vconn_is_reconnectable(const struct vconn *vconn)$/;"	f
vconn_open	elements/local/OpenFlow/lib/vconn.cc	/^vconn_open(const char *name, int min_version, struct vconn **vconnp)$/;"	f
vconn_open_block	elements/local/OpenFlow/lib/vconn.cc	/^vconn_open_block(const char *name, int min_version, struct vconn **vconnp)$/;"	f
vconn_recv	elements/local/OpenFlow/lib/vconn.cc	/^vconn_recv(struct vconn *vconn, struct ofpbuf **msgp)$/;"	f
vconn_recv_block	elements/local/OpenFlow/lib/vconn.cc	/^vconn_recv_block(struct vconn *vconn, struct ofpbuf **msgp)$/;"	f
vconn_recv_wait	elements/local/OpenFlow/lib/vconn.cc	/^vconn_recv_wait(struct vconn *vconn)$/;"	f
vconn_recv_xid	elements/local/OpenFlow/lib/vconn.cc	/^vconn_recv_xid(struct vconn *vconn, uint32_t xid, struct ofpbuf **replyp)$/;"	f
vconn_send	elements/local/OpenFlow/lib/vconn.cc	/^int vconn_send(struct vconn *vconn, struct ofpbuf *msg)$/;"	f
vconn_send_block	elements/local/OpenFlow/lib/vconn.cc	/^int vconn_send_block(struct vconn *vconn, struct ofpbuf *msg)$/;"	f
vconn_send_wait	elements/local/OpenFlow/lib/vconn.cc	/^vconn_send_wait(struct vconn *vconn)$/;"	f
vconn_ssl_is_configured	elements/local/OpenFlow/lib/vconn-ssl.cc	/^vconn_ssl_is_configured(void) $/;"	f
vconn_ssl_set_ca_cert_file	elements/local/OpenFlow/lib/vconn-ssl.cc	/^vconn_ssl_set_ca_cert_file(const char *file_name, bool bootstrap)$/;"	f
vconn_ssl_set_certificate_file	elements/local/OpenFlow/lib/vconn-ssl.cc	/^vconn_ssl_set_certificate_file(const char *file_name)$/;"	f
vconn_ssl_set_peer_ca_cert_file	elements/local/OpenFlow/lib/vconn-ssl.cc	/^vconn_ssl_set_peer_ca_cert_file(const char *file_name)$/;"	f
vconn_ssl_set_private_key_file	elements/local/OpenFlow/lib/vconn-ssl.cc	/^vconn_ssl_set_private_key_file(const char *file_name)$/;"	f
vconn_state	elements/local/OpenFlow/lib/vconn.cc	/^enum vconn_state {$/;"	g	file:
vconn_transact	elements/local/OpenFlow/lib/vconn.cc	/^vconn_transact(struct vconn *vconn, struct ofpbuf *request,$/;"	f
vconn_usage	elements/local/OpenFlow/lib/vconn.cc	/^vconn_usage(bool active, bool passive, bool bootstrap UNUSED)$/;"	f
vconn_wait	elements/local/OpenFlow/lib/vconn.cc	/^vconn_wait(struct vconn *vconn, enum vconn_wait_type wait)$/;"	f
vconn_wait_type	elements/local/OpenFlow/lib/vconn.hh	/^enum vconn_wait_type {$/;"	g
vcs_connecting	elements/local/OpenFlow/lib/vconn.cc	/^vcs_connecting(struct vconn *vconn) $/;"	f	file:
vcs_recv_hello	elements/local/OpenFlow/lib/vconn.cc	/^vcs_recv_hello(struct vconn *vconn)$/;"	f	file:
vcs_send_error	elements/local/OpenFlow/lib/vconn.cc	/^vcs_send_error(struct vconn *vconn)$/;"	f	file:
vcs_send_hello	elements/local/OpenFlow/lib/vconn.cc	/^vcs_send_hello(struct vconn *vconn)$/;"	f	file:
vector	elements/grid/amoeba.cc	/^Amoeba::vector(int nl, int nh)$/;"	f	class:Amoeba
velt	include/click/dequeue.hh	/^  static void *velt(T *l, int i)	{ return (void *) &l[i];  }$/;"	f	class:DEQueue
velt	include/click/dequeue.hh	/^  void *velt(int i) const		{ return (void *) &_l[i]; }$/;"	f	class:DEQueue
velt	include/click/vector.hh	/^    static void *velt(T *l, size_type i)	{ return (void *)&l[i]; }$/;"	f	class:Vector
velt	include/click/vector.hh	/^    void *velt(size_type i) const		{ return (void *)&_l[i]; }$/;"	f	class:Vector
vendor	drivers/e1000-4.x/src/kcompat.h	/^	unsigned int vendor, device;$/;"	m	struct:_kc_pci_device_id
vendor	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint32_t vendor;                \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_header
vendor	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint32_t vendor;                \/* NX_VENDOR_ID. *\/$/;"	m	struct:nx_action_snat
vendor	elements/local/OpenFlow/include/openflow/nicira-ext.hh	/^    uint32_t vendor;            \/* NX_VENDOR_ID. *\/$/;"	m	struct:nicira_header
vendor	elements/local/OpenFlow/include/openflow/openflow-ext.hh	/^    uint32_t vendor;            \/* OPENFLOW_VENDOR_ID. *\/$/;"	m	struct:ofp_extension_header
vendor	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t vendor;                \/* Vendor ID, which takes the same form$/;"	m	struct:ofp_action_vendor_header
vendor	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t vendor;            \/* Vendor ID:$/;"	m	struct:ofp_vendor_header
vendor_id	drivers/e1000-4.x/src/e1000_hw.h	/^    uint16_t vendor_id;$/;"	m	struct:e1000_hw
vendor_id	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t vendor_id;$/;"	m	struct:e1000_hw
vendor_id	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t vendor_id;$/;"	m	struct:e1000_hw
vendor_stat	elements/local/OpenFlow/lib/ofp-print.cc	/^vendor_stat(struct ds *string, const void *body, size_t len,$/;"	f	file:
vendor_stats_done	elements/local/OpenFlow/datapath.cc	/^static void vendor_stats_done(void *state)$/;"	f	file:
vendor_stats_dump	elements/local/OpenFlow/datapath.cc	/^static int vendor_stats_dump(class Datapath *dp UNUSED, void *state,$/;"	f	file:
vendor_stats_init	elements/local/OpenFlow/datapath.cc	/^static int vendor_stats_init(const void *body, int body_len UNUSED,$/;"	f	file:
veol	elements/wifi/athdesc.h	/^	u_int32_t	veol:1;$/;"	m	struct:ar5212_desc
verbose	tools/click-fastclassifier/click-fastclassifier.cc	/^static bool verbose;$/;"	v	file:
verbose	tools/click-install/common.cc	/^bool verbose = false;$/;"	v
verbose	tools/click-mkmindriver/click-mkmindriver.cc	/^static bool verbose = false;$/;"	v	file:
verbose	tools/click-undead/click-undead.cc	/^static bool verbose;$/;"	v	file:
verbose_cmd	doc/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	doc/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
verbose_cmd	linuxmodule/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	linuxmodule/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
verbose_cmd	tools/click-align/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	tools/click-align/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
verbose_cmd	tools/click-check/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	tools/click-check/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
verbose_cmd	tools/click-combine/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	tools/click-combine/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
verbose_cmd	tools/click-devirtualize/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	tools/click-devirtualize/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
verbose_cmd	tools/click-fastclassifier/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	tools/click-fastclassifier/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
verbose_cmd	tools/click-flatten/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	tools/click-flatten/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
verbose_cmd	tools/click-install/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	tools/click-install/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
verbose_cmd	tools/click-mkmindriver/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	tools/click-mkmindriver/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
verbose_cmd	tools/click-pretty/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	tools/click-pretty/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
verbose_cmd	tools/click-undead/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	tools/click-undead/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
verbose_cmd	tools/click-xform/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	tools/click-xform/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
verbose_cmd	tools/click2xml/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	tools/click2xml/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
verbose_cmd	tools/lib/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	tools/lib/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
verbose_cmd	userlevel/Makefile	/^verbose_cmd = $(1) $(3)$/;"	m
verbose_cmd	userlevel/Makefile	/^verbose_cmd = @$(x_verbose_cmd)$/;"	m
version	drivers/e1000-5.x/src/kcompat.h	/^	char	 version[32];$/;"	m	struct:k_ethtool_drvinfo
version	drivers/e1000-5.x/src/kcompat.h	/^	u32	version; \/* driver-specific, indicates different chips\/revs *\/$/;"	m	struct:_kc_ethtool_regs
version	drivers/e1000-7.x/src/kcompat.h	/^	char	 version[32];$/;"	m	struct:k_ethtool_drvinfo
version	drivers/e1000-7.x/src/kcompat.h	/^	u32	version; \/* driver-specific, indicates different chips\/revs *\/$/;"	m	struct:_kc_ethtool_regs
version	elements/grid/grid.hh	/^    uint32_t version;		\/\/ which version of the grid protocol we are using$/;"	m	struct:grid_hdr
version	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t version;    \/* OFP_VERSION. *\/$/;"	m	struct:ofp_header
version	elements/local/OpenFlow/lib/netlink-protocol.hh	/^    uint8_t version;$/;"	m	struct:genlmsghdr
version	elements/local/OpenFlow/lib/vconn-provider.hh	/^    int version;$/;"	m	struct:vconn
version	elements/userlevel/umlswitch.hh	/^	uint32_t version;$/;"	m	struct:request_v3
version	tools/lib/elementmap.hh	/^    int32_t version() const			{ return _version; }$/;"	f	class:ElementMap
version_counter	tools/lib/elementmap.cc	/^int32_t ElementMap::version_counter = 0;$/;"	m	class:ElementMap	file:
version_counter	tools/lib/elementmap.hh	/^    static int32_t version_counter;$/;"	m	class:ElementMap
version_major	elements/linuxmodule/touserdevice.cc	/^    uint16_t version_major;  \/* major version number *\/$/;"	m	struct:pcap_hdr	file:
version_major	elements/local/OpenFlow/lib/pcap.cc	/^    uint16_t version_major;  \/* major version number *\/$/;"	m	struct:pcap_hdr	file:
version_major	elements/userlevel/fakepcap.hh	/^	uint16_t version_major;$/;"	m	struct:fake_pcap_file_header
version_minor	elements/linuxmodule/touserdevice.cc	/^    uint16_t version_minor;  \/* minor version number *\/$/;"	m	struct:pcap_hdr	file:
version_minor	elements/local/OpenFlow/lib/pcap.cc	/^    uint16_t version_minor;  \/* minor version number *\/$/;"	m	struct:pcap_hdr	file:
version_minor	elements/userlevel/fakepcap.hh	/^	uint16_t version_minor;$/;"	m	struct:fake_pcap_file_header
vertical	apps/clicky/src/dwidget.hh	/^    bool vertical() const {$/;"	f	class:clicky::delt
veth_dst	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t veth_dst[ETH_ADDR_LEN];$/;"	m	struct:vlan_eth_header
veth_next_type	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t veth_next_type;$/;"	m	struct:vlan_eth_header
veth_src	elements/local/OpenFlow/lib/packets.hh	/^    uint8_t veth_src[ETH_ADDR_LEN];$/;"	m	struct:vlan_eth_header
veth_tci	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t veth_tci;          \/* Lowest 12 bits are VLAN ID. *\/$/;"	m	struct:vlan_eth_header
veth_type	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t veth_type;         \/* Always htons(ETH_TYPE_VLAN). *\/$/;"	m	struct:vlan_eth_header
vformat	apps/clicky/src/gathererror.cc	/^GatherErrorHandler::vformat(const char *fmt, va_list val)$/;"	f	class:GatherErrorHandler
vformat	lib/error.cc	/^ErrorHandler::vformat(const char *fmt, va_list val)$/;"	f	class:ErrorHandler
vformat	lib/error.cc	/^ErrorVeneer::vformat(const char *fmt, va_list val)$/;"	f	class:ErrorVeneer
vformat	lib/error.cc	/^FileErrorHandler::vformat(const char *fmt, va_list val)$/;"	f	class:FileErrorHandler
vibration_amplitude	elements/local/FlowNet/common/FlowNetGod.hh	/^	double	vibration_amplitude;$/;"	m	struct:paramset_flowtable
vibration_frequency	elements/local/FlowNet/common/FlowNetGod.hh	/^	double	vibration_frequency;$/;"	m	struct:paramset_flowtable
video_started	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.hh	/^	bool video_started;$/;"	m	class:FlowMpeg2AdaptDecap
virt_col	include/clicknet/wifi.h	/^  uint8_t virt_col;$/;"	m	struct:click_wifi_extra
virt_coll_count	elements/wifi/athdesc.h	/^	u_int32_t	virt_coll_count:4;$/;"	m	struct:ar5212_desc
virt_to_page	drivers/e1000-4.x/src/kcompat.h	426;"	d
virt_to_page	drivers/e1000-5.x/src/kcompat.h	509;"	d
virt_to_page	drivers/e1000-7.x/src/kcompat.h	688;"	d
virtual	include/click/cxxprotect.h	6;"	d
virtual	include/click/cxxunprotect.h	6;"	d
visible	apps/clicky/src/dwidget.hh	/^    bool visible() const {$/;"	f	class:clicky::delt
visible	apps/clicky/src/dwidget.hh	/^inline bool dconn::visible() const {$/;"	f	class:clicky::dconn
visible	apps/clicky/src/hvalues.hh	/^    bool visible() const {$/;"	f	class:clicky::handler_value
visible	apps/clicky/src/wdiagram.hh	/^    bool visible() const {$/;"	f	class:clicky::wdiagram
visible	include/click/handler.hh	/^    inline bool visible() const {$/;"	f	class:Handler
visit	lib/notifier.cc	/^NotifierRouterVisitor::visit(Element* e, bool isoutput, int port,$/;"	f	class:__anon519::NotifierRouterVisitor
visit	lib/router.cc	/^    bool visit(Element *e, bool isoutput, int port,$/;"	f	class:__anon512::ElementFilterRouterVisitor
visit	lib/routervisitor.cc	/^ElementCastTracker::visit(Element *e, bool, int, Element *, int, int)$/;"	f	class:ElementCastTracker
visit	lib/routervisitor.cc	/^ElementNeighborhoodTracker::visit(Element *e, bool, int,$/;"	f	class:ElementNeighborhoodTracker
visit	lib/routervisitor.cc	/^RouterVisitor::visit(Element *, bool, int, Element *, int, int)$/;"	f	class:RouterVisitor
visit_base	lib/router.cc	/^Router::visit_base(bool forward, Element *first_element, int first_port,$/;"	f	class:Router
visit_downstream	include/click/router.hh	/^Router::visit_downstream(Element *e, int port, RouterVisitor *visitor) const$/;"	f	class:Router
visit_upstream	include/click/router.hh	/^Router::visit_upstream(Element *e, int port, RouterVisitor *visitor) const$/;"	f	class:Router
vlan	drivers/e1000-7.x/src/e1000_hw.h	/^            uint16_t vlan;             \/* VLAN tag *\/$/;"	m	struct:e1000_rx_desc_extended::__anon94::__anon98
vlan	drivers/e1000-7.x/src/e1000_hw.h	/^            uint16_t vlan;             \/* VLAN tag *\/$/;"	m	struct:e1000_rx_desc_packet_split::__anon100::__anon104
vlan_eth_header	elements/local/OpenFlow/lib/packets.hh	/^struct vlan_eth_header {$/;"	s
vlan_filtering_mode	drivers/e1000-4.x/src/ans.h	/^    u32 vlan_filtering_mode; \/* VLan filtering on\/off   *\/$/;"	m	struct:_iANSsupport_t
vlan_filtering_support	drivers/e1000-4.x/src/ans.h	/^    BD_ANS_BOOLEAN vlan_filtering_support; \/* base driver supports Vlan filtering*\/    $/;"	m	struct:_iANSsupport_t
vlan_header	elements/local/OpenFlow/lib/packets.hh	/^struct vlan_header {$/;"	s
vlan_id	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t vlan_id;$/;"	m	struct:e1000_host_mng_dhcp_cookie
vlan_mode	drivers/e1000-4.x/src/ans.h	/^    u32 vlan_mode;           \/* VLan mode switch         *\/$/;"	m	struct:_iANSsupport_t
vlan_next_type	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t vlan_next_type;$/;"	m	struct:vlan_header
vlan_offload_support	drivers/e1000-4.x/src/ans.h	/^    BD_ANS_BOOLEAN vlan_offload_support;         $/;"	m	struct:_iANSsupport_t
vlan_pcp	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint8_t vlan_pcp;               \/* VLAN priority. *\/$/;"	m	struct:ofp_action_vlan_pcp
vlan_pull_tag	elements/local/OpenFlow/lib/dp_act.cc	/^vlan_pull_tag(struct ofpbuf *buffer)$/;"	f	file:
vlan_support	drivers/e1000-4.x/src/ans.h	/^    BD_ANS_BOOLEAN vlan_support;     \/* base driver supports VLan *\/$/;"	m	struct:_iANSsupport_t
vlan_table_size	drivers/e1000-4.x/src/ans.h	/^    u32 vlan_table_size;          \/* size of VlanID filtering table *\/$/;"	m	struct:_iANSsupport_t
vlan_tci	elements/local/OpenFlow/lib/packets.hh	/^    uint16_t vlan_tci;          \/* Lowest 12 bits are VLAN ID. *\/$/;"	m	struct:vlan_header
vlan_vid	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint16_t vlan_vid;              \/* VLAN id. *\/$/;"	m	struct:ofp_action_vlan_vid
vlerror	tools/lib/lexert.cc	/^LexerT::vlerror(const char *pos1, const char *pos2, const String &lm, const char *fmt, va_list val)$/;"	f	class:LexerT
vlgrp	drivers/e1000-4.x/src/e1000.h	/^	struct vlan_group *vlgrp;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::vlan_group
vlgrp	drivers/e1000-5.x/src/e1000.h	/^	struct vlan_group *vlgrp;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::vlan_group
vlgrp	drivers/e1000-7.x/src/e1000.h	/^	struct vlan_group *vlgrp;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::vlan_group
vlog	elements/local/OpenFlow/lib/vlog.cc	/^vlog(enum vlog_module module, enum vlog_level level, const char *message, ...)$/;"	f
vlog_client	elements/local/OpenFlow/lib/vlog-socket.cc	/^struct vlog_client {$/;"	s	file:
vlog_client_close	elements/local/OpenFlow/lib/vlog-socket.cc	/^vlog_client_close(struct vlog_client *client)$/;"	f
vlog_client_connect	elements/local/OpenFlow/lib/vlog-socket.cc	/^vlog_client_connect(const char *path, struct vlog_client **clientp)$/;"	f
vlog_client_recv	elements/local/OpenFlow/lib/vlog-socket.cc	/^vlog_client_recv(struct vlog_client *client, char **reply)$/;"	f
vlog_client_send	elements/local/OpenFlow/lib/vlog-socket.cc	/^vlog_client_send(struct vlog_client *client, const char *request)$/;"	f
vlog_client_target	elements/local/OpenFlow/lib/vlog-socket.cc	/^vlog_client_target(const struct vlog_client *client)$/;"	f
vlog_client_transact	elements/local/OpenFlow/lib/vlog-socket.cc	/^vlog_client_transact(struct vlog_client *client,$/;"	f
vlog_exit	elements/local/OpenFlow/lib/vlog.cc	/^vlog_exit(void) $/;"	f
vlog_facility	elements/local/OpenFlow/lib/vlog.hh	/^enum vlog_facility {$/;"	g
vlog_get_facility_name	elements/local/OpenFlow/lib/vlog.cc	/^vlog_get_facility_name(enum vlog_facility facility) $/;"	f
vlog_get_facility_val	elements/local/OpenFlow/lib/vlog.cc	/^vlog_get_facility_val(const char *name) $/;"	f
vlog_get_level	elements/local/OpenFlow/lib/vlog.cc	/^vlog_get_level(enum vlog_module module, enum vlog_facility facility) $/;"	f
vlog_get_level_name	elements/local/OpenFlow/lib/vlog.cc	/^vlog_get_level_name(enum vlog_level level)$/;"	f
vlog_get_level_val	elements/local/OpenFlow/lib/vlog.cc	/^vlog_get_level_val(const char *name) $/;"	f
vlog_get_levels	elements/local/OpenFlow/lib/vlog.cc	/^vlog_get_levels(void)$/;"	f
vlog_get_log_file	elements/local/OpenFlow/lib/vlog.cc	/^vlog_get_log_file(void)$/;"	f
vlog_get_module_name	elements/local/OpenFlow/lib/vlog.cc	/^const char *vlog_get_module_name(enum vlog_module module) $/;"	f
vlog_get_module_val	elements/local/OpenFlow/lib/vlog.cc	/^vlog_get_module_val(const char *name) $/;"	f
vlog_init	elements/local/OpenFlow/lib/vlog.cc	/^vlog_init(void) $/;"	f
vlog_is_enabled	elements/local/OpenFlow/lib/vlog.cc	/^vlog_is_enabled(enum vlog_module module, enum vlog_level level)$/;"	f
vlog_level	elements/local/OpenFlow/lib/vlog.hh	/^enum vlog_level {$/;"	g
vlog_module	elements/local/OpenFlow/lib/vlog.hh	/^enum vlog_module {$/;"	g
vlog_rate_limit	elements/local/OpenFlow/lib/vlog.cc	/^vlog_rate_limit(enum vlog_module module, enum vlog_level level,$/;"	f
vlog_rate_limit	elements/local/OpenFlow/lib/vlog.hh	/^struct vlog_rate_limit {$/;"	s
vlog_reopen_log_file	elements/local/OpenFlow/lib/vlog.cc	/^vlog_reopen_log_file(void)$/;"	f
vlog_server	elements/local/OpenFlow/lib/vlog-socket.cc	/^struct vlog_server {$/;"	s	file:
vlog_server_close	elements/local/OpenFlow/lib/vlog-socket.cc	/^vlog_server_close(struct vlog_server *server)$/;"	f
vlog_server_listen	elements/local/OpenFlow/lib/vlog-socket.cc	/^vlog_server_listen(const char *path, struct vlog_server **serverp)$/;"	f
vlog_set_levels	elements/local/OpenFlow/lib/vlog.cc	/^vlog_set_levels(enum vlog_module module, enum vlog_facility facility,$/;"	f
vlog_set_levels_from_string	elements/local/OpenFlow/lib/vlog.cc	/^vlog_set_levels_from_string(const char *s_)$/;"	f
vlog_set_log_file	elements/local/OpenFlow/lib/vlog.cc	/^vlog_set_log_file(const char *file_name)$/;"	f
vlog_set_pattern	elements/local/OpenFlow/lib/vlog.cc	/^vlog_set_pattern(enum vlog_facility facility, const char *pattern)$/;"	f
vlog_set_verbosity	elements/local/OpenFlow/lib/vlog.cc	/^vlog_set_verbosity(const char *arg)$/;"	f
vlog_usage	elements/local/OpenFlow/lib/vlog.cc	/^vlog_usage(void) $/;"	f
vlog_valist	elements/local/OpenFlow/lib/vlog.cc	/^vlog_valist(enum vlog_module module, enum vlog_level level,$/;"	f
vm	include/click/notifier.hh	/^	vmpair *vm;$/;"	m	union:NotifierSignal::__anon431
vmpair	include/click/notifier.hh	/^    struct vmpair {$/;"	s	class:NotifierSignal
vnumeric	apps/clicky/src/dstyle.hh	/^    double vnumeric() const {$/;"	f	struct:clicky::dcss_property
vnumeric	apps/clicky/src/dstyle.hh	/^    double vnumeric(const char *n) const {$/;"	f	struct:clicky::dcss_propmatch
vpixel	apps/clicky/src/dstyle.cc	/^double dcss_property::vpixel(crouter *cr, PermString relative_to,$/;"	f	class:clicky::dcss_property
vpixel	apps/clicky/src/dstyle.cc	/^double dcss_set::vpixel(PermString name, crouter *cr, const delt *e) const$/;"	f	class:clicky::dcss_set
vpixel	apps/clicky/src/dstyle.hh	/^    double vpixel() const {$/;"	f	struct:clicky::dcss_property
vpixel	apps/clicky/src/dstyle.hh	/^    double vpixel(const char *n) const {$/;"	f	struct:clicky::dcss_propmatch
vpixel	apps/clicky/src/dstyle.hh	/^    double vpixel(const char *n, crouter *cr, PermString relative_name,$/;"	f	struct:clicky::dcss_propmatch
vpixel	apps/clicky/src/dstyle.hh	/^    double vpixel(const char *n, double relative_to) const {$/;"	f	struct:clicky::dcss_propmatch
vpixel	apps/clicky/src/dstyle.hh	/^    double vpixel(double relative_to) const {$/;"	f	struct:clicky::dcss_property
vpixel	apps/clicky/src/dwidget.hh	/^inline double dcss_propmatch::vpixel(const char *n, crouter *cr,$/;"	f	class:clicky::dcss_propmatch
vport	elements/ip/directiplookup.hh	/^	int16_t vport;$/;"	m	struct:DirectIPLookup::CleartextEntry
vport_capacity_limit	elements/ip/directiplookup.hh	/^	vport_capacity_limit = 32768,$/;"	e	enum:DirectIPLookup::__anon356
vport_find	elements/ip/directiplookup.cc	/^DirectIPLookup::Table::vport_find(IPAddress gw, int16_t port)$/;"	f	class:DirectIPLookup::Table
vport_unref	elements/ip/directiplookup.cc	/^DirectIPLookup::Table::vport_unref(uint16_t vport_i)$/;"	f	class:DirectIPLookup::Table
vptr	elements/analysis/ipsumdumpinfo.hh	/^	const uint8_t *vptr[2];$/;"	m	union:IPSummaryDump::PacketDesc::__anon259
vptr	elements/analysis/ipsumdumpinfo.hh	/^	const uint8_t *vptr[2];$/;"	m	union:IPSummaryDump::PacketOdesc::__anon260
vrelative	apps/clicky/src/dstyle.hh	/^    double vrelative() const {$/;"	f	struct:clicky::dcss_property
vrelative	apps/clicky/src/dstyle.hh	/^    double vrelative(const char *n) const {$/;"	f	struct:clicky::dcss_propmatch
vseconds	apps/clicky/src/dstyle.hh	/^    double vseconds() const {$/;"	f	struct:clicky::dcss_property
vseconds	apps/clicky/src/dstyle.hh	/^    double vseconds(const char *n) const {$/;"	f	struct:clicky::dcss_propmatch
vshadow_style	apps/clicky/src/dstyle.hh	/^    int vshadow_style() const {$/;"	f	struct:clicky::dcss_property
vshadow_style	apps/clicky/src/dstyle.hh	/^    int vshadow_style(const char *n) const {$/;"	f	struct:clicky::dcss_propmatch
vstr	include/click/clp.h	/^    const char *vstr;		\/**< The string value provided with the last$/;"	m	struct:Clp_Parser
vstring	apps/clicky/src/dstyle.cc	/^String dcss_set::vstring(PermString name, PermString decor, crouter *cr, const delt *e) const$/;"	f	class:clicky::dcss_set
vstring	apps/clicky/src/dstyle.hh	/^    const String &vstring() const {$/;"	f	struct:clicky::dcss_property
vstring	apps/clicky/src/dstyle.hh	/^    const String &vstring(const char *n) const {$/;"	f	struct:clicky::dcss_propmatch
vxformat	include/click/error.hh	/^    static String vxformat(const char *fmt, va_list val) {$/;"	f	class:ErrorHandler
vxformat	lib/error.cc	/^ErrorHandler::vxformat(int default_flags, const char *s, va_list val)$/;"	f	class:ErrorHandler
w	elements/grid/region.hh	/^  double w() { return _w; };$/;"	f	class:RectRegion
w	include/click/handler.hh	/^	WriteHandlerCallback w;$/;"	m	union:Handler::__anon470
w_offset	bsdmodule/clickfs_tree.hh	/^	    off_t w_offset;$/;"	m	struct:clickfs_dirent::__anon34::handle_struct
wait	elements/local/OpenFlow/lib/vconn-provider.hh	/^    void (*wait)(struct pvconn *pvconn);$/;"	m	struct:pvconn_class
wait	elements/local/OpenFlow/lib/vconn-provider.hh	/^    void (*wait)(struct vconn *vconn, enum vconn_wait_type type);$/;"	m	struct:vconn_class
wait_autoneg_complete	drivers/e1000-4.x/src/e1000_hw.h	/^    uint8_t wait_autoneg_complete;$/;"	m	struct:e1000_hw
wait_autoneg_complete	drivers/e1000-5.x/src/e1000_hw.h	/^    uint8_t wait_autoneg_complete;$/;"	m	struct:e1000_hw
wait_autoneg_complete	drivers/e1000-7.x/src/e1000_hw.h	/^    uint8_t wait_autoneg_complete;$/;"	m	struct:e1000_hw
waiter	elements/local/OpenFlow/lib/vlog-socket.cc	/^    struct poll_waiter *waiter;$/;"	m	struct:vlog_server	typeref:struct:vlog_server::poll_waiter	file:
waiters	elements/local/OpenFlow/lib/poll-loop.cc	/^static struct list waiters = LIST_INITIALIZER(&waiters);$/;"	v	typeref:struct:list	file:
wake	include/click/notifier.hh	/^ActiveNotifier::wake()$/;"	f	class:ActiveNotifier
wake	include/click/notifier.hh	/^Notifier::wake()$/;"	f	class:Notifier
wake	include/click/routerthread.hh	/^RouterThread::wake()$/;"	f	class:RouterThread
wake_immediate	include/click/selectset.hh	/^    inline void wake_immediate() {$/;"	f	class:SelectSet
wake_sleep	elements/local/FlowNet/scheduler/PFSchedFW.cc	/^void PFSchedFW::wake_sleep()$/;"	f	class:PFSchedFW
wake_somebody	include/click/master.hh	/^Master::wake_somebody()$/;"	f	class:Master
want_flow	tools/click-align/alignclass.cc	/^ARPQuerierAligner::want_flow(Vector<Alignment>::iterator ain, int nin, Vector<Alignment>::const_iterator aout, int nout, const String &)$/;"	f	class:ARPQuerierAligner
want_flow	tools/click-align/alignclass.cc	/^Aligner::want_flow(Vector<Alignment>::iterator ain, int nin, Vector<Alignment>::const_iterator aout, int nout, const String &flow_code)$/;"	f	class:Aligner
want_flow	tools/click-align/alignclass.cc	/^CombinedAligner::want_flow(Vector<Alignment>::iterator ain, int nin, Vector<Alignment>::const_iterator aout, int nout, const String &flow_code)$/;"	f	class:CombinedAligner
want_flow	tools/click-align/alignclass.cc	/^GeneratorAligner::want_flow(Vector<Alignment>::iterator ain, int nin, Vector<Alignment>::const_iterator, int, const String &)$/;"	f	class:GeneratorAligner
want_flow	tools/click-align/alignclass.cc	/^NullAligner::want_flow(Vector<Alignment>::iterator, int, Vector<Alignment>::const_iterator, int, const String &)$/;"	f	class:NullAligner
want_flow	tools/click-align/alignclass.cc	/^ShifterAligner::want_flow(Vector<Alignment>::iterator ain, int nin, Vector<Alignment>::const_iterator aout, int nout, const String &)$/;"	f	class:ShifterAligner
want_flow	tools/click-align/alignclass.cc	/^WantAligner::want_flow(Vector<Alignment>::iterator ain, int nin, Vector<Alignment>::const_iterator, int, const String &)$/;"	f	class:WantAligner
want_input	tools/click-align/click-align.cc	/^RouterAlign::want_input()$/;"	f	class:RouterAlign
want_len	elements/analysis/ipsumdumpinfo.hh	/^    uint32_t want_len;$/;"	m	struct:IPSummaryDump::PacketOdesc
want_output	tools/click-align/click-align.cc	/^RouterAlign::want_output()$/;"	f	class:RouterAlign
want_to_poll_events	elements/local/OpenFlow/lib/vconn-ssl.cc	/^want_to_poll_events(int want)$/;"	f	file:
wap	elements/wifi/station/beaconscanner.hh	/^  class wap {$/;"	c	class:BeaconScanner
warn_unused_outputs	elements/standard/classification.cc	/^CompressedProgram::warn_unused_outputs(int noutputs, ErrorHandler *errh) const$/;"	f	class:Classification::Wordwise::CompressedProgram
warn_unused_outputs	elements/standard/classification.cc	/^Program::warn_unused_outputs(int noutputs, ErrorHandler *errh) const$/;"	f	class:Classification::Wordwise::Program
warning	lib/args.cc	/^ArgContext::warning(const char *fmt, ...) const$/;"	f	class:ArgContext
warning	lib/error.cc	/^ErrorHandler::warning(const char *fmt, ...)$/;"	f	class:ErrorHandler
warning	lib/fromfile.cc	/^FromFile::warning(ErrorHandler *errh, const char *format, ...) const$/;"	f	class:FromFile
warnings	userlevel/click.cc	/^static bool warnings = true;$/;"	v	file:
warp	lib/timestamp.cc	/^Timestamp::warp(bool from_now)$/;"	f	class:Timestamp
warp_adjust	lib/timestamp.cc	/^Timestamp::warp_adjust(const Timestamp &t_raw, const Timestamp &t_warped)$/;"	f	class:Timestamp
warp_class	include/click/timestamp.hh	/^    static inline int warp_class() {$/;"	f	class:Timestamp
warp_class_type	include/click/timestamp.hh	/^    enum warp_class_type {$/;"	g	class:Timestamp
warp_jump	lib/timestamp.cc	/^Timestamp::warp_jump(const Timestamp &expiry)$/;"	f	class:Timestamp
warp_jumping	include/click/timestamp.hh	/^    static inline bool warp_jumping() {$/;"	f	class:Timestamp
warp_linear	include/click/timestamp.hh	/^	warp_linear = 1,	\/\/\/< Run in speeded-up or slowed-down real time.$/;"	e	enum:Timestamp::warp_class_type
warp_none	include/click/timestamp.hh	/^	warp_none = 0,		\/\/\/< Run in real time (the default).$/;"	e	enum:Timestamp::warp_class_type
warp_nowait	include/click/timestamp.hh	/^	warp_nowait = 2,	\/\/\/< Run in speeded-up or slowed-down real time,$/;"	e	enum:Timestamp::warp_class_type
warp_real_delay	include/click/timestamp.hh	/^Timestamp::warp_real_delay() const$/;"	f	class:Timestamp
warp_set_class	lib/timestamp.cc	/^Timestamp::warp_set_class(warp_class_type w)$/;"	f	class:Timestamp
warp_set_now	lib/timestamp.cc	/^Timestamp::warp_set_now(const Timestamp &t)$/;"	f	class:Timestamp
warp_set_speed	lib/timestamp.cc	/^Timestamp::warp_set_speed(double f)$/;"	f	class:Timestamp
warp_simulation	include/click/timestamp.hh	/^	warp_simulation = 3	\/\/\/< Run in simulation time.$/;"	e	enum:Timestamp::warp_class_type
warp_speed	include/click/timestamp.hh	/^    static inline double warp_speed() {$/;"	f	class:Timestamp
warped	include/click/timestamp.hh	/^    inline Timestamp warped() const {$/;"	f	class:Timestamp
was_anonymous	tools/lib/elementt.hh	/^    bool was_anonymous() const		{ return _was_anonymous; }$/;"	f	struct:ElementT
watchdog_timer	drivers/e1000-4.x/src/e1000.h	/^	struct timer_list watchdog_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
watchdog_timer	drivers/e1000-5.x/src/e1000.h	/^	struct timer_list watchdog_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
watchdog_timer	drivers/e1000-7.x/src/e1000.h	/^	struct timer_list watchdog_timer;$/;"	m	struct:e1000_adapter	typeref:struct:e1000_adapter::timer_list
wb	drivers/e1000-7.x/src/e1000_hw.h	/^    } wb;  \/* writeback *\/$/;"	m	union:e1000_rx_desc_extended	typeref:struct:e1000_rx_desc_extended::__anon94
wb	drivers/e1000-7.x/src/e1000_hw.h	/^    } wb; \/* writeback *\/$/;"	m	union:e1000_rx_desc_packet_split	typeref:struct:e1000_rx_desc_packet_split::__anon100
wbuf	bsdmodule/clickfs_tree.hh	/^	    CLICK_NAME(String) *wbuf;$/;"	m	struct:clickfs_dirent::__anon34::handle_struct
wcontainer	apps/clicky/src/whandler.hh	/^	GtkWidget *wcontainer;$/;"	m	struct:clicky::whandler::hinfo
wdata	apps/clicky/src/whandler.hh	/^	GtkWidget *wdata;$/;"	m	struct:clicky::whandler::hinfo
wdiagram	apps/clicky/src/wdiagram.cc	/^wdiagram::wdiagram(wmain *rw)$/;"	f	class:clicky::wdiagram
wdiagram	apps/clicky/src/wdiagram.hh	/^class wdiagram { public:$/;"	c	namespace:clicky
welcome_message	elements/local/FlowNet/common/FlowNetGod.cc	/^void FlowNetGod::welcome_message()$/;"	f	class:FlowNetGod
whandler	apps/clicky/src/whandler.cc	/^whandler::whandler(wmain *rw)$/;"	f	class:clicky::whandler
whandler	apps/clicky/src/whandler.hh	/^struct whandler {$/;"	s	namespace:clicky
when	elements/grid/linkstat.hh	/^    Timestamp when;$/;"	m	struct:LinkStat::probe_t
where	lib/glue.cc	/^    uint32_t where;$/;"	m	struct:Chunk	file:
white_color	apps/clicky/src/dstyle.cc	/^const double white_color[4] = { 1, 1, 1, 1 };$/;"	m	namespace:clicky	file:
whole_negated	lib/clp.c	/^    unsigned char whole_negated; \/* true if negated by an option character *\/$/;"	m	struct:Clp_Internal	file:
whole_negated	lib/clp.c	/^    unsigned char whole_negated;$/;"	m	struct:Clp_ParserState	file:
widget_hname	apps/clicky/src/whandler.cc	/^const char *whandler::widget_hname(GtkWidget *w)$/;"	f	class:clicky::whandler
width	apps/clicky/src/dstyle.hh	/^    double width;$/;"	m	struct:clicky::dport_style
width	apps/clicky/src/rectangle.hh	/^    double width() const {$/;"	f	struct:rectangle
width	elements/grid/gridheaderinfo.hh	/^    int width; \/\/ number of digits; -1 means no width specifier$/;"	m	struct:GridHeaderInfo::info_t
width	elements/standard/classification.hh	/^	width = 4$/;"	e	enum:Classification::Wordwise::Insn::__anon182
wifi_information	include/clicknet/wifi.h	/^struct wifi_information {$/;"	s
wifi_mgt_auth_t	include/clicknet/wifi.h	/^typedef uint8_t *	wifi_mgt_auth_t;$/;"	t
wifi_mgt_beacon_t	include/clicknet/wifi.h	/^typedef uint8_t *	wifi_mgt_beacon_t;$/;"	t
wildcards	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t wildcards;        \/* Wildcard fields. *\/$/;"	m	struct:ofp_match
wildcards	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t wildcards;      \/* Bitmap of OFPFW_* wildcards that are$/;"	m	struct:ofp_table_stats
wildcards	elements/local/OpenFlow/lib/switch-flow.hh	/^    uint32_t wildcards;         \/* Wildcard fields (in host byte order). *\/$/;"	m	struct:sw_flow_key
wildcards	elements/local/OpenFlow/lib/table.hh	/^    uint32_t wildcards;          \/* Bitmap of OFPFW_* wildcards that are$/;"	m	struct:sw_table_stats
window	apps/clicky/src/wmain.hh	/^    GtkWindow *window() const {$/;"	f	class:clicky::wmain
windowClosing	apps/ClickController/ClickController.java	/^	public void windowClosing(WindowEvent e) {$/;"	m	class:ClickController.CloseWindowAdapter
window_to_canvas	apps/clicky/src/wdiagram.hh	/^inline point wdiagram::window_to_canvas(double x, double y) const$/;"	f	class:clicky::wdiagram
window_x2	include/clicknet/llc.h	/^		uint8_t window_x2;$/;"	m	struct:click_llc::__anon481::__anon482
wlabel	apps/clicky/src/whandler.hh	/^	GtkWidget *wlabel;$/;"	m	struct:clicky::whandler::hinfo
wlan_ng_prism2_header	include/clicknet/wifi.h	/^} wlan_ng_prism2_header;$/;"	t	typeref:struct:__anon498
wlen	elements/analysis/fromdagdump.hh	/^	uint16_t wlen;$/;"	m	struct:FromDAGDump::DAGCell
wmain	apps/clicky/src/wmain.cc	/^wmain::wmain(bool show_toolbar, bool show_list, dcss_set *ccss,$/;"	f	class:clicky::wmain
wmain	apps/clicky/src/wmain.hh	/^class wmain : public crouter { public:$/;"	c	namespace:clicky
wol	drivers/e1000-4.x/src/e1000.h	/^	uint32_t wol;$/;"	m	struct:e1000_adapter
wol	drivers/e1000-5.x/src/e1000.h	/^	uint32_t wol;$/;"	m	struct:e1000_adapter
wol	drivers/e1000-7.x/src/e1000.h	/^	uint32_t wol;$/;"	m	struct:e1000_adapter
word_size	drivers/e1000-5.x/src/e1000_hw.h	/^    uint16_t word_size;$/;"	m	struct:e1000_eeprom_info
word_size	drivers/e1000-7.x/src/e1000_hw.h	/^    uint16_t word_size;$/;"	m	struct:e1000_eeprom_info
work_done	include/click/task.hh	/^Task::work_done() const$/;"	f	class:Task
work_struct	drivers/e1000-5.x/src/kcompat.h	582;"	d
work_struct	drivers/e1000-7.x/src/kcompat.h	841;"	d
wpos	apps/clicky/src/cdriver.hh	/^	int wpos;$/;"	m	struct:clicky::csocket_cdriver::msg
wposition	apps/clicky/src/whandler.hh	/^	int wposition;$/;"	m	struct:clicky::whandler::hinfo
writable	apps/clicky/src/hvalues.hh	/^    bool writable() const {$/;"	f	class:clicky::handler_value
writable	apps/clicky/src/whandler.hh	/^	bool writable() const {$/;"	f	struct:clicky::whandler::hinfo
writable	include/click/handler.hh	/^    inline bool writable() const {$/;"	f	class:Handler
writable	include/click/handlercall.hh	/^	writable = Handler::h_write,$/;"	e	enum:HandlerCall::Flags
write	apps/ClickController/ControlSocket.java	/^    public void write(HandlerInfo info, String data) $/;"	m	class:ControlSocket
write	apps/ClickController/ControlSocket.java	/^    public void write(HandlerInfo info, char[] data) $/;"	m	class:ControlSocket
write	apps/ClickController/ControlSocket.java	/^    public void write(String elementName, String handlerName, String data) $/;"	m	class:ControlSocket
write	apps/ClickController/ControlSocket.java	/^    public void write(String elementName, String handlerName, char[] data) $/;"	m	class:ControlSocket
write	apps/csclient/csclient.cc	/^ControlSocketClient::write(string el, string handler, const char *buf, int bufsz)$/;"	f	class:ControlSocketClient
write	apps/csclient/csclient.cc	/^ControlSocketClient::write(string el, string handler, string data)$/;"	f	class:ControlSocketClient
write	apps/csclient/csclient.hh	/^  err_t write(handler_info_t h, const char *buf, int bufsz) { return write(h.element_name, h.handler_name, buf, bufsz); }$/;"	f	class:ControlSocketClient
write	apps/csclient/csclient.hh	/^  err_t write(handler_info_t h, string data)          { return write(h.element_name, h.handler_name, data); }$/;"	f	class:ControlSocketClient
write	elements/grid/linkstat.cc	/^LinkStat::link_entry::write(unsigned char *d) const$/;"	f	class:LinkStat::link_entry
write	elements/grid/linkstat.cc	/^LinkStat::link_probe::write(unsigned char *d) const$/;"	f	class:LinkStat::link_probe
write	include/click/selectset.hh	/^	Element *write;$/;"	m	struct:SelectSet::SelectorInfo
write	linuxmodule/modulepriv.hh	/^    int write;$/;"	m	struct:click_fsmode_t
write_active	elements/standard/suppressor.cc	/^write_active(const String &s, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	file:
write_assert_stop	bsdmodule/module.cc	/^write_assert_stop(const String &s, Element *, void *, ErrorHandler *errh)$/;"	f	file:
write_assert_stop	linuxmodule/module.cc	/^write_assert_stop(const String &s, Element *, void *, ErrorHandler *errh)$/;"	f	file:
write_batch	elements/analysis/aggcounter.cc	/^write_batch(FILE *f, AggregateCounter::WriteFormat format,$/;"	f	file:
write_branch	tools/click-fastclassifier/click-fastclassifier.cc	/^Classifier_Insn::write_branch(int branch, const String &label_prefix,$/;"	f	class:Classifier_Insn
write_buf	elements/grid/gridlogger.hh	/^  void write_buf() {$/;"	f	class:GridLogger
write_command	elements/userlevel/controlsocket.cc	/^ControlSocket::write_command(connection &conn, const String &handlername, String data)$/;"	f	class:ControlSocket
write_config	bsdmodule/config.cc	/^write_config(const String &s, Element *, void *thunk, ErrorHandler *)$/;"	f	file:
write_config	linuxmodule/config.cc	/^write_config(const String &s, Element *, void *thunk, ErrorHandler *)$/;"	f	file:
write_config_handler	lib/element.cc	/^write_config_handler(const String &str, Element *e, void *,$/;"	f	file:
write_cpu_share	bsdmodule/sched.cc	/^write_cpu_share(const String &conf, Element *, void *thunk, ErrorHandler *errh)$/;"	f	file:
write_cpu_share	linuxmodule/sched.cc	/^write_cpu_share(const String &conf, Element *, void *thunk, ErrorHandler *errh)$/;"	f	file:
write_cycles_handler	lib/element.cc	/^Element::write_cycles_handler(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:Element
write_elementlist	doc/click-elem2man	/^sub write_elementlist ($$) {$/;"	s
write_est_type	elements/grid/gridroutetable.cc	/^GridRouteTable::write_est_type(const String &arg, Element *el,$/;"	f	class:GridRouteTable
write_file	elements/analysis/aggcounter.cc	/^AggregateCounter::write_file(String where, WriteFormat format,$/;"	f	class:AggregateCounter
write_file_handler	elements/analysis/aggcounter.cc	/^AggregateCounter::write_file_handler(const String &data, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:AggregateCounter
write_frozen	elements/grid/gridroutetable.cc	/^GridRouteTable::write_frozen(const String &arg, Element *el,$/;"	f	class:GridRouteTable
write_handler	elements/analysis/aggcounter.cc	/^AggregateCounter::write_handler(const String &data, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:AggregateCounter
write_handler	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::write_handler(const String &, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:AggregatePacketCounter
write_handler	elements/analysis/aggregateipaddrpair.cc	/^AggregateIPAddrPair::write_handler(const String &, Element *e, void *thunk, ErrorHandler *)$/;"	f	class:AggregateIPAddrPair
write_handler	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::write_handler(const String &, Element *e, void *thunk, ErrorHandler *)$/;"	f	class:AggregateIPFlows
write_handler	elements/analysis/aggregatelast.cc	/^AggregateLast::write_handler(const String &, Element *e, void *thunk, ErrorHandler *)$/;"	f	class:AggregateLast
write_handler	elements/analysis/fromcapdump.cc	/^FromCapDump::write_handler(const String &s_in, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:FromCapDump
write_handler	elements/analysis/fromdagdump.cc	/^FromDAGDump::write_handler(const String &s_in, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:FromDAGDump
write_handler	elements/analysis/fromflandump.cc	/^FromFlanDump::write_handler(const String &s_in, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:FromFlanDump
write_handler	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::write_handler(const String &s_in, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:FromIPSummaryDump
write_handler	elements/analysis/fromnetflowsumdump.cc	/^FromNetFlowSummaryDump::write_handler(const String &s_in, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:FromNetFlowSummaryDump
write_handler	elements/analysis/fromnlanrdump.cc	/^FromNLANRDump::write_handler(const String &s_in, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:FromNLANRDump
write_handler	elements/analysis/fromtcpdump.cc	/^FromTcpdump::write_handler(const String &s_in, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:FromTcpdump
write_handler	elements/analysis/settimestampdelta.cc	/^SetTimestampDelta::write_handler(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:SetTimestampDelta
write_handler	elements/analysis/timefilter.cc	/^TimeFilter::write_handler(const String &s, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:TimeFilter
write_handler	elements/analysis/timerange.cc	/^TimeRange::write_handler(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:TimeRange
write_handler	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::write_handler(const String &, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:ToIPFlowDumps
write_handler	elements/ethernet/arpquerier.cc	/^ARPQuerier::write_handler(const String &str, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:ARPQuerier
write_handler	elements/ethernet/arptable.cc	/^ARPTable::write_handler(const String &str, Element *e, void *user_data, ErrorHandler *errh)$/;"	f	class:ARPTable
write_handler	elements/icmp/icmpipencap.cc	/^int ICMPIPEncap::write_handler(const String &str, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:ICMPIPEncap
write_handler	elements/icmp/icmppingencap.cc	/^int ICMPPingEncap::write_handler(const String &str, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:ICMPPingEncap
write_handler	elements/icmp/icmpsendpings.cc	/^ICMPPingSource::write_handler(const String &s, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:ICMPPingSource
write_handler	elements/ip/iprewriterbase.cc	/^IPRewriterBase::write_handler(const String &str, Element *e, void *user_data, ErrorHandler *errh)$/;"	f	class:IPRewriterBase
write_handler	elements/linuxmodule/fromdevice.cc	/^int FromDevice::write_handler(const String &str, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:FromDevice
write_handler	elements/linuxmodule/todevice.cc	/^ToDevice::write_handler(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:ToDevice
write_handler	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::write_handler(const String &s_in, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:ToUserDevice
write_handler	elements/standard/counter.cc	/^Counter::write_handler(const String &in_str, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:Counter
write_handler	elements/standard/discard.cc	/^Discard::write_handler(const String &s, Element *e, void *user_data,$/;"	f	class:Discard
write_handler	elements/standard/linkunqueue.cc	/^LinkUnqueue::write_handler(const String &s, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:LinkUnqueue
write_handler	elements/standard/randomsample.cc	/^RandomSample::write_handler(const String &str, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:RandomSample
write_handler	elements/standard/simplequeue.cc	/^SimpleQueue::write_handler(const String &, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:SimpleQueue
write_handler	elements/standard/timedsink.cc	/^TimedSink::write_handler(const String &s, Element *e, void *vparam,$/;"	f	class:TimedSink
write_handler	elements/test/nulltask.cc	/^NullTask::write_handler(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:NullTask
write_handler	elements/test/timertest.cc	/^TimerTest::write_handler(const String &str, Element *e, void *user_data, ErrorHandler *errh)$/;"	f	class:TimerTest
write_handler	elements/userlevel/fromdevice.cc	/^FromDevice::write_handler(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:FromDevice
write_handler	elements/userlevel/fromdump.cc	/^FromDump::write_handler(const String &s_in, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:FromDump
write_handler	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::write_handler(const String &, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:IPFlowRawSockets
write_handler	elements/userlevel/progressbar.cc	/^ProgressBar::write_handler(const String &in_str, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:ProgressBar
write_handler	elements/userlevel/todump.cc	/^ToDump::write_handler(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:ToDump
write_handler	elements/wifi/fromhandler.cc	/^FromHandler::write_handler(const String &s_in, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	class:FromHandler
write_handler	elements/wifi/settxrate.cc	/^SetTXRate::write_handler(const String &arg, Element *e,$/;"	f	class:SetTXRate
write_line	elements/analysis/toipsumdump.cc	/^ToIPSummaryDump::write_line(const String& s)$/;"	f	class:ToIPSummaryDump
write_metric_range	elements/grid/gridroutetable.cc	/^GridRouteTable::write_metric_range(const String &arg, Element *el,$/;"	f	class:GridRouteTable
write_metric_type	elements/grid/gridroutetable.cc	/^GridRouteTable::write_metric_type(const String &arg, Element *el,$/;"	f	class:GridRouteTable
write_nodes	elements/analysis/aggcounter.cc	/^AggregateCounter::write_nodes(Node *n, FILE *f, WriteFormat format,$/;"	f	class:AggregateCounter
write_only	apps/clicky/src/hvalues.hh	/^    bool write_only() const {$/;"	f	class:clicky::handler_value
write_packet	elements/analysis/toipsumdump.cc	/^ToIPSummaryDump::write_packet(Packet* p, int multipacket)$/;"	f	class:ToIPSummaryDump
write_packet	elements/userlevel/socket.cc	/^Socket::write_packet(Packet *p)$/;"	f	class:Socket
write_packet	elements/userlevel/todump.cc	/^ToDump::write_packet(Packet *p)$/;"	f	class:ToDump
write_param	elements/local/FlowNet/shaper/PFShapeFW.cc	/^int PFShapeFW::write_param(const String &s, Element *e, void *, ErrorHandler *errh)$/;"	f	class:PFShapeFW
write_param	elements/simple/simplepullswitch.cc	/^SimplePullSwitch::write_param(const String &s, Element *e, void *, ErrorHandler *errh)$/;"	f	class:SimplePullSwitch
write_param	elements/standard/delayshaper.cc	/^DelayShaper::write_param(const String &s, Element *e, void *, ErrorHandler *errh)$/;"	f	class:DelayShaper
write_param	elements/standard/pokehandlers.cc	/^PokeHandlers::write_param(const String &, Element *e, void *, ErrorHandler *)$/;"	f	class:PokeHandlers
write_param	elements/standard/switch.cc	/^Switch::write_param(const String &s, Element *e, void *, ErrorHandler *errh)$/;"	f	class:Switch
write_param	elements/standard/unqueue.cc	/^Unqueue::write_param(const String &conf, Element *e, void *user_data,$/;"	f	class:Unqueue
write_param	elements/test/upstreamnotifier.cc	/^write_param(const String &s, Element *e, void *vparam,$/;"	f	file:
write_param	elements/userlevel/todevice.cc	/^ToDevice::write_param(const String &in_s, Element *e, void *vparam,$/;"	f	class:ToDevice
write_param	elements/wifi/packetstore.cc	/^write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
write_param	elements/wifi/station/beacontracker.cc	/^write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
write_param	elements/wifi/wepdecap.cc	/^write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
write_param	elements/wifi/wepencap.cc	/^write_param(const String &in_s, Element *e, void *vparam,$/;"	f	file:
write_param	elements/wifi/wifidefrag.cc	/^WifiDefrag::write_param(const String &in_s, Element *e, void *vparam,$/;"	f	class:WifiDefrag
write_param	elements/wifi/wififragment.cc	/^WifiFragment::write_param(const String &in_s, Element *e, void *vparam,$/;"	f	class:WifiFragment
write_param	elements/wifi/wifiseq.cc	/^WifiSeq::write_param(const String &in_s, Element *e, void *vparam,$/;"	f	class:WifiSeq
write_param	elements/wifi/wirelessinfo.cc	/^WirelessInfo::write_param(const String &in_s, Element *e, void *vparam,$/;"	f	class:WirelessInfo
write_paramFlowNetGod	elements/local/FlowNet/common/PF_FW.cc	/^int PFFW::write_paramFlowNetGod(const String &in_s, Element *e, void *, ErrorHandler *errh)$/;"	f	class:PFFW
write_param_FlowNetGod	elements/local/FlowNet/common/FlowNetGod.cc	/^int write_param_FlowNetGod(const String &in_s, Element *e, void *vparam, ErrorHandler *errh)$/;"	f
write_paused	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::write_paused(const String &arg, Element *el,$/;"	f	class:DSDVRouteTable
write_period	elements/grid/linkstat.cc	/^LinkStat::write_period(const String &arg, Element *el,$/;"	f	class:LinkStat
write_priority	bsdmodule/sched.cc	/^write_priority(const String &conf, Element *, void *, ErrorHandler *errh)$/;"	f	file:
write_priority	linuxmodule/sched.cc	/^write_priority(const String &conf, Element *, void *, ErrorHandler *errh)$/;"	f	file:
write_reset	elements/standard/suppressor.cc	/^write_reset(const String &, Element *e, void *, ErrorHandler *)$/;"	f	file:
write_router_file	tools/lib/toolutils.cc	/^write_router_file(RouterT *r, FILE *f, ErrorHandler *errh)$/;"	f
write_router_file	tools/lib/toolutils.cc	/^write_router_file(RouterT *r, const char *name, ErrorHandler *errh)$/;"	f
write_sched_param	bsdmodule/sched.cc	/^write_sched_param(const String &conf, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	file:
write_sched_param	linuxmodule/sched.cc	/^write_sched_param(const String &conf, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	file:
write_seq	elements/grid/incseqno.cc	/^IncrementSeqNo::write_seq(const String &in_s, Element *e, void *,$/;"	f	class:IncrementSeqNo
write_seq_delay	elements/grid/gridroutetable.cc	/^GridRouteTable::write_seq_delay(const String &arg, Element *el,$/;"	f	class:GridRouteTable
write_seqno	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::write_seqno(const String &arg, Element *el,$/;"	f	class:DSDVRouteTable
write_start_log	elements/grid/gridlogger.cc	/^GridLogger::write_start_log(const String &arg, Element *e,$/;"	f	class:GridLogger
write_state	tools/click-fastclassifier/click-fastclassifier.cc	/^Classifier_Insn::write_state(int state, bool check_length, bool take_short,$/;"	f	class:Classifier_Insn
write_stop_log	elements/grid/gridlogger.cc	/^GridLogger::write_stop_log(const String &, Element *e,$/;"	f	class:GridLogger
write_task_home_thread	lib/element.cc	/^write_task_home_thread(const String &str, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	file:
write_task_scheduled	lib/element.cc	/^write_task_scheduled(const String &str, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	file:
write_task_tickets	lib/element.cc	/^write_task_tickets(const String &s, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	file:
write_tau	elements/grid/linkstat.cc	/^LinkStat::write_tau(const String &arg, Element *el,$/;"	f	class:LinkStat
write_tau	elements/grid/linktracker.cc	/^LinkTracker::write_tau(const String &arg, Element *el,$/;"	f	class:LinkTracker
write_tickets_handler	elements/standard/stridesched.cc	/^write_tickets_handler(const String &s, Element *e, void *thunk, ErrorHandler *errh)$/;"	f	file:
write_uint_at	elements/grid/linkstat.hh	/^  static void write_uint_at(unsigned char *c, unsigned u) {$/;"	f	class:LinkStat
write_use_old_route	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::write_use_old_route(const String &arg, Element *el,$/;"	f	class:DSDVRouteTable
write_user_data	include/click/handler.hh	/^    inline void *write_user_data() const {$/;"	f	class:Handler
write_ushort_at	elements/grid/linkstat.hh	/^  static void write_ushort_at(unsigned char *c, unsigned u) {$/;"	f	class:LinkStat
write_value	drivers/e1000-4.x/src/idiag_e1000.h	/^	uint32_t write_value;$/;"	m	struct:idiag_e1000_diag_reg_test_param
write_visible	include/click/handler.hh	/^    inline bool write_visible() const {$/;"	f	class:Handler
write_window	elements/grid/linkstat.cc	/^LinkStat::write_window(const String &arg, Element *el,$/;"	f	class:LinkStat
writer	elements/ethernet/etherpausesource.cc	/^EtherPauseSource::writer(const String &str, Element *e, void *user_data, ErrorHandler *errh)$/;"	f	class:EtherPauseSource
writer	elements/etherswitch/etherswitch.cc	/^EtherSwitch::writer(const String &s, Element *e, void *, ErrorHandler *errh)$/;"	f	class:EtherSwitch
writers	elements/analysis/ipsumdumpinfo.cc	/^static Vector<const void *> *writers;$/;"	v	file:
wrmsr	linuxmodule/read-pmc.c	39;"	d	file:
wrote_includes	tools/click-devirtualize/specializer.hh	/^  bool wrote_includes;$/;"	m	struct:ElementTypeInfo
wst	elements/grid/dsdvroutetable.hh	/^    unsigned int        wst;                   \/\/ weighted settling time (msecs)$/;"	m	class:DSDVRouteTable::RTEntry
wt_data_retries	elements/wifi/radiotapencap.cc	/^	u_int8_t        wt_data_retries;$/;"	m	struct:click_radiotap_header	file:
wt_expr	apps/clicky/src/clicky.cc	/^    wt_mask = 7, wt_expr = 1, wt_port = 2, wt_file = 3, wt_kernel = 4,$/;"	e	enum:__anon30	file:
wt_file	apps/clicky/src/clicky.cc	/^    wt_mask = 7, wt_expr = 1, wt_port = 2, wt_file = 3, wt_kernel = 4,$/;"	e	enum:__anon30	file:
wt_ihdr	elements/wifi/radiotapencap.cc	/^	struct ieee80211_radiotap_header wt_ihdr;$/;"	m	struct:click_radiotap_header	typeref:struct:click_radiotap_header::ieee80211_radiotap_header	file:
wt_kernel	apps/clicky/src/clicky.cc	/^    wt_mask = 7, wt_expr = 1, wt_port = 2, wt_file = 3, wt_kernel = 4,$/;"	e	enum:__anon30	file:
wt_mask	apps/clicky/src/clicky.cc	/^    wt_mask = 7, wt_expr = 1, wt_port = 2, wt_file = 3, wt_kernel = 4,$/;"	e	enum:__anon30	file:
wt_port	apps/clicky/src/clicky.cc	/^    wt_mask = 7, wt_expr = 1, wt_port = 2, wt_file = 3, wt_kernel = 4,$/;"	e	enum:__anon30	file:
wt_rate	elements/wifi/radiotapencap.cc	/^	u_int8_t	wt_rate;$/;"	m	struct:click_radiotap_header	file:
wt_rts_retries	elements/wifi/radiotapencap.cc	/^	u_int8_t        wt_rts_retries;$/;"	m	struct:click_radiotap_header	file:
wt_run	apps/clicky/src/clicky.cc	/^    wt_run = 8$/;"	e	enum:__anon30	file:
wt_txpower	elements/wifi/radiotapencap.cc	/^	u_int8_t	wt_txpower;$/;"	m	struct:click_radiotap_header	file:
x	apps/clicky/src/rectangle.hh	/^    double x() const {$/;"	f	struct:point
x	apps/clicky/src/rectangle.hh	/^    double x() const {$/;"	f	struct:rectangle
x	drivers/e1000-5.x/src/Makefile	/^    x:=$(shell cp \/boot\/vmlinuz.autoconf.h include\/linux\/autoconf.h)$/;"	m
x	drivers/e1000-5.x/src/Makefile	/^    x:=$(shell cp \/boot\/vmlinuz.version.h include\/linux\/version.h)$/;"	m
x	drivers/e1000-5.x/src/Makefile	/^    x:=$(shell mkdir -p include\/linux)$/;"	m
x	drivers/e1000-5.x/src/Makefile	/^    x:=$(shell rm -rf include)$/;"	m
x	drivers/e1000-7.x/src/Makefile	/^    x:=$(shell cp \/boot\/vmlinuz.autoconf.h include\/linux\/autoconf.h)$/;"	m
x	drivers/e1000-7.x/src/Makefile	/^    x:=$(shell cp \/boot\/vmlinuz.version.h include\/linux\/version.h)$/;"	m
x	drivers/e1000-7.x/src/Makefile	/^    x:=$(shell mkdir -p include\/linux)$/;"	m
x	drivers/e1000-7.x/src/Makefile	/^    x:=$(shell rm -rf include)$/;"	m
x	elements/grid/amoeba.cc	/^  double x;$/;"	m	struct:xxx	file:
x	elements/grid/region.hh	/^  double x() { return _x; };$/;"	f	class:RectRegion
x	include/click/timestamp.hh	/^	int64_t x;$/;"	m	union:Timestamp::rep_t
x1	apps/clicky/src/rectangle.hh	/^    double x1() const {$/;"	f	struct:rectangle
x10to8	elements/radio/b8b10.cc	/^static int x10to8[1024];$/;"	v	file:
x2	apps/clicky/src/rectangle.hh	/^    double x2() const {$/;"	f	struct:rectangle
x2nrealloc	elements/local/OpenFlow/lib/util.cc	/^x2nrealloc(void *p, size_t *n, size_t s)$/;"	f
x8021Q_tag_t	drivers/e1000-4.x/src/ans.h	/^} x8021Q_tag_t, *p8021Q_tag_t;$/;"	t	typeref:struct:_x8021Q_tag_t
x8to10	elements/radio/b8b10.cc	/^static int x8to10[] = {$/;"	v	file:
x_verbose_cmd	doc/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	doc/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
x_verbose_cmd	linuxmodule/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	linuxmodule/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-align/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-align/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-check/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-check/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-combine/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-combine/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-devirtualize/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-devirtualize/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-fastclassifier/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-fastclassifier/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-flatten/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-flatten/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-install/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-install/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-mkmindriver/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-mkmindriver/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-pretty/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-pretty/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-undead/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-undead/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-xform/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	tools/click-xform/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
x_verbose_cmd	tools/click2xml/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	tools/click2xml/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
x_verbose_cmd	tools/lib/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	tools/lib/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
x_verbose_cmd	userlevel/Makefile	/^x_verbose_cmd = $(1) $(3)$/;"	m
x_verbose_cmd	userlevel/Makefile	/^x_verbose_cmd = $(if $(2),\/bin\/echo ' ' $(2) $(3) &&,) $(1) $(3)$/;"	m
xanno	include/click/packet.hh	/^    Anno *xanno()			{ return &_aa.cb; }$/;"	f	class:Packet
xanno	include/click/packet.hh	/^    Anno *xanno()			{ return (Anno *)skb()->cb; }$/;"	f	class:Packet
xanno	include/click/packet.hh	/^    const Anno *xanno() const		{ return &_aa.cb; }$/;"	f	class:Packet
xanno	include/click/packet.hh	/^    const Anno *xanno() const		{ return (const Anno *)skb()->cb; }$/;"	f	class:Packet
xasprintf	elements/local/OpenFlow/lib/util.cc	/^xasprintf(const char *format, ...)$/;"	f
xcalloc	elements/local/OpenFlow/lib/util.cc	/^xcalloc(size_t count, size_t size) $/;"	f
xformat	lib/error.cc	/^ErrorHandler::xformat(const char *fmt, ...)$/;"	f	class:ErrorHandler
xformat	lib/error.cc	/^ErrorHandler::xformat(int default_flags, const char *fmt, ...)$/;"	f	class:ErrorHandler
xhandler	lib/router.cc	/^Router::xhandler(int hi) const$/;"	f	class:Router
xid	elements/local/OpenFlow/datapath.cc	/^	uint32_t xid;$/;"	m	struct:stats_dump_cb	file:
xid	elements/local/OpenFlow/include/openflow/openflow.hh	/^    uint32_t xid;       \/* Transaction id associated with this packet.$/;"	m	struct:ofp_header
xid	include/clicknet/dhcp.h	/^	uint32_t xid;          \/* transaction id *\/$/;"	m	struct:click_dhcp
xindex	include/click/ino.hh	/^	uint16_t xindex;$/;"	m	struct:ClickIno::Entry
xindex	include/click/ino.hh	/^ClickIno::xindex(int elementno) const$/;"	f	class:ClickIno
xlat	elements/grid/gridlocationinfo.cc	/^GridLocationInfo::xlat()$/;"	f	class:GridLocationInfo
xlon	elements/grid/gridlocationinfo.cc	/^GridLocationInfo::xlon()$/;"	f	class:GridLocationInfo
xmalloc	elements/local/OpenFlow/lib/util.cc	/^xmalloc(size_t size) $/;"	f
xmemdup	elements/local/OpenFlow/lib/util.cc	/^xmemdup(const void *p_, size_t size)$/;"	f
xmemdup0	elements/local/OpenFlow/lib/util.cc	/^xmemdup0(const char *p_, size_t length)$/;"	f
xmessage	include/click/error.hh	/^    int xmessage(const String &anno, const String &str) {$/;"	f	class:ErrorHandler
xmessage	include/click/error.hh	/^    int xmessage(const String &anno, const char *fmt, va_list val) {$/;"	f	class:ErrorHandler
xmessage	include/click/error.hh	/^    int xmessage(const String &landmark, const String &anno,$/;"	f	class:ErrorHandler
xmessage	lib/args.cc	/^ArgContext::xmessage(const String &anno, const String &str) const$/;"	f	class:ArgContext
xmessage	lib/args.cc	/^ArgContext::xmessage(const String &anno, const char *fmt, va_list val) const$/;"	f	class:ArgContext
xmessage	lib/error.cc	/^ErrorHandler::xmessage(const String &str)$/;"	f	class:ErrorHandler
xmit_antenna	elements/wifi/athdesc.h	/^	u_int32_t	xmit_antenna:1;$/;"	m	struct:ar5212_desc
xmit_power	elements/wifi/athdesc.h	/^	u_int32_t	xmit_power:6;$/;"	m	struct:ar5212_desc
xmit_rate0	elements/wifi/athdesc.h	/^	u_int32_t	xmit_rate0:5;$/;"	m	struct:ar5212_desc
xmit_rate1	elements/wifi/athdesc.h	/^	u_int32_t	xmit_rate1:5;$/;"	m	struct:ar5212_desc
xmit_rate2	elements/wifi/athdesc.h	/^	u_int32_t	xmit_rate2:5;$/;"	m	struct:ar5212_desc
xmit_rate3	elements/wifi/athdesc.h	/^	u_int32_t	xmit_rate3:5;$/;"	m	struct:ar5212_desc
xmit_tries0	elements/wifi/athdesc.h	/^	u_int32_t	xmit_tries0:4;$/;"	m	struct:ar5212_desc
xmit_tries1	elements/wifi/athdesc.h	/^	u_int32_t	xmit_tries1:4;$/;"	m	struct:ar5212_desc
xmit_tries2	elements/wifi/athdesc.h	/^	u_int32_t	xmit_tries2:4;$/;"	m	struct:ar5212_desc
xmit_tries3	elements/wifi/athdesc.h	/^	u_int32_t	xmit_tries3:4;$/;"	m	struct:ar5212_desc
xml_errh	tools/click2xml/xml2click.cc	/^static ErrorHandler *xml_errh;$/;"	v	file:
xml_error	tools/click2xml/xml2click.cc	/^xml_error(XML_Parser parser, const char *format, ...)$/;"	f	file:
xml_file	tools/click2xml/xml2click.cc	/^static String xml_file;$/;"	v	file:
xml_landmark	tools/click2xml/xml2click.cc	/^xml_landmark(XML_Parser parser)$/;"	f	file:
xml_landmark	tools/click2xml/xml2click.hh	/^    String xml_landmark;$/;"	m	struct:CxConnection
xml_landmark	tools/click2xml/xml2click.hh	/^    String xml_landmark;$/;"	m	struct:CxElement
xml_quote	click-mkelemmap	/^sub xml_quote ($) {$/;"	s
xml_quote	tools/lib/toolutils.cc	/^xml_quote(const String &str)$/;"	f
xmlunquote	doc/click-elem2man	/^sub xmlunquote ($) {$/;"	s
xoffrxc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t xoffrxc;$/;"	m	struct:e1000_hw_stats
xoffrxc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t xoffrxc;$/;"	m	struct:e1000_hw_stats
xoffrxc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t xoffrxc;$/;"	m	struct:e1000_hw_stats
xofftxc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t xofftxc;$/;"	m	struct:e1000_hw_stats
xofftxc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t xofftxc;$/;"	m	struct:e1000_hw_stats
xofftxc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t xofftxc;$/;"	m	struct:e1000_hw_stats
xonrxc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t xonrxc;$/;"	m	struct:e1000_hw_stats
xonrxc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t xonrxc;$/;"	m	struct:e1000_hw_stats
xonrxc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t xonrxc;$/;"	m	struct:e1000_hw_stats
xontxc	drivers/e1000-4.x/src/e1000_hw.h	/^    uint64_t xontxc;$/;"	m	struct:e1000_hw_stats
xontxc	drivers/e1000-5.x/src/e1000_hw.h	/^    uint64_t xontxc;$/;"	m	struct:e1000_hw_stats
xontxc	drivers/e1000-7.x/src/e1000_hw.h	/^    uint64_t xontxc;$/;"	m	struct:e1000_hw_stats
xrealloc	elements/local/OpenFlow/lib/util.cc	/^xrealloc(void *p, size_t size) $/;"	f
xstack	tools/click2xml/xml2click.cc	/^static Vector<CxConfig *> xstack;$/;"	v	file:
xstates	tools/click2xml/xml2click.cc	/^static Vector<CxState> xstates;$/;"	v	file:
xstrdup	elements/local/OpenFlow/lib/util.cc	/^xstrdup(const char *s) $/;"	f
xtext	lib/clp.c	/^    const char *xtext;$/;"	m	struct:Clp_Internal	file:
xtext	lib/clp.c	/^    const char *xtext;$/;"	m	struct:Clp_ParserState	file:
xvasprintf	elements/local/OpenFlow/lib/util.cc	/^xvasprintf(const char *format, va_list args)$/;"	f
xxx	elements/grid/amoeba.cc	/^struct xxx {$/;"	s	file:
y	apps/clicky/src/rectangle.hh	/^    double y() const {$/;"	f	struct:point
y	apps/clicky/src/rectangle.hh	/^    double y() const {$/;"	f	struct:rectangle
y	elements/grid/amoeba.cc	/^  double y;$/;"	m	struct:xxx	file:
y	elements/grid/region.hh	/^  double y() { return _y; };$/;"	f	class:RectRegion
y1	apps/clicky/src/rectangle.hh	/^    double y1() const {$/;"	f	struct:rectangle
y2	apps/clicky/src/rectangle.hh	/^    double y2() const {$/;"	f	struct:rectangle
yank	elements/standard/simplequeue.hh	/^SimpleQueue::yank(Filter filter, Vector<Packet *> &yank_vec)$/;"	f	class:SimpleQueue
yank1	elements/standard/simplequeue.hh	/^SimpleQueue::yank1(Filter filter)$/;"	f	class:SimpleQueue
yank1_peek	elements/standard/simplequeue.hh	/^SimpleQueue::yank1_peek(Filter filter)$/;"	f	class:SimpleQueue
ycompound	lib/lexer.cc	/^Lexer::ycompound(String name)$/;"	f	class:Lexer
ycompound	tools/lib/lexert.cc	/^LexerT::ycompound(String name, const char *decl_pos1, const char *name_pos1)$/;"	f	class:LexerT
ycompound_arguments	lib/lexer.cc	/^Lexer::ycompound_arguments(Compound *comptype)$/;"	f	class:Lexer
ycompound_arguments	tools/lib/lexert.cc	/^LexerT::ycompound_arguments(RouterT *comptype)$/;"	f	class:LexerT
yconnection	lib/lexer.cc	/^Lexer::yconnection()$/;"	f	class:Lexer
yconnection	tools/lib/lexert.cc	/^LexerT::yconnection()$/;"	f	class:LexerT
yconnection_analyze_ports	lib/lexer.cc	/^Lexer::yconnection_analyze_ports(const Vector<int> &x, bool isoutput,$/;"	f	class:Lexer
yconnection_analyze_ports	tools/lib/lexert.cc	/^LexerT::yconnection_analyze_ports(const Vector<int> &x, bool isoutput,$/;"	f	class:LexerT
yconnection_check_useless	lib/lexer.cc	/^Lexer::yconnection_check_useless(const Vector<int> &x, bool isoutput)$/;"	f	class:Lexer
yconnection_check_useless	tools/lib/lexert.cc	/^LexerT::yconnection_check_useless(const Vector<int> &x, bool isoutput, const char *epos[2])$/;"	f	class:LexerT
yconnection_connect_all	lib/lexer.cc	/^Lexer::yconnection_connect_all(Vector<int> &outputs, Vector<int> &inputs,$/;"	f	class:Lexer
yconnection_connect_all	tools/lib/lexert.cc	/^LexerT::yconnection_connect_all(Vector<int> &outputs, Vector<int> &inputs,$/;"	f	class:LexerT
ydefine	tools/lib/lexert.cc	/^LexerT::ydefine(RouterT *r, const String &fname, const String &ftype, const Lexeme &t, bool &scope_order_error)$/;"	f	class:LexerT
yelement	lib/lexer.cc	/^Lexer::yelement(Vector<int> &result, bool in_allowed)$/;"	f	class:Lexer
yelement	tools/lib/lexert.cc	/^LexerT::yelement(Vector<int> &result, bool in_allowed, const char *epos[5])$/;"	f	class:LexerT
yelementclass	lib/lexer.cc	/^Lexer::yelementclass()$/;"	f	class:Lexer
yelementclass	tools/lib/lexert.cc	/^LexerT::yelementclass(const char *pos1)$/;"	f	class:LexerT
yes	elements/standard/classification.hh	/^    int32_t &yes()			{ return j[1]; }$/;"	f	struct:Classification::Wordwise::Insn
yes	elements/standard/classification.hh	/^    int32_t yes() const			{ return j[1]; }$/;"	f	struct:Classification::Wordwise::Insn
ygroup	lib/lexer.cc	/^Lexer::ygroup(String name, int group_nports[2])$/;"	f	class:Lexer
ygroup	tools/lib/lexert.cc	/^LexerT::ygroup(String name, int group_nports[2], const char *open_pos1, const char *open_pos2)$/;"	f	class:LexerT
yiaddr	include/clicknet/dhcp.h	/^	uint32_t yiaddr;       \/* 'your' client IP address *\/$/;"	m	struct:click_dhcp
yport	lib/lexer.cc	/^Lexer::yport(Vector<int> &ports)$/;"	f	class:Lexer
yport	tools/lib/lexert.cc	/^LexerT::yport(Vector<int> &ports, const char *pos[2])$/;"	f	class:LexerT
yrequire	lib/lexer.cc	/^Lexer::yrequire()$/;"	f	class:Lexer
yrequire	tools/lib/lexert.cc	/^LexerT::yrequire()$/;"	f	class:LexerT
yrequire_library	lib/lexer.cc	/^Lexer::yrequire_library(const String &value)$/;"	f	class:Lexer
yrequire_library	tools/lib/lexert.cc	/^LexerT::yrequire_library(const Lexeme &lexeme, const String &value)$/;"	f	class:LexerT
ystatement	lib/lexer.cc	/^Lexer::ystatement(int nested)$/;"	f	class:Lexer
ystatement	tools/lib/lexert.cc	/^LexerT::ystatement(int nested)$/;"	f	class:LexerT
yvar	lib/lexer.cc	/^Lexer::yvar()$/;"	f	class:Lexer
yvar	tools/lib/lexert.cc	/^LexerT::yvar()$/;"	f	class:LexerT
z_index	apps/clicky/src/dwidget.hh	/^    int z_index() const {$/;"	f	class:clicky::dwidget
z_index_greater	apps/clicky/src/dwidget.hh	/^    static bool z_index_greater(const dwidget *a, const dwidget *b) {$/;"	f	class:clicky::dwidget
z_index_less	apps/clicky/src/dwidget.hh	/^    static bool z_index_less(const dwidget *a, const dwidget *b) {$/;"	f	class:clicky::dwidget
zero	lib/args.cc	/^    bool zero;$/;"	m	struct:__anon505::fraction_accum	file:
zero	lib/bitvector.cc	/^Bitvector::zero() const$/;"	f	class:Bitvector
zero_char_doodad	apps/clicky/src/permstr.cc	/^PermString::Doodad PermString::zero_char_doodad = {$/;"	m	class:PermString	file:
zero_char_doodad	apps/clicky/src/permstr.hh	/^    static Doodad zero_char_doodad, one_char_doodad[256], *buckets[NHASH];$/;"	m	class:PermString
zoom	apps/clicky/src/wdiagram.cc	/^void wdiagram::zoom(bool incremental, int amount)$/;"	f	class:clicky::wdiagram
~ACKResponder	elements/grid/ackresponder.cc	/^ACKResponder::~ACKResponder()$/;"	f	class:ACKResponder
~ACKResponder2	elements/grid/ackresponder2.cc	/^ACKResponder2::~ACKResponder2()$/;"	f	class:ACKResponder2
~ACKRetrySender	elements/grid/ackretrysender.cc	/^ACKRetrySender::~ACKRetrySender()$/;"	f	class:ACKRetrySender
~ACKRetrySender2	elements/grid/ackretrysender2.cc	/^ACKRetrySender2::~ACKRetrySender2()$/;"	f	class:ACKRetrySender2
~ARPFaker	elements/ethernet/arpfaker.cc	/^ARPFaker::~ARPFaker()$/;"	f	class:ARPFaker
~ARPPrint	elements/ethernet/arpprint.cc	/^ARPPrint::~ARPPrint()$/;"	f	class:ARPPrint
~ARPQuerier	elements/ethernet/arpquerier.cc	/^ARPQuerier::~ARPQuerier()$/;"	f	class:ARPQuerier
~ARPResponder	elements/ethernet/arpresponder.cc	/^ARPResponder::~ARPResponder()$/;"	f	class:ARPResponder
~ARPTable	elements/ethernet/arptable.cc	/^ARPTable::~ARPTable()$/;"	f	class:ARPTable
~ActiveNotifier	lib/notifier.cc	/^ActiveNotifier::~ActiveNotifier()$/;"	f	class:ActiveNotifier
~AdaptiveRED	elements/aqm/adaptivered.cc	/^AdaptiveRED::~AdaptiveRED()$/;"	f	class:AdaptiveRED
~AddressInfo	elements/standard/addressinfo.cc	/^AddressInfo::~AddressInfo()$/;"	f	class:AddressInfo
~AddressTranslator	elements/ip6/addresstranslator.cc	/^AddressTranslator::~AddressTranslator()$/;"	f	class:AddressTranslator
~AdjacencyMatrix	tools/click-xform/adjacency.cc	/^AdjacencyMatrix::~AdjacencyMatrix()$/;"	f	class:AdjacencyMatrix
~AdjustTimestamp	elements/analysis/adjusttimestamp.cc	/^AdjustTimestamp::~AdjustTimestamp()$/;"	f	class:AdjustTimestamp
~Aes	elements/ipsec/aes.cc	/^Aes::~Aes()$/;"	f	class:Aes
~AggregateCounter	elements/analysis/aggcounter.cc	/^AggregateCounter::~AggregateCounter()$/;"	f	class:AggregateCounter
~AggregateFilter	elements/analysis/aggregatefilter.cc	/^AggregateFilter::~AggregateFilter()$/;"	f	class:AggregateFilter
~AggregateFirst	elements/analysis/aggregatefirst.cc	/^AggregateFirst::~AggregateFirst()$/;"	f	class:AggregateFirst
~AggregateIP	elements/analysis/aggregateip.cc	/^AggregateIP::~AggregateIP()$/;"	f	class:AggregateIP
~AggregateIPAddrPair	elements/analysis/aggregateipaddrpair.cc	/^AggregateIPAddrPair::~AggregateIPAddrPair()$/;"	f	class:AggregateIPAddrPair
~AggregateIPFlows	elements/analysis/aggregateipflows.cc	/^AggregateIPFlows::~AggregateIPFlows()$/;"	f	class:AggregateIPFlows
~AggregateLast	elements/analysis/aggregatelast.cc	/^AggregateLast::~AggregateLast()$/;"	f	class:AggregateLast
~AggregateLength	elements/analysis/aggregatelen.cc	/^AggregateLength::~AggregateLength()$/;"	f	class:AggregateLength
~AggregateListener	elements/analysis/aggregatenotifier.hh	/^    virtual ~AggregateListener()	{ }$/;"	f	class:AggregateListener
~AggregateNotifier	elements/analysis/aggregatenotifier.hh	/^    ~AggregateNotifier()		{ }$/;"	f	class:AggregateNotifier
~AggregatePacketCounter	elements/analysis/aggpktcounter.cc	/^AggregatePacketCounter::~AggregatePacketCounter()$/;"	f	class:AggregatePacketCounter
~AggregatePaint	elements/analysis/aggregatepaint.cc	/^AggregatePaint::~AggregatePaint()$/;"	f	class:AggregatePaint
~AiroInfo	elements/grid/airoinfo.cc	/^AiroInfo::~AiroInfo()$/;"	f	class:AiroInfo
~Algorithm	elements/local/FlowNet/common/Algorithm.hh	/^	~Algorithm() {};$/;"	f	class:Algorithm
~Align	elements/standard/align.cc	/^Align::~Align()$/;"	f	class:Align
~Aligner	tools/click-align/alignclass.hh	/^    virtual ~Aligner()	{ }$/;"	f	class:Aligner
~AlignmentInfo	elements/standard/alignmentinfo.cc	/^AlignmentInfo::~AlignmentInfo()$/;"	f	class:AlignmentInfo
~Amoeba	elements/grid/amoeba.cc	/^Amoeba::~Amoeba()$/;"	f	class:Amoeba
~AnnotationInfo	elements/standard/annotationinfo.cc	/^AnnotationInfo::~AnnotationInfo()$/;"	f	class:AnnotationInfo
~AnonymizeIPAddr	elements/analysis/anonipaddr.cc	/^AnonymizeIPAddr::~AnonymizeIPAddr()$/;"	f	class:AnonymizeIPAddr
~AnyDevice	elements/bsdmodule/anydevice.cc	/^AnyDevice::~AnyDevice()$/;"	f	class:AnyDevice
~AnyDevice	elements/linuxmodule/anydevice.cc	/^AnyDevice::~AnyDevice()$/;"	f	class:AnyDevice
~Args	lib/args.cc	/^Args::~Args()$/;"	f	class:Args
~AssociationRequester	elements/wifi/station/associationrequester.cc	/^AssociationRequester::~AssociationRequester()$/;"	f	class:AssociationRequester
~AssociationResponder	elements/wifi/ap/associationresponder.cc	/^AssociationResponder::~AssociationResponder()$/;"	f	class:AssociationResponder
~AthdescDecap	elements/wifi/athdescdecap.cc	/^AthdescDecap::~AthdescDecap()$/;"	f	class:AthdescDecap
~AthdescEncap	elements/wifi/athdescencap.cc	/^AthdescEncap::~AthdescEncap()$/;"	f	class:AthdescEncap
~AutoRateFallback	elements/wifi/autoratefallback.cc	/^AutoRateFallback::~AutoRateFallback()$/;"	f	class:AutoRateFallback
~AvailableRates	elements/wifi/availablerates.cc	/^AvailableRates::~AvailableRates()$/;"	f	class:AvailableRates
~AverageCounter	elements/standard/averagecounter.cc	/^AverageCounter::~AverageCounter()$/;"	f	class:AverageCounter
~B8B10	elements/radio/b8b10.cc	/^B8B10::~B8B10()$/;"	f	class:B8B10
~BIM	elements/radio/bim.cc	/^BIM::~BIM()$/;"	f	class:BIM
~BalancedThreadSched	elements/threads/balancedthreadsched.cc	/^BalancedThreadSched::~BalancedThreadSched()$/;"	f	class:BalancedThreadSched
~BandwidthMeter	elements/standard/bandwidthmeter.cc	/^BandwidthMeter::~BandwidthMeter()$/;"	f	class:BandwidthMeter
~BandwidthRatedSplitter	elements/standard/bwratedsplitter.cc	/^BandwidthRatedSplitter::~BandwidthRatedSplitter()$/;"	f	class:BandwidthRatedSplitter
~BandwidthRatedUnqueue	elements/standard/bwratedunqueue.cc	/^BandwidthRatedUnqueue::~BandwidthRatedUnqueue()$/;"	f	class:BandwidthRatedUnqueue
~BandwidthShaper	elements/standard/bandwidthshaper.cc	/^BandwidthShaper::~BandwidthShaper()$/;"	f	class:BandwidthShaper
~BeaconScanner	elements/wifi/station/beaconscanner.cc	/^BeaconScanner::~BeaconScanner()$/;"	f	class:BeaconScanner
~BeaconSource	elements/wifi/ap/beaconsource.cc	/^BeaconSource::~BeaconSource()$/;"	f	class:BeaconSource
~BeaconTracker	elements/wifi/station/beacontracker.cc	/^BeaconTracker::~BeaconTracker()$/;"	f	class:BeaconTracker
~BigHashMapTest	elements/test/bhmtest.cc	/^BigHashMapTest::~BigHashMapTest()$/;"	f	class:BigHashMapTest
~BigintTest	elements/test/biginttest.cc	/^BigintTest::~BigintTest()$/;"	f	class:BigintTest
~Bitvector	include/click/bitvector.hh	/^    ~Bitvector() {$/;"	f	class:Bitvector
~Block	elements/standard/block.cc	/^Block::~Block()$/;"	f	class:Block
~BlockThread	elements/test/blockthread.cc	/^BlockThread::~BlockThread()$/;"	f	class:BlockThread
~BottleneckMetric	elements/grid/bottleneckmetric.cc	/^BottleneckMetric::~BottleneckMetric()$/;"	f	class:BottleneckMetric
~Burster	elements/standard/burster.cc	/^Burster::~Burster()$/;"	f	class:Burster
~BytesSlot	include/click/args.hh	/^	~BytesSlot() {$/;"	f	struct:Args::BytesSlot
~CLPTest	elements/test/clptest.cc	/^CLPTest::~CLPTest()$/;"	f	class:CLPTest
~CPUQueue	elements/linuxmodule/cpuqueue.cc	/^CPUQueue::~CPUQueue()$/;"	f	class:CPUQueue
~CPUSwitch	elements/linuxmodule/cpuswitch.cc	/^CPUSwitch::~CPUSwitch()$/;"	f	class:CPUSwitch
~CUT_BinHeap	ns/CUT_BinHeap.h	/^  ~CUT_BinHeap()  {$/;"	f	class:CUT_BinHeap
~ChangeUID	elements/userlevel/changeuid.cc	/^ChangeUID::~ChangeUID()$/;"	f	class:ChangeUID
~ChatterSocket	elements/userlevel/chattersocket.cc	/^ChatterSocket::~ChatterSocket()$/;"	f	class:ChatterSocket
~CheckARPHeader	elements/ethernet/checkarpheader.cc	/^CheckARPHeader::~CheckARPHeader()$/;"	f	class:CheckARPHeader
~CheckCRC32	elements/standard/checkcrc32.cc	/^CheckCRC32::~CheckCRC32()$/;"	f	class:CheckCRC32
~CheckGridHeader	elements/grid/checkgridheader.cc	/^CheckGridHeader::~CheckGridHeader()$/;"	f	class:CheckGridHeader
~CheckICMPHeader	elements/icmp/checkicmpheader.cc	/^CheckICMPHeader::~CheckICMPHeader()$/;"	f	class:CheckICMPHeader
~CheckIP6Header	elements/ip6/checkip6header.cc	/^CheckIP6Header::~CheckIP6Header()$/;"	f	class:CheckIP6Header
~CheckIPHeader	elements/ip/checkipheader.cc	/^CheckIPHeader::~CheckIPHeader()$/;"	f	class:CheckIPHeader
~CheckIPHeader2	elements/ip/checkipheader2.cc	/^CheckIPHeader2::~CheckIPHeader2()$/;"	f	class:CheckIPHeader2
~CheckLength	elements/standard/checklength.cc	/^CheckLength::~CheckLength()$/;"	f	class:CheckLength
~CheckPacket	elements/test/checkpacket.cc	/^CheckPacket::~CheckPacket()$/;"	f	class:CheckPacket
~CheckPaint	elements/standard/checkpaint.cc	/^CheckPaint::~CheckPaint()$/;"	f	class:CheckPaint
~CheckPattern	elements/radio/checkpattern.cc	/^CheckPattern::~CheckPattern()$/;"	f	class:CheckPattern
~CheckTCPHeader	elements/tcpudp/checktcpheader.cc	/^CheckTCPHeader::~CheckTCPHeader()$/;"	f	class:CheckTCPHeader
~CheckUDPHeader	elements/tcpudp/checkudpheader.cc	/^CheckUDPHeader::~CheckUDPHeader()$/;"	f	class:CheckUDPHeader
~Classifier	elements/standard/classifier.cc	/^Classifier::~Classifier()$/;"	f	class:Classifier
~ClickyInfo	elements/standard/clickyinfo.cc	/^ClickyInfo::~ClickyInfo()$/;"	f	class:ClickyInfo
~CompareBlock	elements/standard/compblock.cc	/^CompareBlock::~CompareBlock()$/;"	f	class:CompareBlock
~ComparePackets	elements/test/comparepackets.cc	/^ComparePackets::~ComparePackets()$/;"	f	class:ComparePackets
~ConfParseTest	elements/test/confparsetest.cc	/^ConfParseTest::~ConfParseTest()$/;"	f	class:ConfParseTest
~ControlSocket	elements/userlevel/controlsocket.cc	/^ControlSocket::~ControlSocket()$/;"	f	class:ControlSocket
~ControlSocketClient	apps/csclient/csclient.hh	/^  ~ControlSocketClient() { if (_init) ::close(_fd); }$/;"	f	class:ControlSocketClient
~Counter	elements/standard/counter.cc	/^Counter::~Counter()$/;"	f	class:Counter
~CxConfig	tools/click2xml/xml2click.cc	/^CxConfig::~CxConfig()$/;"	f	class:CxConfig
~CxxInfo	tools/click-devirtualize/cxxclass.cc	/^CxxInfo::~CxxInfo()$/;"	f	class:CxxInfo
~CycleCountAccum	elements/linuxmodule/cyclecountaccum.cc	/^CycleCountAccum::~CycleCountAccum()$/;"	f	class:CycleCountAccum
~DEQueue	include/click/dequeue.cc	/^DEQueue<T>::~DEQueue()$/;"	f	class:DEQueue
~DRRSched	elements/standard/drr.cc	/^DRRSched::~DRRSched()$/;"	f	class:DRRSched
~DSDVRouteTable	elements/grid/dsdvroutetable.cc	/^DSDVRouteTable::~DSDVRouteTable()$/;"	f	class:DSDVRouteTable
~DSRArpTable	elements/grid/dsrarptable.cc	/^DSRArpTable::~DSRArpTable()$/;"	f	class:DSRArpTable
~DSRRouteTable	elements/grid/dsrroutetable.cc	/^DSRRouteTable::~DSRRouteTable()$/;"	f	class:DSRRouteTable
~Datapath	elements/local/OpenFlow/datapath.cc	/^Datapath::~Datapath()$/;"	f	class:Datapath
~DatapathPacketBuffer	elements/local/OpenFlow/datapath.cc	/^DatapathPacketBuffer::~DatapathPacketBuffer()$/;"	f	class:DatapathPacketBuffer
~DebugBridge	elements/etherswitch/debugbridge.cc	/^DebugBridge::~DebugBridge()$/;"	f	class:DebugBridge
~DecIP6HLIM	elements/ip6/decip6hlim.cc	/^DecIP6HLIM::~DecIP6HLIM()$/;"	f	class:DecIP6HLIM
~DecIPTTL	elements/ip/decipttl.cc	/^DecIPTTL::~DecIPTTL()$/;"	f	class:DecIPTTL
~DelayShaper	elements/standard/delayshaper.cc	/^DelayShaper::~DelayShaper()$/;"	f	class:DelayShaper
~DelayUnqueue	elements/standard/delayunqueue.cc	/^DelayUnqueue::~DelayUnqueue()$/;"	f	class:DelayUnqueue
~Des	elements/ipsec/des.cc	/^Des::~Des()$/;"	f	class:Des
~DevirtualizeInfo	elements/standard/devirtualizeinfo.cc	/^DevirtualizeInfo::~DevirtualizeInfo()$/;"	f	class:DevirtualizeInfo
~DirectIPLookup	elements/ip/directiplookup.cc	/^DirectIPLookup::~DirectIPLookup()$/;"	f	class:DirectIPLookup
~Discard	elements/standard/discard.cc	/^Discard::~Discard()$/;"	f	class:Discard
~DiscardNoFree	elements/standard/discardnofree.cc	/^DiscardNoFree::~DiscardNoFree()$/;"	f	class:DiscardNoFree
~DropBroadcasts	elements/standard/dropbroadcasts.cc	/^DropBroadcasts::~DropBroadcasts()$/;"	f	class:DropBroadcasts
~DynamicUDPIPEncap	elements/tcpudp/dynudpipencap.cc	/^DynamicUDPIPEncap::~DynamicUDPIPEncap()$/;"	f	class:DynamicUDPIPEncap
~E2ELossMetric	elements/grid/e2elossmetric.cc	/^E2ELossMetric::~E2ELossMetric()$/;"	f	class:E2ELossMetric
~ETX2Metric	elements/grid/etx2metric.cc	/^ETX2Metric::~ETX2Metric()$/;"	f	class:ETX2Metric
~ETXMetric	elements/grid/etxmetric.cc	/^ETXMetric::~ETXMetric()$/;"	f	class:ETXMetric
~Element	lib/element.cc	/^Element::~Element()$/;"	f	class:Element
~ElementClassT	tools/lib/eclasst.cc	/^ElementClassT::~ElementClassT()$/;"	f	class:ElementClassT
~ElementFilter	include/click/elemfilter.hh	/^    virtual ~ElementFilter() {$/;"	f	class:ElementFilter
~ElementMap	tools/lib/elementmap.cc	/^ElementMap::~ElementMap()$/;"	f	class:ElementMap
~ElementT	tools/lib/elementt.cc	/^ElementT::~ElementT()$/;"	f	class:ElementT
~ElementType	tools/lib/routert.hh	/^	~ElementType()			{ type->unuse(); }$/;"	f	struct:RouterT::ElementType
~ElementsOutput	tools/click-pretty/click-pretty.cc	/^ElementsOutput::~ElementsOutput()$/;"	f	class:ElementsOutput
~EnsureEther	elements/ethernet/ensureether.cc	/^EnsureEther::~EnsureEther()$/;"	f	class:EnsureEther
~EraseIPPayload	elements/analysis/eraseippayload.cc	/^EraseIPPayload::~EraseIPPayload()$/;"	f	class:EraseIPPayload
~ErrorElement	elements/standard/errorelement.cc	/^ErrorElement::~ErrorElement()$/;"	f	class:ErrorElement
~ErrorHandler	include/click/error.hh	/^    virtual ~ErrorHandler() {$/;"	f	class:ErrorHandler
~ErrorTest	elements/test/errortest.cc	/^ErrorTest::~ErrorTest()$/;"	f	class:ErrorTest
~EstimateRouterRegion	elements/grid/regionpep.cc	/^EstimateRouterRegion::~EstimateRouterRegion()$/;"	f	class:EstimateRouterRegion
~EtherCount	elements/wifi/ethercount.cc	/^EtherCount::~EtherCount()$/;"	f	class:EtherCount
~EtherEncap	elements/ethernet/etherencap.cc	/^EtherEncap::~EtherEncap()$/;"	f	class:EtherEncap
~EtherMirror	elements/ethernet/ethermirror.cc	/^EtherMirror::~EtherMirror()$/;"	f	class:EtherMirror
~EtherPauseSource	elements/ethernet/etherpausesource.cc	/^EtherPauseSource::~EtherPauseSource()$/;"	f	class:EtherPauseSource
~EtherSpanTree	elements/etherswitch/spantree.cc	/^EtherSpanTree::~EtherSpanTree()$/;"	f	class:EtherSpanTree
~EtherSwitch	elements/etherswitch/etherswitch.cc	/^EtherSwitch::~EtherSwitch()$/;"	f	class:EtherSwitch
~EtherVLANEncap	elements/ethernet/ethervlanencap.cc	/^EtherVLANEncap::~EtherVLANEncap()$/;"	f	class:EtherVLANEncap
~ExtraDecap	elements/wifi/extradecap.cc	/^ExtraDecap::~ExtraDecap()$/;"	f	class:ExtraDecap
~ExtraEncap	elements/wifi/extraencap.cc	/^ExtraEncap::~ExtraEncap()$/;"	f	class:ExtraEncap
~FTPPortMapper	elements/app/ftpportmapper.cc	/^FTPPortMapper::~FTPPortMapper()$/;"	f	class:FTPPortMapper
~FastTCPFlows	elements/linuxmodule/fasttcpflows.cc	/^FastTCPFlows::~FastTCPFlows()$/;"	f	class:FastTCPFlows
~FastUDPFlows	elements/linuxmodule/fastudpflows.cc	/^FastUDPFlows::~FastUDPFlows()$/;"	f	class:FastUDPFlows
~FastUDPSource	elements/bsdmodule/fastudpsrc.cc	/^FastUDPSource::~FastUDPSource()$/;"	f	class:FastUDPSource
~FastUDPSource	elements/linuxmodule/fastudpsrc.cc	/^FastUDPSource::~FastUDPSource()$/;"	f	class:FastUDPSource
~FastUDPSourceIP6	elements/linuxmodule/fastudpsrcip6.cc	/^FastUDPSourceIP6::~FastUDPSourceIP6()$/;"	f	class:FastUDPSourceIP6
~FileState	tools/lib/lexert.hh	/^	~FileState() {$/;"	f	struct:LexerT::FileState
~FilterByGridHops	elements/grid/filterbyhops.cc	/^FilterByGridHops::~FilterByGridHops()$/;"	f	class:FilterByGridHops
~FilterByRange	elements/grid/filterbyrange.cc	/^FilterByRange::~FilterByRange()$/;"	f	class:FilterByRange
~FilterFailures	elements/wifi/filterfailures.cc	/^FilterFailures::~FilterFailures()$/;"	f	class:FilterFailures
~FilterPhyErr	elements/wifi/filterphyerr.cc	/^FilterPhyErr::~FilterPhyErr()$/;"	f	class:FilterPhyErr
~FilterTX	elements/wifi/filtertx.cc	/^FilterTX::~FilterTX()$/;"	f	class:FilterTX
~FixDstLoc	elements/grid/fixdstloc.cc	/^FixDstLoc::~FixDstLoc()$/;"	f	class:FixDstLoc
~FixIPSrc	elements/ip/fixipsrc.cc	/^FixIPSrc::~FixIPSrc()$/;"	f	class:FixIPSrc
~FixSrcLoc	elements/grid/fixsrcloc.cc	/^FixSrcLoc::~FixSrcLoc()$/;"	f	class:FixSrcLoc
~FlanFile	elements/analysis/fromflandump.cc	/^FromFlanDump::FlanFile::~FlanFile()$/;"	f	class:FromFlanDump::FlanFile
~FloodingLocQuerier	elements/grid/floodinglocquerier.cc	/^FloodingLocQuerier::~FloodingLocQuerier()$/;"	f	class:FloodingLocQuerier
~Flow	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::Flow::~Flow()$/;"	f	class:ToIPFlowDumps::Flow
~Flow	elements/local/FlowNet/common/Flow.hh	/^	~Flow() {destroy();};$/;"	f	class:Flow
~Flow	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::Flow::~Flow()$/;"	f	class:IPFlowRawSockets::Flow
~FlowBWShaperable	elements/local/FlowNet/shaper/FlowBWShaperable.hh	/^	~FlowBWShaperable() {};$/;"	f	class:FlowBWShaperable
~FlowInfo	elements/standard/flowinfo.cc	/^FlowInfo::~FlowInfo()$/;"	f	class:FlowInfo
~FlowMpeg2AdaptDecap	elements/local/FlowNet/mpeg2/FlowMpeg2AdaptDecap.cc	/^FlowMpeg2AdaptDecap::~FlowMpeg2AdaptDecap() $/;"	f	class:FlowMpeg2AdaptDecap
~FlowNetGod	elements/local/FlowNet/common/FlowNetGod.hh	/^	~FlowNetGod() {};$/;"	f	class:FlowNetGod
~FlowSchedulable	elements/local/FlowNet/scheduler/FlowSchedulable.cc	/^FlowSchedulable::~FlowSchedulable()$/;"	f	class:FlowSchedulable
~FromCapDump	elements/analysis/fromcapdump.cc	/^FromCapDump::~FromCapDump()$/;"	f	class:FromCapDump
~FromDAGDump	elements/analysis/fromdagdump.cc	/^FromDAGDump::~FromDAGDump()$/;"	f	class:FromDAGDump
~FromDevice	elements/bsdmodule/fromdevice.cc	/^FromDevice::~FromDevice()$/;"	f	class:FromDevice
~FromDevice	elements/linuxmodule/fromdevice.cc	/^FromDevice::~FromDevice()$/;"	f	class:FromDevice
~FromDevice	elements/userlevel/fromdevice.cc	/^FromDevice::~FromDevice()$/;"	f	class:FromDevice
~FromDump	elements/userlevel/fromdump.cc	/^FromDump::~FromDump()$/;"	f	class:FromDump
~FromFile	include/click/fromfile.hh	/^    ~FromFile()				{ cleanup(); }$/;"	f	class:FromFile
~FromFlanDump	elements/analysis/fromflandump.cc	/^FromFlanDump::~FromFlanDump()$/;"	f	class:FromFlanDump
~FromHandler	elements/wifi/fromhandler.cc	/^FromHandler::~FromHandler()$/;"	f	class:FromHandler
~FromHost	elements/bsdmodule/fromhost.cc	/^FromHost::~FromHost()$/;"	f	class:FromHost
~FromHost	elements/linuxmodule/fromhost.cc	/^FromHost::~FromHost()$/;"	f	class:FromHost
~FromHost	elements/userlevel/fromhost.cc	/^FromHost::~FromHost()$/;"	f	class:FromHost
~FromIPSummaryDump	elements/analysis/fromipsumdump.cc	/^FromIPSummaryDump::~FromIPSummaryDump()$/;"	f	class:FromIPSummaryDump
~FromNLANRDump	elements/analysis/fromnlanrdump.cc	/^FromNLANRDump::~FromNLANRDump()$/;"	f	class:FromNLANRDump
~FromNetFlowSummaryDump	elements/analysis/fromnetflowsumdump.cc	/^FromNetFlowSummaryDump::~FromNetFlowSummaryDump()$/;"	f	class:FromNetFlowSummaryDump
~FromRawSocket	elements/userlevel/fromrawsocket.cc	/^FromRawSocket::~FromRawSocket()$/;"	f	class:FromRawSocket
~FromSimDevice	elements/ns/fromsimdevice.cc	/^FromSimDevice::~FromSimDevice()$/;"	f	class:FromSimDevice
~FromSocket	elements/userlevel/fromsocket.cc	/^FromSocket::~FromSocket()$/;"	f	class:FromSocket
~FromTcpdump	elements/analysis/fromtcpdump.cc	/^FromTcpdump::~FromTcpdump()$/;"	f	class:FromTcpdump
~FromUserDevice	elements/linuxmodule/fromuserdevice.cc	/^FromUserDevice::~FromUserDevice()$/;"	f	class:FromUserDevice
~FrontDropQueue	elements/standard/frontdropqueue.cc	/^FrontDropQueue::~FrontDropQueue()$/;"	f	class:FrontDropQueue
~FullNoteQueue	elements/standard/fullnotequeue.cc	/^FullNoteQueue::~FullNoteQueue()$/;"	f	class:FullNoteQueue
~FunctionTest	elements/test/functiontest.cc	/^FunctionTest::~FunctionTest()$/;"	f	class:FunctionTest
~GetIP6Address	elements/ip6/getip6address.cc	/^GetIP6Address::~GetIP6Address()$/;"	f	class:GetIP6Address
~GetIPAddress	elements/ip/getipaddress.cc	/^GetIPAddress::~GetIPAddress()$/;"	f	class:GetIPAddress
~GridEncap	elements/grid/gridencap.cc	/^GridEncap::~GridEncap()$/;"	f	class:GridEncap
~GridGatewayInfo	elements/grid/gridgatewayinfo.cc	/^GridGatewayInfo::~GridGatewayInfo()$/;"	f	class:GridGatewayInfo
~GridGenericLocInfo	elements/grid/gridgenericlocinfo.hh	/^  virtual ~GridGenericLocInfo() { }$/;"	f	class:GridGenericLocInfo
~GridGenericLogger	elements/grid/gridgenericlogger.hh	/^  virtual ~GridGenericLogger() { }$/;"	f	class:GridGenericLogger
~GridGenericMetric	elements/grid/gridgenericmetric.hh	/^  virtual ~GridGenericMetric() { }$/;"	f	class:GridGenericMetric
~GridGenericRouteTable	elements/grid/gridgenericrt.hh	/^  virtual ~GridGenericRouteTable() { }$/;"	f	class:GridGenericRouteTable
~GridHeaderInfo	elements/grid/gridheaderinfo.cc	/^GridHeaderInfo::~GridHeaderInfo()$/;"	f	class:GridHeaderInfo
~GridLocationInfo	elements/grid/gridlocationinfo.cc	/^GridLocationInfo::~GridLocationInfo()$/;"	f	class:GridLocationInfo
~GridLocationInfo2	elements/grid/gridlocationinfo2.cc	/^GridLocationInfo2::~GridLocationInfo2()$/;"	f	class:GridLocationInfo2
~GridLogger	elements/grid/gridlogger.cc	/^GridLogger::~GridLogger() {$/;"	f	class:GridLogger
~GridProbeHandler	elements/grid/gridprobehandler.cc	/^GridProbeHandler::~GridProbeHandler()$/;"	f	class:GridProbeHandler
~GridProbeReplyReceiver	elements/grid/gridprobereplyreceiver.cc	/^GridProbeReplyReceiver::~GridProbeReplyReceiver()$/;"	f	class:GridProbeReplyReceiver
~GridProbeSender	elements/grid/gridprobesender.cc	/^GridProbeSender::~GridProbeSender()$/;"	f	class:GridProbeSender
~GridProxy	elements/grid/gridproxy.cc	/^GridProxy::~GridProxy()$/;"	f	class:GridProxy
~GridRouteActionCallback	elements/grid/gridroutecb.hh	/^    virtual ~GridRouteActionCallback() { }$/;"	f	class:GridRouteActionCallback
~GridRouteTable	elements/grid/gridroutetable.cc	/^GridRouteTable::~GridRouteTable()$/;"	f	class:GridRouteTable
~GridSRForwarder	elements/grid/gridsrforwarder.cc	/^GridSRForwarder::~GridSRForwarder()$/;"	f	class:GridSRForwarder
~GridTxError	elements/grid/gridtxerror.cc	/^GridTxError::~GridTxError()$/;"	f	class:GridTxError
~HandlerProxy	elements/userlevel/handlerproxy.cc	/^HandlerProxy::~HandlerProxy()$/;"	f	class:HandlerProxy
~HandlerTask	elements/test/handlertask.cc	/^HandlerTask::~HandlerTask()$/;"	f	class:HandlerTask
~HashAllocator	lib/hashallocator.cc	/^HashAllocator::~HashAllocator()$/;"	f	class:HashAllocator
~HashContainer	include/click/hashcontainer.hh	/^HashContainer<T, A>::~HashContainer()$/;"	f	class:HashContainer
~HashMap	include/click/hashmap.cc	/^HashMap<K, V>::~HashMap()$/;"	f	class:HashMap
~HashMap	include/click/hashmap.cc	/^HashMap<K, void *>::~HashMap()$/;"	f	class:HashMap
~HashMap	include/click/hashmap.hh	/^  ~HashMap()				{ }$/;"	f	class:HashMap
~HashMap_Arena	lib/bighashmap_arena.cc	/^HashMap_Arena::~HashMap_Arena()$/;"	f	class:HashMap_Arena
~HashMap_ArenaFactory	lib/bighashmap_arena.cc	/^HashMap_ArenaFactory::~HashMap_ArenaFactory()$/;"	f	class:HashMap_ArenaFactory
~HashSwitch	elements/standard/hashswitch.cc	/^HashSwitch::~HashSwitch()$/;"	f	class:HashSwitch
~HashTable	include/click/hashtable.hh	/^    ~HashTable() {$/;"	f	class:HashTable
~HashTable	include/click/hashtable.hh	/^HashTable<T>::~HashTable()$/;"	f	class:HashTable
~HashTableTest	elements/test/hashtabletest.cc	/^HashTableTest::~HashTableTest()$/;"	f	class:HashTableTest
~HeapTest	elements/test/heaptest.cc	/^HeapTest::~HeapTest()$/;"	f	class:HeapTest
~HopcountMetric	elements/grid/hopcountmetric.cc	/^HopcountMetric::~HopcountMetric()$/;"	f	class:HopcountMetric
~HostEtherFilter	elements/ethernet/hostetherfilter.cc	/^HostEtherFilter::~HostEtherFilter()$/;"	f	class:HostEtherFilter
~Hub	elements/standard/hub.cc	/^Hub::~Hub()$/;"	f	class:Hub
~ICMP6Error	elements/ip6/icmp6error.cc	/^ICMP6Error::~ICMP6Error()$/;"	f	class:ICMP6Error
~ICMPError	elements/icmp/icmperror.cc	/^ICMPError::~ICMPError()$/;"	f	class:ICMPError
~ICMPIPEncap	elements/icmp/icmpipencap.cc	/^ICMPIPEncap::~ICMPIPEncap()$/;"	f	class:ICMPIPEncap
~ICMPPingEncap	elements/icmp/icmppingencap.cc	/^ICMPPingEncap::~ICMPPingEncap()$/;"	f	class:ICMPPingEncap
~ICMPPingResponder	elements/icmp/icmppingresponder.cc	/^ICMPPingResponder::~ICMPPingResponder()$/;"	f	class:ICMPPingResponder
~ICMPPingRewriter	elements/icmp/icmppingrewriter.cc	/^ICMPPingRewriter::~ICMPPingRewriter()$/;"	f	class:ICMPPingRewriter
~ICMPPingSource	elements/icmp/icmpsendpings.cc	/^ICMPPingSource::~ICMPPingSource()$/;"	f	class:ICMPPingSource
~ICMPRewriter	elements/icmp/icmprewriter.cc	/^ICMPRewriter::~ICMPRewriter()$/;"	f	class:ICMPRewriter
~IP6Encap	elements/ip6/ip6encap.cc	/^IP6Encap::~IP6Encap()$/;"	f	class:IP6Encap
~IP6Fragmenter	elements/ip6/ip6fragmenter.cc	/^IP6Fragmenter::~IP6Fragmenter()$/;"	f	class:IP6Fragmenter
~IP6Mirror	elements/ip6/ip6mirror.cc	/^IP6Mirror::~IP6Mirror()$/;"	f	class:IP6Mirror
~IP6NDAdvertiser	elements/ethernet/ip6ndadvertiser.cc	/^IP6NDAdvertiser::~IP6NDAdvertiser()$/;"	f	class:IP6NDAdvertiser
~IP6NDSolicitor	elements/ethernet/ip6ndsolicitor.cc	/^IP6NDSolicitor::~IP6NDSolicitor()$/;"	f	class:IP6NDSolicitor
~IP6Print	elements/ip6/ip6print.cc	/^IP6Print::~IP6Print()$/;"	f	class:IP6Print
~IP6Table	lib/ip6table.cc	/^IP6Table::~IP6Table()$/;"	f	class:IP6Table
~IPAddrPairRewriter	elements/ip/ipaddrpairrewriter.cc	/^IPAddrPairRewriter::~IPAddrPairRewriter()$/;"	f	class:IPAddrPairRewriter
~IPAddrRewriter	elements/ip/ipaddrrewriter.cc	/^IPAddrRewriter::~IPAddrRewriter()$/;"	f	class:IPAddrRewriter
~IPClassifier	elements/ip/ipclassifier.cc	/^IPClassifier::~IPClassifier()$/;"	f	class:IPClassifier
~IPEncap	elements/ip/ipencap.cc	/^IPEncap::~IPEncap()$/;"	f	class:IPEncap
~IPFilter	elements/ip/ipfilter.cc	/^IPFilter::~IPFilter()$/;"	f	class:IPFilter
~IPFlowRawSockets	elements/userlevel/ipflowrawsockets.cc	/^IPFlowRawSockets::~IPFlowRawSockets()$/;"	f	class:IPFlowRawSockets
~IPFragReset	elements/local/FlowNet/scheduler/IPFragReset.cc	/^IPFragReset::~IPFragReset()$/;"	f	class:IPFragReset
~IPFragmenter	elements/ip/ipfragmenter.cc	/^IPFragmenter::~IPFragmenter()$/;"	f	class:IPFragmenter
~IPGWOptions	elements/ip/ipgwoptions.cc	/^IPGWOptions::~IPGWOptions()$/;"	f	class:IPGWOptions
~IPInputCombo	elements/ip/ipinputcombo.cc	/^IPInputCombo::~IPInputCombo()$/;"	f	class:IPInputCombo
~IPMapper	elements/ip/iprewriterbase.hh	/^    virtual ~IPMapper()			{ }$/;"	f	class:IPMapper
~IPMirror	elements/ip/ipmirror.cc	/^IPMirror::~IPMirror()$/;"	f	class:IPMirror
~IPOutputCombo	elements/ip/ipoutputcombo.cc	/^IPOutputCombo::~IPOutputCombo()$/;"	f	class:IPOutputCombo
~IPPrint	elements/ip/ipprint.cc	/^IPPrint::~IPPrint()$/;"	f	class:IPPrint
~IPRateMonitor	elements/ip/ipratemon.cc	/^IPRateMonitor::~IPRateMonitor()$/;"	f	class:IPRateMonitor
~IPReassembler	elements/ip/ipreassembler.cc	/^IPReassembler::~IPReassembler()$/;"	f	class:IPReassembler
~IPRewriter	elements/tcpudp/iprewriter.cc	/^IPRewriter::~IPRewriter()$/;"	f	class:IPRewriter
~IPRewriterBase	elements/ip/iprewriterbase.cc	/^IPRewriterBase::~IPRewriterBase()$/;"	f	class:IPRewriterBase
~IPRewriterHeap	elements/ip/iprewriterbase.hh	/^    ~IPRewriterHeap() {$/;"	f	class:IPRewriterHeap
~IPRewriterPatterns	elements/ip/iprwpatterns.cc	/^IPRewriterPatterns::~IPRewriterPatterns()$/;"	f	class:IPRewriterPatterns
~IPTable	lib/iptable.cc	/^IPTable::~IPTable()$/;"	f	class:IPTable
~IPsecAuthHMACSHA1	elements/ipsec/hmacsha1.cc	/^IPsecAuthHMACSHA1::~IPsecAuthHMACSHA1()$/;"	f	class:IPsecAuthHMACSHA1
~IPsecAuthSHA1	elements/ipsec/sha1.cc	/^IPsecAuthSHA1::~IPsecAuthSHA1()$/;"	f	class:IPsecAuthSHA1
~IPsecESPEncap	elements/ipsec/esp.cc	/^IPsecESPEncap::~IPsecESPEncap()$/;"	f	class:IPsecESPEncap
~IPsecESPUnencap	elements/ipsec/desp.cc	/^IPsecESPUnencap::~IPsecESPUnencap()$/;"	f	class:IPsecESPUnencap
~IPsecEncap	elements/ipsec/ipsecencap.cc	/^IPsecEncap::~IPsecEncap()$/;"	f	class:IPsecEncap
~Idle	elements/standard/idle.cc	/^Idle::~Idle()$/;"	f	class:Idle
~IncrementSeqNo	elements/grid/incseqno.cc	/^IncrementSeqNo::~IncrementSeqNo()$/;"	f	class:IncrementSeqNo
~InfiniteSource	elements/standard/infinitesource.cc	/^InfiniteSource::~InfiniteSource()$/;"	f	class:InfiniteSource
~KernelFilter	elements/userlevel/kernelfilter.cc	/^KernelFilter::~KernelFilter()$/;"	f	class:KernelFilter
~KernelHandlerProxy	elements/userlevel/khandlerproxy.cc	/^KernelHandlerProxy::~KernelHandlerProxy()$/;"	f	class:KernelHandlerProxy
~KernelTun	elements/userlevel/kerneltun.cc	/^KernelTun::~KernelTun()$/;"	f	class:KernelTun
~LIRMetric	elements/grid/lirmetric.cc	/^LIRMetric::~LIRMetric()$/;"	f	class:LIRMetric
~LandmarkSetT	tools/lib/landmarkt.cc	/^LandmarkSetT::~LandmarkSetT()$/;"	f	class:LandmarkSetT
~LandmarkT	tools/lib/landmarkt.hh	/^LandmarkT::~LandmarkT()$/;"	f	class:LandmarkT
~Lexer	lib/lexer.cc	/^Lexer::~Lexer()$/;"	f	class:Lexer
~LexerExtra	include/click/lexer.hh	/^    virtual ~LexerExtra()		{ }$/;"	f	class:LexerExtra
~LexerT	tools/lib/lexert.cc	/^LexerT::~LexerT()$/;"	f	class:LexerT
~LexerTInfo	tools/lib/lexertinfo.hh	/^    virtual ~LexerTInfo()	{ }$/;"	f	class:LexerTInfo
~LinearIPLookup	elements/ip/lineariplookup.cc	/^LinearIPLookup::~LinearIPLookup()$/;"	f	class:LinearIPLookup
~LinkStat	elements/grid/linkstat.cc	/^LinkStat::~LinkStat()$/;"	f	class:LinkStat
~LinkTable	elements/wifi/linktable.cc	/^LinkTable::~LinkTable()$/;"	f	class:LinkTable
~LinkTestReceiver	elements/grid/linktestreceiver.cc	/^LinkTestReceiver::~LinkTestReceiver()$/;"	f	class:LinkTestReceiver
~LinkTester	elements/grid/linktester.cc	/^LinkTester::~LinkTester()$/;"	f	class:LinkTester
~LinkTracker	elements/grid/linktracker.cc	/^LinkTracker::~LinkTracker()$/;"	f	class:LinkTracker
~LinkUnqueue	elements/standard/linkunqueue.cc	/^LinkUnqueue::~LinkUnqueue()$/;"	f	class:LinkUnqueue
~LinuxIPLookup	elements/ip/lookupiproutelinux.cc	/^LinuxIPLookup::~LinuxIPLookup()$/;"	f	class:LinuxIPLookup
~ListTest	elements/test/listtest.cc	/^ListTest::~ListTest()$/;"	f	class:ListTest
~ListenEtherSwitch	elements/etherswitch/listenetherswitch.cc	/^ListenEtherSwitch::~ListenEtherSwitch()$/;"	f	class:ListenEtherSwitch
~LocFromFile	elements/grid/locfromfile.cc	/^LocFromFile::~LocFromFile()$/;"	f	class:LocFromFile
~LocQueryResponder	elements/grid/locqueryresponder.cc	/^LocQueryResponder::~LocQueryResponder()$/;"	f	class:LocQueryResponder
~LocationTable	elements/grid/loctable.cc	/^LocationTable::~LocationTable()$/;"	f	class:LocationTable
~LookupGeographicGridRoute	elements/grid/lookupgeogridroute.cc	/^LookupGeographicGridRoute::~LookupGeographicGridRoute()$/;"	f	class:LookupGeographicGridRoute
~LookupIP6Route	elements/ip6/lookupip6route.cc	/^LookupIP6Route::~LookupIP6Route()$/;"	f	class:LookupIP6Route
~LookupIPRouteMP	elements/ip/lookupiproutemp.cc	/^LookupIPRouteMP::~LookupIPRouteMP()$/;"	f	class:LookupIPRouteMP
~LookupLocalGridRoute	elements/grid/lookuplocalgridroute.cc	/^LookupLocalGridRoute::~LookupLocalGridRoute()$/;"	f	class:LookupLocalGridRoute
~LookupLocalGridRoute2	elements/grid/lookuplocalgridroute2.cc	/^LookupLocalGridRoute2::~LookupLocalGridRoute2()$/;"	f	class:LookupLocalGridRoute2
~MSQueue	elements/standard/msqueue.cc	/^MSQueue::~MSQueue()$/;"	f	class:MSQueue
~MadwifiRate	elements/wifi/madwifirate.cc	/^MadwifiRate::~MadwifiRate()$/;"	f	class:MadwifiRate
~MarkIP6Header	elements/ip6/markip6header.cc	/^MarkIP6Header::~MarkIP6Header()$/;"	f	class:MarkIP6Header
~MarkIPCE	elements/ip/markipce.cc	/^MarkIPCE::~MarkIPCE()$/;"	f	class:MarkIPCE
~MarkIPHeader	elements/ip/markipheader.cc	/^MarkIPHeader::~MarkIPHeader()$/;"	f	class:MarkIPHeader
~MarkMACHeader	elements/standard/markmacheader.cc	/^MarkMACHeader::~MarkMACHeader()$/;"	f	class:MarkMACHeader
~Master	lib/master.cc	/^Master::~Master()$/;"	f	class:Master
~Matcher	tools/click-xform/click-xform.cc	/^Matcher::~Matcher()$/;"	f	class:Matcher
~MessageElement	elements/standard/messageelement.cc	/^MessageElement::~MessageElement()$/;"	f	class:MessageElement
~Meter	elements/standard/meter.cc	/^Meter::~Meter()$/;"	f	class:Meter
~MixedQueue	elements/standard/mixedqueue.cc	/^MixedQueue::~MixedQueue()$/;"	f	class:MixedQueue
~MovementSimulator	elements/grid/movesim.cc	/^MovementSimulator::~MovementSimulator()$/;"	f	class:MovementSimulator
~NameDB	include/click/nameinfo.hh	/^    virtual ~NameDB() {$/;"	f	class:NameDB
~NameInfo	lib/nameinfo.cc	/^NameInfo::~NameInfo()$/;"	f	class:NameInfo
~NeighborhoodTest	elements/test/neighborhoodtest.cc	/^NeighborhoodTest::~NeighborhoodTest()$/;"	f	class:NeighborhoodTest
~Notifier	lib/notifier.cc	/^Notifier::~Notifier()$/;"	f	class:Notifier
~NotifierDebug	elements/test/notifierdebug.cc	/^NotifierDebug::~NotifierDebug()$/;"	f	class:NotifierDebug
~NotifierQueue	elements/standard/notifierqueue.cc	/^NotifierQueue::~NotifierQueue()$/;"	f	class:NotifierQueue
~NotifierSignal	include/click/notifier.hh	/^NotifierSignal::~NotifierSignal()$/;"	f	class:NotifierSignal
~Null1	elements/standard/nulls.hh	/^  ~Null1()				{ }$/;"	f	class:Null1
~Null2	elements/standard/nulls.hh	/^  ~Null2()				{ }$/;"	f	class:Null2
~Null3	elements/standard/nulls.hh	/^  ~Null3()				{ }$/;"	f	class:Null3
~Null4	elements/standard/nulls.hh	/^  ~Null4()				{ }$/;"	f	class:Null4
~Null5	elements/standard/nulls.hh	/^  ~Null5()				{ }$/;"	f	class:Null5
~Null6	elements/standard/nulls.hh	/^  ~Null6()				{ }$/;"	f	class:Null6
~Null7	elements/standard/nulls.hh	/^  ~Null7()				{ }$/;"	f	class:Null7
~Null8	elements/standard/nulls.hh	/^  ~Null8()				{ }$/;"	f	class:Null8
~NullElement	elements/standard/nullelement.cc	/^NullElement::~NullElement()$/;"	f	class:NullElement
~NullTask	elements/test/nulltask.cc	/^NullTask::~NullTask()$/;"	f	class:NullTask
~OpenAuthRequester	elements/wifi/station/openauthrequester.cc	/^OpenAuthRequester::~OpenAuthRequester()$/;"	f	class:OpenAuthRequester
~OpenAuthResponder	elements/wifi/ap/openauthresponder.cc	/^OpenAuthResponder::~OpenAuthResponder()$/;"	f	class:OpenAuthResponder
~PCB	elements/tcpudp/snooptcp.cc	/^SnoopTCP::PCB::~PCB()$/;"	f	class:SnoopTCP::PCB
~PEP	elements/grid/pep.cc	/^PEP::~PEP()$/;"	f	class:PEP
~PFFW	elements/local/FlowNet/common/PF_FW.cc	/^PFFW::~PFFW()$/;"	f	class:PFFW
~PFMpeg2AdaptFW	elements/local/FlowNet/mpeg2/PFMpeg2AdaptFW.cc	/^PFMpeg2AdaptFW::~PFMpeg2AdaptFW() $/;"	f	class:PFMpeg2AdaptFW
~PFSchedFW	elements/local/FlowNet/scheduler/PFSchedFW.hh	/^	~PFSchedFW() {};$/;"	f	class:PFSchedFW
~PFShapeFW	elements/local/FlowNet/shaper/PFShapeFW.cc	/^PFShapeFW::~PFShapeFW()$/;"	f	class:PFShapeFW
~PFSinkFW	elements/local/FlowNet/sink/PFSinkFW.cc	/^PFSinkFW::~PFSinkFW()$/;"	f	class:PFSinkFW
~PI	elements/aqm/pi.cc	/^PI::~PI()$/;"	f	class:PI
~Packet	lib/packet.cc	/^Packet::~Packet()$/;"	f	class:Packet
~PacketEvent	ns/nsclick-test.cc	/^TestClickSimulator::PacketEvent::~PacketEvent() {$/;"	f	class:TestClickSimulator::PacketEvent
~PacketLogger	elements/grid/packetlogger.cc	/^PacketLogger::~PacketLogger()$/;"	f	class:PacketLogger
~PacketLogger2	elements/grid/packetlogger2.cc	/^PacketLogger2::~PacketLogger2()$/;"	f	class:PacketLogger2
~PacketStore	elements/wifi/packetstore.cc	/^PacketStore::~PacketStore()$/;"	f	class:PacketStore
~PacketTest	elements/test/packettest.cc	/^PacketTest::~PacketTest()$/;"	f	class:PacketTest
~Paint	elements/standard/paint.cc	/^Paint::~Paint()$/;"	f	class:Paint
~PaintSwitch	elements/standard/paintswitch.cc	/^PaintSwitch::~PaintSwitch()$/;"	f	class:PaintSwitch
~PaintTee	elements/standard/painttee.cc	/^PaintTee::~PaintTee()$/;"	f	class:PaintTee
~PerfCountAccum	elements/linuxmodule/perfcountaccum.cc	/^PerfCountAccum::~PerfCountAccum()$/;"	f	class:PerfCountAccum
~PerfCountInfo	elements/linuxmodule/perfcountinfo.cc	/^PerfCountInfo::~PerfCountInfo()$/;"	f	class:PerfCountInfo
~PerfCountUser	elements/linuxmodule/perfcountuser.cc	/^PerfCountUser::~PerfCountUser()$/;"	f	class:PerfCountUser
~PingPong	elements/grid/pingpong.cc	/^PingPong::~PingPong()$/;"	f	class:PingPong
~PokeHandlers	elements/standard/pokehandlers.cc	/^PokeHandlers::~PokeHandlers()$/;"	f	class:PokeHandlers
~PollDevice	elements/linuxmodule/polldevice.cc	/^PollDevice::~PollDevice()$/;"	f	class:PollDevice
~PortInfo	elements/standard/portinfo.cc	/^PortInfo::~PortInfo()$/;"	f	class:PortInfo
~PoundRadixIPLookup	elements/ip/poundradixiplookup.cc	/^PoundRadixIPLookup::~PoundRadixIPLookup() {$/;"	f	class:PoundRadixIPLookup
~PrettyRouter	tools/click-pretty/click-pretty.cc	/^    ~PrettyRouter() {$/;"	f	struct:PrettyRouter
~Print	elements/standard/print.cc	/^Print::~Print()$/;"	f	class:Print
~PrintGrid	elements/grid/printgrid.cc	/^PrintGrid::~PrintGrid()$/;"	f	class:PrintGrid
~PrintOld	elements/userlevel/printold.cc	/^PrintOld::~PrintOld()$/;"	f	class:PrintOld
~PrintTXFeedback	elements/wifi/printtxfeedback.cc	/^PrintTXFeedback::~PrintTXFeedback()$/;"	f	class:PrintTXFeedback
~PrintWifi	elements/wifi/printwifi.cc	/^PrintWifi::~PrintWifi()$/;"	f	class:PrintWifi
~PrioSched	elements/standard/priosched.cc	/^PrioSched::~PrioSched()$/;"	f	class:PrioSched
~Prism2Decap	elements/wifi/prism2decap.cc	/^Prism2Decap::~Prism2Decap()$/;"	f	class:Prism2Decap
~Prism2Encap	elements/wifi/prism2encap.cc	/^Prism2Encap::~Prism2Encap()$/;"	f	class:Prism2Encap
~ProbeRequester	elements/wifi/station/proberequester.cc	/^ProbeRequester::~ProbeRequester()$/;"	f	class:ProbeRequester
~ProbeResponder	elements/wifi/ap/proberesponder.cc	/^ProbeResponder::~ProbeResponder()$/;"	f	class:ProbeResponder
~ProbeTXRate	elements/wifi/probetxrate.cc	/^ProbeTXRate::~ProbeTXRate()$/;"	f	class:ProbeTXRate
~ProgressBar	elements/userlevel/progressbar.cc	/^ProgressBar::~ProgressBar()$/;"	f	class:ProgressBar
~ProtocolTranslator46	elements/ip6/protocoltranslator46.cc	/^ProtocolTranslator46::~ProtocolTranslator46()$/;"	f	class:ProtocolTranslator46
~ProtocolTranslator64	elements/ip6/protocoltranslator64.cc	/^ProtocolTranslator64::~ProtocolTranslator64()$/;"	f	class:ProtocolTranslator64
~PullNullElement	elements/standard/nullelement.cc	/^PullNullElement::~PullNullElement()$/;"	f	class:PullNullElement
~PullSwitch	elements/standard/pullswitch.cc	/^PullSwitch::~PullSwitch()$/;"	f	class:PullSwitch
~PullTee	elements/standard/tee.cc	/^PullTee::~PullTee()$/;"	f	class:PullTee
~PushAnno	elements/wifi/pushanno.cc	/^PushAnno::~PushAnno()$/;"	f	class:PushAnno
~PushNullElement	elements/standard/nullelement.cc	/^PushNullElement::~PushNullElement()$/;"	f	class:PushNullElement
~QueueThreadTest1	elements/test/queuethreadtest.cc	/^QueueThreadTest1::~QueueThreadTest1()$/;"	f	class:QueueThreadTest1
~QueueThreadTest2	elements/test/queuethreadtest.cc	/^QueueThreadTest2::~QueueThreadTest2()$/;"	f	class:QueueThreadTest2
~QueueYankTest	elements/test/queueyanktest.cc	/^QueueYankTest::~QueueYankTest()$/;"	f	class:QueueYankTest
~QuickNoteQueue	elements/standard/quicknotequeue.cc	/^QuickNoteQueue::~QuickNoteQueue()$/;"	f	class:QuickNoteQueue
~QuitWatcher	elements/standard/quitwatcher.cc	/^QuitWatcher::~QuitWatcher()$/;"	f	class:QuitWatcher
~RConn	elements/local/OpenFlow/RConn.cc	/^RConn::~RConn()$/;"	f	class:RConn
~RED	elements/aqm/red.cc	/^RED::~RED()$/;"	f	class:RED
~RFC2507c	elements/ip/rfc2507c.cc	/^RFC2507c::~RFC2507c()$/;"	f	class:RFC2507c
~RFC2507d	elements/ip/rfc2507d.cc	/^RFC2507d::~RFC2507d()$/;"	f	class:RFC2507d
~RIPSend	elements/ip/ripsend.cc	/^RIPSend::~RIPSend()$/;"	f	class:RIPSend
~RRSched	elements/standard/rrsched.cc	/^RRSched::~RRSched()$/;"	f	class:RRSched
~RTCycles	elements/linuxmodule/rtcycles.cc	/^RTCycles::~RTCycles()$/;"	f	class:RTCycles
~RXStats	elements/wifi/rxstats.cc	/^RXStats::~RXStats()$/;"	f	class:RXStats
~RadioSim	elements/grid/radiosim.cc	/^RadioSim::~RadioSim()$/;"	f	class:RadioSim
~RadiotapDecap	elements/wifi/radiotapdecap.cc	/^RadiotapDecap::~RadiotapDecap()$/;"	f	class:RadiotapDecap
~RadiotapEncap	elements/wifi/radiotapencap.cc	/^RadiotapEncap::~RadiotapEncap()$/;"	f	class:RadiotapEncap
~Radix	elements/ip/radixiplookup.cc	/^    ~Radix()			{ }$/;"	f	class:RadixIPLookup::Radix	file:
~Radix	elements/ipsec/radixipseclookup.hh	/^    ~Radix()			{ }$/;"	f	class:RadixIPsecLookup::Radix
~RadixIPLookup	elements/ip/radixiplookup.cc	/^RadixIPLookup::~RadixIPLookup()$/;"	f	class:RadixIPLookup
~RadixIPsecLookup	elements/ipsec/radixipseclookup.cc	/^RadixIPsecLookup::~RadixIPsecLookup()$/;"	f	class:RadixIPsecLookup
~RandomBitErrors	elements/standard/randomerror.cc	/^RandomBitErrors::~RandomBitErrors()$/;"	f	class:RandomBitErrors
~RandomSample	elements/standard/randomsample.cc	/^RandomSample::~RandomSample()$/;"	f	class:RandomSample
~RandomSeed	elements/test/randomseed.cc	/^RandomSeed::~RandomSeed()$/;"	f	class:RandomSeed
~RandomSource	elements/standard/randomsource.cc	/^RandomSource::~RandomSource()$/;"	f	class:RandomSource
~RandomSwitch	elements/standard/randomswitch.cc	/^RandomSwitch::~RandomSwitch()$/;"	f	class:RandomSwitch
~RangeIPLookup	elements/ip/rangeiplookup.cc	/^RangeIPLookup::~RangeIPLookup()$/;"	f	class:RangeIPLookup
~RateSettableBandwidthShaper	elements/local/standard/ratesettable_bandwidthshaper.cc	/^RateSettableBandwidthShaper::~RateSettableBandwidthShaper()$/;"	f	class:RateSettableBandwidthShaper
~RatedSource	elements/standard/ratedsource.cc	/^RatedSource::~RatedSource()$/;"	f	class:RatedSource
~RatedSplitter	elements/standard/ratedsplitter.cc	/^RatedSplitter::~RatedSplitter()$/;"	f	class:RatedSplitter
~RatedUnqueue	elements/standard/ratedunqueue.cc	/^RatedUnqueue::~RatedUnqueue()$/;"	f	class:RatedUnqueue
~RawSocket	elements/userlevel/rawsocket.cc	/^RawSocket::~RawSocket()$/;"	f	class:RawSocket
~ReadAnno	elements/wifi/readanno.cc	/^ReadAnno::~ReadAnno()$/;"	f	class:ReadAnno
~ReadWriteLock	include/click/sync.hh	/^ReadWriteLock::~ReadWriteLock()$/;"	f	class:ReadWriteLock
~RoundRobinIPMapper	elements/ip/rripmapper.cc	/^RoundRobinIPMapper::~RoundRobinIPMapper()$/;"	f	class:RoundRobinIPMapper
~RoundRobinSwitch	elements/standard/rrswitch.cc	/^RoundRobinSwitch::~RoundRobinSwitch()$/;"	f	class:RoundRobinSwitch
~Router	lib/router.cc	/^Router::~Router()$/;"	f	class:Router
~RouterT	tools/lib/routert.cc	/^RouterT::~RouterT()$/;"	f	class:RouterT
~RouterThread	lib/routerthread.cc	/^RouterThread::~RouterThread()$/;"	f	class:RouterThread
~RouterVisitor	include/click/routervisitor.hh	/^    virtual ~RouterVisitor() {$/;"	f	class:RouterVisitor
~SATable	elements/ipsec/satable.cc	/^SATable::~SATable()$/;"	f	class:SATable
~SamplePackageElement	etc/samplepackage/sampleelt.cc	/^SamplePackageElement::~SamplePackageElement()$/;"	f	class:SamplePackageElement
~SchedOrderTest	elements/test/schedordertest.cc	/^SchedOrderTest::~SchedOrderTest()$/;"	f	class:SchedOrderTest
~ScheduleInfo	elements/standard/scheduleinfo.cc	/^ScheduleInfo::~ScheduleInfo()$/;"	f	class:ScheduleInfo
~ScheduleLinux	elements/linuxmodule/schedulelinux.cc	/^ScheduleLinux::~ScheduleLinux()$/;"	f	class:ScheduleLinux
~ScheduledEvent	ns/nsclick-test.cc	/^TestClickSimulator::ScheduledEvent::~ScheduledEvent() {$/;"	f	class:TestClickSimulator::ScheduledEvent
~ScopeChain	apps/clicky/src/scopechain.hh	/^    ~ScopeChain() {$/;"	f	class:ScopeChain
~Scramble	elements/radio/scramble.cc	/^Scramble::~Scramble()$/;"	f	class:Scramble
~Script	elements/standard/script.cc	/^Script::~Script()$/;"	f	class:Script
~SelectSet	lib/selectset.cc	/^SelectSet::~SelectSet()$/;"	f	class:SelectSet
~SendGridHello	elements/grid/hello.cc	/^SendGridHello::~SendGridHello()$/;"	f	class:SendGridHello
~SendGridLRHello	elements/grid/lrhello.cc	/^SendGridLRHello::~SendGridLRHello()$/;"	f	class:SendGridLRHello
~SendPattern	elements/radio/sendpattern.cc	/^SendPattern::~SendPattern()$/;"	f	class:SendPattern
~ServicesNameDB	elements/ip/ipnameinfo.cc	/^ServicesNameDB::~ServicesNameDB()$/;"	f	class:__anon323::ServicesNameDB
~SetAnnoByte	elements/standard/setannobyte.cc	/^SetAnnoByte::~SetAnnoByte()$/;"	f	class:SetAnnoByte
~SetCRC32	elements/standard/setcrc32.cc	/^SetCRC32::~SetCRC32()$/;"	f	class:SetCRC32
~SetCycleCount	elements/linuxmodule/setcyclecount.cc	/^SetCycleCount::~SetCycleCount()$/;"	f	class:SetCycleCount
~SetGridChecksum	elements/grid/setgridchecksum.cc	/^SetGridChecksum::~SetGridChecksum()$/;"	f	class:SetGridChecksum
~SetIP6Address	elements/ip6/setip6address.cc	/^SetIP6Address::~SetIP6Address()$/;"	f	class:SetIP6Address
~SetIP6DSCP	elements/ip6/setip6dscp.cc	/^SetIP6DSCP::~SetIP6DSCP()$/;"	f	class:SetIP6DSCP
~SetIPAddress	elements/ip/setipaddress.cc	/^SetIPAddress::~SetIPAddress()$/;"	f	class:SetIPAddress
~SetIPChecksum	elements/ip/setipchecksum.cc	/^SetIPChecksum::~SetIPChecksum()$/;"	f	class:SetIPChecksum
~SetIPDSCP	elements/ip/setipdscp.cc	/^SetIPDSCP::~SetIPDSCP()$/;"	f	class:SetIPDSCP
~SetIPECN	elements/ip/setipecn.cc	/^SetIPECN::~SetIPECN()$/;"	f	class:SetIPECN
~SetPacketType	elements/standard/setpackettype.cc	/^SetPacketType::~SetPacketType()$/;"	f	class:SetPacketType
~SetPerfCount	elements/linuxmodule/setperfcount.cc	/^SetPerfCount::~SetPerfCount()$/;"	f	class:SetPerfCount
~SetRTS	elements/wifi/setrts.cc	/^SetRTS::~SetRTS()$/;"	f	class:SetRTS
~SetRandIPAddress	elements/ip/setrandipaddress.cc	/^SetRandIPAddress::~SetRandIPAddress()$/;"	f	class:SetRandIPAddress
~SetTCPChecksum	elements/tcpudp/settcpchecksum.cc	/^SetTCPChecksum::~SetTCPChecksum()$/;"	f	class:SetTCPChecksum
~SetTXPower	elements/wifi/settxpower.cc	/^SetTXPower::~SetTXPower()$/;"	f	class:SetTXPower
~SetTXRate	elements/wifi/settxrate.cc	/^SetTXRate::~SetTXRate()$/;"	f	class:SetTXRate
~SetTimestamp	elements/standard/settimestamp.cc	/^SetTimestamp::~SetTimestamp()$/;"	f	class:SetTimestamp
~SetTimestampDelta	elements/analysis/settimestampdelta.cc	/^SetTimestampDelta::~SetTimestampDelta()$/;"	f	class:SetTimestampDelta
~SetUDPChecksum	elements/tcpudp/setudpchecksum.cc	/^SetUDPChecksum::~SetUDPChecksum()$/;"	f	class:SetUDPChecksum
~SetVLANAnno	elements/ethernet/setvlananno.cc	/^SetVLANAnno::~SetVLANAnno()$/;"	f	class:SetVLANAnno
~Shaper	elements/standard/shaper.cc	/^Shaper::~Shaper()$/;"	f	class:Shaper
~SimEvent	ns/nsclick-test.cc	/^Simulator::SimEvent::~SimEvent() {}$/;"	f	class:Simulator::SimEvent
~SimPacketAnalyzer	elements/ns/simpacketanalyzer.cc	/^SimPacketAnalyzer::~SimPacketAnalyzer()$/;"	f	class:SimPacketAnalyzer
~SimpleIdle	elements/simple/simpleidle.cc	/^SimpleIdle::~SimpleIdle()$/;"	f	class:SimpleIdle
~SimpleLocQuerier	elements/grid/simplelocquerier.cc	/^SimpleLocQuerier::~SimpleLocQuerier()$/;"	f	class:SimpleLocQuerier
~SimplePrioSched	elements/simple/simplepriosched.cc	/^SimplePrioSched::~SimplePrioSched()$/;"	f	class:SimplePrioSched
~SimplePullSwitch	elements/simple/simplepullswitch.cc	/^SimplePullSwitch::~SimplePullSwitch()$/;"	f	class:SimplePullSwitch
~SimpleQueue	elements/standard/simplequeue.cc	/^SimpleQueue::~SimpleQueue()$/;"	f	class:SimpleQueue
~SimpleRRSched	elements/simple/simplerrsched.cc	/^SimpleRRSched::~SimpleRRSched()$/;"	f	class:SimpleRRSched
~SimpleSpinlock	include/click/sync.hh	/^SimpleSpinlock::~SimpleSpinlock()$/;"	f	class:SimpleSpinlock
~Simulator	ns/nsclick-test.cc	/^Simulator::~Simulator() {$/;"	f	class:Simulator
~Slot	include/click/args.hh	/^	virtual ~Slot() {$/;"	f	struct:Args::Slot
~SnoopTCP	elements/tcpudp/snooptcp.cc	/^SnoopTCP::~SnoopTCP()$/;"	f	class:SnoopTCP
~Socket	elements/userlevel/socket.cc	/^Socket::~Socket()$/;"	f	class:Socket
~SortTest	elements/test/sorttest.cc	/^SortTest::~SortTest()$/;"	f	class:SortTest
~SortedIPLookup	elements/ip/sortediplookup.cc	/^SortedIPLookup::~SortedIPLookup()$/;"	f	class:SortedIPLookup
~SourceIPHashMapper	elements/ip/siphmapper.cc	/^SourceIPHashMapper::~SourceIPHashMapper()$/;"	f	class:SourceIPHashMapper
~Spinlock	include/click/sync.hh	/^Spinlock::~Spinlock()$/;"	f	class:Spinlock
~SpinlockAcquire	elements/threads/spinlockacquire.hh	/^    ~SpinlockAcquire()			{}$/;"	f	class:SpinlockAcquire
~SpinlockInfo	elements/threads/spinlockinfo.cc	/^SpinlockInfo::~SpinlockInfo()$/;"	f	class:SpinlockInfo
~SpinlockRelease	elements/threads/spinlockrelease.hh	/^    ~SpinlockRelease()			{}$/;"	f	class:SpinlockRelease
~StatelessTCPResponder	elements/tcpudp/statelesstcpresp.hh	/^    ~StatelessTCPResponder()		{ }$/;"	f	class:StatelessTCPResponder
~StaticIPLookup	elements/ip/lookupiproute.cc	/^StaticIPLookup::~StaticIPLookup()$/;"	f	class:StaticIPLookup
~StaticPullSwitch	elements/standard/staticpullswitch.cc	/^StaticPullSwitch::~StaticPullSwitch()$/;"	f	class:StaticPullSwitch
~StaticSwitch	elements/standard/staticswitch.cc	/^StaticSwitch::~StaticSwitch()$/;"	f	class:StaticSwitch
~StaticThreadSched	elements/threads/staticthreadsched.cc	/^StaticThreadSched::~StaticThreadSched()$/;"	f	class:StaticThreadSched
~StationTable	elements/wifi/ap/stationtable.cc	/^StationTable::~StationTable()$/;"	f	class:StationTable
~Stats	elements/ip/ipratemon.cc	/^IPRateMonitor::Stats::~Stats()$/;"	f	class:IPRateMonitor::Stats
~StoreData	elements/standard/storedata.cc	/^StoreData::~StoreData()$/;"	f	class:StoreData
~StoreEtherAddress	elements/ethernet/storeetheraddress.cc	/^StoreEtherAddress::~StoreEtherAddress()$/;"	f	class:StoreEtherAddress
~StoreIPAddress	elements/ip/storeipaddress.cc	/^StoreIPAddress::~StoreIPAddress()$/;"	f	class:StoreIPAddress
~StoreTimestamp	elements/analysis/storetimestamp.cc	/^StoreTimestamp::~StoreTimestamp()$/;"	f	class:StoreTimestamp
~StrideSched	elements/standard/stridesched.cc	/^StrideSched::~StrideSched()$/;"	f	class:StrideSched
~StrideSwitch	elements/standard/strideswitch.cc	/^StrideSwitch::~StrideSwitch()$/;"	f	class:StrideSwitch
~String	include/click/string.hh	/^    inline ~String() {$/;"	f	class:String
~StringAccum	include/click/straccum.hh	/^    ~StringAccum() {$/;"	f	class:StringAccum
~Strip	elements/standard/strip.cc	/^Strip::~Strip()$/;"	f	class:Strip
~StripDSRHeader	elements/grid/stripdsrheader.cc	/^StripDSRHeader::~StripDSRHeader()$/;"	f	class:StripDSRHeader
~StripEtherVLANHeader	elements/ethernet/stripethervlanheader.cc	/^StripEtherVLANHeader::~StripEtherVLANHeader()$/;"	f	class:StripEtherVLANHeader
~StripIPHeader	elements/ip/stripipheader.cc	/^StripIPHeader::~StripIPHeader()$/;"	f	class:StripIPHeader
~StripToNetworkHeader	elements/standard/striptonet.cc	/^StripToNetworkHeader::~StripToNetworkHeader()$/;"	f	class:StripToNetworkHeader
~Suppressor	elements/standard/suppressor.cc	/^Suppressor::~Suppressor()$/;"	f	class:Suppressor
~Switch	elements/standard/switch.cc	/^Switch::~Switch()$/;"	f	class:Switch
~TCPFragmenter	elements/tcpudp/tcpfragmenter.cc	/^TCPFragmenter::~TCPFragmenter()$/;"	f	class:TCPFragmenter
~TCPIPSend	elements/tcpudp/tcpipsend.cc	/^TCPIPSend::~TCPIPSend()$/;"	f	class:TCPIPSend
~TCPRewriter	elements/tcpudp/tcprewriter.cc	/^TCPRewriter::~TCPRewriter()$/;"	f	class:TCPRewriter
~Table	elements/ip/directiplookup.hh	/^	~Table() {$/;"	f	struct:DirectIPLookup::Table
~Task	lib/task.cc	/^Task::~Task()$/;"	f	class:Task
~Tee	elements/standard/tee.cc	/^Tee::~Tee()$/;"	f	class:Tee
~TestClickSimulator	ns/nsclick-test.cc	/^TestClickSimulator::~TestClickSimulator() {$/;"	f	class:TestClickSimulator
~ThreadMonitor	elements/linuxmodule/threadmonitor.cc	/^ThreadMonitor::~ThreadMonitor()$/;"	f	class:ThreadMonitor
~ThreadSafeQueue	elements/standard/threadsafequeue.cc	/^ThreadSafeQueue::~ThreadSafeQueue()$/;"	f	class:ThreadSafeQueue
~ThreadSched	include/click/standard/threadsched.hh	/^    virtual ~ThreadSched()		{ }$/;"	f	class:ThreadSched
~ThresholdMetric	elements/grid/threshmetric.cc	/^ThresholdMetric::~ThresholdMetric()$/;"	f	class:ThresholdMetric
~TimeFilter	elements/analysis/timefilter.cc	/^TimeFilter::~TimeFilter()$/;"	f	class:TimeFilter
~TimeRange	elements/analysis/timerange.cc	/^TimeRange::~TimeRange()$/;"	f	class:TimeRange
~TimeSortedSched	elements/analysis/timesortedsched.cc	/^TimeSortedSched::~TimeSortedSched()$/;"	f	class:TimeSortedSched
~TimedSink	elements/standard/timedsink.cc	/^TimedSink::~TimedSink()$/;"	f	class:TimedSink
~TimedSource	elements/standard/timedsource.cc	/^TimedSource::~TimedSource()$/;"	f	class:TimedSource
~TimedUnqueue	elements/standard/timedunqueue.cc	/^TimedUnqueue::~TimedUnqueue()$/;"	f	class:TimedUnqueue
~Timer	include/click/timer.hh	/^    inline ~Timer() {$/;"	f	class:Timer
~TimerTest	elements/test/timertest.cc	/^TimerTest::~TimerTest()$/;"	f	class:TimerTest
~TimestampAccum	elements/analysis/timestampaccum.cc	/^TimestampAccum::~TimestampAccum()$/;"	f	class:TimestampAccum
~ToDevice	elements/bsdmodule/todevice.cc	/^ToDevice::~ToDevice()$/;"	f	class:ToDevice
~ToDevice	elements/linuxmodule/todevice.cc	/^ToDevice::~ToDevice()$/;"	f	class:ToDevice
~ToDevice	elements/userlevel/todevice.cc	/^ToDevice::~ToDevice()$/;"	f	class:ToDevice
~ToDump	elements/userlevel/todump.cc	/^ToDump::~ToDump()$/;"	f	class:ToDump
~ToHost	elements/bsdmodule/tohost.cc	/^ToHost::~ToHost()$/;"	f	class:ToHost
~ToHost	elements/linuxmodule/tohost.cc	/^ToHost::~ToHost()$/;"	f	class:ToHost
~ToHost	elements/userlevel/tohost.cc	/^ToHost::~ToHost()$/;"	f	class:ToHost
~ToHostSniffers	elements/bsdmodule/tohostsniffers.cc	/^ToHostSniffers::~ToHostSniffers()$/;"	f	class:ToHostSniffers
~ToHostSniffers	elements/linuxmodule/tohostsniffers.cc	/^ToHostSniffers::~ToHostSniffers()$/;"	f	class:ToHostSniffers
~ToIPFlowDumps	elements/analysis/toipflowdumps.cc	/^ToIPFlowDumps::~ToIPFlowDumps()$/;"	f	class:ToIPFlowDumps
~ToIPSummaryDump	elements/analysis/toipsumdump.cc	/^ToIPSummaryDump::~ToIPSummaryDump()$/;"	f	class:ToIPSummaryDump
~ToRawSocket	elements/userlevel/torawsocket.cc	/^ToRawSocket::~ToRawSocket()$/;"	f	class:ToRawSocket
~ToSimDevice	elements/ns/tosimdevice.cc	/^ToSimDevice::~ToSimDevice()$/;"	f	class:ToSimDevice
~ToSimTrace	elements/ns/tosimtrace.cc	/^ToSimTrace::~ToSimTrace()$/;"	f	class:ToSimTrace
~ToSocket	elements/userlevel/tosocket.cc	/^ToSocket::~ToSocket()$/;"	f	class:ToSocket
~ToUserDevice	elements/linuxmodule/touserdevice.cc	/^ToUserDevice::~ToUserDevice()$/;"	f	class:ToUserDevice
~TokenBucketTest	elements/test/tokenbuckettest.cc	/^TokenBucketTest::~TokenBucketTest()$/;"	f	class:TokenBucketTest
~Truncate	elements/standard/truncate.cc	/^Truncate::~Truncate()$/;"	f	class:Truncate
~TruncateIPPayload	elements/ip/truncateippayload.cc	/^TruncateIPPayload::~TruncateIPPayload()$/;"	f	class:TruncateIPPayload
~UDPIP6Encap	elements/tcpudp/udpip6encap.cc	/^UDPIP6Encap::~UDPIP6Encap()$/;"	f	class:UDPIP6Encap
~UDPIPEncap	elements/tcpudp/udpipencap.cc	/^UDPIPEncap::~UDPIPEncap()$/;"	f	class:UDPIPEncap
~UDPRewriter	elements/tcpudp/udprewriter.cc	/^UDPRewriter::~UDPRewriter()$/;"	f	class:UDPRewriter
~UMLSwitch	elements/userlevel/umlswitch.hh	/^  ~UMLSwitch() {};$/;"	f	class:UMLSwitch
~Unqueue	elements/standard/unqueue.cc	/^Unqueue::~Unqueue()$/;"	f	class:Unqueue
~Unqueue2	elements/standard/unqueue2.cc	/^Unqueue2::~Unqueue2()$/;"	f	class:Unqueue2
~Unstrip	elements/standard/unstrip.cc	/^Unstrip::~Unstrip()$/;"	f	class:Unstrip
~UnstripDSRHeader	elements/grid/unstripdsrheader.cc	/^UnstripDSRHeader::~UnstripDSRHeader()$/;"	f	class:UnstripDSRHeader
~UnstripIPHeader	elements/ip/unstripipheader.cc	/^UnstripIPHeader::~UnstripIPHeader()$/;"	f	class:UnstripIPHeader
~UpdateGridRoutes	elements/grid/updateroutes.cc	/^UpdateGridRoutes::~UpdateGridRoutes()$/;"	f	class:UpdateGridRoutes
~UpstreamNotifier	elements/test/upstreamnotifier.cc	/^UpstreamNotifier::~UpstreamNotifier()$/;"	f	class:UpstreamNotifier
~VLANDecap	elements/ethernet/vlandecap.cc	/^VLANDecap::~VLANDecap()$/;"	f	class:VLANDecap
~VLANEncap	elements/ethernet/vlanencap.cc	/^VLANEncap::~VLANEncap()$/;"	f	class:VLANEncap
~VariableExpander	include/click/variableenv.hh	/^    virtual ~VariableExpander()		{ }$/;"	f	class:VariableExpander
~Vc5TupleClassify	elements/local/FlowNet/libclassify/Classify5Tuple.cc	/^Vc5TupleClassify::~Vc5TupleClassify() $/;"	f	class:Vc5TupleClassify
~VcBWShape	elements/local/FlowNet/common/BWShape.cc	/^VcBWShape::~VcBWShape()$/;"	f	class:VcBWShape
~VcBWShapeByCD	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD.cc	/^VcBWShapeByCD::~VcBWShapeByCD()$/;"	f	class:VcBWShapeByCD
~VcBWShapeByCD_CFB	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeByCD_CFB.cc	/^VcBWShapeByCD_CFB::~VcBWShapeByCD_CFB()$/;"	f	class:VcBWShapeByCD_CFB
~VcBWShapeNULL	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeNULL.cc	/^VcBWShapeNULL::~VcBWShapeNULL()$/;"	f	class:VcBWShapeNULL
~VcBWShapeSimple	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeSimple.cc	/^VcBWShapeSimple::~VcBWShapeSimple()$/;"	f	class:VcBWShapeSimple
~VcBWShapeStaticMpeg2	elements/local/FlowNet/shaper/shaper_algorithms/BWShapeStaticMpeg2.cc	/^VcBWShapeStaticMpeg2::~VcBWShapeStaticMpeg2()$/;"	f	class:VcBWShapeStaticMpeg2
~VcCDCORE	elements/local/FlowNet/scheduler/CD_algorithms/CD_CORE.cc	/^VcCDCORE::~VcCDCORE()$/;"	f	class:VcCDCORE
~VcCDQueueLoss	elements/local/FlowNet/scheduler/CD_algorithms/CD_QueueLoss.cc	/^VcCDQueueLoss::~VcCDQueueLoss()$/;"	f	class:VcCDQueueLoss
~VcCDThreshold	elements/local/FlowNet/scheduler/CD_algorithms/CD_Threshold.cc	/^VcCDThreshold::~VcCDThreshold()$/;"	f	class:VcCDThreshold
~VcCongestionDetection	elements/local/FlowNet/common/CongestionDetection.hh	/^        ~VcCongestionDetection() {};$/;"	f	class:VcCongestionDetection
~VcFlowClassify	elements/local/FlowNet/common/FlowClassify.hh	/^	~VcFlowClassify() {};$/;"	f	class:VcFlowClassify
~VcNoClassify	elements/local/FlowNet/libclassify/ClassifyNoClassify.cc	/^VcNoClassify::~VcNoClassify()$/;"	f	class:VcNoClassify
~VcSchedule	elements/local/FlowNet/common/Schedule.hh	/^        ~VcSchedule() {};$/;"	f	class:VcSchedule
~VcScheduleBackpressure	elements/local/FlowNet/scheduler/sched_algorithms/SchedBackpressure.cc	/^VcScheduleBackpressure::~VcScheduleBackpressure()$/;"	f	class:VcScheduleBackpressure
~VcScheduleHorizon	elements/local/FlowNet/scheduler/sched_algorithms/SchedHorizon.cc	/^VcScheduleHorizon::~VcScheduleHorizon()$/;"	f	class:VcScheduleHorizon
~VcScheduleLogWeight	elements/local/FlowNet/scheduler/sched_algorithms/SchedLogWeight.cc	/^VcScheduleLogWeight::~VcScheduleLogWeight()$/;"	f	class:VcScheduleLogWeight
~VcScheduleNoSchedule	elements/local/FlowNet/scheduler/sched_algorithms/SchedNoSchedule.cc	/^VcScheduleNoSchedule::~VcScheduleNoSchedule()$/;"	f	class:VcScheduleNoSchedule
~VcScheduleOuter	elements/local/FlowNet/common/ScheduleOuter.hh	/^        ~VcScheduleOuter() {};$/;"	f	class:VcScheduleOuter
~VcScheduleOuterNoSchedule	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterNoSchedule.cc	/^VcScheduleOuterNoSchedule::~VcScheduleOuterNoSchedule()$/;"	f	class:VcScheduleOuterNoSchedule
~VcScheduleOuterVirtualpressure	elements/local/FlowNet/scheduler/sched_outer_algorithms/SchedOuterVirtualpressure.cc	/^VcScheduleOuterVirtualpressure::~VcScheduleOuterVirtualpressure()$/;"	f	class:VcScheduleOuterVirtualpressure
~VcScheduleWBS	elements/local/FlowNet/scheduler/sched_algorithms/SchedWBS.cc	/^VcScheduleWBS::~VcScheduleWBS()$/;"	f	class:VcScheduleWBS
~VcTable	elements/local/FlowNet/common/Table.hh	/^	~VcTable() {};$/;"	f	class:VcTable
~VcTableLinear	elements/local/FlowNet/libtable/TableLinear.hh	/^VcTableLinear<T>::~VcTableLinear()$/;"	f	class:VcTableLinear
~Vector	include/click/vector.cc	/^Vector<T>::~Vector()$/;"	f	class:Vector
~Vector	include/click/vector.hh	/^    ~Vector()				{ }$/;"	f	class:Vector
~Vector	lib/vectorv.cc	/^Vector<void*>::~Vector()$/;"	f	class:Vector
~VectorTest	elements/test/vectortest.cc	/^VectorTest::~VectorTest()$/;"	f	class:VectorTest
~WBSEtherFilter	elements/local/FlowNet/scheduler/WBSEtherFilter.cc	/^WBSEtherFilter::~WBSEtherFilter()$/;"	f	class:WBSEtherFilter
~WepDecap	elements/wifi/wepdecap.cc	/^WepDecap::~WepDecap()$/;"	f	class:WepDecap
~WepEncap	elements/wifi/wepencap.cc	/^WepEncap::~WepEncap()$/;"	f	class:WepEncap
~WifiDecap	elements/wifi/wifidecap.cc	/^WifiDecap::~WifiDecap()$/;"	f	class:WifiDecap
~WifiDefrag	elements/wifi/wifidefrag.cc	/^WifiDefrag::~WifiDefrag()$/;"	f	class:WifiDefrag
~WifiDupeFilter	elements/wifi/wifidupefilter.cc	/^WifiDupeFilter::~WifiDupeFilter()$/;"	f	class:WifiDupeFilter
~WifiEncap	elements/wifi/wifiencap.cc	/^WifiEncap::~WifiEncap()$/;"	f	class:WifiEncap
~WifiFragment	elements/wifi/wififragment.cc	/^WifiFragment::~WifiFragment()$/;"	f	class:WifiFragment
~WifiSeq	elements/wifi/wifiseq.cc	/^WifiSeq::~WifiSeq()$/;"	f	class:WifiSeq
~WirelessInfo	elements/wifi/wirelessinfo.cc	/^WirelessInfo::~WirelessInfo()$/;"	f	class:WirelessInfo
~WritablePacket	include/click/packet.hh	/^    ~WritablePacket() { }$/;"	f	class:WritablePacket
~YarvisMetric	elements/grid/yarvismetric.cc	/^YarvisMetric::~YarvisMetric()$/;"	f	class:YarvisMetric
~cdiagram	apps/clicky/src/wdiagram.cc	/^cdiagram::~cdiagram()$/;"	f	class:clicky::cdiagram
~cdriver	apps/clicky/src/cdriver.hh	/^    virtual ~cdriver() { }$/;"	f	class:clicky::cdriver
~chash_t	elements/ip/siphmapper.hh	/^  ~chash_t ()$/;"	f	class:chash_t
~crouter	apps/clicky/src/crouter.cc	/^crouter::~crouter()$/;"	f	class:clicky::crouter
~csocket_cdriver	apps/clicky/src/cdriver.cc	/^csocket_cdriver::~csocket_cdriver()$/;"	f	class:clicky::csocket_cdriver
~dactivity_decor	apps/clicky/src/ddecor.cc	/^dactivity_decor::~dactivity_decor()$/;"	f	class:clicky::dactivity_decor
~dcss_property	apps/clicky/src/dstyle.hh	/^    ~dcss_property() {$/;"	f	struct:clicky::dcss_property
~dcss_set	apps/clicky/src/dstyle.cc	/^dcss_set::~dcss_set()$/;"	f	class:clicky::dcss_set
~ddecor	apps/clicky/src/ddecor.hh	/^    virtual ~ddecor() {$/;"	f	class:clicky::ddecor
~delt	apps/clicky/src/dwidget.cc	/^delt::~delt()$/;"	f	class:clicky::delt
~enable_ref_ptr	apps/clicky/src/ref.hh	/^    ~enable_ref_ptr() {$/;"	f	class:enable_ref_ptr
~handler_value	apps/clicky/src/hvalues.hh	/^    ~handler_value() {$/;"	f	class:clicky::handler_value
~jvtree_t	elements/ip/siphmapper.hh	/^  ~jvtree_t () { delete [] tree; }$/;"	f	class:jvtree_t
~papmo	elements/local/FlowNet/papmo/PaPMo.cc	/^papmo::~papmo()$/;"	f	class:papmo
~reachable_match_t	apps/clicky/src/crouter.cc	/^crouter::reachable_match_t::~reachable_match_t()$/;"	f	class:clicky::crouter::reachable_match_t
~ref_ptr	apps/clicky/src/ref.hh	/^    ~ref_ptr() {$/;"	f	class:ref_ptr
~throb_after	apps/clicky/src/crouter.cc	/^crouter::throb_after::~throb_after()$/;"	f	class:clicky::crouter::throb_after
~tmain	apps/clicky/src/tmain.cc	/^tmain::~tmain()$/;"	f	class:clicky::tmain
~wdiagram	apps/clicky/src/wdiagram.cc	/^wdiagram::~wdiagram()$/;"	f	class:clicky::wdiagram
~whandler	apps/clicky/src/whandler.cc	/^whandler::~whandler()$/;"	f	class:clicky::whandler
~wmain	apps/clicky/src/wmain.cc	/^wmain::~wmain()$/;"	f	class:clicky::wmain
